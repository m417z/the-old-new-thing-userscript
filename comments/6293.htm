<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (17)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-1016983">
				<div id="div-comment-1016983" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Justin</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20121019-00/?p=6293#comment-1016983">
			October 19, 2012 at 7:19 am</a>		</div>

		<p>The size of WINDOWPOS would be incorrect if one process was 32-bit and the other was 64-bit. &nbsp;I would this this by sending a different structure that only contained the x, y, cx, cy and flags fields.</p>
<p>If I wanted to pass information back then I&#39;d probably send another window message back to the first window (which you know from the wParam of the WM_COPYDATA message), although you would have to use a PostMessage instead of SendMessage to avoid deadlocks.</p>
<div class="post">[<i>No deadlock here, because a thread can process inbound sent messages while waiting for an outgoing sent message to complete. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-wndsks odd alt thread-odd thread-alt depth-1" id="comment-1016993">
				<div id="div-comment-1016993" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/skSdnW' rel='external nofollow' class='url'>skSdnW</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20121019-00/?p=6293#comment-1016993">
			October 19, 2012 at 7:24 am</a>		</div>

		<p>You can of course send a WM_COPYDATA back to the &quot;client&quot; if you need to return data but if you need to send a lot of these messages it might be better to use SHAllocShared or some other shared memory map implementation&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1017003">
				<div id="div-comment-1017003" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blogs.msdn.com/johnstonj_4000_inn_2D00_soft.com/ProfileUrlRedirect.ashx' rel='external nofollow' class='url'>johnstonj@inn-soft.com</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20121019-00/?p=6293#comment-1017003">
			October 19, 2012 at 7:54 am</a>		</div>

		<p>&quot;No deadlock here, because a thread can process inbound sent messages while waiting for an outgoing sent message to complete. -Raymond&quot;</p>
<p>I don&#39;t get it. &nbsp;If both threads/processes are using SendMessage to call each other, wouldn&#39;t they be in a state of deadlock?</p>
<p>1. &nbsp;Process A calls SendMessage to send to Process B, and waits for process B&#39;s window procedure to return.</p>
<p>2. &nbsp;Process B&#39;s window procedure is now called, and calls SendMessage to send to process A. &nbsp;Now process B waits for process A to process that message.</p>
<p>3. &nbsp;Process A will never process message sent by process B because it&#39;s still waiting for B&#39;s window procedure to return.</p>
<p>There are other message functions that seem much more appropriate in this situation.</p>
<div class="post">[<i>In step 3, process A is woken up &quot;because a thread can process inbound sent messages while waiting for an outgoing sent message to complete.&quot; -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1017033">
				<div id="div-comment-1017033" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">meh</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20121019-00/?p=6293#comment-1017033">
			October 19, 2012 at 8:29 am</a>		</div>

		<p>@JamesJohnston <a rel="nofollow" target="_new" href="http://blogs.msdn.com/b/oldnewthing/archive/2004/06/08/150929.aspx" rel="nofollow">blogs.msdn.com/&#8230;/150929.aspx</a></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1017043">
				<div id="div-comment-1017043" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">AsmGuru62</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20121019-00/?p=6293#comment-1017043">
			October 19, 2012 at 9:28 am</a>		</div>

		<p>WM_COPYDATA is also fast.</p>
<p>I was writing a logger process and was surprised that it would log thousands of log string</p>
<p>per second &#8212; each send with WM_COPYDATA from another process.</p>
<p>Impressive!</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1017053">
				<div id="div-comment-1017053" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Mason Wheeler</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20121019-00/?p=6293#comment-1017053">
			October 19, 2012 at 9:43 am</a>		</div>

		<p>@AsmGuru62: Yeah, copying a contiguous block of data from one memory location to another is very fast, especially if you know what CPU you&#39;re using and you can use that to tune the code to use the SIMD registers.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1017073">
				<div id="div-comment-1017073" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Gabe</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20121019-00/?p=6293#comment-1017073">
			October 19, 2012 at 10:17 am</a>		</div>

		<p>Does anybody know when WM_COPYDATA was created? Obviously it had to exist for Win32 to work (because different windows could have different address spaces), but it&#39;s not clear that there was a use for it in 16-bit Windows.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1017093">
				<div id="div-comment-1017093" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ken Hagan</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20121019-00/?p=6293#comment-1017093">
			October 19, 2012 at 12:46 pm</a>		</div>

		<p>@Gabe: I remember noticing it in the pre-release docs for Win32 and I remember thinking it was new. As you say, Win16 doesn&#39;t need it and Win32 almost certainly does.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1017023">
				<div id="div-comment-1017023" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20121019-00/?p=6293#comment-1017023">
			October 19, 2012 at 8:10 am</a>		</div>

		<p>Well that&#39;s a lot cleaner than XxxxProcessmemory. And it handles 32/64 bit correctly if your structs are defined sanely* (system structs often aren&#39;t).</p>
<p>*local definition is suitable for use in binary file formats.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1017103">
				<div id="div-comment-1017103" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Neil</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20121019-00/?p=6293#comment-1017103">
			October 20, 2012 at 3:30 am</a>		</div>

		<p>@Gabe: Of course, there&#39;s nothing to stop you from sending a 0x004A message in 16-bit Windows and passing an hWnd in wParam and a COPYDATASTRUCT in lParam ;-)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1017123">
				<div id="div-comment-1017123" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Danny</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20121019-00/?p=6293#comment-1017123">
			October 20, 2012 at 9:49 pm</a>		</div>

		<p>Hooray for WM_COPYDATA, I use it since..forever and never failed me. I disagree Ray, is not &quot;poor-man&#39;s marshaler&quot; but is the smart man&#39;s marshaler, KISS!</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1017143">
				<div id="div-comment-1017143" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20121019-00/?p=6293#comment-1017143">
			October 21, 2012 at 12:44 pm</a>		</div>

		<p>I must concur with Danny, especially considering how dangerous COM is to your tech support resources due to loading broken DLLs into your process (not MS DLLs).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1017153">
				<div id="div-comment-1017153" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blogs.msdn.com/virtual8086_4000_gmail.com/ProfileUrlRedirect.ashx' rel='external nofollow' class='url'>virtual8086@gmail.com</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20121019-00/?p=6293#comment-1017153">
			October 21, 2012 at 1:08 pm</a>		</div>

		<p>I&#39;ve been recently working on a project, where we needed to pass/share information between/with application instances running within different terminal sessions. The only way we finally found was to use UDP-sockets: the data amount was small enough not to exceed UDP packet size.</p>
<p>Is this method OK? Is there anything more suitable?</p>
<p>The whole task was the following: all application instances share a single list of items; if UserA in terminal session A adds/deletes an item to/from the list, UserB in terminal session B should see the changes as soon as possible.</p>
<p>Thank you.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1017163">
				<div id="div-comment-1017163" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20121019-00/?p=6293#comment-1017163">
			October 21, 2012 at 5:48 pm</a>		</div>

		<p>@Virtual8086: See global named pipes. But yeah, I&#39;ve found the UDP datagrams to localhost to be far more reliable to get working. Named pipes seems to have some odd resource allocation glitches that appear to be residue of an older era.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1017183">
				<div id="div-comment-1017183" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blogs.msdn.com/virtual8086_4000_gmail.com/ProfileUrlRedirect.ashx' rel='external nofollow' class='url'>virtual8086@gmail.com</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20121019-00/?p=6293#comment-1017183">
			October 21, 2012 at 10:13 pm</a>		</div>

		<p>@Joshua: pipes were also not suitable, because we had to send data to multiple application instances (3 and more) while pipes are somewhat like TCP-sockets allowing only 2 sides to be connected.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1017193">
				<div id="div-comment-1017193" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Neil</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20121019-00/?p=6293#comment-1017193">
			October 22, 2012 at 3:29 am</a>		</div>

		<p>@Gabe I checked out an old copy of Visual C++ 1.5 and it didn&#39;t seem to know about WM_COPYDATA, but it turns out that by comparison I also have a 16-year-old copy of the Platform SDK .HLP (!) file which did know about WM_COPYDATA and claims that Win32s supports it.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1017653">
				<div id="div-comment-1017653" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blogs.msdn.com/johnstonj_4000_inn_2D00_soft.com/ProfileUrlRedirect.ashx' rel='external nofollow' class='url'>johnstonj@inn-soft.com</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20121019-00/?p=6293#comment-1017653">
			October 24, 2012 at 7:28 am</a>		</div>

		<p>OK&#8230; now I just learned about some re-entrancy implications that I hadn&#39;t really thought about before! &nbsp;Ouch.</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>