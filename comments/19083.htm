<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (48)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-710263">
				<div id="div-comment-710263" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">John</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090220-00/?p=19083#comment-710263">
			February 20, 2009 at 11:27 am</a>		</div>

		<p>Unfortunately for you, everything is not right with the world and you will be driven insane by all the backward compatibility hack shims you will have to write. &nbsp;But at least Lotus 1-2-3 2.0 will still run on Windows 2048.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-710273">
				<div id="div-comment-710273" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Brian</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090220-00/?p=19083#comment-710273">
			February 20, 2009 at 11:30 am</a>		</div>

		<p>We, unfortunately, have a very legitimate reason to steal foreground activation. &nbsp;We have an app that launches full screen. &nbsp;What we noticed is that a lot of our users have a tendency to triple-click the icon on the desktop, thereby launching the app then giving focus back to the desktop.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-710293">
				<div id="div-comment-710293" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">someone</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090220-00/?p=19083#comment-710293">
			February 20, 2009 at 1:53 pm</a>		</div>

		<p>@Brian</p>
<p>The behavior of explorer you mention does not &nbsp;seem intuitive. On the other hand, it&#8217;s entirely possible that the user is triple clicking on purpose: Imagine, for some reason, the app takes a while to load, and in that time, the user decides to reorganize the desktop icons. In that case, if you bring your app to the foreground, you&#8217;re stealing the focus. Probably it is better to leave this decision (and possible enhancements) to explorer.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-710313">
				<div id="div-comment-710313" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Nick</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090220-00/?p=19083#comment-710313">
			February 20, 2009 at 2:35 pm</a>		</div>

		<p>Uh, Raymond, I just checked and I couldn&#8217;t find any definitions for WHO_THE_HELL_ARE_YOU. &nbsp;Admittedly that probably would be too cool to actually have in Windows. Maybe I need my own set of headers:</p>
<p>if (AllowSetForegroundWindow(pid) != WHO_THE_HELL_ARE_YOU)</p>
<p>&nbsp;SetForegroundWindow(hwnd);</p>
<p>@John</p>
<p>Forget Lotus, my metric of failure is Visicalc. When that stops working then Windows will be dead to me. Dead!</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-710343">
				<div id="div-comment-710343" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Brian</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090220-00/?p=19083#comment-710343">
			February 20, 2009 at 2:54 pm</a>		</div>

		<p>The user sure would have a hard time rearranging icons with our app full screen in front of it.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-710353">
				<div id="div-comment-710353" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://rickosborne.org/' rel='external nofollow' class='url'>Rick O</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090220-00/?p=19083#comment-710353">
			February 20, 2009 at 3:45 pm</a>		</div>

		<p>I have to wonder (abstractly) the repercussions of shimming that function to a no-op. &nbsp;Because, truly, it drives me crazy to launch an app that I know is going to take a while to load up, and then have it keep stealing focus while I&#8217;ve gone on and continued to do other things. &nbsp;Launch, click something else, the app steals focus but still isn&#8217;t done, click away again, app steals focus yet again, repeat. &nbsp;Word, Photoshop, Outlook, iTunes, Nero, and many more do it.</p>
<p>I&#8217;m trying to think of a good use-case where I would want to let an app steal my focus from another app. &nbsp;Even at launch time.</p>
<p>Maybe I just don&#8217;t have the same expectation that &quot;normal&quot; users do? &nbsp;If the expectation is &quot;when I launch an app the next thing I want to type into is that app&quot;, which leads to &quot;let the app keep stealing focus until it is ready&quot;, then yeah, I definitely don&#8217;t share that.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-710383">
				<div id="div-comment-710383" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Brian</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090220-00/?p=19083#comment-710383">
			February 20, 2009 at 5:42 pm</a>		</div>

		<p>I should qualify, when I say full screen, I don&#8217;t mean maximized. &nbsp;I mean it literally covers your entire screen, including start menu (think video game or power point presentation).</p>
<p>Specifically what was happening is the user launched the app by triple clicking, then started typing, but input wasn&#8217;t coming to our app. &nbsp;Since we also hide the mouse, he couldn&#8217;t exactly click on our app to give it focus. &nbsp;He subsequently filed a bug. &nbsp;This happened enough times to enough people for the bug to be elevated from &#8220;Will not fix &#8211; User error / Microsoft problem&#8221; to &#8220;OK, we have to figure out a way to work around this&#8221;</p>
<div class=post>[<i>You can still click with a hidden mouse. Once they click, the click will go to your application, and you&#8217;re back in business. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-710413">
				<div id="div-comment-710413" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Brian</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090220-00/?p=19083#comment-710413">
			February 20, 2009 at 6:40 pm</a>		</div>

		<p>ok then, he didn&#8217;t know he could click, because his mouse was hidden.</p>
<p>Either way, we had 3 options:</p>
<p>1) Fix it</p>
<p>2) Hope Microsoft fixes it</p>
<p>3) Tell the users to piss off because they&#8217;re doing something dumb</p>
<p>Now which of those 3 options would make our users the most happy?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-jamesnt even thread-even depth-1" id="comment-710433">
				<div id="div-comment-710433" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/JamesNT' rel='external nofollow' class='url'>JamesNT</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090220-00/?p=19083#comment-710433">
			February 20, 2009 at 7:26 pm</a>		</div>

		<p>@Brian,</p>
<p>Sadly, most third party guys choose option 2 as the best way to make users happy.</p>
<p>JamesNT</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-710453">
				<div id="div-comment-710453" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Jeff Tyrrill</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090220-00/?p=19083#comment-710453">
			February 20, 2009 at 8:53 pm</a>		</div>

		<p>@Brian:</p>
<p>&quot;Specifically what was happening is the user launched the app by triple clicking, then started typing, but input wasn&#8217;t coming to our app. &nbsp;Since we also hide the mouse, he couldn&#8217;t exactly click on our app to give it focus. &nbsp;He subsequently filed a bug. &nbsp;This happened enough times to enough people for the bug to be elevated from &quot;Will not fix &#8211; User error / Microsoft problem&quot; to &quot;OK, we have to figure out a way to work around this&quot;&quot;</p>
<p>No, they didn&#8217;t launch the app by triple clicking. They launched the app by double clicking, and then clicked the icon again. That distinction is critical.</p>
<p>&quot;The user sure would have a hard time rearranging icons with our app full screen in front of it.&quot;</p>
<p>Way to miss the point. Obviously, the third click did occur prior to your full screen app covering it.</p>
<p>Why are just the users of your application triple-clicking? Why don&#8217;t you have your application not hide the mouse until it has focus?</p>
<p>Sometimes, you just have to let user error resolve itself. Rather than calling for Microsoft to &quot;fix&quot; something that is not broken, and was a huge, much-appreciated change when it was implemented in Windows 98 (or was it 2000? forget which) to stop programs from stealing the focus.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-710463">
				<div id="div-comment-710463" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joseph Koss</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090220-00/?p=19083#comment-710463">
			February 20, 2009 at 11:15 pm</a>		</div>

		<p>Watchdog apps also needed to steal focus from time to time&#8230; just to say &quot;IMMEDIATE ATTENTION REQUIRED! THE FREAKING THING-A-MA-JIG IS DIS-COM-BOB-U-LA-TED!&quot;</p>
<p>Basically, at one point it was OK for applications to steal focus, and then it later on wasn&#8217;t, where a new &quot;notification area&quot; was thought up.</p>
<p>There isnt a middle-ground but I can see multiple cases where there should be.</p>
<p>I&#8217;m certain that the IT department where I work would probably like such ability, because the front end software (of which there are several dozen department-specific programs) on the hundreds of floor terminals isnt theirs, so cannot be coaxed into giving up focus with legitimate methodology.</p>
<p>There are cases where company-wide (a casino) broadcasts of a discrete nature would be advantageous for security reasons&#8230; its too easy to ignore/overlook the notification area.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-710493">
				<div id="div-comment-710493" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.pdconsec.net/blogs/davidr/' rel='external nofollow' class='url'>David Rawling</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090220-00/?p=19083#comment-710493">
			February 21, 2009 at 12:09 am</a>		</div>

		<p>Funny that no-one has yet mentioned Internet Explorer&#8217;s tendency to randomly set itself as the foreground window. Well, OK, that&#8217;s not necessarily reality (something else is probably pulling it forward) but still, the number of times I&#8217;ve had an IE window pop to the front of the stack, even in IE7, cannot be counted.</p>
<p>Here&#8217;s something worse though, with the &quot;I wanna be seen NOW&quot; concept. What if a user is typing a document, and you have a button as the default control in the window? Why, the very next space or enter (which could be as early as the next keypress) &#8211; or even the correct matching accelerator key &#8211; causes an action to be taken that the user cannot review.</p>
<p>I do wish there was a system option to &quot;convert the SetForegroundWindow function to a no-op&quot;. I know it cannot be, for thousands of reasons including undoubtedly breakage, but still it&#8217;s nice to dream &#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-710363">
				<div id="div-comment-710363" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ray Trent</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090220-00/?p=19083#comment-710363">
			February 20, 2009 at 5:03 pm</a>		</div>

		<p>&quot;We, unfortunately, have a very legitimate reason to steal foreground activation. &nbsp;We have an app that launches full screen. &nbsp;What we noticed is that a lot of our users have a tendency to triple-click the icon on the desktop, thereby launching the app then giving focus back to the desktop.&quot;</p>
<p>That&#8217;s not a legitimate reason. Stop doing that, it&#8217;s really irritating. Your app doesn&#8217;t own my computer, I do. If I give focus to the desktop, it&#8217;s my choice to do so. </p>
<p>Here&#8217;s a real *legitimate* reason to steal foreground focus: you&#8217;re a background service/app whose function is to be a user-activated application launcher. </p>
<p>For example: monitoring a hotkey button that the user has configured to launch some application. Or pop up a timed alarm the user has requested, or, or, or&#8230;</p>
<p>There&#8217;s no input message that the OS recognizes, and yet it&#8217;s truly the user&#8217;s intent to bring the launched app to the foreground. </p>
<p>To use Raymond&#8217;s analogy of &quot;stealing love&quot;, this case is similar to BDSM :-)&#8230; it&#8217;s all about consent and *clearly* communicated user intention.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-710373">
				<div id="div-comment-710373" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Nick Mason</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090220-00/?p=19083#comment-710373">
			February 20, 2009 at 5:14 pm</a>		</div>

		<p>I agree with Ray Trent. &nbsp;I&#8217;ve written a launcher app that has been rendered completely useless by this. &nbsp;I wish there was a registry key (writable by admins only) that stated which apps could steal the focus, even if it were settable by me on my own machine for me own use. &nbsp;I&#8217;ve given up on my app now thanks to this. &nbsp;On the other hand, I hate apps that steal my focus without my consent. &nbsp;Like the Windows Update *I ABSOLUTELY MUST REBOOT NOW AND I&#8217;LL INTERRUPT YOUR SESSION EVERY FIVE MINUTES UNTIL YOU AGREE WITH ME* prompt. &nbsp;Some middle ground must be attainable. &nbsp;I&#8217;m the admin of my machine, why as an admin, can&#8217;t I make it behave the way I want? With my own sofware?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-710503">
				<div id="div-comment-710503" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Worf</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090220-00/?p=19083#comment-710503">
			February 21, 2009 at 2:18 am</a>		</div>

		<p>The problem with stealing fforeground is the user may be merrily typing away not looking at the screen (since knowing how to type means you can type and review notes, etc without looking at the screen).</p>
<p>Oh hey, user types a space and dismisses your dialog. In the meantime, user sees a flash, and realizes that they lost stuff. Many a popup has been lost this way, hence the balloons &#8211; they stay up until dismissed on purpose, rather than accidental. Do this with a window, and you&#8217;ll have a frustrated user who lost who knows how much because they thought they were composing something, but your app was eating it instead.</p>
<p>As for Windows Update &#8211; if you set it so it doesn&#8217;t auto-reboot, move the window out of the way with the cursor keys and the Move command in the alt-space menu.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-710513">
				<div id="div-comment-710513" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">someone</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090220-00/?p=19083#comment-710513">
			February 21, 2009 at 2:51 am</a>		</div>

		<p>@Brian:</p>
<p>Even if a fullscreen app is running, there are legitimate reasons for having a different process in the foreground. Just think about a process running on a different monitor or a configuration tool. Window manager hacks are likely to cause unexpected trouble in other places. What if two fullscreen apps try to become foreground windows, which one is supposed to win?</p>
<p>I think the better solution is in any case inside the app, for example, by giving the user a clear visual indication that the fullscreen window does not (yet) have the focus.</p>
<p>I admit Microsoft could do much better in fixing all those Explorer UI annoyances, particularly in older versions of Windows.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-710533">
				<div id="div-comment-710533" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Anonymous Coward</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090220-00/?p=19083#comment-710533">
			February 21, 2009 at 9:17 am</a>		</div>

		<p>Focus is a hard problem. On the one hand it can be a security vulnerability, for example if an untrusted or semi-trusted (like a browser) application that is otherwise sandboxed grabs it just as you&#8217;re typing a password or something. On the other hand there is the expectation that pressing Logo, N, B, L, A, will open notepad with the text &quot;bla&quot; entered. Similar with a calculator or a console.</p>
<p>As for the current mish-mash of focus grabbing, it seems like Microsoft does this: allow it, because sometimes it may be useful. Everyone does it, even though it isn&#8217;t. Disable it, but allow another method, because sometimes it may be useful. Tell everyone not to use it. It gets used. Disable the new way in the next OS release. But other ways still exist. Worse, these are all so hackish (in the sense of not original intended to be used like that and possibly having major side effects) that they&#8217;re all accidents waiting to happen.</p>
<p>The only real solution I can think of is either a thorough revision of the security and UI model, or simply not using focus grabbers at all. But what if all the software that does a certain task is evil? Path them? I prefer not to use such hacks, for obvious reasons. And if such patches were to become prevalent, expect the next application update to disable them.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-710543">
				<div id="div-comment-710543" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Michael</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090220-00/?p=19083#comment-710543">
			February 21, 2009 at 9:50 am</a>		</div>

		<p>Why not just let the user select applications that have the permission to always call SetForegroundWindow? I often miss Outlook calendar reminders because the reminder dialog pops up somewhere in the background and I don&#8217;t notice it immediately. I would definitely put that dialog on the &quot;always foreground&quot; list.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-710593">
				<div id="div-comment-710593" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">MadQ</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090220-00/?p=19083#comment-710593">
			February 21, 2009 at 1:27 pm</a>		</div>

		<p>I was wondering how long the circumvention comments would last ;-)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-710613">
				<div id="div-comment-710613" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Brian</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090220-00/?p=19083#comment-710613">
			February 21, 2009 at 2:47 pm</a>		</div>

		<p>The core problem is that SetForegroundWindow is trying to read the users mind. &nbsp;It&#8217;s got a fairly long list of cases where it think the user probably wants the process to take focus, and it assumes in all other cases the user doesn&#8217;t want the process to take focus. &nbsp;This works fine assuming it were always right, but the fact is, it&#8217;s not. &nbsp;There are cases where the user wants a process to take focus, but it falls outside of the allowed cases. &nbsp;What then? &nbsp;Application developers are forced to coerce SetForegroundWindow into allowing them to take focus using one of a dozen methods that all make Raymond wince.</p>
<p>The only real way for SFW to know which process the user wants to allow to take focus is to implement some kind of white list like what Michael suggested. &nbsp;Unfortunately, that creates yet another user preference with all the UI dialogs and testing involved. &nbsp;Not to mention apps would likely just figure out how to add themselves to that list.</p>
<p>But wait, the user already has a list of apps he wants to allow to take focus: the list can be viewed in the add/remove programs dialog!</p>
<p>While it would be extremely annoying for my PDF viewer to constantly steal focus so it can tell me an update is available, if it did that I&#8217;d switch to a different PDF viewer (or file &nbsp;a bug report). &nbsp;The same as if the viewer crashed all the time or if it took up half my memory/cpu or if it transmitted confidential data to their website.</p>
<div class=post>[<i>Okay, let me see if I am reading you correctly. You&#8217;re saying that any program the user has installed has been implicitly granted permission to take foreground? (Because if they didn&#8217;t like it, they&#8217;d uninstall it.) In which case, you&#8217;re arguing for removing all attempts to block SetForegroundWindow? -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-710623">
				<div id="div-comment-710623" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Nick</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090220-00/?p=19083#comment-710623">
			February 21, 2009 at 3:12 pm</a>		</div>

		<p>@Nick Mason, Worf</p>
<p>For Windows Update on XP, the best solution I&#8217;ve found is to use a program that allows you to minimize windows to the system tray/notification area. &nbsp;This prevents further disruptions or accidental restarts. A good free one I use is PowerMenu which adds several window controls to the system menu of each window.</p>
<p>The 4 hour delay was one change I was glad to see in Vista, though that box has it&#8217;s own problems. &nbsp;The dropdown selection is directly over the Restart Now button which can lead to many accidental restarts.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-710633">
				<div id="div-comment-710633" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">someone</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090220-00/?p=19083#comment-710633">
			February 21, 2009 at 4:19 pm</a>		</div>

		<p>I&#8217;m currently modifying an application where focus stealing would be really useful.</p>
<p>If you call a second instance, it shouldn&#8217;t run, but bring the first instance to the foreground and notifying it about the new command line. (classical situation)</p>
<p>It should be able to run it on 95, so AllowSetForeground isn&#8217;t really an alternative.</p>
<p>The second instance can&#8217;t call SetForeground, because it doesn&#8217;t know the handle of the first instance. And it can&#8217;t use FindWindow or something because the window title changes during the time and the class name is is just the name of window library&#8217;s window class.</p>
<p>And although the first instance can determine its own handle, it can&#8217;t send it to the second instance because the used communication library seems to work only in one direction. As soon as an instance is registered as main instance, every other instance can send message to it, but it can&#8217;t send some itself. (I know that&#8217;s crap, but I didn&#8217;t wrote that library)</p>
<p>And since this application is platform-independent, calls of Windows functions should be minimized, so rewriting the communication library with normal Windows functions is also not a nice solution. (Actually there is not one direct call to any Windows function)</p>
<div class=post>[<i>If the second instance can send a message to it, it can pass its own window handle as part of that message, and then the first instance can send a reply with the window handle of the first instance. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-710643">
				<div id="div-comment-710643" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">John</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090220-00/?p=19083#comment-710643">
			February 21, 2009 at 6:28 pm</a>		</div>

		<p>You can stop the Automatic Updates service in order to get rid of that annoying, focus-stealing dialog.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-710653">
				<div id="div-comment-710653" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.pretentiousname.com' rel='external nofollow' class='url'>Leo Davidson</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090220-00/?p=19083#comment-710653">
			February 21, 2009 at 6:38 pm</a>		</div>

		<p>[&#8230; You&#8217;re saying that any program the user has installed has been implicitly granted permission to take foreground? (Because if they didn&#8217;t like it, they&#8217;d uninstall it.) &#8230; -Raymond]</p>
<p>Sadly, that seems to be the opinion of at least two members of the Engineering Windows 7 blog, from recent posts.</p>
<p>Except the thing they&#8217;re saying we give implicit trust for all running code to do is silent local process elevation, not just taking the input focus.</p>
<p>(I&#8217;m not saying it&#8217;s your fault; just thought the parallel was worth pointing out.)</p>
<p>OTOH, I suppose it&#8217;s easier for an app to accidentally take the focus than it is for one to accidentally bypass the elevation prompts.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-710553">
				<div id="div-comment-710553" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">dave</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090220-00/?p=19083#comment-710553">
			February 21, 2009 at 10:47 am</a>		</div>

		<p>The problem is hard because practically every application developer thinks that his application is bold blink underlined **IMPORTANT** /bold /blink /underlined, whereas to us users, it&#8217;s just one of many things running, and we&#8217;ll get round to looking at it later. Maybe.</p>
<p>App developer thinks he&#8217;s in charge of your UI; user thinks he&#8217;s in charge of his UI.</p>
<p>User is right, always.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-710673">
				<div id="div-comment-710673" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Brian</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090220-00/?p=19083#comment-710673">
			February 21, 2009 at 7:11 pm</a>		</div>

		<p>[Okay, let me see if I am reading you correctly. You&#8217;re saying that any program the user has installed has been implicitly granted permission to take foreground? (Because if they didn&#8217;t like it, they&#8217;d uninstall it.) In which case, you&#8217;re arguing for removing all attempts to block SetForegroundWindow? -Raymond]</p>
<p>Pretty much, yes. &nbsp;The blocks on SetForegroundWindow don&#8217;t do any good (because programmers have figured out workarounds) and in fact do harm (because those workarounds can have nasty side-effects).</p>
<p>One could argue that the blocks cause a programmer to think twice about if he really wants to take the foreground, but what happens in reality is he notices the function isn&#8217;t working, googles it, finds a workaround, pastes it in, and goes along his merry way.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-710693">
				<div id="div-comment-710693" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">gregw@zip.com.au</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090220-00/?p=19083#comment-710693">
			February 21, 2009 at 7:57 pm</a>		</div>

		<p>Thanks for this article. I use two modified versions of Taskmgr as system monitors. They always have trouble shutting themselves down after I start the Shutdown process. Now I know why. I stole love and have suffered from unreciprocated feelings. At least I know why now.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-710703">
				<div id="div-comment-710703" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.pluimers.com' rel='external nofollow' class='url'>Jeroen Pluimers</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090220-00/?p=19083#comment-710703">
			February 22, 2009 at 2:57 am</a>		</div>

		<p>One of the things I really dislike about IE is this use-case:</p>
<p>1- I click on a link</p>
<p>2- IE starts to munch because the link needs a zillion files to load</p>
<p>3- I switch to another application (like: do some real work and start typing)</p>
<p>4- after a while IE suddenly comes in the foreground and steals the key-strokes (for instance the space-bar or enter keys, especially horrible when IE pops up a modal-dialog with a default button)</p>
<p>This gets worse when you start a bunch of URL&#8217;s that you know you will need in a few minutes.</p>
<p>My current workaround is that I have banned IE to a VM or an RDP session. Which has the drawback that a couple of times a day some app breaks the clipboard chain and copy-paste to the VM or RDP session fails.</p>
<p>I&#8217;d opt for a blacklist of applications that are not allowed to steal the foreground.</p>
<p>&#8211;jeroen</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-710713">
				<div id="div-comment-710713" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ross Bemrose</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090220-00/?p=19083#comment-710713">
			February 22, 2009 at 3:27 am</a>		</div>

		<p>@Brian:</p>
<p>Do you work at Valve software, by any chance?</p>
<p>Team Fortress 2 takes so long to start the first time I run it after boot that I often start setting away messages in my IM programs while waiting for it to start. &nbsp;If I finish before it does, I click on the loading message to bring it back to the front. &nbsp;If it finishes before I do, the application appears as a borderless box in the lower-right of my screen.</p>
<p>Luckily for me, it fixes itself when it moves to the menu screen, but that brief spot when the Valve and Source logos are on the screen is somewhat annoying.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-710723">
				<div id="div-comment-710723" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">someone</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090220-00/?p=19083#comment-710723">
			February 22, 2009 at 6:48 am</a>		</div>

		<p>[If the second instance can send a message to it, it can pass its own window handle as part of that message, and then the first instance can send a reply with the window handle of the first instance. -Raymond]</p>
<p>Principally this could work, however this communication happens before any windows are created. And I don&#8217;t know how the GUI library handles messages it doesn&#8217;t know.</p>
<div class=post>[<i>If you have nobody to send the reverse message to, the return value of the message could be the window handle (if your messages have return values). Good luck with the unknown messages. Sounds like the authors of the GUI library never considered the cross-process focus management problem. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-710733">
				<div id="div-comment-710733" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blog.tapuchim.com' rel='external nofollow' class='url'>configurator</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090220-00/?p=19083#comment-710733">
			February 22, 2009 at 7:33 am</a>		</div>

		<p>@Jeroen Pluimers, I use a much simpler workaround&#8230; Google Chrome. It doesn&#8217;t steal focus AND it doesn&#8217;t take hours to load because of eager rendering (or something, I&#8217;m not sure why it&#8217;s so fast). That doesn&#8217;t work for the Windows Update reboot prompt, unfortunately!</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-710743">
				<div id="div-comment-710743" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Mark</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090220-00/?p=19083#comment-710743">
			February 22, 2009 at 10:17 am</a>		</div>

		<p>Brian: the simplest (and IMHO best) solution would be to not have your window full screen when it&#8217;s not the foreground window. &nbsp;This is the approach almost all games take, and not only stays out of the user&#8217;s way, but also gives a hint to your 3-clicks person that they&#8217;ve changed the focus themselves.</p>
<p>Intuitively, focus on a windowing system should be controlled by the user. &nbsp;Any time you break that, you&#8217;re changing their expectations, and preventing them from associating &quot;I clicked on something else&quot; with &quot;the window I want isn&#8217;t in at the front&quot;. &nbsp;Too many Windows programmers have done this in the past.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-710753">
				<div id="div-comment-710753" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">someone (first one)</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090220-00/?p=19083#comment-710753">
			February 22, 2009 at 11:06 am</a>		</div>

		<blockquote><p>
  Deleted all comments that showed ways of circumventing the rules. Duh, people.
</p></blockquote>
<p>That is unfortunate because people were illustrating a point.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-710773">
				<div id="div-comment-710773" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">ulric</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090220-00/?p=19083#comment-710773">
			February 22, 2009 at 3:55 pm</a>		</div>

		<p>Interesting discussion with the the case brought by &quot;Brian&quot;</p>
<p>How would I handle it&#8230; &nbsp;Assuming this occurs because the app is slow to load &nbsp;and people end up clicking multiple times, I think I would provide immediate feedback the application is loading up by poping a progress bar (or slash screen) very quickly. &nbsp;If the main executable is slow to load because of dependencies, I&#8217;d create a small excutable that&#8217;s just the loader for the rest.</p>
<p>I&#8217;d also provide visual cues that the app is not focused one, possibly by graying out the main window graphics. &nbsp;</p>
<p>I very much doubt that people actually tripple-click. The probably instead click multiple times because a wait cursor or loading screen is missing and they think their action did nothing.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-710793">
				<div id="div-comment-710793" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Christian</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090220-00/?p=19083#comment-710793">
			February 22, 2009 at 7:51 pm</a>		</div>

		<p>I recently switched to Vista and in XP I sometimes launched TweakUI (which was written by &#8230;) and there I could disable SetForegroundWindow. I often found it in the wrong state: So that programms could steal focus.</p>
<p>I just found some tip on the web that shows how to force a window on top and it works by modifying some global setting. How scary! These stupid stealing programms change this setting!!!</p>
<p>Well that explains why my setting sometimes are changed. I don&#8217;t know which programm did this.</p>
<p>The bad thing now is: There is no TweakUI for Vista. Does vista still allow any programm to disable the taskbar flashing in favour of focus stealing? How could I change it back? How could I lock it???</p>
<p>Oh and I just created a batch file that just stops windwos update (net stop wuauserv). Now I can just click that on the desktop whenever the annoying stupid windows update dialogue appears every 4 hours. Yeah!</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-710803">
				<div id="div-comment-710803" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">ulric</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090220-00/?p=19083#comment-710803">
			February 22, 2009 at 8:46 pm</a>		</div>

		<p>I&#8217;m thinking the people complaining about focus stealing like it&#8217;s ruining their day must be running windows XP or earlier. Even in XP, I can&#8217;t recall IE ever stealing the focus. I do recall IE stealing the focus in the past(for example the download complete dialog)&#8230; but that was <em>years</em> ago, I think it was Windows 2000.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-710813">
				<div id="div-comment-710813" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Brian</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090220-00/?p=19083#comment-710813">
			February 22, 2009 at 9:51 pm</a>		</div>

		<p>&quot;I very much doubt that people actually tripple-click.&quot;</p>
<p>I didn&#8217;t know about triple clickers either until this particular bug report showed up. &nbsp;I didn&#8217;t even figure out what was happening until I went out to the customers site to investigate and witnessed it first hand (we write very niche software with only a couple hundred users where each user pays multiple tens of thousands for the software, so going out to a customers site is not unheard of). &nbsp;In this case, the user was well over 50 years old, so it was easier for me to quickly modify our software to add SetForegroundWindow (with a workaround to allow us to steal the love) than retrain him in how to use a mouse.</p>
<p>Interestingly, triple clicking is mostly benign in just about every other case, which is probably why he never had a problem with it before. &nbsp;Also, after this happened I noticed my mother occasionally triple clicks as well (though, she doesn&#8217;t use our software).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-710823">
				<div id="div-comment-710823" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.levicki.net/' rel='external nofollow' class='url'>Igor Levicki</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090220-00/?p=19083#comment-710823">
			February 23, 2009 at 1:43 am</a>		</div>

		<p>I have an idea which will make me rich.</p>
<p>I will make a mouse which filters clicks dropping every third which occurs in a rapid succession.</p>
<p>Wait&#8230; why make hardware when it can be done in software? Just install the mouse filter hook!</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-710783">
				<div id="div-comment-710783" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://lambert.geek.nz/' rel='external nofollow' class='url'>Miral</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090220-00/?p=19083#comment-710783">
			February 22, 2009 at 7:06 pm</a>		</div>

		<p>I would be much happier if there were a user-controlled *blacklist* of applications, so that I can ban SetForegroundWindow from ever taking effect for that app. &nbsp;I&#8217;d even be reasonably happy if the standard behaviour was to grant permission to all apps not in the blacklist. &nbsp;That way, I could specifically block those apps that abuse the privilege, whether intentionally or unintentionally.</p>
<p>I suspect that most of the times that focus-stealing has happened to me, it&#8217;s been unintentional on the part of the app. &nbsp;(I&#8217;m fairly certain in one case that MessageBox itself is the culprit &#8212; whether that&#8217;s due to passing NULL as the parent or to passing some special flag (eg. MB_SYSTEMMODAL), I&#8217;m less sure.)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-710853">
				<div id="div-comment-710853" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Rob</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090220-00/?p=19083#comment-710853">
			February 23, 2009 at 5:29 am</a>		</div>

		<p>Mark:</p>
<p>&quot;Brian: the simplest (and IMHO best) solution would be to not have your window full screen when it&#8217;s not the foreground window.&quot;</p>
<p>No! Please never do this, it&#8217;s very annoying to people with multiple monitors. How about just unhiding the cursor?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-710973">
				<div id="div-comment-710973" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://luke.breuer.com' rel='external nofollow' class='url'>Luke Breuer</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090220-00/?p=19083#comment-710973">
			February 23, 2009 at 1:34 pm</a>		</div>

		<p>It seems like Microsoft would benefit everyone by creating a sort of &quot;programs doing stuff notification area&quot;. &nbsp;Programs that are starting up or [temporarily] frozen would go in that area. &nbsp;The user could control what happens when the program actually starts up or not. &nbsp;In effect, you give the <em>user</em> control over whether or not a program can steal the focus. &nbsp;Maybe you default this to not show up or allow programs to steal focus, so that current behavior is maintained.</p>
<p>Document this functionality extremely well, and allow people to submit situations which aren&#8217;t covered by the API. &nbsp;After finalizing the API, start documenting a list of companies that just cannot seem to follow the rules. &nbsp;Maybe public shame would work?</p>
<p>My core question is this: to what extent is Microsoft serving its end-users, versus its big corporate clients who want to impose their stupid rules on <em>everyone</em>? &nbsp;I hope Microsoft realizes that it <em>will</em> have to make all sorts of Windows experiences better and better over time, or something open source will eventually catch up. &nbsp;It would be nice if MS could avoid going the lazy route it went (and is still pursuing) with Internet Explorer.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-710983">
				<div id="div-comment-710983" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Mark</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090220-00/?p=19083#comment-710983">
			February 23, 2009 at 1:42 pm</a>		</div>

		<p>Raymond,</p>
<p>Okay, you deleted all the code samples that show how to circumvent &#8220;SetForegroundwindow.&#8221; &nbsp;How about providing a code sample which shows the correct way to do it? &nbsp;</p>
<p>This is a classic case of code which should be written once and copied forever. &nbsp;Rather than have every developer do the research, hunts down the bugs, etc, etc, I assume you already have a piece of working code since you clearly already know the right answer. &nbsp;Can you post it and thus obviate the need or desire for people to &#8220;cheat?&#8221; &nbsp;</p>
<p>I have no hacker&#8217;s pride, and don&#8217;t need to re-invent the wheel. &nbsp;If the user tries to start a 2nd instance of my app, I just want a simple, debugged piece of code for letting my 2nd instance tell the 1st instance to set itself as the foreground window.</p>
<div class=post>[<i>I already described the way to do it in the article. Call SetForegroundWindow from the application that was launched, not from the first instance. If you really want to see code, here it is:</p>
<p><code>SetForegroundWindow(hwndFirstInstance);</code></p>
<p>There ya go. Copy it all you like. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-710993">
				<div id="div-comment-710993" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Timothy Fries</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090220-00/?p=19083#comment-710993">
			February 23, 2009 at 2:40 pm</a>		</div>

		<p>@Luke Breuer: Talk about an overengineered solution to a minor problem. &nbsp; You have far too much confidence in both users and developers.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-711013">
				<div id="div-comment-711013" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Aaron G</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090220-00/?p=19083#comment-711013">
			February 23, 2009 at 3:13 pm</a>		</div>

		<p>@Luke Breuer: &nbsp;Great idea! &nbsp;Makes me wonder why Windows doesn&#8217;t already have a Notification Area!</p>
<p>&#8230;What&#8217;s that you say, Windows already has a Notification Area? &nbsp;Since 1995? &nbsp;Oh, well, never mind then.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-dwalker-wk even thread-even depth-1" id="comment-711023">
				<div id="div-comment-711023" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/DWalker' rel='external nofollow' class='url'>DWalker</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090220-00/?p=19083#comment-711023">
			February 23, 2009 at 3:40 pm</a>		</div>

		<p>@Brian: &nbsp;Why can&#8217;t you just tell your users to stop triple-clicking? &nbsp;I&#8217;m serious. &nbsp;They should learn not to DO that.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-710923">
				<div id="div-comment-710923" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">DEngh</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090220-00/?p=19083#comment-710923">
			February 23, 2009 at 11:53 am</a>		</div>

		<p>@dave &quot;The problem is hard because practically every application developer thinks that his application is bold blink underlined **IMPORTANT** /bold /blink /underlined&quot;</p>
<p>In my team&#8217;s case it&#8217;s not the developers, it&#8217;s our marketing people. &nbsp;We keep having to tell them that we don&#8217;t get to take focus every time &lt;the current event of concern&gt; happens in our app.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-711203">
				<div id="div-comment-711203" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Mark</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090220-00/?p=19083#comment-711203">
			February 24, 2009 at 1:19 pm</a>		</div>

		<p>Raymond,</p>
<p>I was politely asking for a useful bit of code, and you treated me like I was some sort of tool. &nbsp;</p>
<p>I read your original post, and I already understood the way to call &#8220;SetForegroundWindow()&#8221; with the handle of the first instance. &nbsp;I&#8217;m not retarded. &nbsp;Unfortunately, you glossed over the key details via the equivalent of, &#8220;The rest is left as an exercise for the reader.&#8221; &nbsp;While it&#8217;s all fun to be smarmy and say &#8220;hwndFirstInstance&#8221;, how about providing useful code that provides a way for the 2nd instance to get the handle of the 1st instance? &nbsp;&#8220;FindWindow()&#8221; is a fairly flawed system, such as detailed here:</p>
<p><a href="http://www.developerfusion.com/article/1716/avoiding-multiple-instances-of-an-application/5/" target=_new rel=nofollow rel="nofollow">http://www.developerfusion.com/article/1716/avoiding-multiple-instances-of-an-application/5/</a></p>
<p>So, care to step up to the plate, or do I get another &#8220;There ya go&#8221; from you? &nbsp;Seriously, when someone acts like a dick, treat them like a dick. &nbsp;When they ask like a decent person, treat them like a decent person. &nbsp;</p>
<div class=post>[<i>Um, you presumably already know the handle to the first instance since you were going to send it a message to say &#8220;Here, take over for me.&#8221; Today&#8217;s topic was how to manage foreground activation during the hand-off, not &#8220;A complete guide to single-instance applications.&#8221; I had assumed your question was &#8220;What change do I have to make to my hand-off code to manage foreground activation correctly?&#8221;, and I answered it in that context. I didn&#8217;t realize you wanted &#8220;A complete guide to single-instance applications.&#8221; My apologies for misunderstanding. But you won&#8217;t get an answer today because that&#8217;s not today&#8217;s topic. Don&#8217;t make me bring back the nitpicker&#8217;s corner. &#8220;Today&#8217;s topic is the management of foreground application during the hand-off from the second instance and the first. It assumes that you have already figured out a way to get the two instances in touch with each other.&#8221; -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-711273">
				<div id="div-comment-711273" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://luke.breuer.com' rel='external nofollow' class='url'>Luke Breuer</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090220-00/?p=19083#comment-711273">
			February 24, 2009 at 5:07 pm</a>		</div>

		<p>@Timothy Fries</p>
<p>You call it a &quot;minor problem&quot; because&#8230; it doesn&#8217;t bother <em>you</em> much? &nbsp;Have you <em>seen</em> what non-guru users do to deal with these problems? &nbsp;Tell me this: what happens when we allow a system to have many minor problems?</p>
<p>@Aaron G</p>
<p>The fact that Microsoft <em>itself</em> circumvents the &quot;tooltip should fade away after a while&quot; design criterion should tell you something. &nbsp;Here&#8217;s a hint: Windows&#8217; notification area sucks and probably due to no interesting changes since 1995! &nbsp;Look at Growl on the Mac and see how many more options it has, like, say, stacking notifications.</p>
<hr />
<p>As far as I can tell, there are at least two major problems why companies circumvent what Microsoft says to do:</p>
<p>1) it is too hard to find the proper documentation (not everyone is a Win32 guru), or the documentation is incomplete</p>
<p>2) companies want to do something that Microsoft says not to do so instead of using a standard API, they come up with a hack that requires shims for backwards compatibility down the road</p>
<p>I&#8217;m not going to expect more from users, but damnit, I <em>will</em> expect more from Microsoft. &nbsp;Hell, they can turn out nice products like SQL Server and the .NET Framework &#8212; how about applying that level of expertise and diligence to other areas?</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>