<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (7)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-625173">
				<div id="div-comment-625173" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">meh</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080430-00/?p=22523#comment-625173">
			April 30, 2008 at 11:24 am</a>		</div>

		<p>I love this stuff. I love your blog too, but that goes without saying. =]</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-625193">
				<div id="div-comment-625193" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ivo</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080430-00/?p=22523#comment-625193">
			April 30, 2008 at 12:01 pm</a>		</div>

		<p>Why is RegisterClipboardFormat returning UINT and not a WORD? Even the documentation says the value is between 0xC000 and 0xFFFF. This is not a big deal in itself, but the problem is when assigning this to a CLIPFORMAT (which is defined as WORD) it requires a cast. I need to add a bunch of those recently in my project when I upped the warning level.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-625273">
				<div id="div-comment-625273" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Messiant R</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080430-00/?p=22523#comment-625273">
			April 30, 2008 at 2:45 pm</a>		</div>

		<p>Going to take a guess on the additional weirdness:</p>
<p>GlobalAddAtom() stuffs the atom into the atom table shared by all applications, and SetProp() seems to be using that table according to your explanation.</p>
<p>If a mischievous developer decided to call GlobalDeleteAtom() more times on the window property names than he explicitly or implicitly added the atom, other applications could suddenly fail due to the disappearance of their expected atom. I guess there&#8217;s also a chance then that GlobalAddAtom() may reuse the value of the deleted atom.</p>
<p>Nobody likes it if the ground sinks away under their feet, so there must be some process based reference counting going on to prevent what I described.</p>
<p>Now I&#8217;ll go wait in anticipation of friday to see if my hunch is correct.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-625323">
				<div id="div-comment-625323" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Neil</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080430-00/?p=22523#comment-625323">
			April 30, 2008 at 5:28 pm</a>		</div>

		<blockquote><p>
  Think of it as a fantastic coincidence.
</p></blockquote>
<p>Nearly fantastic; as Undocumented Windows points out, currently RegisterWindowMessage and RegisterClipboardFormat have the same address.</p>
<p>Unfortunately, at least in my edition, they then explain how to load ds with the HINSTANCE of the desktop to call GetAtomName to retrieve the name of the registered message, when in fact GetClipboardFormatName already does that!</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-625383">
				<div id="div-comment-625383" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">IUnknown</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080430-00/?p=22523#comment-625383">
			May 1, 2008 at 5:04 am</a>		</div>

		<p>IIRC, RegisterWindowMessage calls AddAtom.</p>
<div class="post">[<i>Thank you for repeating my second paragraph, in case people missed it the first time. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-625593">
				<div id="div-comment-625593" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">IUnknown</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080430-00/?p=22523#comment-625593">
			May 1, 2008 at 3:14 pm</a>		</div>

		<p>Heh, sorry about that. RegisterClipboardFormat is the exact same function though, it has the same prototype and even the same entry point in user32.dll. That&#8217;s all, thanks for the informative article. It&#8217;s always fun to read your blog :)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-626013">
				<div id="div-comment-626013" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">knut</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080430-00/?p=22523#comment-626013">
			May 3, 2008 at 10:29 am</a>		</div>

		<p>I always wondered what RegisterWindowMessage will do when all 16 383 possible atom values are exhausted?</p>
<p>With all these uses of GlobalAddAtom (Window classes,SetProp,RegisterWindowMessage,RegisterClipboardFormat,&#8230;), isn&#8217;t it very likely the string table gets &#8216;full&#8217; some time?</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>