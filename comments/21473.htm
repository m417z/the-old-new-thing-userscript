<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (14)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-649603">
				<div id="div-comment-649603" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Friday</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080725-00/?p=21473#comment-649603">
			July 25, 2008 at 11:10 am</a>		</div>

		<p>COM, RPC and OLE (i don&#8217;t know what are never equivalents) should be burned and burried. That is the bloat of Windows.</p>
<p>If you need one program to work with another&#8217;s data, use save file / export/import.</p>
<p>KISS</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-649643">
				<div id="div-comment-649643" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">jachymko</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080725-00/?p=21473#comment-649643">
			July 25, 2008 at 11:49 am</a>		</div>

		<p>Friday, sure, anything you don&#8217;t understand seems as an unnecessary bloat. The solution is go learn about it, not to show off your ignorance.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-649673">
				<div id="div-comment-649673" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">mikeb</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080725-00/?p=21473#comment-649673">
			July 25, 2008 at 12:39 pm</a>		</div>

		<p>I wouldn&#8217;t necessarily call COM bloat, but there&#8217;s no doubt it&#8217;s terribly complex. &nbsp;Most of the COM-oriented articles that Raymond writes highlight that complexity and should make most programmers want to hide in fear. &nbsp;Of course there&#8217;s not much reason for Raymond to write about the simple COM stuff, but it&#8217;s still an understatement to say that COM requires an awful lot of knowledge to use correctly.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-649683">
				<div id="div-comment-649683" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Brian</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080725-00/?p=21473#comment-649683">
			July 25, 2008 at 12:44 pm</a>		</div>

		<p>the complexity of COM is the entire reason C# was invented</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-649713">
				<div id="div-comment-649713" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Rishu73</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080725-00/?p=21473#comment-649713">
			July 25, 2008 at 1:03 pm</a>		</div>

		<p>I would actually say that the power of COM is what allowed .NET to be made&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-649763">
				<div id="div-comment-649763" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://coldacid.net/' rel='external nofollow' class='url'>Chris Charabaruk</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080725-00/?p=21473#comment-649763">
			July 25, 2008 at 3:25 pm</a>		</div>

		<p>Yeah, I&#8217;d have to go with Rishu73 over Brian. C# was invented to take advantage of .NET.</p>
<p>And to anyone that thinks that COM and friends are too complex, all I have to say is this: CORBA. Stop complaining.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-maurits even thread-even depth-1" id="comment-649833">
				<div id="div-comment-649833" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Maurits+%5BMSFT%5D' rel='external nofollow' class='url'>Maurits [MSFT]</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080725-00/?p=21473#comment-649833">
			July 25, 2008 at 8:15 pm</a>		</div>

		<p>There are other ways, too.</p>
<p>main()</p>
<p>if (FAILED(CoInitialize(NULL)) { goto Exit; }</p>
<p>// compiler will enforce this &quot;unnecessary&quot; scope</p>
<p>{ ProcessReference ref; &#8230; }</p>
<p>CoUninitialize(NULL);</p>
<p>Exit: return 0;</p>
<p>}</p>
<p>Note that if someone &quot;helpfully&quot; deletes the &quot;unnecessary&quot; scope then the compiler will complain that ref&#8217;s initializer can be skipped.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-649773">
				<div id="div-comment-649773" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Jonathan</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080725-00/?p=21473#comment-649773">
			July 25, 2008 at 3:27 pm</a>		</div>

		<p>Yeah, this is what happens when you mix resource lifetime management patterns.</p>
<p>The correct way would be to create some CCoInitialize class, something like:</p>
<p>class CCoInitialize</p>
<p>{</p>
<p> &nbsp; &nbsp;CCoInitialize() &nbsp; &nbsp;{ &nbsp;m_hr = CoInitialize(NULL); &nbsp;}</p>
<p> &nbsp; &nbsp;~CCoInitialize()</p>
<p> &nbsp; &nbsp;{</p>
<p> &nbsp; &nbsp; &nbsp; &nbsp;if (SUCCEEDED(m_hr))</p>
<p> &nbsp; &nbsp; &nbsp; &nbsp;{</p>
<p> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;CoUnInitialize();</p>
<p> &nbsp; &nbsp; &nbsp; &nbsp;}</p>
<p> &nbsp; &nbsp;}</p>
<p> &nbsp; &nbsp;HRESULT m_hr;</p>
<p>}</p>
<p>And then you would have a nice main:</p>
<p>int __cdecl wmain(int argc, WCHAR **argv)</p>
<p>{</p>
<p> CCoInitialize coinit;</p>
<p> ProcessReference ref;</p>
<p> &#8230;.</p>
<p>}</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-649883">
				<div id="div-comment-649883" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Yuhong Bao</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080725-00/?p=21473#comment-649883">
			July 26, 2008 at 2:32 pm</a>		</div>

		<blockquote><p>
  And to anyone that thinks that COM and friends are too complex, all I have to say is this: CORBA. Stop complaining.
</p></blockquote>
<p>Yep, CORBA was designed by committee.</p>
<p><a rel="nofollow" target="_new" href="http://www.acmqueue.com/modules.php?name=Content&amp;pa=showpage&amp;pid=396&amp;page=1" rel="nofollow">http://www.acmqueue.com/modules.php?name=Content&#038;pa=showpage&#038;pid=396&#038;page=1</a></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-649893">
				<div id="div-comment-649893" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://brandonlive.com' rel='external nofollow' class='url'>Brandon Paddock</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080725-00/?p=21473#comment-649893">
			July 26, 2008 at 7:33 pm</a>		</div>

		<p>Interesting timing Raymond, I was just working on the Mail Recipient.MAPIMail implementation this week =)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-649953">
				<div id="div-comment-649953" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Arno</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080725-00/?p=21473#comment-649953">
			July 28, 2008 at 7:32 am</a>		</div>

		<p>I tried dropping a file onto a .zip file under Vista SP1. The handler creates a worker thread, but does not seem to call SHGetExplorerInstance. It would be great if someone could try it.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-650113">
				<div id="div-comment-650113" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Arno</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080725-00/?p=21473#comment-650113">
			July 28, 2008 at 3:03 pm</a>		</div>

		<p>To answer my own question, the .zip handler calls SHCreateThread with CTF_COINIT_STA and no other flag, in particular no CTF_THREAD_REF or CTF_PROCESS_REF. Raymond, any comment?</p>
<p>TIA</p>
<div class=post>[<i>Sounds like a bug. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-650263">
				<div id="div-comment-650263" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">David Walker</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080725-00/?p=21473#comment-650263">
			July 29, 2008 at 10:52 am</a>		</div>

		<p>Friday: &quot;COM, RPC and OLE (i don&#8217;t know what are never equivalents) should be burned and burried. That is the bloat of Windows.</p>
<p>If you need one program to work with another&#8217;s data, use save file / export/import.&quot;</p>
<p>This is totally stupid. &nbsp;You don&#8217;t understand what COM is designed for, or what it can do.</p>
<p>I have some programs written in Visual Basic .NET 2005 that make COM calls to the object model of a popular contact management system. &nbsp;These programs update certain values within certain contact records, based on client account values that are read from another source.</p>
<p>There is NO WAY that you could do the equivalent thing using file export/import. &nbsp;</p>
<p>Well, maybe, you could get everyone else to stop using the program to prevent data being changed while the following is happening &#8212; not likely &#8212; and then export ALL of the client contact records to a file. &nbsp;(The export would be done manually, from the user interface &#8212; if there&#8217;s no COM). &nbsp;Then, call a separate program to merge the file data from one program with the client account values, then delete ALL of the client records (from the user interface of the contact manager program), then re-import ALL of them (from the user interface).</p>
<p>How, exactly, is this better? &nbsp;It&#8217;s NOT.</p>
<p>I also have several programs that use the Excel and Outlook object models for verious reasons. &nbsp;One of the programs is designed to load some spreadsheet data (that is in a complicated, not-easy-to-directly-import format) into a SQL database. &nbsp;The program calls Excel&#8217;s object model to open many different spreadsheet files, and read selected data from most of the worksheets. &nbsp;</p>
<p>I have another program that calls the COM object model of an FTP program, to see what files are available to download at one FTP site, and then download the new files (whose file names don&#8217;t appear in a SQL table).</p>
<p>All of those object models are part of COM, which includes the ability to call those METHODS and change things in real time. &nbsp;The beauty of COM is that the program designers (for the contact management system, the FTP program, and even Excel) can build the COM methods and properties without knowing what all uses those methods will be used for in the future. &nbsp;It&#8217;s called an INTERFACE.</p>
<p>Exporting and importing data is not the answer. &nbsp;I&#8217;m afraid that you don&#8217;t understand.</p>
<p>David Walker</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-652973">
				<div id="div-comment-652973" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.trumpetinc.com' rel='external nofollow' class='url'>Kevin Day</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080725-00/?p=21473#comment-652973">
			July 31, 2008 at 11:37 pm</a>		</div>

		<p>So this begs a longstanding question: &nbsp;How does one go about getting an IDropTarget for an hwnd that has an IDropTarget registered for it via RegisterDragDrop?</p>
<p>DoDragDrop apparently has access to a table of marshalled interface pointers, and this table is exposed in some way that it can be accessed from different processes. &nbsp;Is there a magic registered COM object that allows this access?</p>
<p>And is there some way for non-Shell apps to access this table?</p>
<p>For what it&#8217;s worth, there is a window property that (at least in win32) holds an interface pointer to IDropTarget &#8211; but it&#8217;s undocumented, and the interface pointer is for the hwnd&#8217;s process space (and apartment). &nbsp;And we never use undocumented features :-)</p>
<p>To my knowledge, there is no way to get a marshaled pointer from a different process (without the other process providing the marshaling information) &#8211; so how does DoDragDrop actually get the IDropTarget? &nbsp;</p>
<div class="post">[<i>The question may be longstanding, <a href="http://blogs.msdn.com/oldnewthing/archive/2004/11/24/269237.aspx" rel="nofollow">but so too is the answer</a>. Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>