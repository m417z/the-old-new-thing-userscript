<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (10)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-1175023">
				<div id="div-comment-1175023" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Myria</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150209-00/?p=44723#comment-1175023">
			February 9, 2015 at 11:08 am</a>		</div>

		<p>A secondary reason you can&#39;t reinterpret_cast FILETIME to __int64 *: endianness. &nbsp;Unlike LARGE_INTEGER, FILETIME does not swap its two fields&#39; positions on e.g. Xbox 360.</p>
<p>I much prefer stdio to the C++ ways of doing standard input and output, so I&#39;m with you on that. &nbsp;That said, a second &quot;horrors&quot; comment ought to be on using main instead of wmain in a Windows program =^_^=</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1175033">
				<div id="div-comment-1175033" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Cesar</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150209-00/?p=44723#comment-1175033">
			February 9, 2015 at 11:39 am</a>		</div>

		<p>The horror is not mixing stdio and C++. The horror is mixing stdio and C++ the old way. You should use cstdio instead of stdio.h.</p>
<p>;-)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-wndsks even thread-even depth-1" id="comment-1175043">
				<div id="div-comment-1175043" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/skSdnW' rel='external nofollow' class='url'>skSdnW</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150209-00/?p=44723#comment-1175043">
			February 9, 2015 at 12:48 pm</a>		</div>

		<p>The horror is mixing a compiler specific attribute like __cdecl in otherwise &quot;portable&quot; code when you could use STDMETHODVCALLTYPE (or perhaps even add a &#8230; parameter?) :)</p>
<div class="post">[<em>I assume you&#39;re talking about main? STDMETHODVCALLTYPE is wrong here, because main must be __cdecl and should not follow the variadic COM method call convention. You are relying on implementation details. -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1175053">
				<div id="div-comment-1175053" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150209-00/?p=44723#comment-1175053">
			February 9, 2015 at 1:57 pm</a>		</div>

		<p>Expected: int main(</p>
<p>Got: int __cdecl main(</p>
<p>The code is portable between compilers except for __cdecl is compiler specific and not necessary anyway.</p>
<div class="post">[<em>__cdecl is required if you compile with /Gz, for example, which is common because __stdcall is a more compact calling convention than __cdecl. I don&#39;t understand the portability concern here. You&#39;re using windows.h. That&#39;s not portable. -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1175063">
				<div id="div-comment-1175063" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150209-00/?p=44723#comment-1175063">
			February 9, 2015 at 2:23 pm</a>		</div>

		<p>[__cdecl is required if you compile &#8230;]</p>
<p>Any reason for not using CDECEL then?</p>
<p>[You&#39;re using windows.h. That&#39;s not portable. -Raymond]</p>
<p>That&#39;s what you think. Change __cdecl to CDECL and it builds w/ gcc.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-bboorman odd alt thread-odd thread-alt depth-1" id="comment-1175073">
				<div id="div-comment-1175073" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Brian_EE' rel='external nofollow' class='url'>Brian_EE</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150209-00/?p=44723#comment-1175073">
			February 9, 2015 at 3:05 pm</a>		</div>

		<p>[You&#39;re using windows.h. That&#39;s not portable. -Raymond]</p>
<p>There&#39;s a difference between target platform portability and compiler vendor portability.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1175103">
				<div id="div-comment-1175103" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">text rendering</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150209-00/?p=44723#comment-1175103">
			February 9, 2015 at 6:20 pm</a>		</div>

		<p>I want to comment on your ClearType article, but unfortunately it&#39;s already locked.</p>
<p>Rendering ClearType text is not only dependent on semitransparent backgrounds, it&#39;s also dependent on other semitransparent windows that are rendered in front of the text, uncommon but can happen. Thus to correctly render ClearType text you have to know in advance if other semitransparent bitmaps will be overlayed over the text your rendering. ClearType text overlayed over ClearType text is an example of this, which Windows doesn&#39;t render correctly, the ClearType engine isn&#39;t competent enough to do this correctly.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1175083">
				<div id="div-comment-1175083" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Myria</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150209-00/?p=44723#comment-1175083">
			February 9, 2015 at 3:46 pm</a>		</div>

		<p>@Raymond: Though it&#39;s true that I often write extern &quot;C&quot; int __cdecl wmain myself, it is the case that __cdecl is unnecessary in Visual C++ even with the /Gz compiler option. &nbsp;Visual C++ special-cases the main and wmain functions.</p>
<p>// compile with /Ox /Oy /Gz /Fa</p>
<p>int testfunc(int, wchar_t **) { return 66; }</p>
<p>int wmain(int, wchar_t **) { return 66; }</p>
<p>_wmain	PROC</p>
<p>	mov	eax, 66</p>
<p>	ret	0</p>
<p>_wmain	ENDP</p>
<p>?testfunc@@YGHHPAPA_W@Z PROC</p>
<p>	mov	eax, 66</p>
<p>	ret	8</p>
<p>?testfunc@@YGHHPAPA_W@Z ENDP</p>
<p>wmain is not just automatically __cdecl, it&#39;s automatically extern &quot;C&quot;, which is rather logical.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1175663">
				<div id="div-comment-1175663" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">HARBMOBARKI</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150209-00/?p=44723#comment-1175663">
			February 12, 2015 at 12:18 pm</a>		</div>

		<p>TechNet</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-alexcohn odd alt thread-odd thread-alt depth-1" id="comment-1175953">
				<div id="div-comment-1175953" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Alex+Cohn' rel='external nofollow' class='url'>Alex Cohn</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150209-00/?p=44723#comment-1175953">
			February 14, 2015 at 2:26 am</a>		</div>

		<p>Too bad `auto` is not part of C circa 2015. This little shorthand is the only (but very good) reason to use C++ compiler here, </p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>