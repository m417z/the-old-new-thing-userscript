<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (6)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1 parent" id="comment-1317135">
				<div id="div-comment-1317135" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">jon</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20171128-00/?p=97475#comment-1317135">
			November 28, 2017 at 7:39 am</a>		</div>

		<p>I&#8217;m curious how code can just be migrated in to an operating system without any sort of QA associated with it?</p>
<p>At no stage no one reviewed this feature and suggested maybe it should be fixed to get rid of all these quirks before it shipped? Or is it just seen as easier/cheaper to make that the responsibility of every third-party developer in the world, forever?</p>

		
				</div>
		<ol class="children">
		<li class="comment odd alt depth-2 parent" id="comment-1317155">
				<div id="div-comment-1317155" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Devin</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20171128-00/?p=97475#comment-1317155">
			November 28, 2017 at 10:24 am</a>		</div>

		<p>@jon</p>
<p>That&#8217;s easy to say, but Windows has many millions of lines of code. It&#8217;s impossible to review everything for each release. Even for small products, it&#8217;s impractical to review everything whenever you want to release. Even then, once you see an issue, is it possible to fix it and be absolutely certain that your fix won&#8217;t have any side effects?</p>
<p>This gets compounded when you are talking about an API surface that is consumed by an unknown number of applications. If a quirk is known by developers, then they will have worked around it, or could even be relying on that quirk. Fixing that quirk could possibly cause more issues than it solves.</p>
<p>My experience in this industry is that developers are a cantankerous bunch, and hate anything new or different. They need to be coddled. This means years of deprecation warnings, gigabytes of documentation on how to update, and a personal visit from Raymond wielding a large stick. All of this will be ignored. Finally, when things stop working the developers will blame Microsoft for &#8220;randomly&#8221; breaking things.</p>

		
				</div>
		<ol class="children">
		<li class="comment even depth-3" id="comment-1317175">
				<div id="div-comment-1317175" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">voo</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20171128-00/?p=97475#comment-1317175">
			November 29, 2017 at 5:02 am</a>		</div>

		<p>You&#8217;re misunderstanding Jon. He&#8217;s asking why there weren&#8217;t any code reviews in place when the code was first added internally. </p>
<p>And the answer that 640k gives seems rather logical &#8211; it was an internal API first which gets much less oversight and nobody reviewed the code when it was made public. </p>
<p>Also this happened ages ago, I doubt there was a standardized process in place with regards to testing and code reviews. We shouldn&#8217;t forget that even 10 years ago writing unit tests was still anything but common.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment odd alt depth-2" id="comment-1317165">
				<div id="div-comment-1317165" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">640k</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20171128-00/?p=97475#comment-1317165">
			November 28, 2017 at 10:55 pm</a>		</div>

		<p>ItThe imported code was taken from the Office code base, which was thought to be stable and tested.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment even thread-odd thread-alt depth-1" id="comment-1317145">
				<div id="div-comment-1317145" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Aged .Net Guy</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20171128-00/?p=97475#comment-1317145">
			November 28, 2017 at 8:42 am</a>		</div>

		<p>The reference in the third paragraph is to a blog post that tells us of a checkbox-related resource leak in the .Net implementation of TreeView.  Following refs back, it seems the original bug report behind the blog post came from roughly 2008.</p>
<p>Does anyone know which .Net framework version or service pack update  resolved this problem?</p>
<p>To make this question actionable as is Raymond&#8217;s wont(<a href="https://blogs.msdn.microsoft.com/oldnewthing/20160329-00/?p=93214" rel="nofollow">https://blogs.msdn.microsoft.com/oldnewthing/20160329-00/?p=93214</a>) let me rephrase it as: How far back into our codebase vs. supported configs do we need to go (or not) to find places we ought to implement that blog&#8217;s suggested shim?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-even depth-1" id="comment-1317305">
				<div id="div-comment-1317305" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Alex Guteniev</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20171128-00/?p=97475#comment-1317305">
			November 30, 2017 at 12:37 am</a>		</div>

		<p>I recall other cases of stock state images for controls that were added at about the same time or later.<br />
They are<br />
1. LVS_EX_CHECKBOXES<br />
2. HDF_SORTDOWN, HDF_SORTUP, HDF_CHECKBOX, etc in HDITEM::fmt</p>
<p>Any similar issues with them?</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>