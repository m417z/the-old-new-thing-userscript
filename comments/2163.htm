<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (30)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-1097663">
				<div id="div-comment-1097663" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">SI</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140106-00/?p=2163#comment-1097663">
			January 6, 2014 at 7:35 am</a>		</div>

		<p>Cast is to convert from the bstr_t class to WCHAR, but shouldn&#39;t the format string then be L&quot;&#8230;&quot;?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1097713">
				<div id="div-comment-1097713" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">John Doe</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140106-00/?p=2163#comment-1097713">
			January 6, 2014 at 7:57 am</a>		</div>

		<p>@SI, the L&quot;&#8230;&quot; would be necessary for wprintf. Anyway, you nailed the exercise: <a rel="nofollow" target="_new" href="http://msdn.microsoft.com/en-us/library/btdzb8eb.aspx">msdn.microsoft.com/&#8230;/btdzb8eb.aspx</a></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-brunopitrus even thread-even depth-1" id="comment-1097723">
				<div id="div-comment-1097723" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/kinokijuf' rel='external nofollow' class='url'>kinokijuf</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140106-00/?p=2163#comment-1097723">
			January 6, 2014 at 8:03 am</a>		</div>

		<p>Especially since most mobo manufacturers put “System manufacturer” in that field (and “System Product Name” in the model field). The motherboard manufacturer field is more reliable.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1097733">
				<div id="div-comment-1097733" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">SI</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140106-00/?p=2163#comment-1097733">
			January 6, 2014 at 8:04 am</a>		</div>

		<p>Ok, today I found out that PWSTR is basically TCHAR*, so it depends on UNICODE being defined.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1097753">
				<div id="div-comment-1097753" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Rick C</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140106-00/?p=2163#comment-1097753">
			January 6, 2014 at 8:21 am</a>		</div>

		<p>&quot;we can ask it for all (*) the information&quot;</p>
<p>Nitpicker&#39;s corner: &nbsp;Today there is no nitpicker&#39;s corner.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-maurits odd alt thread-odd thread-alt depth-1" id="comment-1097783">
				<div id="div-comment-1097783" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Maurits+%5BMSFT%5D' rel='external nofollow' class='url'>Maurits [MSFT]</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140106-00/?p=2163#comment-1097783">
			January 6, 2014 at 9:27 am</a>		</div>

		<p>&gt; %ls always means an ANSI value</p>
<p>copy/paste error: should read &quot;%ls always means a Unicode value&quot;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1097823">
				<div id="div-comment-1097823" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">SI</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140106-00/?p=2163#comment-1097823">
			January 6, 2014 at 10:13 am</a>		</div>

		<p>We had exactly the opposite problem, our codebase is littered with (const char*)bstr_t(&#8230;) wrappers around unicode status messages to convert them to ansi for vsprintf logging calls, instead of using %ls directly.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1097873">
				<div id="div-comment-1097873" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">J. Peterson</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140106-00/?p=2163#comment-1097873">
			January 6, 2014 at 1:16 pm</a>		</div>

		<p>30-some lines of code to&#8230;retrieve a string???</p>
<div class="post">[<em>It will probably take you even more lines of code to get the number of unread messages in the user&#39;s Yahoo inbox, and that&#39;s just a 32-bit integer! -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-maurits even thread-even depth-1" id="comment-1097773">
				<div id="div-comment-1097773" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Maurits+%5BMSFT%5D' rel='external nofollow' class='url'>Maurits [MSFT]</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140106-00/?p=2163#comment-1097773">
			January 6, 2014 at 9:22 am</a>		</div>

		<p>&gt; I found out that PWSTR is basically TCHAR*, so it depends on UNICODE being defined</p>
<p>Hmm&#8230; there seems to be some confusion about how L&quot;&quot; and &quot;&quot; etc. work.</p>
<p>printf always uses &quot;&#8230;&quot;; this is always ANSI. wprintf always uses L&quot;&#8230;&quot;; this is always Unicode.</p>
<p>_tprintf is either printf or wprintf, depending on whether UNICODE/_UNICODE is defined. This always uses TEXT(&quot;&#8230;&quot;).</p>
<p>Consider the following:</p>
<p>printf(&quot;foo&quot;); // OK</p>
<p>wprintf(L&quot;foo&quot;); // OK</p>
<p>_tprintf(TEXT(&quot;foo&quot;)); // OK</p>
<p>The other six possibilities (e.g. wprintf(TEXT(&quot;foo&quot;))) are all either compiler or stylistic errors.</p>
<p>%ls corresponds to a value which is a Unicode string; %hs corresponds to a value which is an ANSI string. %s by itself corresponds to a string **which is of the same type as the format string itself** (regardless of whether UNICODE/_UNICODE is defined.)</p>
<p>Let us suppose that the string we are trying to print contains some non-ANSI characters, e.g.: Contosó. Consider the following:</p>
<p>printf(&quot;%s&quot;, &quot;foo&quot;); // OK; %s in an ANSI format string means an ANSI value</p>
<p>printf(&quot;%hs&quot;, &quot;foo&quot;); // OK; %hs always means an ANSI value</p>
<p>printf(&quot;%ls&quot;, L&quot;foo&quot;); // OK; %ls always means an ANSI value</p>
<p>printf(&quot;%ls&quot;, L&quot;Contosó&quot;); // Iffy; prints &quot;Contoso&quot;, Unicode value is downconverted to ANSI format string</p>
<p>wprintf(L&quot;%s&quot;, L&quot;foo&quot;); // OK</p>
<p>wprintf(L&quot;%s&quot;, L&quot;foo&quot;); // OK</p>
<p>wprintf(L&quot;%hs&quot;, &quot;foo&quot;); // OK</p>
<p>wprintf(L&quot;%ls&quot;, L&quot;Contosó&quot;); // OK (prints Contosó)</p>
<p>So I think Raymond&#39;s printf(&quot;%ls&quot;, (LPCWSTR)GetPropertyValue(&#8230;)) is iffy, because any Unicode data in the property value would be downconverted to ANSI. I would prefer wprintf(L&quot;%ls&quot;, (LPCWSTR)GetPropertyValue(&#8230;)).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1097793">
				<div id="div-comment-1097793" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">SI</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140106-00/?p=2163#comment-1097793">
			January 6, 2014 at 9:42 am</a>		</div>

		<p>I overlooked the l in the %ls, that makes much more sense than the PWSTR forcing the compiler to use the char* operator due to current mode. But if we are converting it down to ansi anyhow, why not use the const char* operator present in the bstr_t class, which caches the copy?</p>
<div class="post">[<em>Because I didn&#39;t know about that operator. I had always treated _bstr_t as simply a wrapper around a BSTR without any added functionality. -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-wndsks even thread-even depth-1" id="comment-1097893">
				<div id="div-comment-1097893" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/skSdnW' rel='external nofollow' class='url'>skSdnW</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140106-00/?p=2163#comment-1097893">
			January 6, 2014 at 8:16 pm</a>		</div>

		<p>@Maurits [MSFT]: wprintf(L&quot;%s&quot;, L&quot;foo&quot;); // OK </p>
<p>This will not work on a POSIX system, %s is _always_ char* there. The MS implementation is much less painful to work with and allows both TCHAR types to build from the same source.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1097923">
				<div id="div-comment-1097923" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">640k</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140106-00/?p=2163#comment-1097923">
			January 6, 2014 at 9:04 pm</a>		</div>

		<p>@skSdnW: If you want portable code, or escape bloated COM, you have to use DMI. Then POSIX may be relevant.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1097943">
				<div id="div-comment-1097943" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">ulric</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140106-00/?p=2163#comment-1097943">
			January 7, 2014 at 1:22 am</a>		</div>

		<p>ho, the static cast is necessary not because of wchar/tchar/char issues (BSTR is an OLESTR is a WCHAR always ) but because printf is a variable parameter list and the conversion for bstr_t to use to push on the stack is ambiguous. &nbsp;would not have been a problem if it were a BSTR directly</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1098003">
				<div id="div-comment-1098003" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Deduplicator</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140106-00/?p=2163#comment-1098003">
			January 7, 2014 at 5:07 am</a>		</div>

		<p>@skSdnW: Well, there&#39;s little reason to fiddle with UTF16 on POSIX systems. UTF8 is the variable byte encoding of choice, and UTF32 handles full codepoints, so no need to take any compromise solution which is neither ascii-compatible nor fixed width. But if you really have to, you can use the proper defines&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1098053">
				<div id="div-comment-1098053" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">ErikF</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140106-00/?p=2163#comment-1098053">
			January 7, 2014 at 7:24 am</a>		</div>

		<p>@J. Peterson: If you only need to retrieve WMI data, use the right tool for the job (PowerShell)! In other news, you can write a Windows program in assembly code, but it will take many more lines of code than C.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1098073">
				<div id="div-comment-1098073" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">laonianren</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140106-00/?p=2163#comment-1098073">
			January 7, 2014 at 7:50 am</a>		</div>

		<p>This is mildly off-topic.</p>
<p>WMI CIM Studio (which lets you browse and modify WMI objects) is implemented as a web page containing ActiveX controls. &nbsp;The only application that can host this (as far as I know) is Internet Explorer. &nbsp;Unfortunately, it has stopped working in IE 11.</p>
<p>Does anyone know either a) how to get it to work or b) an alternative WMI browser?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1098133">
				<div id="div-comment-1098133" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140106-00/?p=2163#comment-1098133">
			January 7, 2014 at 9:41 am</a>		</div>

		<p>@laonianren: Host the ActiveX browser control in a vb6 app and use that to load the page.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1098153">
				<div id="div-comment-1098153" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">T</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140106-00/?p=2163#comment-1098153">
			January 7, 2014 at 10:20 am</a>		</div>

		<p>This is pretty neat, though, is it not optimistic to expect a PC to have a manufacturer? So many PCs are built by their owners anyway! It returns this on my system:</p>
<p>Name = T-PC</p>
<p>Manufacturer = To Be Filled By O.E.M.</p>
<p>Model = To Be Filled By O.E.M.</p>
<div class="post">[<em>The people who ask this question are typically IT professionals who want to inventory all the computers in their company. Those computers are unlikely to be home-built. -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1098163">
				<div id="div-comment-1098163" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">T</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140106-00/?p=2163#comment-1098163">
			January 7, 2014 at 10:51 am</a>		</div>

		<p>@Raymond, that makes sense! Next part: how to modify this information :).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-wndsks odd alt thread-odd thread-alt depth-1" id="comment-1098173">
				<div id="div-comment-1098173" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/skSdnW' rel='external nofollow' class='url'>skSdnW</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140106-00/?p=2163#comment-1098173">
			January 7, 2014 at 11:36 am</a>		</div>

		<p>@Deduplicator: Who said anything about UTF16? wchar_t is usually 32bit on other systems.</p>
<p>The point is, working with printf functions where %s does not match the type of the format string is annoying if the code is going to be used on Windows and POSIX&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1098223">
				<div id="div-comment-1098223" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Myria</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140106-00/?p=2163#comment-1098223">
			January 7, 2014 at 3:05 pm</a>		</div>

		<p>While we&#39;re on the subject of Unicode, how about also using wmain instead of main? =)</p>
<p>extern &quot;C&quot; int __cdecl wmain(int argc, wchar_t **argv, wchar_t **envp)</p>
<div class="post">[<em>The program takes no command line arguments. Who cares! (Don&#39;t forget people: Little Program.) -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1098233">
				<div id="div-comment-1098233" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Engywuck</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140106-00/?p=2163#comment-1098233">
			January 8, 2014 at 12:06 am</a>		</div>

		<p>Well, we have seven &quot;To Be Filled By O.E.M.&quot; for both Manufacturer and Model plus 5 for only Model (there Manufacturer = Mainboard Manufacturer). All bought at a local vendor (not everyone buys dell-only ;-))</p>
<p>But it sure would be nice if at least the big ones could get their names consistent: &quot;HP&quot;, &quot;Hewlett-Packard&quot;, &quot;Hewlett-Packard Company&quot;, the same for Dell, Siemens etc. So you need an additional step consolidating anyway, plus regular maintenance when they come up with something different.</p>
<p>To the program: just exec() wmiq and parse the result string. No need to handle wmi yourself! ;-)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-fredericmagnyf even thread-even depth-1" id="comment-1098263">
				<div id="div-comment-1098263" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Medinoc' rel='external nofollow' class='url'>Medinoc</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140106-00/?p=2163#comment-1098263">
			January 8, 2014 at 7:50 am</a>		</div>

		<p>@skSdnW: The worst part under POSIX (or really, under the ISO/IEC C standard) is not that %s is &quot;always ANSI, all the time&quot; (equivalent to %hs). The worst is that there is NO WAY AT ALL to specify a string argument &quot;The same width as the function&quot;!</p>
<p>Quite frankly, I think that part of the C standard is dumb and I was flabbergasted when I discovered it. The Windows way is much easier to use (especially with the late addition to the C++ standard that says L&quot;blah&quot; &quot;blah&quot; is no longer a string width mismatch, invaluable when working with macros).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1098313">
				<div id="div-comment-1098313" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140106-00/?p=2163#comment-1098313">
			January 8, 2014 at 9:30 am</a>		</div>

		<p>[It will probably take you even more lines of code to get the number of unread messages in the user&#39;s Yahoo inbox, and that&#39;s just a 32-bit integer! -Raymond]</p>
<p>I&#39;m pretty sure that&#39;s 6 lines.</p>
<p>int r;</p>
<p>char buf[4096];</p>
<p>snprintf(buf, 4096, &quot;wget -O &#8211; <a href="https://" rel="nofollow">https://</a>&#8230; &quot;, username, stored_password);</p>
<p>FILE *f = popen(buf, &quot;r&quot;);</p>
<p>fscanf(f, &quot;%d&quot;, &amp;r);</p>
<p>return r;</p>
<div class="post">[<em>I think it&#39;s more complicated than that nowadays. And isn&#39;t forking a wget a bit of a cheat? If not, then I can do it in one line of C++: system(&quot;wmic computersystem get name, manufacturer, model&quot;); &lang;drops mic&rang; -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1098393">
				<div id="div-comment-1098393" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Gabe</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140106-00/?p=2163#comment-1098393">
			January 8, 2014 at 1:00 pm</a>		</div>

		<p>Joshua: I&#39;m pretty sure you must first log in with OAuth, then parse the response, and send the appropriate cookie in your inbox query. The most complicated part is probably parsing the response to the authentication request.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1098423">
				<div id="div-comment-1098423" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140106-00/?p=2163#comment-1098423">
			January 8, 2014 at 1:25 pm</a>		</div>

		<p>I didn&#39;t think I was going to answer, but Gabe did so I will. The last time I looked up the call for any such thing OAuth didn&#39;t even exist.</p>
<p>[If not, then I can do it in one line of C++: system(&quot;wmic computersystem get name, manufacturer, model&quot;); -Raymond]</p>
<p>The only reason I think you cheated is you didn&#39;t parse the result.</p>
<div class="post">[<em>I would think that invoking an external program to do the heavy lifting violates the spirit of the phrase &quot;in C++&quot;. -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1098433">
				<div id="div-comment-1098433" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Myria</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140106-00/?p=2163#comment-1098433">
			January 8, 2014 at 2:36 pm</a>		</div>

		<p>[The program takes no command line arguments. Who cares! (Don&#39;t forget people: Little Program.) -Raymond]</p>
<p>Butbutbut it saves 512 bytes and starts up unnoticeably faster!&#8230;&#8230; =)</p>
<p>I just make it a habit to use wmain / wWinMain so I don&#39;t mess up for real programs. =^-^=</p>
<p>C:Projectstemptests&gt;echo extern &quot;C&quot; int __cdecl main() { return 0; } &gt; unicode.cpp</p>
<p>C:Projectstemptests&gt;cl /MT /Ox /nologo unicode.cpp &gt; nul</p>
<p>C:Projectstemptests&gt;ls -l unicode.exe</p>
<p>-rwxrwxrwx &nbsp; 1 user &nbsp; &nbsp; group &nbsp; &nbsp; &nbsp; 36864 Jan &nbsp;8 14:33 unicode.exe</p>
<p>C:Projectstemptests&gt;echo extern &quot;C&quot; int __cdecl wmain() { return 0; } &gt; unicode.cpp</p>
<p>C:Projectstemptests&gt;cl /MT /Ox /nologo unicode.cpp &gt; nul</p>
<p>C:Projectstemptests&gt;ls -l unicode.exe</p>
<p>-rwxrwxrwx &nbsp; 1 user &nbsp; &nbsp; group &nbsp; &nbsp; &nbsp; 36352 Jan &nbsp;8 14:34 unicode.exe</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1098443">
				<div id="div-comment-1098443" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Total spirit violator</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140106-00/?p=2163#comment-1098443">
			January 8, 2014 at 4:07 pm</a>		</div>

		<p>int main() {</p>
<p> &nbsp; &nbsp;std::cout &lt;&lt; &quot;Plz run yr favourite Yahoo! mail reader and enter the number of Inbox messages, followed by the Enter key: &quot;;</p>
<p> &nbsp; &nbsp;char buf[4]; gets(buf); std::cout &lt;&lt; &quot;Result: &quot; &lt;&lt; buf &lt;&lt; std::endl;</p>
<p>}</p>
<p>Note that the first line can be omitted by taking advantage of long file name support: name the program the same as the intro line (remove/replace unsupported characters) and its usage is self-documenting. Additionally the program becomes even more flexible and re-usable since the name of the program (or shortcuts to it) can be changed to reflect the desired task. Finally, this snippet does not include external code executed and human motor/brain activity from computer start to user entry.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1098773">
				<div id="div-comment-1098773" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Evan</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140106-00/?p=2163#comment-1098773">
			January 9, 2014 at 5:55 pm</a>		</div>

		<p>@Total spirit violator:</p>
<p>I like (1) the use of gets, one of the worst functions ever; (2) the assumption that the number of inbox messages is at most 3 digits (definitely not true for many people); (3) the juxtaposition of gets with c++ iostreams.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1098943">
				<div id="div-comment-1098943" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Gabe</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140106-00/?p=2163#comment-1098943">
			January 10, 2014 at 8:46 am</a>		</div>

		<p>Evan: Sure, 3 chars are allocated to the buffer, but what&#39;s really going to happen if there are more? Crash on exit? At that point the program has already done its job.</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>