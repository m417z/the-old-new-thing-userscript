<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (63)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-594373">
				<div id="div-comment-594373" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">FusionGuy</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080129-00/?p=23663#comment-594373">
			January 29, 2008 at 10:44 am</a>		</div>

		<p>Yet another great example as to the extent Microsoft is willing to go to maintain backward compatibility. &nbsp;Whoa.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-594383">
				<div id="div-comment-594383" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Spike</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080129-00/?p=23663#comment-594383">
			January 29, 2008 at 11:20 am</a>		</div>

		<p>FusionGuy&gt; And the extent some developers will go to to make their applications as fragile as possible.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-594393">
				<div id="div-comment-594393" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Jack Mathews</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080129-00/?p=23663#comment-594393">
			January 29, 2008 at 11:25 am</a>		</div>

		<p>&quot;And the extent some developers will go to to make their applications as fragile as possible.&quot;</p>
<p>Well when you allow any application to do anything to any other applications&#8217; windows, you&#8217;re kind of asking for this sort of thing. &nbsp;Give people an inch, they take a mile.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-594413">
				<div id="div-comment-594413" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">MS</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080129-00/?p=23663#comment-594413">
			January 29, 2008 at 12:16 pm</a>		</div>

		<p>I will admit to spelunking into another application&#8217;s internals for very specific reasons. &nbsp;As far as I could tell at the time, there was really no way to achieve what I wanted to do otherwise. &nbsp;I did make every effort to ensure that the code that crawled through the other application was as robust as possible. &nbsp;I would love to revisit this code and try to find another path, but I cannot think of how I would do it differently.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-594433">
				<div id="div-comment-594433" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joe Bruno</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080129-00/?p=23663#comment-594433">
			January 29, 2008 at 12:26 pm</a>		</div>

		<p>This all leads to an interesting &quot;behavior by design&quot; that I came across recently. If you don&#8217;t use anything than the standard window controls, then you&#8217;re not using COMCTL32.DLL and you don&#8217;t need to call InitCommonControls.</p>
<p>BUT &#8211; if you use a manifest to say &quot;please use the themed appearance&quot;, then although you aren&#8217;t using anything from COMCTL32.DLL, you still need to call InitCommonControls. If you don&#8217;t, then all your dialog boxes will fail to appear.</p>
<p>This is interesting for two reasons. First of all, it&#8217;s a way to make the following Hello World program fail:</p>
<p>int &#8230; WinMain(&#8230;)</p>
<p>{return MessageBox(NULL,&quot;Hello World&quot;,NULL,MB_TASKMODAL);</p>
<p>};</p>
<p>Because the problem affects every dialog box, even the standard MessageBox ones, if you use the &quot;modern&quot; manifest then this program will do nothing and say nothing.</p>
<p>The second interesting thing is that I&#8217;m sure that this problem didn&#8217;t originally exist in Windows XP. I started getting reports of it so late that I think that the &quot;behavior by design&quot; must have been added in a later update.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-594443">
				<div id="div-comment-594443" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Koro</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080129-00/?p=23663#comment-594443">
			January 29, 2008 at 12:41 pm</a>		</div>

		<p>A little precision on my previous comment:</p>
<p>I was more specifically talking about the controls in COMCTL32 than those in USER, because I don&#8217;t think such a low-level component as USER could have a direct dependency on UxTheme, but, something more in the lines of RegisterUserApiHook.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-594453">
				<div id="div-comment-594453" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ben Cooke</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080129-00/?p=23663#comment-594453">
			January 29, 2008 at 1:07 pm</a>		</div>

		<p>Given the problems that occur when changing the UI of bits of the shell, I&#8217;m left to wonder why Windows XP switched from having the taskbar be a tab bar to being a toolbar. The two behave in much the same way, but it broke applications that wanted to screw with the taskbar.</p>
<p>I can only assume that this had something to do with the &quot;Group Windows By What Executable Created Them&quot; feature. I find that feature immensely irritating, but I get the feeling that I&#8217;m the only one.</p>
<p>As silly as it might sound, I used to use a simple little utility that added some extra functionality to the task bar. This program didn&#8217;t work for Windows XP, so this was a deal-breaker for me and I stayed on Windows 2000 for many years. I&#8217;m told that it&#8217;s been updated to work with Windows XP&#8217;s taskbar now, but I don&#8217;t use Windows anymore so I&#8217;ve not verified this for myself.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-594463">
				<div id="div-comment-594463" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">John</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080129-00/?p=23663#comment-594463">
			January 29, 2008 at 1:10 pm</a>		</div>

		<p>Why is it that some older programs do get the new visual look?</p>
<p>Everytime I read about the way visual styles are implemented it always seems that applications only get it if they ask for it, yet some old apps manage it (not to mention those that sort-of manage it, with a mismash of both styles of controls).</p>
<p>Could it be that some runtime library that they use was updated in XP and enables it?</p>
<p>The same sort of things used to happen in Windows 95 (and probably still does, it&#8217;s been a while since I ran a 16-bit app), it seemed totally random whether a 16-bit app would get 3.x or 95 style controls or a mixture of the two.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-594473">
				<div id="div-comment-594473" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">WikiServerGuy</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080129-00/?p=23663#comment-594473">
			January 29, 2008 at 1:14 pm</a>		</div>

		<p>May be sad, but XP seems like the good old days now. In modern time (i.e. Vista) you have to do themed calls and various hacks to get a common-looking interface similar to IE or Explorer.</p>
<p>Common controls seem depreciated with all the apps using varying menu strips search boxes and more, glass is an absolute beast, and a paradigm shift towards per-app interfaces instead of using common elements. Heck, to even get the common shell font you have to do in-place DLGTEMPLATE hacks, as &quot;MS Shell Dlg&quot; and friends no longer work!</p>
<p>I feel like an old fogey :D.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-jamesnt odd alt thread-odd thread-alt depth-1" id="comment-594493">
				<div id="div-comment-594493" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/JamesNT' rel='external nofollow' class='url'>JamesNT</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080129-00/?p=23663#comment-594493">
			January 29, 2008 at 2:13 pm</a>		</div>

		<p>You&#8217;ll never in a million years see operating systems like Mac OSX and Linux strive for this kind of back compat.</p>
<p>No wonder MS is number one.</p>
<p>JamesNT</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-594503">
				<div id="div-comment-594503" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://jamesnt.wordpress.com/2008/01/30/history-of-the-windows-xp-common-controls/' rel='external nofollow' class='url'>History of the Windows XP Common Controls &laquo; Surviving Technology</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080129-00/?p=23663#comment-594503">
			January 29, 2008 at 2:15 pm</a>		</div>

		<p>PingBack from <a rel="nofollow" target="_new" href="http://jamesnt.wordpress.com/2008/01/30/history-of-the-windows-xp-common-controls/" rel="nofollow">http://jamesnt.wordpress.com/2008/01/30/history-of-the-windows-xp-common-controls/</a></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-594513">
				<div id="div-comment-594513" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ulric</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080129-00/?p=23663#comment-594513">
			January 29, 2008 at 2:22 pm</a>		</div>

		<blockquote><p>
  a paradigm shift towards per-app</p>
<p>  interfaces instead of using common elements
</p></blockquote>
<p>Whether it&#8217;s true or not, I get the same feeling. &nbsp;I believe this is a detriment to Windows and it&#8217;s advantage over other OS. &nbsp;I&#8217;m baffled by a lot of the UI in Vista.. there are multiple versions of the File Open dialog, some message boxes have buttons for choices, others &nbsp;use the new vertical list of &quot;-&gt;&quot; (that don&#8217;t actually look push-able).</p>
<p>I&#8217;m confused with where this is going. &nbsp;Are the OK/Cancel buttons supposed to be on the bottom, on the right, centered, or aligned right..</p>
<p>Any programmer that&#8217;s trying to copy the built-in look won&#8217;t know where to look, which version to follow. &nbsp;Office has its own thing, too.</p>
<p>Another example, under Vista our app&#8217;s message boxes look &#8216;the old way&#8217; but the buttons are aligned right instead of centered. &nbsp;So.. it&#8217;s inconsistent with other dialog.</p>
<p>Anyways, a manager over here ask that we support the &#8216;standard open file dialog&#8217;. &nbsp;I showed him 4 different Open File dialog in Windows, including the compact one that comes up in MSPaint/Notepad, which an expand button. &nbsp;It&#8217;s an obvious direct clone of the one in OS X. &nbsp;&quot;Which one do you want?&quot; &nbsp;The answer was some XP variation. &nbsp;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-594523">
				<div id="div-comment-594523" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.divelements.co.uk' rel='external nofollow' class='url'>divil5000@hotmail.com</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080129-00/?p=23663#comment-594523">
			January 29, 2008 at 3:13 pm</a>		</div>

		<p>So at what point did controls like Button and CheckBox move from User into the common controls?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-594533">
				<div id="div-comment-594533" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Bob</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080129-00/?p=23663#comment-594533">
			January 29, 2008 at 3:33 pm</a>		</div>

		<p>There &quot;should&quot; have been a great deal more safety checks and a much better design, so that the issue could never arise in the first place. And while it&#8217;s easy to say so, it&#8217;s a lot harder to build a time machine and take a modern PC back to 1982 so that they could have actually written a perfect OS that benefits from the last 20-odd years of development, and had the resources to actually run it.</p>
<p>And Ben, you&#8217;re not the only one who finds that &quot;feature&quot; irritating, but (a) it can be turned off and (b) various Linuxes were doing it well before XP came out, and (c) some people do actually find it useful.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-594543">
				<div id="div-comment-594543" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Triangle</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080129-00/?p=23663#comment-594543">
			January 29, 2008 at 3:33 pm</a>		</div>

		<p>[It&#8217;s &#8220;only&#8221; the visual look&#8221;? I&#8217;m sure you can use your imagination to come up with ways changing the visual look of a button could totally screw up a program that relied on the previous visual look. 99% of programs are just fine with it, but it&#8217;s that last 1% that is the deal-breaker. -Raymond]</p>
<p>1: The only case I can think of is something uses owner drawing to customize the way the button looks, which wouldn&#8217;t exactly break, just look a bit different.</p>
<p>2: Why didn&#8217;t you just shim the 1%, so that the people who put in the time to make it work properly benefit ?</p>
<div class=post>[<i>&#8220;Look a bit different&#8221; counts as breakage if the button becomes unusable as a result. (Actually, it&#8217;s still breakage if the button looks bad. The customer who&#8217;s using the program won&#8217;t be happy that all the buttons in Program X show up in a weird mishmash of colors.) And 1% is an unacceptably high shim rate. And having a shim doesn&#8217;t help when Random Vertical Market Application That Is Not In The App Compat Library stops working, since it won&#8217;t be in the shim database. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-594553">
				<div id="div-comment-594553" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Igor Levicki</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080129-00/?p=23663#comment-594553">
			January 29, 2008 at 3:38 pm</a>		</div>

		<p>I have always been annoyed with the fact that computers (actually software) cannot distinguish two things with the same name.</p>
<p>Why on Earth you don&#8217;t start using those GUIDs as the index/key? Then you wouldn&#8217;t have to worry about name collisions anywhere, file systems included.</p>
<div class=post>[<i>Please go back and read the article again. It already explains why your proposal doesn&#8217;t work. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-594563">
				<div id="div-comment-594563" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">WikiServerGuy</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080129-00/?p=23663#comment-594563">
			January 29, 2008 at 3:47 pm</a>		</div>

		<p>Unfortunately, those 1% tend to include most popular commercial apps.</p>
<p>For example, take the messagebox (it isn&#8217;t really a common control but its close enough). A lot of people like to subclass the thing and add UI elements to it, as it does a lot of neat little things transparently that are difficult to get exactly right, and you can reuse common code etc..</p>
<p>Now, this in some cases doesn&#8217;t cause a problem &#8211; but lets say you put a checkbox or something between the buttons and messagetext. It is ok from 95-XP or so but vista introduces another window in the middle that might end up hiding it. Not a biggie, unless you depended on the user to do something in that case &#8211; then you end up getting screwed and your program no longer works.</p>
<p>This is just one example &#8211; more common ones are flicker workarounds for issues in Windows itself, for example. When they make a new version and make drastic changes it might even break that workaround.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-594573">
				<div id="div-comment-594573" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">A Bad Coder</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080129-00/?p=23663#comment-594573">
			January 29, 2008 at 4:21 pm</a>		</div>

		<p>Bob: while it&#8217;s easy to say so, it&#8217;s a lot harder to build a time machine and take a modern PC back to 1982</p>
<p>Actually it is easy to build a time machine <em>for apps</em> to take them &#8216;back&#8217; to the time they were written, to the system environment they call home. &nbsp;This is the approach Apple takes to compatibility.</p>
<p>Linux chooses to bring the apps &#8216;forward&#8217; into the modern environment. &nbsp;This can be done because any apps that matter on linux are open source.</p>
<p>Microsoft chooses to make their os look different depending on what spot you are standing in or what mood you are in &#8212; like the optical illusion where the picture is both of young woman and the old lady. &nbsp;This approach cannot be maintained for long.</p>
<div class=post>[<i>I dunno, 25 years is pretty long. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-594583">
				<div id="div-comment-594583" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Tom</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080129-00/?p=23663#comment-594583">
			January 29, 2008 at 4:42 pm</a>		</div>

		<p>Perhaps it&#8217;s just me, but there are so many APIs in Windows for doing things &#8220;the right way&#8221; that I find it hard to believe anybody would resort to trolling through Window hierarchies to fake pushing buttons. &nbsp;I know that it happens &#8212; as Raymond likes to point out &#8212; but it just seems that there should be something in the programmer&#8217;s head that says &#8220;whoa! There&#8217;s gotta be a better way!&#8221; when they start writing code like that.</p>
<div class=post>[<i>Hey, Tom, maybe you could have a chat with commenter <a href="http://blogs.msdn.com/oldnewthing/archive/2008/01/29/7294949.aspx#7308585" rel="nofollow">MS</a>. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-594593">
				<div id="div-comment-594593" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Koro</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080129-00/?p=23663#comment-594593">
			January 29, 2008 at 4:56 pm</a>		</div>

		<p>[&#8220;Look a bit different&#8221; counts as breakage if the button becomes unusable as a result.]</p>
<p>Usually, either the button is completely redrawn (using ownerdraw), in which case THAT button would look classic amongst the other skinned ones, or either the app coder is really bad and somehow subclassed the button, and half-handles the WM_PAINT case (letting part of the original background shine through).</p>
<p>But in both cases, at worse it would look ugly, but still be usable.</p>
<p>The only way this could break was if the app somehow reads the screen (using GetPixel or BitBlt from a screen DC) to locate the button, but THAT is far-fetched enough (I still bet some crappy in-house VB app written by an intern does that somewhere).</p>
<p>Do you have some specific incompatibility scenarios in mind that I did not think of?</p>
<div class=post>[<i>An app that looks uglier on Windows N+1 than it did on Windows N counts as an app that fails the app compat criteria. Maybe you think it&#8217;s acceptable, but say that to the user who has to use that app every day. (And your &#8220;far-fetched&#8221; scenario isn&#8217;t all that far fetched.) -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-594603">
				<div id="div-comment-594603" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Eff Five</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080129-00/?p=23663#comment-594603">
			January 29, 2008 at 5:50 pm</a>		</div>

		<p>Ok I&#8217;ll bite, what are the &quot;nasty stunts&quot; that the app that you linked to pulled?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-dean-harding odd alt thread-odd thread-alt depth-1" id="comment-594613">
				<div id="div-comment-594613" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Dean+Harding' rel='external nofollow' class='url'>Dean Harding</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080129-00/?p=23663#comment-594613">
			January 29, 2008 at 6:55 pm</a>		</div>

		<p>Eff Five: Looks to me like this &quot;RegEdit+&quot; just hooks into the regular regedit and disables/replaces various functions. The only way that could be done is by spelunking in regedit&#8217;s private data structures and stuff. Seems pretty &quot;nasty&quot; to me&#8230;</p>
<p>A Bad Coder: have you actually used the compatibility layer in Mac OS? In my opinion, it&#8217;s horrible and I couldn&#8217;t wait until the vendor updated the software to work without it. I don&#8217;t believe it&#8217;s a very nice way to treat your software developers if you&#8217;re forcing them to re-write their code every 5 years. See, for example, <a rel="nofollow" target="_new" href="http://www.joelonsoftware.com/articles/fog0000000069.html" rel="nofollow">http://www.joelonsoftware.com/articles/fog0000000069.html</a></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-594623">
				<div id="div-comment-594623" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Skip</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080129-00/?p=23663#comment-594623">
			January 29, 2008 at 7:31 pm</a>		</div>

		<p>Well sometimes spelunking like this is the only way to get something done. &nbsp;For example, the most recent time I did something like this, is the brain-dead way that Visual SourceSafe 2005 broke compatibility with previous versions in handling files with local modifications.</p>
<p>In previous versions, when you did an update on a tree and it found a file with local modifications you were presented with a dialog with options for &#8216;leave this file alone&#8217;, &#8216;check out and merge&#8217; or &#8216;discard changes&#8217;. &nbsp; In CSS2005, it uses the exact same dialog, but the &#8216;leave this file alone&#8217; option is disabled.</p>
<p>Now, there are a myriad of reasons to need this option. &nbsp;If you&#8217;ve got concurrent checkouts disabled due to the high risk of damage of projects and solutions, you may have done some local modifications you&#8217;re not ready to deal with yet. &nbsp;Or you may have local configuration files that you explicitly never want to check in, because they have your specific setup info in them. &nbsp; Or you may have files that you need to not have the readonly bit set on them, even if they&#8217;re not going to be updated in the normal course of things on your box. &nbsp; DB files are that way frequently, when deploying them to CE devices.</p>
<p>So the solution? &nbsp; Use FindWindow() to find the radiobutton, and EnableWindow() to enable it. &nbsp;Problem solved. &nbsp; Now I&#8217;m sure later versions will break this, and if I&#8217;m forced to move to one of them, I&#8217;ll just have to find a different solution.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-594633">
				<div id="div-comment-594633" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">MS</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080129-00/?p=23663#comment-594633">
			January 29, 2008 at 7:43 pm</a>		</div>

		<p>&quot;but it just seems that there should be something in the programmer&#8217;s head that says &quot;whoa! There&#8217;s gotta be a better way!&quot; when they start writing code like that.&quot;</p>
<p>&quot;[Hey, Tom, maybe you could have a chat with commenter MS. -Raymond]&quot;</p>
<p>I sincerely wish there was a better way. &nbsp;Getting into the details would take too long, but I exhausted every other means of getting the piece of information needed. &nbsp;Maybe I missed something, or maybe the latest version of the APIs has better options for doing what I need to do.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-594643">
				<div id="div-comment-594643" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Skip</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080129-00/?p=23663#comment-594643">
			January 29, 2008 at 7:56 pm</a>		</div>

		<p>I do think, though, that the main thing is, as a programmer, when you do something like this you should realize &quot;not supported, it will probably break on some update&quot;. &nbsp;I certainly do. &nbsp; And I&#8217;m not sure I&#8217;d ship code that did this, but I certainly have no problems doing it in internal tools I maintain.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-594403">
				<div id="div-comment-594403" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Adrian</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080129-00/?p=23663#comment-594403">
			January 29, 2008 at 12:10 pm</a>		</div>

		<p>Yup, great lengths for backward compatibility. &nbsp;It&#8217;s a herculean effort and an impressive acheivement.</p>
<p>As an ISV, though, it&#8217;s frustrating that our programs don&#8217;t automatically benefit from *forward* compatability. &nbsp;When the look-and-feel is overhauled and improved, we need to produce a new version with a couple extra lines in the manifest. &nbsp;Because MSFT has to compromise to keep fragile programs running, robust programs lose out on the benefits of the new system.</p>
<p>A more recent example is the visual scaling in Vista for high DPI displays. &nbsp;Vista assumes by default the programs didn&#8217;t follow the rules and write DPI-agnostic layout code. &nbsp;And, unless the program is updated with an I-really-do-the-right-thing flag, they get visually degraded on high DPI displays.</p>
<p>I understand why Microsoft makes these choices, and I don&#8217;t blame them. &nbsp;It&#8217;s the fault of vendors who don&#8217;t pay their taxes. &nbsp;But it sure makes it hard to build lasting-value software.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-594423">
				<div id="div-comment-594423" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Koro</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080129-00/?p=23663#comment-594423">
			January 29, 2008 at 12:23 pm</a>		</div>

		<p>Thanks for clearing that up Raymond, as I always wondered why it was that way (and have been saddened about the lack of forward compatibility too).</p>
<p>However, one comes to wonder, why wasn&#8217;t it possible to add the skinning code to the existing old controls instead of coding brand new ones? After all, it&#8217;s only the visual look (and some response to mouse movements, for hover notification) that changes, so how could *that* break programs that much? Mac OS X does it with OS9 programs, as I remember, and they don&#8217;t break.</p>
<p>Although the manifest way has one advantage over the UXCTRL DLL way, that it&#8217;s easier to res-edit the old .exe to make them use CommCtrl v6 than the hex-edit their EXEs to change their window class strings in all place (and with longer strings at that)</p>
<div class=post>[<i>It&#8217;s &#8220;only&#8221; the visual look&#8221;? I&#8217;m sure you can use your imagination to come up with ways changing the visual look of a button could totally screw up a program that relied on the previous visual look. 99% of programs are just fine with it, but it&#8217;s that last 1% that is the deal-breaker. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-xepol odd alt thread-odd thread-alt depth-1" id="comment-594653">
				<div id="div-comment-594653" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Xepol' rel='external nofollow' class='url'>Xepol</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080129-00/?p=23663#comment-594653">
			January 30, 2008 at 12:03 am</a>		</div>

		<p>Frankly, I get a little sick of hearing about how the design of Windows is continually compromised to support other products which violate good design rules (and often explicit warnings and tons of advanced notice).</p>
<p>Won&#8217;t someone please get some sanity, and say &quot;screw it, its broke because of how THEY wrote it, we warned them, its their fault, they have to fix it.&quot; ???? PLEASE?!?!? Heck, just list the identified apps in the incompatible apps list and be done with it.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-594673">
				<div id="div-comment-594673" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.crazyontap.com' rel='external nofollow' class='url'>AlmostAlive</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080129-00/?p=23663#comment-594673">
			January 30, 2008 at 2:23 am</a>		</div>

		<p>I wonder how many big commercial applications do the sorts of crazy things that Raymond is talking about. &nbsp;His example is something that messes with Explorer &#8212; that doesn&#8217;t sound like an app that my business would fail with if it doesn&#8217;t run. &nbsp;It sounds more like a utility.</p>
<p>But my question is, has the Internet at all changed the situation? &nbsp;Right now probably half my applications check for new versions automatically (and half of those will update themselves with a single click). &nbsp;When a new version of Windows comes out, there&#8217;s no shortage of new versions of utilities available to download quickly and easily.</p>
<p>Does that change the situation at all now from what it was a few years ago?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-594693">
				<div id="div-comment-594693" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Aaargh!</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080129-00/?p=23663#comment-594693">
			January 30, 2008 at 4:45 am</a>		</div>

		<p>&#8220;[I dunno, 25 years is pretty long. -Raymond]&#8221;</p>
<p>You seriously think that 25 years is &#8216;pretty long&#8217; ? And to say it has been working for all that time. Ok, most apps still work because of this, but the OS is a mess. The win32 API is horribly complex, most functions take a gazillion parameters half of which don&#8217;t do anything anymore or have to be set to some magic value to keep it working. (See earlier articles on this blog for examples).</p>
<p>This stuff must be unmaintainable by now, just look at Vista, it took more than 5 years to produce it, even with the amount of resources that MS has at it&#8217;s disposal. And the end result is disappointing to say the least. 5 years of development and hardly anything to show for it. How much of those 5 years went in to keeping stuff working instead of fixing the OS ?</p>
<div class="post">[<i>If you say &#8220;This operating system won&#8217;t last long&#8221; and it lasts 25 years, then I ask you to provide your definition of &#8220;long&#8221;. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-594703">
				<div id="div-comment-594703" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">cmpl</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080129-00/?p=23663#comment-594703">
			January 30, 2008 at 5:51 am</a>		</div>

		<p>&quot;you&#8217;re not using COMCTL32.DLL and you don&#8217;t need to call InitCommonControls. [&#8230;] then all your dialog boxes will fail to appear.&quot;</p>
<p>I&#8217;ve been bitten by this too, but this behaviour changed between XPSP1 and XPSP2. But I don&#8217;t remember which one was pickier.</p>
<p>[&quot;And your &quot;far-fetched&quot; scenario isn&#8217;t all that far fetched.&quot;]</p>
<p>I too, thought that this is really the only scenario that would break and can only think of accessibility tools like screen readers (since they might want to read buttons IE which are windowless), and macro tools that automate clicks and keyboard typing.</p>
<p>Still you could get away with placing the user in control, a checkbox under an &quot;advanced&quot; tab/button along with an explanation that it can break compatibility, and off by default. But then you might have to make a group policy for it too (and perhaps just leave it at a policy), where you can do more neat stuff like keep a list of known-to-be-broken apps. But maybe that would add too much work and releasing in time was more important back then.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-madq42 odd alt thread-odd thread-alt depth-1" id="comment-594713">
				<div id="div-comment-594713" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/MadQ1' rel='external nofollow' class='url'>MadQ1</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080129-00/?p=23663#comment-594713">
			January 30, 2008 at 5:53 am</a>		</div>

		<p>I think the shell team probably saved me a lot of tedious work. I dislike the standard mouse-wheel behavior of always scrolling the focused window, so I wrote a program that intercepts mouse-wheel messages and posts them to the window under the cursor.</p>
<p>Getting this to work correctly 99% of the time was no mean feat. Had they stuck with the UxXXXX class names, the behavior inevitably would have diverged drastically from the old controls over time, which would have caused me no end of trouble. Writing the &#8220;WheelHook&#8221; has been (and still is) an interesting learning experience. Early on, I found out the hard way that RealGetWindowClass() only works properly for COMMCTL32 version 5. For version 6, it behaves the same as GetClassName(). I had to roll my own (Real)ChildWindowFromPoint(Ex) because none of those functions behave as expected all of the time. If you want to see an example of this, run CALC.EXE in scientific mode, then start Spy++ and try to use the mouse to select one of the radix, Inv or Hyp buttons.</p>
<p>Don&#8217;t even get me started on <font color="red">Product X</font>&#8216;s dialog widgets. Also, if I ever find out who on the <font color="red">Product Y</font> team thinks that it&#8217;s cool to use STATIC controls to parent other controls, he or she is going to get a serious tongue-lashing.</p>
<p>WheelHook uses a WH_KEYBOARD_LL hook, so it doesn&#8217;t require a DLL to be loaded into every process. One consequence of the SxS approach to COMCTL32 is that global sub-classing becomes a lot more difficult, because now you have to deal with activation contexts. The thread calling the DllMain() (let&#8217;s not even get into the loader-lock issue) of your sub-classing DLL may be running under a different activation context than the application&#8217;s UI thread. In other words, one thread may have loaded COMCTL32 version 5 while another thread loaded version 6. Try it &#8211; create a .NET Windows Forms application, and spin off a second thread to run your main form, except don&#8217;t call Application.EnableVisualStyles() this time (also, make sure it&#8217;s apartment-threaded.) You can use Process Explorer to confirm that two versions of COMMCTL32.DLL are loaded. But wait, there&#8217;s more! Have you checked recently how many different versions COMMCTL32.DLL are installed on your PC?</p>
<p>Yep, this also means that you have detect under which activation context your sub-classing DLL was loaded, switch activation contexts, and install your sub-class a second time. If you&#8217;ve ever wondered why the common controls on your Windows Forms application retain their old behavior after installing an application that globally sub-classes the common controls, now you know.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-594743">
				<div id="div-comment-594743" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">wtroost</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080129-00/?p=23663#comment-594743">
			January 30, 2008 at 9:27 am</a>		</div>

		<blockquote><p>
  but it just seems that there should be</p>
<p>  something in the programmer&#8217;s head that</p>
<p>  says &quot;whoa! There&#8217;s gotta be a better way!&quot;
</p></blockquote>
<p>There are many commercial software packages that can only be automated by Window messages. &nbsp;Visual Studio even has a handy utility for capturing those events (Spy++ I think.) &nbsp;If it works you can automate a lot of typing work&#8211; until the next version of the application comes out.</p>
<p>Now I have no clue why someone would automate Explorer in that way. &nbsp;But if all you know is sending Window messages&#8230; I guess you could copy a file by sending window messages to Explorer? &nbsp;Kinda funny hehe</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-594663">
				<div id="div-comment-594663" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Gabe</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080129-00/?p=23663#comment-594663">
			January 30, 2008 at 1:39 am</a>		</div>

		<p>Xepol: You do realize that Microsoft actually wants to *sell* Windows, right?</p>
<p>People don&#8217;t buy computers to run Windows; they buy computers to run Windows *apps*. If their apps don&#8217;t run on the latest version of Windows, people won&#8217;t buy it.</p>
<div class="post">[<i>Don&#8217;t waste your breath. <a href="http://blogs.msdn.com/oldnewthing/archive/2007/08/20/4470527.aspx#4489482" rel="nofollow">Xepol wasn&#8217;t convinced last time this topic came up</a>. I don&#8217;t see why this time will be any different. It&#8217;s just a rehash of an old argument for the purpose of causing trouble. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-594683">
				<div id="div-comment-594683" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Evan</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080129-00/?p=23663#comment-594683">
			January 30, 2008 at 2:30 am</a>		</div>

		<p>@Xepol: &quot;Won&#8217;t someone please get some sanity, and say &quot;screw it, its broke because of how THEY wrote it, we warned them, its their fault, &#8230;&quot;</p>
<p>There is a fundamental problem with your proposition. By denying backwards compatibility the way you are suggestion, *MS wouldn&#8217;t be punishing the companies publishing misbehaving software,* at least directly. They would be punishing the people who BUY misbehaving software. And the problem ISN&#8217;T their fault.</p>
<p>How should I, as the purchaser, know if Product X tries to hook undocumented structures, and Product Y doesn&#8217;t? And if Product X works under Windows version N but fails under Windows version N+1, depending on how important Product X is, I may stick with version N. If so, I&#8217;ll tell people that I can&#8217;t upgrade to N+1 because Product X doesn&#8217;t work. [Those are my anonymizations; I don&#8217;t have any specific examples in mind.]</p>
<p>One of the major reasons Windows is as successful as it is is because of the lengths MS goes to maintain backwards compatibility. If I need to re-purchase a chunk of my programs if I want to upgrade (or need to for other reasons) because they don&#8217;t work or don&#8217;t work as well, that lowers the bar for how easy it is to switch to, say, Mac. &quot;Oh, well, I won&#8217;t be able to run Product X on my new computer anyway; so I need to buy Product Z instead. I could buy the Mac version and switch&quot; vs. &quot;If I upgrade to Windows N+1, I can continue to use Product X. If I upgrade to a Mac, I need to buy Product Z to replace it. Option 1 is cheaper.&quot;</p>
<p>It&#8217;s an interesting question why other OSes don&#8217;t seem to have a problem with this. Is it that they take the attitude that it&#8217;s the program&#8217;s fault, and don&#8217;t support it? At least in the case of Linux this may be the case, since many of the most popular programs are open source and free. (Essentially then the second option above &#8212; switch and buy Product Z &#8212; looks okay, because Product Z is now free.) Is it that there are fewer badly-behaved programmers on other systems because they are less popular? Does MS&#8217;s attitude of maintaining compatibility at almost any cost help produce an attitude of &quot;MS won&#8217;t break it, so let&#8217;s do it&quot;? I don&#8217;t know.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-594923">
				<div id="div-comment-594923" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">A Bad Coder</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080129-00/?p=23663#comment-594923">
			January 30, 2008 at 11:07 am</a>		</div>

		<p>Raymond: If you say &quot;This operating system won&#8217;t last long&quot; and it lasts 25 years, then I ask you to provide your definition of &quot;long&quot;.</p>
<p>But I said it wouldn&#8217;t be maintainable, and I counter than Windows hasn&#8217;t been maintainable for at 20 years. &nbsp;It&#8217;s lasted that long by market forces allowing Microsoft to throw billions of dollars on it.</p>
<p>Harding: &nbsp;[ mac backward compatibility sucks ]</p>
<p>Imagine if Apple had the resources to put as much effort into backward compatibility as MS. &nbsp;Microsoft spends a ridiculous amount of money on maintenance like this. &nbsp;After they got OS 9 program support completely bug free they&#8217;d have so much left over to do Apple II and throw in perfect rendering of Amiga demos. &nbsp;Ok, I exaggerate a little.</p>
<p>What would be awesome is for Microsoft to put 100 engineers (actual SEs) on Singularity as a skunk works and start it over from scratch without polluting it with Win32 this time&#8230; make that a &#8216;time machine&#8217; that allows existing programs to run as a separate emulation.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-595303">
				<div id="div-comment-595303" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ulric</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080129-00/?p=23663#comment-595303">
			January 30, 2008 at 1:45 pm</a>		</div>

		<p>I&#8217;m glad you like OS X, Aaaargh, but that&#8217;s the &#8216;grass is always greener&#8217; phenomena. &nbsp;OS X frameworks aren&#8217;t more modern or better documented; they&#8217;re just something else you&#8217;re not familiar with so you assume it&#8217;s better. &nbsp; Apps: there are much fewer apps for OS X overall, and the bad apps, you don&#8217;t hear about. &nbsp;</p>
<p>In any case, Win32 doesn&#8217;t need to be abandoned. &nbsp;Maybe C# and the newer APIs are better for you. &nbsp;This blog is a lot about the pragmatism of application compatibility.</p>
<p>Win32 is certainly not holding Microsoft back from doing anything. In fact in Vista they were able to fundamentally change the system and add desktop compositing on top of all the existing applications, and it all works with existing apps. &nbsp;</p>
<p>What the APIs are and looks like in fact just syntactic sugar. Junior programmers always think you need to delete everything and re-start from scratch to do new things, but that’s just laziness or lack of experience. &nbsp;And that’s not what this blog is about.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-595353">
				<div id="div-comment-595353" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ulric</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080129-00/?p=23663#comment-595353">
			January 30, 2008 at 1:58 pm</a>		</div>

		<p>btw I wanted to say our application subclass dialogs and controls in Windows, and I&#8217;m aware of a few others that do as well.</p>
<p>These apps are really sensitive to changes in the way combo boxes, check boxes, edit boxes and buttons, the way Raymond suggests.</p>
<p>re: The post above by &quot;WikiServerGuy&quot; about the Message box change in Vista.</p>
<p>We had that problem.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-595383">
				<div id="div-comment-595383" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Marc K</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080129-00/?p=23663#comment-595383">
			January 30, 2008 at 2:07 pm</a>		</div>

		<p>@Raymond: &quot;An app that looks uglier on Windows N+1 than it did on Windows N counts as an app that fails the app compat criteria.&quot;</p>
<p>ALL apps on XP that don&#8217;t have the XP common control manifest look uglier than on Windows N-1 because they are using controls that don&#8217;t look right amongst the rest of the programs.</p>
<p>@Skip; &quot;&#8230;Visual SourceSafe 2005&#8230;&quot;</p>
<p>Skip, what are you doing using SourceSafe? &nbsp;There&#8217;s 99% of your problems right there.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-595433">
				<div id="div-comment-595433" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">iheath</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080129-00/?p=23663#comment-595433">
			January 30, 2008 at 2:42 pm</a>		</div>

		<p>Well, whatever way you spin this Raymond, its still a &quot;Legacy of Ashes&quot;.</p>
<p>Of all the architectural gaffs that the common controls team have made over the years, I think choosing to use SxS to solve the v5/v6 problem was the worst. We&#8217;re all living with that legacy now. SxS is something that only installation engineers should even care or know about. Now we have a community of UI devs that have to deal with the nightmare of crap like ACTIVATION CONTEXTS and the like.</p>
<p>The motivation for going with a SxS solution seems to have been to make like easier for the comctl team, at the expense of all the rest of us. So the comctl code needed to be forked, fine, but that should have been implemented using some kind of internal layer of indirection based on a runtime switch, so that there would still only be one DLL and one API for the rest of us to deal with.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-595513">
				<div id="div-comment-595513" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Aaargh!</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080129-00/?p=23663#comment-595513">
			January 30, 2008 at 3:46 pm</a>		</div>

		<p>&quot;OS X frameworks aren&#8217;t more modern or better documented&quot;</p>
<p>Yes they are. Their API&#8217;s are clean, no bogus parameters, no magic values that need to be passed for no apparent reason. And they are very well designed. Not only the &#8216;how&#8217; is discussed, but also the &#8216;why&#8217;. (I had the &#8216;pleasure&#8217; of having to program something against the MapPoint SOAP api a while back, and using the documentation on MSDN was a horrible experience.)</p>
<p>OS X is very well designed, things aren&#8217;t needlessly complex.</p>
<p>As an example, lets look at the hoops an application has to jump to to register its filetype so doubleclicking one of it&#8217;s documents starts the application: <a rel="nofollow" target="_new" href="http://msdn2.microsoft.com/en-us/library/bb776875.aspx" rel="nofollow">http://msdn2.microsoft.com/en-us/library/bb776875.aspx</a></p>
<p>Basically, you have to mess around in the registry. You have to keep track of where your application lives, if you move the app the registry entry needs to be updated, etc. etc.</p>
<p>To do the same thing on OS X, you have to do&#8230; nothing at all. A document is automatically opened by it&#8217;s associated application. The applications filetype is stored in an XML file inside the application bundle, which is automatically created when starting a new project in Xcode. When you copy an application onto your harddrive, the OS picks up the association and takes care of everything. Moving the application to a different location won&#8217;t break a thing. &nbsp;Of course, the user can change the associated application when they want. They can even change this on a per-file basis, so Document1.doc is opened in Word and Document2.doc is opened in Pages. Very convenient. OS X is full of little things like this that make life a whole lot easier.</p>
<p>Why make things difficult when they don&#8217;t need to be ?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-madq42 odd alt thread-odd thread-alt depth-1" id="comment-594723">
				<div id="div-comment-594723" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/MadQ1' rel='external nofollow' class='url'>MadQ1</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080129-00/?p=23663#comment-594723">
			January 30, 2008 at 8:18 am</a>		</div>

		<p>Raymond, I tried to post a comment that I thought was on-topic, and included information about some other consequences of COMCTL32 using SxS, but my comment never showed up. If you deleted it, that&#8217;s OK &#8211; your blog, your rules.</p>
<p>It&#8217;s just that I don&#8217;t know whether I messed up posting it, or whether you deleted it. I don&#8217;t suppose you could just delete the content of comments, instead of deleting the whole thing? That way at least I would know that my comment did post correctly. Hmm, now that I think about it, people would probably abuse that. </p>
<p>*sigh* Sadly, this kinda discourages me from posting comments in the future.</p>
<div class="post">[<i>The blog software categorized it as spam for some reason. I went and fished it out of the Recycle Bin, but this is not something I intend to do as a regular basis. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-594733">
				<div id="div-comment-594733" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Landslide</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080129-00/?p=23663#comment-594733">
			January 30, 2008 at 8:40 am</a>		</div>

		<p>With all this talk of backward compatibility and Vista, here are just a few of my personal bug-bears: &#8211;</p>
<p>* Full Screen Command Interpreter&#8230; not supported under Vista Aero.</p>
<p>* Visual Studio .NET &amp; 2003&#8230; not supported under Vista.</p>
<p>* Embedded Visual C++ 4.0/3.0&#8230; not supported under Vista.</p>
<p>For the latter two I resort to running XP in a VM under Vista. I can live with it. </p>
<p>Why didn&#8217;t Microsoft focus those 5 years of energy and billions of dollars of R&amp;D into a clean slate with _far less thought_ for those obscure backward compatibility cases you mention? It must have burnt a few neurons, not to mention time&#8230;</p>
<p>Wouldn&#8217;t bundling a free VM and XP license for backward compatibility have been inordinately easier? </p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-595603">
				<div id="div-comment-595603" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ulric</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080129-00/?p=23663#comment-595603">
			January 30, 2008 at 6:13 pm</a>		</div>

		<p>Aaargh, you&#8217;re selectivly looking at whatever supports your point. &nbsp;I&#8217;m guessing you&#8217;re comparing some GUI Cocoa against whatever you may have encountered in the whole of Win32. &nbsp;I could do the same and tell you about the 2500 functions (I&#8217;m not making this up!!) of Quicktime, most poorly documented if at all MS&#8217;s WPF. You&#8217;d say I&#8217;m insane.</p>
<p>I work on OS X as well, I&#8217;m writing a small MIDI app. &nbsp;It&#8217;s dreadful. the documentation for the API is essentially non-existant, it&#8217;s what you get generated from the header files. example:</p>
<p><a rel="nofollow" target="_new" href="http://developer.apple.com/documentation/MusicAudio/Reference/CACoreMIDIRef/MIDIServices/index.html" rel="nofollow">http://developer.apple.com/documentation/MusicAudio/Reference/CACoreMIDIRef/MIDIServices/index.html</a></p>
<p>how is that better than Win32 I don&#8217;t know.</p>
<p>When you don&#8217;t try to do anything serious, anything looks perfect and genial. &nbsp;GUI framework and toolkits are always good at that generic sample app.</p>
<p>sorry that, has nothing to do with Win32 anyway, which is the point of this blog</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-595613">
				<div id="div-comment-595613" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Good Point</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080129-00/?p=23663#comment-595613">
			January 30, 2008 at 6:17 pm</a>		</div>

		<blockquote><p>
  I&#8217;m baffled by a lot of the UI in Vista
</p></blockquote>
<p>Yes, even though Vista has a 5 year gestation period it looks like it was rushed. &nbsp;Which leads me to believe it will go down as the &#8216;Windows Me&#8217; of the NT lineage.</p>
<p>Despite what is said in: <a rel="nofollow" target="_new" href="http://blogs.msdn.com/oldnewthing/archive/2007/08/28/4599238.aspx" rel="nofollow">http://blogs.msdn.com/oldnewthing/archive/2007/08/28/4599238.aspx</a> &nbsp;I have still never seen &#8216;Log Off&#8217; show up in the Start Menu search results. &nbsp;I guess the search box is still learning about what I do most often.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-595633">
				<div id="div-comment-595633" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ulric</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080129-00/?p=23663#comment-595633">
			January 30, 2008 at 6:19 pm</a>		</div>

		<p>Sorry that example was suposed to be &#8216;compare the Quicktime API to MS&#8217;s WPF&#8217;. &nbsp;It&#8217;s as irrelevant as comparing Win32 to Cocoa Frameworks. &nbsp;My point is the new framework in Windows is already here.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-madq42 even thread-even depth-1" id="comment-595663">
				<div id="div-comment-595663" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/MadQ1' rel='external nofollow' class='url'>MadQ1</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080129-00/?p=23663#comment-595663">
			January 30, 2008 at 6:39 pm</a>		</div>

		<p>[The blog software categorized it as spam for some reason. I went and fished it out of the Recycle Bin, but this is not something I intend to do as a regular basis. -Raymond]</p>
<p>I understand. Thanks, and I&#8217;ll remember not to mention product names next time.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-595043">
				<div id="div-comment-595043" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Evan</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080129-00/?p=23663#comment-595043">
			January 30, 2008 at 11:52 am</a>		</div>

		<p>@A Bad Coder: &quot;It&#8217;s lasted that long by market forces allowing Microsoft to throw billions of dollars on it.&quot; &#8230; &quot;Imagine if Apple had the resources to put as much effort into backward compatibility as MS.&quot;</p>
<p>I would assert that one of the main reasons MS *has* those resources is because they put such an effort from it to begin with. I know Windows was already established at the release of Win95, but what would have happened if MS took the Mac/Linux/Unix attitude at that point and not been so aggressive about making sure poorly coded programs still ran? I strongly suspect that MS wouldn&#8217;t be in the position it is today.</p>
<p>(Perhaps that&#8217;s not so much true today, but remember that at that point most people couldn&#8217;t just go online and download a patch for their broken program.)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-595723">
				<div id="div-comment-595723" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Triangle</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080129-00/?p=23663#comment-595723">
			January 30, 2008 at 8:03 pm</a>		</div>

		<p>&quot;I&#8217;m glad you like OS X, Aaaargh, but that&#8217;s the &#8216;grass is always greener&#8217; phenomena. &nbsp;OS X frameworks aren&#8217;t more modern or better documented; they&#8217;re just something else you&#8217;re not familiar with so you assume it&#8217;s better.&quot;</p>
<p>Actually it&#8217;s a different phenomenon: You&#8217;ve been programming Windows for so long that you&#8217;ve become desensitized to how bad it really is.</p>
<p>&quot;Sorry that example was suposed to be &#8216;compare the Quicktime API to MS&#8217;s WPF&#8217;. &nbsp;It&#8217;s as irrelevant as comparing Win32 to Cocoa Frameworks. &nbsp;My point is the new framework in Windows is already here.&quot;</p>
<p>That&#8217;s stellar news for those of us who don&#8217;t have to support anything other than Vista.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-595213">
				<div id="div-comment-595213" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Aaargh!</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080129-00/?p=23663#comment-595213">
			January 30, 2008 at 1:05 pm</a>		</div>

		<p>&quot;If you say &quot;This operating system won&#8217;t last long&quot; and it lasts 25 years, then I ask you to provide your definition of &quot;long&quot;. -Raymond&quot;</p>
<p>Depends on the context of course, in this case, I would consider a few hundred years to be a long time for an OS to be around.</p>
<p>We&#8217;ve only just started using computers, so we have no real concept of how long an average OS family lives. *nix has been around since &#8217;69 and while it&#8217;s certainly not perfect and there are lots of things that need fixing it shows way less wear-and-tear than win32 does. I won&#8217;t be a bit surprised if it&#8217;s still around in 2069 and beyond. Actually, Apple is doing a pretty good job of modernizing *nix with OS X.</p>
<p>My point is, calling 25 years a &#8216;pretty long&#8217; time is a bit pointless when there is not much to compare it with. </p>
<p>When is MS planning on retiring Win32 ? With their current attitude towards backwards combatibility they won&#8217;t be able to, ever. You can&#8217;t break backwards compatibility because that would release MS&#8217; stranglehold on the OS market and there would be no need to keep using an outdated OS like Windows. &nbsp;At the moment the win32 software catalogue is the *only* selling-point for win32 over other OSes.</p>
<p>So how do you plan on keeping it all working for the next hundred years ?</p>
<p>I see three distinct options</p>
<p>1) maintain the current state and in a few more years it will be impossible to keep up with the rest. </p>
<p>2) break compatibility, clean it all up, lose market share to competitors. </p>
<p>3) drop win32, build en entirely new, clean, OS. (Singularity is supposed to be pretty cool) and try to lure customers to this new platform as win32 fades into obscurity.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-595263">
				<div id="div-comment-595263" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Aaargh!</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080129-00/?p=23663#comment-595263">
			January 30, 2008 at 1:16 pm</a>		</div>

		<p>&quot;I would assert that one of the main reasons MS *has* those resources is because they put such an effort from it to begin with.&quot;</p>
<p>That may very well be true, but that&#8217;s just marketing and business and short term thinking. I don&#8217;t care about those, I care about the technology and the long term.</p>
<p>As a counter point: look at the quality of software available for the OS X platform. In my opinion the available commercial and freeware for OS X is, in general, of much higher quality than that on the win32 platform, with cleaner and better designed user interfaces. In my limited experience programming for OS X / Cocoa the quality of the frameworks offered by Apple is very high and the documentation is excellent. It could be that this motivates developers to also write clean code. Or maybe it&#8217;s that the expectations of the average Apple user are just higher than for the win32 crowd.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-595763">
				<div id="div-comment-595763" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">WikiServerGuy</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080129-00/?p=23663#comment-595763">
			January 30, 2008 at 9:53 pm</a>		</div>

		<blockquote><p>
  ALL apps on XP that don&#8217;t have the XP common control manifest look</p>
<p>  uglier than on Windows N-1 because they are using controls that don&#8217;t</p>
<p>  look right amongst the rest of the programs.
</p></blockquote>
<p>Well, I think he meant literally if they look worse then before, but still it is a point. I&#8217;m interested if there is a better way to do it, I imagine it would require a LOT of deep thought about the issues involved. Also, when it first came out, people did complain about the manifest-related issues like crazy &#8211; much like people (including myself) bloviate on Vista issues &#8211; at the time, mostly due to lack of IDE support at the time.</p>
<p>People would (and some still do) put the manifest directly in the resource file or something and then get duplicate errors when they loaded it into MSVC; so they would put actual #defines in the resource itself. Then a lot of other fun issues arose&#8230;.</p>
<p>Anyway, back to the subject at hand. In Vista they take a different approach with the menus &#8211; if you use a certain version of the old owner-drawn calls, you get the old style menus.</p>
<p>It seems like a good solution and to this particular issue isn&#8217;t the worst I guess, but then you have problems like &quot;badly-behaved&quot; explorer extensions (which tend to be pretty much all of the popular ones) causing explorer itself to have old-looking right-click menus. Plus, Microsoft a lot of the time doesn&#8217;t even follow their own rules (see favorites menu in IE, for example). Then of course there is the mandatory IconToPARG32 routine that you end up writing, but that can&#8217;t really be avoided.</p>
<p>Makes me wonder what would happen if they tried to apply that solution to the XP common controls issue. I&#8217;m not sure how they could do it though &#8211; maybe revert to old-style control if you subclass it perhaps? Problem with that is most complex apps subclass most controls, so realistically you&#8217;d have an application with mostly old-style controls and some new-looking ones. Plus, ones written before often worked around legitimate problems like flicker (yeah, I can&#8217;t think of anything better ATM), so it would penalize those apps.</p>
<p>You can even have a new flag to GetWindowLongPtr that would set the wndproc but also signify that you know what you are doing or something. Still, I can imagine that some applications that do some really evil things outside of subclassing that could conflict with it.</p>
<p>Just another (probably awful) idea. Curious about other ideas as well.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-dean-harding even thread-even depth-1" id="comment-595783">
				<div id="div-comment-595783" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Dean+Harding' rel='external nofollow' class='url'>Dean Harding</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080129-00/?p=23663#comment-595783">
			January 30, 2008 at 10:32 pm</a>		</div>

		<p>&quot;That&#8217;s stellar news for those of us who don&#8217;t have to support anything other than Vista.&quot;</p>
<p>I think you mean: &quot;That&#8217;s stellar news for those of us who don&#8217;t have to support anything other than Windows XP, 2003 and Vista&quot;.</p>
<p>But anyway, that wasn&#8217;t even the point Ulric was trying to make. Cocoa is a new framework. WPF is a new framework. You can&#8217;t run a Cocoa application on a version of Mac OS released before 2001 and you can&#8217;t run a WPF app on a version of Windows released before 2001. Seems like a much better comparison to me.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-595813">
				<div id="div-comment-595813" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">WikiServerGuy</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080129-00/?p=23663#comment-595813">
			January 30, 2008 at 10:58 pm</a>		</div>

		<p>Since most modern OSX apps are made using bindings, realistically at the very minimum it is late 2003+ (10.3).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-dean-harding even thread-even depth-1" id="comment-595563">
				<div id="div-comment-595563" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Dean+Harding' rel='external nofollow' class='url'>Dean Harding</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080129-00/?p=23663#comment-595563">
			January 30, 2008 at 5:17 pm</a>		</div>

		<p>&quot;My point is, calling 25 years a &#8216;pretty long&#8217; time is a bit pointless when there is not much to compare it with.&quot;</p>
<p>There&#8217;s plenty to compare it with. You cite &quot;*nix&quot; as your ONE AND ONLY counter example, but I can find dozens of operating systems that didn&#8217;t last as long as Unix or Windows.</p>
<p>This page on Wikipedia has plenty, most of which are now defunct: <a rel="nofollow" target="_new" href="http://en.wikipedia.org/wiki/List_of_operating_systems" rel="nofollow">http://en.wikipedia.org/wiki/List_of_operating_systems</a></p>
<p>Besides, typically, Unix has had a very different development model to Windows. Windows has always been sold as a consumer (or desktop at least) operating system. However, for the vast majority of Unix&#8217;s life, it was sold as a &quot;holistic&quot; solution. You bought your hardware, operating system AND application(s) all from the same vendor. So you didn&#8217;t typically have the same backwards-compatibility constraints that Windows has had. When you wanted to upgrade, you called IBM (or whoever your vendor was) and they sent you a *whole new mainframe* software and all.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-595833">
				<div id="div-comment-595833" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">anonymous</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080129-00/?p=23663#comment-595833">
			January 31, 2008 at 1:37 am</a>		</div>

		<p>Speaking of common controls, I have one question. When I run apps under Vista that already have a XP-style UI manifest, they don&#8217;t get the Vista look. If I run them in XP SP2 compatibility mode, then they get the Vista look. And later if I remove the compatibility mode check box, they retain their Vista look. Why is this? Same thing happens for apps that don&#8217;t have a manifest but when a manifest file is added.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-595863">
				<div id="div-comment-595863" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Stephen Jones</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080129-00/?p=23663#comment-595863">
			January 31, 2008 at 2:50 am</a>		</div>

		<p>As another poster mentioned, anybody who claims Apple software is superior to Microsoft has a lot to do explaining away QuickTime, one of the most horrible pieces of software to disgrace a computer.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-596033">
				<div id="div-comment-596033" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Anonymous Coward</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080129-00/?p=23663#comment-596033">
			January 31, 2008 at 8:07 am</a>		</div>

		<p>&#8220;Even though it&#8217;s completely undocumented and unsupported, programs like to grovel into the internal data structures of other programs or otherwise manipulate those programs&#8217; windows.&#8221;</p>
<p>I understand the desire of Microsoft to do whatever is humanly possible to maintain backward compatibility even in these cases, but surely this has to stop one day? If for no other reason, then because of security? A plug-in for safer registry editing might be cool, but an interception layer between the user and the registry definitely isn&#8217;t.</p>
<p><a href="http://blogs.msdn.com/oldnewthing/archive/2008/01/29/7294949.aspx#7326619" target="_new" rel="nofollow">http://blogs.msdn.com/oldnewthing/archive/2008/01/29/7294949.aspx#7326619</a> &nbsp;seems to be the only viable solution to me: why keep adding convoluted ways of doing things that should be easy to the OS and incur mounting costs of providing backward compatibility when you could cover all those issues by providing a VM with a (nowadays, rather cheap) XP license on it? The later this will happen, the more applications will have problems with it, and if it never happens, then the performance of Windows will suffer, which is a real bad thing.</p>
<div class="post">[<i><a href="http://blogs.msdn.com/oldnewthing/archive/2005/10/05/477317.aspx" rel="nofollow">Running old programs in a virtual machine doesn&#8217;t necessarily create a good user experience</a>. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-595903">
				<div id="div-comment-595903" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ross Bemrose</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080129-00/?p=23663#comment-595903">
			January 31, 2008 at 4:08 am</a>		</div>

		<p>AAargh!:</p>
<p>(Note: I&#8217;m intentionally using different cases for Unix and UNIX&#8230; Unix for the AT&amp;T operating system and UNIX for the Open Group certification/trademark)</p>
<p>Unix as a counter-example only works if you&#8217;re not talking about AT&amp;T/USL/Novell/SCO Unix and instead talking about UNIX-certified POSIX-compliant operating systems.</p>
<p>After all, Unix is one of the few operating systems that isn&#8217;t even written in the language it originally started with. &nbsp;It&#8217;s true that Unix was written in 1969. &nbsp;However, it was re-written in 1973 using a programming language custom-design to write OSes in. &nbsp;That language is C.</p>
<p>I could go on more about history, but what really matters is how things look today.</p>
<p>Un*x/POSIX currently has 5 major operating system families that I&#8217;m aware of: Linux, BSD, Solaris, AIX, and Unix itself. &nbsp;Software written for one may not run on the others. &nbsp;There are both shims (#ifdef) and programs (configure, autoconf) to get around incompatibilities, but it&#8217;s one of the underlying problems you must consider when you&#8217;re writing programs expected to run on multiple different Un*x platforms.</p>
<p>In other words, UNIX/Unix/Un*x isn&#8217;t as homogenous as you think.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-596433">
				<div id="div-comment-596433" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ulric</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080129-00/?p=23663#comment-596433">
			January 31, 2008 at 2:07 pm</a>		</div>

		<p>Thanks Dean Harding, right on the money.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-596753">
				<div id="div-comment-596753" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Anonymous Coward</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080129-00/?p=23663#comment-596753">
			February 1, 2008 at 4:43 am</a>		</div>

		<p>[Running old programs in a virtual machine doesn&#8217;t necessarily create a good user experience. -Raymond]</p>
<p>In that case, is anything being done at all to if not prevent, then at least discourage people from using quirks which obviously shouldn&#8217;t be supported? If there&#8217;s no real downside to writing dodgy code which just happens to work right now (&quot;well, the guys from Microsoft will fix it anyway if the product ends up successful, so why bother?&quot;), you will always be swamped by applications which refuse to adopt good design; and the compromises made during accommodating those applications to the new environment will keep the said new environment from reaching its potential.</p>
<p>(This is of course under the assumption that producing an emulator is out of question. Given the system requirements for Vista, I would think that if a program could run under XP&#8217;s minimal requirements, then even doing some sort of software emulation could be acceptable on a modern machine capable of running Vista)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-597923">
				<div id="div-comment-597923" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Alex Cohn</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080129-00/?p=23663#comment-597923">
			February 4, 2008 at 10:41 am</a>		</div>

		<p>One of the strangest common controls (well, not exactly) is the Wizard mode of Property Sheets. I believe that it is much easier to use a sequence of normal dialogs than to tweak a property sheet to do exactly what your PM wants. Take the limitations the Wizard97 poses on the sizes of the images (the &quot;icon&quot; must be 49&#215;49 pixels)!</p>
<p>It&#8217;s puzzling that behavior of Wizard97 depends on the compilation flags: use _WIN32_IE=0x0400 to get a header bitmap stretched to the width of the wizard window, or _WIN32_IE=0x0500 to get it clipped to 49&#215;49 pixel.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-652453">
				<div id="div-comment-652453" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://npavlov.kodar.net/blog/?p=18' rel='external nofollow' class='url'>Nikolay Pavlov &raquo; Blog Archive &raquo; The Look of Windows API Controls</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080129-00/?p=23663#comment-652453">
			July 31, 2008 at 8:59 am</a>		</div>

		<p>PingBack from <a rel="nofollow" target="_new" href="http://npavlov.kodar.net/blog/?p=18" rel="nofollow">http://npavlov.kodar.net/blog/?p=18</a></p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>