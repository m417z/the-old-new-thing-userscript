<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (25)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-1203671">
				<div id="div-comment-1203671" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Mason Wheeler</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150917-00/?p=91571#comment-1203671">
			September 17, 2015 at 7:04 am</a>		</div>

		<p>So what you do next is get them to articulate the reason why they believe the obvious solution won&#39;t work for them. &nbsp;They might actually have a valid reason, or they might realize, as they think through it, that they *don&#39;t* have a valid reason and then the problem&#39;s solved.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1203661">
				<div id="div-comment-1203661" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Beau Kuiper</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150917-00/?p=91571#comment-1203661">
			September 17, 2015 at 7:26 am</a>		</div>

		<p>&gt; Of course, a simple application of the What if two programs did this? principle shows that this is not possible.</p>
<p>They fight to the death and the losing service is set to Disabled?</p>
<p>I problem I had to solve was actually the opposite. A reconfiguration of an embedded industrial system resulted in services starting too soon, where hardware was not in a state ready to accept probing by the service. My solution was to put both services to manual, and write a new batch script that handled the startup of the services after an acceptable delay, then start up the rest of the applications that run on the embedded system.</p>
<p>I figure your customer could have used the same sort of thing. Either have a program that started automatically at some time, started the first service manually, then the second.</p>
<p>Of course, dependencies would have worked better.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1203651">
				<div id="div-comment-1203651" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Anon</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150917-00/?p=91571#comment-1203651">
			September 17, 2015 at 7:49 am</a>		</div>

		<p>@Mason Wheeler</p>
<p>&gt;Implying that they ever have a valid reason</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1203641">
				<div id="div-comment-1203641" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ken in NH</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150917-00/?p=91571#comment-1203641">
			September 17, 2015 at 7:58 am</a>		</div>

		<p>Since Raymond restrained himself from pushing the button on the thermonuclear device, I will: Yes there is a way to make sure that your special snowflake program is top-mostest, earliest-starting, boss of all other programs; write your own OS.</p>
<p>Snide remarks aside, could their problem have been solved by writing a driver instead of a service? I guess we would need more details, but changing global values such as hardware configurations does not sound like something a sane person would do from a service. There might be other race conditions besides the dependent service. I mean services are not even guaranteed to be up and running completely before the user can start clicking around and wreaking havoc with your dependency laden code.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1203631">
				<div id="div-comment-1203631" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Pazu2</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150917-00/?p=91571#comment-1203631">
			September 17, 2015 at 8:03 am</a>		</div>

		<p>Or the dependent service start configure as &quot;Manual&quot; and let your &quot;first&quot; service start it, when it thinks it is safe to. Model SQL FullText and others&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1203621">
				<div id="div-comment-1203621" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">David Crowell</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150917-00/?p=91571#comment-1203621">
			September 17, 2015 at 8:25 am</a>		</div>

		<p>Didn&#39;t a certain printer manufacturer used to have an extra service installed as part of the driver. &nbsp;It then modified the PrintSpooler to require that service. &nbsp;It all worked fine, until you uninstalled the driver. &nbsp;The uninstall process didn&#39;t fix the dependency, and you couldn&#39;t print anymore.</p>
<p>Although this was a bug, it was very customer hostile. &nbsp;USE OUR PRINTERS, OR ELSE!</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1203611">
				<div id="div-comment-1203611" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">littlealex</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150917-00/?p=91571#comment-1203611">
			September 17, 2015 at 8:41 am</a>		</div>

		<p>I can see only one way to do this &#39;correctly(tm)&#39;. And &quot;just set the dependency&quot; is not what I am thinking about. (Because something unexpected can happen and _will happen_; the dependency should be set, but it is not enough).</p>
<p>The right way is:</p>
<p>When second service starts, it waits until it can successfully see that ALL requirements for it doing its work are met. Only then it actually starts working.</p>
<p>No assuming the first service is already there and will always be there.</p>
<p>No assuming any device will always be available, will never be removed, will never fail, power off, &#8230;</p>
<p>A device is not (yet) ready? Every Software that does not expect and handle gracefully this kind of thing is bugged through and through.</p>
<p>Another peace of software that is needed is not (yet) available? Every Software that does not expect and handle gracefully this kind of thing is bugged through and through.</p>
<p>And for services, this is even more important. Every service at least somewhat correct-ish will just sit there and wait idly, until it can successfully do its work, and only then it will start working. And it will stop trying to do anything when the requirement is no longer met (another service crashed; a device was removed; a device failed; a network connection is no longer available; &#8230;)</p>
<p>Is &quot;handling an error that obviously will sometimes happen&quot; really to much to ask for?</p>
<p>And then, when the second service is no longer completely broken, i.e. it will just accept the first service not being there yet, then you should create a service dependency. Not because it is needed for the second service to work correctly, but because it is a very helpfull form of explicit dcoumentation, that can tell everybody including system administrators about the things you expect to be true. It gives, just as an example, a very cool message box telling the user/administrator what other services are depending on this one and will be also shut down when you shut down the first service.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1203601">
				<div id="div-comment-1203601" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Adrian</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150917-00/?p=91571#comment-1203601">
			September 17, 2015 at 8:52 am</a>		</div>

		<p>If Service B depends on Service A already having done some configuration step, then there&#39;s already a dependency between the services. &nbsp;It&#39;s absurd to say they don&#39;t want to create a dependency. &nbsp;They already have!</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1203591">
				<div id="div-comment-1203591" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">mark</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150917-00/?p=91571#comment-1203591">
			September 17, 2015 at 9:07 am</a>		</div>

		<p>Or, merge the services into one. Developers often create physical modules when all they need is a logical module (e.g. a service instead of a class).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1203561">
				<div id="div-comment-1203561" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150917-00/?p=91571#comment-1203561">
			September 17, 2015 at 9:37 am</a>		</div>

		<p>The day is coming when the reason given is the service starts the filesystem support that most of the rest of the system depends on. Think, open VPN connection and mount a disk over the VPN link.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1203551">
				<div id="div-comment-1203551" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ben Voigt</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150917-00/?p=91571#comment-1203551">
			September 17, 2015 at 9:37 am</a>		</div>

		<p>Most likely they&#39;re running into deficiencies in the Windows service loader model.</p>
<p>Some other OS / initscript managers are designed with two types of dependencies: &quot;requires&quot; and &quot;after&quot;. &nbsp;Windows doesn&#39;t (AFAIK) natively support the latter type, which is probably what they&#39;re looking for.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1203531">
				<div id="div-comment-1203531" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Gabe</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150917-00/?p=91571#comment-1203531">
			September 17, 2015 at 9:50 am</a>		</div>

		<p>What I don&#39;t think they understand is that &quot;first&quot; doesn&#39;t do what they want. It may be the case that their service is started first, but that doesn&#39;t matter. What they really care about is that their service *finishes* starting before something else.</p>
<p>And of course the way to ensure that one service is not started until another service completes its startup is with the dependency mechanism.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1203511">
				<div id="div-comment-1203511" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Bill_Stewart</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150917-00/?p=91571#comment-1203511">
			September 17, 2015 at 10:35 am</a>		</div>

		<p>/s/FRIST/FIRST/</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-ranta odd alt thread-odd thread-alt depth-1" id="comment-1203501">
				<div id="div-comment-1203501" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/ranta' rel='external nofollow' class='url'>ranta</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150917-00/?p=91571#comment-1203501">
			September 17, 2015 at 10:38 am</a>		</div>

		<p>SERVICE_TRIGGER_TYPE_DEVICE_INTERFACE_ARRIVAL might be reasonable. &nbsp;Have the driver of the device pop up a device interface when the first service configures it, and configure the second service to start on that trigger. &nbsp;The advantage is that, after the device has already been configured, you can stop the first service without stopping the second service.</p>
<p>If you have multiple devices of this type, then the second service will start as soon as the first device has been configured. &nbsp;It then needs to keep watching for additional device interfaces so that it can start using those devices as well.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1203491">
				<div id="div-comment-1203491" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Norm</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150917-00/?p=91571#comment-1203491">
			September 17, 2015 at 10:40 am</a>		</div>

		<p>First service auto start, second manual start. First does what it needs and then starts the second. </p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1203481">
				<div id="div-comment-1203481" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">John</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150917-00/?p=91571#comment-1203481">
			September 17, 2015 at 10:48 am</a>		</div>

		<p>@Bill_Stewart</p>
<p>Frist time on the Internet? ;)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1203471">
				<div id="div-comment-1203471" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">bzakharin</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150917-00/?p=91571#comment-1203471">
			September 17, 2015 at 12:31 pm</a>		</div>

		<p>It&#39;s not clear whether &quot;the service that uses the hardware&quot; is controlled by your customer or not, or even if the set of services that rely on this service is known to the user. So it can be a legitimate question</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1203461">
				<div id="div-comment-1203461" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Nico</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150917-00/?p=91571#comment-1203461">
			September 17, 2015 at 12:46 pm</a>		</div>

		<p>Clearly, the best way to do this is to:</p>
<p>1) Change all existing services start type to &quot;Automatic (Delayed)&quot; when you install your software.</p>
<p>2) Set your #1 Best Service service set to &quot;Automatic&quot;. </p>
<p>3) Monitor the SCM&#39;s named pipes to watch for new services and also set them to Delayed.</p>
<p>4) ???</p>
<p>5) Profit (by getting a nice bonus for that feature!)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1203451">
				<div id="div-comment-1203451" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Katie</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150917-00/?p=91571#comment-1203451">
			September 17, 2015 at 3:37 pm</a>		</div>

		<p>@Nico</p>
<p>Bonus points if your loop doesn&#39;t actually check if they were set to manual or disabled when it changes then all.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-cheong odd alt thread-odd thread-alt depth-1" id="comment-1203431">
				<div id="div-comment-1203431" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/cheong00' rel='external nofollow' class='url'>cheong00</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150917-00/?p=91571#comment-1203431">
			September 17, 2015 at 10:40 pm</a>		</div>

		<p>Actually I can think of a possible reason why dependency is not desired. Their ServiceA could be a configuration detection service that will stop automatically when the job is done. If you create dependency on it, the ServiceB will stop or fail to start.</p>
<p>So the correct solution to be provided should be to set ServiceA as Automatic and ServiceB as Manual. Then add code to ServiceA so that when it&#39;s job is done, it&#39;ll send start signal to service controller to start ServiceB before ServiceA stops itself. No dependency is needed.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1203411">
				<div id="div-comment-1203411" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Killer{R}</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150917-00/?p=91571#comment-1203411">
			September 18, 2015 at 1:18 am</a>		</div>

		<p>That another service they wanted to overtake could be some 3rd part service, and modifying configuration of 3rd party service also not very good idea.</p>
<p>However specifying service load group could help, if that another service had specified group.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1203401">
				<div id="div-comment-1203401" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Anon</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150917-00/?p=91571#comment-1203401">
			September 18, 2015 at 6:59 am</a>		</div>

		<p>@cheong00</p>
<p>And what happens when Service A fails to complete for whatever reason, then Application C starts Service B?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1203391">
				<div id="div-comment-1203391" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Henke37</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150917-00/?p=91571#comment-1203391">
			September 18, 2015 at 7:19 am</a>		</div>

		<p>@anon Same as if there was a normal dependency?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1203201">
				<div id="div-comment-1203201" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Dave</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150917-00/?p=91571#comment-1203201">
			September 18, 2015 at 8:04 pm</a>		</div>

		<p>@Mason: &quot;So what you do next is get them to articulate the reason why they believe the obvious solution won&#39;t work for them&quot;.</p>
<p>That would have been my response as well, tempered by the fact that I&#39;m currently involved in a discussion thread where I&#39;ve explicitly stated (twice) that I can&#39;t use obvious solution X because the system I&#39;m working with doesn&#39;t have the hardware support for it. &nbsp;So far I&#39;ve had three replies to that, all telling me to use solution X.</p>
<p>I think it&#39;s going to come down to a race between how many times I can say I CAN&#39;T USE OBVIOUS SOLUTION X BECAUSE THE SYSTEM I&#39;M WORKING WITH DOESN&#39;T HAVE THE HARDWARE SUPPORT FOR IT and people losing interest after suggesting solution X over and over.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-cheong even thread-even depth-1" id="comment-1203161">
				<div id="div-comment-1203161" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/cheong00' rel='external nofollow' class='url'>cheong00</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150917-00/?p=91571#comment-1203161">
			September 19, 2015 at 9:05 pm</a>		</div>

		<p>@Anon: If C is application that runs in user session, adding Scheduler Task that runs &quot;sc start&quot; to the ServiceB on user login should be good enough. (It does no harm trying to start a service that has already been started)</p>
<p>If ServiceB is doing it&#39;s work unrelated to other piece of software, use fire a timer on ServiceA that will cause ServiceB to start after X seconds. (it&#39;d be fine as solution to &quot;what if there is Application C&quot; question too)</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>