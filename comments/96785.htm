<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (7)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1 parent" id="comment-1305836">
				<div id="div-comment-1305836" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170809-00/?p=96785#comment-1305836">
			August 9, 2017 at 8:25 am</a>		</div>

		<p>If it were up to me, the no-man&#8217;s-land 64kb wouldn&#8217;t have existed, but the loader wouldn&#8217;t load any DLLs there unless their base address was high enough to load there. Oh well.</p>
<p>I&#8217;m disappointed the alpha didn&#8217;t have load32 or load64 instructions. Since you&#8217;re going to end up double-sized anyway the easiest way to implement such a thing is provide LODx instructions that load 16 bit chunks (this takes weight off the machinery). But behold they only did it with signed numbers. Oops.</p>

		
				</div>
		<ol class="children">
		<li class="comment odd alt depth-2 parent" id="comment-1305846">
				<div id="div-comment-1305846" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Antonio Rodr√≠guez</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170809-00/?p=96785#comment-1305846">
			August 9, 2017 at 8:40 am</a>		</div>

		<p>Take into account that the Alpha uses fixed-sized 32 bit instructions. You only have 32 bits to encode the opcode and any operands, and having 32 registers means the register number itself spans 5 bits. Fitting a 24 bit immediate constant would be really difficult (assuming you could spare a three bit opcode, of which there are only eight possible). And fitting a 32 bit one is physically impossible (no space left for the register number or the opcode!).</p>

		
				</div>
		<ol class="children">
		<li class="comment even depth-3" id="comment-1305856">
				<div id="div-comment-1305856" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Matteo Italia</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170809-00/?p=96785#comment-1305856">
			August 9, 2017 at 9:23 am</a>		</div>

		<p>On this topic, ARM is way more fun; most instruction that take an immediate have an implicit &#8220;rotate field&#8221;, so while you have just 8 bits for the immediate value (+4 for rotation), many 32 bit &#8220;interesting&#8221; values can still be expressed in the immediate (think in particular about bit fiddling).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt depth-3" id="comment-1305866">
				<div id="div-comment-1305866" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Matteo Italia</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170809-00/?p=96785#comment-1305866">
			August 9, 2017 at 9:26 am</a>		</div>

		<p>Uh, I forgot the link<br />
<a href="https://alisdair.mcdiarmid.org/arm-immediate-value-encoding/" rel="nofollow">https://alisdair.mcdiarmid.org/arm-immediate-value-encoding/</a></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even depth-3 parent" id="comment-1305885">
				<div id="div-comment-1305885" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170809-00/?p=96785#comment-1305885">
			August 9, 2017 at 9:52 am</a>		</div>

		<p>With my scheme, 2 instructions would suffice to load any 32 bit value, 4 instructions to load any 64 bit value. There&#8217;s plenty of space as the constant is only half the instruction width.</p>

		
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-oldnewthing bypostauthor odd alt depth-4 parent" id="comment-1305937">
				<div id="div-comment-1305937" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Raymond+Chen+-+MSFT' rel='external nofollow' class='url'>Raymond Chen - MSFT</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170809-00/?p=96785#comment-1305937">
			August 9, 2017 at 10:25 pm</a>		</div>

		<p>At a cost of consuming 28 bits just for the parameters. (16 bits for the constant, 5 bits for the source register, 5 bits for the destination register, 2 bits to select the position of the 16 bits = 28 bits.) This leaves only 4 bits for the opcode. I think there are more than 16 instructions in the Alpha AXP instruction set.</p>

		
				</div>
		<ol class="children">
		<li class="comment even depth-5" id="comment-1305945">
				<div id="div-comment-1305945" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Jonathan Wilson</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170809-00/?p=96785#comment-1305945">
			August 10, 2017 at 12:37 am</a>		</div>

		<p>They could have introduced special versions of ldah and lda that dont do the sign extending that are just for loading a 32 bit constant.<br />
That way you can just have ldah t0, XXXX(zero) followed by lda, t0, YYYY(t0) and not need to have to worry about sign extentions.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>