<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (31)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-164863">
				<div id="div-comment-164863" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Anonymous Coward</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040419-00/?p=39753#comment-164863">
			April 19, 2004 at 7:36 am</a>		</div>

		<p>My first project in the real world was at what had been a C &amp; Unix shop and was now being brought kicking and screaming into the land of C++ &amp; Windows along with MFC. We did validation on WM_KILLFOCUS because (I think) the customer wanted instant validation like they had in their old applications on a DG mainframe and we didn&#8217;t know how better to do it. I think we did validation in DoDataExchange even if the user pressed Return, but I&#8217;m not certain.</p>
<p>You didn&#8217;t mention the worst problem, which I encountered a lot, which is that having reprimanded the user and set focus back to the invalid control, the program gets WM_KILLFOCUS for the control that temporarily gained focus and tries to validate that too. So we could sometimes end up presenting the user with an infinite series of alternating error dialogs.</p>
<p>Somehow I actually managed to learn C++, Windows and MFC during this project and got the hang of making dialogs just about usable. So I got the task of clearing up dozens of defect reports regarding the horrible dialogs we had inflicted on the customer in the first delivery. I also got the task of writing a bunch of ActiveX controls. This is why I have tried to avoid GUI programming ever since.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-164893">
				<div id="div-comment-164893" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">DrPizza</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040419-00/?p=39753#comment-164893">
			April 19, 2004 at 7:44 am</a>		</div>

		<p>&quot;For a tabbed dialog, it would be when the user tabs to a new page. &quot;<br />
<br />No it bloody wouldn&#8217;t.  In practice that&#8217;s no less annoying than focus change validation, for essentially the same reasons.  Oftentimes (especially when trying to get a feel for an application and evaluate its knobbage) I just want to click around a tabbed dialogue box to see what&#8217;s there.  This lets me get an idea of the kind of information that the box needs and the kind of thing it lets me do.  Since blank fields are normally invalid fields, tab change validation prevents this.  It&#8217;s immensely frustrating.  Switching tabs is not an action that demands input validation.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-164903">
				<div id="div-comment-164903" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://weblogs.asp.net/oldnewthing' rel='external nofollow' class='url'>Raymond Chen</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040419-00/?p=39753#comment-164903">
			April 19, 2004 at 7:47 am</a>		</div>

		<p>You&#8217;re right. The context of the original problem that inspired this entry was a wizard, in which case page navigation = clicking &quot;Next&quot;. My mistake for rewriting the article to be about tabbed dialogs without changing everything that needed to be changed.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-164923">
				<div id="div-comment-164923" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://silicontaiga.com/orangy' rel='external nofollow' class='url'>Ilya Ryzhenkov</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040419-00/?p=39753#comment-164923">
			April 19, 2004 at 8:01 am</a>		</div>

		<p>I suppose Windows.Forms implements validation in somewhat similar BAD way.. Changing focus goes through all sorts of ActivateControl methods (see call stack) and ends in Validating event handler. If dialog is closed with X-button, controls are not validated. And so on&#8230; This is as of Framework 1.1</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-164943">
				<div id="div-comment-164943" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Dave</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040419-00/?p=39753#comment-164943">
			April 19, 2004 at 8:57 am</a>		</div>

		<p>if a dialog is closed with the X button, validation SHOULDN&#8217;T take place &#8212; the close button is effectively the same as &quot;cancel&quot; throughout the windows u/i, so you shouldn&#8217;t make a dialog box that saves its values when you hit the close button.<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-165073">
				<div id="div-comment-165073" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Centaur</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040419-00/?p=39753#comment-165073">
			April 19, 2004 at 12:07 pm</a>		</div>

		<p>The worst way to do validation is when someone tries to validate on change. That is, an edit box with a spin control, designed for entry of signed integers, which, when any character is entered, validates the new contents. This way, it is absolutely impossible to intuitively enter a negative number (you have to first enter the absolute value, then add a minus, because &quot;-&quot; is not a valid integer) and you cannot clear the box because &quot;&quot; is not a valid integer. And, to further complicate the issue, they sometimes replace the invalid text with valid text (usually 0 or some other default value). See the Color common dialog, which replaces invalid values with either 0 or 255.</p>
<p>There are also number edit controls that aren’t (only the spin control actually change the contents; the edit is read-only — the year entry subcontrol of the common calendar), file name edit controls that aren’t (the edit is read-only, and the only way to select a file is through the Browse button) and especially directory name combo boxes that aren’t (the combo is in history list mode, not allowing free text entry, and there is a Browse button that opens a Browse for directory dialog that also has no means to enter text directly or paste a path from the clipboard). An example of the latter is the Get Pictures from Scanner wizard in Windows XP.</p>
<p>There are other examples of non-usable controls, and many of them are caused by developers being overprotective. Let users enter all they want and defer validation to the time they click OK or Next or Apply, then warn them with “-42.7 is not a valid integer”, “A file named foo.txt does not exist” and the like.</p>
<p>Oh, and the last one, the autocomplete file name edit control, as used in the File Open/Save common dialog. For an Open dialog, it’s logical to autocomplete a name, since the user usually wants to open an existing file. Unfortunately, in a Save dialog a string that happens to be a prefix of an existing filename is also autocompleted. So the user presses Alt+F A, quickly enters a name and presses Enter to save the file, but the name gets autocompleted and the dialog gives an overwrite warning. Or, in the unfortunate case if the developer has disabled overwrite warnings, the file gets overwritten. Oops, too bad. Be careful next time.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-165083">
				<div id="div-comment-165083" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://weblogs.asp.net/oldnewthing/' rel='external nofollow' class='url'>Raymond Chen</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040419-00/?p=39753#comment-165083">
			April 19, 2004 at 12:20 pm</a>		</div>

		<p>? If you just hit Enter in the File Save dialog then autocomplete does not complete your partial name. You have to hit the DownArrow to activate the autocomplete suggestion.<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-164973">
				<div id="div-comment-164973" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.extragroup.de/weblog/hmk/archives/000745.html' rel='external nofollow' class='url'>HMK's Spurious Thoughts</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040419-00/?p=39753#comment-164973">
			April 19, 2004 at 12:35 pm</a>		</div>

		<p>WM_KILLFOCUS is the wrong time to do field validation&#8230;.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-165093">
				<div id="div-comment-165093" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Jack Mathews</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040419-00/?p=39753#comment-165093">
			April 19, 2004 at 1:27 pm</a>		</div>

		<p>I absolutely LOVE validation with the tooltip &quot;talk box.&quot;  The Caps lock warning is wonderful, as are the bubbles that come up saying &quot;files can&#8217;t contain these letters&quot; and the like.  I love it because it points you exactly where the error is and it lets you correct it before hitting OK.  Or even if it comes up after you hit OK, the pointing at the actual data at fault is so much better than hunting down the offending value.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-165113">
				<div id="div-comment-165113" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Eyal</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040419-00/?p=39753#comment-165113">
			April 19, 2004 at 2:25 pm</a>		</div>

		<p>&quot;If you just hit Enter in the File Save dialog then autocomplete does not complete your partial name&quot;.</p>
<p>Not if use &quot;Use inline AutoComplete&quot; in Internet Options-&gt;Advanced.<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-165133">
				<div id="div-comment-165133" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://weblogs.asp.net/oldnewthing/' rel='external nofollow' class='url'>Raymond Chen</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040419-00/?p=39753#comment-165133">
			April 19, 2004 at 2:26 pm</a>		</div>

		<p>One of the many reasons why that is off by default.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-165173">
				<div id="div-comment-165173" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Marc Wallace</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040419-00/?p=39753#comment-165173">
			April 19, 2004 at 3:56 pm</a>		</div>

		<p>I use Opera, so I see a lot of places where JavaScript just breaks.   Lost focus ones where the validation code is broken, but it still shoves you back into the field, is just dreadful.</p>
<p>While I agree that validations should be performed at posting time, I don&#8217;t see a reason why validations shouldn&#8217;t also be performed on lost focus.  Do not pop up a modal dialog, do not force focus back there, but do something visual: turn the field a different color, add a tray tip, or whatever.  Realtime validations are nice, but they just shouldn&#8217;t be so forceful.</p>
<p>It does require coding your validations so the same code can validate the entire form, one field, or some semantically linked set of fields.  Tricky, but often possible.</p>
<p>And, of course, there are usually backend ways to trick the validator.  Edit an ini file or registry key that underlies one of these fields, and you can often enter out of bounds data that still works okay.  Or hey, just block all the WM_KILLFOCUS messages. ;-)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-165233">
				<div id="div-comment-165233" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">CW User</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040419-00/?p=39753#comment-165233">
			April 19, 2004 at 6:36 pm</a>		</div>

		<p>And how about validations on WM_SETFOCUS?</p>
<p>I am not kidding or teasing here. Let&#8217;s put aside user experience<br />
<br />for a moment and just be technical. I have triggers for validations<br />
<br />on field entry and exit and on every field content change, plus final<br />
<br />validations for OK/Cancel buttons.</p>
<p>Exit validation is triggered on TAB or WM_SETFOCUS if the field<br />
<br />getting focus is not the same as field being current up until that<br />
<br />point. What I am handling here is button click inside another<br />
<br />edit field.</p>
<p>I don&#8217;t handle field changes on MOUSE messages because I<br />
<br />don&#8217;t want to interfere with clicks I am supposed to pass<br />
<br />to standard edit control&#8217;s WndProc. I just felt that this could<br />
<br />be a problem for contextual menus and so far it seemed like<br />
<br />WM_SETFOCUS was good choice. </p>
<p>I&#8217;d be glad if Raymond can point me to a better solution.</p>
<p>From UI and user experience points of view, well I am careful what<br />
<br />I put into these validations, but sometimes it&#8217;s the best place to<br />
<br />warn user about his entry, if not with a dialog, but with some<br />
<br />message in status bar or a sound.<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-165243">
				<div id="div-comment-165243" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.popcornfilms.com' rel='external nofollow' class='url'>Simon Cooke [exMSFT]</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040419-00/?p=39753#comment-165243">
			April 19, 2004 at 6:40 pm</a>		</div>

		<p>Robust Validation:</p>
<p>1. If the user stops typing for 15 to 30 seconds, validate their input, and show a bubble with advice on what&#8217;s wrong with their input.</p>
<p>2. If the user tabs away from a control, and the input is invalid, validate, and show a bubble with advice on what&#8217;s wrong with their input.</p>
<p>3. When the user does a commit on the displayed dialog (OK button or otherwise), do a final validation. If this validation fails, show the bubble over the control, set the focus to the control, and allow the user to change the details.</p>
<p>Sure, this is a lot of work, but it&#8217;s worth it. It&#8217;s not as good as it could be though.</p>
<p>When I worked at MS, one proposal I had (which apparently didn&#8217;t get off the drawing board) was for several upgrades to the edit control. One of these would have been this:</p>
<p>Allow Word-style underlined squiggles to operate in edit boxes on dialogs. That way, if the text in the box is invalid, the user gets immediate and unobtrusive feedback (the red underline with a tooltip explaining what&#8217;s wrong if they hover over it). It also means that if there&#8217;s more than one error, you don&#8217;t need (say) 8 tooltip bubbles floating over the UI.</p>
<p>I had several other ideas on the same lines&#8230; but alas, they never got implemented.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-165253">
				<div id="div-comment-165253" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://weblogs.asp.net/oldnewthing/' rel='external nofollow' class='url'>Raymond Chen</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040419-00/?p=39753#comment-165253">
			April 19, 2004 at 6:49 pm</a>		</div>

		<p>Squigglies are way beyond the scope of the basic edit control.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-165303">
				<div id="div-comment-165303" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://weblogs.asp.net/ptorr/' rel='external nofollow' class='url'>Peter Torr</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040419-00/?p=39753#comment-165303">
			April 19, 2004 at 9:25 pm</a>		</div>

		<p>I can&#8217;t remember the number of times I had to tell newbie HTML developers that this was a horrible abuse of scripting in wet pages. But they all seem to want to do it for their web forms&#8230;</p>
<p>While we&#8217;re on the subject, not only can you not trust KILLFOCUS, you can&#8217;t trust that &quot;disabled&quot; or &quot;hidden&quot; controls will not contain input when being used by malicious end users. Search the web for &quot;shatter attacks&quot; if you want to know why. </p>
<p>Only really necessary when the user has less privilege than the thing accepting the data. Eg,  a server blindly accepting input from a field it &quot;thought&quot; was read-only (other why are you accepting it if it was read-only?) or a GUI app running at a higher privilege level then the user (such as SYSTEM&#8230; don&#8217;t do that!!!).</p>
<p>But you could end up with goofy data even if it doesn&#8217;t present a real security risk. Never trust the client (and the client should never trust the server)!</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-165313">
				<div id="div-comment-165313" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.popcornfilms.com' rel='external nofollow' class='url'>Simon Cooke [exMSFT]</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040419-00/?p=39753#comment-165313">
			April 19, 2004 at 11:52 pm</a>		</div>

		<p>Raymond:</p>
<p>Sure&#8230; they&#8217;d be out of scope for the basic control, but would be a good candidate to be added into something along the lines of comctl.</p>
<p>They&#8217;d also be a great UI addition &#8211; most dialogs would probably use them.</p>
<p>Still&#8230; I can dream :)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-165333">
				<div id="div-comment-165333" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.redwoodroot.org' rel='external nofollow' class='url'>Peter Evans</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040419-00/?p=39753#comment-165333">
			April 20, 2004 at 1:04 am</a>		</div>

		<p>How is it out of scope for the basic edit control?  Autocomplete is there for the basic edit controls?  What makes squiggles( err, what is it err.. text services) out of scope?  Seems like it would eliminate a lot of poorly typed posts and irritating web page script code.  Still doesn&#8217;t solve web page validation, but that&#8217;s a different issue.</p>
<p>If you can bolt on autocomplete to comboboxes edit control, why not bolt on autospell check to edit boxes via some kind of property from script.  Just my 2&#162; post yet again.<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-165343">
				<div id="div-comment-165343" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://jpayne@NOSPAM.dsl.pipex.com' rel='external nofollow' class='url'>Jonathan Payne</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040419-00/?p=39753#comment-165343">
			April 20, 2004 at 1:52 am</a>		</div>

		<p>The auto complete in the save dialog is the of the most annoying Windows &quot;features&quot; I have come across.  I knew there must be an option to turn it off as it always happened on my old work PC but never occurred on my home PC (both running the same version of Windows).  I searched through all the Explorer options for a way of turning it off, then I searched through all of those tedious system policy options looking for where the option could be changed.</p>
<p>Finally (thanks to Eyal), I have found out where it is set.  The options for the common file dialogs are under &quot;Internet Options&quot; in Internet Explorer.  How silly I am for not thinking to look there.</p>
<p>Jonathan</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-165413">
				<div id="div-comment-165413" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://weblogs.asp.net/oldnewthing' rel='external nofollow' class='url'>Raymond Chen</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040419-00/?p=39753#comment-165413">
			April 20, 2004 at 7:37 am</a>		</div>

		<p>Autocomplete is not a feature of the basic edit control. It&#8217;s an add-on (SHAutoComplete). And notice that autocomplete takes place outside the edit control; the edit control itself has no idea that autocomplete is happening to it.</p>
<p>Whereas if you want squigglies, now you have to change the way the edit control draws text, you need new messages to control which parts of the edit control get squiggled.</p>
<p>There was another thread about why spell checking is not an OS feature. I&#8217;ll refer you to that one.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-165663">
				<div id="div-comment-165663" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.geary.com/' rel='external nofollow' class='url'>Michael Geary</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040419-00/?p=39753#comment-165663">
			April 20, 2004 at 11:31 am</a>		</div>

		<p>&quot;The worst way to do validation is when someone tries to validate on change. That is, an edit box with a spin control, designed for entry of signed integers, which, when any character is entered, validates the new contents.&quot;</p>
<p>It can get even worse than that. The most annoying piece of input validation I&#8217;ve seen was in Canon&#8217;s PhotoRecord photo printing program. Their Print dialog had the typical option to print pages M through N with separate edit boxes for M and N.</p>
<p>But, they validated on WM_KILLFOCUS and cross checked these two fields against each other. And they remembered the entries in these two fields from the last time you used the dialog.</p>
<p>I would often want to print, say, pages 3-5 and 8-9 from an album. Since they didn&#8217;t have an Office-style page selection field where I could just enter &quot;3-5,8-9&quot;, I had to first print pages 3 through 5, and then use a second Print command to print pages 8 and 9.</p>
<p>So I&#8217;d enter 8 in the first field and hit Tab, and because 8 through 5 is not a valid range they would &quot;correct&quot; my page 8 to be 5 instead. I would have to change the last-page field to 9 and then come back to enter 8 for the first page again.</p>
<p>Just to add insult to injury, their wacky validation code also disabled the normal behavior of Tab that selects an entire edit field when you tab to it. Instead, it put the caret at the beginning of the field with nothing selected.</p>
<p>To their credit, Canon did fix this in version 2 of PhotoRecord by using a completely different UI to select pages for printing.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-165703">
				<div id="div-comment-165703" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Daniel Cox</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040419-00/?p=39753#comment-165703">
			April 20, 2004 at 1:43 pm</a>		</div>

		<p>So what it the right way to perform validation in a modeless properties editor? I took a look at the property editor within VS.NET. When I enter invalid text into an edit control and transfer focus to anything &#8211; I get a dialog popped up and focus is reset to the control. Having a look at the messages being sent validation is occuring on WM_KILLFOCUS &#8211; just as I would have expected&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-165713">
				<div id="div-comment-165713" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://weblogs.asp.net/oldnewthing/' rel='external nofollow' class='url'>Raymond Chen</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040419-00/?p=39753#comment-165713">
			April 20, 2004 at 2:03 pm</a>		</div>

		<p>You can do unobtrusive validation on focus loss but you shouldn&#8217;t interrupt the user&#8217;s flow. When the changes are applied, then you can put up whatever error messages you want.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-165833">
				<div id="div-comment-165833" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.geary.com/' rel='external nofollow' class='url'>Michael Geary</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040419-00/?p=39753#comment-165833">
			April 20, 2004 at 4:02 pm</a>		</div>

		<p>In test #2 above, I left out one step. After running the app, open the About box. Then type some text in the edit controls and tab around the dialog. (I know, that&#8217;s obvious&#8211;but I always hate it when I describe a test procedure and forget a step. &lt;g&gt;)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-165843">
				<div id="div-comment-165843" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://weblogs.asp.net/oldnewthing/' rel='external nofollow' class='url'>Raymond Chen</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040419-00/?p=39753#comment-165843">
			April 20, 2004 at 4:05 pm</a>		</div>

		<p>The behavior Michael describes is standard behavior for IsDialogMessage for any control that reports DLGC_HASSETSEL. So it&#8217;s not &quot;just&quot; tab behavior and not &quot;just&quot; edit behavior; it&#8217;s a combination of both.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-165813">
				<div id="div-comment-165813" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.popcornfilms.com' rel='external nofollow' class='url'>Simon Cooke [exMSFT]</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040419-00/?p=39753#comment-165813">
			April 20, 2004 at 3:35 pm</a>		</div>

		<p>Michael Geary wrote:<br />
<br />&gt; Just to add insult to injury, their wacky<br />
<br />&gt; validation code also disabled the normal<br />
<br />&gt; behavior of Tab that selects an entire edit<br />
<br />&gt; field when you tab to it. Instead, it put<br />
<br />&gt; the caret at the beginning of the field with<br />
<br />&gt; nothing selected</p>
<p>Err&#8230; what you described as normal tab behavior isn&#8217;t normal Tab behavior. What they were doing, however, *is* normal, unadulterated, raw EDIT control tab behavior.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-165823">
				<div id="div-comment-165823" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.geary.com/' rel='external nofollow' class='url'>Michael Geary</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040419-00/?p=39753#comment-165823">
			April 20, 2004 at 3:58 pm</a>		</div>

		<p>Sorry, Simon, but in a normal Windows dialog, tabbing into an Edit control *does* select the text.</p>
<p>Try either of these two tests on Windows XP:</p>
<p>1) Run Notepad. Open the Replace dialog. Enter some text into both edit boxes. Hit Tab a few times.</p>
<p>2) Use VS.NET 2003 to create a vanilla Win32 application. Use the dialog editor to add two Edit controls to the About box. Compile and run the app. Type some text into the Edit controls. Hit Tab a few times.</p>
<p>You&#8217;ll see that in both cases, the Tab key selects the text in the edit controls.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-165993">
				<div id="div-comment-165993" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.geary.com/' rel='external nofollow' class='url'>Michael Geary</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040419-00/?p=39753#comment-165993">
			April 20, 2004 at 11:05 pm</a>		</div>

		<p>Thanks, Raymond. That DLGC_HASSETSEL trick is a good example of why programs should use IsDialogMessage instead of rolling their own tab key management as I&#8217;ve seen some apps do (maybe that is what tripped up the print dialog in PhotoRecord).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-166173">
				<div id="div-comment-166173" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Marc Wallace</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040419-00/?p=39753#comment-166173">
			April 21, 2004 at 11:43 am</a>		</div>

		<p>Peter Torr notes: &#8216;While we&#8217;re on the subject, not only can you not trust KILLFOCUS, you can&#8217;t trust that &quot;disabled&quot; or &quot;hidden&quot; controls will not contain input when being used by malicious end users. Search the web for &quot;shatter attacks&quot; if you want to know why.&#8217;</p>
<p>Oh, I love those web sites that force you through a EULA in a readonly [textarea].</p>
<p>If they had just put it on the page, then I would have had to accept it.  But nooo&#8230; it&#8217;s a textarea.  My standard Proxomitron filters remove readonly and disabled flags.  I don&#8217;t think I&#8217;ve accepted the actual text of an online EULA in years.</p>
<p>Hadn&#8217;t heard about shatter attacks, though.  Ah, some good lunchtime reading!</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-186283">
				<div id="div-comment-186283" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://weblogs.asp.net/oldnewthing/' rel='external nofollow' class='url'>Raymond Chen</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040419-00/?p=39753#comment-186283">
			June 22, 2004 at 9:06 pm</a>		</div>

		<p>Commenting on this entry has been closed.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-295283">
				<div id="div-comment-295283" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blogs.msdn.com/oldnewthing/archive/2005/08/08/448969.aspx' rel='external nofollow' class='url'>The Old New Thing</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040419-00/?p=39753#comment-295283">
			August 8, 2005 at 10:00 am</a>		</div>

		<p>It gums up the focus system.</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>