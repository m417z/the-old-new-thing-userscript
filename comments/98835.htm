<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (10)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1 parent" id="comment-1342785">
				<div id="div-comment-1342785" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://geelaw.blog/' rel='external nofollow' class='url'>Gee Law</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180525-00/?p=98835#comment-1342785">
			May 25, 2018 at 10:59 am</a>		</div>

		<p>It surprises me that someone with any proficiency in C++ would ask such a question. And not just someone, but three someones.</p>

		
				</div>
		<ol class="children">
		<li class="comment odd alt depth-2 parent" id="comment-1342895">
				<div id="div-comment-1342895" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Scarlet Manuka</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180525-00/?p=98835#comment-1342895">
			May 27, 2018 at 11:04 pm</a>		</div>

		<p>Not everyone who reads this blog is proficient in C++. I&#8217;m certainly not. Then again, I thought it was pretty clear what was going on in the referenced article. It was only necessary to look at the previous section, which had all the fully qualified namespaces listed out.</p>

		
				</div>
		<ol class="children">
		<li class="comment even depth-3" id="comment-1343065">
				<div id="div-comment-1343065" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://geelaw.blog/' rel='external nofollow' class='url'>GL</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180525-00/?p=98835#comment-1343065">
			May 29, 2018 at 4:38 am</a>		</div>

		<p>Agreed. I would say any sane language with any scoping would perform name look-ups that way.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1 parent" id="comment-1342795">
				<div id="div-comment-1342795" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Peter</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180525-00/?p=98835#comment-1342795">
			May 25, 2018 at 11:27 am</a>		</div>

		<p>Might it be better to fully qualify the nested namespaces?</p>
<p>namespace X<br />
{<br />
  using namespace ::X::W;<br />
}</p>
<p>It would avoid potential confusion.  The fact that the first two namespaces are importing relative namespaces and the third is importing a top-level namespace is pretty subtle, in my opinion.  There&#8217;d be no way to tell that was happening in a code review, for example, unless you were intimately familiar with the external definitions of W, X, Y, and Z.</p>

		
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-archangelpip even depth-2 parent" id="comment-1342875">
				<div id="div-comment-1342875" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Darran+Rowe' rel='external nofollow' class='url'>Darran Rowe</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180525-00/?p=98835#comment-1342875">
			May 27, 2018 at 8:13 pm</a>		</div>

		<p>I would disagree about confusion and this being subtle because if you find this subtle and it confuses you then you simply don&#8217;t understand the language. The unqualified name lookup rules are easy to understand and (not including ADL for functions) the same for variables, functions and namespaces. Basically start at the current namespace and then work outwards until you hit the global namespace.<br />
For the code review, that would imply that you take incomplete code to the review, i.e. not taking at least the declaration of the namespace you are importing and all of the contained items. Because remember, to be able to use the using directive in the way that Raymond mentioned, you need to be familiar with the external definitions, and the only other places this would occur in your code would be in namespaces that you wrote yourself.</p>

		
				</div>
		<ol class="children">
		<li class="comment odd alt depth-3 parent" id="comment-1342905">
				<div id="div-comment-1342905" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Someone</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180525-00/?p=98835#comment-1342905">
			May 28, 2018 at 12:25 am</a>		</div>

		<p>Because I don&#8217;t know: Is there really a namespace ABI::Windows::System::Profile::SystemManufacturers as also cx::Windows::System::Profile::SystemManufacturers as also winrt::Windows::System::Profile::SystemManufacturers? And when: Why on earth (assuming they contain the same)?</p>

		
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-oldnewthing bypostauthor even depth-4" id="comment-1342915">
				<div id="div-comment-1342915" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Raymond+Chen+-+MSFT' rel='external nofollow' class='url'>Raymond Chen - MSFT</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180525-00/?p=98835#comment-1342915">
			May 28, 2018 at 7:03 am</a>		</div>

		<p>ABI contains the raw definitions. cx contains the definitions for use in C++/CX. And winrt contains the definitinos for use in C++/winrt.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment odd alt thread-even depth-1" id="comment-1342815">
				<div id="div-comment-1342815" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Zachary</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180525-00/?p=98835#comment-1342815">
			May 25, 2018 at 2:54 pm</a>		</div>

		<p>It would be much better.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-odd thread-alt depth-1" id="comment-1342835">
				<div id="div-comment-1342835" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Dave</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180525-00/?p=98835#comment-1342835">
			May 25, 2018 at 6:51 pm</a>		</div>

		<p>It&#8217;s easy to see why there&#8217;s no IOC++CC, the language is self-obfuscating.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-even depth-1" id="comment-1342975">
				<div id="div-comment-1342975" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">JohnR</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180525-00/?p=98835#comment-1342975">
			May 28, 2018 at 1:45 pm</a>		</div>

		<p>Really, that confused people? I guess some people need to brush up on their C++.</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>