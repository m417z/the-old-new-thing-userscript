<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (37)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-311033">
				<div id="div-comment-311033" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.thespoke.net/blogs/travisowens/' rel='external nofollow' class='url'>Travis Owens</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20051005-09/?p=33903#comment-311033">
			October 5, 2005 at 10:21 am</a>		</div>

		<p>Off topic but on the subject of virtual machines:</p>
<p>Applications like DosBox show that Microsoft didn&#8217;t cover all the bases with their backwards support.</p>
<p>I find it surprising that 2000 and XP didn&#8217;t map DOS sound into Direct X audio, so virtual machines like DosBox are still needed at times.</p>
<p>I wonder if Vista will finally take full dos featurality seriously or will I still have to run DosBox just to get proper DOS sound?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-larryosterman odd alt thread-odd thread-alt depth-1" id="comment-311043">
				<div id="div-comment-311043" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Larry+Osterman+%5BMSFT%5D' rel='external nofollow' class='url'>Larry Osterman [MSFT]</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20051005-09/?p=33903#comment-311043">
			October 5, 2005 at 10:37 am</a>		</div>

		<p>Travis,<br />
<br />  I&#8217;m sorry to have to tell you that improving Windows support for 16 bit DOS applications is NOT high on the list of features.  16 bit Windows multimedia apps should continue to work, but we&#8217;re not investing a whole lot of effort into DOS application support.</p>
<p>  Never mind the fact that we can&#8217;t even begin to support them on 64bit platforms.<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-311063">
				<div id="div-comment-311063" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">kalleboo</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20051005-09/?p=33903#comment-311063">
			October 5, 2005 at 10:52 am</a>		</div>

		<p>An interesting implementation is the Classic Environment in MacOS X, where they&#8217;ve done a very good job of bridging the old and the new. The classic MacOS sees the network through a fake network adapter, the programs show up on the OS X dock, and applications can pass high-level events between each other. Copy/paste and drag and drop is seamless.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-311073">
				<div id="div-comment-311073" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Frederik Slijkerman</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20051005-09/?p=33903#comment-311073">
			October 5, 2005 at 10:53 am</a>		</div>

		<p>Interesting, because the virtual machine approach is how Mac OS Classic is supported on OS X. It only proves Raymond&#8217;s point, because Apple has never cared much about backwards compatibility.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-311083">
				<div id="div-comment-311083" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Jack Mathews</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20051005-09/?p=33903#comment-311083">
			October 5, 2005 at 10:56 am</a>		</div>

		<p>I would say that the Classic interface has pretty much proved that a virtual machine CAN be done right.  All of your arguments against hold no water because while you &quot;tried&quot; the virtual machine route, someone <em>did</em> it and got it working well.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-311103">
				<div id="div-comment-311103" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Mike Dunn</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20051005-09/?p=33903#comment-311103">
			October 5, 2005 at 11:17 am</a>		</div>

		<p>Didn&#8217;t OS/2 take the VM approach as well? You could run Win 3.1 apps and they looked &amp; ran like Win 3.1 apps, similar to OS9 apps on OSX.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-311123">
				<div id="div-comment-311123" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Doug</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20051005-09/?p=33903#comment-311123">
			October 5, 2005 at 11:40 am</a>		</div>

		<p>Running new programs in a VM sandbox is where all of the isolation problems become a benefit.  I hope that IE running in a VM sandbox where it will not infect the rest of the system will make it into Vista.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-311133">
				<div id="div-comment-311133" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Stu</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20051005-09/?p=33903#comment-311133">
			October 5, 2005 at 11:44 am</a>		</div>

		<p>LarryOsterman: Never mind the fact that we can&#8217;t even begin to support them on 64bit platforms.</p>
<p>Ive never understood why Microsoft refuses to support 16-bit apps on Win64. VMWare and Virtual PC both prove that 16-bit apps can be run (on a virtual CPU) in a 64-bit enironment. Why not just run WOW on WOW64? (WOWOW?)</p>
<p>Raymond: Most of your arguements against virtual machines also apply to remote desktop. Vista solves most of them for RDP, such as file extension mapping, seamless windows/system tray, clipboard syncronisation, probably keyboad syncronisation, so they must be solvable for VM&#8217;s too.<br />
<br />You dont have to use the stock OS in the VM, you can add all sorts of custom drivers, etc to achive most of the syncronisation, WinOS/2 and MacOS X&#8217;s Classic environment both do this, and VirtualPC and VMWare both provide drivers to achive some syncronisation (Such as drag and drop, clipboard and keymap syncronisation. (I remember drag and drop being possible on SoftWindows 95 for PowerMac and there the two OS&#8217;s aren&#8217;t even remotely similar, so its a solved problem.))</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-311143">
				<div id="div-comment-311143" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">kbiel</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20051005-09/?p=33903#comment-311143">
			October 5, 2005 at 11:55 am</a>		</div>

		<p>That&#8217;s funny, OS/2 had a very successful (some would say too successful) VM implementation for running 16-bit Windows programs.  It didn&#8217;t solve all of the problems you mentioned, but it worked well enough that I felt more comfortable running my Windows programs in OS/2 rather than in Windows itself.</p>
<p>I know, I know, things are different these days, but I don&#8217;t believe the VM solution is as bad as you say it is, just expensive.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-311173">
				<div id="div-comment-311173" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Stu</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20051005-09/?p=33903#comment-311173">
			October 5, 2005 at 12:12 pm</a>		</div>

		<p>That was Longhorn Server rather than Vista&#8230; See here for a list of confirmed features: <a rel="nofollow" target="_new" href="http://www.brianmadden.com/content/content.asp?id=500" rel="nofollow">http://www.brianmadden.com/content/content.asp?id=500</a></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-oldnewthing bypostauthor even thread-even depth-1" id="comment-311183">
				<div id="div-comment-311183" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Raymond+Chen+-+MSFT' rel='external nofollow' class='url'>Raymond Chen - MSFT</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20051005-09/?p=33903#comment-311183">
			October 5, 2005 at 12:17 pm</a>		</div>

		<p>It depends on what you&#8217;re dragging and dropping. File names are not difficult to marshal. Excel spreadsheet cells are a little harder.</p>
<p>Notice that all of the examples people cite for usable VMs punched holes in the VM boundary. Thus proving my point. Merely running them in a VM isn&#8217;t good enough.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-311193">
				<div id="div-comment-311193" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">James Risto</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20051005-09/?p=33903#comment-311193">
			October 5, 2005 at 12:38 pm</a>		</div>

		<p>I am involved in a virtualization project right now, and this topic seems to gather more what I call &quot;holy grail&quot; than most other technologies. In other words, geez, if I can use virtual machines, I will solve everything. Wrong. The only savings is MAYBE on hardware, if you can load up enough VM&#8217;s on a box. But you don&#8217;t save on memory; that&#8217;s not virtualized. As far as TCO of a machine, you don&#8217;t save on licensing, patching, support effort. But management believes that the small it is, the cheaper. Blade servers = small = cheaper. VM&#8217;s = invisible = even cheaper. Wrong.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-311213">
				<div id="div-comment-311213" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Jack Mathews</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20051005-09/?p=33903#comment-311213">
			October 5, 2005 at 12:41 pm</a>		</div>

		<p>Punching holes is one thing.  The way Windows did it is a veritable screen door.</p>
<p>Most VM hole punching is done in a measured manner.  The &quot;host&quot; controls all data in, and fishes for any data to come out, and only specific data.  Certain small things are marshalled, and that&#8217;s it.  You need a taskbar icon?  You need drag and drop?  You need a clipboard?  Ok, you have those.  And ONLY those.</p>
<p>With Windows, they share the Window Manager.  Any 16-bit window can get access to any control in any application.  I mean, that&#8217;s just horrible.  And that&#8217;s the difference.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-311233">
				<div id="div-comment-311233" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">ATZ Man</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20051005-09/?p=33903#comment-311233">
			October 5, 2005 at 12:45 pm</a>		</div>

		<p>One man&#8217;s &quot;punching through the VM boundary&quot; is another man&#8217;s &quot;implementing an interpreter.&quot; </p>
<p>Chen, your experience with implementing a VM for running Win3.x apps under Win95 is interesting. Of course ultimately Win95 did run those apps, so your experience simply proves that some ways of running down-level apps are worse than other ways. Your approach was more like the way one might run a cellphone app on one&#8217;s desktop to validate it. The cellphone simulator is going to try to make the app&#8217;s environment and the tester&#8217;s experience of it as close as possible to the environment and experience provided by the real cellphone. We don&#8217;t want that verisimilitude when we want to run a DOS 3.3 app under 64-bit Windows Vista on Itanium. So the approach to take is more like the JVM approach (start with an interpreter and then optimize) than the simulator approach.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-311243">
				<div id="div-comment-311243" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.thespoke.net/blogs/travisowens/' rel='external nofollow' class='url'>Travis Owens</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20051005-09/?p=33903#comment-311243">
			October 5, 2005 at 12:59 pm</a>		</div>

		<p>LarryOsterman,</p>
<p>I appreciate your bottom line answer, I have no problem keeping with DosBox.  I&#8217;d rather not have to wonder if I&#8217;ll find multimedia support in an upcoming version of Windows as I&#8217;ve been wondering that for ~5yrs now but at least I know it&#8217;s not a priority and can just get over it.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-311253">
				<div id="div-comment-311253" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.semack.net' rel='external nofollow' class='url'>Myron A. Semack</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20051005-09/?p=33903#comment-311253">
			October 5, 2005 at 2:34 pm</a>		</div>

		<p>&quot;Ive never understood why Microsoft refuses to support 16-bit apps on Win64.&quot;</p>
<p>When an x64 CPU switches into Long Mode, you lose access to Virtual 8086 mode (which is how 16-bit apps were emulated on 32-bit Windows).  This means you can&#8217;t execute 16-bit code.</p>
<p>IIRC, you cant get out of long mode without resetting the CPU.<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-311283">
				<div id="div-comment-311283" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.puckdroppers.us' rel='external nofollow' class='url'>Puckdropper</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20051005-09/?p=33903#comment-311283">
			October 5, 2005 at 3:22 pm</a>		</div>

		<p>Myron A. Semack, I remember such a problem with 286 or 386 processors.  I think it was a 286.  You couldn&#8217;t switch modes of the CPU without resetting it.  What some programs did was save the state of the CPU before changing mode and put the CPU back in that state after the process was done.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-311293">
				<div id="div-comment-311293" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.semack.net' rel='external nofollow' class='url'>Myron A. Semack</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20051005-09/?p=33903#comment-311293">
			October 5, 2005 at 3:33 pm</a>		</div>

		<p>Yeah, that was the 286.  As I recall, switching out of protected mode was extremely slow (like several miliseconds).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-311303">
				<div id="div-comment-311303" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Stu</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20051005-09/?p=33903#comment-311303">
			October 5, 2005 at 3:45 pm</a>		</div>

		<p>Myron A. Semack: When an x64 CPU switches into Long Mode, you lose access to Virtual 8086 mode (which is how 16-bit apps were emulated on 32-bit Windows). This means you can&#8217;t execute 16-bit code.</p>
<p>Then explain how VMWare and VirtualPC can continue to function on a 64-bit OS (as a 32-bit app). VMWare already works on Linux x86_64 (I use it) and has a beta for Win64. It does not do CPU emulation. How does it continue to be able to run 16-bit code even on a 64-bit OS?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-311313">
				<div id="div-comment-311313" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">James Day</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20051005-09/?p=33903#comment-311313">
			October 5, 2005 at 3:50 pm</a>		</div>

		<p>It sounds and has sounded for a while as though virtual machines are the way to go. Even with their limitations, they work for more cases than the other compatibility routes and that&#8217;s important when the base platform &#8211; Windows &#8211; has its current very short product lifecycles. I don&#8217;t care so much if something doesn&#8217;t work in a new OS if it includes a virtual machine and old OS version as well, so I can still run the applications.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-311323">
				<div id="div-comment-311323" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Nate</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20051005-09/?p=33903#comment-311323">
			October 5, 2005 at 4:59 pm</a>		</div>

		<p>Even if 64-bit Windows could not run 16-bit code directly, they could just emulate it in software.  So what if it runs 15x slower?  You do not need to run Lotus 123 at 3 GHz</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-311333">
				<div id="div-comment-311333" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.semack.net' rel='external nofollow' class='url'>Myron A. Semack</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20051005-09/?p=33903#comment-311333">
			October 5, 2005 at 5:16 pm</a>		</div>

		<p>&quot;Then explain how VMWare and VirtualPC can continue to function on a 64-bit OS (as a 32-bit app). VMWare already works on Linux x86_64 (I use it) and has a beta for Win64. It does not do CPU emulation. How does it continue to be able to run 16-bit code even on a 64-bit OS?&quot;</p>
<p>VMWare must be virtualizing the 16-bit stuff.  The lack of Virtual 8086 mode when you&#8217;re in Long Mode is a documented limitation of the x64 ISA.<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-311353">
				<div id="div-comment-311353" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">kbiel</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20051005-09/?p=33903#comment-311353">
			October 5, 2005 at 6:06 pm</a>		</div>

		<p>Raymond,</p>
<p>You said, &quot;Notice that all of the examples people cite for usable VMs punched holes in the VM boundary. Thus proving my point.&quot;</p>
<p>But your example of why using VM for backwards compatibility was just that, a VM with holes punched through the VM boundry.  So, just what is your point?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-oldnewthing bypostauthor odd alt thread-odd thread-alt depth-1" id="comment-311363">
				<div id="div-comment-311363" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Raymond+Chen+-+MSFT' rel='external nofollow' class='url'>Raymond Chen - MSFT</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20051005-09/?p=33903#comment-311363">
			October 5, 2005 at 6:20 pm</a>		</div>

		<p>This entry was a response to people saying, &quot;Why doesn&#8217;t Microsoft just include a copy of Virtual PC with Windows?&quot;  In order to get something usable, you have to start punching holes.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-311203">
				<div id="div-comment-311203" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Arlie Davis</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20051005-09/?p=33903#comment-311203">
			October 5, 2005 at 12:39 pm</a>		</div>

		<p>Are any of you paying attention?  NT supported a fairly good 16-bit DOS virtual machine for *years* and still does on 32-bit platforms.  NTVDM.EXE.  The support is so transparent that most people don&#8217;t even realize there is anything different about 16-bit apps running on NT.</p>
<p>Raymond&#8217;s talking about a fully isolated virtual machine, such as VMware.  Approaches like NTVDM are highly integrated virtual machines.  Most API calls result in thunked calls to the &quot;real&quot; APIs.  This is not at all the approach of the fully-virtualized box that VMware (and Virtual PC, etc.) provide.  Apple&#8217;s OS9- support is analogous to Microsoft&#8217;s NTVDM support &#8212; both are virtual machines that make every effort to integrate the virtual machine&#8217;s environment into the &quot;real&quot; machine.</p>
<p>Further, Microsoft, please don&#8217;t waste any more time supporting real-mode 16-bit audio hardware.  It&#8217;s 2005!  Anyone who needs this stuff already has it, and I would rather have WinFS than SoundBlaster emulation.</p>
<p>Backward compatibility can be the best thing in the world, and can be the worst thing in the world.  But there comes a time to say, ENOUGH!  It&#8217;s time to move on!<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-311393">
				<div id="div-comment-311393" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">James Day</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20051005-09/?p=33903#comment-311393">
			October 5, 2005 at 9:25 pm</a>		</div>

		<p>So punch some holes. This isn&#8217;t about purity of concept, it&#8217;s about keeping the applications running. Not many and not as many as you suggested. This isn&#8217;t full integration, it&#8217;s keep things working. Vista with Virtual PC and XP and ME and NT and 98 and 95 and 3.1 and M-DOS would be nice from my point of view, assuming they actually worked in the virtual machine. And assuming that this was in the most basic home user package as well as the rest.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-311413">
				<div id="div-comment-311413" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">ken lubar</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20051005-09/?p=33903#comment-311413">
			October 5, 2005 at 10:10 pm</a>		</div>

		<p>There are some great examples of VMs that worked well and were very useful. Back a long time ago, VM370 (an old time sharing system) gave each user his or her own virtual IBM 370. Complete with console lights and switches.</p>
<p>In that virtual machine you could load and run any operating system you wanted&#8211;DOS (the original), TSO (a time sharing system) or even another copy of VM370.  I think you could next the virtual machines at least 7 layers deep. It was quite cool and really did work seamlessly.</p>
<p>On occasion, I really would like to fire up another machine for testing or to deploy an application that potentially can much up my primary machine.</p>
<p>Boy do I feel old writing about the 370.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-311433">
				<div id="div-comment-311433" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">James Day</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20051005-09/?p=33903#comment-311433">
			October 5, 2005 at 11:36 pm</a>		</div>

		<p>Ken,</p>
<p>Don&#8217;t worry about writing about the 370. I rewrote Microsoft&#8217;s FORTRAN 66 floating point library for the Z80 to use an AM9511ADC math coprocessor chip as a university project (don&#8217;t think Microsoft ever knew about this). Lots of us &quot;old&quot; people around. :)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-311483">
				<div id="div-comment-311483" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Jonathan Wilson</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20051005-09/?p=33903#comment-311483">
			October 6, 2005 at 3:52 am</a>		</div>

		<p>I think that the best possible way to run old apps would be to do something similar to what WINE does that translates API calls. (only better because microsoft could use actual windows source code to make it happen)<br />
<br />So, old apps would run on a &quot;virtual&quot; layer that presents the old API calls whilst new apps see a totally new API.<br />
<br />Both upper-level APIs would talk through to the kernel and drivers and such.<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-311493">
				<div id="div-comment-311493" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Nick</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20051005-09/?p=33903#comment-311493">
			October 6, 2005 at 8:11 am</a>		</div>

		<blockquote><p>
  &gt; Ive never understood why Microsoft refuses to support 16-bit apps on Win64.<br />
  <br />&gt; When an x64 CPU switches into Long Mode, you lose access to Virtual 8086 mode (which is how 16-bit apps were emulated on 32-bit Windows). This means you can&#8217;t execute 16-bit code.<br />
  <br />&gt; IIRC, you cant get out of long mode without resetting the CPU. </p>
<p>w3.x (in enhanced mode) &amp; w9x uses Virtual 8086 mode to run dos apps, NT does not. Thus 64-bit NT should be able to emulate 8086 real mode just as easily as 32-bit NT does. 16-bit windows apps is another story, but shouldn&#8217;t be impossible to run in a similar way but with thunking.
</p></blockquote>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-311503">
				<div id="div-comment-311503" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.johntopley.com/' rel='external nofollow' class='url'>John Topley</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20051005-09/?p=33903#comment-311503">
			October 6, 2005 at 9:23 am</a>		</div>

		<p>Wasn&#8217;t IBM&#8217;s OS/370 the first commercially available VM operating system? There&#8217;s a fascinating section in Andrew Schulman&#8217;s old &quot;Unauthorized Windows 95&quot; book that talks about how large chunks of the Windows 3x/9x line can indirectly trace their VM technology back to IBM&#8217;s work in 1972.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-311463">
				<div id="div-comment-311463" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Leif</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20051005-09/?p=33903#comment-311463">
			October 6, 2005 at 3:09 am</a>		</div>

		<p>Several people here have cited Mac OS X&#8217;s Classic environment as a refutation of Raymond&#8217;s point, but I think Classic, as it exists, actually SUPPORTS Raymond&#8217;s argument. If you think Classic proves that a VM compatibility layer can be done right, clearly you haven&#8217;t used Classic enough.</p>
<p>Most long-time Mac users that I know (myself included) HATE Classic. It takes forever to start (as Mac OS 9 boots within the VM), so that one quickly learns to avoid starting Classic apps, and winces every time one is started by accident. Apps running under Classic often don&#8217;t look or behave quite right, and are never as smooth as they are in their native environment. Mac OS X users yearn for Carbonized versions of their old apps, precisely because Classic simply isn&#8217;t good enough. If Classic was wonderful, the long and well-publicized delay in Carbonizing QuarkXPress would have been a non-issue.</p>
<p>However, I actually disagree with Raymond, because I also think that Classic could have been done a lot better than it was. Classic seems to have been done at, or close to, the device driver level, which seems to be a mistake. Running old Mac apps under X, I don&#8217;t care about extensions or device drivers or all the rest of it; I just want to run the app itself. How hard would it be to create a lightweight, per-process emulation layer that essentially Carbonizes old apps on the fly? You could thunk many Classic OS/Toolbox calls to the native Carbon framework, and use Switcher/MultiFinder-style kludgery to handle the rest. There would be nothing to boot, and Classic apps would enjoy memory protection from one another (*). I&#8217;m going to try it&#8230;</p>
<p>(*) The official mantra is that this is &quot;impossible&quot;, to which I propose the following thought experiment: Could Classic be tweaked such that two instances of it ran side-by-side? Can Classic and the OS X port of MOL be run side-by-side?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-311513">
				<div id="div-comment-311513" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Nate</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20051005-09/?p=33903#comment-311513">
			October 6, 2005 at 10:24 am</a>		</div>

		<blockquote><p>
  How hard would it be to create a lightweight, per-process emulation layer that essentially Carbonizes old apps on the fly?</p>
<p>It would be a compatibility nightmare.  Reading The Old New Thing, we learn the hell Raymond has gone through keeping new versions of Windows with old programs.  This would be hundreds of times harder with Classic Mac OS apps.</p>
<p>The Win32 API is ugly, but the Classic Mac OS API makes Win32 look like a work of art.  Classic Mac OS apps require the various Mac toolbox structures to be laid out in certain ways, often write into the system heap and do very &quot;yucky&quot; things more reminiscent of DOS applications.  There is no way that a transparent Classic compatibility environment could have been made.
</p></blockquote>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-311533">
				<div id="div-comment-311533" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Good Point</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20051005-09/?p=33903#comment-311533">
			October 6, 2005 at 2:37 pm</a>		</div>

		<p>Leif said:<br />
<br />Most long-time Mac users that I know (myself included) HATE Classic. It takes forever to start (as Mac OS 9 boots within the VM), so that one quickly learns to avoid starting Classic apps, and winces every time one is started by accident.</p>
<p>But if you make backwards compatibility somewhat functional but undesirable, the users will eventually want to stop using it and upgrade their applications.</p>
<p>Microsoft could learn a thing or two.  Then modern Windows wouldn&#8217;t be living with decisions made in the Windows 3.1 (or earlier) era.  And it wouldn&#8217;t have to be hacked to run bug riddled applications targeted at older platforms, that just somehow worked.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-311543">
				<div id="div-comment-311543" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.semack.net' rel='external nofollow' class='url'>Myron A. Semack</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20051005-09/?p=33903#comment-311543">
			October 6, 2005 at 3:51 pm</a>		</div>

		<p>&quot;w3.x (in enhanced mode) &amp; w9x uses Virtual 8086 mode to run dos apps, NT does not.&quot;</p>
<p>Some quick Googling says otherwise.<br />
<br /><a rel="nofollow" target="_new" href="http://en.wikipedia.org/wiki/Virtual_DOS_machine" rel="nofollow">http://en.wikipedia.org/wiki/Virtual_DOS_machine</a><br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-311603">
				<div id="div-comment-311603" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Mark Steward</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20051005-09/?p=33903#comment-311603">
			October 7, 2005 at 10:36 am</a>		</div>

		<p>Nick is partially correct &#8211; NT does use Virtual 8086 mode to run 16-bit apps on the IA-32, but <a rel="nofollow" target="_new" href="http://www.microsoft.com/resources/documentation/windowsnt/4/workstation/reskit/en-us/archi.mspx?pf=true#E5PAE" rel="nofollow">http://www.microsoft.com/resources/documentation/windowsnt/4/workstation/reskit/en-us/archi.mspx?pf=true#E5PAE</a> says it depends on architecture.  A bit further up on this page:</p>
<p>  The Win16 NTVDM can also run 16-bit applications On RISC processors, NTVDM emulates all Intel x86 instructions in addition to providing a virtual hardware environment.</p>
<p>I assume this is carried through to Windows XP, as the public symbols for ntvdm.exe imply that it can still be built with proper CPU simulation (the lack of CamelCase suggesting it&#8217;s originally from a separate project).</p>
<p>I see no technical reason not to continue WOW16 into Win64, but I&#8217;d surmise that it&#8217;s no longer a major force in selling Windows, so Microsoft are leaving it to 3rd parties, as with so many other projects that just don&#8217;t tip the balance any more.</p>
<p>It would be nice in the VALUEADDUNSUPP folder, maybe&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-311863">
				<div id="div-comment-311863" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Anonymous Coward</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20051005-09/?p=33903#comment-311863">
			October 9, 2005 at 8:09 pm</a>		</div>

		<p>Raymond wrote:<br />
<br />&gt; This entry was a response to people saying,<br />
<br />&gt; &quot;Why doesn&#8217;t Microsoft just include a copy of<br />
<br />&gt; Virtual PC with Windows?&quot; In order to get<br />
<br />&gt; something usable, you have to start punching<br />
<br />&gt; holes.</p>
<p>I fully agree that using a VM to run old apps is generally a bad idea.  It has it&#8217;s place, I think more on the sever than on the client, but  it&#8217;s a limited role.</p>
<p>Having said that, I think the real reason Microsoft doesn&#8217;t include a copy of Virtual PC with Windows is because it can SELL it separatetly.  Ever notice that Microsoft tends to &quot;integrate&quot; things into the OS that other companies are selling, but rarely bundles anything that MS is able to sell separately?</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>