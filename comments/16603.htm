<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (69)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-770473">
				<div id="div-comment-770473" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Medinoc</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090924-00/?p=16603#comment-770473">
			September 24, 2009 at 10:07 am</a>		</div>

		<p>&lt;&lt;&quot;Maybe there&#8217;s a driver somebody has already written that I can give the instructions to, and it&#8217;ll execute them for me?&quot;&gt;&gt;</p>
<p>This reminds me an awful lot of inpout32.dll. The only privileged instructions it allows are IN and OUT (as in inp() and outp()), but I&#8217;m sure you can already do quite a bunch of bad things with them.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-770483">
				<div id="div-comment-770483" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">sp</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090924-00/?p=16603#comment-770483">
			September 24, 2009 at 10:15 am</a>		</div>

		<p>We used to use a driver that we bought in that let you talk to arbitrary hardware without all of that tedious &quot;writing a driver&quot; business in my first programming job, and we went about installing it willy nilly on all our customers computers, whether their configuration needed it or not. It didn&#8217;t occur to me at the time how scary that was, but I guess there is nothing you can do about it. As long as no one is dumb enough to install it &#8211; oh&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-770493">
				<div id="div-comment-770493" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Medinoc</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090924-00/?p=16603#comment-770493">
			September 24, 2009 at 10:20 am</a>		</div>

		<p>About inpout32.dll, I hope at least it requires to run as an Administrator, but I can&#8217;t find the information explicitly stated anywhere.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-770503">
				<div id="div-comment-770503" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">dave</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090924-00/?p=16603#comment-770503">
			September 24, 2009 at 10:23 am</a>		</div>

		<p>In a previous job, I had a TCL interpreter running in kernel mode on Windows NT, to which I could feed commands from user mode. &nbsp;What could possibly go wrong? &nbsp;;-)</p>
<p>(It was used for testing: we were developing a file system driver and the TCL interpreter had commands to fondle the inside of the driver).</p>
<p>I promise the TCL driver wasn&#8217;t shipped.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-770513">
				<div id="div-comment-770513" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Wheeto</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090924-00/?p=16603#comment-770513">
			September 24, 2009 at 10:34 am</a>		</div>

		<p>The driver for the DLL other commenters are referring to needs to be installed by a user with the correct privileges. &nbsp;After it is installed, the permissions to use it can be set appropriately.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-770543">
				<div id="div-comment-770543" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">asd</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090924-00/?p=16603#comment-770543">
			September 24, 2009 at 11:02 am</a>		</div>

		<p>I think that guy mostly had problems with the amount of work needed to permit the application to execute privileged instructions, not with the idea of privileges itself. &#8220;I say this application won&#8217;t do harm and I want to allow it to run privileged instructions. This is my computer, I&#8217;m the boss here, where should I sign?&#8221; &#8211; &#8220;No, you&#8217;re wrong, Microsoft&#8217;s the boss here. Go spend several days writing a driver, this is the procedure we have for such things here.&#8221;</p>
<div class=post>[<i>And this differs from other modern operating systems how exactly? -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-770563">
				<div id="div-comment-770563" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blogs.windowsclient.net/bestsnowman/default.aspx' rel='external nofollow' class='url'>Matt Newman</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090924-00/?p=16603#comment-770563">
			September 24, 2009 at 11:52 am</a>		</div>

		<p>&quot;I say this application won&#8217;t do harm and I want to allow it to run privileged instructions. This is my computer, I&#8217;m the boss here, where should I sign?&quot; &#8211; &quot;No, you&#8217;re wrong, Microsoft&#8217;s the boss here. Go spend several days writing a driver, this is the procedure we have for such things here.&quot;</p>
<p>The machine is yours and you can tell give it any instruction you want BUT Windows as a feature doesn&#8217;t allow you to do that without following its procedures. If you don&#8217;t like that feature you can leave Windows and do it yourself.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-770573">
				<div id="div-comment-770573" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joseph Koss</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090924-00/?p=16603#comment-770573">
			September 24, 2009 at 12:01 pm</a>		</div>

		<p>It sure sounds to me like the person you were talking to is intimately familiar with assembly language and the hardware architecture, but not familiar with the (this?) operating systems heavy-handed dot-every-i cross-every-t requirements.</p>
<p>Remember that 64-bit drivers MUST BE SIGNED, so the OS is not only requiring that his needs be expressed in the form of a driver, but also that he send some payola to an authorized signing authority.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-770583">
				<div id="div-comment-770583" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">David Walker</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090924-00/?p=16603#comment-770583">
			September 24, 2009 at 12:32 pm</a>		</div>

		<p>Joseph: @hat &quot;payola&quot; comment was rude and unneccessary. &nbsp;Verifying drivers is a lot of work. &nbsp;It&#8217;s no better in the other worlds, where no outside or non-authorized companies can write drivers (or legally create interoperable hardware). &nbsp;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-770603">
				<div id="div-comment-770603" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Yuhong Bao</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090924-00/?p=16603#comment-770603">
			September 24, 2009 at 12:43 pm</a>		</div>

		<p>&quot;This reminds me an awful lot of inpout32.dll. The only privileged instructions it allows are IN and OUT (as in inp() and outp()), but I&#8217;m sure you can already do quite a bunch of bad things with them.&quot;</p>
<p>This reminds me quite a bit of OS/2&#8217;s IOPL support, where you can tag an export as IOPL and optionally specify a parameter copy count, then OS/2 will create a call gate to Ring 2, which have IOPL privileges, and then you can execute IN/OUT and CLI/STI. Sadly the elimination of segmentation in 32-bit OS/2 make this impossible, hence you need a 16-bit OS/2 DLL in order to do this.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-770613">
				<div id="div-comment-770613" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Steve</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090924-00/?p=16603#comment-770613">
			September 24, 2009 at 1:31 pm</a>		</div>

		<p>OK, someone said &quot;Yuhong Bao, Yuhong Bao, Yuhong Bao&quot;, who was it?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-770633">
				<div id="div-comment-770633" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.parkscomputing.com/' rel='external nofollow' class='url'>Paul M. Parks</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090924-00/?p=16603#comment-770633">
			September 24, 2009 at 1:44 pm</a>		</div>

		<p>&quot;OK, someone said &quot;Yuhong Bao, Yuhong Bao, Yuhong Bao&quot;, who was it?&quot;</p>
<p>I&#8217;m pretty sure he&#8217;s a clever combination of a Markov chain generator and a Wikipedia scraper. The writing style is about what you&#8217;d expect.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-770653">
				<div id="div-comment-770653" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">slab</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090924-00/?p=16603#comment-770653">
			September 24, 2009 at 2:50 pm</a>		</div>

		<p>&quot;It&#8217;s no better in the other worlds, where no outside or non-authorized companies can write drivers (or legally create interoperable hardware).&quot;</p>
<p>Um, what other worlds would those be?</p>
<p>You don&#8217;t have to work for Apple to write a driver for OS X, nor do you have to work for Red Hat/Ubuntu/Linus/whoever to write a driver for Linux, nor do you have to work for Sun to write a driver for OpenSolaris.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-770673">
				<div id="div-comment-770673" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">asd</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090924-00/?p=16603#comment-770673">
			September 24, 2009 at 3:55 pm</a>		</div>

		<p>[And this differs from other modern operating systems how exactly? -Raymond]</p>
<p>Yeah, sorry, I was imprudent to blame specifically ms, it&#8217;s not like I&#8217;m ms-hater or something. I just tried to explain how that guy should have thought. &quot;Obviously if the problem is just in permissions, then all that it should take is to ask for permission from user&quot;.</p>
<p>Then it turns out he needs to write a special, compiled with a separate ddk, built on a different set of functions and digitally signed application &lt;i&gt;just to be able to ask for that permission&lt;/i&gt;. No wonder he thought there should be a short way after all. All the more if the thing he was trying to do was something simple and harmless.</p>
<p>I&#8217;m not trying to blame nobody here, just saying that it&#8217;s kinda clear why these things happen. Design your teapot in a form of hammer and you&#8217;ll see people hitting nails with it.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-770693">
				<div id="div-comment-770693" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">John</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090924-00/?p=16603#comment-770693">
			September 24, 2009 at 4:03 pm</a>		</div>

		<p>Ken: Don&#8217;t you have to enable test signing mode when using self-signed certificates? &nbsp;I don&#8217;t think many people are willing to run a production system like that.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-770703">
				<div id="div-comment-770703" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">asd</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090924-00/?p=16603#comment-770703">
			September 24, 2009 at 4:05 pm</a>		</div>

		<p>On the second thought, ignore my previous comment. I don&#8217;t think I can come up with a better design anyway, so all of this is just musing. Letting user-level programs run privileged code is impossible, building a kernel-level equivalent of winapi is too much unneccessary work.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-770733">
				<div id="div-comment-770733" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Nick Lamb</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090924-00/?p=16603#comment-770733">
			September 24, 2009 at 5:06 pm</a>		</div>

		<p>asd, not impossible, not even hard, but probably ill-advised in most cases.</p>
<p>When a userspace program tries to execute privileged instructions (e.g. a hardware register write) the CPU will trap that, and control passes to the OS. The OS can determine what caused the trap and choose to simply carry out the privileged instruction itself.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-770753">
				<div id="div-comment-770753" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ben Voigt [C++ MVP]</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090924-00/?p=16603#comment-770753">
			September 24, 2009 at 5:51 pm</a>		</div>

		<p>&#8220;And this differs from other modern operating systems how exactly? -Raymond&#8221;</p>
<p>I guess Windows CE is not a modern OS? &nbsp;Or for a multi-user example which supports security, QNX?</p>
<p>A number of people here are asking the very reasonable question of why, if Administrator permission is sufficient to write some machine code to a file, install it in the driver database, and execute it, can&#8217;t Administrators run a program that takes those actions.</p>
<p>Clearly driver &gt; application running in a non-privileged user account. &nbsp;However, I can think of only one reason to make driver &gt; application running in an elevated admin account: DRM. &nbsp;And hence there are a great many drivers (such as giveio) that perform rather generic privileged operations on behalf of apps running as admin.</p>
<p>On the other hand, driver-level enforcement of the check for admin privilege on the app from which the request came is non-trivial. &nbsp;By not providing a standard, tested and secure mechanism for this, Microsoft has encouraged an ecosystem of poorly tested, likely vulnerable workarounds.</p>
<div class=post>[<i>The issue isn&#8217;t admin/non-admin permission. It&#8217;s an issue of processor mode. Applications (even applications with administrator privilege) run in user mode; drivers run in kernel mode. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-770763">
				<div id="div-comment-770763" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">MadQ</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090924-00/?p=16603#comment-770763">
			September 24, 2009 at 6:39 pm</a>		</div>

		<p>@Joseph Koss: Instead of spending all that money, he could just create his own certification authority, declare it trustworthy on his machine, and create the appropriate certificates himself. That&#8217;s what I did. I wasn&#8217;t about to spend a crapton of money just to able to go spelunking in driver land. On the other hand, I&#8217;d rather read an IBM manual than write a driver. No, wait! I didn&#8217;t mean it! Let&#8217;s just say writing a driver is a major pain in the behind. IMHO.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-770773">
				<div id="div-comment-770773" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joseph Koss</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090924-00/?p=16603#comment-770773">
			September 24, 2009 at 6:58 pm</a>		</div>

		<p>@David Walker: This has nothing to do with &quot;verifying drivers.&quot;</p>
<p>Driver signing is only for verifying who the publisher was. There is no &quot;hard work&quot; involved in this.</p>
<p>There is nothing rude about pointing this out as it goes directly to Raymond&#8217;s article. Things aren&#8217;t as simple as just writing a driver for win64. You need to pay for a certificate as well.</p>
<p>@Ken Hagan:</p>
<p>You can&#8217;t self-sign a driver for 64-bit windows. Really. You can&#8217;t. You can run in test mode which allows unsigned drivers, but you certainly can&#8217;t ask the end users to run in test mode full time.</p>
<p>This entire issue has caused quite a stir in the past, as one inventive company decided to sign a driver who&#8217;s only purpose was to allow the loading of other unsigned drivers. Microsoft moved quickly and successfully to revoke their certificate.</p>
<p>In short, you cannot just write a driver for win64. Thats not enough. You need to pay money to one of the short list of authorized certificate authorities as well.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-770783">
				<div id="div-comment-770783" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">JS</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090924-00/?p=16603#comment-770783">
			September 24, 2009 at 7:06 pm</a>		</div>

		<p>No, you can&#8217;t self-sign a kernel driver and have it run on an x64 OS. &nbsp;Not without enabling test-signing mode on the machine, and you can&#8217;t ask your customers to press F8 and select this option on every boot. &nbsp;</p>
<p>Also, there is no &quot;verification&quot; required. &nbsp;Just signing with a &quot;trusted&quot; certificate authority. &nbsp;The &quot;payola&quot; comment is, unfortunately, accurate.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-770823">
				<div id="div-comment-770823" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">someone else</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090924-00/?p=16603#comment-770823">
			September 24, 2009 at 7:46 pm</a>		</div>

		<p>I like the NPP metaphor. So the equivalent of bad drivers, idiot administrators and flaky hardware would be Chernobyl?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-770833">
				<div id="div-comment-770833" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">ChrisR</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090924-00/?p=16603#comment-770833">
			September 24, 2009 at 8:02 pm</a>		</div>

		<p>@Ben Voigt [C++ MVP]</p>
<p>You can&#8217;t just allow any program running as administrator to execute arbitrary instructions. &nbsp;Then we are back to allowing user mode programs crash the machine at will, probably mostly accidentally. &nbsp;This was a design goal of NT afaik. &nbsp;A user mode program should not be able to crash the machine.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-770843">
				<div id="div-comment-770843" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.pretentiousname.com' rel='external nofollow' class='url'>Leo Davidson</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090924-00/?p=16603#comment-770843">
			September 24, 2009 at 8:49 pm</a>		</div>

		<p>&quot;No, you can&#8217;t self-sign a kernel driver and have it run on an x64 OS. &nbsp;Not without enabling test-signing mode on the machine&quot;</p>
<p>Can&#8217;t you do it if you also create and install your own root CA? Or is there some kind of restriction on which root CAs can be trusted for drivers which cannot be overridden?</p>
<p>I know of at least two tools which install their own root CAs when you install them. Made me wish such things were flagged to the user as I don&#8217;t really want root CAs on my machine unless I really trust the owner of them.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-770863">
				<div id="div-comment-770863" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">frymaster</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090924-00/?p=16603#comment-770863">
			September 24, 2009 at 10:15 pm</a>		</div>

		<p>&quot;You need to pay money to one of the short list of authorized certificate authorities as well&quot;</p>
<p>true. &nbsp;but, quite frankly, anyone writing code that people pay for that gets executed on other people&#8217;s systems should have one anyway, in the same way that anyone who has a website handling confidential information shouldn&#8217;t use a self-signed ssl cert.</p>
<p>in the case of the original issue, that doesn&#8217;t help, presumably. &nbsp;But if he&#8217;s just after something quick&#8217;n&#8217;dirty he can put testing mode on</p>
<p>@Leo: &nbsp;The way it works is, you sign your code as proof that it&#8217;s yours, then send your code + your driver verifier results to MS, who then counter-sign your code. &nbsp;So it&#8217;s the existence of MS&#8217;s signature that matters for drivers, not yours. &nbsp;And, of course, they only recognise certain issuers for your code signing certificate &#8211; a pain, but understandable.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-770873">
				<div id="div-comment-770873" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ben Voigt [C++ MVP]</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090924-00/?p=16603#comment-770873">
			September 24, 2009 at 10:18 pm</a>		</div>

		<p>@ChrisR:</p>
<p>Any program running as administrator can crash the machine, trivially (you can load any signed driver, connect to any device instance and run any ioctl, overwrite critical OS files, stop any service, take ownership and change permissions on any kernel object, etc).</p>
<p>You have a point about &quot;accidental&quot; damage, but this is just a design requirement not an insurmountable obstacle, as exemplified by QNX where you have to enable the dangerous privileges on a per-process basis.</p>
<p>Really though, Microsoft should allow the root driver certificate to be replaced (not just added to, a list would be a good thing but not if you can&#8217;t also untrust existing drivers). &nbsp;The incredibly poor quality of many signed drivers should be more than adequate justification for this.</p>
<p>Among other things, this would create a space for competitors to WHQL that might actually be serious about quality. &nbsp;Linux distros have stable and bleeding edge repositories, why not Windows? &nbsp;Ordinary users could keep on trusting WHQL, while server admins might choose to demand the &quot;Certified Mission Critical&quot; by Company XYZ signature on drivers they load (where XYZ is any of the big names such as Dell, Sun, Novell, etc; ISO NNNN software test groups; or generally whoever is effective).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-770883">
				<div id="div-comment-770883" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Dan</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090924-00/?p=16603#comment-770883">
			September 24, 2009 at 10:18 pm</a>		</div>

		<p>AFAIK driver signing (by Microsoft, at least) requires the driver to go through WHQL testing, which I believe David was referring to. &nbsp;Microsoft really wants signed drivers to be stable because it&#8217;s always Windows that gets blamed when the computer crashes regardless of who wrote the driver that crashed it.</p>
<p>However in Joseph&#8217;s favor, on the other hand&#8230; really, it&#8217;s three instructions. &nbsp;That can&#8217;t be any more than one code path. &nbsp;Not a lot of testing is going to be needed.</p>
<p>If you&#8217;re writing this three-instruction driver for a commercial application the driver requirements would definitely be annoying. &nbsp;However if it is for internal use only you could easily create a root CA for the company and install it on all company machines, then just sign drivers yourself. &nbsp;Problem solved.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-770663">
				<div id="div-comment-770663" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://K.Hagan@thermoteknix.com' rel='external nofollow' class='url'>Ken Hagan</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090924-00/?p=16603#comment-770663">
			September 24, 2009 at 3:27 pm</a>		</div>

		<p>You can self-sign a driver, so there&#8217;s no financial barrier as long as your users trust you. And speaking of trust, a truly terrifying number of users will probably run anything you email them. :(</p>
<p>In a corporate environment, life *is* harder. That self-signed driver is probably blocked by policy and it is a security professional who you&#8217;d have to convince to run your installer. Then there *is* a cash barrier, and for products with very low earning potential it is probably a very real barrier.</p>
<p>On the other hand, you can get many of the same privileges by writing a service and running it as SYSTEM.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-770893">
				<div id="div-comment-770893" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ben Voigt [C++ MVP]</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090924-00/?p=16603#comment-770893">
			September 24, 2009 at 10:29 pm</a>		</div>

		<p>@Raymond:</p>
<p>Processor mode is real, but it&#8217;s not binary &#8212; &#8220;kernel mode&#8221; and &#8220;user mode&#8221; are made up by DRM-loving OS vendors. &nbsp;Windows writes a bunch of processor registers before transitioning to code not designated as &#8220;kernel mode&#8221; setting up a bunch of restrictions. &nbsp;It could (and some other OSes do) permit subsets of these restrictions. &nbsp;It&#8217;s a matter of making a few more things per-process variables during context switch instead of constants.</p>
<p>And yes, doing it well would be expensive. &nbsp;It&#8217;s a matter of whether you want every program wanting to read from SMBus to require a custom driver, forcing code into ring 0 where there are NO restrictions or protections and bugs are practically guaranteed to cause a system crash, or give programmers an environment where they can accomplish what they need to while still providing e.g. memory virtualization.</p>
<div class=post>[<i>Are you saying that Ken Thompson and Linus Torvalds are DRM-loving OS-authors? -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-770903">
				<div id="div-comment-770903" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Pax</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090924-00/?p=16603#comment-770903">
			September 24, 2009 at 11:11 pm</a>		</div>

		<p>Re the nuke reactor: &quot;But that&#8217;s so much work. I just need to go in and remove some of the control rods.&quot;</p>
<p>Fantastic idea. Then run like hell&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-770913">
				<div id="div-comment-770913" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Shane</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090924-00/?p=16603#comment-770913">
			September 24, 2009 at 11:47 pm</a>		</div>

		<p>Ok a driver which executes arbitrary instructions from anyone who asks is a bad idea.</p>
<p>But what about a driver that uses ACL or some other whitelist device to execute instructions from trusted sources?</p>
<p>An admin can already write and install any driver they like, so why not allow admins to run arbitrary privileged code via a &#8216;generic&#8217; driver, seeing as they can do this anyway by writing and installed their own driver?</p>
<p>This wouldn&#8217;t work in versions of Windows that require signed drivers, but it should be allowed in cases where Windows can allow non-signed drivers. The reason being: it&#8217;s already possible, it just takes more effort.</p>
<p>This sort of stuff is already enabled with things like soft-ice and other kernel level debuggers.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-770923">
				<div id="div-comment-770923" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">woongbin</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090924-00/?p=16603#comment-770923">
			September 25, 2009 at 12:17 am</a>		</div>

		<p>@Thursday, September 24, 2009 10:29 PM by Ben Voigt [C++ MVP]</p>
<p>&#8216;</p>
<p>Processor mode is real, but it&#8217;s not binary &#8212; &quot;kernel mode&quot; and &quot;user mode&quot; are made up by DRM-loving OS vendors. &nbsp;</p>
<p>&#8216;</p>
<p>Hahaha, I never expected to see this kind of comment here. Thanks for the laugh of the day.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-770963">
				<div id="div-comment-770963" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Christian</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090924-00/?p=16603#comment-770963">
			September 25, 2009 at 4:59 am</a>		</div>

		<p>I think some big video drivers are essentially &quot;execute anything that gets passed to them in kernel mode&quot; drivers :-)</p>
<p>They have so many security holes that they would be ideal loaders to get code into 64 bit OS without signing.</p>
<p>I&#8217;m also very annoyed by the signing-requirement for 64 bit os, but at least OpenVPN (TUN/TAP) and WinPCAP are available.</p>
<p>It&#8217;s a good thing if users are still able to create drivers, e.g. to patch running programms and remove certain restrictions (uxtheme comes to mind. One company switched from patching on disc to writing a small drivers that patches it in memory), e.g. DRM or exporting LSASS secrets for recovery of saved passwords etc.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-770973">
				<div id="div-comment-770973" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">ender</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090924-00/?p=16603#comment-770973">
			September 25, 2009 at 5:39 am</a>		</div>

		<blockquote><p>
  Can&#8217;t you do it if you also create and install your own root CA? Or is there some kind of restriction on which root CAs can be trusted for drivers which cannot be overridden?
</p></blockquote>
<p>You can&#8217;t. You have to buy a certificate from one of the authorities listed on <a rel="nofollow" target="_new" href="http://www.microsoft.com/whdc/winlogo/drvsign/crosscert.mspx" rel="nofollow">http://www.microsoft.com/whdc/winlogo/drvsign/crosscert.mspx</a> and sign your driver with your certificate and the cross-signing certificate from that page. Basically, you have to pay $220 (that was the cheapest offer I saw when I last looked) to get your own code running on your own machine without having to boot your own machine in a special mode (and as you see, there is no driver verification involved &#8211; after you pay, you can load anything).</p>
<p>I imagine the cross-signing requirement is there because the code that checks the signature is run long before the crypto API is initialized to allow you to check the root authorities, and the allowed certificates are probably hard-coded.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-770983">
				<div id="div-comment-770983" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Mark</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090924-00/?p=16603#comment-770983">
			September 25, 2009 at 7:39 am</a>		</div>

		<p>ender: have you tried running an iPhone app on your own device? &nbsp;Sadly, this is seen as the solution to bad programming.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-771003">
				<div id="div-comment-771003" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joseph Koss</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090924-00/?p=16603#comment-771003">
			September 25, 2009 at 8:15 am</a>		</div>

		<p>ender: </p>
<p>The slap in the face is the huge markup over costs. 75% of VeriSign&#8217;s revenue (almost a billion/year) is pure profit, according to their financial statements.</p>
<p>Such large profit margins don&#8217;t happen in a free market. Its artificial scarcity, so the term payola is succinctly appropriate. </p>
<div class=post>[<i>Clearly this entry has uncovered a new law: &#8220;Any article which mentions drivers will devolve into an argument over code signing and DRM.&#8221; Time to scrub future articles from the queue. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-771013">
				<div id="div-comment-771013" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.losethos.com' rel='external nofollow' class='url'>Terry Davis</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090924-00/?p=16603#comment-771013">
			September 25, 2009 at 9:45 am</a>		</div>

		<p>LoseThos <a rel="nofollow" target="_new" href="http://www.losethos.com" rel="nofollow">http://www.losethos.com</a> is an alternative operating system for those who do want full access to their own machines. &nbsp;Live and let live. &nbsp;If some like the power of doing anything they want, come to LoseThos. &nbsp;The rest of you stay away and laugh at us, if you like, but don&#8217;t be a control freak.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-771033">
				<div id="div-comment-771033" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joel Dillon</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090924-00/?p=16603#comment-771033">
			September 25, 2009 at 10:05 am</a>		</div>

		<p>I can sort of see his argument, in the &#8216;why do I have to do this much work to do this&#8217; sense. In Linux, for example, you can use the I/O port instructions from userspace by first calling ioperm() (which requires specific privileges, which on a normal system means being root). This used to be essential for X11 to work without having any kernel drivers, given that VGA and extended VGA mode setting was only accessible with those instructions.</p>
<p>It&#8217;s not unreasonable to ask why Windows won&#8217;t allow this where architecturally possible, with safeguards such as the program telling the operating system explicitly &#8216;Yes I really want to do this&#8217;. Anyone with administrator privileges already has a bunch of ways they can totally hose the system.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-771043">
				<div id="div-comment-771043" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">someone else</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090924-00/?p=16603#comment-771043">
			September 25, 2009 at 10:16 am</a>		</div>

		<p>You forgot Sturgeon&#8217;s law: 90% of everything is crud.</p>
<p>Separating user mode from kernel mode helps to prevent accidental damage. If you&#8217;re serious about executing privileged instruction, go ahead, write a driver. Come to think of it, what good reason would you have to execute privileged instruction from user mode?</p>
<p>In unrelated news: Does test certificate mode interfere with DRM (whose inventors will surely forever burn in hell)?</p>
<p>Oh, and no sane person quotes the bible to explain his OS design. Srsly.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-771073">
				<div id="div-comment-771073" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Kevin Eshbach</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090924-00/?p=16603#comment-771073">
			September 25, 2009 at 10:30 am</a>		</div>

		<p>Gotta love lazy developers. &nbsp;When will they learn that taking shortcuts will always come back to haunt them later on.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-771093">
				<div id="div-comment-771093" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">manyirons</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090924-00/?p=16603#comment-771093">
			September 25, 2009 at 10:59 am</a>		</div>

		<p>&quot;The whole point of having a class of modules called drivers is to prevent somebody from doing exactly what you&#8217;re asking for. Only drivers can execute privileged instructions; that&#8217;s why they&#8217;re called privileged instructions.&quot;</p>
<p>I thought the whole point of having drivers was to provide an abstraction from hardware, and all the benefits that result from that abstraction. &nbsp;That drivers are the only ones that can execute privileged instructions is a distortion of that concept, really just an implementation detail.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-771103">
				<div id="div-comment-771103" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Falcon</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090924-00/?p=16603#comment-771103">
			September 25, 2009 at 11:49 am</a>		</div>

		<p>I love this bit from the LoseThos FAQ:</p>
<hr />
<p>To access the task or cpu structure, I have to use a trick. &nbsp;I place the record&#8217;s address at offset zero in the record and get the address like this:</p>
<p>XOR &nbsp; &nbsp; &nbsp; &nbsp;RAX,RAX</p>
<p>MOV &nbsp; &nbsp; &nbsp; RAX,FS:[RAX]</p>
<p>This is necessary because [displacement] addressing modes are RIP relative. &nbsp;(Worthless for these segment registers). &nbsp;This doesn&#8217;t appear to work: &nbsp;</p>
<p>XOR &nbsp; &nbsp; &nbsp; &nbsp;RAX,RAX</p>
<p>LEA &nbsp; &nbsp; &nbsp; &nbsp; RAX,FS:[RAX]</p>
<hr />
<p>In these code sequences, it&#8217;s obvious that LEA will store 0 into RAX, while MOV will load the value from memory at FS:[0]. LEA doesn&#8217;t care about segments &#8211; this is my understanding from Intel docs.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-771113">
				<div id="div-comment-771113" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">someone else</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090924-00/?p=16603#comment-771113">
			September 25, 2009 at 11:49 am</a>		</div>

		<p>Privileged instructions are a hardware detail.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-771133">
				<div id="div-comment-771133" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Aaron G</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090924-00/?p=16603#comment-771133">
			September 25, 2009 at 11:54 am</a>		</div>

		<p>I really love that people are bitching about how you can&#8217;t run a self-signed driver without enabling test signing mode, and that it doesn&#8217;t make sense to ask all your users to do this on a &quot;production&quot; system.</p>
<p>Um&#8230; duh?</p>
<p>I think it&#8217;s assumed, when people are complaining that writing a driver is &quot;too much work&quot;, that they are doing this only on their OWN machine as a development or testing aid. &nbsp;If you actually plan to deploy this to production machines &#8211; and I don&#8217;t care if it&#8217;s 3 machines or 3 million &#8211; then damn right you should have to get it signed and verified. &nbsp;The dark age of VxDs is long over, who do you think you are?</p>
<p>I don&#8217;t care what your app does, I don&#8217;t want it executing kernel-mode instructions on MY machine unless I grant explicit permission (in which case you need to earn my trust, and you can start by not being a lazy cheapskate), or if Microsoft has publicly come out and said &quot;we&#8217;ve tested this and promise that it works with your OS and won&#8217;t crash everything.&quot;</p>
<p>And if you want to offer your wonderful kernel-mode product free of charge and can&#8217;t afford a certificate, that&#8217;s your problem. &nbsp;I can&#8217;t practice medicine without a license, not even for free, and it&#8217;s not an excuse that I didn&#8217;t have the money/time for med school.</p>
<p>It&#8217;s shocking how many people who really should know better just can&#8217;t seem to wrap their minds around the concept of trust.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-771153">
				<div id="div-comment-771153" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">someone else</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090924-00/?p=16603#comment-771153">
			September 25, 2009 at 12:03 pm</a>		</div>

		<p>“And if you want to offer your wonderful kernel-mode product free of charge and can&#8217;t afford a certificate, that&#8217;s your problem. &nbsp;I can&#8217;t practice medicine without a license, not even for free, and it&#8217;s not an excuse that I didn&#8217;t have the money/time for med school.”</p>
<p>Your analogy is just a teensy bit flawed. If I run an unsigned driver on my machine, there is zero chance anyone will be killed, disabled or even develop a slight cough.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-771203">
				<div id="div-comment-771203" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Yuhong Bao</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090924-00/?p=16603#comment-771203">
			September 25, 2009 at 12:57 pm</a>		</div>

		<p>[Clearly this entry has uncovered a new law: &#8220;Any article which mentions drivers will devolve into an argument over code signing and DRM.&#8221; Time to scrub future articles from the queue. -Raymond]</p>
<p>I would not go that far.</p>
<div class=post>[<i>Coming from the person who is probably best-known for sidetracking discussions&#8230; -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-771213">
				<div id="div-comment-771213" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">someone else</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090924-00/?p=16603#comment-771213">
			September 25, 2009 at 1:22 pm</a>		</div>

		<p>Um, Raymond, are you doing this blog for the discussions or to entertain and educate?</p>
<div class=post>[<i>I enjoy the discussions when they amplify the topic, as opposed to random flamefesting. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-771253">
				<div id="div-comment-771253" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joseph Koss</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090924-00/?p=16603#comment-771253">
			September 25, 2009 at 1:58 pm</a>		</div>

		<p>@Raymond: </p>
<p>Discussions about driver development must have a code signing tangent&#8230;</p>
<p>This goes directly to the tone of your correspondence in the article. You tell him/her that all he/she has to do is write a driver to execute privileged instructions, but for 64-bit drivers he also has to spend hundreds of dollars for a 1-year ticket to kernel space.</p>
<p>I realize that this correspondence probably took place before win64, so I am not faulting you for that. Just the same, its no longer as simple as writing a driver, and I will fault you for not wanting that pointed out here. There is (hopefully) no reason to hide the real situation from developers.</p>
<div class=post>[<i>I don&#8217;t recall ever saying that &#8220;all&#8221; you need to do is write a driver, as if writing a driver was trivial. Because I know it isn&#8217;t. And the existence of these obstacles doesn&#8217;t dilute the original point, which is that user-mode code cannot execute privileged instructions. That&#8217;s why it&#8217;s called user-mode code. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-770993">
				<div id="div-comment-770993" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">someone else</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090924-00/?p=16603#comment-770993">
			September 25, 2009 at 7:59 am</a>		</div>

		<p>“true. &nbsp;but, quite frankly, anyone writing code that people pay for that gets executed on other people&#8217;s systems should have one anyway”</p>
<p>But what about code that people *don&#8217;t* have to pay for? Ramdisk-drivers come to mind (and let&#8217;s not get into the ramdisks are useless argument here)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-771283">
				<div id="div-comment-771283" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">ryandenki</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090924-00/?p=16603#comment-771283">
			September 25, 2009 at 3:00 pm</a>		</div>

		<p>Nobody has asked what the three privileged instructions are, or why they would be necessary in an otherwise fully user-mode application?</p>
<p>Something smells wrong with the requirements, architecture, or implementation for this to be required.</p>
<p>The only case I can think of personally is for accessing hardware registers, in which case a driver is the only way it should be approached in the first place. Any more details available on the scenario?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-771303">
				<div id="div-comment-771303" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ben Voigt [C++ MVP]</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090924-00/?p=16603#comment-771303">
			September 25, 2009 at 3:31 pm</a>		</div>

		<p>@Joel Dillon:</p>
<p>That&#8217;s exactly what I was talking about in QNX. &nbsp;I hadn&#8217;t bothered to learn that ioperm is available in linux as well.</p>
<p>@Raymond:</p>
<p>Since ioperm clearly debunks your claim that modern OSes don&#8217;t grant use of privileged instructions (even if disabled by default) to non-driver processes running as admin, I&#8217;d like to know what you think about not having an equivalent to ioperm in the Win32 API. &nbsp;I see at least five possibilities here:</p>
<p>1) You really consider ioperm() a security hole, as your post says.</p>
<p>2) Implementing ioperm would be awfully doggone expensive, and the benefits aren&#8217;t sufficient to justify it.</p>
<p>3) Windows actually has an ioperm equivalent that hasn&#8217;t been mentioned in this discussion. (I added this option to my list after finding out cygwin has an ioperm package)</p>
<p>4) Implementing ioperm would poke holes in DRM.</p>
<p>5) In your opinion ioperm would actually be a good thing to have, someone else decided to exclude it and didn&#8217;t share their reasons with you.</p>
<div class=post>[<i>I suspect the linux folks added ioperm while holding their noses. It was a necessary evil, as I understand it, to get video support. It is, however, a special case of the general principle. I stand by the general principle. (Why do people keep bringing up DRM as if I was the guy who invented it?) -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-771313">
				<div id="div-comment-771313" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">David Walker</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090924-00/?p=16603#comment-771313">
			September 25, 2009 at 4:11 pm</a>		</div>

		<p>The whole article is rather like shouting at someone on the other side of the airtight hatch, and asking them to push some buttons&#8230; &nbsp;:-)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-771323">
				<div id="div-comment-771323" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Yuhong Bao</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090924-00/?p=16603#comment-771323">
			September 25, 2009 at 4:34 pm</a>		</div>

		<p>[Coming from the person who is probably best-known for sidetracking discussions&#8230; -Raymond]</p>
<p>Well, yea, but I thought OS/2 IOPL segments would be more interesting than driver signing and DRM. But surprisingly, it got no response.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-771343">
				<div id="div-comment-771343" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ben Voigt [C++ MVP]</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090924-00/?p=16603#comment-771343">
			September 25, 2009 at 4:42 pm</a>		</div>

		<p>@Raymond:</p>
<p>Well, I would think that enabling e.g. CoreTemp to be a purely user-mode application (albeit with some dangerous privileges enabled) seems more desirable than forcing them to operate in a 100% unrestricted all-safeties-removed kernel-mode environment.</p>
<p>I mentioned DRM because it although smart people differ on the cost-benefit analysis, it is a solid (see I&#8217;m avoiding the words valid and legitimate to try to avoid the flames) reason for restricting privileged instructions to drivers as opposed to processes having Administrator rights.</p>
<p>I really did want to know if you knew other reasons for the separation.</p>
<p>Definitely system stability demands that anything which can be implemented without the use of privileged instructions, should be. &nbsp;But I would have thought that a corollary would be that anything that a partially protected environment (i.e. ioperm-enabled process) would yield better system stability than no-holds-barred kernel-mode-driver solutions.</p>
<p>(With the advent of UMDF, driver != kernel module, which I think is what manyirons is getting at &#8212; use of privileged instructions and hardware abstraction really aren&#8217;t synonymous.)</p>
<p>Plus, the proliferation of kernel modules a/k/a drivers created by excluding ioperm is, in my opinion, creating additional security risks. &nbsp;Ok, now that developer X has gone to the trouble of writing that driver to read CPU thermal sensors, he has to put an ACL on your user-mode interface. &nbsp;Will X allow all users read access or only administrators? &nbsp;All users probably seems reasonable to a lot of developers, who don&#8217;t consider the potential information leakage in a server environment (of course cache coupling probably leaks similar information with a lot greater accuracy). &nbsp;Letting arbitrary web applications connect to the CPU temp driver is almost certainly wrong, but if ioperm was available to administrators, there wouldn&#8217;t even be a kernel-user communication boundary where an improper ACL could be in effect.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-771023">
				<div id="div-comment-771023" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">someone else</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090924-00/?p=16603#comment-771023">
			September 25, 2009 at 10:01 am</a>		</div>

		<p>*facepalm*</p>
<p>If anyone ever says that Windows is the most insecure, unstable, stupid OS evar, I can now point them to LostThos.</p>
<p>That guy is serious. And whatever he might say in the FAQ, he *does* need help. Professional help.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-771233">
				<div id="div-comment-771233" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://ra3s.com/wordpress/dysfunctional-programming/' rel='external nofollow' class='url'>aaron</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090924-00/?p=16603#comment-771233">
			September 25, 2009 at 1:26 pm</a>		</div>

		<p>I see a lot of complaints, but no one nailing down on this point:</p>
<p>You suppose the developer&#8217;s app is already in the position to install a driver some how. &nbsp;This scenario *already* has them owning the machine. &nbsp;Should the prompts be the same, there is no escalation; they already *have* said privileges, and are looking how to reduce their dev costs.</p>
<p>Obviously no story is complete. &nbsp;I imagine the prequel includes someone first attempting to dissuade this customer from executing privileged instructions at all.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-771433">
				<div id="div-comment-771433" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Anonymous Coward</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090924-00/?p=16603#comment-771433">
			September 25, 2009 at 8:39 pm</a>		</div>

		<p>(&#8220;The incredibly poor quality of many signed drivers should be more than adequate justification for this.&#8221; Agreed. I know Microsoft is supposed to do a lot of testing, but from my personal experience I get the feeling that Microsoft is willing to sign everything if you pay enough.)</p>
<p>One of the more problematic aspects of driver signing is that it conflicts with the fact that my computer is mine and I should be able to have full control of what code I run on it. (That said, the Cygwin Ioperm package is an abomination because it makes port manipulation available to all applications on the system, which is a huge security hole.) Still, if I were to trust a certain driver, for example because I wrote it myself or reviewed the code, I should be able to load it (if I have admin permissions) on my computer. The 64 bit driver signing spectacle stops you from doing this, giving Microsoft the ultimate control over what drivers can run on your computer. I know why this is done &#8211; Microsoft probably was afraid of OEMs shipping faulty drivers with Win64 &#8211; but given that this could have been handled differently (better) without imposing such a draconian restriction on the end user, Raymond really shouldn&#8217;t be surprised that suspicions in the direction of DRM pop up, especially since there are a lot of operating systems where the end user can install whatever drivers he trusts.</p>
<div class=post>[<i>And all this time I thought the code signing requirement was to make it harder for malware authors to drop a rootkit. Shows how much I know. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-771273">
				<div id="div-comment-771273" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://K.Hagan@thermoteknix.com' rel='external nofollow' class='url'>Ken Hagan</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090924-00/?p=16603#comment-771273">
			September 25, 2009 at 2:40 pm</a>		</div>

		<p>To all those who say a signed driver is needed on Win64, I have a thought experiment for you.</p>
<p>Are you really utterly certain that there is no way any program in user space with admin rights can execute code at kernel level on Win64 without a certificate? Think about viruses and rootkits. Still sure?</p>
<p>Administrators can do anything. No machine or domain-wide policy can stop them. The only barrier is the complexity of the code, and once that code has been wrapped in a handy library, the additional cost for anyone who can acquire a copy of that code is zero. The second attacker doesn&#8217;t even need to be an admin. Once your machine is owned, its dead.</p>
<p>OK, this may not *sound* ethical, but you wouldn&#8217;t be installing a virus on your customer&#8217;s machine. You&#8217;d be installing a &quot;helper library&quot; to let smaller ISVs avoid the wicked &quot;driver tax&quot;. And it would be simple to let each of your customers (small ISVs) &quot;mutate&quot; the code slightly, so that no single variation was ever sufficiently widespread to come to the attention of the AV vendors.</p>
<p>Given the right PR, the whole exercise becomes a shining example of good citizenship, except in the eyes of a few grumpy old fogeys who can see the thick end of the wedge in the shadows beyond.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-771473">
				<div id="div-comment-771473" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Teo</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090924-00/?p=16603#comment-771473">
			September 26, 2009 at 1:15 am</a>		</div>

		<p>It seems that many people here do not distinguish between a &#8220;digital certificate&#8221; and &#8220;WHQL certificate.&#8221; First, you do not need a whql certificate to load a driver on users&#8217; machines, the normal one from VerisSign and co is enough. The difference is only evident for WDM drivers during their installation &#8211; the WHQL-signed drivers are silently accepted, while the ones with normal digital signature trigger a question to the user &#8220;Do you trust the drivers from &lt;&lt;&lt;name from the certificate&gt;&gt;&gt;&#8221;. For non-WDM drivers there is no such UI.</p>
<p>Also, let&#8217;s not be in panic mode &#8211; users since around 2003 *expect* that program files are digitally signed, so if you are a serious developer (and frankly, if you were not then you wouldn&#8217;t be reading this blog), so there should be no problem with obtaining the digital certificate for the driver &#8211; you already have one. </p>
<p>But, developing a driver has other costs, which I am not sure even Raymond thinks of.</p>
<p>Lets see. The famous &#8220;custommer o&#8217; Microsoft&#8221; wants to write this:</p>
<p>__asm {</p>
<p>&nbsp;instruction 1</p>
<p>&nbsp;instruction 2</p>
<p>&nbsp;instruction 3</p>
<p>}</p>
<p>which is 5 lines of code. Now he is forced to write a driver. (I do not argue if this is needed. I treat it as a nature force &#8211; if you want to execute privileged instructions on Windows, you need a driver, just accept that).</p>
<p>So this poor soul has some decisions to make and some wotk to do.</p>
<p>1. He needs to find out how to setup their machines to write and debug kernel-mode components (aka drivers, KMC for short)</p>
<p>2. He must figure how to access Microsoft Connect, make account there, search its amazingly hellish user interface and after two hours of cursing change to Internet Explorer, and redo everything in there, because the site *insist* on installing own download manager as an ActiveX control.</p>
<p>3. Now he has a good 1 GB iso file, he unpacks it and has to deliver it all developers&#8217; machines. He has to go through all his internal procedures to check nothing breaks, then push the package though his Active Directory. Obviosly this cannot be done without some trickery, because it consists of 100+ small MSI packages and one Setup.exe that *interactively* installs it (i.e. it has unskippable UI). Cool, you have to manually install it on every developer machine in the office. Of course, that means that the WDK cannot be certified as &#8220;Windows Logo&#8221; software, which is totally ironic.</p>
<p>4. KMC are written in C. If you are shop that writes on .Net/Java/etc, then you either hire new people that groks KMC or assign some of your people to stop doing their work, and start learning C, then leraning writing KMC. Both ways are *expensive*</p>
<p>4.1. Even if you are C++ shop, you have problems. Good C++ programmers are bad C programmers, because the syntax of the languages only looks similar, and the semantics are completely different.</p>
<p>5. If you go with &#8220;train your own people&#8221; then it&#8217;s even more complicated. </p>
<p>5.1. WDK has its own set of header files and libs, which do NOT agree with the ones comming with the Platform SDK (resp. the Visual Studio ones). Basic stuff like NTSTATUS definition disagrees.</p>
<p>5.2. WDK insists on its own build environment, (although you can coerce Visual Studio to build drivers, after all the WDK compiler is the same as the one in Visual Studio). But lets assume that the guy in question follows the procedure. Now he has TWO build environments &#8211; one for the existing project, the other for the driver.</p>
<p>5.3. That means that you have to re-done your build servers as well, changing the basing assumpions of the build procedure he has made when he created it</p>
<p>6. You have to change the way the product is tested. For user-mode components, you fire it through the Visual Studio debugger and debug it. With KMC, you need to learn how to use WinDbg. It *is* the best debugger available on Windows, but its interface is complicated and really needs a month just to start using it effectively. Did I mentioned it that it does not work properly under Vista/7 (it&#8217;s spelled in its readme file)</p>
<p>6.1. If you are .Net shop, you are doomed. .Net debuuger in Visual Studio complains that kernel mode debugger runs and refuses to work. You can debug *either* the KMC *or* the rest of your product, but not the two parts at the same time.</p>
<p>6.2. Cool that you can debug .Net apps with WinDbg. But WinDbg insists on developers having the bit-by-bit exact copy of the .Net frameworks on both the debugging machines and on the developers machines. If your developers workstations are 32-bit, it&#8217;s time to buy new, 64-bit ones because otherwise you cannot debug 64-but builds of your project.</p>
<p>7. If your project wants to get &#8220;Windows Logo&#8221; certification, then you first need to apply for the WHQL signature for the driver. Additional costs for setting in-house testing lab for just the WHQL test, then for the actual testing.</p>
<p>8. When a new version of your product arrives, you either:</p>
<p>8.1. re-submit the driver for WHQL test, because it&#8217;s a new version</p>
<p>8.2. build some frankenbuild consisting of all new bits of the user-mode part and the old driver. So that version 8.0 of your product consists of most parts being version 8.0, but the driver staying at 6.0. Of course that means that your build server has to be re-configured to *skip* building the driver.</p>
<p>Well Raymond, do you now *understand* why your custommer was so unwilling to accept the news that he had to develop a driver?</p>
<div class=post>[<i>And this is easy compared to getting security clearance to the control room of a nuclear reactor. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-771483">
				<div id="div-comment-771483" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">someone else</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090924-00/?p=16603#comment-771483">
			September 26, 2009 at 2:15 am</a>		</div>

		<p>“2. He must figure how to access Microsoft Connect, make account there, search its amazingly hellish user interface and after two hours of cursing change to Internet Explorer, and redo everything in there, because the site *insist* on installing own download manager as an ActiveX control.”</p>
<p>If you&#8217;re referring to the WDK download, that one is available through simple HTTP. No Akamai download manager there.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-771503">
				<div id="div-comment-771503" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Mike Caron</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090924-00/?p=16603#comment-771503">
			September 26, 2009 at 3:06 am</a>		</div>

		<p>@Teo: Um.</p>
<p>If I&#8217;m writing in Jave/.Net, how do I expect to write /any/ raw instructions at all? I&#8217;m not aware of inline assembly blocks in Java, C# OR Visual Basic&#8230;</p>
<p>Further, once I&#8217;m committed to writing a driver, must I really install the DDK on every computer in my office? Really? Even for those who think &quot;low-level&quot; means &quot;basic if-constructs&quot;?</p>
<p>Further, do I really want to keep my driver as an integrated part of my product? Or (more likely) do I want to treat it as a separate component which happens to be bundled with my product? I mean, yeah, versioning must be a *bitch* at your shop&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-771533">
				<div id="div-comment-771533" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Teo</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090924-00/?p=16603#comment-771533">
			September 26, 2009 at 3:35 pm</a>		</div>

		<p>My product is a driver, so, yes, versioning is a bitch. And for some weird reason the http link on Connect didn&#8217;t trigger the download, so I had to use the MS download manager.</p>
<p>And in .Net you can use the &quot;it just works&quot; c++ where the compiler takes care for the managed/unmanaged transitions, but you still must debug the result, so the debugging problems stay. But in the unmanaged part you can use whatever you want, including inline assembly (well for 32-bit, the 64-bit compiler does not have it). Remember, there&#8217;s more in .Net than C# and VB.Net :-D</p>
<p>Anyway, my point was that the fact that you have to digitally sign your driver has zero cost &#8211; you already have the certificate. The cost come from the disruption of the workflow of your firm and they are substantially higher than the mere 400$ yearly for the certificate. (Nearly) every human being facing this would react in the same way this guy did &#8211; it would try to cheat the system. I know I would.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-771563">
				<div id="div-comment-771563" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">someone else</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090924-00/?p=16603#comment-771563">
			September 27, 2009 at 2:42 am</a>		</div>

		<p>Ok, so this is how I see it:</p>
<p>While you are developing in-house, set up your own CA and use that to sign your certificates. After that, you have to options:</p>
<ol>
<li>Release it for free (that also means without hardware attached). Make it open source and signing is the user&#8217;s problem.</li>
<li>
<p>You want money for it (or the corresponding hardware). Then get a freakin&#8217; certificate already!</p>
</li>
</ol>
<p>And what&#8217;s so hard about downloading the WDK from <a rel="nofollow" target="_new" href="http://www.microsoft.com/downloads/details.aspx?FamilyID=2105564e-1a9a-4bf4-8d74-ec5b52da3d00&amp;displaylang=en" rel="nofollow">http://www.microsoft.com/downloads/details.aspx?FamilyID=2105564e-1a9a-4bf4-8d74-ec5b52da3d00&#038;displaylang=en</a> ?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-771593">
				<div id="div-comment-771593" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Medinoc</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090924-00/?p=16603#comment-771593">
			September 27, 2009 at 9:42 am</a>		</div>

		<p>I can now confirm, after clinical tests, that whoever wrote Inpout32.dll &#8220;needs to be taken outside and beaten&#8221;:</p>
<p>The DLL doesn&#8217;t only work for administrators. After an administrator has executed ANY program that uses this DLL, ANY user can in ANY other program of his choice. So, this DLL allows any limited user to perform privileged inp and out at will, as soon as an administrator lets it slip ONCE.</p>
<div class=post>[<i>They don&#8217;t quite meet the beating criteria: At least they don&#8217;t execute arbitrary instructions. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-771623">
				<div id="div-comment-771623" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ben Voigt [C++ MVP]</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090924-00/?p=16603#comment-771623">
			September 27, 2009 at 12:56 pm</a>		</div>

		<p>&#8220;And all this time I thought the code signing requirement was to make it harder for malware authors to drop a rootkit. Shows how much I know.&#8221; -Raymond</p>
<p>If that were really the intent, then the drivers would need to be cosigned by the computer administrator, not MS (or MS proxies such as Verisign).</p>
<p>(Yes, there&#8217;d have to be a boot option to use the MS certificate instead, and consumer installs would use the MS certificate by default &#8212; IT departments could override the certificate with the usual unattended setup answer mechanisms. &nbsp;I&#8217;m not saying that requiring code-signing isn&#8217;t an improvement, I&#8217;m saying that the current system appears to be designed to maximize profit rather than effectiveness.)</p>
<p>Right now, to drop a rootkit Mr. Malware just has to buy a cert from Versign (remember this fiasco? &nbsp;<a href="http://news.cnet.com/2100-1001-254628.html" target=_new rel=nofollow rel="nofollow">http://news.cnet.com/2100-1001-254628.html</a>). &nbsp;With admin-selected trusted root they&#8217;d have to subvert my certificate, and so on.</p>
<p>Also, you can&#8217;t really have a lesser certificate trusted only in the test environment so that beta versions won&#8217;t be accidentally loaded in production. &nbsp;(Selecting test-sign mode on every boot in the test environment is more than a little bit onerous as it prevents automated regression testing, etc)</p>
<p>&#8220;Are you saying that Ken Thompson and Linus Torvalds are DRM-loving OS-authors?&#8221; -Raymond</p>
<p>Linux gives trusted (by superuser, not OS vendor) processes considerable access to hardware (via for example ioperm, /dev/kmem). &nbsp;By your definition (privileged instructions can only be executed by drivers) these aren&#8217;t user-mode applications, and they aren&#8217;t kernel modules, so clearly Linux isn&#8217;t included in the list of OSes with the kernel mode/user mode dichotomy.</p>
<p>I think the same argument applies to BSD.</p>
<p>Totally off-topic: Some people, myself not included, might actually say that Torvalds et al are DRM-loving because they won&#8217;t buy off on the GPLv3 license&#8217;s anti-DRM language.</p>
<div class=post>[<i>&#8220;Considerable access to hardware&#8221; != &#8220;executing privileged instructions&#8221;. So far I have yet to find somebody that lets user-mode code perform a mov into cr0. Because the processor doesn&#8217;t allow it. The closest you can do is have an interface where user-mode code can ask kernel code to do the mov on its behalf. -Raymond</i>],</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-771903">
				<div id="div-comment-771903" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ben Voigt [C++ MVP]</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090924-00/?p=16603#comment-771903">
			September 28, 2009 at 2:29 pm</a>		</div>

		<p>&#8220;&#8216;Considerable access to hardware&#8217; != &#8216;executing privileged instructions&#8217;. So far I have yet to find somebody that lets user-mode code perform a mov into cr0. Because the processor doesn&#8217;t allow it. The closest you can do is have an interface where user-mode code can ask kernel code to do the mov on its behalf.&#8221; -Raymond</p>
<p>Certainly there are some instructions which really require ring 0. &nbsp;Then there are a bunch more which can be executed in ring &gt; 0 as ring 0 permits.</p>
<p>But the person with the question would have been perfectly happy with an interface to execute the instructions, which you then mocked via a comparison to asking for control of a nuclear power plant without a security clearance. &nbsp;Yet the kernel checks security on user-mode processes all the time, and that check could involve verification of code-signing just like it does for kernel modules (for efficiency do the check once, set a bit in the process token). &nbsp;There&#8217;s no real reason that there couldn&#8217;t be a privilege that allowed running a short sequence of instructions just like there is a privilege for reading memory of other processes, and a privilege for becoming a debugger of services.</p>
<div class=post>[<i>Running arbitrary code is very different from reading other process&#8217;s memory. One is an information disclosure issue. The other will cause you to lose control of the entire computer. One is controlled. The other is uncontrolled. I wonder whether linux lets you say &#8220;Here are some arbitrary instructions, go execute them in kernel mode for me.&#8221; -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-771933">
				<div id="div-comment-771933" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ben Voigt [C++ MVP]</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090924-00/?p=16603#comment-771933">
			September 28, 2009 at 3:20 pm</a>		</div>

		<p>&quot;Running arbitrary code is very different from reading other process&#8217;s memory. One is an information disclosure issue. The other will cause you to lose control of the entire computer. One is controlled. The other is uncontrolled. I wonder whether linux lets you say &#8216;Here are some arbitrary instructions, go execute them in kernel mode for me.&#8217;&quot; -Raymond</p>
<p>Ok, reading other process&#8217;s memory isn&#8217;t so powerful. &nbsp;Writing other process&#8217;s memory is, and Windows lets you do this. &nbsp;Writing kernel memory is pretty much the ultimate level of control, I&#8217;d consider that as powerful (although less easy-to-use and more fragile) as executing an arbitrary set of instructions. &nbsp;And with /dev/kmem, yes Linux (and AIX, BSD, various other Unix flavors) does let you write kernel memory, from user-mode, if your process has appropriate permissions (in Linux that means &quot;group membership&quot; and &quot;capabilities&quot;). &nbsp;Given how dangerous (meaning fragile and great potential for crashes if done wrong, not insecure) installing kernel hooks is, I&#8217;d be surprised if there isn&#8217;t a way to say &quot;Here are some arbitrary instructions, go execute them in kernel mode for me.&quot;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-772693">
				<div id="div-comment-772693" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Dave</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090924-00/?p=16603#comment-772693">
			September 29, 2009 at 9:38 pm</a>		</div>

		<blockquote><p>
  I know of at least two tools which install their own root CAs when you install them.
</p></blockquote>
<p>Really? &nbsp;So they end up in the root store without intervening UI? &nbsp;Can you name the products?</p>
<p>(I&#8217;m not a MS lawyer :-), just someone who&#8217;s curious about an app that can do this).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-772713">
				<div id="div-comment-772713" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Dave</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090924-00/?p=16603#comment-772713">
			September 29, 2009 at 9:53 pm</a>		</div>

		<blockquote><p>
  I can now confirm, after clinical tests, that whoever wrote Inpout32.dll &quot;needs to be taken outside and beaten&quot;:
</p></blockquote>
<p>Has anyone looked at the more recent giveio (shipped with various hardware-monitoring programs) and any of the plethora of homebrew ioperm()-equivalent drivers floating around out there?</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>