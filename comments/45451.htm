<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (10)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment byuser comment-author-anonymouscommenter even thread-even depth-1" id="comment-1242956">
				<div id="div-comment-1242956" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">anonymouscommenter</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150604-00/?p=45451#comment-1242956">
			June 4, 2015 at 7:31 am</a>		</div>

		<p>I&#39;m extremely puzzled. In the normal case of all code in process runs as one Windows user and all processes spawned are of the same user, is passing NULL pointer to things that want an ACL dangerous (this is what the .NET wrappers do with no way to change it except for named pipes)?</p>
<p>I don&#39;t care about UAC bypass but I care about other kinds of privilege elevation. It is my understanding that spawning a process owned by one user on another user&#39;s session is safe starting w/ Vista.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-anonymouscommenter odd alt thread-odd thread-alt depth-1" id="comment-1242946">
				<div id="div-comment-1242946" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">anonymouscommenter</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150604-00/?p=45451#comment-1242946">
			June 4, 2015 at 8:02 am</a>		</div>

		<p>@Joshua</p>
<p>Most Win32 API sets a default security descriptor if pSecurityDescriptor is NULL.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-anonymouscommenter even thread-even depth-1" id="comment-1242936">
				<div id="div-comment-1242936" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">anonymouscommenter</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150604-00/?p=45451#comment-1242936">
			June 4, 2015 at 8:48 am</a>		</div>

		<p>Thanks for this post Raymond. This made me realize that I was confusing two things: </p>
<p>setting a NULL DACL vs passing NULL SECURITY_ATTRIBUTES/SECURITY_DESCRIPTOR to Win32 functions such as CreateMutex.</p>
<p>In other words, in the context of CreateMutex:</p>
<p>lpMutexAttributes == NULL ; fine</p>
<p>lpMutexAttributes-&gt;lpSecurityDescriptor == NULL ; fine</p>
<p>lpMutexAttributes-&gt;lpSecurityDescriptor-&gt;lpDACL == NULL ; bad!</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1221613">
				<div id="div-comment-1221613" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Peter</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150604-00/?p=45451#comment-1221613">
			June 4, 2015 at 9:15 am</a>		</div>

		<p>I never thought of messing with a process by duplicating its handles before. &nbsp;Is there any way to open a handle to object such that *only* the creating process can access it?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-anonymouscommenter even thread-even depth-1" id="comment-1242926">
				<div id="div-comment-1242926" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">anonymouscommenter</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150604-00/?p=45451#comment-1242926">
			June 4, 2015 at 10:00 am</a>		</div>

		<p>I thought duplicating a handle circumvents the security checks, and I could duplicate a handle to any process I want without worrying about security and DACL of the handle. </p>
<p>I even found this article ( <a rel="nofollow" target="_new" href="https://msdn.microsoft.com/en-us/magazine/bb985041.aspx">msdn.microsoft.com/&#8230;/bb985041.aspx</a> ) which in its &quot;Third rule&quot;, explains exactly this behavior. So I don&#39;t see how specifying a NULL DACL can lower the security with regards to DuplicateHandle: Anyone with PROCESS_DUP_HANDLE can duplicate and steal all your handles, no matter its DACL.</p>
<p>Am I missing something?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-mngoldeneagle odd alt thread-odd thread-alt depth-1" id="comment-1242916">
				<div id="div-comment-1242916" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/MNGoldenEagle' rel='external nofollow' class='url'>MNGoldenEagle</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150604-00/?p=45451#comment-1242916">
			June 4, 2015 at 10:18 am</a>		</div>

		<p>@sense: Reread the article. &nbsp;Right after he states the third rule, he says this: &quot;the system will perform an access check against the object&#39;s security descriptor only if one or more new permissions (not already granted in the original session) are being requested.&quot; &nbsp;Remember that in the context of these rules, a session belongs to a process, so if you duplicate a handle, the OS will perform the access check as Raymond describes. &nbsp;You only get a free pass if it&#39;s the handle passed back after creation or if you inherit it.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-alegrigoriev even thread-even depth-1" id="comment-1242906">
				<div id="div-comment-1242906" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/alegr1' rel='external nofollow' class='url'>alegr1</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150604-00/?p=45451#comment-1242906">
			June 4, 2015 at 11:12 am</a>		</div>

		<p>If you have PROCESS_DUP_HANDLE permission, you&#39;re already on the other side of the airtight hatchway.</p>
<p>Also, DuplicateHandle doesn&#39;t check if the requestor has the privileges to the object. Any ACL on the object is not checked.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1221603">
				<div id="div-comment-1221603" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">sense</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150604-00/?p=45451#comment-1221603">
			June 5, 2015 at 1:09 am</a>		</div>

		<p>@MNGoldenEagle: If you reread the sentence you quoted, it says that only new permissions are checked, not the original ones. That&#39;s because DuplicateHandle under rare occasions can raise permissions on a handle. This has nothing to do with cross-process duplication. (Refer to DuplicateHandle on MSDN)</p>
<p>And &quot;inheritance&quot; is another caveat here that I don&#39;t get. If you get a handle by inheritance the DACL definitely does not matter. So I&#39;m in the dark about the situation Raymond is talking about. </p>
<p>Even *after* inheriting (or duplicating for that matter) a handle, is there a situation that the DACL matters? I mean even if a *careless* process gets the handle by duplication/inheritance, then what are the ways it can be leaked, that a proper DACL would prevent? (i.e. Other than OpenXXX functions, where is the DACL checked for an unnamed object?)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-anonymouscommenter even thread-even depth-1" id="comment-1242896">
				<div id="div-comment-1242896" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">anonymouscommenter</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150604-00/?p=45451#comment-1242896">
			June 5, 2015 at 1:57 am</a>		</div>

		<p>Even if the DACL mattered when you duplicate a handle, you can still duplicate the current process handle if you have PROCESS_DUP_HANDLE access. With that you have a handle with complete access to the process which you can use to execute arbitrary code in the context of that process, rendering any questions about access to handles moot.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-anonymouscommenter odd alt thread-odd thread-alt depth-1" id="comment-1242816">
				<div id="div-comment-1242816" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">anonymouscommenter</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150604-00/?p=45451#comment-1242816">
			June 5, 2015 at 8:09 am</a>		</div>

		<p>Right&#8230; &nbsp;Raymond is saying &quot;if you create an object with a NULL DACL, you are exposing it to everybody who has PROCESS_DUP_HANDLE permission&quot;. &nbsp;Others are saying that once you duplicate a handle, its DACL does not matter. &nbsp;(I am reading &quot;if you create&#8230;&quot; to mean &quot;if, and only if, you create&#8230;&quot;.)</p>
<p>Can anyone clarify this?</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>