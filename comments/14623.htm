<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (14)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-819043">
				<div id="div-comment-819043" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">configurator</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100312-01/?p=14623#comment-819043">
			March 12, 2010 at 8:58 am</a>		</div>

		<p>I&#8217;m really unsure of the details here, but I&#8217;ve always been under the impression that .Net shell extensions are a bit of a problem because they need the .net runtime in the shell process. Can we create a shell extension in .Net using IExecuteCommand, then?</p>
<p>Nitpicker&#8217;s corner:</p>
<p>This sentence repeats itself a bit: &#8220;If all goes well, the debugger will report Command: printnamestodebugger paths of the files you selected will be printed to the debugger.&#8221;</p>
<div class=post>[<i>Fixed the repetitive sentence that repeated itself, thanks. (As for the .NET question, you already have the information you need to answer that.) -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-819083">
				<div id="div-comment-819083" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://jsbangs.wordpress.com' rel='external nofollow' class='url'>JS Bangs</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100312-01/?p=14623#comment-819083">
			March 12, 2010 at 9:10 am</a>		</div>

		<p>The conclusion that I draw from all of this is that if I really want to write a shell extension, I&#8217;ll be doing it in C# with IShellExtnInit and IContextMenu.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-819093">
				<div id="div-comment-819093" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">configurator</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100312-01/?p=14623#comment-819093">
			March 12, 2010 at 9:34 am</a>		</div>

		<p>I forgot the last part of my question: and by doing so avoid the need to load a version of the CLR in the host process (which could be a problem if two extensions use different versions of the CLR, I think)?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-819123">
				<div id="div-comment-819123" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Gabe</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100312-01/?p=14623#comment-819123">
			March 12, 2010 at 9:46 am</a>		</div>

		<p>I don&#8217;t know which part made me happier: &quot;the shell doesn&#8217;t even load your IExecuteCommand handler until the user selects your command&quot; or &quot;One nice thing about IExecuteCommand is that it supports out-of-proc activation&quot;.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-819133">
				<div id="div-comment-819133" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">dmz1978</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100312-01/?p=14623#comment-819133">
			March 12, 2010 at 9:48 am</a>		</div>

		<p>@configurator: how come .Net came to picture? Or maybe you are some kind of psychic (seems to be requirement here, really), and you foretold JS Bang&#8217;s post?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-819143">
				<div id="div-comment-819143" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://daveamenta.com' rel='external nofollow' class='url'>Dave Amenta</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100312-01/?p=14623#comment-819143">
			March 12, 2010 at 10:03 am</a>		</div>

		<p>configurator: &nbsp;<a rel="nofollow" target="_new" href="http://blogs.msdn.com/clrteam/archive/2009/06/03/in-process-side-by-side-part1.aspx" rel="nofollow">http://blogs.msdn.com/clrteam/archive/2009/06/03/in-process-side-by-side-part1.aspx</a></p>
<p>With .NET4/CLR4, you can load two CLR versions side-by-side, so managed shell extensions won&#8217;t be a problem anymore.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-819153">
				<div id="div-comment-819153" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Jonathan Pryor</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100312-01/?p=14623#comment-819153">
			March 12, 2010 at 10:20 am</a>		</div>

		<p>It should also be noted that if you force your extension to be loaded into its own process, .NET shouldn&#8217;t matter either, even before .NET 4.0. &nbsp;Not sure how to force loading into a separate process, but since the support is apparently there you would just need to make use of it&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-819173">
				<div id="div-comment-819173" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://jpotter@lss.com.au' rel='external nofollow' class='url'>jon</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100312-01/?p=14623#comment-819173">
			March 12, 2010 at 11:02 am</a>		</div>

		<p>Does this mean that your blog IS official Microsoft documentation now, Raymond. Because until 24 hours ago DelegateExecute was undocumented, or at least that&#8217;s what I was told when I asked in the managed newsgroups.</p>
<p>Any chance you could give the same treatment to all the other undocumented-secret-for-no-reason-but-were-just-used-to-being-secretive-despite-the-consent-decree stuff?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-819183">
				<div id="div-comment-819183" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Anonymous Coward</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100312-01/?p=14623#comment-819183">
			March 12, 2010 at 11:26 am</a>		</div>

		<p>Note that the minimum operating system is listed in MSDN as Windows 7. Since you&#8217;ll want to support XP as well, you cannot actually use this (yet).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-819193">
				<div id="div-comment-819193" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blog.koroirc.com/' rel='external nofollow' class='url'>Koro</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100312-01/?p=14623#comment-819193">
			March 12, 2010 at 11:28 am</a>		</div>

		<p>&quot;With .NET4/CLR4, you can load two CLR versions side-by-side, so managed shell extensions won&#8217;t be a problem anymore.&quot;</p>
<p>Apart from the 20MB additional memory usage per process just so you can display a single context menu item or custom icon, yeah.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-819293">
				<div id="div-comment-819293" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.develer.com' rel='external nofollow' class='url'>Giovanni Bajo</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100312-01/?p=14623#comment-819293">
			March 13, 2010 at 2:46 am</a>		</div>

		<p>I suggest a third-party commercial product for shell extensions: EzShellExtensionsMFC or EzShellExtensionsNET. For a ridicule price, they expose you all the shell extenion power in a &#8220;fill here please&#8221; format which lets you forget about 99% of the problems.</p>
<div class=post>[<i>The .NET version had better be using a side-by-side-enabled version of the .NET framework but I suspect it doesn&#8217;t. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-819303">
				<div id="div-comment-819303" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Neil</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100312-01/?p=14623#comment-819303">
			March 13, 2010 at 3:27 am</a>		</div>

		<p>I recommend only calling OutputDebugString on newline-terminated strings, otherwise debuggers tend to scroll horizontally back and forth to update the caret position as the text is output.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-yuhong-bao even thread-even depth-1" id="comment-819323">
				<div id="div-comment-819323" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Yuhong+Bao' rel='external nofollow' class='url'>Yuhong Bao</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100312-01/?p=14623#comment-819323">
			March 13, 2010 at 9:16 pm</a>		</div>

		<p>[The .NET version had better be using a side-by-side-enabled version of the .NET framework but I suspect it doesn&#8217;t. -Raymond]</p>
<p>It is not released yet unfortunately but they already advertise support for VS2010.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-819343">
				<div id="div-comment-819343" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">640k</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100312-01/?p=14623#comment-819343">
			March 14, 2010 at 11:31 am</a>		</div>

		<p>Should this code go into a dll library or exe app? (some COM components are exe apps) It would be nice if this example could be a selectable VS project type in the future, for all supported languages.</p>
<p>:: One nice thing about IExecuteCommand is that it supports out-of-proc activation</p>
<p>Why is IExecuteCommand a new feature, it should have been in 64-bit windows from day 1, this delay destroys the porting effort to 64-bit!</p>
<p>And from now (or w7&#8217;s release) it should be the RECOMMENDED way to develop shell extensions.</p>
<p>Is there any non-obvious drawbacks? Except not running on vista+older. Maybe more resources are used ofcourse, but this is often irrelevenat om multicore, and on OSes that has multi gb ram allocated after boot anyway.</p>
<p>Can a shell extensions (using IExecuteCommand) developed in C# (and compiled to AnyCPU) execute as a 64-bit process on 64-bit windows and 32-bit on 32-bit windows?</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>