<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (24)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-829743">
				<div id="div-comment-829743" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ivo</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100503-00/?p=14183#comment-829743">
			May 3, 2010 at 7:50 am</a>		</div>

		<p>I have a few questions about a simulated drop (from both sides of the interface).</p>
<p>Is there a way for the drop target to detect a simulated drop (vs a real drop with the mouse)?</p>
<p>When the shell simulates a drop, does it call BOTH DragEnter and DragOver? What does it pass for key state, mouse point and effect?</p>
<p>If I have to simulate a drop (let&#8217;s say I want to copy a file to an arbitrary IShellFolder), am I required to call DragEnter? What about DragOver? What mouse point to use?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-829753">
				<div id="div-comment-829753" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Iain Clarke</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100503-00/?p=14183#comment-829753">
			May 3, 2010 at 8:10 am</a>		</div>

		<blockquote><p>
  Is there a way for the drop target to detect a simulated drop (vs a real drop with the mouse)?
</p></blockquote>
<p>It wouldn&#8217;t be a very good simulation if there was!</p>
<blockquote><p>
  When the shell simulates a drop, does it call BOTH DragEnter and DragOver? What does it pass for key state, mouse point and effect?
</p></blockquote>
<p>In the spirit of Raymond, suck it and see! You could implement these interface members, and use OutputDebugString to check. &nbsp;That&#8217;s my usual approach to these things.</p>
<p>As for you doing it&#8230; if you don&#8217;t want other programs detecting you&#8217;re a fake, it would be best to be as thorough as possible.</p>
<p>Iain.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-829763">
				<div id="div-comment-829763" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">640k</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100503-00/?p=14183#comment-829763">
			May 3, 2010 at 8:16 am</a>		</div>

		<p>And if I drop a file named &#8220;-Embedding&#8221;?</p>
<div class=post>[<i>Then the file is opened. (Think about it.) -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-829773">
				<div id="div-comment-829773" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Moi</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100503-00/?p=14183#comment-829773">
			May 3, 2010 at 8:23 am</a>		</div>

		<blockquote><p>
  And if I drop a file named &quot;-Embedding&quot;?
</p></blockquote>
<p>And if I want to do it in assembly?</p>
<p>Seriously, what drives such questions?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-829783">
				<div id="div-comment-829783" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ivo</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100503-00/?p=14183#comment-829783">
			May 3, 2010 at 8:40 am</a>		</div>

		<p>@Iain:</p>
<blockquote><p>
  It wouldn&#8217;t be a very good simulation if there was!
</p></blockquote>
<p>Let&#8217;s say I&#8217;m writing a namespace extension. I want to detect when you drop a file at specific coordinates, or when you do a &quot;paste&quot; operation. For the first I have to use the mouse position, and for the second I have to ignore it. Would be nice to know which is the case.</p>
<blockquote><p>
  In the spirit of Raymond, suck it and see! You could implement these interface members, and use OutputDebugString to check. &nbsp;That&#8217;s my usual approach to these things.
</p></blockquote>
<p>I can argue that this is contrary to the &quot;Raymond spirit&quot;. This way I will start depending on some undocumented behavior, possibly subject to change in the next version. Imagine if DragOver is being called. I do some processing there instead of in DragEnter/Drop. Well, Windows 11 may stop calling it and I&#8217;m screwed. If the actual sequence is documented, I can write my code correctly and future-proof it. Or maybe to create a shortcut, the shell is telling me that both Shift and Ctrl are pressed, instead of sending DROPEFFECT_LINK (for compatibility with some popular accounting software). Depending on such observed, but undocumented behavior is dangerous and should be avoided if there is an alternative.</p>
<blockquote><p>
  As for you doing it&#8230; if you don&#8217;t want other programs detecting you&#8217;re a fake, it would be best to be as thorough as possible.
</p></blockquote>
<p>I don&#8217;t care if the program detects that I&#8217;m a fake (in fact it may be beneficial because of my first point). I want to paste a file (IDataObject) into a folder (IShellFolder with IDropTarget). There are multiple sequences I can use, but the only one that is guaranteed to work is the one that shell is using. That&#8217;s because (I&#8217;m assuming) the drop target has been tested with the shell&#8217;s fake drop. So the closer my behavior is to the shell, the better chances I have to not break anything.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-829803">
				<div id="div-comment-829803" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">mikeb</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100503-00/?p=14183#comment-829803">
			May 3, 2010 at 10:11 am</a>		</div>

		<p>&gt;&gt; And if I drop a file named &#8220;-Embedding&#8221;?</p>
<p>&gt; </p>
<p>&gt; Seriously, what drives such questions?</p>
<p>I&#8217;m not sure if this was an attempt at knocking the technique or a legitimate question &#8211; on Unix systems, filenames that look like switches is a problem that comes up often enough (especially because the shell expands wildcards, so the user might not even be aware there&#8217;s such a file being passed on the command line) that programs often have a special switch (&#8220;&#8211;&#8220;) to indicate that everything that follows is a filename even if it looks like a switch/option.</p>
<div class=post>[<i>The shell doesn&#8217;t pass relative paths (what would it be relative to?) so the question is moot. That&#8217;s why I wrote &#8220;think about it.&#8221; -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-829833">
				<div id="div-comment-829833" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Jan</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100503-00/?p=14183#comment-829833">
			May 3, 2010 at 11:15 am</a>		</div>

		<p>Great post Raymond. I&#8217;m just wondering about one thing, in this line</p>
<p>HDROP hdrop = reinterpret_cast&lt;HDROP&gt;(stgm.hGlobal);</p>
<p>shouldn&#8217;t you use GlobalLock? Or does the shell guarantee its DataObject won&#8217;t bother you with ancient relics like movable memory blocks? If so, is that true for all DataObjects one gets from the shell?</p>
<div class=post>[<i>The person who looks inside the HDROP must GlobalLock it as appropriate. But we&#8217;re not looking inside it here. We&#8217;re just operating on the opaque handle. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-829843">
				<div id="div-comment-829843" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://windowssucks.wordpress.com/' rel='external nofollow' class='url'>WndSks</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100503-00/?p=14183#comment-829843">
			May 3, 2010 at 11:56 am</a>		</div>

		<p>&#8220;[HKLMSoftwareMicrosoftWindowsCurrentVersionApp Pathsscratch.exe]</p>
<p>&#8221; </p>
<p>And if this is a per user app with its COM stuff in HKCU? AFAIK App Paths is HKLM only for some stupid reason, no UAC-less install for you!</p>
<div class=post>[<i>Sorry the solution isn&#8217;t 100% applicable to all situations. But at least it helps the other 99% of the programs out there. I like to think that&#8217;s worth something. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-829863">
				<div id="div-comment-829863" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Pierre B.</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100503-00/?p=14183#comment-829863">
			May 3, 2010 at 12:39 pm</a>		</div>

		<p>I know this is not provided as 100% tested bug-free code, but for the sake of people who will undoubtedly copy and paste it, shouldn&#8217;t there be a test for Query failure; in the code:</p>
<p>&nbsp; &nbsp;HRESULT hr = pdt-&gt;QueryInterface(riid, ppv);</p>
<p>&nbsp; &nbsp;pdt-&gt;Release();</p>
<p>?</p>
<p>I know that it&#8217;s unlikely you will get queried about another interface not supported, but still, I think that Release() should be conditional.</p>
<div class=post>[<i>The code is correct. If the QI fails, then hr is set to E_NOINTERFACE and the SimpleDropTarget is destroyed. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-829893">
				<div id="div-comment-829893" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Anonymous Coward</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100503-00/?p=14183#comment-829893">
			May 3, 2010 at 4:34 pm</a>		</div>

		<p>Although I love articles about the deep stuff, I think articles like this are fine too once in a while, especially for people who are more susceptible to a hand on approach than to reading the docs (although they still should after they roughly understand what they&#8217;re doing). Besides, I&#8217;ve ran into command line length limits in the past, so this may come in handy someday, and given that the COM stuff can be handled by templates or a framework, I think this is actually easier than the antiquated command line interface.</p>
<p>Seriously, it&#8217;s 2010, console support should be dropped. If people really want a console they can code one up themselves. ;-)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-829913">
				<div id="div-comment-829913" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Cheong</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100503-00/?p=14183#comment-829913">
			May 3, 2010 at 5:57 pm</a>		</div>

		<blockquote><p>
  I&#8217;ll try to remember to wake you up when something interesting is about to happen.
</p></blockquote>
<p>That and the part you tell people sleep and wake now makes me giggle. :)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-829933">
				<div id="div-comment-829933" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">sample</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100503-00/?p=14183#comment-829933">
			May 3, 2010 at 7:46 pm</a>		</div>

		<p>This sample should have been documented in the SDK 15 years ago. Why isn&#8217;t it?</p>
<div class=post>[<i>Um, the feature didn&#8217;t exist 15 years ago. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-829953">
				<div id="div-comment-829953" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Harold</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100503-00/?p=14183#comment-829953">
			May 3, 2010 at 8:37 pm</a>		</div>

		<p>Amazing! I was just working on this very problem. Thanks Raymond.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-829883">
				<div id="div-comment-829883" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Mark</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100503-00/?p=14183#comment-829883">
			May 3, 2010 at 4:13 pm</a>		</div>

		<p>Pierre B: *ppv, not pdt, is set to the result of QueryInterface. &nbsp;The caller to CreateInstance owns *ppv if it is set, not us. &nbsp;We own pdt, so need to release it before return.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-829963">
				<div id="div-comment-829963" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">avek</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100503-00/?p=14183#comment-829963">
			May 3, 2010 at 11:51 pm</a>		</div>

		<p>Maybe it&#8217;s nitpicking, but isn&#8217;t OleInitialize() required instead of CoInitialize() when messing with IDataObject?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-829983">
				<div id="div-comment-829983" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://wizou.fr' rel='external nofollow' class='url'>Wizou</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100503-00/?p=14183#comment-829983">
			May 4, 2010 at 1:17 am</a>		</div>

		<p>I&#8217;m dubious about the App Paths registry entry..</p>
<p>What if two programs in the system are named scratch.exe?</p>
<p>Wouldn&#8217;t that registry entry redirect launching of all scratch.exe programs (target of file dropping) to launching the LocalServer32 entry instead?</p>
<p>(actually I tested a bit, and indeed it seems to be affecting file dropping on all scratch.exe)</p>
<p>You&#8217;d better choose carefully the name of your executable then..</p>
<p>Why is there no way for the executable itself (before executing) to tell the shell that it supports DropTarget? (for example, a special resource entry)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-830013">
				<div id="div-comment-830013" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">sample</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100503-00/?p=14183#comment-830013">
			May 4, 2010 at 2:27 am</a>		</div>

		<p>&gt; [Um, the feature didn&#8217;t exist 15 years ago. -Raymond]</p>
<p>You are probably lying, but let&#8217;s pretend your not. Then replace 15 with 14 or &#8220;very long time ago&#8221;.</p>
<div class=post>[<i>Support for DropTarget-based execution was added in Windows XP, much less than 15 years ago. And all the information in the article is documented; you just need to connect the dots. Sorry there isn&#8217;t a sample for every possible way of connecting dots. Sometimes you just need to connect them yourself. That&#8217;s why it&#8217;s called programming. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-830023">
				<div id="div-comment-830023" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Morten</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100503-00/?p=14183#comment-830023">
			May 4, 2010 at 3:38 am</a>		</div>

		<p>You should invent and patent a markup language for articles like this. That would be a great tool to have in many technical works where the authors have only a foggy idea of who their target audience is*. Imagine an ebook transforming itself to your skillset. Brilliant.</p>
<p>* What you saying? That authors should figure out what &quot;target audience&quot; means? Don&#8217;t be silly, that&#8217;s HARD WORK!</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-830163">
				<div id="div-comment-830163" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">JM</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100503-00/?p=14183#comment-830163">
			May 4, 2010 at 1:51 pm</a>		</div>

		<p>&quot;You are probably lying&quot;? I guess blogs get the audience they deserve &#8212; if the host self-diagnoses as having the social skills of a thermonuclear device, he&#8217;ll get likewise readers.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-830213">
				<div id="div-comment-830213" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">The_Assimilator</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100503-00/?p=14183#comment-830213">
			May 5, 2010 at 2:22 am</a>		</div>

		<p>@JM</p>
<p>Having the social skills of a thermonuclear device does not imply that one is an idiot. Raymond clearly is not, while yourself and sample are.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-830233">
				<div id="div-comment-830233" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Goran</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100503-00/?p=14183#comment-830233">
			May 5, 2010 at 4:30 am</a>		</div>

		<p>Nice, thanks!</p>
<p>Questions, please?</p>
<p>How do I know that I should use this cast: reinterpret_cast&lt;HDROP&gt;(stgm.hGlobal)?</p>
<p>Is it OK to use it if tymed is not TYMED_HGLOBAL? Or Is tymed guaranteed to be TYMED_HGLOBAL when IDataObject is coming from IDropTarget::Drop? Or does DragQueryFile know how to handle random hDrop? Or&#8230;?</p>
<div class=post>[<i>Exercise: Study the rules for IDataObject, then apply those rules to the situation here. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-830573">
				<div id="div-comment-830573" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Rick C</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100503-00/?p=14183#comment-830573">
			May 5, 2010 at 7:08 pm</a>		</div>

		<p>[Exercise: Study the rules for IDataObject, then apply those rules to the situation here. -Raymond]</p>
<p>Can anyone play this game? &nbsp;The FORMATETC tells you how GetData should pass back the HDROP. &nbsp;You specified TYMED_HGLOBAL, so the HDROP was given back in a HGLOBAL. &nbsp;If you&#8217;d asked for something from GetData that can&#8217;t fit in an HGLOBAL, it should return DV_E_FORMATETC. &nbsp;(In general, that is. &nbsp;I don&#8217;t know why you&#8217;d be asking for anything larger in the case under discussion.)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-830583">
				<div id="div-comment-830583" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Rick C</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100503-00/?p=14183#comment-830583">
			May 5, 2010 at 7:13 pm</a>		</div>

		<p>Oh, and I forgot to say: &nbsp;The documentation for GetData says that you can bitwise or multiple TYMED_* types, and the callee can pick which type to give back. &nbsp;I didn&#8217;t realize that before this, and it means that you would have to check what GetData returned in stgm.tymed. &nbsp;I wonder how many implementations of IDataObject don&#8217;t handle that nuance?</p>
<p>Raymond, that little bit of knowledge alone makes the entire article worthwhile. &nbsp;Thanks!</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-830623">
				<div id="div-comment-830623" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">JM</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100503-00/?p=14183#comment-830623">
			May 6, 2010 at 5:42 am</a>		</div>

		<p>@The_Assimilator: In my book, &quot;you&#8217;re lying&quot; is about the worst thing you could say to a technical person, as it implies they&#8217;re putting their ego before their profession. I&#8217;m an idiot for calling someone out for being rude to the author of the blog in an unnecessary and unlikely manner? I&#8217;m not sure how that works, but I&#8217;ll choose to believe you just misunderstood what I wrote. Either that or your opinion is based on previous experience, in which case due apologies for whatever I did in the past&#8230;</p>
<p>In any case, let&#8217;s drop it, I already regret commenting at all.</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>