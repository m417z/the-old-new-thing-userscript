<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (39)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-339523">
				<div id="div-comment-339523" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://ebersys.blogspot.com' rel='external nofollow' class='url'>Eber Irigoyen</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060123-12/?p=32573#comment-339523">
			January 23, 2006 at 11:31 am</a>		</div>

		<p>sooner or later you have to learn that there is no such thing as obvious, I always try to go by this statement, but there was an article I wrote about some web technology and one guy just couldn&#8217;t get it to work, I told him all the things I could think of that he could check to make it work, on the end he replied, I found the problem!!! </p>
<p>IIS has to be running!</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-339553">
				<div id="div-comment-339553" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Mihai</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060123-12/?p=32573#comment-339553">
			January 23, 2006 at 11:49 am</a>		</div>

		<p>&lt;&lt;IIS has to be running!&gt;&gt;</p>
<p>&quot;And any electric device works better when plugged and turned on.&quot;<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-339563">
				<div id="div-comment-339563" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">BryanK</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060123-12/?p=32573#comment-339563">
			January 23, 2006 at 11:55 am</a>		</div>

		<p>I wonder if this (or something similar to this) is what&#8217;s behind many of the &quot;operation XXX failed: the operation completed successfully&quot; error messages that I see from time to time.  I suppose it might also be that one of the APIs (or internal functions of the program) isn&#8217;t doing a SetLastError(), or that the program is doing a SetLastError(0) (maybe because it&#8217;s calling another API that does it) before showing or logging the error message.</p>
<p>Anyway, that&#8217;s close to my #1 pet peeve of programs: not including enough information in their error message(s) so that I can figure out what went wrong after they fail.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-339573">
				<div id="div-comment-339573" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://plan99.net/~mike/blog' rel='external nofollow' class='url'>Mike</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060123-12/?p=32573#comment-339573">
			January 23, 2006 at 12:07 pm</a>		</div>

		<p>This is something that exceptions would solve (if done properly). Yes, I know exceptions are hard to get right &#8230;. but error-passing can be too!</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-339583">
				<div id="div-comment-339583" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Peter</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060123-12/?p=32573#comment-339583">
			January 23, 2006 at 12:17 pm</a>		</div>

		<p>You&#8217;ve been in MS so long, Raymond, that you forget&#8230; ISV&#8217;s don&#8217;t have access to the source, they don&#8217;t know what all the obvious (but unwritten) rules are. They don&#8217;t see the best practices in other parts of the Windows source. They don&#8217;t get reviewed by people like yourself who know all the tricks.</p>
<p>You link to the docs for EnumWindowsProc&#8230; does it say anything about SetLastError. Nope. And Windows docs and samples have gotten much better in the last 5 years. Imagine the poor folks struggling with apps before that.</p>
<p>That has always been the value of an experienced Windows programmer&#8230; not that they know the API; it&#8217;s always been pretty basic. It&#8217;s that they&#8217;ve (painfully) learned all the hidden tricks and gotchas that were &quot;obvious&quot; to MS employees.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-oldnewthing bypostauthor odd alt thread-odd thread-alt depth-1" id="comment-339593">
				<div id="div-comment-339593" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Raymond+Chen+-+MSFT' rel='external nofollow' class='url'>Raymond Chen - MSFT</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060123-12/?p=32573#comment-339593">
			January 23, 2006 at 12:18 pm</a>		</div>

		<p>Peter: But how could it be any other way? What error code should be returned if a callback indicates that the operation failed?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-339613">
				<div id="div-comment-339613" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">schwiet</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060123-12/?p=32573#comment-339613">
			January 23, 2006 at 12:30 pm</a>		</div>

		<p>&quot;<br />
<br />But how could it be any other way? What error code should be returned if a callback indicates that the operation failed?<br />
<br />&quot;</p>
<p>Your question assumes someone implementing WM_NCCREATE or EnumWindowsProc is also considering how to implement CreateWindow or EnumWindows.  Do you think that is a reasonable assumption?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-oldnewthing bypostauthor odd alt thread-odd thread-alt depth-1" id="comment-339623">
				<div id="div-comment-339623" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Raymond+Chen+-+MSFT' rel='external nofollow' class='url'>Raymond Chen - MSFT</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060123-12/?p=32573#comment-339623">
			January 23, 2006 at 12:39 pm</a>		</div>

		<p>Yes I think it&#8217;s a reasonable assumption. Software doesn&#8217;t consist of magical mind-reading fairies.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-339633">
				<div id="div-comment-339633" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Andreas H&#228;ber</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060123-12/?p=32573#comment-339633">
			January 23, 2006 at 12:49 pm</a>		</div>

		<p>Maybe not implementing EnumWindows, but if you&#8217;re implementing EnumWindowsProc you should at least read the documentation for EnumWindows:<br />
<br />&quot;If EnumWindowsProc returns zero, the return value is also zero. In this case, the callback function should call SetLastError to obtain a meaningful error code to be returned to the caller of EnumWindows.&quot;</p>
<p>Maybe such a doc-section should be added to other similar functions too?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-339673">
				<div id="div-comment-339673" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Mike</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060123-12/?p=32573#comment-339673">
			January 23, 2006 at 2:00 pm</a>		</div>

		<p>I see this problem all the time with newbies trying to implement a window proc, getting something wrong, end up aborting the creation of thier window, and then complaining that CreateWindow is buggy because it fails for no reason and GetLastError doesn&#8217;t return anything meaninful.</p>
<p>Perhaps the logic could go:</p>
<p>(inside CreateWindow&#8230;)<br />
<br />SetLastError(ERROR_WNDPROC_RETURNED_FAILURE) // assume generic failure<br />
<br />(eleventy-billion things that need to happen to create a window&#8230;)<br />
<br />if (!error) SetLastError(NO_ERROR)<br />
<br />(return from CreateWindow)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-339693">
				<div id="div-comment-339693" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.werkema.com' rel='external nofollow' class='url'>Sean Werkema</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060123-12/?p=32573#comment-339693">
			January 23, 2006 at 3:04 pm</a>		</div>

		<p>I was going to post a comment here about this, but I was so angry about Raymond&#8217;s rather rude responses above that I ended up writing an entire diatribe about the Windows API documentation, and put it in my blog.  It mentions several of the many API bugs I&#8217;ve found, and includes a list of three very exacting bullet-points that, if followed, would make the API documentation a lot more user-friendly and a lot less susceptible to problems like this.  (These are not rough fuzzy vague suggestions, either; they&#8217;re all of the &quot;document this specific list of things&quot; variety.)  Here&#8217;s my blog entry, for those who care to read it:</p>
<p><a rel="nofollow" target="_new" href="http://www.werkema.com/blog/index.php?op=ViewArticle&amp;articleId=114&amp;blogId=1" rel="nofollow">http://www.werkema.com/blog/index.php?op=ViewArticle&#038;articleId=114&#038;blogId=1</a></p>
<p>And I think I&#8217;ve concluded that programmers should be legally prohibited from either designing user interfaces or defining good documentation, because both are exercises in a field in which most programmers are highly unskilled:  Human interaction.</p>
<p>Sheesh.  Magical mind-reading fairies indeed.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-339723">
				<div id="div-comment-339723" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Dan</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060123-12/?p=32573#comment-339723">
			January 23, 2006 at 3:57 pm</a>		</div>

		<p>The misunderstanding can arise when someone who is, er, &quot;inexperienced&quot; (read: &quot;not a mind reader him/herself&quot;) doesn&#8217;t realize that, say, returning FALSE from an enum callback is semantically equivalent with a failure (in the win32 world).</p>
<p>What if some poor chum just finds the window he is looking for and decides to stop enumeration? It won&#8217;t occur to him that <em>he</em> caused the error indicated by the windows API. If I had written the API, stopping enumeration by returning FALSE would not be an error. If I had stopped enumeration because I had encountered an error, I wouldn&#8217;t need to propogate that back through the windows API&#8211;I set the dang error, I ought to know what it is.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-oldnewthing bypostauthor even thread-even depth-1" id="comment-339733">
				<div id="div-comment-339733" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Raymond+Chen+-+MSFT' rel='external nofollow' class='url'>Raymond Chen - MSFT</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060123-12/?p=32573#comment-339733">
			January 23, 2006 at 4:06 pm</a>		</div>

		<p>If you don&#8217;t need to propagate the reason why you stopped enumerating back through the Windows API, then more power to you. In fact, most people do it this way &#8211; recording the failure reason in some other place. But if you choose to do it this way, then don&#8217;t complain that GetLastError doesn&#8217;t return anything interesting &#8211; you already decided to return the reason somewhere else &#8211; go look in that other place you yourself put it.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-339753">
				<div id="div-comment-339753" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://kleymeyer.typepad.com' rel='external nofollow' class='url'>Alan Kleymeyer</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060123-12/?p=32573#comment-339753">
			January 23, 2006 at 4:16 pm</a>		</div>

		<p>I always wondered why there weren&#8217;t enough detailed error messages in the debugging output window.  With the Windows debug DLLs you would sometimes get very nice detailed messages of why an API call failed, but more often it was a general message (like a dialog creation failed) that shed little light on the problem.  I don&#8217;t know how many times I exclaimed to myself over the years, &quot;I know you know what I did wrong, why don&#8217;t you just tell me?&quot;.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-339783">
				<div id="div-comment-339783" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">DKW</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060123-12/?p=32573#comment-339783">
			January 23, 2006 at 5:07 pm</a>		</div>

		<p>Could it also be that we&#8217;re not exactly sure what&#8217;s going to happen to the global error value?  It never even crossed my mind to use SetLastError/GetLastError to pass this kind of application-specific error because I have no idea what Windows might do between the time  my callback exits and the caller regains control.  I wouldn&#8217;t be surprised to find that user32 sets the error value to something indicating general failre, wiping out my specific value.  As mentioned above, we don&#8217;t have source.  We&#8217;re in the dark.  So, even when I need to capture this information, I always resort to an application-specific mechanism rather than a system supplied one that I cannot trust.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-339803">
				<div id="div-comment-339803" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Dan</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060123-12/?p=32573#comment-339803">
			January 23, 2006 at 5:13 pm</a>		</div>

		<p>But you see, I might not understand why EnumChildWindows returns a failure. If in the way that I would have written win32, a callback returning false does <em>not</em> indicate a failure, than EnumChildWindows must have encountered some other problem, which I dutifully investigate.</p>
<p>Again, the problem is that I may not know that my callback was the actual source of the error condition, and not something else. Programmers aren&#8217;t mind-readers, either.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-oldnewthing bypostauthor even thread-even depth-1" id="comment-339813">
				<div id="div-comment-339813" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Raymond+Chen+-+MSFT' rel='external nofollow' class='url'>Raymond Chen - MSFT</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060123-12/?p=32573#comment-339813">
			January 23, 2006 at 5:22 pm</a>		</div>

		<p>&quot;If I had written the API, stopping enumeration by returning FALSE would not be an error.&quot;</p>
<p>And that&#8217;s how it&#8217;s designed today. If you don&#8217;t call SetLastError, then there is no error code, so there is no error.</p>
<p>&quot;I may not know that my callback was the actual source of the error condition, and not something else.&quot;</p>
<p>That&#8217;s why most people store the &quot;real&quot; reason for stopping the enumeration out-of-band. That&#8217;s my recommendation as well.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-339833">
				<div id="div-comment-339833" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blogs.msdn.com/mgrier' rel='external nofollow' class='url'>Michael Grier [MSFT]</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060123-12/?p=32573#comment-339833">
			January 23, 2006 at 5:36 pm</a>		</div>

		<p>I&#8217;m going to slightly disagree with Raymond&#8217;s recommendation.</p>
<p>Don&#8217;t use SetLastError() to propagate out a status.  Instead almost all of these APIs take a PVOID context that&#8217;s passed through to the callback function.  In the actual context struct you should have a place where you can indicate that you chose to end the callback sequence early and it&#8217;s because of &lt;x&gt;.  (Where &lt;x&gt; may be &quot;I hit error code &lt;Z&gt;&quot; or it might be just that I found what I was looking for and we don&#8217;t need to continue scanning.)</p>
<p>Unfortunately not everyone who authored a callback-based interface had the forethought to provide a parameter for a context to be passed to the callback (hey when you&#8217;re thinking single threaded, the address space is your context!) in which case, while you /can/ fix this yourself using per-thread data to store the context pointer (as long as your callback is trivial), just setting the preexisting per-thread-context (the win32 last error value) suffices.</p>
<p>We should log a doc bug about this because the fact that the last error value has to be maintained between the callback and the original caller is nonobvious but is in fact part of the interface.</p>
<p>But I never like the easy way.  It&#8217;s usually fraught with danger.<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-339843">
				<div id="div-comment-339843" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Dan</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060123-12/?p=32573#comment-339843">
			January 23, 2006 at 5:39 pm</a>		</div>

		<p>But there <em>is</em> an error. Or there appears to be, because EnumChildWindows returns zero.</p>
<p>Thankfully, the documentation for EnumChildWindows has been amended (informing the consumer of the API that if s/he returns zero from the callback, so will the enum function), so hopefully this will not actually happen to anyone.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-339863">
				<div id="div-comment-339863" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Robert</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060123-12/?p=32573#comment-339863">
			January 23, 2006 at 6:16 pm</a>		</div>

		<p>Unfortunately, the method described for WM_NCCREATE doesn&#8217;t work for WM_CREATE (when -1 is returned), because Windows seems to reset the last error code after WindowProc returns from WM_DESTROY. Also if FALSE is returned for WM_NCCREATE, Windows still calls WM_NCDESTROY, so the last error can also be set in WM_NCDESTROY.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-rickbrew even thread-even depth-1" id="comment-339893">
				<div id="div-comment-339893" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">rickbrew</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060123-12/?p=32573#comment-339893">
			January 23, 2006 at 6:48 pm</a>		</div>

		<p>My favorite error message that I encountered recently was something like,</p>
<p>&quot;Unable to delete [filename]: There is not enough disk space.&quot;</p>
<p>This was on a drive with 0 bytes free. At first glance it seems completely contradictory and ridiculous :) It was in fact a manual deletion from Explorer, so there was probably some bookkeeping in the Recycle Bin that required a small amount of disk space.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-339913">
				<div id="div-comment-339913" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Miral</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060123-12/?p=32573#comment-339913">
			January 23, 2006 at 7:18 pm</a>		</div>

		<p>That&#8217;s the thing; ideally, all the API routines that call callbacks would do something like:<br />
<br />  SetLastError(ERROR_CALLBACK_FAILED);<br />
<br />  if(!Callback(&#8230;)) return FALSE;<br />
<br />  SetLastError(ERROR_SUCCESS);<br />
<br />  &#8230;</p>
<p>so that if the callback returns failure without setting the error code then any generic error-handling code watching the enclosing call could at least see &quot;oh, it failed because the callback told it to&quot; &#8212; and if it did set an explicit error code, then it&#8217;s preserved.</p>
<p>But we can&#8217;t assume that, we don&#8217;t have the Windows code.  For all we know, the SetLastError is immediately before the &quot;return FALSE&quot;, so that anything we do is overwritten.  Or as part of its cleanup prior to exit, some other API that it calls internally nukes the error code.</p>
<p>Unless we&#8217;re explicitly told that error codes get propagated out of callbacks, we have to assume that they&#8217;re not, and therefore that there&#8217;s no point in calling SetLastError.  (Sure, we could try it and see if it works.  But if it&#8217;s not documented then it&#8217;s not part of the spec and may change in a future version of Windows.  So we can&#8217;t rely on it.)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-339933">
				<div id="div-comment-339933" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Miral 2</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060123-12/?p=32573#comment-339933">
			January 23, 2006 at 7:50 pm</a>		</div>

		<p>And I keep forgetting to put a different name in.  If I put my normal nick (&quot;Miral&quot;) in there then it goes and puts a link in to an MSDN blog.  And that&#8217;s not my link.  Arg.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-339953">
				<div id="div-comment-339953" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">AnotherMatt</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060123-12/?p=32573#comment-339953">
			January 23, 2006 at 8:17 pm</a>		</div>

		<p>I think the Windows API has awesome documentation compared to most API&#8217;s.  Most of the things people complain about are in the tutorial sections, but most people don&#8217;t read those, apparently.</p>
<p>No, it&#8217;s not Windows&#8217;, it&#8217;s the Tcl/Tk documentation that sucks.  I think Microsoft should give it a good workover.  I&#8217;m sure they could do a better job than what they got right now.<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-339963">
				<div id="div-comment-339963" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Miral2</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060123-12/?p=32573#comment-339963">
			January 23, 2006 at 8:23 pm</a>		</div>

		<p>Let&#8217;s face it: all documentation sucks.  That&#8217;s no reason to stop suggestions for making it suck less, though ;)</p>
<p>And when it comes to documentation, there really is no such thing as &quot;this is too obvious to mention&quot; &#8212; if someone reads your docs and ends up thinking the wrong thing, then it&#8217;s almost always the docs at fault.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-339973">
				<div id="div-comment-339973" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">JDM</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060123-12/?p=32573#comment-339973">
			January 23, 2006 at 9:25 pm</a>		</div>

		<p>AnotherMatt:</p>
<p>&quot;I think the Windows API has awesome documentation compared to most API&#8217;s.&quot;</p>
<p>I agree.  I have never had any problem finding what I need in the MSDN library.  Some of the descriptions can be vague at times (I cannot think of an example), but it usually does not take much effor to figure it out.  I would hate to try and teach myself Win32 programming without it (not sure it would even be possible).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-339983">
				<div id="div-comment-339983" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://about:blank' rel='external nofollow' class='url'>silkio</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060123-12/?p=32573#comment-339983">
			January 23, 2006 at 10:15 pm</a>		</div>

		<p>Java Document is thousands of times easier to read and navigate then the bloated MSDN. Not only is MSDN loaded with that annoying menu system, but it takes thousands of clicks to get to what you are actually after. </p>
<p>JME anyway.</p>
<p>And back on topic, I, like most others, would never call SetLastError unless I was specifically told to by the doc.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-340033">
				<div id="div-comment-340033" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ring Zero</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060123-12/?p=32573#comment-340033">
			January 24, 2006 at 12:37 am</a>		</div>

		<p>OK, so let me get this straight. </p>
<p>When your WNDPROC gets a WM_NCCREATE message, you should do your thing and then return TRUE (1) to indicate success, or FALSE (0) to indicate failure. In the latter case, you should call SetLastError to deposit an error code for the caller of CreateWindow to pick up after it sees NULL come back from CreateWindow.</p>
<p>On the other hand, the sister message WM_CREATE should be handled by returning 0 (not to be confused with FALSE) on success instead of TRUE, and -1 (where did that come from?) on failure. In case of failure, you can call SetLastError as in the WM_CREATE case, but it won&#8217;t do any good, as the error will not survive the trip back to the original caller.</p>
<p>Interesting? Somewhat. So obvious that it doesn&#8217;t need to be mentioned? To some, I suppose.<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-junfeng even thread-even depth-1" id="comment-340043">
				<div id="div-comment-340043" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Junfeng+Zhang' rel='external nofollow' class='url'>Junfeng Zhang</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060123-12/?p=32573#comment-340043">
			January 24, 2006 at 1:20 am</a>		</div>

		<p>SetLastError() is too easy to be eaten by other operations. After you call SetLastError(), maybe you want to do some error logging stuff. Right there your error code is eaten. </p>
<p>Or maybe someone else want to do the error logging stuff. </p>
<p>You have to copy and restore the error before and after the error logging stuff. Many people did not realize it. </p>
<p>Exceptions may help. But exceptions are too darn hard to get right. </p>
<p>Mike&#8217;s suggestion of passing a context object is another alternative. But then it is so not typical. </p>
<p>Make no mistake, error reporting is not a trivial problem.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-340063">
				<div id="div-comment-340063" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">AnotherMatt</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060123-12/?p=32573#comment-340063">
			January 24, 2006 at 3:22 am</a>		</div>

		<p>Yeah, I think error handling should documented better in MSDN.  It&#8217;s not obvious at all when you should call SetLastError().  In MSDN (July 200) it says:</p>
<p>&quot;This function is intended primarily for dynamic-link libraries (DLL).  Calling this function after an error occurs lets the DLL emulate the behavior of the Win32 API.&quot;</p>
<p>That&#8217;s totally misleading.  It should say that SetLastError() is solely for the application programmer and that the Win32 API doesn&#8217;t use the value at all.  There&#8217;s no way to know what the exact purpose of SetLastError() is.  It could trigger some error handling somewhere within the Win32 API.  Who knows?<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-340073">
				<div id="div-comment-340073" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Matsue Rah</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060123-12/?p=32573#comment-340073">
			January 24, 2006 at 4:01 am</a>		</div>

		<p>I need a SetLastError() that really guarantees what it says.  After that, no more errors.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-340093">
				<div id="div-comment-340093" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">SuperKoko</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060123-12/?p=32573#comment-340093">
			January 24, 2006 at 6:52 am</a>		</div>

		<p>&quot;This is something that exceptions would solve (if done properly). Yes, I know exceptions are hard to get right &#8230;. but error-passing can be too!&quot;</p>
<p>I doubt you can let an exception escape from a callback function.<br />
<br />Because it could do memory leaks if the enumeration function has no exception handling and allocates resources. And even if the function is specifically designed to support exceptions, it would only work with a specific implementation of exception handling (probably Visual C++ exception handling system).<br />
<br />The best you can hope, is an absence of resource allocation in the enumeration function.</p>
<p>So, exceptions are not good for that (you must catch all exceptions you throw in your callback function in the callback function itself).</p>
<p>Except when it is specifically documented, you cannot rely on SetLastError behavior as Ring Zero and others noticed.</p>
<p>The only general solution is hand-written systems : setting your own TLS data, or setting fields in a context object passed to the callback function (what I generally do).</p>
<p>If the program is monothreaded, you may also pass data in global/static data (It is a bad idea, but some C programmers do it this way).<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-340113">
				<div id="div-comment-340113" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Chris Oldwood</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060123-12/?p=32573#comment-340113">
			January 24, 2006 at 9:19 am</a>		</div>

		<p>IIRC Windows Developer Network (or was it Journal) used to publish in the magazine a set of annotatations that could be added to the standard SDK help which added all the bits that were never documented&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-340593">
				<div id="div-comment-340593" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Norman Diamond</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060123-12/?p=32573#comment-340593">
			January 25, 2006 at 1:38 am</a>		</div>

		<p>Sorry this is almost completely off topic, but comments are closed on the most relevant posting (two years ago) and it touches on this part of it:</p>
<p>&gt; This is something that is so obvious I<br />
<br />&gt; didn&#8217;t think it needed to be said; it falls<br />
<br />&gt; into the &quot;because computers aren&#8217;t psychic<br />
<br />&gt; (yet)&quot; category of explanation.</p>
<p>MSDN readers aren&#8217;t psychic yet (except for one famous reader ^_^) and some things sure aren&#8217;t obvious to ordinary readers.  Here&#8217;s something which not only tripped up me, it tripped up an MVP, and no one got it right until I spent a day doing Google searches and figuring out the code I was reading.</p>
<p>Take a look at<br />
<br /><a rel="nofollow" target="_new" href="http://msdn.microsoft.com/library/default.asp?url=/library/en-us/winui/winui/windowsuserinterface/resources/introductiontoresources/resourcereference/resourcefunctions/findresource.asp" rel="nofollow">http://msdn.microsoft.com/library/default.asp?url=/library/en-us/winui/winui/windowsuserinterface/resources/introductiontoresources/resourcereference/resourcefunctions/findresource.asp</a></p>
<p>and<br />
<br /><a rel="nofollow" target="_new" href="http://msdn.microsoft.com/library/default.asp?url=/library/en-us/winui/winui/WindowsUserInterface/Resources/IntroductiontoResources/ResourceReference/resourcetypes.asp" rel="nofollow">http://msdn.microsoft.com/library/default.asp?url=/library/en-us/winui/winui/WindowsUserInterface/Resources/IntroductiontoResources/ResourceReference/resourcetypes.asp</a></p>
<p>Does this make it obvious that this call<br />
<br />FindResource(GetModuleHandle(NULL), MAKEINTRESOURCE(my_string_id), RT_STRING)<br />
<br />isn&#8217;t going to find the resource for my_string_id?  MSDN doesn&#8217;t say it.  Even Mr. Chen&#8217;s blog entry two years ago on string resources didn&#8217;t say that FindResource wasn&#8217;t going to find it.  Where does the obviousness come from?</p>
<p>Now let&#8217;s look at something that the MSDN page on FindResource does say:<br />
<br />&gt; To use a resource immediately, an<br />
<br />&gt; application should use one of the following<br />
<br />&gt; resource-specific functions to find and load<br />
<br />&gt; the resources in one call.<br />
<br />&gt; [&#8230;]<br />
<br />&gt; LoadString Loads a string-table entry.</p>
<p>In one call eh?  Well sure, if the programmer&#8217;s psychic powers provided a sufficient buffer length at the time of writing the code.  Even MFC&#8217;s internals can&#8217;t do it in one call, they run a loop growing the buffer and calling LoadString until they think they got the entire string.  Well, MFC&#8217;s programmers weren&#8217;t as psychic as the rest of us have to be.  Obviously.</p>
<p>Now sure, I &quot;should&quot; submit these remarks to the contact address at the bottom of the MSDN page.  The last time I did that, Microsoft replied saying that my comments were a request for technical support and Microsoft told me how to contact their technical support (yet another famous story).  So sorry, I&#8217;m sharing this tangent with the rest of us poor psychics.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-341313">
				<div id="div-comment-341313" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">AnotherMatt</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060123-12/?p=32573#comment-341313">
			January 27, 2006 at 1:38 am</a>		</div>

		<p>Have you tried SizeofResource(), which is listed at the bottom of that first page?<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-341353">
				<div id="div-comment-341353" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">NotTrustworthy</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060123-12/?p=32573#comment-341353">
			January 27, 2006 at 10:27 am</a>		</div>

		<ol>
<li>My code calls SetLastError().<br />
<br />2. Some other&#8217;s code is executing, possibly calling SetLastError()<br />
<br />3. My code is calling GetLastError()</p>
<p>When you call other code out of your control, then you can NEVER trust previously set error values.</p>
<p>How do I know that the code in EnumWindowsProc/EnumWindows doesn&#8217;t call SetLastError() after my callback returned? How can I be 100% sure?<br />
<br />Reading docs. Nope, not mentioned at all.<br />
<br />Reading the source. Nope, it&#8217;s not open.</p>
<p>The documentation doesn&#8217;t mention it, thus it&#8217;s undefined and can be changed tomorrow.</p>
<p>It&#8217;s stupid to rely on non documented features, never use SetLastError() in the callback!</li>
</ol>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-341433">
				<div id="div-comment-341433" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joseph Bruno</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060123-12/?p=32573#comment-341433">
			January 27, 2006 at 2:02 pm</a>		</div>

		<p>There are no documented methods for doing certain common operations. For example, there is no documented way to use GetOpenFileName to ask the user reliably for multiple files. OFN_ALLOWMULTISELECT won&#8217;t work because it requires the programmer to allocate telepathically enough memory for the filenames the user is going to select. Using a hook procedure won&#8217;t work because there is no documented way for a hook procedure to retrieve the list of selected filenames, or even the length of such a list.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-341603">
				<div id="div-comment-341603" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Norman Diamond</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060123-12/?p=32573#comment-341603">
			January 29, 2006 at 10:26 pm</a>		</div>

		<p>Friday, January 27, 2006 1:38 AM by AnotherMatt<br />
<br />&gt; Have you tried SizeofResource(), which is<br />
<br />&gt; listed at the bottom of that first page?</p>
<p>Have you noticed that one of the parameters to SizeofResource has to be a handle that was returned by FindResource?  Did you notice that it would be so hard (or maybe impossible if sticking to documented features) to use FindResource to get a handle to a string resource, that even MFC&#8217;s internals don&#8217;t use it?  They run a loop growing a buffer and calling LoadString until they think they got the entire string?  The algorithm is efficient, just coded for &#8230; oops, wrong thread.</p>
<p>Anyway, yes I sure did try it before posting.  Did you?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-342333">
				<div id="div-comment-342333" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Michiel</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060123-12/?p=32573#comment-342333">
			February 1, 2006 at 9:36 am</a>		</div>

		<p>If your callback failed because it called another function that failed, you don&#8217;t. I.e. If you called RegOpenKeyExW, and it failed with insufficient privileges, you don&#8217;t have to call SetLastError(5) again.</p>
<p>However, if it fails with a code 8, you might need to SetLastError(5) too. Because if you open the key without KEY_QUERY_VALUE, XP SP2 will return 8 instead of 5. </p>
<p>Undocumented, of course. Not having source doesn&#8217;t help either.</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>