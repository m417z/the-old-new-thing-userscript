<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (20)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-715323">
				<div id="div-comment-715323" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">SuperKoko</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090311-00/?p=18863#comment-715323">
			March 11, 2009 at 11:27 am</a>		</div>

		<blockquote><p>
  We don&#8217;t know what&#8217;s going on, so we&#8217;ll just wrap it inside an exception handler and pretend it didn&#8217;t happen.
</p></blockquote>
<p>It reminds me guys who want to validate their strict HTML.</p>
<p>target=_blank is invalid in the strict DTD, so they wrap it in a javascript link. Since validators don&#8217;t read javascripts, they don&#8217;t notice that!</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-715333">
				<div id="div-comment-715333" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Karellen</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090311-00/?p=18863#comment-715333">
			March 11, 2009 at 11:34 am</a>		</div>

		<p>I suspect that the question actually being asked here is &quot;What is a window handle, why does a mere control need one, why isn&#8217;t it created for me when I create the control, and what do I have to do/wait for for the window handle to be created?&quot;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-715373">
				<div id="div-comment-715373" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Caliban Darklock</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090311-00/?p=18863#comment-715373">
			March 11, 2009 at 11:49 am</a>		</div>

		<p>There are two problems here of different priorities.</p>
<p>Problem 1: We are getting an exception and we don&#8217;t know why.</p>
<p>Problem 2: The exception is crashing the program.</p>
<p>From a business perspective, problem 2 is more important than problem 1. While the developer wants problem 1 solved, which will naturally make problem 2 go away, that will take time (for example, one must wait for Raymond to read and respond to the email).</p>
<p>In the meanwhile, by any means necessary, stop the program from crashing &#8211; this makes it LESS of a problem to a businessman who may be demonstrating the program to a potential client. The client may buy a program which has a few quirks like you click a button and nothing happens. The client is far less likely to buy a program which crashes.</p>
<p>So you wrap the exception in a try/catch and ignore it. The underlying problem has not changed, but the program stops crashing.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-715443">
				<div id="div-comment-715443" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Tone</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090311-00/?p=18863#comment-715443">
			March 11, 2009 at 2:13 pm</a>		</div>

		<p>Similar experience with my brother-in-law who accused me of messing up his new game. After he let me play it he recieved an error and it was, of course, my fault.</p>
<p>Error: Game disc not in disc drive. Insert disc and try again.</p>
<p>My bad.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-715453">
				<div id="div-comment-715453" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://robmanderson.blogspot.com' rel='external nofollow' class='url'>Rob Manderson</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090311-00/?p=18863#comment-715453">
			March 11, 2009 at 2:15 pm</a>		</div>

		<p>@Caliban</p>
<p>&#8216;So you wrap the exception in a try/catch and ignore it. The underlying problem has not changed, but the program stops crashing.&#8217;</p>
<p>And then the try/catch is left in and masks a bunch of other problems, even after you solve the original problem.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-715493">
				<div id="div-comment-715493" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">reader</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090311-00/?p=18863#comment-715493">
			March 11, 2009 at 3:05 pm</a>		</div>

		<p>I have a feeling the (unspoken) problem is that the developer expects the control to already have a window handle at the point when the issue occurs. &nbsp;Perhaps the real question is &quot;why doesn&#8217;t the control have a window handle yet?&quot; &nbsp;Not that this is any excuse for not phrasing the question correctly.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-715503">
				<div id="div-comment-715503" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ian Boyd</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090311-00/?p=18863#comment-715503">
			March 11, 2009 at 4:24 pm</a>		</div>

		<p>i can&#8217;t really blame someone for not understanding Windows handles in .NET programming. The fact that some controls use things called &quot;window handles&quot; when running on Windows is an implementation detail, that leaks out now and again.</p>
<p>Nothing says that some future version of the the .NET library won&#8217;t use controls that are not simply thin wrappers around a Windows common control. In 50 years the ListView control might not be a Win32 listview, and Windows might not even use HWNDs.</p>
<p>But yes, his question should have been: &quot;I&#8217;m getting this exception, telling me that a control doesn&#8217;t have a window handle assigned. What is a window handle? How do i assign it? When should i assign it? What is the reason it should be assigned? What technique should i be using that doesn&#8217;t require it to be assigned? What is the downside of assigning a window handle?&quot; etc&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-715523">
				<div id="div-comment-715523" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">BryanWolf</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090311-00/?p=18863#comment-715523">
			March 11, 2009 at 4:39 pm</a>		</div>

		<p>Yeah, this is definitely a scenario where inability to google + obscure error message = oddly phrased bad question.</p>
<p>In this case, if you tried to solve the actual error message you would probably shoot yourself in the foot. &nbsp;9 times out of 10, the issue is that you&#8217;re attempting to access a control from a thread other than the one on which it was created.</p>
<p>I just did a google search to see what would come up and the top result is an MSDN forums result where the correct answer is posted.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-715543">
				<div id="div-comment-715543" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://deadnode.org/' rel='external nofollow' class='url'>James Sutherland</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090311-00/?p=18863#comment-715543">
			March 11, 2009 at 5:02 pm</a>		</div>

		<p>Tone: I had that, years ago, after borrowing a secretary&#8217;s system to use her label printer. Being sensible, I turned the PC and printer off when finished with them, only to be blamed some days later when she encountered an error from the label printer application. The error, of course, resulted from the printer being switched off: apparently she had never switched it off before, so never switched it on either.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-715563">
				<div id="div-comment-715563" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://sandfly.net.nz/blog' rel='external nofollow' class='url'>Andrew Stephens</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090311-00/?p=18863#comment-715563">
			March 11, 2009 at 5:22 pm</a>		</div>

		<p>It could be worse. Java&#8217;s compile-time checked exceptions are a great feature but some people seem to take compile errors as a personal challenge.</p>
<p>I have seen production Java code that extensively used a subclass of the File class which provided no new functionality but silently swallowed exceptions so the rest of the code didn&#8217;t have to worry about those pesky compile errors.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-715343">
				<div id="div-comment-715343" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">ton</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090311-00/?p=18863#comment-715343">
			March 11, 2009 at 11:39 am</a>		</div>

		<p>Just pathetic, *all* the information is clearly stated but yet the user(developer?) still cries foul. Again there are some folks who really shouldn&#8217;t be programming. </p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-715583">
				<div id="div-comment-715583" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://nicholas.piasecki.name/' rel='external nofollow' class='url'>Nicholas Piasecki</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090311-00/?p=18863#comment-715583">
			March 11, 2009 at 6:53 pm</a>		</div>

		<p>This can also happen if they instance a Form and try to do stuff to it before they&#8217;ve actually shown it, since the Handle is lazily initialized. If showing the form isn&#8217;t feasible, simply accessing the Handle property of the form (IntPtr hwnd = myForm.Handle;) will usually do the trick. Or just doing the work in the HandleCreated event. I&#8217;ve also seen it come up when someone instances a Form in their UI thread but tries to show the form in the background thread&#8211;then InvokeRequired stops working properly.</p>
<p>But yeah &#8212; it&#8217;s not like the exception is particularly unclear or anything.</p>
<p>Reminds me of our international customers who call and complain about getting charged a VAT tax despite having clicked a checkbox to confirm they&#8217;ve read a huge &quot;YOU MAY BE CHARGED A VAT TAX BY YOUR COUNTRY&quot; tax notice during checkout.</p>
<p>People just don&#8217;t read things. Simple as that.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-715613">
				<div id="div-comment-715613" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Karellen</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090311-00/?p=18863#comment-715613">
			March 11, 2009 at 7:10 pm</a>		</div>

		<p>&quot;In 50 years the [.NET] ListView control might not be a Win32 listview&quot;</p>
<p>Well, that might be the case /right now/, if you&#8217;re running your .NET app on the Mono implementation of .NET on Linux.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-715633">
				<div id="div-comment-715633" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Tsukrov</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090311-00/?p=18863#comment-715633">
			March 11, 2009 at 8:00 pm</a>		</div>

		<p>I used to dislike .NET for that.</p>
<p>Yup, I know it packs the params and send them via PostMessage. Sure.</p>
<p>But could it work other way, &quot;free-threaded&quot;?</p>
<p>Can I change my GUI from other thread painless?</p>
<p>Could .NET take the work?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-715643">
				<div id="div-comment-715643" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://brandonlive.com' rel='external nofollow' class='url'>Brandon Paddock</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090311-00/?p=18863#comment-715643">
			March 11, 2009 at 9:58 pm</a>		</div>

		<p>My favorite part of this problem is that if they add the simple check to see if the handle is created (for instance, by checking the .Handle property), they will actually prompt the creation of the window (and associated handle) simply by trying to see if it&#8217;s been created.</p>
<p>I call it Brandon&#8217;s Certainty Principle of WinForms window handles. &nbsp;If you check it, it&#8217;s pretty much guaranteed to be there. &nbsp;But if you don&#8217;t, it might not be :)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-715663">
				<div id="div-comment-715663" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">chrismcb</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090311-00/?p=18863#comment-715663">
			March 11, 2009 at 10:22 pm</a>		</div>

		<p>I don&#8217;t understand their work around.</p>
<p>Starting something up fails because of some unknown error.</p>
<p>So the workaround is to ignore the failure of the thing being started up? How did this solve anything, other than stopping the crash?</p>
<p>Shoot, deleting the line of code would have done the same thing.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-715703">
				<div id="div-comment-715703" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Drak</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090311-00/?p=18863#comment-715703">
			March 12, 2009 at 2:42 am</a>		</div>

		<p>This sort of reminds me of error reports we sometimes get from clients. They attach the error message to the report. It says &#8216;There is not enough space on drive C:&#8217;.</p>
<p>The client asks us if we can fix his problem. Time taken: 1 or 2 days depending on how busy our service desk is with other things. If the client had read the error message he could have fixed it himself in 5 minutes.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-715893">
				<div id="div-comment-715893" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">J</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090311-00/?p=18863#comment-715893">
			March 12, 2009 at 12:41 pm</a>		</div>

		<p>&quot;So the workaround is to ignore the failure of the thing being started up? How did this solve anything, other than stopping the crash?&quot;</p>
<p>Maybe they were trying to use it at some point before everything was initialized, and then once everything was initialized, it worked as intended. &nbsp;So by eating the exception, they got past the initialization crash long enough for everything to start working.</p>
<p>Same kind of issue if you have a global object instance whose constructor runs before main() and the constructor calls into some framework that hasn&#8217;t been initialized yet. &nbsp;And you&#8217;re expecting main() to run first because it calls GenericFrameworkInitialize() before kicking off your threads and whatever.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-716133">
				<div id="div-comment-716133" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Brian</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090311-00/?p=18863#comment-716133">
			March 12, 2009 at 3:30 pm</a>		</div>

		<p>WPF doesn&#8217;t use the win32 listview or handles for it&#8217;s controls either (a Window being the exception, of course), so you don&#8217;t have wait 50 years. :)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-716303">
				<div id="div-comment-716303" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">chrismcb</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090311-00/?p=18863#comment-716303">
			March 12, 2009 at 7:48 pm</a>		</div>

		<p>@J I still don&#8217;t get it.</p>
<p>&quot;Maybe they were trying to use it at some point before everything was initialized, and then once everything was initialized, it worked as intended.&quot;</p>
<p>So you are saying this thing is called twice? The first time they eat the exception, the second time it works. SO, if things were different and the exception doesn&#8217;t get fired, that means they&#8217;ll do a BeginInvoke twice?</p>
<p>Maybe they are just getting lucky and it is always the case that the first try throws an exception, and the second succeeds. But I hate to program by luck.</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>