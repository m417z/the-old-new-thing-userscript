<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (21)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-458603">
				<div id="div-comment-458603" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Andy J</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070103-15/?p=28523#comment-458603">
			January 3, 2007 at 11:44 am</a>		</div>

		<p>Freshly shipped from America, it took no time at all to arrive :)</p>
<p>I love your writing style and the insights you provide into the development of windows is a fantastic inspiration.</p>
<p>Many thanks for a great read!</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-458633">
				<div id="div-comment-458633" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Mihai</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070103-15/?p=28523#comment-458633">
			January 3, 2007 at 12:41 pm</a>		</div>

		<p>&lt;&lt;the A version would be CP_ACP and the W version would be the imaginary 8-bit-Unicode version&gt;&gt;</p>
<p>Nope. The proposal was to have UTF-8 as ANSI code page, so the old functions would be enough. This is the way the UNIX/Linux world &#8220;adopted&#8221; Unicode.</p>
<p>And here are some thoughts about this: <a href="http://blogs.msdn.com/michkap/archive/2006/07/14/665714.aspx" target="_new" rel="nofollow">http://blogs.msdn.com/michkap/archive/2006/07/14/665714.aspx</a></p>
<div class="post">[<i>So what happens to the old code pages? I suspect people in Europe and Asia would be upset that all of their files suddenly became inaccessible. (How did UNIX/Linux handle Japanese file names prior to the adoption of Unicode?) -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-458643">
				<div id="div-comment-458643" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Resource Manager</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070103-15/?p=28523#comment-458643">
			January 3, 2007 at 1:42 pm</a>		</div>

		<p>We&#8217;re waiting for your 2006 prediction and if it came to be correct</p>
<p><a href="http://blogs.msdn.com/oldnewthing/archive/2006/05/23/604743.aspx" target=_new rel=nofollow rel="nofollow">http://blogs.msdn.com/oldnewthing/archive/2006/05/23/604743.aspx</a></p>
<div class=post>[<i>More proof that people can&#8217;t read. Read the prediction again. All the information you need is there. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-458653">
				<div id="div-comment-458653" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">J</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070103-15/?p=28523#comment-458653">
			January 3, 2007 at 2:19 pm</a>		</div>

		<p>Resource Manager:</p>
<p>Raymond buried his prediction in his recent post of random links, so many people probably missed it:</p>
<p><a href="http://blogs.msdn.com/oldnewthing/archive/2006/12/29/1379914.aspx" target=_new rel=nofollow rel="nofollow">http://blogs.msdn.com/oldnewthing/archive/2006/12/29/1379914.aspx</a></p>
<p>&#8220;Jim Allchin will retire on November 13, 2006.&#8221;</p>
<div class=post>[<i>I said I would reveal it at the end of the year, and it&#8217;s in the last posting of the year, and there&#8217;s even a link to the reveal at the end of the original posting. I don&#8217;t know what more people need&#8230; -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-458673">
				<div id="div-comment-458673" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">BryanK</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070103-15/?p=28523#comment-458673">
			January 3, 2007 at 3:07 pm</a>		</div>

		<p>Well, filenames in Linux aren&#8217;t exactly &quot;just a bunch of bytes&quot;. &nbsp;They&#8217;re really &quot;just a bunch of bytes, except not the zero byte, and not the byte whose ASCII encoding is forward-slash&quot;.</p>
<p>(This is vaguely similar to Windows&#8217; &quot;bunch of UTF-16 code points, except not the code point for forward slash, backslash, :, *, ?, or redirection symbols (&lt;, &gt;, |). &nbsp;It just has fewer restrictions, because the POSIX shells had better support for escaping their special characters, especially back in the days of win9x&#8217;s command.com. &nbsp;Though I&#8217;m not sure how you could escape a colon in $PATH in bash&#8230; &nbsp;hmm.)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-458683">
				<div id="div-comment-458683" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Mihai</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070103-15/?p=28523#comment-458683">
			January 3, 2007 at 3:35 pm</a>		</div>

		<p>&lt;&lt;Well, filenames in Linux aren&#8217;t exactly &quot;just a bunch of bytes&quot;. &nbsp;They&#8217;re really &quot;just a bunch of bytes, except not the zero byte, and not the byte whose ASCII encoding is forward-slash&quot;.&gt;&gt;</p>
<p>I know, but that was the simplified version :-)</p>
<p>There are full books on the UNIX file systems/NTFS :-)</p>
<p>Obviously, there are restrictions. And it is difficult to find out at what level the restriction is introduced (same as Windows).</p>
<p>It can be data structures stored on disk, or file system driver, high-level API, shell, or even network a protocol sharing the file system (SMB/NFS).</p>
<p>For instance the 256 MAX_PATH in Windows is not NTFS restriction, is API restriction (with a known work-around), the case-insensitive behavior is also not NTFS restriction, is the Win32 layer (you can enable the POSIX sub-system and get case-sensitive on top of NTFS). Even you mention escaping, but that is a shell thing, not a file-system one.</p>
<p>Anyway, ignoring the details, for Linux the final result (for the user) is bad: I create a file with a locale set in a certain way, then I set the locale differently and I see crap.</p>
<p>This is especially bad for multi-user systems sharing the same file system, but with different locale settings.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-458693">
				<div id="div-comment-458693" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.morganalley.com' rel='external nofollow' class='url'>Dewi Morgan</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070103-15/?p=28523#comment-458693">
			January 3, 2007 at 4:50 pm</a>		</div>

		<p>On any system where I create a file that I don&#8217;t have the system configured to display correctly, I&#8217;ll see nonsense. Some kind of display hints like BOMs in filenames might&#8217;ve been a cool idea, so you could specify the filename using the &#8220;right&#8221; letters in any codepage/encoding/directionality. But that would&#8217;ve been a compatibility nightmare.</p>
<p>Would be cool to be able to create or refer to a japanese filename as &#8220;[romanji]konnichiwa[ascii].txt&#8221;, though, rather than having to load up the Japanese IME. Wonder if that&#8217;s doable with a thirdparty app.</p>
<div class=post>[<i>If all you want to do is enter Japanese characters without installing a Japanese IME, you can write a web page that contains the characters you want and copy/paste them. I do that sometimes. But whether you can enter them or not, the file name will still display okay (assuming you have the necessary fonts installed and the program you&#8217;re using is Unicode-enabled). -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-458713">
				<div id="div-comment-458713" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Mihai</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070103-15/?p=28523#comment-458713">
			January 3, 2007 at 5:31 pm</a>		</div>

		<p>&lt;&lt;On any system where I create a file that I don&#8217;t have the system configured to display correctly, I&#8217;ll see nonsense&gt;&gt;</p>
<p>True. But on Windows you get squares for each Japanese character, because you don&#8217;t have the font. But a Unicode application can access it, not problem.</p>
<p>But on Linux, if you set the locales to use Shift-JIS, create a file using characters with the second byte 5C (backslash), like for instance Katakana So (U+30BD, 83 5C as Shift-JIS). Then set the locales to UTF-8 and you get an invalid UTF-8 string. Or set the locale to en_US.8895-1 and you get the second byte backslash, invalid in a file name.</p>
<p>There is a big difference between &quot;cannot display&quot; (win) and &quot;cannot use&quot; (linux).</p>
<p>And we have display problems in Win if support is not installed, while on Linux we have functionality problem, even with support installed (setting the locale in the environment does not install/uninstall support for a certain language).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-458623">
				<div id="div-comment-458623" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">JS</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070103-15/?p=28523#comment-458623">
			January 3, 2007 at 12:21 pm</a>		</div>

		<p>Just out of curiosity, back in the bronze age when the decision was made to make *W and *A versions of every API that may (even subtly) depend on character set&#8211;did anyone suggest encoding Unicode with an 8-byte code unit instead? &nbsp;I realize UTF-8 didn&#8217;t yet exist while Windows NT was being developed, but I wondered if Microsoft came close to inventing it themselves. &nbsp;I often thing it&#8217;d have been simpler than duplicating half the APIs. &nbsp;(I _still_ think it&#8217;d be nice to be able to make UTF-8 the &#8220;ANSI&#8221; code page character set, because then standard library functions that accept filenames as char * would be able to deal with Unicode filenames on Windows.)</p>
<p>OTOH, perhaps MS chose against creating an 8-bit Unicode transformation format to avoid the computational overhead, preferring the simplicity of one 16-bit code unit = one character. &nbsp;Then the Unicode standard changed and broke that assumption anyway&#8230;</p>
<div class="post">[<i>I fail to see how an 8-bit Unicode encoding would have avoided the A/W duplication. the A version would be CP_ACP and the W version would be the imaginary 8-bit-Unicode version. You still have two versions of the same function. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-458743">
				<div id="div-comment-458743" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Stu</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070103-15/?p=28523#comment-458743">
			January 3, 2007 at 9:31 pm</a>		</div>

		<p>It&#8217;s perfectly possible to have a Linux file name with backslash (0x5C) in it, its forward slash (0x2F) that&#8217;s not allowed because its the path seperator.</p>
<p>A quick test follows:</p>
<p>$ touch testfile\</p>
<p>$ ls test*</p>
<p>testfile</p>
<p>$</p>
<p>As far as I can tell, 0x2F is invalid in all filenames, regardless of locale. Does anyone have a counter-example?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-458663">
				<div id="div-comment-458663" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Mihai</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070103-15/?p=28523#comment-458663">
			January 3, 2007 at 2:51 pm</a>		</div>

		<p>&lt;&lt;So what happens to the old code pages? I suspect people in Europe and Asia would be upset that all of their files suddenly became inaccessible.&gt;&gt;</p>
<p>Yes, there are a lot of backward-compatibility issues to solve. I am not advocating UTF-8 as ANSI, I was just explaining the idea.</p>
<p>In theory most of the issues can be solved, with a lot of work, if this would be a solution to consider.</p>
<p>For instance: add an &quot;utf-8 bit&quot; to lcid, so you will have Japanese.932 and Japanese.UTF-8, etc. For text files, assume 932 if no bom is there.</p>
<p>I know, sounds simple, and I know it is not. Unix has a lot of problems from this, and I think it was a lazy solution, that is painfull in the long run.</p>
<p>&lt;&lt;How did UNIX/Linux handle Japanese file names prior to the adoption of Unicode?&gt;&gt;</p>
<p>Badly :-)</p>
<p>The file system is encoding-agnostic, the file names are &quot;just a bunch of bytes&quot;</p>
<p>The result is (even now) a mess:</p>
<p> &nbsp; 1. set LANG=ja-JP.Shift-JIS</p>
<p> &nbsp; 2. create a file with Japanese name</p>
<p> &nbsp; 3. set LANG=ja-JP.EUC-JP</p>
<p> &nbsp; 4. list the files, you see junk</p>
<p> &nbsp; 5. set LANG=ja-JP.UTF-8</p>
<p> &nbsp; 6. list the files, you see other junk</p>
<p>This &quot;agnostic&quot; approach in the kernel, OS, libraries, etc. make me consider the approach &quot;lazy.&quot; It does not solve much. The UTF-8 strings moves around without breaking the old C API (ok, that is the UTF-8 idea), but in many cases the functionality is crap.</p>
<p>I was just explaining what the idea of &quot;UTF-8 as ANSI&quot; wants. But I think it is flawed. Is easy to make UTf-8 work (easier than &nbsp;UTF-16), but it is more difficult than UTF-16 to make it *work right*</p>
<p>So, I think UTF-16 was the right thing to do, although painful for some.</p>
<p>The best thing (if you ask me), would have been creating and releasing MSLU way earlier.</p>
<p>When it was released, W95 was not officially supported anymore by MS, and W98 was close to the end of it&#8217;s life cycle.</p>
<p>So, release MSLU same time with Win 2000, make it clear for all developers &quot;this is the way, the strong advice is to go with MSLU&quot; and now we would have been in a better shape.</p>
<p>Well, too late for this :-)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-458763">
				<div id="div-comment-458763" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Stu</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070103-15/?p=28523#comment-458763">
			January 3, 2007 at 11:31 pm</a>		</div>

		<p>&quot;Or do you mean &quot;in the world of Windows-based software&quot; when you say &quot;in Windows&quot;? -Raymond&quot;</p>
<p>Well of course he does. Just like when people say &quot;in Linux&quot; they mean &quot;in an OS distribution based on the Linux kernel and GNU userspace, plus whatever else the distributor included/I installed&quot;, or when people say &quot;on my Mac&quot; they mean &quot;On my Apple-branded hardware, running some form of the Mac OS (probably X) and compatible applications&quot;.</p>
<p>&quot;If a Japanese vendor&#8217;s driver installer doesn&#8217;t use Unicode, well that&#8217;s the vendor&#8217;s fault isn&#8217;t it?&quot;</p>
<p>Not necissarily the drivers may have been in a .zip file- according to <a rel="nofollow" target="_new" href="http://blogs.msdn.com/michkap/archive/2005/05/10/416181.aspx" rel="nofollow">http://blogs.msdn.com/michkap/archive/2005/05/10/416181.aspx</a> .zip archives do not support unicode filenames, something the vendor may have been unaware of (since it &quot;just works&quot;, with no indication that it might fail in other locales).</p>
<p>Since Windows includes simple .zip file support, no third party software is responsible.</p>
<p>(The choice of .zip as the archive format is the problem, so it&#8217;s not MS either)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-458753">
				<div id="div-comment-458753" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Norman Diamond</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070103-15/?p=28523#comment-458753">
			January 3, 2007 at 9:42 pm</a>		</div>

		<p>&gt; So what happens to the old code pages? I</p>
<p>&gt; suspect people in Europe and Asia would be</p>
<p>&gt; upset that all of their files suddenly became</p>
<p>&gt; inaccessible.</p>
<p>That&#8217;s true. &nbsp;I wish that Unicode had been designed with the same disregard for ASCII as for other character sets, so that no one would be misled into thinking that certain compatibilities exist or that everyone can easily convert existing files.</p>
<p>&gt; (How did UNIX/Linux handle Japanese file</p>
<p>&gt; names prior to the adoption of Unicode?)</p>
<p>The same way as 8.3 filenames are assigned in current Windows systems, the same way as MS-DOS handled Japanese, etc. &nbsp;Most narrow characters were single bytes, most[*] wide characters were encoded as 256 * highbyte + lowbyte, strings of bytes were strings of bytes, editors had to take care not to put a linebreak in the middle of a wide character, etc. &nbsp;Most commercial Unix systems used EUC but some used Shift-JIS. &nbsp;Linux supports both but most distros defaulted to EUC out of the box. &nbsp;I think the default is more commonly UTF-8 now, but I haven&#8217;t had enough time to play with it in recent years.</p>
<p>[* In EUC, half-width katakana were also encoded as 256 * highbyte + lowbyte even though they were displayed as narrow characters.]</p>
<p>Wednesday, January 03, 2007 3:35 PM by Mihai</p>
<p>&gt; Anyway, ignoring the details, for Linux the</p>
<p>&gt; final result (for the user) is bad: I create</p>
<p>&gt; a file with a locale set in a certain way,</p>
<p>&gt; then I set the locale differently and I see</p>
<p>&gt; crap.</p>
<p>That is true. &nbsp;It is ALSO true in Windows, just not 100% of the time in Windows. &nbsp;With Windows 8.3 filenames it&#8217;s 100%; with Windows long filenames it &#8220;should&#8221; be 0% but it isn&#8217;t.</p>
<p>Last week on a US Windows XP SP2 computer I downloaded a driver from a Japanese vendor, unpacked it, and got garbage filenames. &nbsp;I had to go into Control Panel, set the system default code page to Japanese, reboot, unpack the file, go into Control Panel, set the system default code page to 1252, reboot, and install the unpacked driver. &nbsp;It worked. &nbsp;Some situations work properly without this nonsense, some don&#8217;t work even with this nonsense.</p>
<p>Wednesday, January 03, 2007 5:31 PM by Mihai </p>
<p>&gt; But on Linux, if you set the locales to use</p>
<p>&gt; Shift-JIS, create a file using characters</p>
<p>&gt; with the second byte 5C (backslash), like</p>
<p>&gt; for instance Katakana So (U+30BD, 83 5C</p>
<p>&gt; as Shift-JIS). [&#8230;] Or set the locale to</p>
<p>&gt; en_US.8895-1 and you get the second byte</p>
<p>&gt; backslash, invalid in a file name.</p>
<p>100% true. &nbsp;In fact you don&#8217;t need Linux in order to observe it.</p>
<div class="post">[<i>Windows XP is fully Unicode (or should be). If a Japanese vendor&#8217;s driver installer doesn&#8217;t use Unicode, well that&#8217;s the vendor&#8217;s fault isn&#8217;t it? Or do you mean &#8220;in the world of Windows-based software&#8221; when you say &#8220;in Windows&#8221;? -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-458793">
				<div id="div-comment-458793" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.fleeb.com' rel='external nofollow' class='url'>Trey Van Riper</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070103-15/?p=28523#comment-458793">
			January 4, 2007 at 8:18 am</a>		</div>

		<p>Heh&#8230; you say &#8216;Well of course he does,&#8217; but you perhaps forget that much of the content here involves details concerning the Windows operating system. &nbsp;I think Raymond&#8217;s request for clarification makes sense, given the context of his blog.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-458823">
				<div id="div-comment-458823" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">John Elliott</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070103-15/?p=28523#comment-458823">
			January 4, 2007 at 10:07 am</a>		</div>

		<p>How about another set of entry points for functions with variant US/UK spelling: IsDialogueMessage, GetSysColour and so on?</p>
<div class="post">[<i>Why stop at UK English? Why not also add entry points for French, German, Spanish&#8230; -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-458893">
				<div id="div-comment-458893" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">John Elliott</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070103-15/?p=28523#comment-458893">
			January 4, 2007 at 11:27 am</a>		</div>

		<p>I wasn&#8217;t being serious. If I had been, I&#8217;d have suggested doing the variant functions with the preprocessor, like SDL does (#define SDL_Colour SDL_Color).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-459053">
				<div id="div-comment-459053" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Norman Diamond</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070103-15/?p=28523#comment-459053">
			January 4, 2007 at 11:14 pm</a>		</div>

		<p>&gt; Windows XP is fully Unicode (or should be).</p>
<p>Each of the following examples is pretty small, but enough to show that it&#8217;s not fully there.</p>
<p>Last I saw, gethostname lacks a Unicode version in Windows XP just as much as it lacks a Unicode version in Windows CE.</p>
<p>I didn&#8217;t test whether Windows XP&#8217;s StringCchPrintf(&#8230; %S &#8230;) could convert ANSI strings to Unicode where Windows CE&#8217;s version couldn&#8217;t.</p>
<p>Though ActiveSync isn&#8217;t part of Windows XP, I think you can guess what company it comes from. &nbsp;One of your colleagues suggested running ActiveSync under AppLocale, which I intend to try when I have time.</p>
<p>Though Visual Studio 2005 and some tools that come with it aren&#8217;t part of Windows XP &#8230;.</p>
<p>Using Windows Explorer on Windows 2000 to copy some files from a share on a Windows 98 machine garbaged the filenames, but I haven&#8217;t experimented to see if Windows XP would get it right.</p>
<p>&gt; If a Japanese vendor&#8217;s driver installer</p>
<p>&gt; doesn&#8217;t use Unicode, well that&#8217;s the vendor&#8217;s</p>
<p>&gt; fault isn&#8217;t it?</p>
<p>Partly I agree. &nbsp;Just now I figured out that I can try running the installer (or unpacker) on a Windows 98 machine and if it works then the vendor neglected to use Unicode.</p>
<div class="post">[<i>Okay, perhaps I should have said &#8220;fully Unicode (where possible)&#8221; &#8211; host names are ASCII by definition (see RFC 952 and RFC 1123). Setting StringCchPrintf aside, the other stuff you mentioned aren&#8217;t Windows XP and therefore are irrelevant. I suspect you brought them up just to be annoying. Yet somehow I do not find this surprising. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-dean-harding odd alt thread-odd thread-alt depth-1" id="comment-459083">
				<div id="div-comment-459083" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Dean+Harding' rel='external nofollow' class='url'>Dean Harding</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070103-15/?p=28523#comment-459083">
			January 5, 2007 at 12:12 am</a>		</div>

		<blockquote><p>
  Last I saw, gethostname lacks a Unicode version in Windows XP
</p></blockquote>
<p>That&#8217;s because gethostname returns the DNS name of the computer, and DNS is ASCII-only (well, there are some extensions to the standard to allow &quot;international&quot; names, but they&#8217;re more a convention than an actual standard).</p>
<blockquote><p>
  Last week on a US Windows XP SP2 computer I downloaded a</p>
<p>  driver from a Japanese vendor, unpacked it, and got garbage filenames
</p></blockquote>
<p>My wife is Korean so I see lots of non-Unicode apps written assuming a Korean codepage and thus creating garbage file names.</p>
<p>I&#8217;ve gotten good at cut&#8217;n&#8217;pasting the names into a text file, opening them up in Firefox, forcing the &quot;Encoding&quot; option to Korean and cut&#8217;n&#8217;pasting the names back. Works like a charm for single files, though I imagine rather tedious for lots of files!</p>
<p>I also see lots of programs display &quot;???????.txt&quot; as the file name for files with Korean names (which are non-Unicode apps written assuming an English codepage, of course).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-459103">
				<div id="div-comment-459103" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Cheong</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070103-15/?p=28523#comment-459103">
			January 5, 2007 at 1:23 am</a>		</div>

		<p>[quote]As far as I can tell, 0x2F is invalid in all filenames, regardless of locale. Does anyone have a counter-example?[/quote]</p>
<p>I can confirm this.</p>
<p>When I use &quot;RAR for Linux&quot; to extract those files in ext3fs, they always fail, while I can successfully extract them in Windows. So I guess it&#8217;s caused by the restriction you mentioned.(Although I didn&#8217;t exactly checked what those names look like&#8230;)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-459113">
				<div id="div-comment-459113" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Norman Diamond</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070103-15/?p=28523#comment-459113">
			January 5, 2007 at 1:56 am</a>		</div>

		<p>&gt; host names are ASCII by definition (see RFC</p>
<p>&gt; 952 and RFC 1123)</p>
<p>Hmm. &nbsp;Any idea why Windows Mobile 5 didn&#8217;t display a warning when I used its settings screens to set its machine name? &nbsp;I seem to recall ordinary Windows systems also not giving warnings when their computer names are set to the same as the persons&#8217; names who usually use them.</p>
<p>&gt; Setting StringCchPrintf aside, the other</p>
<p>&gt; stuff you mentioned aren&#8217;t Windows XP</p>
<p>As far as I can tell by now, the problem which one of your colleagues and I thought was in ActiveSync is actually a problem in Windows Explorer instead.</p>
<p>&gt;&gt;&gt; Or do you mean &#8220;in the world of Windows-</p>
<p>&gt;&gt;&gt; based software&#8221; when you say &#8220;in Windows&#8221;?</p>
<p>Or is it one country of Windows-based software? &nbsp;It still includes the world&#8217;s most profitable maker of Windows software. &nbsp;I understand that most divisions of your employer don&#8217;t take your advice, but your customers still get pounded by them.</p>
<p>&gt;&gt;&gt;&gt;&gt; How did UNIX/Linux handle Japanese file</p>
<p>&gt;&gt;&gt;&gt;&gt; names prior to the adoption of Unicode?</p>
<p>Linux can handle Japanese filenames by whatever method you wish. &nbsp;You don&#8217;t have to use other people&#8217;s file system drivers. &nbsp;Or did you mean the world of Linux-based software?</p>
<p>Well, look. &nbsp;I don&#8217;t really enjoy this tit-for-tat. &nbsp;Windows and Linux and everything else are still worse than they should be. &nbsp;Windows is not an exception to this, OK?</p>
<p>Friday, January 05, 2007 12:12 AM by Dean Harding</p>
<p>&gt; That&#8217;s because gethostname returns the DNS</p>
<p>&gt; name of the computer</p>
<p>Hmm. &nbsp;I knew Pocket PCs were DHCP servers in a very limited context, but I didn&#8217;t know they were DNS servers. &nbsp;No wait, how come their network settings screens allow setting the IP4 addresses of external name servers the same way ordinary Windows systems do?</p>
<div class="post">[<i>&#8220;I don&#8217;t really enjoy this tit-for-tat.&#8221; At last we agree on something. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-459143">
				<div id="div-comment-459143" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Norman Diamond</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070103-15/?p=28523#comment-459143">
			January 5, 2007 at 5:05 am</a>		</div>

		<p>&gt;&gt; &#8220;I don&#8217;t really enjoy this tit-for-tat.&#8221;</p>
<p>&gt; At last we agree on something.</p>
<p>Yes. &nbsp;I&#8217;m glad to see your answer on that.</p>
<p>&gt;&gt; Windows and Linux and everything else are</p>
<p>&gt;&gt; still worse than they should be. &nbsp;Windows is</p>
<p>&gt;&gt; not an exception to this, OK?</p>
<p>&gt;</p>
<p>&gt;</p>
<p>Of course you were not (are not) obligated to agree, but I predict<br />
there will be more occasions to show that Windows is not an exception<br />
to this.</p>
<div class="post">[<i>Great, we agree on that too. Why do you feel compelled to harp on this point at every<br />
opportunity? It got tiring after the first month. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>