<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (30)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-874243">
				<div id="div-comment-874243" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">laonianren</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101115-00/?p=12283#comment-874243">
			November 15, 2010 at 7:12 am</a>		</div>

		<p>&quot;How do you position the cursor on a redirected output stream?&quot;</p>
<p>ANSI.SYS! &nbsp;You&#39;ll have to compile as 16-bit though. &nbsp;(However I haven&#39;t tried this since NT4, so I don&#39;t know if it still works.)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-874253">
				<div id="div-comment-874253" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">R. Bemrose</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101115-00/?p=12283#comment-874253">
			November 15, 2010 at 7:13 am</a>		</div>

		<p>The only time I remember seeing console windows have a command-line is in a UNIX-like environment that is running the screen console multiplexer.</p>
<p>It makes sense in that context, as it allows you to have multiple shells running simultaneously, and the status bar was used to list the names for each console (screen lets you name the consoles it starts) so you could tell which console was at which console number.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-874263">
				<div id="div-comment-874263" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">R. Bemrose</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101115-00/?p=12283#comment-874263">
			November 15, 2010 at 7:13 am</a>		</div>

		<p>The only time I remember seeing console windows have a status-line is in a UNIX-like environment that is running the screen console multiplexer.</p>
<p>It makes sense in that context, as it allows you to have multiple shells running simultaneously, and the status bar was used to list the names for each console (screen lets you name the consoles it starts) so you could tell which console was at which console number.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-nathan_works odd alt thread-odd thread-alt depth-1" id="comment-874273">
				<div id="div-comment-874273" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/nathan_works' rel='external nofollow' class='url'>nathan_works</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101115-00/?p=12283#comment-874273">
			November 15, 2010 at 7:17 am</a>		</div>

		<p>There&#39;s also the CMD title function as well.. Who says that can&#39;t be used for status as well ? (Since you&#39;d see the title in the task bar &#8230;)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-874283">
				<div id="div-comment-874283" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">anonmous</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101115-00/?p=12283#comment-874283">
			November 15, 2010 at 7:29 am</a>		</div>

		<p>s/progarm/program/ (then feel free to delete this comment)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-874293">
				<div id="div-comment-874293" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Henke37</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101115-00/?p=12283#comment-874293">
			November 15, 2010 at 7:38 am</a>		</div>

		<p>I think you went a bit too far&#8230;</p>
<p>But while on the topic of console applications, I just want to say that MS has made the only text mode editor worth using. Screw emacs and vi, edit.com is the best one.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-874303">
				<div id="div-comment-874303" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Vilx-</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101115-00/?p=12283#comment-874303">
			November 15, 2010 at 7:42 am</a>		</div>

		<p>I&#39;m going to make a wild guess and suggest that what the person really wanted was to add a real windows-y status bar to his console. And as long as we&#39;re on the subject &#8211; can you add menus and other controls too? How about hosting a console window as a control within your own app?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-874313">
				<div id="div-comment-874313" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Dan Bugglin</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101115-00/?p=12283#comment-874313">
			November 15, 2010 at 7:53 am</a>		</div>

		<p>Vilx: Thanks to redirecting stdin and stdout, you can host a bunch of apps in any window you want.</p>
<p>Of course the caveat is that stdout will only deliver output in complete lines; the command prompt will not be streamed until the user types a command! &nbsp;Catch 22.</p>
<p>There is a DLL used in the Console2 project (google it, it&#39;s on sourceforge) that can hide and read the full console contents of console windows and mirror them elsewhere. &nbsp;Not sure how it works though.</p>
<p>The CONIN$ and CONOUT$ special files mentioned in this post might also be useful for the same purpose. &nbsp;However the aforementioned DLL works with any console program while I assume CONIN$ and CONOUT$ are only useful for the current program.</p>
<p>I&#39;m guessing DLL injection would have to come into play for whatever solution you choose&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-874323">
				<div id="div-comment-874323" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101115-00/?p=12283#comment-874323">
			November 15, 2010 at 8:11 am</a>		</div>

		<p>@Dan: Weird, cygwin ssh can host cmd.exe as a child process on pseudo-tty just fine (cygwin psuedo ttys are implemented as UNIX domain sockets, which are in turn implemented as TCP/IP sockets connected to localhost).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-874333">
				<div id="div-comment-874333" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">James Risto</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101115-00/?p=12283#comment-874333">
			November 15, 2010 at 8:23 am</a>		</div>

		<p>Thanks for answering my question! And yes, I add a character “informational line” to the bottom of my console apps. Yes the console API is a different philosophy than a Windows message pump, but regardless provides tons of flexibility for such apps.</p>
<p>However, I feel like a foolish heckler whom now the spotlight has moved to. Like the comments above, I think that indeed I was thinking of a “real” windows-y status bar, that we could manipulate just like the TITLE command to change the title.</p>
<p>Of course, what seems like solid gold at the time fades into a mild amusement when looked at through the beer goggles of time.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-874343">
				<div id="div-comment-874343" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101115-00/?p=12283#comment-874343">
			November 15, 2010 at 8:44 am</a>		</div>

		<p>@Vlix: not unless you&#39;re willing to reimplement the frame. csrss won&#39;t let you screw around with its memory space (can you say privilege escalation attack? Yes you can).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-874353">
				<div id="div-comment-874353" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Tom</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101115-00/?p=12283#comment-874353">
			November 15, 2010 at 8:44 am</a>		</div>

		<p>@Dan Bugglin: Actually, Console2 does exactly what you say &#8212; it injects a DLL into the running process, and then polls CONIN$ and CONOUT$ at specified intervals.</p>
<p>As you might imagine, this doesn&#39;t work when a program allocates more than one console. &nbsp;Fortunately, most programs don&#39;t do this. &nbsp;But any program that does it will hang Console2. &nbsp;As far as I&#39;m aware, there isn&#39;t a 100% reliable way to write a terminal app for Windows console-mode applications.</p>
<p>@Joshua: See &quot;Using Cygwin effectively with Windows&quot; in the Cygwin documentation for a discussion of the problems that Cygwin encounters. &nbsp;cmd.exe works because it pipes gracefully. &nbsp;Any program that&#39;ll hang Console2 will likely also cause problems with Cygwin.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-874363">
				<div id="div-comment-874363" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Andy</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101115-00/?p=12283#comment-874363">
			November 15, 2010 at 8:51 am</a>		</div>

		<p>@Joshua: Unfortunately cmd.exe doesn&#39;t work terribly well in Cygwin pty-based terminals, because it relies on the console window for its command line editing and history facilities, whereas Unix shells such as bash do that themselves. Also, Cygwin&#39;s ptys are not based on sockets, but on Windows pipes. Hence native Windows programs get to see pipes where they expect a console when running in a terminal based on Cygwin ptys. That often causes problems.</p>
<p>On a related note: Raymond, any chance of the protocol between csrss.exe and Windows 7&#39;s conhost.exe being published, to allow people to write replacements for conhost.exe with a nicer UI than the default? Console2 has a good go at the latter, but has to employ somewhat imperfect trickery with a hidden console window.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-874373">
				<div id="div-comment-874373" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Andy</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101115-00/?p=12283#comment-874373">
			November 15, 2010 at 8:56 am</a>		</div>

		<p>@Tom: I don&#39;t think Console2 does any DLL injection. It creates a hidden console window and uses WriteConsoleInput() to put keyboard and mouse events into the console&#39;s input buffer and ReadConsoleOutput() to get at its screen buffer. One problem is that there&#39;s no notification of screen buffer changes, so Console2 has to poll it regularly.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-874383">
				<div id="div-comment-874383" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Bush</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101115-00/?p=12283#comment-874383">
			November 15, 2010 at 11:01 am</a>		</div>

		<p>When will the Suggestion Box open again ?</p>
<p>We need more microsoft employees blogging and answering and helping to answer questions :)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-874393">
				<div id="div-comment-874393" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">.Net</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101115-00/?p=12283#comment-874393">
			November 15, 2010 at 11:47 am</a>		</div>

		<p>I do not know how it does, but the .Net console library handles these tasks very well. It can get/set cursor position, change colors, set window size, and so on.</p>
<p>And it does it in a very intuitive way. For example it you want a square dimensioned console:</p>
<p>System.Console.WindowHeight = System.Console.WindowWidth;</p>
<p>Maybe it&#39;s time to disassemble and learn some more stuff.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-874413">
				<div id="div-comment-874413" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Back door</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101115-00/?p=12283#comment-874413">
			November 15, 2010 at 2:14 pm</a>		</div>

		<p>I&#39;ve actually wondered whether <a rel="nofollow" target="_new" href="http://msdn.microsoft.com/en-us/library/ms971319.aspx" rel="nofollow">msdn.microsoft.com/&#8230;/ms971319.aspx</a> could be used instead of polling the console.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-874433">
				<div id="div-comment-874433" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Brian Reiter</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101115-00/?p=12283#comment-874433">
			November 15, 2010 at 3:21 pm</a>		</div>

		<p>It seems clear that many people do not realize that it is CSRSS.EXE which automatically creates console windows not CMD.EXE or powershell.exe, et al. Windows detects that an application needs a console window to host it and creates one.</p>
<p>Since CSRSS.EXE runs in the security context of SYSTEM normal users shouldn&#39;t have access to mess with them. They have to be protected which means that you can&#39;t be allowed to inject code into the CSRSS.EXE process to do stuff like attach arbitrary menus and whatnot to their chrome. Note that this is why they aren&#39;t themed in Widnows XP and why the scrollbar looks old school in Vista.</p>
<p>Starting with Windows 7, CSRSS.EXE creates conhost.exe processes to host the console window in the same security context as the program it is hosting which removes the possibility of an escalation of privilege through the console window.</p>
<p>@Andy brings up an interesting possibility that since conhost.exe is decoupled from CSRSS.EXE, it could potentially be replaced with something that resized its buffers on resize and had a line-oriented copy. That would be very cool.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-yuhong-bao even thread-even depth-1" id="comment-874443">
				<div id="div-comment-874443" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Yuhong+Bao' rel='external nofollow' class='url'>Yuhong Bao</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101115-00/?p=12283#comment-874443">
			November 15, 2010 at 8:06 pm</a>		</div>

		<p>&quot;Raymond, any chance of the protocol between kernel32.dll and Windows 7&#39;s conhost.exe being published, to allow people to write replacements for conhost.exe with a nicer UI than the default?&quot;</p>
<p>Not to mention handy for emulating terminals with a telnet or ssh server.</p>
<p>BTW, FTFY from cmd.exe to kernel32.dll which is what actually do the IPC to conhost.exe.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-yuhong-bao odd alt thread-odd thread-alt depth-1" id="comment-874453">
				<div id="div-comment-874453" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Yuhong+Bao' rel='external nofollow' class='url'>Yuhong Bao</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101115-00/?p=12283#comment-874453">
			November 15, 2010 at 8:10 pm</a>		</div>

		<p>OS/2 had DETACH that allow running background programs that could pop up on top of the current session using hotkeys. Originated in Multitasking DOS 4.0 that ended up never being released outside I think France.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-874473">
				<div id="div-comment-874473" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Worf</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101115-00/?p=12283#comment-874473">
			November 15, 2010 at 11:23 pm</a>		</div>

		<p>This post has another good use as well &#8211; how to write fancy Windows conaole programs. I always wondered how it was done. Thanks, Raymond!</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-874493">
				<div id="div-comment-874493" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Justin G</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101115-00/?p=12283#comment-874493">
			November 16, 2010 at 2:18 am</a>		</div>

		<p>It&#39;s nice to see how it&#39;s done properly!</p>
<p>I have written a couple of &quot;fancy Windows console programs&quot; myself, they work fine but are very amateurish so I won&#39;t post the link ;).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-874503">
				<div id="div-comment-874503" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Andy</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101115-00/?p=12283#comment-874503">
			November 16, 2010 at 2:18 am</a>		</div>

		<p>@Back door: Good point. I haven&#39;t looked into the Console Accessibility API.</p>
<p>@yuhong2: I didn&#39;t say &#39;cmd.exe&#39; but &#39;csrss.exe&#39;.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-874513">
				<div id="div-comment-874513" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Neil</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101115-00/?p=12283#comment-874513">
			November 16, 2010 at 3:12 am</a>		</div>

		<p>I&#39;ve not used Console2 but I was asked to rewrite a batch file not to use start because apparently Console2 isn&#39;t aware of the new window. (I wanted to use start because I didn&#39;t want the &quot;Terminate batch job?&quot; message if you hit Ctrl+C. Is there another way around that?)</p>
<p>I&#39;ve always wanted a good example of how to use ReadConsoleInput, in particular waiting for someone to press any key. (But I also want to be able to read by lines before and afterwards.)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-874533">
				<div id="div-comment-874533" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Vilx-</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101115-00/?p=12283#comment-874533">
			November 16, 2010 at 7:15 am</a>		</div>

		<p>Interesting. I didn&#39;t know about the csrss.exe and conhost.exe. I wonder &#8211; what were the reasons for a convoluted solution like this? Why not simply spawn another thread that would handle the console window in the same process?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-874583">
				<div id="div-comment-874583" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Koro</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101115-00/?p=12283#comment-874583">
			November 16, 2010 at 7:50 am</a>		</div>

		<p>&quot;Why not simply spawn another thread that would handle the console window in the same process?&quot;</p>
<p>Because multiple processes can share the same console, and the console only disappears once all the processes sharing it have exited.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-874623">
				<div id="div-comment-874623" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">R. Bemrose</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101115-00/?p=12283#comment-874623">
			November 16, 2010 at 8:16 am</a>		</div>

		<p>Whoops, I only meant to comment once earlier&#8230; the transmission didn&#39;t appear to send before my network connection died, and before I submitted again, I fixed a braino.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-874703">
				<div id="div-comment-874703" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Evan</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101115-00/?p=12283#comment-874703">
			November 16, 2010 at 11:52 am</a>		</div>

		<p>@Reiter: &quot;since conhost.exe is decoupled from CSRSS.EXE, it could potentially be replaced with something that resized its buffers on resize and had a line-oriented copy. That would be very cool.&quot;</p>
<p>Welcome&#8230; to the Windows of the FUTURE! Or, you know, the Unix of the mid-80s.</p>
<p>I&#39;m by no means a Linux fanboy (I can rant about various dumb things it does for a long time too), but I don&#39;t understand how the Windows terminal window is still as terrible as it is. I had some hope when Powershell came out that they might revamp that too, but no, you still have to use it with that god-awful UI.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-874753">
				<div id="div-comment-874753" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">James Sutherland</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101115-00/?p=12283#comment-874753">
			November 16, 2010 at 1:50 pm</a>		</div>

		<p>Interesting &#8211; I would have taken the question as referring to the way you could put escape sequences in your PROMPT which would display information at the top or bottom of your screen. The Windows &#39;title&#39; command could be used in a similar way, presumably, except you wouldn&#39;t get automatic updates of things like the current working directory that way.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-875033">
				<div id="div-comment-875033" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Tim</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101115-00/?p=12283#comment-875033">
			November 17, 2010 at 7:45 pm</a>		</div>

		<p>@Back door: the accessibility API has its own set of issues when dealing with the console. Because the console events are initiated from csrss.exe (i.e., not the application process that is writing to the console) the events are received asynchronously. This means that the contents of the console could have changed again before the event can be processed (which may or not be a problem, depending on what you&#39;re trying to do with it). Or at least that&#39;s the way it is on XP.</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>