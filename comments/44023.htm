<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (14)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-1152123">
				<div id="div-comment-1152123" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">VinDuv</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140919-00/?p=44023#comment-1152123">
			September 19, 2014 at 7:08 am</a>		</div>

		<p>I&rsquo;d guess the error is only raised sometimes because most of the time Cancel does nothing (because the operation is already completed), and does not uses the reason string.</p>
<div class="post">[<em>RPC does not lazy-marshal parameters. (How would it do that? Set a read breakpoint on the memory where the string <span style="text-decoration:underline;">would have been</span> to see if anybody tries to access it?) -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1152133">
				<div id="div-comment-1152133" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Adam Rosenfield</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140919-00/?p=44023#comment-1152133">
			September 19, 2014 at 7:30 am</a>		</div>

		<p>I&#39;m guessing that it only raises RPC_X_NULL_REF_POINTER when marshalling to a remote object (the R in RPC) in another process or machine; if the COM object is local to the process, then it doesn&#39;t raise that error?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1152153">
				<div id="div-comment-1152153" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140919-00/?p=44023#comment-1152153">
			September 19, 2014 at 8:14 am</a>		</div>

		<p>[Set a read breakpoint on the memory where the string would have been to see if anybody tries to access it?]</p>
<p>Come to think of it, with all the address space in 64 bit, this no longer sounds absurd. It&#39;s still probably too slow.</p>
<div class="post">[<em>Not only would it be slow, it would create deadlocks and reentrancy bugs. Who knew that reading a byte from memory would block the thread, send a message to another process, and pump messages waiting for the message reply? You would need the additional rules &quot;You may not hold any locks while accessing memory passed as a parameter&quot; and &quot;Assume that accessing memory passed as a parameter can cause other methods of your object (or other objects) to be called&quot; which are kind of hard to work with. -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1152163">
				<div id="div-comment-1152163" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Michael Kohne</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140919-00/?p=44023#comment-1152163">
			September 19, 2014 at 9:07 am</a>		</div>

		<p>On the MIDL compiler warning &#8211; I don&#39;t know the userbase, but I bet you could get away with making it a warning. The sort of people who turn on warning-as-error would probably be happy to know about this.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1152183">
				<div id="div-comment-1152183" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">SI</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140919-00/?p=44023#comment-1152183">
			September 19, 2014 at 9:49 am</a>		</div>

		<p>And speaking of warnings, the warning about nonOLE compliant parameters in IDispatch interfaces never seems to turn up until you set warnlevel to max, and then the build log is completely filled with warnings about the function name and parameter lengths of all the default interfaces.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1152173">
				<div id="div-comment-1152173" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">SI</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140919-00/?p=44023#comment-1152173">
			September 19, 2014 at 9:21 am</a>		</div>

		<p>It already is a MIDL warning.</p>
<p>1&gt;&#8230;.include&lt;FILE&gt;.idl(205): warning MIDL2400: for oleautomation, optional parameters should be VARIANT or VARIANT * : [optional] [ Parameter &#39;example&#39; of Procedure &#39;LoadSettings&#39; ( Interface &#39;IExample&#39; ) ]</p>
<p>1&gt;&#8230;.include&lt;FILE&gt;.idl(214): warning MIDL2400: for oleautomation, optional parameters should be VARIANT or VARIANT * : [optional] [ Parameter &#39;example&#39; of Procedure &#39;SaveSettings&#39; ( Interface &#39;IExample&#39;) ]</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1152233">
				<div id="div-comment-1152233" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Anonymous Coward</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140919-00/?p=44023#comment-1152233">
			September 20, 2014 at 8:21 am</a>		</div>

		<p>&gt; Even if you just made it a warning, that wouldn&#39;t help because a lot of people treat warnings as errors.</p>
<p>That&#39;s like not changing the taskbar&#39;s shade of blue because some programs rely on the exact pixel values to determine how many programs are running. People who treat warnings as errors should already expect to get new errors each time they change their compiler.</p>
<div class="post">[<em>Tell that to the people who <a href="http://www.gamedev.net/topic/465386-solved---vc-wont-stop-bitching/">complain about stupid warnings</a>. -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-alexcohn odd alt thread-odd thread-alt depth-1" id="comment-1152243">
				<div id="div-comment-1152243" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Alex+Cohn' rel='external nofollow' class='url'>Alex Cohn</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140919-00/?p=44023#comment-1152243">
			September 21, 2014 at 2:32 am</a>		</div>

		<p>Larry Osterman [explains](<a rel="nofollow" target="_new" href="http://blogs.msdn.com/b/larryosterman/archive/2004/05/26/142401.aspx">blogs.msdn.com/&#8230;/142401.aspx</a>) that this RPC_X_NULL_REF_POINTER happens when the COM object is created in a different apartment, or the COM object goes out-of-proc. I don&#39;t think I could answer this without internet search.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-cheong even thread-even depth-1" id="comment-1152253">
				<div id="div-comment-1152253" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/cheong00' rel='external nofollow' class='url'>cheong00</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140919-00/?p=44023#comment-1152253">
			September 21, 2014 at 6:58 pm</a>		</div>

		<p>&gt; Even if you just made it a warning, that wouldn&#39;t help because a lot of people treat warnings as errors.</p>
<p>Yes. All warnings have to be treated somehow&#8230; either fix it if it&#39;s really creating potential bugs (like the warning caused by comparing string to object with == ), or mark it with suppression directives and comment to explain why it&#39;s not a problem and you want to keep it &quot;as is&quot;.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1152283">
				<div id="div-comment-1152283" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Anon</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140919-00/?p=44023#comment-1152283">
			September 22, 2014 at 12:12 pm</a>		</div>

		<p>Not fixing problems with the compiler because bad code might break is like not installing a fire suppression system in your munitions warehouse because it might accidentally go off when someone smokes under it.</p>
<div class="post">[<em>You&#39;d be surprised how many people say your product sucks because it broke bad code. -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1152303">
				<div id="div-comment-1152303" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joker_vD</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140919-00/?p=44023#comment-1152303">
			September 22, 2014 at 1:33 pm</a>		</div>

		<p>@Anon: &quot;Hey, we installed this new fancy (and power hungry machinery) in your house, and suddenly the wiring melted and started fire! Even though it shouldn&#39;t have happened did the previous electricians done their job properly! So it&#39;s their fault, not mine, blame them&quot;.</p>
<p>Nope, you broke it, and the fact that the environment was not perfect is not an excuse. It&#39;s never perfect. It&#39;s rarely even good.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1152583">
				<div id="div-comment-1152583" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140919-00/?p=44023#comment-1152583">
			September 24, 2014 at 1:59 pm</a>		</div>

		<p>[Tell that to the people who complain about stupid warnings. -Raymond]</p>
<p>By linking to that particular example you defeated your argument.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1152613">
				<div id="div-comment-1152613" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Marc K</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140919-00/?p=44023#comment-1152613">
			September 25, 2014 at 6:15 am</a>		</div>

		<p>&quot;By linking to that particular example you defeated your argument.&quot;</p>
<p>Yes, please don&#39;t put in any backcompat hacks to support programmers like the one cited in that link.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1152953">
				<div id="div-comment-1152953" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"> John Doe</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140919-00/?p=44023#comment-1152953">
			September 26, 2014 at 10:41 am</a>		</div>

		<p>@Alex Cohn, perhaps you couldn&#39;t, if you&#39;re not familiar with COM. &nbsp;But it&#39;s very basic COM: if it&#39;s in the same apartment, or if you have a raw object pointer (e.g. free-threaded marshaling objects in the same process), marshaling won&#39;t happen.</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>