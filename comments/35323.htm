<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (12)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-282663">
				<div id="div-comment-282663" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">gnobal</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050614-18/?p=35323#comment-282663">
			June 14, 2005 at 9:25 am</a>		</div>

		<p>A little typo in:<br />
<br />&quot;if (pnmv-&gt;item.iItem &lt;; 0 ||&quot;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-282703">
				<div id="div-comment-282703" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">macbirdie</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050614-18/?p=35323#comment-282703">
			June 14, 2005 at 6:18 pm</a>		</div>

		<p>I&#8217;m pretty new to Win32 programming (a little bit late but what the heck) and I&#8217;m surprised with amounts of possibilities of making Windows GUI software blazingly fast with a little bit of work and knowledge. What I&#8217;m not surprised with is that there aren&#8217;t many software developers who can or want to take advantage of these nice toys &#8211; I think it&#8217;s worth it anyway.</p>
<p>I&#8217;d love to see some examples of all those callbacks list views, tree views etc. used The Truly Right Way (TM). Any good sites maybe? Thanks in advance!</p>
<p>And thank you Raymond for your really great, informative blog.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-282713">
				<div id="div-comment-282713" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">sriram</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050614-18/?p=35323#comment-282713">
			June 14, 2005 at 7:46 pm</a>		</div>

		<p>We are still looping through all ~20,000 entries, and instead of inserting the actual text, just inserting item.pszText = LPSTR_TEXTCALLBACK, which is why we don&#8217;t see a significant speed-up I assume?  I would have thought this might even be slower than the first method, with the added overhead of callbacks etc&#8230;</p>
<p>I&#8217;m curious as to whether the source of the delay is overhead due to sending 20,000 messages, or whether the slowdown is caused by adding an item to the listview.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-282723">
				<div id="div-comment-282723" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.luminance.org/' rel='external nofollow' class='url'>Janus</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050614-18/?p=35323#comment-282723">
			June 14, 2005 at 8:03 pm</a>		</div>

		<p>snram: The delay is probably a bit of both, but I imagine most of the delay is from adding the items.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-282743">
				<div id="div-comment-282743" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.acelogix.com' rel='external nofollow' class='url'>Hari</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050614-18/?p=35323#comment-282743">
			June 14, 2005 at 10:19 pm</a>		</div>

		<p>This is not a virtual list yet ; when virtual list view is used, there is no need to insert any items, and it will be lightning fast. I guess thats what RC is upto.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-282753">
				<div id="div-comment-282753" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Kevin Idzi</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050614-18/?p=35323#comment-282753">
			June 14, 2005 at 10:57 pm</a>		</div>

		<p>I&#8217;ve worked with this a lot at my prior company. simply adding the item kills performance. And removing the items is just as bad.  The way that I hacked it, and this was using VB6, so it was a bit uglier.. was to add items as needed. </p>
<p>I ended up faking out the scrollbar so that I&#8217;d add a few pages at a time to the listview with their data, and then I&#8217;d adjust the scrollbar so that the scrollbar sizing was correct.  Then you adjust if the user clicks pagedown, down, etc. and when they click on the scrollbar.  Then if a different dataset is bound to the listview, I would prune the &#8216;extra&#8217; list items if there were too many, or else I&#8217;d leave it as is and grow the listview as the data is paged down.</p>
<p>If a user clicks on a column to sort, then I go ahead and load all of the data as normal (it&#8217;s automatically cached) and do the sorting.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-282693">
				<div id="div-comment-282693" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">B. Y.</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050614-18/?p=35323#comment-282693">
			June 14, 2005 at 4:26 pm</a>		</div>

		<p>Looks like it starts to free from the 2nd most recently allocated block:</p>
<p>  StringPool::~StringPool()<br />
<br />  {<br />
<br />   HEADER* phdr = m_phdrCur;<br />
<br />   while (phdr) {<br />
<br />    HEADER hdr = *phdr;<br />
<br />    VirtualFree(hdr.m_phdrPrev, hdr.m_cb, MEM_RELEASE);<br />
<br />    phdr = hdr.m_phdrPrev;<br />
<br />   }<br />
<br />  }</p>
<p>how about:</p>
<p>  StringPool::~StringPool()<br />
<br />  {<br />
<br />   while (m_phdrCur) {<br />
<br />    HEADER*prev = phdr-&gt;m_phdrPrev;<br />
<br />    VirtualFree(m_phdrCur, m_phdrCur-&gt;m_cb, MEM_RELEASE);<br />
<br />    m_phdrCur=prev;<br />
<br />   }<br />
<br />  }</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-282763">
				<div id="div-comment-282763" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://chuchuva.com/' rel='external nofollow' class='url'>Pavel Chuchuva</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050614-18/?p=35323#comment-282763">
			June 14, 2005 at 11:37 pm</a>		</div>

		<p>Probably LVS_OWNERDATA style is needed. You set number of items first but do not insert them. This should improve performance.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-282783">
				<div id="div-comment-282783" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Anonymous</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050614-18/?p=35323#comment-282783">
			June 15, 2005 at 2:52 am</a>		</div>

		<p>Off-topic: &quot;We&#8217;ll do better next time.&quot; seems to be the mantra of Windows in particular and of (all) software makers in general :) Sorry for being a dirty bastard, I just couldn&#8217;t hold it.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-282793">
				<div id="div-comment-282793" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blogs.msdn.com/oldnewthing/archive/2005/06/15/429338.aspx' rel='external nofollow' class='url'>The Old New Thing</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050614-18/?p=35323#comment-282793">
			June 15, 2005 at 9:02 am</a>		</div>

		<p>Owner-data listviews let you take over data management from the listview.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-283013">
				<div id="div-comment-283013" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">mfink</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050614-18/?p=35323#comment-283013">
			June 16, 2005 at 1:48 am</a>		</div>

		<p>Hi,<br />
<br />I used to call</p>
<p>  ::SendMessage(m_hwndLV, WM_SETREDRAW, (WPARAM)FALSE, 0);</p>
<p>before inserting all the items, and the same call but with TRUE as wParam parameter, followed by a call</p>
<p>  ::RedrawWindow(m_hwndLV, NULL, NULL, RDW_INVALIDATE);</p>
<p>to redraw the window. Inserting items then dropped from ~10 seconds to about 1 second. But if that would have used, it would make not that much difference, would it? Or are there any problems using WM_SETREDRAW?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-283033">
				<div id="div-comment-283033" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Kevin Idzi</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050614-18/?p=35323#comment-283033">
			June 16, 2005 at 8:54 am</a>		</div>

		<p>It is true that the ownerdata is the best, but when using VB, to keep it simple and pluggable, sometimes it is best to use the listview as-is and just &#8216;attach&#8217; the functionality to an existing listview, instead of having to actually create it. </p>
<p>As far as the redraw function, that does not fix the loading speed issue, and it causes horrible refreshing in some cases.  The listview does a much &#8216;better&#8217; job at refreshing itself by using the dirty areas, you just have to work with it to make it be efficient.</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>