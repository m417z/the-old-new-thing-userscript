<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (39)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-217673">
				<div id="div-comment-217673" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.drizzle.com/~lettvin/moblog.html' rel='external nofollow' class='url'>Moishe Lettvin</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041015-00/?p=37553#comment-217673">
			October 15, 2004 at 7:19 am</a>		</div>

		<blockquote><p>
  The context menu that appears for taskbar<br />
  <br />&gt;notification icons. If the context menu<br />
  <br />&gt;appeared immediately upon the first click,<br />
  <br />&gt;then the second click would dismiss the<br />
  <br />&gt;context menu, leaving the user confused. </p>
<p>This behavior bugs the heck out of me.  I always think right-clicking on these icons does something different than left-clicking (it doesn&#8217;t, as far as I can tell, but the lag makes it feel weird).  Now that I know the reason for this behavior, couldn&#8217;t the context-menu dismissal code just /not/ dismiss the menu if the second click happens within the double-click timeout?  I realize there is probably some weirdness with mouse capture going on but it doesn&#8217;t seem to me (naively) as an insurmountable problem.</p>
<p>The whole &quot;lag before anything happens&quot; seems like a bad user experience because some (me, for instance) think something&#8217;s broken in that lag and immediately try something else.
</p></blockquote>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-217683">
				<div id="div-comment-217683" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Matt C. Wilson</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041015-00/?p=37553#comment-217683">
			October 15, 2004 at 7:26 am</a>		</div>

		<p>I totally agree with Moishe.  Although, there are certainly some notification icons that exhibit different behavior for left or right click.  The Safely Remove Hardware icon, for example, gives you the list of removeable hardware for left click, and the wizard for right click.</p>
<p>Now, I loathe a wizard when a single menu click will do.  But I hate the left click delay!  Why couldn&#8217;t it do as Moishe suggests?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-217693">
				<div id="div-comment-217693" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Rob</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041015-00/?p=37553#comment-217693">
			October 15, 2004 at 7:29 am</a>		</div>

		<p>Raymond, in the main text of your post you say to use GetTickCount(), but I guess you mean GetDoubleClickTime()</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-217703">
				<div id="div-comment-217703" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Chris H</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041015-00/?p=37553#comment-217703">
			October 15, 2004 at 7:30 am</a>		</div>

		<p>&quot;The XP style Start button ignores the second click. Otherwise, when people double-click the Start button, the first click would open the Start menu and the second click would dismiss it!&quot;</p>
<p>Huh? One click opens my Start menu, and a double click dismisses it again, on XP. Is this not supposed to happen?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-217713">
				<div id="div-comment-217713" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.setcomputing.com/blog/' rel='external nofollow' class='url'>Salman Quazi</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041015-00/?p=37553#comment-217713">
			October 15, 2004 at 8:04 am</a>		</div>

		<p>&quot;The XP style Start button ignores the second click. Otherwise, when people double-click the Start button, the first click would open the Start menu and the second click would dismiss it!&quot; </p>
<p>Windows 2000 seems to act this way. I don&#8217;t have access to Windows XP at this moment. But certainly seems like a useful feature.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-217723">
				<div id="div-comment-217723" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://bonzoesc.net' rel='external nofollow' class='url'>BonzoESC</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041015-00/?p=37553#comment-217723">
			October 15, 2004 at 8:19 am</a>		</div>

		<p>&quot;Huh? One click opens my Start menu, and a double click dismisses it again, on XP. Is this not supposed to happen?&quot;</p>
<p>Depends, are you clicking once to bring it up and then double-clicking?  That&#8217;ll send it away.</p>
<p>The notification area icon for Outlook 2003 is different &#8211; if I single click on it (brings up menu), click on a blank space in the taskbar, and then double-click the icon, Outlook pops up instead of giving me the menu.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-217733">
				<div id="div-comment-217733" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.divil.co.uk/net' rel='external nofollow' class='url'>Tim Dawson</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041015-00/?p=37553#comment-217733">
			October 15, 2004 at 8:22 am</a>		</div>

		<p>Delay showing context menus is bad. This is because just prior to showing a context menu over a notification icon, you must activate your hidden window. This way, the menu will correctly disappear when you click away from it on some other window.</p>
<p>MSN Messenger is an example of this. Click once with the <em>left</em> button, and it shows the menu after a short delay. Go to some other window during this delay, and the menu will still show, but you won&#8217;t be able to dismiss it without clicking inside it then out again.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-217743">
				<div id="div-comment-217743" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://weblogs.asp.net/oldnewthing/' rel='external nofollow' class='url'>Raymond Chen</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041015-00/?p=37553#comment-217743">
			October 15, 2004 at 8:29 am</a>		</div>

		<p>If you&#8217;re going to display a menu or otherwise do something that messes with focus, then certainly check that you still have focus when the timeout expires &#8211; to avoid the problem you describe with Messenger.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-217763">
				<div id="div-comment-217763" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.bigbeardy.co.uk' rel='external nofollow' class='url'>Mat Hall</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041015-00/?p=37553#comment-217763">
			October 15, 2004 at 9:07 am</a>		</div>

		<p>&#8230;And I&#8217;ve just discovered a new strange behaviour &#8212; for some reason single clicking on the clock seems to cause the tool-tip for the left-most icon to appear.  I&#8217;ve never noticed it before, so it may be something odd that&#8217;s happened due to the recent excessive clicking in the NA&#8230;</p>
<p>[ I think I might as well give up work for the day &#8212; sitting at my desk randomly clicking on icons is not really an efficient use of a Friday afternoon! ]</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-217773">
				<div id="div-comment-217773" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.livejournal.com/users/merle_/' rel='external nofollow' class='url'>Merle</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041015-00/?p=37553#comment-217773">
			October 15, 2004 at 9:23 am</a>		</div>

		<p>Mat: it does something similar for me under 2kPro.  If I single click on the clock, it puts an &#8216;active&#8217; border (dashed line) around the first icon in the system tray.  You can then arrow around to move the border from one to another.  Basically, the single click set focus on the tray, but the clock refuses to grab it.  Hitting enter then opens that one.</p>
<p>The tooltip might be an artifact of the particular app?  Mine is volume control.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-217783">
				<div id="div-comment-217783" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://mikedimmick.blogspot.com' rel='external nofollow' class='url'>Mike Dimmick</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041015-00/?p=37553#comment-217783">
			October 15, 2004 at 9:26 am</a>		</div>

		<p>The user experience for notification icons is down to the application itself. We have a server application written in VB whose UI is typically just a notification icon. The traditional way of handling an icon click (and I&#8217;ve just noticed that this app only responds to right-click, not left-click) is to call TrackPopupMenuEx using TPM_RETURNCMD to make it run a modal loop. However, doing this in our server stops the events arriving from the Winsock control! As a result, we create a modeless popup menu, but then it has the same problem as Messenger &#8211; it isn&#8217;t closed by clicking away from it. So there&#8217;s a Cancel option on the menu.</p>
<p>Yep, I&#8217;m as disgusted as you are, but until we get the actual operations on a separate thread (and a separate process!) from the UI, that&#8217;s the best I can do.</p>
<p>Kerbtray, from the Windows Server 2003 Resource Kit, does the same thing (we&#8217;re having a few problems with machine passwords at present, so I&#8217;m running it to check the tickets).</p>
<p>Another problem is that, when an icon is clicked, the messages you get back don&#8217;t contain the location of the pointer at the time of the click. There may be a delay between the event and the time that the window procedure is called. The code typically creates the context menu at the current cursor location &#8211; which may be a long way from the icon. I&#8217;m not sure if GetMessagePos would help here.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-217793">
				<div id="div-comment-217793" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.bigbeardy.co.uk' rel='external nofollow' class='url'>Mat Hall</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041015-00/?p=37553#comment-217793">
			October 15, 2004 at 9:31 am</a>		</div>

		<p>&quot;The tooltip might be an artifact of the particular app? Mine is volume control.&quot;</p>
<p>I thought that, but in the interests of &quot;science&quot; I did futher experimentation: initially it was the network icon tooltip (which is probably how I noticed it as it&#8217;s a pretty big tooltip), so I started a few more apps that sit in the NA and tried again; no matter what app was on the far left, its tooltip pops up when I click on the clock.  I&#8217;ll try and remember to play next time I restart and see what happens&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-217803">
				<div id="div-comment-217803" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">tsrblke</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041015-00/?p=37553#comment-217803">
			October 15, 2004 at 9:42 am</a>		</div>

		<p>An intersting side note that I&#8217;ve seen of this.  I use a touchpad quite often with my laptop and sometimes singleclicks followed by my finger moving to the pad registers as a double click.  (I know it&#8217;s a double click as opposed to 2 single clicks because I&#8217;ve seen this action open shortcuts placed on my standard configuration desktop.)  However when I go to the Quick Launch bar and open IE using that button, quite often I am presented with 2 IE windows.  Does the Quicklauch bar not contain the same delay written into the other systems.  (I&#8217;m on XP BTW)  If so, any thoughts as to why not?.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-217813">
				<div id="div-comment-217813" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://weblogs.asp.net/oldnewthing' rel='external nofollow' class='url'>Raymond Chen</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041015-00/?p=37553#comment-217813">
			October 15, 2004 at 9:44 am</a>		</div>

		<p>It appears that QuickLaunch does not have debouncing code. Debouncing is comparatively rare. The purpose of this article was in part to raise awareness of it.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-217823">
				<div id="div-comment-217823" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">anon</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041015-00/?p=37553#comment-217823">
			October 15, 2004 at 10:24 am</a>		</div>

		<p>I dunno the XP start menu works exactly as described here.  Assuming that your using the XP version of the menu and don&#8217;t have it in &#8216;classic mode&#8217;.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-217833">
				<div id="div-comment-217833" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Brian</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041015-00/?p=37553#comment-217833">
			October 15, 2004 at 10:29 am</a>		</div>

		<p>On the Start Menu in XP issue, double-clicking the Start button was dismissing my Start Menu too until I realized that the OP said the Windows XP STYLE start menu. If you have it set to Classic mode, the menu will be dismissed when you double-click it. If you have it set to &quot;non-classic&quot;, the second click is ignored.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-217843">
				<div id="div-comment-217843" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Brian</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041015-00/?p=37553#comment-217843">
			October 15, 2004 at 10:30 am</a>		</div>

		<p>oops, what anon said</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-217853">
				<div id="div-comment-217853" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">tsrblke</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041015-00/?p=37553#comment-217853">
			October 15, 2004 at 11:09 am</a>		</div>

		<p>It&#8217;s interesting that the &quot;debouncing&quot; would only apply to a certian style of the start menu in XP.  I keep mine set to Classic just because I like the look, but I&#8217;m prone to Double clicking alot.  I guess it&#8217;s time I weigh my options.  Thank for raising my awarness.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-217873">
				<div id="div-comment-217873" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.valhallalegends.com' rel='external nofollow' class='url'>Arta</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041015-00/?p=37553#comment-217873">
			October 15, 2004 at 11:26 am</a>		</div>

		<p>Bad tab orders drive me insane. It should be a requirement for the windows logo that software be tested without a mouse :)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-217753">
				<div id="div-comment-217753" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.bigbeardy.co.uk' rel='external nofollow' class='url'>Mat Hall</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041015-00/?p=37553#comment-217753">
			October 15, 2004 at 9:00 am</a>		</div>

		<p>&quot;Huh? One click opens my Start menu, and a double click dismisses it again, on XP. Is this not supposed to happen?&quot;</p>
<p>I just tried it about 50 times (it&#8217;s a slow day at the office), and sometimes it works the way Raymond described, and other times it opens and closes.  I didn&#8217;t keep score, but I&#8217;d say it&#8217;s a ratio of about 1:3 in favour of open-close&#8230;</p>
<p>WRT to notification area icons, there doesn&#8217;t seem to be an agreed way of handling the various clicks, even across different MSFT products.  For example, a single left click on the MSN Messenger displays the menu (after the brief delay), but a single left click on the Network Status icon performs the default menu action (displaying the status window).  If MSFT can&#8217;t agree on what to do, what hope is there for the rest of us?</p>
<p>Further experimentation (still a slow day at wrok!) reveals that amongst the icons in my NA* some do nothing at all on a single left click, others display the menu (some with a delay, some not), and yet others perform some action (normally the default menu action, but not always).  A final possibility, such as with the clock, as that double-clickng performs a &quot;default&quot; action, even though the context menu doesn&#8217;t appear to indicate that anything is default).</p>
<p>It&#8217;s only when I sit back and play with things like this that I begin to appreciate how &quot;n00bs&quot; can get so frustrated with PCs.  Just when you think you&#8217;ve got the hang of it, something comes along and behaves in an unexpected way&#8230;</p>
<p>* 22 of them &#8212; I don&#8217;t &quot;hide inactive icons&quot; as I find that Sod&#8217;s Law takes hold and just before I WANT to use one of them it decides it&#8217;s not needed and hides, and I like to keep an eye on what things are up to.  Has the icon gone because the app has quit, or is it just hidden?  As I have plenty of screen real estate (2 21&quot; monitors running at 1920&#215;1440) it doesn&#8217;t bother me, but people always tend to comment on it&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-217863">
				<div id="div-comment-217863" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Wyatt Wong</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041015-00/?p=37553#comment-217863">
			October 15, 2004 at 11:10 am</a>		</div>

		<p>I love the following paragraph from the &lt;a href=&quot;<a target="_new" href="http://msdn.microsoft.com/library/en-us/winui/winui/windowsuserinterface/userinput/mouseinput/aboutmouseinput.asp&quot;&gt;About" rel="nofollow">http://msdn.microsoft.com/library/en-us/winui/winui/windowsuserinterface/userinput/mouseinput/aboutmouseinput.asp&quot;&gt;About</a> Mouse Input&lt;/a&gt; article in MSDN Library</p>
<p>&#8212;cut&#8212;<br />
<br />The mouse is an important, but optional, user-input device for applications. A well-written application should include a mouse interface, but it should not depend solely on the mouse for acquiring user input. The application should provide full keyboard support as well.<br />
<br />&#8212;cut&#8212;</p>
<p>A vendor use Microsoft Access to write an application for my company to use and his application relies ***heavily*** on mouse input such that it is almost (if not impossible) to use the keyboard to run the application at all. Even worse, most of the dialog boxes have inconsistent keyboard tab order, you can go to item 1 in the first tab, and then you will find the next tab goes to item 3, or item 4 instead of item 2.</p>
<p>It is really a big nusiance !</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-217953">
				<div id="div-comment-217953" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">asdf</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041015-00/?p=37553#comment-217953">
			October 15, 2004 at 7:58 pm</a>		</div>

		<p>Raymond: what&#8217;s your stance on SM_C(X|Y)DOUBLECLK in regards to people treating it as a radius:</p>
<p>const int w = GetSystemMetrics(SM_CXDOUBLECLK);<br />
<br />const int h = GetSystemMetrics(SM_CYDOUBLECLK);<br />
<br />const bool doubleClicked =<br />
<br />    labs(oldp.x &#8211; newp.x) &lt; w/2 &amp;&amp;<br />
<br />    labs(oldp.y &#8211; newp.y) &lt; h/2;</p>
<p>I really think it should be like:</p>
<p>const bool doubleClicked =<br />
<br />    newp.x &gt;= oldp.x &#8211; w/2 &amp;&amp;<br />
<br />    newp.x &lt; (oldp.x &#8211; w/2)+w &amp;&amp;<br />
<br />    newp.y &gt;= oldp.y &#8211; h/2 &amp;&amp;<br />
<br />    newp.y &lt; (oldp.y &#8211; h/2)+h;</p>
<p>because it&#8217;s &quot;more correct&quot; and if GetSystemMetrics returns 1 it will actually work unlike the other one.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-217883">
				<div id="div-comment-217883" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.valhallalegends.com/skywing' rel='external nofollow' class='url'>Skywing</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041015-00/?p=37553#comment-217883">
			October 15, 2004 at 3:07 pm</a>		</div>

		<p>Mike: I ran into the same problem for a program of mine.  After spending quite some time trying to get a modeless menu to work properly with notify icon clicks (and failing; that annoying focus problem just won&#8217;t go away), I finally just gave up and made a new thread for it (ugh).   Some menus just don&#8217;t want to be modeless.</p>
<p>Speaking of that, menus attached to windows don&#8217;t like being made modeless very much either.  They tend to get their focus stolen from them (but don&#8217;t &quot;realize&quot; it), resulting in some weird condition that makes them impossible to operate without using the mouse (until you dismiss the menu).  I&#8217;ve also seen window menus get opened *twice* when made modeless, on occasion.</p>
<p>I was able to eliminate most all of the modal things about my UI except the menus.  Oh well.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-218013">
				<div id="div-comment-218013" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.bigbeardy.co.uk' rel='external nofollow' class='url'>Mat Hall</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041015-00/?p=37553#comment-218013">
			October 16, 2004 at 2:52 am</a>		</div>

		<p>&quot;Assuming that your using the XP version of the menu and don&#8217;t have it in &#8216;classic mode&#8217;.&quot;</p>
<p>That would explain it, although it now raises the question of why it only applies to the new (and slightly irritating) style of Start Menu.  I suppose it does more accurately emulate the behaviour of the classic menu, but I think that&#8217;s probably taking backwards compatability too far! :)  (And it doesn&#8217;t explain why occasionally it seems to debounce even in classic mode&#8230;  Then again, who cares?)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-218023">
				<div id="div-comment-218023" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Jonathan</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041015-00/?p=37553#comment-218023">
			October 16, 2004 at 3:43 am</a>		</div>

		<p>Even more annoying that the MSN Messenger menu is the NA volume icon &#8211; it does the same, but the master-volume-and-Mute things comes up where the mouse pointer is AFTER the delay. You also have to click in it, then out of it to dismiss it.</p>
<p>It also seems that:<br />
<br />Single-click &#8211; brings the master-volume-and-Mute UI<br />
<br />Double-click &#8211; brings the master-volume-and-Mute UI<br />
<br />Triple-click (?) &#8211; brings the full &quot;Volume Control&quot; app.<br />
<br />Right-click &#8211; brings a context menu, the default option is Volume Control.<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-218133">
				<div id="div-comment-218133" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Michael J Smith</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041015-00/?p=37553#comment-218133">
			October 16, 2004 at 6:58 pm</a>		</div>

		<p>Possibly displaying my ignorance here, but is it really OK to just wait GetDoubleClickTime() before deciding it is not a doubleclick?</p>
<p>On a heavily loaded system, delivery of messages can be delayed.  If the WM_LBUTTONDBLCLK message is delayed more than the WM_LBUTTONDOWN message, then the time would expire and the program would incorrectly interpret the action as a single click, before subsequently receiving a double click message.</p>
<p>Is there anything in the internals of the message handling to prevent this?</p>
<p></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-218193">
				<div id="div-comment-218193" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Amit Schreiber</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041015-00/?p=37553#comment-218193">
			October 17, 2004 at 12:09 am</a>		</div>

		<ol>
<li>I noticed that when you use Windows with &quot;Single-click to open an item&quot; (in Windows Explorer&#8217;s general options), there is a delay from the moment you click until the click action is actually done, and that delay equals the double-click time set in the mouse option. This annoyance caused me to stop using the &quot;single-click to open an item&quot; option.
<p>2. As you said, many users double-click everything. It&#8217;s a shame that Explorer&#8217;s toolbars don&#8217;t take that into consideration. If only I had a nickel for every time a friend of mine says: &quot;Why did 2 Internet Explorer windows just opened?&quot;</li>
</ol>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-218213">
				<div id="div-comment-218213" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Paul Dougherty</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041015-00/?p=37553#comment-218213">
			October 17, 2004 at 12:25 am</a>		</div>

		<p>Here is one of my favorite Windows bugs:</p>
<p>(from MSKB)<br />
<br />&quot;Double-Clicking the Mouse Button Acts as a Single Click<br />
<br />Article ID: 170510 (Q170510)</p>
<p>SYMPTOMS<br />
<br />Double-clicking the mouse in your application behaves as if you clicked the mouse button once. This behavior has been observed in the following applications running in Windows NT 4.0 Service Pack 3: • Microsoft Visio Professional 4.x.</p>
<p>CAUSE<br />
<br />Windows NT 4.0 Service Pack 3 adds a code path where mouse movement does not update the timestamp for a WM_MOUSEMOVE event. This behavior can potentially occur with any application that relies on WM_MOUSEMOVE<br />
<br />timestamps. For example, Visio uses a custom event handler to detect double-clicks rather than checking for the WM_LBUTTONDBLCLK message.&quot;</p>
<p>My comment: Why on earth was Visio even doing that at all!  The native Windows LBUTTONDBLCLK support was not good enough for them? Every feature introduces the risk of a bug.</p>
<p></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-218243">
				<div id="div-comment-218243" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">asdf</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041015-00/?p=37553#comment-218243">
			October 17, 2004 at 5:22 am</a>		</div>

		<p>Michael: See the documentation for GetMessage. Timer messages have a lower priority than the mouse messages so Raymond&#8217;s code is safe.</p>
<p>Paul: They probably felt the native code didn&#8217;t offer fine grained enough control. Not really sure what the specific Visio problem was, but it&#8217;s easier to write your own double-clicking code than dealing with the double click messages if you&#8217;re writing your own widgets not backed by an HWND (mozilla/IE/word/Qt), want to support things like triple-clicking in the same manner as double-clicking (any rich text-like widget), or want to support some of the fancy double-clicking behavior like the listview control does. In the Visio case, I&#8217;d imagine it does the double clicking code for the shape editor. The reason for that (for a really lame edge case example) is if you have a large click threshold and a large double click timeout value, you could click on one of the shapes, move the mouse over and click on another shape and it would register as a double click on the second shape so you need to keep track of the first shape that was clicked on. This doesn&#8217;t help against clicking on a shape, moving the mouse outside of the window, clicking on something, and moving the mouse back in and clicking on the original shape (CS_DBLCLKS is smart enough to handle cases of the mouse moving outside the window though).</p>
<p>The default double clicking stuff (arguably) botches some things if you&#8217;re not careful. If you single click, hold down the ctrl key and click again, it will get a double-click message. If you&#8217;re writing your own listbox code and aren&#8217;t careful about these sort of things it would register as double clicking on an item instead of selecting and then deselecting it (all listbox/listview controls I&#8217;ve come across gets this wrong).</p>
<p>I&#8217;m glad to see apps writing their own high level widget code instead of using the stuff already available, it helps find bugs in the implementation of the winapi that otherwise wouldn&#8217;t be found as the Visio case demonstrated.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-218283">
				<div id="div-comment-218283" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://weblogs.asp.net/oldnewthing/' rel='external nofollow' class='url'>Raymond Chen</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041015-00/?p=37553#comment-218283">
			October 17, 2004 at 9:06 am</a>		</div>

		<p>Amit: Tweak UI lets you disable the double-click-debouncing of single-click-mode.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-218393">
				<div id="div-comment-218393" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Norman Diamond</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041015-00/?p=37553#comment-218393">
			October 17, 2004 at 7:12 pm</a>		</div>

		<p>I&#8217;ve seen other cases of double-clicks being treated as single-clicks or being ignored entirely, and single-clicks being ignored entirely.  Usually the application involved is Outlook Express.  I don&#8217;t know what it&#8217;s doing at the time to lose clicks.</p>
<p>Sometimes a right-click on a notification icon brings up two context menus.  If the user clicks entries in both context menus then they both go away after taking actions.  If the user clicks an entry in one context menu (as surely intended) then that menu goes away after taking action, but whether the other one goes away or not seems to be random.  Usually the offending application is the power management icon.  Sometimes both context menus relate to power management, but sometimes one is the taskbar&#8217;s main properties.  Windows XP SP2 hasn&#8217;t stopped it but fortunately does seem to have stopped blue screens from following some of these occurences.</p>
<p>Te &quot;About Mouse Input&quot; page, linked to from the base note, is not found in the MSDN Library&#8217;s table of contents.  No wonder its information is not well known.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-218433">
				<div id="div-comment-218433" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Tom Mason</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041015-00/?p=37553#comment-218433">
			October 18, 2004 at 12:59 am</a>		</div>

		<p>I think this delayed mode of catching accidental double clicks should be turned off. If users don&#8217;t learn that they don&#8217;t need to double click then they will continue to double click. As it is, even in single click mode, it looks as if a double click is required to run a program, because that is what works. If a user accidently lauched two instances of an application by double clicking then Windows could pop up a message or tip to say something about not needing to double click, and give an option to turn on double click mode. Users are like children. If you never tell them off they&#8217;ll never learn.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-218683">
				<div id="div-comment-218683" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.accidentalscientist.com' rel='external nofollow' class='url'>Simon Cooke [exMSFT]</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041015-00/?p=37553#comment-218683">
			October 18, 2004 at 11:30 am</a>		</div>

		<p>By the way, speaking of debouncing, Office&#8217;s toolbars could really do with some. Right new they don&#8217;t seem to do any, and as a result if you are using a tablet PC pen to (say) delete emails using the toolbar, sometimes it&#8217;ll erroneously delete 3 or 4 of them at once.</p>
<p>Kind of frustrating!</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-219513">
				<div id="div-comment-219513" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.yoraispage.com/articles/20041020.asp' rel='external nofollow' class='url'>Yorai's Page</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041015-00/?p=37553#comment-219513">
			October 20, 2004 at 12:06 pm</a>		</div>

		<p>The &quot;clairvoyant&quot; mouse input model is getting pretty common these days. I&#8217;ve implemented this model for the in-place editors in Planners, and even though Windows has no internal support for it, it is implemented by parts of the Windows user interfac&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-224843">
				<div id="div-comment-224843" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Tony Nelson</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041015-00/?p=37553#comment-224843">
			November 11, 2004 at 8:14 pm</a>		</div>

		<p>On 10/15/2004 7:58 PM, asdf asked &quot;Raymond: what&#8217;s your stance on SM_C(X|Y)DOUBLECLK in regards to people treating it as a radius&quot;.</p>
<p>I think asdf meant &quot;diameter&quot; not &quot;radius&quot;.</p>
<p>FWIW, I liked to treat it as an actual radius of a circle in MacOS programming.  My version might be something like:</p>
<p>const int dx = oldp.x &#8211; newp.x;<br />
<br />const int dy = oldp.y &#8211; newp.y;<br />
<br />const bool doubleClicked = (dx*dx + dy*dy &lt; w*h);</p>
<p>Though to be correct, it should be an ellipse (I hope I haven&#8217;t blown the math):</p>
<p>const int w2 = w*w;<br />
<br />const int h2 = h*h;<br />
<br />const bool doubleClicked = (h2*dx*dx + w2*dy*dy &lt; w2*h2);</p>
<p>If the mouse has moved a giant distance there might be a problem with overflow.  This may be able to happen with optical scan mice.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-235763">
				<div id="div-comment-235763" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blogs.msdn.com/jonathanh/articles/327194.aspx' rel='external nofollow' class='url'>Jonathan Hardwick</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041015-00/?p=37553#comment-235763">
			December 20, 2004 at 12:10 am</a>		</div>

		
		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-586253">
				<div id="div-comment-586253" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.zuschlogin.com/?p=33' rel='external nofollow' class='url'>Zusch Login &raquo; Blog Archive &raquo; Of Magic and Machines</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041015-00/?p=37553#comment-586253">
			January 6, 2008 at 9:15 pm</a>		</div>

		<p>PingBack from <a rel="nofollow" target="_new" href="http://www.zuschlogin.com/?p=33" rel="nofollow">http://www.zuschlogin.com/?p=33</a></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-661073">
				<div id="div-comment-661073" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.redmountainsw.com/wordpress/archives/clairvoyant-interaction' rel='external nofollow' class='url'>Clairvoyant Interaction | Chui&#8217;s counterpoint</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041015-00/?p=37553#comment-661073">
			August 24, 2008 at 12:41 pm</a>		</div>

		<p>PingBack from <a rel="nofollow" target="_new" href="http://www.redmountainsw.com/wordpress/archives/clairvoyant-interaction" rel="nofollow">http://www.redmountainsw.com/wordpress/archives/clairvoyant-interaction</a></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-732253">
				<div id="div-comment-732253" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blogs.msdn.com/oldnewthing/archive/2009/04/30/9577283.aspx' rel='external nofollow' class='url'>The Old New Thing</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041015-00/?p=37553#comment-732253">
			May 2, 2009 at 12:26 pm</a>		</div>

		<p>There&#8217;s a logic behind it, although not everybody follows it.</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>