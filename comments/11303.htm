<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (8)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-899093">
				<div id="div-comment-899093" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110304-00/?p=11303#comment-899093">
			March 4, 2011 at 8:47 am</a>		</div>

		<p>Async signals are some nasty hairball any way you cut it.</p>
<p>There was this old program back in the day that used CLI() and STI() functions to control signal dispatch (named after assembly instructions they didn&#39;t actually use).</p>
<p>The general idea is still the same, set a flag in the signal handler that is checked periodically. On Windows, this also opens the hairball that is CancelPendingIO that Raymond&#39;s been blogging about a lot recently.</p>
<p>Coincidence? I think not.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-899113">
				<div id="div-comment-899113" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Gabe</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110304-00/?p=11303#comment-899113">
			March 4, 2011 at 10:00 am</a>		</div>

		<p>Should the words &quot;Take-away&quot; be a link to <a href="http://blogs.msdn.com/b/oldnewthing/archive/2010/11/30/10097857.aspx" target="_new" rel="nofollow">blogs.msdn.com/&#8230;/10097857.aspx</a></p>
<div class="post">[<em>Sure why not. -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-899143">
				<div id="div-comment-899143" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Anthony Wieser</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110304-00/?p=11303#comment-899143">
			March 4, 2011 at 10:10 am</a>		</div>

		<p>Wow, I thought English was my native language, but I can&#39;t for the life of me figure out the documentation on this. OK, I&#39;m an old timer, and I see this wasn&#39;t introduced until windows 2000.</p>
<p>I used to think that SendMessage sent a message to the windowproc (and if cross process waited to get in, presumably by waiting on a sync object of some sort), and PostMessage just added it to the message queue.</p>
<p>The documentation <a target="_new" href="http://msdn.microsoft.com/en-us/library/ms644951(v=VS.85).aspx" rel="nofollow">msdn.microsoft.com/&#8230;/ms644951(v=VS.85).aspx</a></p>
<p>says &quot;Sends the specified message to a window or windows. &nbsp;It calls the window procedure for the specified window and returns immediately&quot;</p>
<p>Surely calling the window procedure means entering WndProc, so that can&#39;t be what&#39;s going on.</p>
<p>Does it actually add the message to some internal queue of messages, that GetMessage/PeekMessage delivers on the next call?</p>
<div class="post">[<i>Understanding the message pump is one of the things I consider a prerequisite to reading Friday entries. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-899173">
				<div id="div-comment-899173" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110304-00/?p=11303#comment-899173">
			March 4, 2011 at 11:15 am</a>		</div>

		<p>@Anthony:</p>
<p>SendMessage dispatches internally to the same thread but does a synchronous (your thread is blocked) postmessage-like operation for cross-thread (and therefore cross-process).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-899193">
				<div id="div-comment-899193" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Henning Makholm</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110304-00/?p=11303#comment-899193">
			March 4, 2011 at 11:36 am</a>		</div>

		<p>Anthony: I think it is reasonably clear, given what Raymond explained not too long ago about how cross-thread SendMessage works. You will recall that sent messages are always handled in the window&#39;s owning thread. If SendMessage is called from a different thread/process, it blocks until the receiving thread has processed the message and produced a return value. Evidently there&#39;s an internal queue involved here, but it is separate from from the one that is pumped by the GetMessage loop &#8212; except that a thread that is blocked in GetMessage will handle sent messages transparently without returning. Now, SendMessageCallback enters a message into the same internal queue, but does not bother to wait for the message to be processed before it returns. Instead a user-specified callback will be called when the return value from the window is ready.</p>
<p>If anything, this may be easier to understand for old-timers who remember the bad old days when all windows (in all applications!) shared a single thread. Back then, the distinction between SendMessage and PostMessage was clear and simple, and all the subsequent complexity can be understood as an attempt to retrofit old interfaces to a multi-threaded world without breaking too much existing code. But how easy is it for a newcomer these days to grasp the essential difference between PostMessage and SendNotifyMessage, let alone understand why one would want to have both ones available?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-899233">
				<div id="div-comment-899233" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Henke37</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110304-00/?p=11303#comment-899233">
			March 4, 2011 at 1:39 pm</a>		</div>

		<p>Some thoughts about SendMessage. Assume a message pump that calls IsDialogMessage. Now ask yourself the question, is SendMessage compatible with this? What if SendMessage was used to send a message that IsDialogMessage should have processed?</p>
<p>The question becomes easy when you consider what IsDialogMessage does, it sends the message to the right function. I propose that SendMessage will end up running the same function, because it is the window procedure for the dialog box.</p>
<div class="post">[<i>Um, no. See exhaustive discussion of dialog box message loops in my book or in the archives. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-899263">
				<div id="div-comment-899263" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Anthony Wieser</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110304-00/?p=11303#comment-899263">
			March 5, 2011 at 1:02 am</a>		</div>

		<p>Looking some more, I found Raymond&#39;s 2004 post:</p>
<p><a rel="nofollow" target="_new" href="http://blogs.msdn.com/b/oldnewthing/archive/2004/11/19/266664.aspx" rel="nofollow">blogs.msdn.com/&#8230;/266664.aspx</a></p>
<p>&quot;The various ways of sending a message&quot;</p>
<p>Following the documentation from there to</p>
<p><a rel="nofollow" target="_new" href="http://msdn.microsoft.com/en-us/library/ms644953" rel="nofollow">msdn.microsoft.com/&#8230;/ms644953</a></p>
<p>&quot;SendNotifyMessage Function&quot;</p>
<p>I see that the behaviour on the same thread is specified to some degree, just missing from the docs of SendMessageCallback.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-899673">
				<div id="div-comment-899673" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Arno</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110304-00/?p=11303#comment-899673">
			March 9, 2011 at 7:15 am</a>		</div>

		<p>A cause of frequent grief for us are messages dispatched inside PeekMessage called from the OLE modal loop that is running while dispatching COM calls. In general, an application making such calls is <em>not</em> in a &quot;stable reentrant state&quot;. It is currently calling a component after all. WM_CANCELMODE for example can arrive at any time from this modal loop, and IMessageFilter is powerless preventing it. Raymond, do you have any suggestion how this should be handled?</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>