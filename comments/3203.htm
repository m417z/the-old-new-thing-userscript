<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (15)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-1078253">
				<div id="div-comment-1078253" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Adam Rosenfield</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130918-00/?p=3203#comment-1078253">
			September 18, 2013 at 7:53 am</a>		</div>

		<p>Never heard about SubtractRect before. &nbsp;I feel like if I ever needed that sort of functionality, I&#39;d just code it up myself instead of looking for a library function to do it.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-maurits odd alt thread-odd thread-alt depth-1" id="comment-1078273">
				<div id="div-comment-1078273" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Maurits+%5BMSFT%5D' rel='external nofollow' class='url'>Maurits [MSFT]</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130918-00/?p=3203#comment-1078273">
			September 18, 2013 at 9:00 am</a>		</div>

		<p>Pictures are very helpful when explaining these things:</p>
<p><a rel="nofollow" target="_new" href="http://msdn.microsoft.com/en-us/library/windows/desktop/dd162903(v=vs.85).aspx">msdn.microsoft.com/&#8230;/dd162903(v=vs.85).aspx</a></p>
<p>This shows IntersectRect and UnionRect, but sadly not SubtractRect.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-maurits even thread-even depth-1" id="comment-1078323">
				<div id="div-comment-1078323" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Maurits+%5BMSFT%5D' rel='external nofollow' class='url'>Maurits [MSFT]</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130918-00/?p=3203#comment-1078323">
			September 18, 2013 at 11:12 am</a>		</div>

		<p>I threw together a toy app which accepts two rectangles on the command line and will union, intersect, or subtract them, then print out the result.</p>
<p><a rel="nofollow" target="_new" href="http://blogs.msdn.com/b/matthew_van_eerde/archive/2013/09/18/sample-app-for-rect-functions.aspx">blogs.msdn.com/&#8230;/sample-app-for-rect-functions.aspx</a></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1078373">
				<div id="div-comment-1078373" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Moris</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130918-00/?p=3203#comment-1078373">
			September 18, 2013 at 2:55 pm</a>		</div>

		<p>(UnionRect) I have never really understood how a union of two rects can be stored in a RECT struct.</p>
<p>Doesn&#39;t make sense to me.</p>
<p>Where is the opposite function of IntersectRect?</p>
<p>To exclude the intersecting parts.</p>
<div class="post">[<em>All of the <code>...Rect</code> functions return the bounding box of the geometric result. And the function that excludes the intersecting part is <code>Subtract&shy;Rect</code>. -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-maurits even thread-even depth-1" id="comment-1078383">
				<div id="div-comment-1078383" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Maurits+%5BMSFT%5D' rel='external nofollow' class='url'>Maurits [MSFT]</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130918-00/?p=3203#comment-1078383">
			September 18, 2013 at 3:15 pm</a>		</div>

		<p>Exercise: implement BOOL SymmetricDifferenceRect(RECT *Out, RECT *A, RECT *B).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1078393">
				<div id="div-comment-1078393" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Silly</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130918-00/?p=3203#comment-1078393">
			September 18, 2013 at 7:51 pm</a>		</div>

		<p>Total untested guess here. A frequency analyser and a timer can be used to determine the set of output points. This routine may take a while to run to completion.</p>
<p>static void Check(LPRECT Out, LPCRECT A, LPCRECT B, LPBOOL emptySet) {</p>
<p> &nbsp; for(int y = A-&gt;top; y &lt; A-&gt;bottom; ++y) {</p>
<p> &nbsp; &nbsp; &nbsp;for(int x = A-&gt;left; x &lt; A-&gt;right; ++x) {</p>
<p> &nbsp; &nbsp; &nbsp; &nbsp; if(x &lt; B-&gt;left || x &gt; B-&gt;right || y &lt; B-&gt;top || y &gt; B-&gt;bottom) {</p>
<p> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;if(*emptySet) {</p>
<p> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Out-&gt;left = Out-&gt;right = x;</p>
<p> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Out-&gt;top = Out-&gt;bottom = y;</p>
<p> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; *emptySet = FALSE;</p>
<p> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;}</p>
<p> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;else { // probable redundant checking</p>
<p> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if(y &gt; Out-&gt;bottom) Out-&gt;bottom = y;</p>
<p> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if(x &gt; Out-&gt;right) Out-&gt;right = x;</p>
<p> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if(x &lt; Out-&gt;left) Out-&gt;left = x;</p>
<p> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if(y &lt; Out-&gt;top) Out-&gt;top = y;</p>
<p> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;}</p>
<p> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;Beep(x, y);</p>
<p> &nbsp; &nbsp; &nbsp; &nbsp; }</p>
<p> &nbsp; &nbsp; &nbsp;}</p>
<p> &nbsp; }</p>
<p>}</p>
<p>BOOL SymmetricDifferenceRect(LPRECT Out, LPCRECT A, LPCRECT B) {</p>
<p> &nbsp; BOOL emptySet = TRUE;</p>
<p> &nbsp; Check(Out, A, B, &amp;emptySet);</p>
<p> &nbsp; Check(Out, B, A, &amp;emptySet);</p>
<p> &nbsp; return !emptySet;</p>
<p>}</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1078413">
				<div id="div-comment-1078413" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Neil</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130918-00/?p=3203#comment-1078413">
			September 19, 2013 at 3:22 am</a>		</div>

		<p>I&#39;ve subtracted rectangular regions before, which of course does work as expected. I found the way CombineRgn worked confusing though.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1078423">
				<div id="div-comment-1078423" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joker_vD</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130918-00/?p=3203#comment-1078423">
			September 19, 2013 at 3:49 am</a>		</div>

		<p>Rectangles are not closed under (set-theoretic) union/substration, so let&#39;s redefine those operation to return the &quot;rectangular closure&quot; of the original result! That is, the smallest rectangle that contains the original result. Sure, that works, since rectangles form a bounded semilattice under inclusion relation and intersection (if you account for the finiteness of DWORD, they form a bounded lattice), but such a redefinition should be reflected in the name. Just calling them &quot;union&quot; and &quot;subtraction&quot; is a misnomer. </p>
<p>Besides, non-distributive (semi)lattices are neither terribly useful nor intuitive.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1078463">
				<div id="div-comment-1078463" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">parkrrrr</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130918-00/?p=3203#comment-1078463">
			September 19, 2013 at 7:31 am</a>		</div>

		<p>(Disclaimer: I think this is true, based on a few sketches, but I haven&#39;t bothered to prove it and I&#39;m prepared to be wrong.)</p>
<p>SymmetricDifferenceRect(A,B) is either SubtractRect(UnionRect(A,B),IntersectRect(A,B)) or UnionRect(SubtractRect(A,B),SubtractRect(B,A)). </p>
<p>In most cases, that is equivalent to UnionRect(A,B), but this simplification fails when A and B have any three of left/right/top/bottom equal.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1078663">
				<div id="div-comment-1078663" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Matt</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130918-00/?p=3203#comment-1078663">
			September 19, 2013 at 12:19 pm</a>		</div>

		<p>@Silly: If you&#39;re using a FOR loop anywhere in your solution to this YOU&#39;RE DOING IT WRONG.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1078753">
				<div id="div-comment-1078753" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Silly</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130918-00/?p=3203#comment-1078753">
			September 19, 2013 at 5:19 pm</a>		</div>

		<p>@Matt. Awww&#8230; but then how else could one Beep out all the points? That&#39;s the bestest part of my solution :(</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-maurits odd alt thread-odd thread-alt depth-1" id="comment-1078913">
				<div id="div-comment-1078913" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Maurits+%5BMSFT%5D' rel='external nofollow' class='url'>Maurits [MSFT]</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130918-00/?p=3203#comment-1078913">
			September 20, 2013 at 12:51 pm</a>		</div>

		<p>@Dave_Bacher: needs more jQuery.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-davebacher even thread-even depth-1" id="comment-1078923">
				<div id="div-comment-1078923" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Dave+Bacher' rel='external nofollow' class='url'>Dave Bacher</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130918-00/?p=3203#comment-1078923">
			September 20, 2013 at 2:08 pm</a>		</div>

		<p>var f = function(x,y)</p>
<p>{</p>
<p> &nbsp; // awesome!</p>
<p> &nbsp; var g = function(x,y)</p>
<p> &nbsp; {</p>
<p> &nbsp; &nbsp; if (y &lt; 20)</p>
<p> &nbsp; &nbsp; &nbsp;f(x, y+1);</p>
<p> &nbsp; }</p>
<p> &nbsp; if (x &lt; 20)</p>
<p> &nbsp; {</p>
<p> &nbsp; &nbsp; &nbsp;doSomething();</p>
<p> &nbsp; &nbsp; &nbsp; x += 1;</p>
<p> &nbsp; &nbsp; &nbsp; f(x, y);</p>
<p> &nbsp; }</p>
<p> &nbsp; else</p>
<p> &nbsp; {</p>
<p> &nbsp; &nbsp; &nbsp;g(x, y);</p>
<p> &nbsp; }</p>
<p>}</p>
<p>$(function(){ f(0,0); })</p>
<p>Satisfied?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-davebacher odd alt thread-odd thread-alt depth-1" id="comment-1078903">
				<div id="div-comment-1078903" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Dave+Bacher' rel='external nofollow' class='url'>Dave Bacher</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130918-00/?p=3203#comment-1078903">
			September 20, 2013 at 11:51 am</a>		</div>

		<p>@Silly:</p>
<p>void someFunc(x, y)</p>
<p>{</p>
<p> &nbsp;x += 1;</p>
<p> &nbsp;if (19 == x)</p>
<p> &nbsp;{</p>
<p> &nbsp; &nbsp; &nbsp;x = 0;</p>
<p> &nbsp; &nbsp; &nbsp;y += 1;</p>
<p> &nbsp; &nbsp; &nbsp;if (19 == y)</p>
<p> &nbsp; &nbsp; &nbsp;{</p>
<p> &nbsp; &nbsp; &nbsp; &nbsp; return;</p>
<p> &nbsp; &nbsp; &nbsp;}</p>
<p> &nbsp;}</p>
<p> &nbsp;if (someCondition)</p>
<p> &nbsp; &nbsp; { /* do something */ }</p>
<p> &nbsp;someFunc(x, y);</p>
<p>}</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1079163">
				<div id="div-comment-1079163" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Silly</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130918-00/?p=3203#comment-1079163">
			September 23, 2013 at 10:10 pm</a>		</div>

		<p>@Dave. Sweet! And with tail recursion too (methinks)! All I got left is:</p>
<p> &nbsp; y = start_y;</p>
<p> &nbsp; comefrom B;</p>
<p> &nbsp; x = start_x;</p>
<p> &nbsp; comefrom A;</p>
<p> &nbsp; if (x &lt; end_x) {</p>
<p> &nbsp; &nbsp; if (whatevs) { stuff(); }</p>
<p> &nbsp; }</p>
<p>A: ++x;</p>
<p>B: if y++ &gt;= end_y return;</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>