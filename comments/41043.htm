<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (75)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-136273">
				<div id="div-comment-136273" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Olsson</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040115-00/?p=41043#comment-136273">
			January 15, 2004 at 7:24 am</a>		</div>

		<p>I&#8217;m pretty new to Windows API programming so i may have gotten this wrong, but&#8230;</p>
<p>I read this:<br />
<br />LRESULT CALLBACK DlgProc(HWND hWnd, UINT Msg, WPARAM wParam, LPARAM lParam);</p>
<p>And it looked very familiar. In VC6 when you create a &quot;Win32 Application&quot; from the New Wizard and choose the &quot;Hello World application&quot; it uses the faulty(?) callback procedure. It even contains a call to:<br />
<br />&quot;DialogBox(hInst, (LPCTSTR)IDD_ABOUTBOX, hWnd, (DLGPROC)About);&quot;</p>
<p>So why does VC6 get it so wrong?<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-136293">
				<div id="div-comment-136293" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.codeneffect.com' rel='external nofollow' class='url'>Ian Hanschen</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040115-00/?p=41043#comment-136293">
			January 15, 2004 at 7:45 am</a>		</div>

		<p>Good read.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-136303">
				<div id="div-comment-136303" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.dimmick.demon.co.uk' rel='external nofollow' class='url'>Mike Dimmick</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040115-00/?p=41043#comment-136303">
			January 15, 2004 at 8:10 am</a>		</div>

		<p>The DlgProc one will work _as written_ because the return types are compatible &#8211; LRESULT maps to LONG_PTR, and on both x86 and Itanium, INT_PTR and LONG_PTR are the same size.</p>
<p>However, if you perform the cast rather than correcting the code, you miss any other mistakes in the declaration (e.g. too many or too few parameters, or the wrong size for parameters).</p>
<p>Unfortunately it&#8217;s a general trend of &#8216;what&#8217;s the least amount of work I need to do to shut the compiler up?&#8217; rather than working out the root cause of the error/warning, and repairing that. A cast &#8211; especially a C-style cast &#8211; allows the programmer to bodge any value into any location, without having to think. I&#8217;ve seen it quite a lot on programming forums.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-136313">
				<div id="div-comment-136313" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Mike Hearn</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040115-00/?p=41043#comment-136313">
			January 15, 2004 at 8:10 am</a>		</div>

		<p>These stories always make me laugh. I sometimes tried to imagine what the Windows code might look like based on what Wine looks like, but now I know just how far wrong I was&#8230;. I never thought the code would be riddled with inline assembly to clean up the stack after random function calls!</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-136323">
				<div id="div-comment-136323" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Centaur</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040115-00/?p=41043#comment-136323">
			January 15, 2004 at 8:38 am</a>		</div>

		<p>In Russian, we have an idiomatic expression that can be literally translated as “bear’s service”. It is used when you do something to someone in the hope that it will be useful, but it actually brings harm.</p>
<p>This is just what happens here. Someone misdeclares the calling convention, and you detect this and silently fix their error instead of loudly killing the offending application and asking the user to type in the name of the application and the address of its author, so that it could be posted on the Internet in the Official List of Misbehaving Programs.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-136333">
				<div id="div-comment-136333" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.honestillusion.com' rel='external nofollow' class='url'>James Curran</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040115-00/?p=41043#comment-136333">
			January 15, 2004 at 8:39 am</a>		</div>

		<p>OK, My &quot;corrupt stack&quot; story.</p>
<p>This was about 18 years ago, when I was working in Z-8000 Assembler (Ya&#8217;want &quot;corrupt stack&quot; stories, ya gotta talk assembler&#8230;..)</p>
<p>I was modifying an existing production system. Every time I called one particular subroutine in my modification, the program crashed on return.   However, the production version called it all the time and it worked fine.</p>
<p>I checked &amp; checked my code, and everything seemed fine.  (Recall that this was an embedded system in the mid-80&#8217;s, so debugging tools were very primative)</p>
<p>Now, in Z8K asm, there are 16 32-bit registers, (R0 thru R15), which could also be used as 64-bit registers: Even numbered RR0 through RR14 (RR0 was R0 &amp; R1).</p>
<p>The standard practice in this program was that every subroutine would preserve any register it used.  So, that routine, like most other, began with</p>
<p>PUSH RR0<br />
<br />PUSH RR2<br />
<br />PUSH RR4</p>
<p>However, I eventually noticed that it ended with:</p>
<p>POP RR4<br />
<br />POP RR2<br />
<br />POP R0</p>
<p>Which means it was pushing 6 words onto the stack at the story, but only popped 5 of them off at the end.  BUT IT WORKS IN PRODUCTION!</p>
<p>I figured out that the production system only called that subroutine from one place, and when it made the call, R1 (the value being left on the stack) would always have 0000 in it.  In the device&#8217;s ROM, address 0000 had a RET.  So, the bad instruction would leave a 0000 on the top of the stack, it would then pop that as the return address and jump to 0000, see the RET, pop the next value (the correct return) off the stack as the return address and go on it&#8217;s merry way, as the original caller didn&#8217;t care what ended up in the R1 &#8212; Until I came along and called it with some other value in R1.</p>
<p>It was estimated that the device had been making that extra jump on every keystroke for about three years without any programmer noticing it.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-136353">
				<div id="div-comment-136353" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://weblogs.asp.net/oldnewthing/' rel='external nofollow' class='url'>Raymond Chen</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040115-00/?p=41043#comment-136353">
			January 15, 2004 at 8:39 am</a>		</div>

		<p>&quot;loudly killing the offending application&#8230;&quot; -While we all wish we could do this, we also realize that this doesn&#8217;t help the customer one bit.</p>
<p>&quot;Hi, I upgraded to Windows XP, and now my accounts management program keeps crashing. It puts up this dialog box asking me to report the program. How do I fix it? I am losing thousands of dollars a day because of this!&quot;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-136373">
				<div id="div-comment-136373" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Alan Hecht</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040115-00/?p=41043#comment-136373">
			January 15, 2004 at 9:19 am</a>		</div>

		<p>It looks like generic.c in the &quot;Generic Sample Application&quot; in the Windows API documentation gets it wrong. The function signature for the dialog procedure is:</p>
<p>    LRESULT WINAPI AboutDlgProc( HWND, UINT, WPARAM, LPARAM );</p>
<p>and it is called with:</p>
<p>    DialogBox(ghInstance, &quot;AboutDlg&quot;, hWnd,(DLGPROC)AboutDlgProc );</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-136383">
				<div id="div-comment-136383" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://weblogs.asp.net/oldnewthing/' rel='external nofollow' class='url'>Raymond Chen</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040115-00/?p=41043#comment-136383">
			January 15, 2004 at 9:56 am</a>		</div>

		<p>Thanks, Alan. I&#8217;ve notified the MSDN doc folks.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-136393">
				<div id="div-comment-136393" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Matt</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040115-00/?p=41043#comment-136393">
			January 15, 2004 at 10:05 am</a>		</div>

		<p>I tend to agree with Centaur on this one (what is that idiomatic expression, by the way?  Could you post the transliteration?).  Why should the Windows code be forced to &quot;fix&quot; the errors in the applications?  Shouldn&#8217;t the application developers just be expected to program correctly for their intended OS?  I&#8217;m not a Windows programmer, but the thought of OS code being written to handle poorly written applications boggles my mind.  Is this common?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-136403">
				<div id="div-comment-136403" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.codeproject.com/script/articles/list_articles.asp?userid=152' rel='external nofollow' class='url'>Mike Dunn</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040115-00/?p=41043#comment-136403">
			January 15, 2004 at 10:14 am</a>		</div>

		<p>The &quot;silently fix bad apps&quot; is a sticky situation as it reinforces bad coding practices. Anyone who participates in programming discussion boards has certainly seen questions from newbies like &quot;how do I cast an int to a CString?&quot; or &quot;I added a cast from an int to a CString but now my program crashes. Why? It compiled!&quot;  </p>
<p>Bottom line is, casting in C++ is a Bad Thing unless you know what you&#8217;re doing. C++ data types (especially C strings) are just hard for some newbies to grasp, and some seem to throw in casts thinking the compiler will magically understand their intention. Sometimes it works, and that reinforces the misperception that casts are the right way to do things or (even worse) fix compiler errors. Automatically fixing up the stack after a bug caused by a bad cast also reinforces it.</p>
<p>[Not that I&#8217;m arguing against the OS doing such fix-ups &#8211; I completely understand why it&#8217;s done &#8211; I&#8217;m just pointing out some downsides.]</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-136413">
				<div id="div-comment-136413" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://weblogs.asp.net/oldnewthing/' rel='external nofollow' class='url'>Raymond Chen</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040115-00/?p=41043#comment-136413">
			January 15, 2004 at 10:15 am</a>		</div>

		<p>Remember, serving our customers is our #1 goal. Breaking Program Q is a disservice to our customers who use Program Q, even if program Q was poorly written. Now you might say, &quot;Well those customers deserve to be screwed for buying such crappy software.&quot; But I wouldn&#8217;t say that.<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-136423">
				<div id="div-comment-136423" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.rotd.org' rel='external nofollow' class='url'>Andreas Magnusson</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040115-00/?p=41043#comment-136423">
			January 15, 2004 at 10:32 am</a>		</div>

		<p>This is great read! Thanks for enlightening us, I *shame* have to admit that I too have written some dialog-code like that&#8230;but I promise I will never do it again!<br />
<br />And I agree that type-casting (especially C-casting) is bad unless you&#8217;re really sure on what you&#8217;re doing.<br />
<br />The problem is that most programmers want to get the reward, a running program. A compiler-error is like someone standing in the way of that reward, trying to stop you. So you feel like: &quot;Hey you! Get out of my way or I&#8217;m gonna blast you with my type-casting-gun!&quot;<br />
<br />Ok, maybe I overexaggerated a bit&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-136433">
				<div id="div-comment-136433" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">asdf</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040115-00/?p=41043#comment-136433">
			January 15, 2004 at 10:45 am</a>		</div>

		<p>It&#8217;s not healthy to keep the rage against people that should be programming visual basic instead of C++ bottled up so I suggest you post more stories like this.</p>
<p>P.S. Microsoft is guilty of botching __stdcall/__cdecl too like the callback functions passed to some glu/glut functions. They&#8217;re also notorious for not being const safe but that&#8217;s another article.</p>
<p>P.P.S. I like how Microsoft changed the return type of DLGPROC from BOOL (in the VC6 headers) to INT_PTR (in the platform sdk headers) all of a sudden. If you search all of msdn for &quot;(DLGPROC)&quot; you will see tons of questionable code.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-136463">
				<div id="div-comment-136463" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Larry Osterman</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040115-00/?p=41043#comment-136463">
			January 15, 2004 at 10:54 am</a>		</div>

		<p>The reason that the dialog box return code was changed from LRESULT to INT_PTR was for 64 bit issues.  </p>
<p>Apps (and windows) were relying on the fact that they could return pointers into the storage that was reserved for a return code, which works for 32 bit platforms, but not for 64 bit platforms.  So the parameter was changed.</p>
<p>For 32 bit platforms, there is no effective difference between LRESULT and INT_PTR, which means that 32 bit code isn&#8217;t broken, however when the code is recompiled for 64bits it will be broken.</p>
<p>The good news is that when you recompile your broken code, YOUR code won&#8217;t compile &#8211; the compiler will warn you that your&#8217;re truncating the bits when you try to return a 64bit pointer into a 32bit LRESULT.<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-136443">
				<div id="div-comment-136443" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Larry Osterman</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040115-00/?p=41043#comment-136443">
			January 15, 2004 at 10:56 am</a>		</div>

		<p>There is also a HUGE caveat if you&#8217;re the author of a library.</p>
<p>You MUST (without exception) declare the calling convention that your library was compiled with in the published headers for the library.</p>
<p>If you don&#8217;t, then when someone new tries to use your library, they WILL experience mysterious failures.  This has bitten me more times than I care to think of.</p>
<p>For example, consider a project I worked on.  It had a function ScpAppIf_Do_Startup that was declared in the header as:</p>
<p>extern BOOL<br />
<br />ScpAppIf_Do_Startup<br />
<br />(<br />
<br />	xScpAppIf_this_only<br />
<br />);</p>
<p>In order to save space in the resulting binary, the project was compiled specifying the stdcall calling convention.</p>
<p>So we released our beta DDK with the header as described above, some of our customers came along and started writing code for the project.</p>
<p>And they immediately got on the phone with us to complain that their application was mysteriously crashing &#8211; when they called into our functions, their local variables all of a sudden got corrupted.</p>
<p>The problem was that they didn&#8217;t specify a calling convention in their makefiles, which meant that they assumed that our functions were declared with the default calling convention, __cdecl.</p>
<p>But remember &#8211; the libraries were compiled with __stdcall.</p>
<p>The fix was to rerelease the headers with the prototype changed to:</p>
<p>extern BOOL SCP_API<br />
<br />ScpAppIf_Do_Startup<br />
<br />(<br />
<br />	xScpAppIf_this_only<br />
<br />);</p>
<p>and we defined SCP_API to __stdcall for x86 platforms.</p>
<p>This problem occurs whether your are producing a statically linked library (as in our case) or if you&#8217;re producing a DLL.</p>
<p>Bottom line: If you don&#8217;t explicitly specify your calling convention, you WILL have troubles down the line.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-136453">
				<div id="div-comment-136453" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://weblogs.asp.net/oldnewthing/' rel='external nofollow' class='url'>Raymond Chen</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040115-00/?p=41043#comment-136453">
			January 15, 2004 at 10:58 am</a>		</div>

		<p>The BOOL -&gt; INT_PTR change happened during the Win64 effort.  On Win32, BOOL and INT_PTR are the same thing, so Win32 code is unaffected. But if you want your code to be ready for Win64, change your dialog procedure BOOLs to INT_PTRs.</p>
<p>When I was porting code to Win64, the first thing I did was grep for (DLGPROC) and (WNDPROC), remove the casts, and then fix all the bugs that the casts were hiding.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-136473">
				<div id="div-comment-136473" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://weblogs.asp.net/oldnewthing/' rel='external nofollow' class='url'>Raymond Chen</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040115-00/?p=41043#comment-136473">
			January 15, 2004 at 11:03 am</a>		</div>

		<p>Actually, Larry, the dialog box return code was changed from *BOOL* to INT_PTR.  It was never LPARAM.  BOOL is the same as INT.</p>
<p>The Win64 changes were carefully made so that valid Win32 code remained valid. (Of course, invalid Win32 code remained invalid and could possibly get worse, thanks to issues like this.)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-136493">
				<div id="div-comment-136493" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Larry Osterman</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040115-00/?p=41043#comment-136493">
			January 15, 2004 at 11:04 am</a>		</div>

		<p>Btw, you wrote the following above (which is where I got my LRESULT comment).</p>
<p>LRESULT CALLBACK DlgProc(HWND hWnd, UINT Msg,<br />
<br />   WPARAM wParam, LPARAM lParam);</p>
<p>So the code in question was DOUBLY bad&#8230;<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-136483">
				<div id="div-comment-136483" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Larry Osterman</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040115-00/?p=41043#comment-136483">
			January 15, 2004 at 11:09 am</a>		</div>

		<p>My bad, teach me to try to answer for the master :)<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-136503">
				<div id="div-comment-136503" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blog.opennetcf.org/afeinman' rel='external nofollow' class='url'>Alex Feinman</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040115-00/?p=41043#comment-136503">
			January 15, 2004 at 11:26 am</a>		</div>

		<p>Matt: it is &quot;medvezhiya usluga&quot;<br />
<br />Raymond: Are you saying all these hacks became a part of Windows code or were they put into &quot;shims&quot;?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-136513">
				<div id="div-comment-136513" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Peter Montgomery</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040115-00/?p=41043#comment-136513">
			January 15, 2004 at 12:07 pm</a>		</div>

		<p>After reading this, I panicked and went into my code to see how I handled dialog boxes.  I saw (as an example) code like this:</p>
<p>BOOL CALLBACK LoadLoopDlgProc(HWND hDlg, UINT iMsg, WPARAM wParam, LPARAM lParam);</p>
<p>Cool!  So, Raymond, do I get a gold star?  Frankly, I&#8217;m sure I just cut and pasted something from the MS docs which must have been correct at the time I read them.  Of course, MS docs have a long history of being flat out wrong and frocing programmers to spend countless hours trying to get their code to work.  It&#8217;s little wonder there isn&#8217;t more bad code out there as a result.  Any idea how the code you were porting was written incorrectly?  I mean, didn&#8217;t those folks just follow the docs?  Where did all these people get the idea to use LRESULT?  I&#8217;m just your average API programmer, but I got it right, so how hard can it be?  </p>
<p>Now then, this whole change from BOOL to INT_PTR &#8211; how come this is the first I&#8217;ve heard of this?  It seems like this sort of info needs to be disseminated in a less ad-hoc fashion.  Discovering critical info like this by reading a blog or accidentally discovering it while checking out docs is a pretty lame means of getting the word out.  For example, I have working code.  When I need to write a new dialog proc, I won&#8217;t go into the docs again, I&#8217;ll just use a known exmaple I have here.</p>
<p>You complain about how many people get it wrong, but don&#8217;t address the root problem which is how come MS doesn&#8217;t disseminate critical info better.  The code you were porting, was it written at MS?  If so, then how can you expect outside developers to get it right when MS can&#8217;t?</p>
<p>     Thanks,<br />
<br />     PeterM</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-136523">
				<div id="div-comment-136523" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://weblogs.asp.net/oldnewthing/' rel='external nofollow' class='url'>Raymond Chen</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040115-00/?p=41043#comment-136523">
			January 15, 2004 at 12:19 pm</a>		</div>

		<p>If a problem is isolated to only a few programs, we use a shim. But if a problem is widespread, then it goes into the core.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-136533">
				<div id="div-comment-136533" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://weblogs.asp.net/oldnewthing/' rel='external nofollow' class='url'>Raymond Chen</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040115-00/?p=41043#comment-136533">
			January 15, 2004 at 12:28 pm</a>		</div>

		<p>Peter: Your BOOL code is still good today. You only have to worry about INT_PTR when you decide to port to Win64, at which point you will find lots of documentation listing the various parameter changes that were made for Win64 purposes (but which remain backwards compatible with Win32).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-136563">
				<div id="div-comment-136563" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://weblogs.asp.net/oldnewthing/' rel='external nofollow' class='url'>Raymond Chen</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040115-00/?p=41043#comment-136563">
			January 15, 2004 at 12:46 pm</a>		</div>

		<p>Windows NT used the Alpha in 32-bit mode. There was a &quot;Win64 for Alpha AXP&quot; project well under way but the Alpha died before it could ship.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-136543">
				<div id="div-comment-136543" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">asdf</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040115-00/?p=41043#comment-136543">
			January 15, 2004 at 12:47 pm</a>		</div>

		<p>Wasn&#8217;t the DEC Alpha 64 bits? How did NT work on that without all these INT_PTR and GetWindowLongPtr changes?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-136583">
				<div id="div-comment-136583" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.codeproject.com/script/articles/list_articles.asp?userid=152' rel='external nofollow' class='url'>Mike Dunn</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040115-00/?p=41043#comment-136583">
			January 15, 2004 at 1:27 pm</a>		</div>

		<p>IIRC on the Alpha, all pointers are sign-extended, so you still have 4GB of process space covering addresses:<br />
<br />0x00000000_00000000 to 0x00000000_7FFFFFFFF<br />
<br />and<br />
<br />0xFFFFFFFF_80000000 to 0xFFFFFFFF_FFFFFFFFF</p>
<p>The OS (or maybe the hardware) did the sign-extension so that The Right Thing happens when you use a 32-bit address.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-136633">
				<div id="div-comment-136633" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">CW User</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040115-00/?p=41043#comment-136633">
			January 15, 2004 at 3:04 pm</a>		</div>

		<p>So it happens that my post (<a target="_new" href="http://weblogs.asp.net/oldnewthing/archive/2004/01/08/48616.aspx#58017" rel="nofollow">http://weblogs.asp.net/oldnewthing/archive/2004/01/08/48616.aspx#58017</a>) was cited by Raymond as an example for this article.<br />
<br />I am flattered.</p>
<p> Lot of other guys said why these types of mistakes happen.<br />
<br />Seems like documentation (MSDN and other resources) is always<br />
<br />to blame. When I wrote the code from the link above, at first<br />
<br />GetProcAddress() didn&#8217;t give anything. So I checked in Petzold. Then<br />
<br />in MSDN, then in Jeffrey Richter&#8217;s Advanced Windows. (At the time<br />
<br />I didn&#8217;t have Wine on my disk). Then I looked into some other books.<br />
<br /> Then I looked into headers to see what is really CALLBACK. Then in<br />
<br />desperation I loaded compiled DLL into my editor and this is when I<br />
<br />saw that strange name with @ in it. Then I remembered that Petzold<br />
<br />was talking something about name mangling, but he related to it in<br />
<br />terms of C++ so I thought I shouldn&#8217;t bother with that.<br />
<br /> After all these books and MSDN site and DVD and after six hours<br />
<br />I&#8217;ve spent on GetProcAddres() no wonder that when it finally returned<br />
<br />something and it all seemed to work well I went away from computer<br />
<br />and it was natural I forgot to look into my header file which had<br />
<br />original definition of proc type I&#8217;ve used to cast value returned from GetProcAddress().</p>
<p> As Raymond writes next article, I think he would somehow come to<br />
<br />one simple conclusion &#8211; all the programmers in the world need his<br />
<br />cell phone number.</p>
<p> Just kidding &#8211; there must be some other way of solving this mess.<br />
<br />Open sourcing Windows? OK. Idea with the phone number was<br />
<br />maybe more realistic.</p>
<p> At least, we have this blog. World is a better place now.<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-136643">
				<div id="div-comment-136643" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Petr Prazak</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040115-00/?p=41043#comment-136643">
			January 15, 2004 at 3:05 pm</a>		</div>

		<p>For Matt and Centaur: this idiom in English is &quot;a shot in the eye&quot;.</p>
<p>How many more hacks are there in Windows for the sake of Compatibility? I hope Raymond will tell us. :)<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-136653">
				<div id="div-comment-136653" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://weblogs.asp.net/oldnewthing/' rel='external nofollow' class='url'>Raymond Chen</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040115-00/?p=41043#comment-136653">
			January 15, 2004 at 3:12 pm</a>		</div>

		<p>I could talk about one compatibility hack a day and I would never run out of material. (There are hundreds of compatibility hacks just in the shims database. That&#8217;s not counting the ones that are incorporated into the core.) But it would make for a very boring blog.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-136663">
				<div id="div-comment-136663" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">4nd3r$</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040115-00/?p=41043#comment-136663">
			January 15, 2004 at 3:41 pm</a>		</div>

		<p>no that would be great, one compatibility hack every day </p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-136693">
				<div id="div-comment-136693" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://alias:ndiamond@msdn.discussions' rel='external nofollow' class='url'>Norman Diamond</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040115-00/?p=41043#comment-136693">
			January 15, 2004 at 5:09 pm</a>		</div>

		<p>Suppose you follow instructions in MSDN to code a TimerProc() function and pass that function&#8217;s address to the SetTimer() function.  In order to get the result to compile, you WILL have to use the evil buggy kind of cast that is described in this Blog entry.  After getting the result to compile, I don&#8217;t remember if it sometimes works or not.</p>
<p>Visual Studio 6 includes enough source code so that I could change the declarations and compile the thing without an evil buggy cast.  For the moment the thing runs.  But I am violating the instructions which Microsoft published in MSDN.</p>
<p>What will happen in the future when Microsoft starts conforming to instructions published in MSDN?  Will you put hacks in Windows so that my incorrect program will continue to run?</p>
<p>Sorry to repeat, but I really do wish that Microsoft would take this effort and put it into making valid programs work instead.  Fix Windows.  Fix MSDN.  Fix Visual Studio.  AFTER that, start thinking about your interesting hacks.<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-136703">
				<div id="div-comment-136703" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Andreas H&#228;ber</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040115-00/?p=41043#comment-136703">
			January 15, 2004 at 5:13 pm</a>		</div>

		<p>To fix the problem &quot;in the core&quot; for the end-user is very nice, from the end-user point of view. But for the developer this only makes it harder to find&amp;fix errors.</p>
<p>IMHO it would be very helpful if Windows checks if the program is running in debug-mode before it fixes the stack, and if it is then gives out a debug message (the OutputDebugString way) and explains the problem to the poor developer (or at least a link to your blog :))</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-136713">
				<div id="div-comment-136713" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://weblogs.asp.net/oldnewthing/' rel='external nofollow' class='url'>Raymond Chen</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040115-00/?p=41043#comment-136713">
			January 15, 2004 at 5:13 pm</a>		</div>

		<p>? I just followed the docs for SetTimer/TimerProc and it compiled okay:</p>
<p>void CALLBACK MyTimerProc(HWND hwnd,<br />
<br />   UINT uMsg, UINT_PTR idEvent, DWORD dwTime);</p>
<p>void foo(HWND hwnd)<br />
<br />{<br />
<br />  SetTimer(hwnd, 1, 1000, MyTimerProc);<br />
<br />}</p>
<p>// no errors<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-136723">
				<div id="div-comment-136723" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://weblogs.asp.net/oldnewthing/' rel='external nofollow' class='url'>Raymond Chen</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040115-00/?p=41043#comment-136723">
			January 15, 2004 at 5:20 pm</a>		</div>

		<p>You can run the checked version of Windows, which will tell you about all sorts of bad things you&#8217;re doing. Application Verifier will catch even more things.</p>
<p>But some app compat fixes have to be done pre-emptively. For example, the fourth parameter to IExtractIcon::Extract</p>
<p><a target="_new" href="http://msdn.microsoft.com/library/en-us/shellcc/platform/shell/reference/ifaces/iextracticon/Extract.asp" rel="nofollow">http://msdn.microsoft.com/library/en-us/shellcc/platform/shell/reference/ifaces/iextracticon/Extract.asp</a></p>
<p>is documented as &quot;may be NULL&quot; but it turns out that if you pass NULL, some icon extractors crash. So Explorer is careful never to pass NULL.</p>
<p>Explorer isn&#8217;t clairevoyant.  It doesn&#8217;t know whether passing NULL *would* crash, so it can&#8217;t print a debug message, &quot;Your shell extension would have crashed if I passed NULL as the fourth parameter.&quot;  It just has to play it safe and always pass a non-NULL fourth parameter.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-136743">
				<div id="div-comment-136743" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">asdf</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040115-00/?p=41043#comment-136743">
			January 15, 2004 at 7:32 pm</a>		</div>

		<p>With all these problems, I wonder why you guys haven&#8217;t bundled an app verifier like utility with visual studio (with an option to download current data like windbg&#8217;s symbol server stuff). The debug build then should have an option checked by default to spew out warnings like the DX debug runtime does and a message box for blatantly incorrect errors. But to make it more useful than DX&#8217;s you should have a user defined filter function instead of a tiny slider. Well I guess it doesn&#8217;t make sense anymore since you guys pretty much canned the Win api for .net.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-136773">
				<div id="div-comment-136773" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Florian</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040115-00/?p=41043#comment-136773">
			January 15, 2004 at 10:49 pm</a>		</div>

		<p>I still have problems groking the change from BOOL to INT_PTR for the Win64 move. While Raymond said that the return type never was anything else but BOOL, Larry said that apps and windows relied on being able to store *pointers* in the return code. Now, usually in the programming world BOOL means Boolean and not some &quot;type that is true or false or may also hold a pointer to something&quot;. What I mean is that BOOL and INT_PTR are vastly different concepts. Is this yet another story about creative use of the WinAPI by third party programs or did actually even Windows rely on being able to return pointers? Why would anyone return a pointer from a BOOL function?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-136783">
				<div id="div-comment-136783" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://weblogs.asp.net/oldnewthing/' rel='external nofollow' class='url'>Raymond Chen</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040115-00/?p=41043#comment-136783">
			January 15, 2004 at 10:54 pm</a>		</div>

		<p>The only reason BOOL changed to INT_PTR is that the WM_CTLCOLOR messages require you to return a brush handle (a pointer) cast to BOOL. If it weren&#8217;t for that, dialog procedures would have stayed BOOL.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-136803">
				<div id="div-comment-136803" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">tom</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040115-00/?p=41043#comment-136803">
			January 15, 2004 at 11:54 pm</a>		</div>

		<p>Re: Generic Sample Application &#8211; is it just the forward declaration that&#8217;s bad &#8211; the actual function is OK?</p>
<p>Raymond, if it were your responsibility to vet the sample code after it already contained the offending cast, how would you have found it?  Is there any way other than to know the signature of a dialog procedure?  None of the tools mentioned in this post would find this mismatch.</p>
<p>Thanks.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-136813">
				<div id="div-comment-136813" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://weblogs.asp.net/oldnewthing/' rel='external nofollow' class='url'>Raymond Chen</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040115-00/?p=41043#comment-136813">
			January 16, 2004 at 12:09 am</a>		</div>

		<p>If you change the return value from LRESULT to BOOL then the dialog procedure would be fine.</p>
<p>When I review code, I view every function cast with great suspicion. It usually means you&#8217;re trying to pull a fast one. The only exceptions I can think of are (1) casting the return value of GetProcAddress and (2) casting the return of GetWindowLongPtr(GWLP_WNDPROC).  The second can be wrapped inside the SubclassWindow macro. The first you just have to stare at carefully, make sure the declaration is correct down to the last detail.</p>
<p>There may be a version of lint that catches this sort of thing but I&#8217;m not aware of it.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-136823">
				<div id="div-comment-136823" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Martin Webrant</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040115-00/?p=41043#comment-136823">
			January 16, 2004 at 2:28 am</a>		</div>

		<p>I ran into a gotcha with the timer callback the other day.<br />
<br />The callback is surrounded with try/catch and is potentially hiding errors that can happen in your timer function.</p>
<p>VOID CALLBACK MyTimerProc(HWND hwnd, UINT message, UINT idTimer, DWORD dwTime)<br />
<br />{<br />
<br />	OutputDebugString(&quot;I&#8217;m doing some stuff heren&quot;);</p>
<p>	int* crash = 0;<br />
<br />	*crash = 0; </p>
<p>	OutputDebugString(&quot;You never knew this code wasn&#8217;t running &#8211; hiding a potential disaster :-)&quot;);<br />
<br />} </p>
<p>Our crash usually happened in release code so we didn&#8217;t see the &quot;access violation&quot; message in the output window&#8230;</p>
<p>I ended up writing a __try/__except around all the timer code so I could warn about the error and write a minidump myself.<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-136843">
				<div id="div-comment-136843" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">asdf</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040115-00/?p=41043#comment-136843">
			January 16, 2004 at 3:12 am</a>		</div>

		<p>Is there a reason you guys didn&#8217;t just change the BOOL type to 64 bits and leave DLGPROC alone? I could have sworn there was a lot of code (in the MFC/WTL/ATL source even?) written that assumed sizeof(BOOL) == sizeof(LRESULT) because DLGPROC returned a BOOL. Or maybe they just made the (all too common it seems) mistake of returning an LRESULT and the two wrongs made it right.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-136853">
				<div id="div-comment-136853" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.codeproject.com/script/articles/list_articles.asp?userid=152' rel='external nofollow' class='url'>Mike Dunn</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040115-00/?p=41043#comment-136853">
			January 16, 2004 at 3:44 am</a>		</div>

		<p>Ack, I&#8217;m guilty of assuming non-NULL pointers in IExtractIcon::Extract. But in my defense, the Oct 2001 MSDN does not say that those parameters may be NULL.<br />
<br />Since I do not use VC 7.x, and I don&#8217;t like the new MSDN help viewer, I usually use the Oct 2001 MSDN (the last one that works with VC 6) for all my docs needs, unless it&#8217;s some really new API or interface that&#8217;s only in the Feb 2003 PSDK.</p>
<p>Raymond, that reminds me of a question that stumped me&#8230; In one of my apps I have an icon handler that reads the icon for a file type with SHGetFileInfo and returns it for my own custom file type. I was unable to find how to retrieve the 48&#215;48 icon for a file type from the system imagelist. AFAICT SHGetFileInfo can only give you the 16&#215;16 and 32&#215;32 ones.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-136883">
				<div id="div-comment-136883" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Tom Seddon</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040115-00/?p=41043#comment-136883">
			January 16, 2004 at 6:40 am</a>		</div>

		<p>STRICT seems to have vanished. But with older VC++, unless you did -DSTRICT all the function pointer types were just the same. So you were obliged to cast in order to get Win32 and C++ (and possibly modern C, too) to coexist nicely.</p>
<p>I remember this being a problem in VC5, and it was ugly. (I found out about STRICT by looking at the header in shock/desparation.) Looks like STRICT has gone from VS.NET, thankfully; not sure about VC6.</p>
<p>Anyway, when apportioning blame for these mucky casts, this should be borne in mind :)<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-136893">
				<div id="div-comment-136893" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Tom Seddon</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040115-00/?p=41043#comment-136893">
			January 16, 2004 at 6:42 am</a>		</div>

		<p>I should add, in case it&#8217;s unclear &#8212; STRICT has gone, because it seems you only get the STRICT prototypes.<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-136903">
				<div id="div-comment-136903" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Andreas H&#228;ber</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040115-00/?p=41043#comment-136903">
			January 16, 2004 at 6:50 am</a>		</div>

		<p>&quot;You can run the checked version of Windows, which will tell you about all sorts of bad things you&#8217;re doing. Application Verifier will catch even more things. &quot;</p>
<p>Like said before, there should be a very easy way to use Application Verifier from Visual Studio. I don&#8217;t think as many people who should know about application verifier knows it exists :/. Same goes for the checked build of Windows &#8211; also to get it you&#8217;ve got to have a MSDN Subscription. And since it&#8217;s mostly for kernel-development I don&#8217;t think the usual application developer knows about that one too. (Maybe I&#8217;m too pessimistic? But after reading all the application compatibility errors on your blog, why should I be optimistic? ;))</p>
<p>With regards to displaying debug messages it&#8217;s always &#8216;grey cases&#8217;. I know the Windows sourcecode is huge (30+ millions lines from what I&#8217;ve read). But what&#8217;s your opinion about the specific case you described above: &quot;the function that dispatches messages to window procedures&quot;? </p>
<p>IMHO when the dispatch function detects that something is wrong with the stack, you can assume that it&#8217;s not very good written from the start. Therefore performance shouldn&#8217;t matter, so what&#8217;s the negative effect with giving the developer knowledge about this information?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-136913">
				<div id="div-comment-136913" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://weblogs.asp.net/oldnewthing/' rel='external nofollow' class='url'>Raymond Chen</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040115-00/?p=41043#comment-136913">
			January 16, 2004 at 7:26 am</a>		</div>

		<p>asdf: None of the fundamental data types changed size because doing so would have broken file formats.</p>
<p>Mike: SHGetImageList lets you get the 48&#215;48 imagelist.</p>
<p>Andreas: And then when you run a program that has a buggy window procedure your machine slows to a crawl because of all the debug spew. We had this problem in Windows 95 &#8211; our internal bug-tracking program was itself buggy and generated boatloads of of debugging warnings if you ran it on a checked build, so much that you couldn&#8217;t really use it.</p>
<p>Though the specific case of the wndproc dispatcher could be fixed by say printing the message only once per program. But the general case is much harder.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-136923">
				<div id="div-comment-136923" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.dimmick.demon.co.uk' rel='external nofollow' class='url'>Mike Dimmick</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040115-00/?p=41043#comment-136923">
			January 16, 2004 at 8:18 am</a>		</div>

		<p>Tom Seddon: STRICT is still there, but now if you don&#8217;t define NO_STRICT, WinDef.h defines STRICT for you.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-136933">
				<div id="div-comment-136933" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Tim Robinson</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040115-00/?p=41043#comment-136933">
			January 16, 2004 at 8:29 am</a>		</div>

		<p>So wrap the debugging messages with if (IsDebuggerPresent()). The NTDLL heap routines do this to check heap validity, and the DLL loader in NT4 did this when it had to relocate something.</p>
<p>Incidentally, that LDR relocation message in NT4 was really useful. I was disappointed to see it go when I started developing on Windows 2000. Now I&#8217;m faced with running my app in Depends and looking for red numbers. Or I could just not bother and have my programs start up a lot more slowly.</p>
<p>&lt;/moan&gt;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-137053">
				<div id="div-comment-137053" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Andreas H&#228;ber</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040115-00/?p=41043#comment-137053">
			January 17, 2004 at 4:51 am</a>		</div>

		<p>Yeah, something like IsDebuggerPresent is what I thought of above. Like I said, this is only useful for the developer, not the poor end-user (who&#8217;s stuck with the buggy program. Nice that Windows takes care of her/him).</p>
<p>Ok, the program is going really slow. Now it&#8217;s up to the developer &#8211; does (s)he start to optimize code or look at all the debug messages? :)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-137113">
				<div id="div-comment-137113" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://alias:ndiamond@msdn.discussions' rel='external nofollow' class='url'>Norman Diamond</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040115-00/?p=41043#comment-137113">
			January 18, 2004 at 4:52 pm</a>		</div>

		<p>Raymond Chen wrote on 1/15/2004 5:13 PM :</p>
<p>&gt;? I just followed the docs for<br />
<br />&gt;SetTimer/TimerProc and it compiled okay:<br />
<br />&gt;<br />
<br />&gt;void CALLBACK MyTimerProc(HWND hwnd,<br />
<br />&gt;UINT uMsg, UINT_PTR idEvent, DWORD dwTime);<br />
<br />&gt;<br />
<br />&gt;SetTimer(hwnd, 1, 1000, MyTimerProc); </p>
<p>My God.  Code used by Microsoft internally matches MSDN, but code shipped from Microsoft to victims is completely different.  Here&#8217;s what victims get when we buy VS6 and download SP5:</p>
<p>&gt;/*<br />
<br />&gt; * Windows Functions<br />
<br />&gt; */<br />
<br />&gt;<br />
<br />&gt;WINUSERAPI<br />
<br />&gt;UINT<br />
<br />&gt;WINAPI<br />
<br />&gt;SetTimer(<br />
<br />&gt;    HWND hWnd ,<br />
<br />&gt;    UINT nIDEvent,<br />
<br />&gt;    UINT uElapse,<br />
<br />&gt;    TIMERPROC lpTimerFunc);</p>
<p>When victims read MSDN and code UINT_PTR, we get compile errors.  We have to change it to UINT in order to match the declaration contained in C:Program FilesMicrosoft Visual StudioVC98IncludeWINUSER.H</p>
<p>But Microsoft&#8217;s internal distributions have UINT_PTR exactly as documented.  So you could obey MSDN and not get compilation errors.</p>
<p>No wonder Microsoft thinks that customers are lying when we report Microsoft bugs.  We see the facts but Microsoft doesn&#8217;t even see the facts internally.</p>
<p>Also by the way Mr. Chen, when we talk about Windows 95 crashing and Windows 2000 built-in drivers causing blue screens and Windows XP Windows Explorer misbehaving and stuff like that, we&#8217;re talking about the versions that customers get.  If Microsoft will try putting on some of its test machines the same versions of these products that actually get sold to victims, maybe Microsoft will see that we&#8217;re telling the truth.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-137123">
				<div id="div-comment-137123" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://alias:ndiamond@msdn.discussions' rel='external nofollow' class='url'>Norman Diamond</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040115-00/?p=41043#comment-137123">
			January 18, 2004 at 4:56 pm</a>		</div>

		<p>I quoted the declaration of SetTimer() but forgot to quote the following declaration from C:Program FilesMicrosoft Visual StudioVC98IncludeWINUSER.H (still VS6 SP5):</p>
<p>typedef VOID (CALLBACK* TIMERPROC)(HWND, UINT, UINT, DWORD);</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-137133">
				<div id="div-comment-137133" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://alias:ndiamond@msdn.discussions' rel='external nofollow' class='url'>Norman Diamond</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040115-00/?p=41043#comment-137133">
			January 18, 2004 at 5:12 pm</a>		</div>

		<p>1/15/2004 10:54 PM Raymond Chen:</p>
<p>&gt; The only reason BOOL changed to INT_PTR is<br />
<br />&gt; that the WM_CTLCOLOR messages require you to<br />
<br />&gt; return a brush handle (a pointer) cast to<br />
<br />&gt; BOOL. If it weren&#8217;t for that, dialog<br />
<br />&gt; procedures would have stayed BOOL. </p>
<p>MSDN October 2001 (which integrates with VS6) says that the WM_CTLCOLOR messages require programmers to return a brush handle cast to LRESULT.</p>
<p>How many places does MSDN say LRESULT when the actual requirement is BOOL?</p>
<p>(By the way there&#8217;s some other place where BOOL means 0, 1, or 2 for FALSE, TRUE, and OTHER.  I forgot where that was though.)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-137143">
				<div id="div-comment-137143" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://weblogs.asp.net/oldnewthing/' rel='external nofollow' class='url'>Raymond Chen</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040115-00/?p=41043#comment-137143">
			January 18, 2004 at 5:29 pm</a>		</div>

		<p>UINT_PTR was added last year for Win64. MSDN always describes the latest version of the header files. If you&#8217;re still using header files from 1998 then it&#8217;s not surprising that they won&#8217;t match today&#8217;s MSDN.</p>
<p>As for the CTLCOLOR messages: For Win32, LRESULT and BOOL are the same size, so even though it is technically incorrect, the end result is the same &#8211; no harm done. For Win64 you need to be more careful.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-137153">
				<div id="div-comment-137153" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://weblogs.asp.net/oldnewthing/' rel='external nofollow' class='url'>Raymond Chen</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040115-00/?p=41043#comment-137153">
			January 18, 2004 at 5:30 pm</a>		</div>

		<p>As for your Win95/Win2000 comments, I&#8217;m not sure what you want me to do. I can&#8217;t go into the past and fix bugs retroactively. All we can do is fix them for the future.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-137173">
				<div id="div-comment-137173" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">asdf</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040115-00/?p=41043#comment-137173">
			January 19, 2004 at 5:08 am</a>		</div>

		<p>I think that&#8217;s the tri-state checkbox you&#8217;re referring to.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-137263">
				<div id="div-comment-137263" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://alias:ndiamond@msdn.discussions' rel='external nofollow' class='url'>Norman Diamond</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040115-00/?p=41043#comment-137263">
			January 19, 2004 at 4:09 pm</a>		</div>

		<p>1/18/2004 5:29 PM Raymond Chen:</p>
<p>&gt; UINT_PTR was added last year for Win64.</p>
<p>That means 2003, but I don&#8217;t mind if you meant 2002.</p>
<p>&gt; MSDN always describes the latest version of<br />
<br />&gt; the header files.</p>
<p>No.  I use the October 2001 issue of the MSDN library, which integrates with VS6.  Even if VS6SP5 dates from 2001, public releases of VS .NET don&#8217;t.  In 2001, anyone who was using the October 2001 MSDN library and VS6SP5 did either have to code a buggly function cast or else had to violate the MSDN library.  My question still stands, are you going to put shims in future versions of Windows to support programs where victims were forced to choose between putting in buggly function casts or violating the MSDN library?</p>
<p>(As for my comments on Windows 95 and Windows 2000, I meant only to inform you that even if Microsoft doesn&#8217;t see bugs internally due to Microsoft using patches internally, victims are telling the truth when victims report their suffering from released versions.  However, since you ask what to do, here are a couple of suggestions.  SERVICE PACKS ARE STILL BEING ISSUED FOR WINDOWS 2000 AND BUGS CAN STILL BE FIXED.  For Windows 95, if Microsoft still doesn&#8217;t want to release bug fixes that it made for Windows 95 while it was also fixing them in Windows 98 development, then Microsoft can give Windows 98 first edition to victims who suffered from those bugs.)</p>
<p>(By the way, Windows XP and Windows Server 2003 are still supported products, and Microsoft ought to be capable of fixing Windows Explorer in these products.  This is a case where Windows 95 even outperforms Windows Server 2003.  Windows 95 Windows Explorer understood long filenames on hard disk drives that were attached after the system was booted.  In Windows 95, attach a SCSI hard drive through a PCMCIA SCSI adapter and you can do cut-and-paste to move a file from one directory to another.  In Windows 98 or Windows 2000, the hard drive can be either SCSI (via PCMCIA) or USB.  In Windows XP and Windows 2003, you can&#8217;t do it.  Attach a SCSI (via PCMCIA) or USB hard drive, and Windows Explorer says that the hard drive&#8217;s FAT32 partition can&#8217;t store long filenames, so you can&#8217;t even cut-and-paste an existing long filename from one directory to another.)</p>
<p>(Sorry for going way off topic.  But when your tests with Microsoft internal versions produced different results from what customers get with released versions, I needed to inform you that customers&#8217; complaints are genuine.)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-137273">
				<div id="div-comment-137273" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://weblogs.asp.net/oldnewthing/' rel='external nofollow' class='url'>Raymond Chen</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040115-00/?p=41043#comment-137273">
			January 19, 2004 at 4:13 pm</a>		</div>

		<p>&quot;when your tests with Microsoft internal versions produced different results from what customers get with released versions&quot;</p>
<p>I do all my testing for these blog entries on released versions of Windows &#8211; the version that customres have.</p>
<p>Yes bugs can be fixed in service packs, but service packs are very selective in what gets fixed and what isn&#8217;t.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-137523">
				<div id="div-comment-137523" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://alias:ndiamond@msdn.discussions.microsoft.com' rel='external nofollow' class='url'>Norman Diamond</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040115-00/?p=41043#comment-137523">
			January 20, 2004 at 5:42 pm</a>		</div>

		<p>&quot;I do all my testing for these blog entries on released versions of Windows &#8211; the version that customres have.&quot;</p>
<p>And released versions of VS6SP5?</p>
<p>How is it possible that you didn&#8217;t get compilation errors when you declared your MyTimerProc() with a UINT_PTR parameter?</p>
<p>When customers with VS6SP5 obey MSDN and declare a TimerProc function with a UNIT_PTR parameter, we get compilation errors.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-137533">
				<div id="div-comment-137533" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://alias:ndiamond@msdn.discussions.microsoft.com' rel='external nofollow' class='url'>Norman Diamond</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040115-00/?p=41043#comment-137533">
			January 20, 2004 at 5:44 pm</a>		</div>

		<p>I misspelled UINT_PTR in the above posting, but spelled it correctly in code when I got compilation errors.  Sigh.  Anyway the point is, with the released version of VS6SP5, customers cannot obey MSDN October 2001 and use UINT_PTR in our TimerProc definitions.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-137543">
				<div id="div-comment-137543" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://weblogs.asp.net/oldnewthing/' rel='external nofollow' class='url'>Raymond Chen</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040115-00/?p=41043#comment-137543">
			January 20, 2004 at 5:46 pm</a>		</div>

		<p>I use the latest Platform SDK headers, which includes basetsd.h, and basetsd.h is the header file that defines the Win64 types.</p>
<p><a target="_new" href="http://msdn.microsoft.com/library/en-us/win64/win64/the_tools.asp" rel="nofollow">http://msdn.microsoft.com/library/en-us/win64/win64/the_tools.asp</a></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-138293">
				<div id="div-comment-138293" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://alias:ndiamond@msdn.discussions.microsoft.com' rel='external nofollow' class='url'>Norman Diamond</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040115-00/?p=41043#comment-138293">
			January 22, 2004 at 11:43 pm</a>		</div>

		<p>Back to the BOOL tangent, there&#8217;s a famous case where BOOL can be zero for FALSE, nonzero for TRUE, or -1 for OTHER.  GetMessage().</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-139723">
				<div id="div-comment-139723" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://alias:ndiamond@msdn.discussions.microsoft.com' rel='external nofollow' class='url'>Norman Diamond</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040115-00/?p=41043#comment-139723">
			January 28, 2004 at 4:55 pm</a>		</div>

		<p>1/18/2004 5:29 PM Raymond Chen:  &quot;MSDN always describes the latest version of the header files.&quot;</p>
<p>Could be.  But let&#8217;s try to figure out which versions of Windows OSes it describes.  Here are two quotations from<br />
<br /><a target="_new" href="http://msdn.microsoft.com/library/default.asp?url=/library/en-us/vclib/html/_mfc_CWinApp.3a3a.RegisterShellFileTypes.asp" rel="nofollow">http://msdn.microsoft.com/library/default.asp?url=/library/en-us/vclib/html/_mfc_CWinApp.3a3a.RegisterShellFileTypes.asp</a></p>
<p>&quot;Call this member function to register all of your application&#8217;s document types with the Windows File Manager.&quot;</p>
<p>&quot;This allows the user to open a data file created by your application by double-clicking it from within File Manager.&quot;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-139913">
				<div id="div-comment-139913" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://weblogs.asp.net/oldnewthing/' rel='external nofollow' class='url'>Raymond Chen</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040115-00/?p=41043#comment-139913">
			January 29, 2004 at 6:51 pm</a>		</div>

		<p>Allow me to clarify.  The &quot;Platform SDK&quot; always corresponds to the latest public header files.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-140713">
				<div id="div-comment-140713" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blogs.msdn.com/oldnewthing/archive/2004/02/02/66477.aspx' rel='external nofollow' class='url'>The Old New Thing</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040115-00/?p=41043#comment-140713">
			February 2, 2004 at 11:23 pm</a>		</div>

		
		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-140883">
				<div id="div-comment-140883" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://baby.homeip.net/patrick/archives/000142.php' rel='external nofollow' class='url'>Simply Patrick</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040115-00/?p=41043#comment-140883">
			February 3, 2004 at 1:28 pm</a>		</div>

		<p>??????,??????????? ?????????? calling convention: The history of calling conventions, part 1 The history of calling conventions, part 2 The history of calling conventions, part 3 The history of calling conventions, part 4: ia64 Why do member functions need to be&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-141333">
				<div id="div-comment-141333" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://alias:ndiamond@msdn.discussions.microsoft.com' rel='external nofollow' class='url'>Norman Diamond</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040115-00/?p=41043#comment-141333">
			February 5, 2004 at 11:12 pm</a>		</div>

		<p>Oh neat, here&#8217;s a case where Microsoft made a patch to break a previously working feature of Visual Studio .NET 2002.  Presumably in Visual Studio .NET 2003 it&#8217;s already broken from the start, but I&#8217;m not in the mood to test.  Oddly they treat it the same as some of their patches which really fix real bugs in Windows, by requiring support calls.  The fee might be canceled if Microsoft determines that the patch will resolve a problem, but the only possible effect of this patch is to encourage further breakage.</p>
<p><a target="_new" href="http://support.microsoft.com/default.aspx?scid=kb;ja;813340&amp;Product=vsnet" rel="nofollow">http://support.microsoft.com/default.aspx?scid=kb;ja;813340&#038;Product=vsnet</a></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-154493">
				<div id="div-comment-154493" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blogs.msdn.com/joshwil/archive/2004/03/16/90612.aspx' rel='external nofollow' class='url'>Josh Williams</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040115-00/?p=41043#comment-154493">
			March 16, 2004 at 2:28 pm</a>		</div>

		
		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-191953">
				<div id="div-comment-191953" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.cnblogs.com/flier/archive/2004/07/08/22346.aspx' rel='external nofollow' class='url'>Flier's Sky</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040115-00/?p=41043#comment-191953">
			July 7, 2004 at 11:03 pm</a>		</div>

		<p>The history of calling conventions</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-232493">
				<div id="div-comment-232493" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://weblogs.asp.net/cweyer/archive/0001/01/01/275306.aspx' rel='external nofollow' class='url'>Christian Weyer: Smells like service spirit</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040115-00/?p=41043#comment-232493">
			December 6, 2004 at 3:40 am</a>		</div>

		
		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-237003">
				<div id="div-comment-237003" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://pluralsight.com/blogs/mike/archive/2004/12/24/4075.aspx' rel='external nofollow' class='url'>Some Assembly Required</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040115-00/?p=41043#comment-237003">
			December 24, 2004 at 11:06 am</a>		</div>

		
		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-554203">
				<div id="div-comment-554203" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blogs.msdn.com/larryosterman/archive/2007/09/26/what-s-wrong-with-this-code-part-21-a-psychic-debugging-example-the-answers.aspx' rel='external nofollow' class='url'>Larry Osterman's WebLog</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040115-00/?p=41043#comment-554203">
			September 26, 2007 at 4:17 pm</a>		</div>

		<p>So for the past couple of posts , I&#8217;ve been walking through a psychic debugging experience I had over</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-636183">
				<div id="div-comment-636183" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://channel9.msdn.com/posts/TheChannel9Team/The-NET-CLR-Team-Tour-Part-II/#CommentID=29028' rel='external nofollow' class='url'>Channel 9</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040115-00/?p=41043#comment-636183">
			June 4, 2008 at 8:32 pm</a>		</div>

		<p>You could in fact have the same set of API&#8217;s in a variety of library formats.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-644423">
				<div id="div-comment-644423" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://webhat.wordpress.com/2008/07/03/7/' rel='external nofollow' class='url'>Free Memory with RUNDLL32 &laquo; General Musing</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040115-00/?p=41043#comment-644423">
			July 3, 2008 at 12:56 pm</a>		</div>

		<p>PingBack from <a rel="nofollow" target="_new" href="http://webhat.wordpress.com/2008/07/03/7/" rel="nofollow">http://webhat.wordpress.com/2008/07/03/7/</a></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-653763">
				<div id="div-comment-653763" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://geeks.netindonesia.net/blogs/lontong/archive/2008/08/04/calling-convention-mismatch.aspx' rel='external nofollow' class='url'>LonTonG</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040115-00/?p=41043#comment-653763">
			August 4, 2008 at 1:59 am</a>		</div>

		<p>Yesterday, when i delivered a session at MIC UI on Win32 IO operation, we hit C2664 error. (this is a</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>