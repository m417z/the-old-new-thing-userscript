<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (44)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-1042203">
				<div id="div-comment-1042203" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Kujo</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130228-01/?p=5103#comment-1042203">
			February 28, 2013 at 8:01 am</a>		</div>

		<p>Hah, and so &quot;0.1f&quot; would produce &quot;1.$&quot; and &quot;0.3f&quot; would produce &quot;1.#IO&quot;. &nbsp;Excellent. &nbsp;I just love that there can still be corner cases to printf/scanf that I haven&#39;t encountered yet.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-maurits odd alt thread-odd thread-alt depth-1" id="comment-1042253">
				<div id="div-comment-1042253" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Maurits+%5BMSFT%5D' rel='external nofollow' class='url'>Maurits [MSFT]</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130228-01/?p=5103#comment-1042253">
			February 28, 2013 at 8:23 am</a>		</div>

		<p>Or if you have Unicode, just go right for ∞</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1042263">
				<div id="div-comment-1042263" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">AC</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130228-01/?p=5103#comment-1042263">
			February 28, 2013 at 8:49 am</a>		</div>

		<blockquote><p>
  The second character is &quot;I&quot;. Now we need to round it. That&#39;s done by inspecting the third character, which is &quot;N&quot;.
</p></blockquote>
<p>At this point I was already thinking: &quot;ROT13 of A is N, so N is in the second half of the alphabet and get&#39;s rounded up. Wait, WTF?!?&quot;</p>
<p>The given explanation thankfully makes a lot more sense than that.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1042283">
				<div id="div-comment-1042283" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Jim</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130228-01/?p=5103#comment-1042283">
			February 28, 2013 at 9:08 am</a>		</div>

		<p>Very interesting, I wonder how he figured those useless details out??</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1042293">
				<div id="div-comment-1042293" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">AsmGuru62</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130228-01/?p=5103#comment-1042293">
			February 28, 2013 at 9:22 am</a>		</div>

		<p>@Jim: probably by disassembling the VC RTL.</p>
<div class="post">[<em>No need to disassemble. Visual Studio includes the source code to the C Runtime Library. -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-maurits odd alt thread-odd thread-alt depth-1" id="comment-1042323">
				<div id="div-comment-1042323" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Maurits+%5BMSFT%5D' rel='external nofollow' class='url'>Maurits [MSFT]</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130228-01/?p=5103#comment-1042323">
			February 28, 2013 at 9:57 am</a>		</div>

		<p>@AC I had the same initial thought&#8230; A-M round down, N-Z round up</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1042343">
				<div id="div-comment-1042343" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Igor Tandetnik</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130228-01/?p=5103#comment-1042343">
			February 28, 2013 at 10:11 am</a>		</div>

		<p>For what it&#39;s worth, the C99 standard (I don&#39;t have a copy of C90 handy) explicitly prescribes how printf() should output infinite and NaN values:</p>
<p>7.19.6.1p8 &#8230;A double argument representing an infinity is converted in one of the styles [-]inf or [-]infinity — which style is implementation-defined. A double argument representing a NaN is converted in one of the styles [-]nan or [-]nan(n-char-sequence) — which style, and the meaning of any n-char-sequence, is implementation-defined. The F conversion specifier produces INF, INFINITY, or NAN instead of inf, infinity, or nan, respectively.234)</p>
<p>Footnote 234) When applied to infinite and NaN values, the -, +, and space flag characters have their usual meaning; the # and 0 flag characters have no effect.</p>
<p>MSVC is non-conforming in this regard.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1042373">
				<div id="div-comment-1042373" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">mikeb</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130228-01/?p=5103#comment-1042373">
			February 28, 2013 at 10:48 am</a>		</div>

		<p>@Igor:</p>
<p>Unfortunately, MSVC doesn&#39;t claim conformance with C99. &nbsp;C90 doesn&#39;t seem to say what should be output when the argument represents an infinity.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1042383">
				<div id="div-comment-1042383" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Andrew</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130228-01/?p=5103#comment-1042383">
			February 28, 2013 at 11:16 am</a>		</div>

		<p>Thank you for the last paragraph. &nbsp;Just thank you.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1042393">
				<div id="div-comment-1042393" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">j b</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130228-01/?p=5103#comment-1042393">
			February 28, 2013 at 11:23 am</a>		</div>

		<p>Funny observation: This wouldn&#39;t happen in Norway&#8230;</p>
<p>Norwegian (like other Scandinavian languages) adds three extra letters (Æ, Ø Å) at the end of the alphabet, so the middle character is &#39;O&#39; (which is easy to remember, as it looks the same from both sides&#8230;), and &#39;N&#39; is in the lower half.</p>
<p>This obviously assumes that the rounding is bsed on the character number in the alphabet, counting from &#39;A&#39; to the last character (&#39;Å&#39; &nbsp;in the Norwegian alphabet).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1042403">
				<div id="div-comment-1042403" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">mikeb</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130228-01/?p=5103#comment-1042403">
			February 28, 2013 at 11:24 am</a>		</div>

		<blockquote><p>
  &gt; and &#39;N&#39; is in the lower half.
</p></blockquote>
<p>but it&#39;s still greater than &#39;5&#39;.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1042413">
				<div id="div-comment-1042413" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">CherryDT</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130228-01/?p=5103#comment-1042413">
			February 28, 2013 at 12:10 pm</a>		</div>

		<p>@j b: 5 has ASCII code 53 while N has ASCII code 78, so N is always greater than 5.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1042433">
				<div id="div-comment-1042433" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Lars</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130228-01/?p=5103#comment-1042433">
			February 28, 2013 at 1:47 pm</a>		</div>

		<p>Actually, the sign for a rounded [i] is not [ü], but [y] (in the International Phonetic Alphabet, which is what you&#39;d be using when discussing phonetics /per se/, not the study of a particular language where things may be different). But then, you&#39;d have to invent a way of getting the brackets into place (because without them, you shouldn&#39;t parse i as a phonetic entity at all &#8211; that would be considered a bug).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1042443">
				<div id="div-comment-1042443" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blogs.msdn.com/passport_4000_gentlyusedunderwear.com/ProfileUrlRedirect.ashx' rel='external nofollow' class='url'>passport@gentlyusedunderwear.com</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130228-01/?p=5103#comment-1042443">
			February 28, 2013 at 2:07 pm</a>		</div>

		<p>Is this another but that&#39;s doomed to be in windows forever for &quot;compatibility reasons&quot;?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1042463">
				<div id="div-comment-1042463" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Cesar</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130228-01/?p=5103#comment-1042463">
			February 28, 2013 at 3:03 pm</a>		</div>

		<p>@Rosyna: probably not. Every new version of MSVC has a new separate copy of the C runtime with a different name (unlike on most Unix systems, where there is a single C runtime shared by all compilers &#8211; yet another cause of pain when porting software for Windows). So a new version of MSVC could fix all these bugs, without risking breaking anything, since only new applications would link to the new C runtime.</p>
<div class="post">[<em>The flip side is that these sorts of subtle behavioral changes may prevent people from upgrading to MSVC version N+1. &quot;We upgraded to MSVC version N+1 and our reports don&#39;t print properly (because a change in output format caused one of the output lines to go longer than 80 characters, which messed up the columns, and a downstream consumer couldn&#39;t parse it correctly).&quot; (Also, does Unix really have more than one C compiler?) -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-andycadley2 odd alt thread-odd thread-alt depth-1" id="comment-1042473">
				<div id="div-comment-1042473" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/AndyCadley' rel='external nofollow' class='url'>AndyCadley</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130228-01/?p=5103#comment-1042473">
			February 28, 2013 at 3:13 pm</a>		</div>

		<p>@Cesar: The world of compatibility is never that easy, alas, as anyone reading this blog already knows. An existing C codebase being compiled in a new version of Visual Studio would subtly change behaviour if the C runtime changed and that leads to all manner of potentially exciting new bugs in code that&#39;s already been long tested. At this point the cost of &quot;fixing&quot; the behaviour to C99 conformance may well be higher than the benefits gained from compliance. Increasingly so as less and less new application development is done in C.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1042493">
				<div id="div-comment-1042493" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Daniel Neely</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130228-01/?p=5103#comment-1042493">
			February 28, 2013 at 3:51 pm</a>		</div>

		<p>&quot;Also, does Unix really have more than one C compiler?&quot;</p>
<p>IIRC The Solaris shell I used as a student a dozenish years ago had two. &nbsp;gcc and cc; the latter I assume was Sun&#39;s proprietary version. &nbsp;On newer systems you can use clang+llvm instead of gcc. &nbsp;If only for legacy support I wouldn&#39;t be surprised if the few lingering proprietary unixes still provide their legacy compilers even if they&#39;re no longer under active development.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1042503">
				<div id="div-comment-1042503" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Daniel Neely</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130228-01/?p=5103#comment-1042503">
			February 28, 2013 at 3:53 pm</a>		</div>

		<p>This makes me wonder what competing pre-C99 compilers output.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1042513">
				<div id="div-comment-1042513" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Evan</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130228-01/?p=5103#comment-1042513">
			February 28, 2013 at 4:15 pm</a>		</div>

		<blockquote><p>
  &quot;Also, does Unix really have more than one C compiler?&quot;
</p></blockquote>
<p>GCC is pretty darn dominant, but as Daniel says, there are others.</p>
<p>With some regularity I use GCC, Intel&#39;s, and Clang. At one point or another I&#39;ve also used Sun&#39;s (I&#39;m not sure I have access to a Sun machine any more) as well as Pathscale&#39;s. Apparently I also have access to the Portland Group compilers&#8230; but I am not sure I&#39;ve ever used them.</p>
<blockquote><p>
  &quot;This makes me wonder what competing pre-C99 compilers output.&quot;
</p></blockquote>
<p>I tried GCC 2.95 (1999), but it just picks up the modern libc. (I wish that Sparc machine were up&#8230; I&#39;ve got 2.7 that&#39;ll run on that and Alpha. :-))</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1042523">
				<div id="div-comment-1042523" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blogs.msdn.com/passport_4000_gentlyusedunderwear.com/ProfileUrlRedirect.ashx' rel='external nofollow' class='url'>passport@gentlyusedunderwear.com</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130228-01/?p=5103#comment-1042523">
			February 28, 2013 at 5:08 pm</a>		</div>

		<p>But you don&#39;t have any proof that someone will run into this problem. Yet the bug still won&#39;t be addressed. It&#39;ll just always be there with a note somewhere saying &quot;1#J&quot; Means &quot;infinite&quot;.</p>
<p>What does printf do in the Visual C runtime if the answer is NaN?</p>
<div class="post">[<em>And you have no proof that someone <span style="text-decoration:underline;">won&#39;t</span> run into this problem. I&#39;ve seen apps break for much less significant change than this. I mean, we&#39;re <span style="text-decoration:underline;">changing the length of a string</span>. Lots of Web sits broke because the IE user agent string got one character longer (&quot;MSIE9&quot; to &quot;MSIE10&quot;). -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1042533">
				<div id="div-comment-1042533" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blogs.msdn.com/passport_4000_gentlyusedunderwear.com/ProfileUrlRedirect.ashx' rel='external nofollow' class='url'>passport@gentlyusedunderwear.com</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130228-01/?p=5103#comment-1042533">
			February 28, 2013 at 5:29 pm</a>		</div>

		<p>It&#39;s a moot point. Microsoft has publicly stated they will never support anything newer than C90 in Visual Studio (<a rel="nofollow" target="_new" href="http://www.infoq.com/news/2012/05/vs_c99_support" rel="nofollow">http://www.infoq.com/&#8230;/vs_c99_support</a>). So that&#39;s a dead-end. From that statement it seems like there has never been a MSVC+1 since C90 support was added. It seems @Cesar&#39;s comment was on the money. VS ships a C compiler with a C runtime that&#39;s trapped in time.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1042543">
				<div id="div-comment-1042543" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">CherryDT</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130228-01/?p=5103#comment-1042543">
			February 28, 2013 at 5:29 pm</a>		</div>

		<blockquote><p>
  What does printf do in the Visual C runtime if the answer is NaN?
</p></blockquote>
<p>Didn&#39;t test it, but I assume it would be:</p>
<p>1.$</p>
<p>1.#T</p>
<p>1.#SO</p>
<p>1.#SNB</p>
<p>1.#SNAN</p>
<p>1.$</p>
<p>1.#R</p>
<p>1.#QO</p>
<p>1.#QNB</p>
<p>1.#QNAN</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1042573">
				<div id="div-comment-1042573" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">JustSomeGuy</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130228-01/?p=5103#comment-1042573">
			February 28, 2013 at 8:07 pm</a>		</div>

		<p>It&#39;s only a bug if it&#39;s wrong (and it isn&#39;t). Since MS have stated they&#39;re not attempting full C99 compliance, and ISO C90 does not specify what gets printed for these out-of-bound values, MS can pretty much do whatever it wants.</p>
<p>In any case MS DON&#39;T ship a C compiler, they ship a C++ compiler that happens to compile C code. If you want compliance with the latest and greatest C, use gcc et al.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1042583">
				<div id="div-comment-1042583" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Artem S. Tashkinov</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130228-01/?p=5103#comment-1042583">
			March 1, 2013 at 12:00 am</a>		</div>

		<p>Hello!</p>
<p>This post will be 100% off topic but since your are on a Windows development team I thought I would let you know.</p>
<p>We have discovered that the &quot;turn off windows write-cache buffer flushing on the device&quot; option (enabled) causes data loss on reboot when installing Windows updates. We had at least four incidents when our PCs became unbootable since crucial Windows files were wiped out on reboot.</p>
<p>I wonder if your team could investigate this issue and release a fix for it.</p>
<p>Thank you.</p>
<div class="post">[<em>Dangerous setting is dangerous. -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1042593">
				<div id="div-comment-1042593" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">A. Skrobov</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130228-01/?p=5103#comment-1042593">
			March 1, 2013 at 1:12 am</a>		</div>

		<p>In the older post, you say: &quot;Positive and negative infinity are generated .. when the mathematical result of an operation is infinite, such as taking the logarithm of positive zero.&quot;</p>
<p>In fact, x86 returns -1.#INF as the logarithm of negative zero, too. Only non-zero negative values result in a -1.#IND.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1042603">
				<div id="div-comment-1042603" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">GP</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130228-01/?p=5103#comment-1042603">
			March 1, 2013 at 2:44 am</a>		</div>

		<p>Hello Artem,</p>
<p>so you think Raimond will investigate, and release a &quot;fix&quot; for it. Maybe he&#39;ll send it to you by mail ;-). This blog is no alternative to Product Support Services!</p>
<p>BTW: By checking the specified option, you allow Windows NOT to flush data. So everything ok here!</p>
<p>[Flushing your performance down the drain, that is &#8211; The Old New Thing &#8211; Site Home &#8211; MSDN Blogs]</p>
<p><a href="http://blogs.msdn.com/b/oldnewthing/archive/2010/09/09/10059575.aspx" target="_new" rel="nofollow">blogs.msdn.com/&#8230;/10059575.aspx</a></p>
<p>&quot;To prevent data loss, do not select this check box unless the device has a separate power supply that allows the device to flush its buffer in case of power failure.&quot;</p>
<p>GP</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1042613">
				<div id="div-comment-1042613" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ooh</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130228-01/?p=5103#comment-1042613">
			March 1, 2013 at 3:02 am</a>		</div>

		<p>@Artem S. Tashkinov: You asked for trouble, you got trouble. Where&#39;s the problem? It&#39;s NOT a bug since the product behaves exactly how it should and is documented.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1042623">
				<div id="div-comment-1042623" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Carry ?</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130228-01/?p=5103#comment-1042623">
			March 1, 2013 at 3:33 am</a>		</div>

		<p>One thing I don&#39;t get is why it doesn&#39;t get to 2#0 or other dumb value, since &quot;I&quot; is also greater than &quot;9&quot; in ASCII and the carry logic should somehow trigger and provide an even dumber print (just like 1.995 would get you &quot;2.00&quot; and not &quot;1.9:&quot;). Where am I wrong ?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1042633">
				<div id="div-comment-1042633" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">CherryDT</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130228-01/?p=5103#comment-1042633">
			March 1, 2013 at 4:34 am</a>		</div>

		<p>Maybe the logic says basically while(character[i] == &#39;:&#39;) {character[i] = &#39;0&#39;; character[i&#8211;]++;} so everything else except rounding 9 to 0 instead of : is not handled&#8230;?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1042643">
				<div id="div-comment-1042643" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Allan Peda</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130228-01/?p=5103#comment-1042643">
			March 1, 2013 at 5:19 am</a>		</div>

		<p>With the increasing pervasiveness of Unicode, is it possible now to use the Infinity symbol ( &infin;) instead of &quot;INF:, sidestepping much of this oddness?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1042653">
				<div id="div-comment-1042653" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Random832</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130228-01/?p=5103#comment-1042653">
			March 1, 2013 at 5:54 am</a>		</div>

		<p>[No need to disassemble. Visual Studio includes the source code to the C Runtime Library. -Raymond]</p>
<p>I looked when you posted the last article &#8211; It includes the source to most of the C Runtime Library, but if it includes the source to _cfltcvt (which appears to be where the meat is, based on looking at _output) at all, I couldn&#39;t locate it. I had assumed parts of the library relating to floating point couldn&#39;t be distributed because they weren&#39;t owned by Microsoft or something.</p>
<div class="post">[<em>You&#39;re right. I don&#39;t know why they left out the floating point stuff. -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1042663">
				<div id="div-comment-1042663" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Random832</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130228-01/?p=5103#comment-1042663">
			March 1, 2013 at 6:02 am</a>		</div>

		<p>The only way to change this while maintaining compatibility is to do something like symbol versioning &#8211; the function used in &quot;C99 mode&quot; (or C++1x mode) maps to a different function in the DLL than the one used in other modes, and choosing between them has to be handled by the compiler. Something like this is done by glibc, but it doesn&#39;t support building new apps using the old versions of functions (at least, not without doing something exotic with a linker script, or using the old library at link time), and it&#39;s exactly as much of a mess as it sounds like.</p>
<p>@Allan Peda &#8211; no. If you want to do it, you can write your own formatting function, but there&#39;s no good reason to put it in printf and many good reasons not to.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1042673">
				<div id="div-comment-1042673" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">CherryDT</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130228-01/?p=5103#comment-1042673">
			March 1, 2013 at 6:19 am</a>		</div>

		<p>Correction of my post before: &#8211;i, not i&#8211;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1042683">
				<div id="div-comment-1042683" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Jeff</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130228-01/?p=5103#comment-1042683">
			March 1, 2013 at 6:39 am</a>		</div>

		<p>When I round up infinity I get ∟ (right angle character). So now we know what comes after infinity! Angles!</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-maurits even thread-even depth-1" id="comment-1042723">
				<div id="div-comment-1042723" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Maurits+%5BMSFT%5D' rel='external nofollow' class='url'>Maurits [MSFT]</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130228-01/?p=5103#comment-1042723">
			March 1, 2013 at 7:31 am</a>		</div>

		<p>@Jeff: when I round up infinity I get infinity.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1042733">
				<div id="div-comment-1042733" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">CarlD</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130228-01/?p=5103#comment-1042733">
			March 1, 2013 at 8:04 am</a>		</div>

		<p>[You&#39;re right. I don&#39;t know why they left out the floating point stuff. -Raymond]</p>
<p>From my years as a C++ MVP, I believe it&#39;s because that code (and most/all of the lowest-level FP code) is licensed from another entity under terms that don&#39;t give MSFT the right to redistribute the source code.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1042773">
				<div id="div-comment-1042773" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Adam Rosenfield</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130228-01/?p=5103#comment-1042773">
			March 1, 2013 at 8:43 am</a>		</div>

		<p>Although Visual Studio is likely to never support C99, I&#39;m hopeful that they may decide to support C11. &nbsp;C11 makes optional some of the mandatory parts of C99 which are difficult to implement (namely variable-length arrays). &nbsp;I think it&#39;s still unlikely, but I can always hope&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1042813">
				<div id="div-comment-1042813" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">mikeb</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130228-01/?p=5103#comment-1042813">
			March 1, 2013 at 9:37 am</a>		</div>

		<blockquote><p>
  &gt; In any case MS DON&#39;T ship a C compiler, they ship a C++ compiler that happens to compile C code.
</p></blockquote>
<p>So a compiler that compiles C code isn&#39;t a C compiler?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1042903">
				<div id="div-comment-1042903" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Doug</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130228-01/?p=5103#comment-1042903">
			March 1, 2013 at 11:57 am</a>		</div>

		<p>@Jeff: An angle past infinity? &nbsp;Perhaps some kind of non-Euclidean geometry where the angle is acute but behaves as if it were obtuse? &nbsp;Possibly insidiously curious enough to drive a man mad?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1042923">
				<div id="div-comment-1042923" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">mikeb</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130228-01/?p=5103#comment-1042923">
			March 1, 2013 at 1:16 pm</a>		</div>

		<blockquote><p>
  So now we know what comes after infinity! Angles!
</p></blockquote>
<p>It&#39;s angles all the way down!</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1042963">
				<div id="div-comment-1042963" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Infinity plus -e^jπ. - Doh!</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130228-01/?p=5103#comment-1042963">
			March 1, 2013 at 3:48 pm</a>		</div>

		<p>I personally like #J. J is one better than I.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-maurits odd alt thread-odd thread-alt depth-1" id="comment-1042973">
				<div id="div-comment-1042973" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Maurits+%5BMSFT%5D' rel='external nofollow' class='url'>Maurits [MSFT]</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130228-01/?p=5103#comment-1042973">
			March 1, 2013 at 3:58 pm</a>		</div>

		<blockquote><p>
  So a compiler that compiles C code isn&#39;t a C compiler?
</p></blockquote>
<p>A compiler that compiles all kinds of C code is an ideal C compiler.</p>
<p>A compiler that compiles almost all kinds of C code, most of the time, with the occasional bug, is a real C compiler.</p>
<p>A compiler that compiles a fair amount of C code, with significant chunks of standards support missing, and no plans to add them, begins to not be a C compiler anymore.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1043113">
				<div id="div-comment-1043113" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">640k</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130228-01/?p=5103#comment-1043113">
			March 2, 2013 at 12:42 pm</a>		</div>

		<p>The ∞ character has been in DOS character table since day 1, there&#39;s NO excuse to not use it.</p>
<p>It has also always been in the ANSI table. A compiler which can only compile windows binaries should of course use characters which exist in the OS for which it compiles binaries. I suppose the compiler guys didn&#39;t like the OS they developed the compiler for.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1043183">
				<div id="div-comment-1043183" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">ErikF</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130228-01/?p=5103#comment-1043183">
			March 3, 2013 at 9:17 am</a>		</div>

		<p>@640k: Which ANSI table would that be? True, it&#39;s in the IBM-437 codepage but I don&#39;t see the infinity symbol in the 850 Latin-1 codepage (or the 720 Arabic, or 737 Greek, or 855 Cyrillic, etc.) Sticking with ASCII seems like a better option if you&#39;re not in a position where you can assume anything about the character set that a program is using; it covers basically every case except for EBCDIC and a few other odd cases.</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>