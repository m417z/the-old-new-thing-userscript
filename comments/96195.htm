<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (5)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment byuser comment-author-iboyd even thread-even depth-1" id="comment-1296935">
				<div id="div-comment-1296935" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/IanBoyd' rel='external nofollow' class='url'>IanBoyd</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170519-00/?p=96195#comment-1296935">
			May 19, 2017 at 8:10 am</a>		</div>

		<p>I was dealing with <a href=http://stackoverflow.com/q/41382501/12597 rel="nofollow">leaking up to the 10,000 GDI handle limit a few months ago</a>. My trick was to detour the various GDI object creation function (e.g. CreateFont, CreatePen, CreateBrush, CreateBitmap) and the corresponding destroy functions (e.g. DeleteObject, DestroyIcon), and match up that everything created was also destroyed. Anything that wasn&#8217;t: log it on application shutdown.</p>
<p>Very quickly found the HFONT being leaking during custom paint of a control.</p>
<p>&gt; Forgetting to delete the bitmaps that come out of the Get­Icon­Info family of functions is a common mistake.</p>
<p>Excuse me one moment. I have to go do a thing over there with some stuff.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1296975">
				<div id="div-comment-1296975" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://aloiskraus.wordpress.com/' rel='external nofollow' class='url'>Alois Kraus</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170519-00/?p=96195#comment-1296975">
			May 19, 2017 at 3:40 pm</a>		</div>

		<p>I normally use also some hooking to find out what is beeing leaked. But first I would try to find which GDI objects are actually leaked with a Windbg script which also works with memory dumps: <a href="https://aloiskraus.wordpress.com/2016/06/25/show-gdi-handles-by-type-in-windbg/" rel="nofollow">https://aloiskraus.wordpress.com/2016/06/25/show-gdi-handles-by-type-in-windbg/</a><br />
EasyHook and ETW are a powerful combination if you have myriads of function calls to track and you want to find only the call stacks which are actually leaking something: <a href="http://geekswithblogs.net/akraus1/archive/2016/01/30/172079.aspx" rel="nofollow">http://geekswithblogs.net/akraus1/archive/2016/01/30/172079.aspx</a> This contains an example for CreateWindow which can easily be extended to some other method you are after.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1296995">
				<div id="div-comment-1296995" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Neil</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170519-00/?p=96195#comment-1296995">
			May 20, 2017 at 3:50 am</a>		</div>

		<p>Or if you happen have symbols for a function with the same signature as GetObjectW then you can use your &#8220;stupid&#8221; debugger trick.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1297016">
				<div id="div-comment-1297016" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://the-sz.com/products/bear/' rel='external nofollow' class='url'>The SZ</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170519-00/?p=96195#comment-1297016">
			May 22, 2017 at 12:33 am</a>		</div>

		<p>You can use Bear from <a href="http://the-sz.com/products/bear/" rel="nofollow">http://the-sz.com/products/bear/</a> to see the bitmaps visually&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1297556">
				<div id="div-comment-1297556" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">James</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170519-00/?p=96195#comment-1297556">
			May 24, 2017 at 8:19 pm</a>		</div>

		<p>There are also tools to view the leaked GDI resources (I have one called GDILeaks/GDIUsage.exe; I don&#8217;t remember where I got it; I think it&#8217;s mentioned at <a href="https://blogs.msdn.microsoft.com/dsui_team/2013/04/23/debugging-a-gdi-resource-leak/" rel="nofollow">https://blogs.msdn.microsoft.com/dsui_team/2013/04/23/debugging-a-gdi-resource-leak/</a> , but the link there is broken).</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>