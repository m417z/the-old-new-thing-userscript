<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (15)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-396483">
				<div id="div-comment-396483" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">BryanK</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060629-00/?p=30693#comment-396483">
			June 29, 2006 at 11:09 am</a>		</div>

		<p>According to the NMTTDISPINFO reference in MSDN, the pdi-&gt;szText buffer is only 80 bytes wide (enough for 40 UCS-2/UTF-16 characters, assuming none of the characters are surrogates because you need to display one of the Unicode code-points above 65535). </p>
<p>Now, here you&#8217;re only putting a maximum of 13 characters in it (the maximum value a 32-bit number can hold), so 26 bytes, but it seems a bit &#8230; iffy security-wise to rely on that. &nbsp;Wouldn&#8217;t it be better to use wsnprintf (if that&#8217;s available; MSDN&#8217;s search doesn&#8217;t know what it is, and Google doesn&#8217;t know much about it)? </p>
<p>Of course, maybe that would detract from the educational value of the article. &nbsp;But it seems that things like that get overlooked way too often in production code, where it really does matter. &nbsp;At least a note might have been good. </p>
<p>(To really do it right, you probably need to malloc a buffer in lpszText, try to wsnprintf, passing the size of the buffer, then check the return value of wsnprintf to ensure it&#8217;s &lt; the size (accounting for the possibility that one byte != one character; I don&#8217;t know the contract of wsnprintf for sure, because MSDN doesn&#8217;t have it). &nbsp;If it&#8217;s equal or bigger, then the buffer&#8217;s size would be set to the return value of wsnprintf, using realloc, and then wsnprintf would be called again. &nbsp;If there&#8217;s a chance of something else (e.g. another control&#8217;s WndProc or something; DoEvents in VB6 causes this kind of thing) modifying g_iItemTip between the two calls to wsnprintf, then you&#8217;ll need to make this into a loop. &nbsp;Or (if the &#8220;something else&#8221; was another thread) add a lock around the entire wsnprintf / realloc / wsnprintf sequence, and around any modifications to g_iItemTip.)</p>
<div CLASS=post>[<i>Yes, I&#8217;m taking advantage of the fact that result fits into the provided buffer. One issue per article. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-396493">
				<div id="div-comment-396493" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">josh</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060629-00/?p=30693#comment-396493">
			June 29, 2006 at 12:49 pm</a>		</div>

		<p>BryanK: If you&#8217;re doing Win32-specific stuff anyway, you might as well use FormatMessage instead of wsnprintf. &nbsp;You can even have it alloc the buffer for you.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-396503">
				<div id="div-comment-396503" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Locke</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060629-00/?p=30693#comment-396503">
			June 29, 2006 at 3:38 pm</a>		</div>

		<p>Thank you for this series of tooltip posts. They are great!</p>
<p>BTW.. like some others, I am not seeing a border drawn around the tooltip every time it is displayed. The first popup of the tooltip shows a border, then each successive popup does not show a border UNTIL I move the move the mouse around for an extended period of time, then hover again over an item. I see that tooltips have different delay times for reshow / initial popups (see TTM_GETDELAYTIME for info) . Maybe when the tooltip considers it a &#8216;reshow&#8217; timeout, the border is not drawn for some reason?</p>
<p>The follow two pictures were taken from moving to the bottom bar, then up 1 bar and back again:<br />
<br /><a rel="nofollow" target="_new" href="http://www.uploadfile.info/uploads/19b6a6b9c1.png" rel="nofollow">http://www.uploadfile.info/uploads/19b6a6b9c1.png</a></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-396513">
				<div id="div-comment-396513" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">BryanK</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060629-00/?p=30693#comment-396513">
			June 29, 2006 at 4:42 pm</a>		</div>

		<p>One issue per article is fine, of course, but I wouldn&#8217;t be surprised if someone grabbed the code given here and used it in a production program, with a tooltip longer than 80 bytes (40 Unicode characters, assuming no surrogates). &nbsp;And then got burned because of a buffer overflow. </p>
<p>Just a comment in the code might be nice. &nbsp;(&#8220;Beware: szText is only 80 bytes wide.&#8221; should be sufficient.) </p>
<p>Regarding FormatMessage: Yeah, that might be helpful. &nbsp;I don&#8217;t remember at the moment whether it can take a fixed format string, or if the format string has to be a DLL resource, but either way it&#8217;d work. &nbsp;(If and only if FormatMessage is allocating the buffer, anyway.)</p>
<div CLASS=post>[<i>Comment added, thanks. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-396533">
				<div id="div-comment-396533" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.guyswithtowels.com' rel='external nofollow' class='url'>Tim</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060629-00/?p=30693#comment-396533">
			June 29, 2006 at 7:49 pm</a>		</div>

		<p>Thanks for the tooltip stuff &#8211; is there more to come?</p>
<p>I want to know, mainly to see if you cover balloon help, and why NIN_BALLOONUSERCLICK in particular seems to be an entirely fictional event&#8230; :-) </p>
<p>(at least, on my XP system it is)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-396523">
				<div id="div-comment-396523" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Dan McCarty</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060629-00/?p=30693#comment-396523">
			June 29, 2006 at 5:17 pm</a>		</div>

		<p>You mentioned in a previous post that you don&#8217;t have way to store images online. &nbsp;Your writeups are great, but for those of us who come here to glean a nugget of wisdom but who don&#8217;t have the time to sit down with your scratch app and compile in your sample code, it would be great if you could find a way to host an image or two so we could see the finished results.</p>
<div class=post>[<i>Sorry, I&#8217;m a textual person. Frequently, the key point is the *interactivity*, which doesn&#8217;t come across in a screenshot anyway. And since I can&#8217;t upload pictures anyway, there&#8217;s no point arguing about it. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-396553">
				<div id="div-comment-396553" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Cody</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060629-00/?p=30693#comment-396553">
			June 30, 2006 at 9:25 am</a>		</div>

		<p>Off Topic: Why don&#8217;t they allow you to upload pictures?</p>
<div CLASS=post>[<i>I don&#8217;t have anywhere to upload them *to*. (The galleries here don&#8217;t count since people would be able to see the image before the article.) Plus I don&#8217;t want to get involved in any copyright issues. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-397733">
				<div id="div-comment-397733" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">kokorozashi</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060629-00/?p=30693#comment-397733">
			July 6, 2006 at 1:49 pm</a>		</div>

		<p>Given the title of this post, I was hoping for something about TTM_UPDATETIPTEXT. I seem to be in a situation which calls for it. My immediate question is that although it&#8217;s supposed to be for changing the text, I must pass an entire TOOLINFO. This leads me to wonder whether the other fields are being used, and if so whether this means one of the existing tools might be altered. (As I understand it, one tip may have many tools.)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-397773">
				<div id="div-comment-397773" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">kokorozashi</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060629-00/?p=30693#comment-397773">
			July 6, 2006 at 3:22 pm</a>		</div>

		<p>It now looks from experimentation as if it&#8217;s not necessary to fill in all the fields of a TOOLINFO &nbsp;before passing it to TTM_UPDATETIPTEXT. Or, to be more scientifical about it, I&#8217;m giving TTM_UPDATETIPTEXT a NULL value for TOOLINFO.hwnd and it&#8217;s not causing any trouble even though I&#8217;ve also set TTF_IDISHWND and cleared TOOLINFO.rect. It&#8217;s a weird API, but that&#8217;s nothing new I suppose.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-397873">
				<div id="div-comment-397873" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">kokorozashi</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060629-00/?p=30693#comment-397873">
			July 6, 2006 at 8:02 pm</a>		</div>

		<p>In fact, if I clear all fields, then set cbSize appropriately and set lpszText to LPSTR_TEXTCALLBACK, that seems to be enough. I guess this is basically what I would have expected, but it still feels obscure and roundabout.</p>
<div CLASS=post>[<i>It&#8217;s not mysterious at all. All you&#8217;re updating is the text, so you need to specify (1) which tool, so the tooltip knows what text you want to replace, and (2) the new text, so the tooltip knows what you want to replace it with. And that&#8217;s what the documentation says. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-398103">
				<div id="div-comment-398103" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">kokorozashi</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060629-00/?p=30693#comment-398103">
			July 7, 2006 at 1:06 pm</a>		</div>

		<p>It may not actually be obscure and roundabout because because I&#8217;ve realized my sending a TOOLINFO full of mostly zeroes along with TTM_UPDATETIPTEXT may be having no effect at all and I may see the text change for a different reason. I need to do some more work.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-398313">
				<div id="div-comment-398313" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">kokorozashi</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060629-00/?p=30693#comment-398313">
			July 8, 2006 at 1:35 am</a>		</div>

		<p>This will come as a huge shock, but of course you are right and I am completely wrong. So wrong, in fact, that it looks like I won&#8217;t even be using TTM_UPDATETIPTEXT because I want one-text-per-tip rather than -per-tool. In fact, that seems like such a good choke-point to me that I don&#8217;t know why people would want -per-tool instead. I&#8217;m sure it&#8217;s legit; I just don&#8217;t see why I would want it right now. I would much rather use LPSTR_TEXTCALLBACK and cache the text myself. So that&#8217;s what I&#8217;m doing. After I refresh my cache, I know whether the tip is visible by listening for TTN_SHOW and TTN_POP, and if it is visible, I send TTM_POP and TTM_POPUP. I figured it would flicker, and I would have to figure out what to do about that, but it doesn&#8217;t &#8212; or it flickers so fast that my eyes can&#8217;t see it. Now, go ahead, tell me how far my head is up my butt &#8212; I&#8217;ll be disappointed if it&#8217;s not. :-)</p>
<div CLASS=post>[<i>If you don&#8217;t have a lot of hotspots, then it&#8217;s convenient to create one tool for each hotspot. (E.g., a toolbar.) Then you just have to set them up once and let the tooltip control do all the work. If you have a lot of hotspots, then you can multiplex, as I described earlier. &#8220;Easy things should be easy; hard things should be hard.&#8221; -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-398373">
				<div id="div-comment-398373" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">James McNeill</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060629-00/?p=30693#comment-398373">
			July 9, 2006 at 7:51 pm</a>		</div>

		<p>I, too, had problems with the tooltip border only appearing sporadically. &nbsp;There was another problem that appears to have been related. &nbsp;If you hover over the last bar so that the tooltip appears and then press + a couple of times to draw more bars, the new bars overwrite the tooltip rather than appearing underneath it.</p>
<p>By comparing this code with the sample code on MSDN I experimentally determined that the WS_EX_TRANSPARENT style was the source of both quirks. &nbsp;Removing it and passing 0 to the extended style makes the tooltips behave better, at least on my machine. &nbsp;(I did try turning on and off various tooltip and window animation settings but got the same results regardless.)<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-398393">
				<div id="div-comment-398393" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Norman Diamond</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060629-00/?p=30693#comment-398393">
			July 9, 2006 at 9:14 pm</a>		</div>

		<p>&gt; It&#8217;s not mysterious at all. All you&#8217;re<br />
<br />&gt; updating is the text</p>
<p>But you&#8217;re passing an entire structure.</p>
<p>In recent months, I&#8217;ve stopped experimenting to see if certain parameters can be NULL in cases where I have no useful information to point those parameters to and MSDN doesn&#8217;t say if the parameters can be null or not. &nbsp;If MSDN describes a pointer and a length, the length can be zero, but if MSDN doesn&#8217;t say that the pointer can be null then I declare a byte and point the pointer to it. &nbsp;Here is the reason for my change to such a rigorous practice:<br />
<br /><a rel="nofollow" target="_new" href="http://blogs.msdn.com/oldnewthing/archive/2006/03/20/555511.aspx" rel="nofollow">http://blogs.msdn.com/oldnewthing/archive/2006/03/20/555511.aspx</a><br />
<br />* &nbsp;All parameters must be valid.<br />
<br />* &nbsp;Pointers are not NULL unless explicitly<br />
<br />* &nbsp;permitted otherwise.</p>
<p>[<i>It&#8217;s clumsy having a TTUPDATETIPTEXT structure, a TTNEWTOOLRECT structure, a TTDELTOOL structure, a TTGETTEXT structure, etc. Instead, there&#8217;s just a generic TOOLINFO that&#8217;s used for multiple messages. -Raymond</i>]</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-398573">
				<div id="div-comment-398573" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">kokorozashi</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060629-00/?p=30693#comment-398573">
			July 10, 2006 at 1:53 pm</a>		</div>

		<p>I think where I got confused is that you&#8217;re explaining dynamic content in the context of multiplexing, and the &quot;dynamic&quot; content is really just a side effect of that multiplexing. By contrast, I need content that&#8217;s dynamic based on some external factor, say bytes arriving from the internet. It so happens that I have only a few tools, which makes things easier on me, but that&#8217;s not the critical difference. If I had thousands of potential tools, I&#8217;d still need to provide &quot;dynamic&quot; content in both senses mentioned here. Pile on top of this the fact that I hadn&#8217;t used this API at all before last week and my confusion compounds. Anyway, if my strategy involving LPSTR_TEXTCALLBACK, TTN_SHOW, TTN_POP, TTM_POP, and TTM_POPUP doesn&#8217;t nauseate you, I figure I&#8217;m doing OK.</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>