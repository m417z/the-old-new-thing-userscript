<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (16)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-1277665">
				<div id="div-comment-1277665" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">David Haim</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20161221-00/?p=94985#comment-1277665">
			December 21, 2016 at 7:24 am</a>		</div>

		<p>Out of the description alone (after few days of usage, our program go crazy) you might suspect the opposite &#8211; they don&#8217;t close the socket properly having a handle leak. after few days the kernel is exhausted and returns INVALID_SOCKET is it can&#8217;t produce anymore sockets.<br />
I bet that one of this cases of &#8220;We write our application in C++, but we don&#8217;t think in RAII&#8221; .</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-koldude odd alt thread-odd thread-alt depth-1" id="comment-1277675">
				<div id="div-comment-1277675" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/kantos' rel='external nofollow' class='url'>kantos</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20161221-00/?p=94985#comment-1277675">
			December 21, 2016 at 7:25 am</a>		</div>

		<p>I had always assumed that since <code>SOCKET</code> is a typedef of <code>UINT_PTR</code> that it was a <code>HANDLE</code> behind the scenes that was constrained to the safe casting range (e.g. the where sign extension does not occur) for an <code>int</code> for &#8220;compatibility&#8221; with code originally written for *nix systems. That said I also don&#8217;t believe in sharing sockets code across APIs. WINSOCK is not POSIX compatible because of type issues and vice versa. That said I really do hope the C++ standards committee gets around to finalizing the Networking TS, and it gets implemented by MSVC and GCC, so I can stop caring about such details.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1 parent" id="comment-1277676">
				<div id="div-comment-1277676" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ben Craig</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20161221-00/?p=94985#comment-1277676">
			December 21, 2016 at 7:28 am</a>		</div>

		<p>I am a bit disappointed that the first question in the headline wasn&#8217;t answered &#8220;What is the maximum numeric value for a socket&#8221;.  I&#8217;ve seen plenty of code out there that uses an int on 64-bit Windows to hold a socket handle.  A socket handle is 64-bits though.  Maybe the loss of bits is fine, so long as the maximum numeric value is below INT_MAX.</p>

		
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-koldude odd alt depth-2" id="comment-1277695">
				<div id="div-comment-1277695" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/kantos' rel='external nofollow' class='url'>kantos</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20161221-00/?p=94985#comment-1277695">
			December 21, 2016 at 7:33 am</a>		</div>

		<p>Not just 64bits, but unsigned too. So there is an implicit conversion issue that invokes potentially implementation defined behavior. Personally I think this is something that POSIX and WINSOCK can fix by doing a <code>SOCKET_DEFINE</code> macro to let the developer know that they can use a <code>SOCKET</code> type that corresponds correctly to the platform.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-alegrigoriev even depth-2" id="comment-1277715">
				<div id="div-comment-1277715" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/alegr1' rel='external nofollow' class='url'>alegr1</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20161221-00/?p=94985#comment-1277715">
			December 21, 2016 at 8:14 am</a>		</div>

		<p>“What is the maximum numeric value for a socket”<br />
This is one of those questions if you ask them, you&#8217;re doing things wrong.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt depth-2" id="comment-1277735">
				<div id="div-comment-1277735" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">ErikF</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20161221-00/?p=94985#comment-1277735">
			December 21, 2016 at 8:47 am</a>		</div>

		<p>The article entitled &#8220;Porting Socket Applications to Winsock&#8221; (&#8216;Socket Data Type&#8217; section) I believe gives you the answer: &#8220;Socket handles may take any value in the range 0 to INVALID_SOCKET–1.&#8221; [1] In addition, it notes that the SOCKET type is unsigned and lists the gotchas that can occur if you blithely cast away the differences.</p>
<p>Given the information (the SOCKET type is unsigned and not necessarily small, the range excludes a single value, and the size is not specified), I would interpret the SOCKET type as opaque and not assume anything else about it. (As an aside, I&#8217;ve seen older example Unix code that checks for values less than 1024 for socket validity: this can fail unexpectedly when the system&#8217;s FD ulimit is increased!)</p>
<p>[1] <a href="https://msdn.microsoft.com/en-us/library/windows/desktop/ms740516(v=vs.85)" rel="nofollow">https://msdn.microsoft.com/en-us/library/windows/desktop/ms740516(v=vs.85)</a>.aspx</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment even thread-odd thread-alt depth-1 parent" id="comment-1277685">
				<div id="div-comment-1277685" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Karellen</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20161221-00/?p=94985#comment-1277685">
			December 21, 2016 at 7:33 am</a>		</div>

		<p>&#8220;This is another case of starting with the assumption that you found an operating system bug instead of starting with the assumption that you have a bug in your program.&#8221;</p>
<p>But&#8230; that&#8217;s such a convenient and ego-soothing assumption to make! After all, OS bugs do exist, and my code is always right! I mean, except for all those other times I got something wrong, obviously, but those were silly mistakes and don&#8217;t count. Besides, I&#8217;ve re-read the code this time, and even though I have missed many other bugs on previous multiple re-readings in the past, I&#8217;m *sure* I haven&#8217;t missed anything this time.</p>
<p>So it must be an OS bug. Or a compiler bug &#8211; those happen too, right?</p>
<p>(Besides, the universe has a dark sense of humour. Only after it&#8217;s spent the better part of a decade beating all the hubris out of your silly human brain, and you have finally learned that it&#8217;s *always* a bug in your own code, will it give you an OS bug to beat your head against. For some reason, I&#8217;m suddenly imagining an IT version of House, set in a dev shop where young idealistic developers being mentored by a misanthropic grey<strike>beard</strike>hair, whose catchphrases include &#8220;The Client Always Lies&#8221; and &#8220;It&#8217;s Never An OS Bug&#8221;.)</p>

		
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-scott-brickey odd alt depth-2" id="comment-1277745">
				<div id="div-comment-1277745" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Scott+Brickey' rel='external nofollow' class='url'>Scott Brickey</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20161221-00/?p=94985#comment-1277745">
			December 21, 2016 at 8:51 am</a>		</div>

		<p>Except for that ONE time that it WAS lupus&#8230; i mean, an OS bug</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even depth-2 parent" id="comment-1277775">
				<div id="div-comment-1277775" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Rutger</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20161221-00/?p=94985#comment-1277775">
			December 21, 2016 at 11:25 am</a>		</div>

		<p>For some reason, I’m suddenly imagining an IT version of House, set in a dev shop where young idealistic developers being mentored by a misanthropic greybeardhair, whose catchphrases include “The Client Always Lies” and “It’s Never An OS Bug”.)</p>
<p>That sounds like our 3rd line department. Customers lie, the truth is in the logfiles. Compared to some of our consultants House is a naive and ignorant little puppy :)</p>

		
				</div>
		<ol class="children">
		<li class="comment odd alt depth-3 parent" id="comment-1277836">
				<div id="div-comment-1277836" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Mark (The Other Mark)</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20161221-00/?p=94985#comment-1277836">
			December 22, 2016 at 9:01 am</a>		</div>

		<p>Could be a CPU Bug. Did you check the latest CPU Errata? Or maybe it&#8217;s a new CPU bug. That could explain why Microsoft isn&#8217;t helping- They might have different CPUs. It&#8217;s probably best to start with Intel, because it&#8217;s not your code.</p>

		
				</div>
		<ol class="children">
		<li class="comment even depth-4" id="comment-1277885">
				<div id="div-comment-1277885" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://adamrosenfield.com' rel='external nofollow' class='url'>Adam Rosenfield</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20161221-00/?p=94985#comment-1277885">
			December 23, 2016 at 7:21 am</a>		</div>

		<p>The application developer says &#8220;it must be a bug in the library.&#8221;<br />
The library developer says &#8220;it must be a bug in the OS.&#8221;<br />
The OS developer says &#8220;it must be a bug in the hardware.&#8221;<br />
The hardware developer says &#8220;it must be a bug in physics.&#8221;</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment odd alt thread-even depth-1" id="comment-1277795">
				<div id="div-comment-1277795" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Andrew</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20161221-00/?p=94985#comment-1277795">
			December 21, 2016 at 1:08 pm</a>		</div>

		<p>I miss the part where Raymond&#8217;s psychic debugging is proved correct and the customer walks away shamed.  That&#8217;s part of why I come here.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-odd thread-alt depth-1 parent" id="comment-1277805">
				<div id="div-comment-1277805" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20161221-00/?p=94985#comment-1277805">
			December 21, 2016 at 1:11 pm</a>		</div>

		<p>Wait a minute &#8230; You can wait for more than 64 sockets at once?!! Does this mean there&#8217;s some undocumented API that can wait for more than 64 handles at once or is ws2_32.dll doing something wild?</p>
<p>A documented solution for waiting for N handles at once (where N &gt;&gt; 64) would be really useful for quite a few applications.</p>

		
				</div>
		<ol class="children">
		<li class="comment odd alt depth-2" id="comment-1277815">
				<div id="div-comment-1277815" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ben Voigt (Visual Studio and Development Technologies MVP with C++ focus)</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20161221-00/?p=94985#comment-1277815">
			December 21, 2016 at 1:49 pm</a>		</div>

		<p>Sockets aren&#8217;t kernel handles.</p>
<p>The event handle passed to WSAEventSelect doesn&#8217;t have to be unique.  You could create one event, link it to all the sockets using WSAEventSelect, then WaitForSingleObjectEx on that event.</p>
<p>Of course, when it returns you need to actually test all the sockets to see which should be reported as having activity, but you needed to do that anyway, since neither WaitForMultipleObjects(bWaitAll := false) nor WaitForMultipleObjects(bWaitAll := true) has the same semantics as select.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even depth-2" id="comment-1277975">
				<div id="div-comment-1277975" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">smf</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20161221-00/?p=94985#comment-1277975">
			December 25, 2016 at 10:12 am</a>		</div>

		<p>&#8220;And as the documentation notes, you can make FD_SET­SIZE bigger if you need to. The point is that the fd_set structure is a variable-sized structure, but for compatibility with Unix programs, it is formally defined as a fixed-size structure so that programs can pass them around. &#8221;</p>
<p>google for increasing FD_SETSIZE and you&#8217;ll find an example.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-aadsso-1live-com0003bffd836fd3f1 odd alt depth-2" id="comment-1278485">
				<div id="div-comment-1278485" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/RichardCox' rel='external nofollow' class='url'>RichardCox</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20161221-00/?p=94985#comment-1278485">
			December 30, 2016 at 2:50 am</a>		</div>

		<p>&gt; A documented solution for waiting for N handles at once (where N &gt;&gt; 64) would be really useful for quite a few applications.</p>
<p>Use I/O Completion Ports. There is no limited (other than overall system resources) to how many I/O operations can be associated to one IOCP. Of course you need a rather different structure to your program.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>