<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (2)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-1355865">
				<div id="div-comment-1355865" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Neil</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180803-00/?p=99405#comment-1355865">
			August 8, 2018 at 3:29 am</a>		</div>

		<p>1. It&#8217;s a constructor, so it needs to have its own new <code>this</code>.<br />
2. JS engines are optimised for accessing objects whose list of own property values doesn&#8217;t change after construction.<br />
3. Each waiter needs to retry after the lock is released.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1356195">
				<div id="div-comment-1356195" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Drak</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180803-00/?p=99405#comment-1356195">
			August 9, 2018 at 10:11 pm</a>		</div>

		<p>&#8220;Arrowizing is convenient because it preserves this inside the lambda, which saves us the trouble of having to create a separate self variable.&#8221;</p>
<p>How about binding &#8216;this&#8217; to your function with .bind(this). Does that not do the same, or does it do something different underwater?</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>