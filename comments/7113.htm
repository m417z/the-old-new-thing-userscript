<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (66)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-998563">
				<div id="div-comment-998563" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">mmx</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120717-00/?p=7113#comment-998563">
			July 17, 2012 at 7:13 am</a>		</div>

		<blockquote><p>
  &gt; The Windows performance folks requested that the shell reduce the frequency of checks to improve overall system performance
</p></blockquote>
<p>Is the operation so expensive to matter ?</p>
<p>As I understand it&#39;s only run on local hard disks and, by virtue of being a courtesy service and not life-threatening-if-the-number-is-wrong, it can also used a cached value.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-998573">
				<div id="div-comment-998573" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">RP</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120717-00/?p=7113#comment-998573">
			July 17, 2012 at 7:23 am</a>		</div>

		<p>It&#39;s an I/O operation, and I/O is always expensive.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-alegrigoriev even thread-even depth-1" id="comment-998583">
				<div id="div-comment-998583" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/alegr1' rel='external nofollow' class='url'>alegr1</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120717-00/?p=7113#comment-998583">
			July 17, 2012 at 7:29 am</a>		</div>

		<p>It&#39;s not like the free space burns by itself. NTFS.SYS can always keep track of it without having to access the disk every time. Looks like the perf team is looking in the wrong places.</p>
<p>For example, if a 500 GB disk is formatted with 4K allocation units, its allocation map is under 16 MB. To go through it once is a trivial operation, and NTFS does that anyway.</p>
<div class="post">[<i>The issue isn&#39;t the I/O cost. It&#39;s the cost of waking up the system once a minute, which takes it out of low-power mode. And consider what happens on a Terminal Server machine with 60 users. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-998593">
				<div id="div-comment-998593" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Dominik</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120717-00/?p=7113#comment-998593">
			July 17, 2012 at 7:38 am</a>		</div>

		<p>Why not check for low disk space after every 42 MB written to the disk?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-998603">
				<div id="div-comment-998603" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">GWO</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120717-00/?p=7113#comment-998603">
			July 17, 2012 at 7:41 am</a>		</div>

		<p>&quot;Is the operation so expensive to matter?&quot; Two words: Network drives</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-alegrigoriev odd alt thread-odd thread-alt depth-1" id="comment-998613">
				<div id="div-comment-998613" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/alegr1' rel='external nofollow' class='url'>alegr1</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120717-00/?p=7113#comment-998613">
			July 17, 2012 at 7:50 am</a>		</div>

		<blockquote><p>
  Two words: Network drives
</p></blockquote>
<p>It&#39;s not the users that must get a warning about network drives, it&#39;s the administrators.</p>
<p>Even then, checking space on a network drive is a trivial operation in regards to the client: send an SMB request, get a reply. It&#39;s less churn than moving a mouse pointer across the taskbar.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-maurits even thread-even depth-1" id="comment-998633">
				<div id="div-comment-998633" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Maurits+%5BMSFT%5D' rel='external nofollow' class='url'>Maurits [MSFT]</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120717-00/?p=7113#comment-998633">
			July 17, 2012 at 8:13 am</a>		</div>

		<blockquote><p>
  The balloon appears approximately ten minutes later.
</p></blockquote>
<p>Approximately five minutes later, surely.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-998643">
				<div id="div-comment-998643" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120717-00/?p=7113#comment-998643">
			July 17, 2012 at 8:15 am</a>		</div>

		<p>Dude, this value is cached <em>in the boot sector</em>.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-998653">
				<div id="div-comment-998653" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Rich</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120717-00/?p=7113#comment-998653">
			July 17, 2012 at 8:19 am</a>		</div>

		<p>How could somebody have so much time that they could be bothered to report something like that to MS?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-998663">
				<div id="div-comment-998663" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Mike</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120717-00/?p=7113#comment-998663">
			July 17, 2012 at 8:30 am</a>		</div>

		<p>@Rich: my guess someone in a corporate environment. Someone got burned because they were copying something or whatever and left for lunch and came back to a crashed copy/rip app etc. I worked at a company were users would start experiments that generate 20TB of data without seeing if the disk array had room. They&#39;d use 20k worth of chemicals fire off a batch job for a gene sequencer and leave for the weekend. They&#39;d come back on Monday and their program crashed because it was out of memory. Users in general will do stupid things and any time you don&#39;t hold their hand the same way as they are used to someone will get burned by it and it will be your fault.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-998693">
				<div id="div-comment-998693" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Gabe</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120717-00/?p=7113#comment-998693">
			July 17, 2012 at 8:57 am</a>		</div>

		<p>The issue here is not that the disk has to spin up, otherwise the disk could never spin down in the first place. I think the perf hit is in working set. A code path that runs once per minute is likely to not ever get paged out.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-alegrigoriev odd alt thread-odd thread-alt depth-1" id="comment-998703">
				<div id="div-comment-998703" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/alegr1' rel='external nofollow' class='url'>alegr1</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120717-00/?p=7113#comment-998703">
			July 17, 2012 at 9:44 am</a>		</div>

		<blockquote><p>
  I think the perf hit is in working set. A code path that runs once per minute is likely to not ever get paged out.
</p></blockquote>
<p>InvalidArgumentException. There is no need to have code &quot;paged out&quot;. There is a need to keep most recently used code in memory at an expense for least recently used code. 1 minute is a lot of time, compared to page-in latency. Code that does free space check has trivial size (&lt;&lt;&lt;1M). It can be easily paged in in &lt;100ms. If the OS is idle, the code will be in memory and won&#39;t even need the OS drive spin-up.</p>
<blockquote><p>
  And yes, the volume manager could keep a cache of free space in every volume, and remember when it&#39;s not populated yet (drive that hasn&#39;t spun at all since boot), etc. &#8211; but is it worth it for this feature
</p></blockquote>
<p>I&#39;m pretty sure that volume mounting DOES access the disk, requiring a spin-up and DOES get the amount of free space in the process.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-998713">
				<div id="div-comment-998713" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Adam Rosenfield</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120717-00/?p=7113#comment-998713">
			July 17, 2012 at 9:54 am</a>		</div>

		<p>Updating once per minute is fine, but updating once per second will cause secondary effects due to code not being paged out: <a rel="nofollow" target="_new" href="http://blogs.msdn.com/b/oldnewthing/archive/2003/10/10/55256.aspx" rel="nofollow">blogs.msdn.com/&#8230;/55256.aspx</a></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-alegrigoriev odd alt thread-odd thread-alt depth-1" id="comment-998723">
				<div id="div-comment-998723" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/alegr1' rel='external nofollow' class='url'>alegr1</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120717-00/?p=7113#comment-998723">
			July 17, 2012 at 10:22 am</a>		</div>

		<p>A toxic case of free space query is quote management. If quotes are enabled, each user may see their own free space number. Although this may be done cached, as well.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-alegrigoriev even thread-even depth-1" id="comment-998733">
				<div id="div-comment-998733" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/alegr1' rel='external nofollow' class='url'>alegr1</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120717-00/?p=7113#comment-998733">
			July 17, 2012 at 10:24 am</a>		</div>

		<blockquote><p>
  Updating once per minute is fine, but updating once per second will cause secondary effects due to code not being paged out
</p></blockquote>
<p>That made difference. In Windows 95 age. Not now.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-xpclientgmail-com odd alt thread-odd thread-alt depth-1" id="comment-998743">
				<div id="div-comment-998743" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/xpclient' rel='external nofollow' class='url'>xpclient</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120717-00/?p=7113#comment-998743">
			July 17, 2012 at 10:51 am</a>		</div>

		<p>Disk space filling up is a common problem in Windows 7 due to the disaster that is Component Based Servicing.</p>
<div class="post">[<i>It wouldn&#39;t be a problem if you could disable auto-sort in Explorer, though. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-xpclientgmail-com even thread-even depth-1" id="comment-998753">
				<div id="div-comment-998753" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/xpclient' rel='external nofollow' class='url'>xpclient</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120717-00/?p=7113#comment-998753">
			July 17, 2012 at 11:42 am</a>		</div>

		<p>Nope that doesn&#39;t have to do anything with my complaint about CBS. CBS is the worst disk gobbling up and slow component in Windows.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-998793">
				<div id="div-comment-998793" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Anonymous Coward</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120717-00/?p=7113#comment-998793">
			July 17, 2012 at 1:35 pm</a>		</div>

		<p>I remember turning this off because it solved a problem where the floppy drive would make noise every now and then. As a side effect it also solved a minor issue of my hard drive never falling asleep.</p>
<p>I can&#39;t remember where I picked up this tip (I thought it was this site, but I can&#39;t find it again) but even though I&#39;m reasonably technical, I could never have solved it by myself. I guess I&#39;d have been listening to bzzz-ter-dum-ter-dum-ter-dum-click for ever.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-maurits even thread-even depth-1" id="comment-998803">
				<div id="div-comment-998803" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Maurits+%5BMSFT%5D' rel='external nofollow' class='url'>Maurits [MSFT]</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120717-00/?p=7113#comment-998803">
			July 17, 2012 at 2:07 pm</a>		</div>

		<p>Why does this feature poll at all? &nbsp;Can&#39;t the check be tied to disk writes?</p>
<div class="post">[<i>And you would do this&#8230; how? -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-998813">
				<div id="div-comment-998813" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Anonymous Coward</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120717-00/?p=7113#comment-998813">
			July 17, 2012 at 2:18 pm</a>		</div>

		<p>@Maurits &#8211; You want a shell notification to be tied in with all kernel disk writes?!</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-998823">
				<div id="div-comment-998823" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Matt</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120717-00/?p=7113#comment-998823">
			July 17, 2012 at 2:37 pm</a>		</div>

		<p>@Raymond</p>
<p>Why not do it somewhat like this?</p>
<p>DWORD dw;</p>
<p>HANDLE hFile = CreateFile(&quot;\?DevicesHarddiskVolume1EventsLowDisk&quot;);</p>
<p>ReadFile(hFile, &amp;dw);</p>
<div class="post">[<i>Um, disk free space is a file system concept, not a volume concept. And now the kernel needs to know what is effectively a UI value (what level disk space is considered &quot;low&quot; for a particular volume). And of course you wouldn&#39;t be able to eject or format any drives because Explorer would always have a handle open! -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-998623">
				<div id="div-comment-998623" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Jonathan</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120717-00/?p=7113#comment-998623">
			July 17, 2012 at 7:56 am</a>		</div>

		<p>I/O can be expensive on:</p>
<p>* iSCSI-mounted disks, which are actually networked to some external storage.</p>
<p>* Physical disks that spin down (like my WD &quot;Green&quot;). I certainly wouldn&#39;t want that disk to constantly spin up every 1 min &#8211; or 10 for that matter.</p>
<p>And yes, the volume manager could keep a cache of free space in every volume, and remember when it&#39;s not populated yet (drive that hasn&#39;t spun at all since boot), etc. &#8211; but is it worth it for this feature?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-maurits even thread-even depth-1" id="comment-998833">
				<div id="div-comment-998833" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Maurits+%5BMSFT%5D' rel='external nofollow' class='url'>Maurits [MSFT]</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120717-00/?p=7113#comment-998833">
			July 17, 2012 at 4:32 pm</a>		</div>

		<p>Implementation details left as an exercise.</p>
<div class="post">[<i>&quot;Hey, I can&#39;t reformat my hard drive because Explorer is monitoring it for low disk space.&quot; -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-998843">
				<div id="div-comment-998843" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Nick</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120717-00/?p=7113#comment-998843">
			July 17, 2012 at 4:51 pm</a>		</div>

		<p>[And of course you wouldn&#39;t be able to eject or format any drives because Explorer would always have a handle open! -Raymond]</p>
<p>Be careful&#8230; that&#39;s some pretty serious troll bait right there :)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-maurits even thread-even depth-1" id="comment-998853">
				<div id="div-comment-998853" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Maurits+%5BMSFT%5D' rel='external nofollow' class='url'>Maurits [MSFT]</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120717-00/?p=7113#comment-998853">
			July 17, 2012 at 5:36 pm</a>		</div>

		<p>The existence of poor implementations does not necessarily imply the impossibility of a proper implementation.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-998773">
				<div id="div-comment-998773" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">lefty</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120717-00/?p=7113#comment-998773">
			July 17, 2012 at 11:52 am</a>		</div>

		<p>My newspaper used to hit my doorstep at 4:00am. Now it doesn&#39;t get here until 5:30.</p>
<p>What&#39;s up with that? I need my stuff *now*.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-cheong even thread-even depth-1" id="comment-998863">
				<div id="div-comment-998863" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/cheong00' rel='external nofollow' class='url'>cheong00</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120717-00/?p=7113#comment-998863">
			July 17, 2012 at 7:43 pm</a>		</div>

		<p>[&quot;Hey, I can&#39;t reformat my hard drive because Explorer is monitoring it for low disk space.&quot; -Raymond]</p>
<p>I&#39;m pretty sure &quot;Disk Format&quot; command would have been written to unmount the drive before starting formatting, just like convert.exe have option to force, if it&#39;s necessary.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-998873">
				<div id="div-comment-998873" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Mark</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120717-00/?p=7113#comment-998873">
			July 17, 2012 at 7:45 pm</a>		</div>

		<p>Indeed, but the fact that no one has found a proper one yet&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-998883">
				<div id="div-comment-998883" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blogs.msdn.com/arcangelpip_4000_hotmail.com/ProfileUrlRedirect.ashx' rel='external nofollow' class='url'>arcangelpip@hotmail.com</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120717-00/?p=7113#comment-998883">
			July 17, 2012 at 10:17 pm</a>		</div>

		<p>@Nick:</p>
<p>Why is that troll bait? On its own, Explorer doesn&#39;t keep handles open. If you end up not being able to do something to a drive because of an open handle, it is something else. For example, an anti-virus holding the file handle open for a bit longer due to the file system scan, playing something off of a removable drive, and the media player taking a bit longer to release the handle than it would appear. You just close an Explorer window and the thumbnail generator is working away. You forget you have a console window open that is located in a directory on that drive.</p>
<p>In fact, I would say the biggest cause of not being able to eject a drive right after you stop using a file on it is the anti-virus. How many times have you stopped using stuff on a removable drive, tried to eject it and it fails then tried to eject it again and it succeeds?</p>
<p>@cheong00:</p>
<p>Yes, force options are one thing, but isn&#39;t it annoying to force something?</p>
<p>@alger1:</p>
<p>Mounting a volume does things like read the bootsector, do the initial consistancy check (replaying the last few events if the dismount wasn&#39;t clean) and then brings the volume online. So yes, it does access the disk during volume mount.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-cheong odd alt thread-odd thread-alt depth-1" id="comment-998903">
				<div id="div-comment-998903" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/cheong00' rel='external nofollow' class='url'>cheong00</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120717-00/?p=7113#comment-998903">
			July 17, 2012 at 10:59 pm</a>		</div>

		<p>@Crescens2k: On the other hand, I could think of some cases that adding option (or just some warning prompt) for &quot;disk format&quot; to force unmount useful. (When trying to format a partition where &quot;indexing service&quot; is running, or have shared folder that&#39;s using by remote users, for example.)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-998923">
				<div id="div-comment-998923" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Someone</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120717-00/?p=7113#comment-998923">
			July 18, 2012 at 2:17 am</a>		</div>

		<p>&quot;In fact, I would say the biggest cause of not being able to eject a drive right after you stop using a file on it is the anti-virus.&quot;</p>
<p>In my experience, this is not true because online-virus checks are performed as part of the file operation: When reading, during CreateFile or at the first ReadFile, when writing, during WriteFile() or at CloseHandle(), causing this calls to take more time.</p>
<p>The background operations of the Explorer and/or of the Indexing Service are to blame: When they try to create the icons for many large video files in an Explorer window, this can take forever. And once initiated, it will continue for some time even when you change the folder in Explorer. Also, if the virus scanner is configured to check also at Read operations, this file operations caused by Explorer and/or Indexing Service triggers the Virus scanner, slowing down the extracting further more.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-998933">
				<div id="div-comment-998933" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">AC</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120717-00/?p=7113#comment-998933">
			July 18, 2012 at 2:19 am</a>		</div>

		<blockquote><p>
  And of course you wouldn&#39;t be able to eject or format any drives because Explorer would always have a handle open! -Raymond
</p></blockquote>
<p>On XP, that was the case about 99% of the time anyway.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-998943">
				<div id="div-comment-998943" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Neil</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120717-00/?p=7113#comment-998943">
			July 18, 2012 at 3:31 am</a>		</div>

		<p>Obligatory rant: I installed so much stuff on my Windows 8 Consumer Preview virtual machine that I consumed the VM&#39;s default volume allocation and I didn&#39;t get a single notification. (At the time, I was trying to run a script which didn&#39;t have any error-checking, so it just appeared to be misbehaving. Fortunately I then happened to invoke another, cleverer, process that alerted me.)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-alegrigoriev odd alt thread-odd thread-alt depth-1" id="comment-998963">
				<div id="div-comment-998963" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/alegr1' rel='external nofollow' class='url'>alegr1</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120717-00/?p=7113#comment-998963">
			July 18, 2012 at 7:19 am</a>		</div>

		<p>[And of course you wouldn&#39;t be able to eject or format any drives because Explorer would always have a handle open! -Raymond]</p>
<p>Vista bug.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-alegrigoriev even thread-even depth-1" id="comment-998983">
				<div id="div-comment-998983" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/alegr1' rel='external nofollow' class='url'>alegr1</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120717-00/?p=7113#comment-998983">
			July 18, 2012 at 7:27 am</a>		</div>

		<blockquote><p>
  The background operations of the Explorer and/or of the Indexing Service are to blame: When they try to create the icons for many large video files in an Explorer window, this can take forever
</p></blockquote>
<p>In a few cases (bailing out because of some error?) Explorer would keep a handle to a directory or to a file, making it impossible to delete a directory.</p>
<p>But for what it&#39;s worth, Explorer keep A LOT of handles to the directories open, because it&#39;s constantly monitoring volumes for changes. Just run HANDLES.EXE and see. The handles are opened with SHARE_DELETE_FILE, though.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-alegrigoriev odd alt thread-odd thread-alt depth-1" id="comment-999003">
				<div id="div-comment-999003" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/alegr1' rel='external nofollow' class='url'>alegr1</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120717-00/?p=7113#comment-999003">
			July 18, 2012 at 7:33 am</a>		</div>

		<p>[The issue isn&#39;t the I/O cost. It&#39;s the cost of waking up the system once a minute, which takes it out of low-power mode.]</p>
<p>This is why SetWaitableTimer has bResume argument.</p>
<p>[And consider what happens on a Terminal Server machine with 60 users. -Raymond]</p>
<p>A terminal server is supposed to be able to sustain activity of all users at all times, not just a single call to NTFS.SYS once per minute per user which doesn&#39;t even have to access the disk.</p>
<div class="post">[<i>bResume is for waking from suspend, which is not the same as waking from a low-power state. The point about Terminal Server is that you have all these threads waking up and paging in stacks constantly. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-999023">
				<div id="div-comment-999023" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Gabe</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120717-00/?p=7113#comment-999023">
			July 18, 2012 at 7:35 am</a>		</div>

		<p>Matt: How does your code account for the fact that there are actually 4 different thresholds, and they differ depending on the size of the volume? How does it handle different per-user quotas?</p>
<p>Keep in mind that this solution doesn&#39;t prevent the need for the polling code because some filesystems might not implement the LowDiskCondition event you describe, so you&#39;re adding to the existing code, not replacing it. Furthermore, you now have to build some hysteresis or rate-limiting into the system so that the user doesn&#39;t get pelted with low disk space warnings when something is causing the space on the disk to alternate above and below the limit.</p>
<p>In all, this seems like a fairly complex solution to a rather trivial problem. Very few people need low disk space warnings at a time resolution smaller than 10 minutes, and adding complexity to the kernel and every disk filesystem driver is not worth the minor benefit.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-alegrigoriev odd alt thread-odd thread-alt depth-1" id="comment-999043">
				<div id="div-comment-999043" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/alegr1' rel='external nofollow' class='url'>alegr1</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120717-00/?p=7113#comment-999043">
			July 18, 2012 at 7:39 am</a>		</div>

		<p>//hEvent = OpenEvent(GENERIC_READ, &quot;\?KernelObjectsLowDiskCondition&quot;);</p>
<p>Is not going to work (other than the backslashes has to be doubled).</p>
<p>A disk may show different amount of free and available space to each user, because of NTFS quotes. The event has to be per user. This is why FSCTL would be better.</p>
<p>Also, GENERIC_READ is for files, not for events. You want SYNCHRONIZE.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-998913">
				<div id="div-comment-998913" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Matt</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120717-00/?p=7113#comment-998913">
			July 18, 2012 at 1:15 am</a>		</div>

		<p>@Raymond:</p>
<p>OK, how about (in ntos):</p>
<p>//</p>
<p>// create an event during boot</p>
<p>//</p>
<p>HANDLE hLowDiskConditionEvent;</p>
<p>void DuringBoot()</p>
<p>{</p>
<p> &nbsp;hLowDiskConditionEvent = NtCreateEvent(&#8230;, L&quot;\?KernelObjectsLowDiskCondition&quot;);</p>
<p>}</p>
<p>//</p>
<p>// there are lots of syscalls that return configuration values (e.g. whatever backs GetSystemMetrics for instance). Let&#39;s just hijack one to return the disk threshold</p>
<p>//</p>
<p>SIZE_T cached = ~0;</p>
<p>NtGetSystemMetrics(int iVal, SIZE_T* result;)</p>
<p>{</p>
<p> &nbsp;..</p>
<p> &nbsp;if(iVal == SM_LOWDISKTHRESHOLD)</p>
<p> &nbsp;{</p>
<p> &nbsp; &nbsp;if(cached == ~0 || cacheExpiredForSomeReason)</p>
<p> &nbsp; &nbsp; &nbsp;cached = ReadRegKey(&quot;HKLMblahLowDiskConditionThreshold&quot;);</p>
<p> &nbsp; &nbsp;*result = cached;</p>
<p> &nbsp;}</p>
<p> &nbsp;..</p>
<p>}</p>
<p>//</p>
<p>// In the filesystem driver</p>
<p>//</p>
<p>NTSTATUS HandleSomeFileWrite(&#8230;)</p>
<p>{</p>
<p> &nbsp;DoTheWrite();</p>
<p> &nbsp;if(cachedVolumeSpace &lt; NtGetSystemMetrics(SM_LOWDISKTHRESHOLD))</p>
<p> &nbsp;{</p>
<p> &nbsp; &nbsp;NtOpenEvent(hEvent, L&quot;\?KernelObjectsLowDiskCondition&quot;);</p>
<p> &nbsp; &nbsp;NtSetEvent(hEvent);</p>
<p> &nbsp;}</p>
<p>}</p>
<p>//</p>
<p>// And finally in explorer.exe (or whomever else might care about low-disk events).</p>
<p>//</p>
<p>void LowDiskEventThreadMain()</p>
<p>{</p>
<p> &nbsp;hEvent = OpenEvent(GENERIC_READ, &quot;\?KernelObjectsLowDiskCondition&quot;);</p>
<p> &nbsp;WaitForSingleObject(hEvent, TIMEOUT_WHENEVER);</p>
<p> &nbsp;// oh noes! we&#39;re low on disk space. Find out which disk is low by querying them all now and then show the balloon.</p>
<p>}</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-999103">
				<div id="div-comment-999103" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">ErikF</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120717-00/?p=7113#comment-999103">
			July 18, 2012 at 9:56 am</a>		</div>

		<p>Making the kernel responsible for monitoring disk space for a user-mode program is problematic because it starts adding dependencies between the FS drivers and Win32 (specifically the registry). As the file system is loaded before the registry, you would then need two different functions to access the disk: one for before Win32 is available and one for after.</p>
<p>All this just to let the user know a couple of minutes sooner that a disk is running out of space? I&#39;d say that it doesn&#39;t make the -100 bar, let alone making it a candidate for the next version of Windows!</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-999113">
				<div id="div-comment-999113" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Matt</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120717-00/?p=7113#comment-999113">
			July 18, 2012 at 10:13 am</a>		</div>

		<p>Nice to see other people joining in with suggesting ideas, rather than shooting other ones down&#8230;</p>
<p>@alegr:</p>
<p>&gt;&gt;&gt; &quot;the backslashes has to be doubled&quot;, GENERIC_READ/SYNCHRONIZE</p>
<p>&nbsp;I left out the extra slashes for readability, but thanks for the pedantry.</p>
<p>&gt;&gt;&gt; &quot;The event has to be per user&quot;</p>
<p>&nbsp;Why? If the disk is low on space for me, it&#39;s low on space for all of the other users as well. But if you really want it to be per-user, just read the quota from a HKCU regkey instead of a HKLM one. You probably want to have both, because running low on quota isn&#39;t the same as running low on disk space, and explorer should probably show different messages for those events.</p>
<p>&nbsp;I should also clarify that my idea doesn&#39;t absolve explorer from needing to do work. It just means it doesn&#39;t have to poll. Think of the event as a &quot;Hey, some filesystem says a low disk event might be going on for some user on some drive&quot;. The user then has to decide which one.</p>
<p>@gabe:</p>
<p>&gt;&gt;&gt; How does your code account for the fact that there are actually 4 different thresholds.</p>
<p>&nbsp;for(int i=0; i &lt; 4; i++)</p>
<p>&nbsp;{</p>
<p>&nbsp; &nbsp;What I just said.</p>
<p>&nbsp;}</p>
<p>&gt;&gt;&gt; and they differ depending on the size of the volume?</p>
<p>&nbsp;So? The filesystem gets to choose when to signal the event. It&#39;s easy for each filesystem and each volume to choose different criteria.</p>
<p>&gt;&gt;&gt; How does it handle different per-user quotas?</p>
<p>&nbsp;If you really want to, adapt this solution to read from HKCU and then you have per-volume per-user quotas as an event, and explorer can wait on that.</p>
<p>@erikf:</p>
<p>&gt;&gt;&gt; Making the kernel responsible for monitoring disk space for a user-mode program is problematic because it starts adding dependencies between the FS drivers and Win32 (specifically the registry)</p>
<p>a) The kernel is already (deliberately and permanently) tied to Win32</p>
<p>b) The registry is loaded pretty early on in boot (before any user-mode processes or non-boot kernel-mode drivers load). This doesn&#39;t sound like a hard problem to rectify. I could also be a pedant and point out that winload.exe loads the registry using the boot-fs driver before winload loads the kernel fs driver (in order to see what other boot-drivers need to be loaded), so the registry actually gets loaded before any of ntos.</p>
<p>c) It doesn&#39;t add any dependencies. It exposes an event. It doesn&#39;t care if or who listens to the event. They can subscribe if they want, or not if they don&#39;t. That&#39;s the joy of event-based programming.</p>
<p>&gt;&gt;&gt; &quot;All this just to let the user know a couple of minutes sooner that a disk is running out of space?&quot;</p>
<p>No. My objection wasn&#39;t the slight delay. It&#39;s the principle of polling to watch for an event. If polling is the answer, you&#39;re probably asking the wrong question.</p>
<div class="post">[<i>This makes the file system responsible for determining the notification thresholds. What if Windows 9 wants to change the threshold or add a new fifth threshold at 1GB? What if there are two clients subscribed to the low disk space notification, one from Windows 7 and one from Windows 9? Which threshold does the file system use? It&#39;s also strange to have the file system aware of what is basically a UI feature. If you really want to do this via a file system notification, it would have to be a per-handle asynchronous IOCTL, like FSCTL_LOW_DISK_SPACE where the input parameter describes the threshold at which to complete the IOCTL. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-999133">
				<div id="div-comment-999133" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120717-00/?p=7113#comment-999133">
			July 18, 2012 at 10:37 am</a>		</div>

		<p>[it would have to be a per-handle asynchronous IOCTL, like FSCTL_LOW_DISK_SPACE where the input parameter describes the threshold at which to complete the IOCTL. -Raymond]</p>
<p>If you built it, I&#39;d use it.</p>
<div class="post">[<i>Given that this involves a kernel change, its starting point is probably minus 500 points. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-alegrigoriev even thread-even depth-1" id="comment-999143">
				<div id="div-comment-999143" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/alegr1' rel='external nofollow' class='url'>alegr1</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120717-00/?p=7113#comment-999143">
			July 18, 2012 at 11:07 am</a>		</div>

		<p>[bResume is for waking from suspend, which is not the same as waking from a low-power state]</p>
<p>Last time I checked, an idle desktop still needs to update the clock on the taskbar every minute. Whatever C-state the system was, it&#39;s now back to C0.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-alegrigoriev odd alt thread-odd thread-alt depth-1" id="comment-999153">
				<div id="div-comment-999153" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/alegr1' rel='external nofollow' class='url'>alegr1</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120717-00/?p=7113#comment-999153">
			July 18, 2012 at 11:10 am</a>		</div>

		<p>[The point about Terminal Server is that you have all these threads waking up and paging in stacks constantly. -Raymond]</p>
<p>If marginal activity affects your system performance, you need to rethink your system specs. Oh no, an user clicks the text format button every minute, the TS is so overwhelmed. Oh no, the Word autosave is every minute, the TS churns to a stop. This only means you should not run a 60 users TS on a 512 MB box.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-999163">
				<div id="div-comment-999163" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Gabe</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120717-00/?p=7113#comment-999163">
			July 18, 2012 at 11:20 am</a>		</div>

		<p>Matt: Your solution doesn&#39;t eliminate polling; it merely tells you when to poll. To do it &quot;properly&quot;, you need a special API like Raymond&#39;s FSCTL method. That would allow Explorer to be notified exactly when each of its messages needs to be displayed or hidden. And now that I think about it, if you have lots of filesystems you might even need a whole extra thread to wait for all these signals.</p>
<p>Pros: Polling would only be required for filesystems that don&#39;t support the notification mechanism. There would be no need for the kernel to know about Explorer&#39;s arbitrary thresholds. Users would be able to change their thresholds without having to alert the filesystem about a change in system metrics. Other programmers would be able to use the mechanism without being beholden to Explorer&#39;s preset thresholds.</p>
<p>Cons: Such a system is a global solution to a local problem. I&#39;m sure there are many parts of Explorer that could be improved with support from the kernel, but imagine what would happen if everybody with a problem went to the kernel to solve it.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-alegrigoriev odd alt thread-odd thread-alt depth-1" id="comment-999173">
				<div id="div-comment-999173" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/alegr1' rel='external nofollow' class='url'>alegr1</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120717-00/?p=7113#comment-999173">
			July 18, 2012 at 11:40 am</a>		</div>

		<p>[Given that this involves a kernel change, its starting point is probably minus 500 points. -Raymond]</p>
<p>This didn&#39;t stop ReadDirectoryChanges implementation.</p>
<div class="post">[<i>I didn&#39;t say &quot;minus infinity points.&quot; -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-999193">
				<div id="div-comment-999193" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Not important</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120717-00/?p=7113#comment-999193">
			July 18, 2012 at 11:59 am</a>		</div>

		<p>Raymond &#8211; I hope you realize that, even though the shell honors its contract, this is a terrible user experience. 10 minutes is way to late and the notification is worthless. (If I start a bulk copy operation which will put me over the disk space, the operation will fail well before the notification appears).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-999213">
				<div id="div-comment-999213" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Nick</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120717-00/?p=7113#comment-999213">
			July 18, 2012 at 1:49 pm</a>		</div>

		<p>@Crescens2k:</p>
<p>The reason a comment about Explorer holding handles open is troll bait is because (1) it IS partially true, and (2) many people get very much up in arms about it. &nbsp;Regarding (1), the biggest offender are handles to Thumbs.db. &nbsp;I can&#39;t count the times I get errors about not being able to delete a folder because Thumbs.db is &quot;open in another program&quot;. &nbsp;It&#39;s always fixed by checking Process Explorer to verify it&#39;s Explorer, closing the Explorer window I&#39;m using and opening a new one, and then trying the delete operation again.</p>
<p>@alegr1:</p>
<p>&quot;the backslashes [have been] doubled&quot;</p>
<p>HUZZAH! :)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-999233">
				<div id="div-comment-999233" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">640k</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120717-00/?p=7113#comment-999233">
			July 18, 2012 at 3:43 pm</a>		</div>

		<p>@Raymond: [&quot;Hey, I can&#39;t reformat my hard drive because Explorer is monitoring it for low disk space.&quot; -Raymond]</p>
<p>Do you now see why the NT architecture is worse than windows 95?</p>
<p>Prevention to modifying files &amp; dirs because of open handles is STUPID, and people HATE it.</p>
<p>It does NOT prevent changes (physical removable media is an obvious example), it only make it harder to perform them, therefore you cant trust open handles anyway.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-999243">
				<div id="div-comment-999243" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">640k</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120717-00/?p=7113#comment-999243">
			July 18, 2012 at 3:50 pm</a>		</div>

		<p>And I may add, I&#39;ve lost count on how many times I&#39;ve implemented retry-logic for recursively removing folders. At least in a dozen different languages. None of ms frameworks/apis has this included.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-maurits even thread-even depth-1" id="comment-999283">
				<div id="div-comment-999283" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Maurits+%5BMSFT%5D' rel='external nofollow' class='url'>Maurits [MSFT]</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120717-00/?p=7113#comment-999283">
			July 18, 2012 at 4:38 pm</a>		</div>

		<blockquote><p>
  also strange to have the file system aware of what is basically a UI feature
</p></blockquote>
<p>I think an OnDiskSpaceRunningOut callback would be of use to (say) database management systems as well. &nbsp;Flush the tempdb, send alerts to sysadmins.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-alegrigoriev odd alt thread-odd thread-alt depth-1" id="comment-999293">
				<div id="div-comment-999293" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/alegr1' rel='external nofollow' class='url'>alegr1</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120717-00/?p=7113#comment-999293">
			July 18, 2012 at 4:39 pm</a>		</div>

		<blockquote><p>
  Do you now see why the NT architecture is worse than windows 95?
</p></blockquote>
<p>Ugh, Windows 95 was worse in that. It didn&#39;t support FILE_SHARE_DELETE at all.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-999303">
				<div id="div-comment-999303" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120717-00/?p=7113#comment-999303">
			July 18, 2012 at 4:42 pm</a>		</div>

		<p>640k wrote:</p>
<blockquote><p>
  Prevention to modifying files &amp; dirs because of open handles is STUPID, and people HATE it.
</p></blockquote>
<p>So do developers. I <em>really</em> wanna find where in the kernel that check is and NOP it out (as if all handles have FILE_SHARE_DELETE). Any filesystem that has hard links should be able to delete a file that is open. The disk space will be reclaimed when the last handle is closed.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-alegrigoriev odd alt thread-odd thread-alt depth-1" id="comment-999313">
				<div id="div-comment-999313" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/alegr1' rel='external nofollow' class='url'>alegr1</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120717-00/?p=7113#comment-999313">
			July 18, 2012 at 4:52 pm</a>		</div>

		<blockquote><p>
  Any filesystem that has hard links should be able to delete a file that is open.
</p></blockquote>
<p>It doesn&#39;t work the way you think it works. If you issue Delete on a file with FILE_SHARE_DELETE, it only will be marked for deletion on the last handle closed, as if you opened it with FILE_FLAG_DELETE_AFTER_CLOSE. The name will still appear in the directory. You won&#39;t be able to create a duplicate file with the same name right away. You won&#39;t also be able to open that file name again.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-maurits even thread-even depth-1" id="comment-999323">
				<div id="div-comment-999323" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Maurits+%5BMSFT%5D' rel='external nofollow' class='url'>Maurits [MSFT]</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120717-00/?p=7113#comment-999323">
			July 18, 2012 at 5:04 pm</a>		</div>

		<blockquote><p>
  Which threshold does the file system use
</p></blockquote>
<p>There are many ways to answer this question.</p>
<p>One is to have the file system raise the event every time the disk utilization goes up by a percent. &nbsp;Then the client can ignore all of the events except the one that corresponds to its own threshold.</p>
<p>Another option is to tell the driver what the exact threshold is.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-999373">
				<div id="div-comment-999373" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Gabe</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120717-00/?p=7113#comment-999373">
			July 18, 2012 at 11:09 pm</a>		</div>

		<p>Maurits: You can&#39;t use 1% of drive space as a threshold. I can get a 2TB HD for about $100. When it has 1% free, it will still have 20GB available. I don&#39;t want to be notified when there&#39;s 20GB free! Explorer&#39;s 200MB threshold is 0.01% free. The 1MB threshold corresponds to half of a millionth of the disk space being free.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-999383">
				<div id="div-comment-999383" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Matt</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120717-00/?p=7113#comment-999383">
			July 19, 2012 at 1:35 am</a>		</div>

		<p>@Raymond:</p>
<p>&gt;&gt;&gt; &quot;This makes the file system responsible for determining the notification thresholds.&quot;</p>
<p>No it doesn&#39;t. It makes NtGetSystemParameters or whomever determine the thresholds. The volume manager merely triggers the notification &#8211; which it must do, since it is a volume notification, and only the volume manager knows when the amount of free-space in the volume changes.</p>
<p>But then again, maybe you&#39;re one of the people who phones up the library every ten minutes saying &quot;Has the book I ordered come in yet? No? OK I&#39;ll phone back in ten minutes&quot;. A better way would be to phone them up and say &quot;Please phone/text/email me when my book comes into the library&quot; or at the very least &quot;please phone me when you have a book delivery, so I can ask whether the book I wanted came in with that delivery&quot;. That way you&#39;re not phoning them all the time, wasting your and their time, and you also get your notification an average of 5 minutes and at best 9 minutes 59 seconds earlier than with the every-ten-minute phone call. Everyone wins.</p>
<p>&gt;&gt;&gt; &quot;What if Windows 9 wants to change the threshold or add a new fifth threshold at 1GB?&quot;</p>
<p>Then Windows9 changes the implementation of NtGetSystemParameters(SM_GETLOWDISKTHRESHOLDS) to reflect that.</p>
<p>&gt;&gt;&gt; &quot;What if there are two clients subscribed to the low disk space notification, one from Windows 7 and one from Windows 9? &quot;</p>
<p>That&#39;s why you wrap them in a lovely user-mode api in kernel32 or user32. Explorer can call that.</p>
<p>&gt;&gt;&gt; &quot;Which threshold does the file system use?&quot;</p>
<p>The one that NtGetSystemParameters tells it to use. Win32k already has lots of ways to abstract random configuration values out of system components.</p>
<p>&gt;&gt;&gt; &quot;It&#39;s also strange to have the file system aware of what is basically a UI feature.&quot;</p>
<p>It&#39;s not a UI feature, it&#39;s an event. If the UI wishes to use this event for showing a balloon tip, great. If the Task Scheduler wants to use it as a trigger for starting a process, that&#39;s cool too. If explorer wants to use it as a trigger to start deleting or compressing temporary files on disk, sure that&#39;s great as well, or if a database wants to use it as a warning then who am I to say no? It&#39;s only a UI feature because you&#39;re looking at it with your UI-feature goggles on.</p>
<p>@gabe:</p>
<p>&gt;&gt;&gt; &quot;if you have lots of filesystems you might even need a whole extra thread to wait for all these signals.&quot;</p>
<p>WaitForMultipleObjectsEx</p>
<p>&gt;&gt;&gt; &quot;You can&#39;t use X% &#8230; Explorer uses Y%!&quot;</p>
<p>Read Maurits&#39; post, reading &quot;a&quot; in &quot;goes up by a percent&quot; as an algebraic term, as in, &quot;goes up by n percent&quot;. If you&#39;re going to attack ideas, attack the idea, not the finger-in-the-air values used for descriptive purposes.</p>
<div class="post">[<i>Say you have a machine running Windows Server 2008. NtGetSystemParameters will return the Windows Server 2008 threshold. You have a client running Windows 7. The client connects to your server and says, &quot;Let me know when the disk space gets low.&quot; The server will call NtGetSystemParameters and retrieve the <span style="text-decoration:underline;">server&#39;s</span> threshold, which is not the same as the threshold that Windows 7 wants. You then get people saying, &quot;Sometimes I&#39;m warned when the disk space drops below 2GB, and sometimes I don&#39;t get warned until it drops below 1GB.&quot; In your library case, suppose somebody wants to know when there are fewer than 3 copies of the book available. They call the library and say &quot;Let me know when the book availability gets low&quot; and the library looks at its NtGetSystemParameters(BOOK_ALERT_LEVEL) and sees that the value is 2. The book count drops to 2. No call is made. Customer later casually notices that the book count is 2 and says, &quot;Hey, I told you I wanted to know when the book count dropped below 3!&quot; Also, the threshold needs to be adjusted so it doesn&#39;t notify constantly if disk space fluctuates just above/below the threshold. The correct way to do this (if it is done at all) is to have an IOCTL that can be fired per handle called &quot;Complete when disk space goes below X or above Y.&quot; But you <span style="text-decoration:underline;">still</span> have to poll, because you may have lost connectivity to the server, which closed the handle! -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-maurits odd alt thread-odd thread-alt depth-1" id="comment-999453">
				<div id="div-comment-999453" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Maurits+%5BMSFT%5D' rel='external nofollow' class='url'>Maurits [MSFT]</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120717-00/?p=7113#comment-999453">
			July 19, 2012 at 8:12 am</a>		</div>

		<p>Gabe&#39;s point is valid; users will be far more interested in &quot;0.03% available&quot; vs. &quot;0.02% available&quot; than in &quot;47.03% available&quot; and &quot;47.02% available.&quot;</p>
<p>Going up a level, I wonder if what the user would actually want is something like &quot;it looks like you&#39;ve been writing a lot of data to this drive recently; if you keep it up you&#39;ll run out of space in about three minutes.&quot;</p>
<p>Obvious solution: have WriteFile run slower and slower as the disk runs out of space. &nbsp;That way the disk will never be full.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-999483">
				<div id="div-comment-999483" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blogs.msdn.com/johnstonj_4000_inn_2D00_soft.com/ProfileUrlRedirect.ashx' rel='external nofollow' class='url'>johnstonj@inn-soft.com</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120717-00/?p=7113#comment-999483">
			July 19, 2012 at 9:03 am</a>		</div>

		<p>&quot;And I may add, I&#39;ve lost count on how many times I&#39;ve implemented retry-logic for recursively removing folders. At least in a dozen different languages. None of ms frameworks/apis has this included.&quot;</p>
<p>Is that why Git on Windows (MSysGit) seems to be unable to fully clean a code repository when there is a lot to clean? &nbsp;Suppose I have dozens of directories that need to be removed as part of cleaning. &nbsp;Sometimes I might have one or two directories remaining after the clean, that should have been deleted. &nbsp;I always wonder what&#39;s up with that? &nbsp;I have to clean twice to be sure everything is clean. &nbsp;What causes that?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-999513">
				<div id="div-comment-999513" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Klimax</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120717-00/?p=7113#comment-999513">
			July 19, 2012 at 10:05 am</a>		</div>

		<p>@Matt 18 Jul 2012 10:13 AM:</p>
<p>&quot;The kernel is already (deliberately and permanently) tied to Win32&quot;</p>
<p>This is absolutely wrong as it can only get. Kernel is second lowest layer in NT architecture separate from HAL and upper levels. See: <a rel="nofollow" target="_new" href="http://p.blog.csdn.net/images/p_blog_csdn_net/hongmy525/339986/o_WinNtKernel2-3.bmp" rel="nofollow">p.blog.csdn.net/&#8230;/o_WinNtKernel2-3.bmp</a> for illustration. Win32 is subsystem as is POSIX. Kernel provides services to them, through another few layers but itself is independent of them. (As can be seen subsystems are user-mode , which is quite different thing from kernel mode.)</p>
<p>For more see Windows Internals by Mark Russinovich. (Very detailed)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-999583">
				<div id="div-comment-999583" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Matt</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120717-00/?p=7113#comment-999583">
			July 19, 2012 at 3:43 pm</a>		</div>

		<p>@Klimax</p>
<blockquote><p>
  &gt;&gt; &quot;This is absolutely wrong as it can only get &#8230; For more see Windows Internals by Mark Russinovich. (Very detailed)&quot;
</p></blockquote>
<p>I worked with the guy who co-wrote that book, and you&#39;re wrong. NT used to be decoupled, but has been deliberately tied to Win32 since Vista. They are still developed by different teams, but it is not possible to separate them. ntoskrnl loads win32k.sys during boot, and that is not configurable.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-999563">
				<div id="div-comment-999563" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">f0dder</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120717-00/?p=7113#comment-999563">
			July 19, 2012 at 12:17 pm</a>		</div>

		<p>@JamesJohnston: &quot;GIT on Windows&quot;, or TortoiseGIT? Tortoise causes this often, whether it be git or svn or hg. Haven&#39;t seen it from a shell, though.</p>
<p>I&#39;m personally pretty fond of Windows&#39; &quot;gestapo-locking&quot;, having run into various &quot;funny episodes&quot; on *u*x&#8230; it sure does suck when you&#39;re dealing with badly programmed applications (including explorer!), but the alternative is worse.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-999623">
				<div id="div-comment-999623" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120717-00/?p=7113#comment-999623">
			July 19, 2012 at 9:15 pm</a>		</div>

		<p>@alegrl1: The existence of incorrect implementations does not preclude correct implementations. Besides, I could always rename it to .nfsXXXXXXXXX first.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-999673">
				<div id="div-comment-999673" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Klimax</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120717-00/?p=7113#comment-999673">
			July 20, 2012 at 10:16 am</a>		</div>

		<p>@Matt:</p>
<p>Really? Anonymous commenter supposedly says some things, which are not backed by anything. Got something to back supposed tying?</p>
<p>(For now I&#39;ll go with the books over Anon poster)</p>
<p>Anyway: Win32k is loaded by Csrss.exe which is started by Smss which is started by kernel(). Second, fact that something would load/start something doesn&#39;t make it tied to it&#8230; Also requriment of Windows subystem is not in kernel.</p>
<p>So at minimum one thing you posted is already shown to be wrong, what else can be then wrong in your post?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-999733">
				<div id="div-comment-999733" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Matt</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120717-00/?p=7113#comment-999733">
			July 21, 2012 at 11:29 am</a>		</div>

		<p>@Klimax</p>
<p>OK. I&#39;ll play ball.</p>
<p>Firstly, let&#39;s actually read the Windows Internal&#39;s book, rather than just assume it agrees with you. I quote (page 50, WinInternals Part 1 in Chapter &quot;Environment Subsystems and Subsystem Dlls&quot; subchapter &quot;Windows Subsystem&quot;):</p>
<p>&quot;Although Windows was [originally] designed to support multiple, independent environment subsystems, from a practical perspective, having each subsystem implement all the code to handle windowing and display I/O would result in a large amount of duplication of system functions that, ultimately, would negatively affect both system size and performance. Because Windows was the primary subsystem, the Windows designers decided to locate these basic functions there and have the other subsystems call on the Windows subsystem to perform display I/O. Thus, the SUA subsystem calls services in the Windows subsystem to perform display I/O.</p>
<p>As a result of this design decision, the Windows subsystem is a required component for any Windows system, even on server systems with no interactive users logged in. Because of this, the process</p>
<p>is marked as a critical process (which means if for any reason it exits, the system crashes).&quot;</p>
<p>Secondly, if you disagree with both the book AND me, we can just run strings.exe against ntoskrnl.exe and you&#39;d see win32k in there, plain as day, including the path that windows loads it from.</p>
<p>And finally, in an ironic twist to your claim &quot;So at minimum one thing you posted is already shown to be wrong&quot;, I&#39;ll be a pedant and point out that Win32k isn&#39;t actually loaded by CSRSS at all (in fact, csrss.exe is loaded from win32k.sys). Win32k.sys is loaded by ntoskrnl in response to an NtSetSystemInformation syscall from inside Smss.exe. Csrss is the user-mode part of win32k.sys (once again, you&#39;d know this if you actually read the book you&#39;re using to try and disagree with me).</p>
<p>And just in response to which ever smart alec actually DOES follow this through and points out that the second parameter to the NtSetSystemInformation syscall is a UNICODE_STRING version of &quot;\SystemRootSystem32win32k.sys&quot; parameter and foolishly thinks this is proof that win32k.sys&#39;s loading is actually decoupled from NT (which it used to be before vista &#8211; kinda like how I said &quot;NT used to be decoupled from Windows before Vista&quot;), let&#39;s actually follow the call in WinDbg, IDA or whatever disassembler takes your pick.</p>
<p>NtSetSystemInformation(</p>
<p>&nbsp;__in DWORD p1,</p>
<p>&nbsp;__in void* p2,</p>
<p>&nbsp;__in size_t sizeP2)</p>
<p>{</p>
<p>&nbsp;switch(p1)</p>
<p>&nbsp;{</p>
<p>&nbsp; &nbsp;case SystemExtendServiceTableInformation:</p>
<p>&nbsp; &nbsp; &nbsp;if(CurrentMode != KernelMode)</p>
<p>&nbsp; &nbsp; &nbsp;{</p>
<p>&nbsp; &nbsp; &nbsp; &nbsp;if(!Param2IsAValidUnicodeString()) return E_GOAWAY;</p>
<p>&nbsp; &nbsp; &nbsp; &nbsp;if(!IsSmssExe()) return E_GOAWAY;</p>
<p>&nbsp; &nbsp; &nbsp; &nbsp;if(0 == memcmp(Param2,&quot;\SystemRoot\System32\win32k.sys&quot;)) return E_GOAWAY;</p>
<p>&nbsp; &nbsp; &nbsp;}</p>
<p>&nbsp; &nbsp; &nbsp;MmLoadSystemImage(ParameterWhichMustBeWin32kDotSys);</p>
<p>&nbsp;}</p>
<p>}</p>
<p>Thanks for playing. Better luck next time.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-999783">
				<div id="div-comment-999783" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Klimax</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120717-00/?p=7113#comment-999783">
			July 22, 2012 at 5:27 am</a>		</div>

		<p>&quot;Windows subsystem is a required component &quot; =! &quot;Kernel is tied to it.&quot; (So, misinterpretation of book noted) Also you&#39;re still trying to peddle, that loading == tied =&gt; Still wrong.</p>
<p>Also you missed &quot;The Windows executive is the upper layer of Ntoskrnl.exe. (The kernel is the lower layer.)&quot; It&#39;s possible to have components well defined yet in one executable.</p>
<p>&quot;And finally, in an ironic twist to your claim &quot;So at minimum one thing you posted is already shown to be wrong&quot;, I&#39;ll be a pedant and point out that Win32k isn&#39;t actually loaded by CSRSS at all (in fact, csrss.exe is loaded from win32k.sys). Win32k.sys is loaded by ntoskrnl in response to an NtSetSystemInformation syscall from inside Smss.exe. Csrss is the user-mode part of win32k.sys (once again, you&#39;d know this if you actually read the book you&#39;re using to try and disagree with me).&quot;</p>
<p>One thing I had wrong (misread sentence) is that csrss starts win32k, that is started by Smss. (still not kernel)</p>
<p>From Windows Internals 5th edition; 13.1.5 Smss, Csrss, and Wininit p.987:</p>
<p>&quot;17. At this point, SmpLoadDataFromRegistry returns to SmpInit, which returns to the main</p>
<p>thread entry point. Smss then creates the number of initial sessions that were defined (typically,</p>
<p>only one, session 0, but you can change this number through the NumberOfInitialSessions registry</p>
<p>value in the Smss registry key mentioned earlier) by calling SmpCreateInitialSession, which</p>
<p>creates an Smss process for each user session. This function’s main job is to call SmpStartCsr to</p>
<p>start Csrss in each session.</p>
<ol>
<li>As part of Csrss’s initialization, it loads the kernel-mode part of the Windows subsystem</li>
</ol>
<p>(Win32k.sys). The initialization code in Win32k.sys uses the video driver to switch the screen to</p>
<p>the resolution defined by the default profile, so this is the point at which the screen changes from</p>
<p>the VGA mode the boot video driver uses to the default resolution chosen for the system&quot;</p>
<p>Anyway your whole reply is still in contradiction to whole chapter 13. (Currently part2 with it of 6th edition is unreleased.) Your supposed RI is bit suspect, but can&#39;t prove it as I don&#39;t have necesary skills with debuggers nor access to advenced tools. (but I&#39;ll take a look at procmon and its bootlogging)</p>
<p>&quot;Thanks for playing. Better luck next time.&quot;</p>
<p>It didn&#39;t end yet&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>