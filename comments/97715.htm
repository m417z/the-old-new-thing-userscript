<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (26)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1 parent" id="comment-1319735">
				<div id="div-comment-1319735" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Danny</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180104-00/?p=97715#comment-1319735">
			January 4, 2018 at 8:30 am</a>		</div>

		<p>&#8220;This series repeats the above exercise in desktop apps in various languages&#8230;&#8221; &#8211; when you reach Ada, let me know :P</p>

		
				</div>
		<ol class="children">
		<li class="comment odd alt depth-2 parent" id="comment-1319805">
				<div id="div-comment-1319805" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Rick C</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180104-00/?p=97715#comment-1319805">
			January 4, 2018 at 9:48 am</a>		</div>

		<p>He said they&#8217;re supposed to be getting easier, not more tedious.</p>
<p>I kid, I kid.  I learned Ada in college and liked it, mostly, but it struck me, as it might a Kzin, as verbose.</p>

		
				</div>
		<ol class="children">
		<li class="comment even depth-3 parent" id="comment-1319816">
				<div id="div-comment-1319816" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Peter Doubleday</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180104-00/?p=97715#comment-1319816">
			January 4, 2018 at 10:05 am</a>		</div>

		<p>Herbivore!</p>

		
				</div>
		<ol class="children">
		<li class="comment odd alt depth-4" id="comment-1319825">
				<div id="div-comment-1319825" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Buster</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180104-00/?p=97715#comment-1319825">
			January 4, 2018 at 11:59 am</a>		</div>

		<p>Eater of roots and leaves!</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment byuser comment-author-s-m-joshi-02 even thread-odd thread-alt depth-1 parent" id="comment-1319745">
				<div id="div-comment-1319745" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/camhusmj38' rel='external nofollow' class='url'>camhusmj38</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180104-00/?p=97715#comment-1319745">
			January 4, 2018 at 8:44 am</a>		</div>

		<p>You missed an even harder way. COM in C &#8211; real programmers manually consume vtables.<br />
(Lies down tries not to think of it again.)</p>

		
				</div>
		<ol class="children">
		<li class="comment odd alt depth-2" id="comment-1319776">
				<div id="div-comment-1319776" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Peter Doubleday</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180104-00/?p=97715#comment-1319776">
			January 4, 2018 at 9:20 am</a>		</div>

		<p>Perverted genius!  The very concept of parsing a vtable is &#8230; let&#8217;s not go there.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-wndsks even depth-2 parent" id="comment-1319795">
				<div id="div-comment-1319795" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/skSdnW' rel='external nofollow' class='url'>skSdnW</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180104-00/?p=97715#comment-1319795">
			January 4, 2018 at 9:32 am</a>		</div>

		<p>Doing it in pure C++ without the WRL stuff is about the same as in C, just without the extra vtbl access and the extra parameter. I have done it in MinGW with a pre-Win8 era SDK and it is not very fun, these new headers files are not meant to be parsed by humans and finding the right things to copy is hard sometimes because of all the templates. MSDN is not helpful either because it hides all the low-level details.</p>

		
				</div>
		<ol class="children">
		<li class="comment odd alt depth-3 parent" id="comment-1319815">
				<div id="div-comment-1319815" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Peter Doubleday</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180104-00/?p=97715#comment-1319815">
			January 4, 2018 at 10:01 am</a>		</div>

		<p>So, doing it in C++ is pretty much the same as doing it in C, but without the extra vtable access.</p>
<p>Only slight problem with that is that it doesn&#8217;t say anything about the vtable access.  Which is a very brittle and unstable way to go.</p>

		
				</div>
		<ol class="children">
		<li class="comment even depth-4" id="comment-1319895">
				<div id="div-comment-1319895" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">laonianren</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180104-00/?p=97715#comment-1319895">
			January 5, 2018 at 7:58 am</a>		</div>

		<p>COM (upon which WinRT is based) isn&#8217;t defined in terms of vtables.  A COM interface is just a bunch of pointers in memory laid out according to the COM specification.  Not coincidentally, the chosen layout is the same as the obvious layout for simple C++ vtables.</p>
<p>You could argue that expecting the C++ compiler to emit vtables that match the COM specification is more brittle than coding directly to the specification using C.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment odd alt depth-2 parent" id="comment-1319835">
				<div id="div-comment-1319835" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Dave</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180104-00/?p=97715#comment-1319835">
			January 4, 2018 at 4:16 pm</a>		</div>

		<p>Naah, that&#8217;s a method for leedle weemen.  Real Men(tm) use the Meltdown vulnerability to read the info straight from kernel memory via a user-space app.<br />
Raymond, will you be including that in your list of examples?</p>

		
				</div>
		<ol class="children">
		<li class="comment even depth-3 parent" id="comment-1320175">
				<div id="div-comment-1320175" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://programmerman.net/' rel='external nofollow' class='url'>Nick</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180104-00/?p=97715#comment-1320175">
			January 8, 2018 at 1:13 pm</a>		</div>

		<p>Dave, you could have had the same comment without being offensive by saying &#8220;Naah, that method is too easy&#8221; with your first sentence.</p>

		
				</div>
		<ol class="children">
		<li class="comment odd alt depth-4" id="comment-1320595">
				<div id="div-comment-1320595" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">middings</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180104-00/?p=97715#comment-1320595">
			January 11, 2018 at 6:51 pm</a>		</div>

		<p>You must read Dave&#8217;s comment with Rainier Wolfcastle&#8217;s accent.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment byuser comment-author-entegygmail-com even thread-even depth-1 parent" id="comment-1319755">
				<div id="div-comment-1319755" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Entegy' rel='external nofollow' class='url'>Entegy</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180104-00/?p=97715#comment-1319755">
			January 4, 2018 at 8:52 am</a>		</div>

		<p>I know you said we&#8217;re doing this the hard way, but is there anything stopping a C++ app from querying WMI for this?</p>

		
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-oldnewthing bypostauthor odd alt depth-2 parent" id="comment-1319786">
				<div id="div-comment-1319786" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Raymond+Chen+-+MSFT' rel='external nofollow' class='url'>Raymond Chen - MSFT</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180104-00/?p=97715#comment-1319786">
			January 4, 2018 at 9:22 am</a>		</div>

		<p>Sure, go ahead and query WMI if you like. I was trying to find something simple yet interesting as motivation. You are welcome to invent your own motivation.</p>

		
				</div>
		<ol class="children">
		<li class="comment even depth-3" id="comment-1319995">
				<div id="div-comment-1319995" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">640k</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180104-00/?p=97715#comment-1319995">
			January 7, 2018 at 5:12 pm</a>		</div>

		<p>Using wmi should actually be considered the hard way to do it. Almost all calls to wmi can hang your process, and do so as soon as the wmi database has some internal corruption, which is very common on an arbitrary server. With 1000 vms (in the wmi company&#8217;s own cloud), a corruption usually happens once a week. Wmi is very brittle technology, you have to wrap the api in robustness that you develop yourself, though another option is of course to ignore the problem and prepare for angry calls from your customers due to hanged apps.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1 parent" id="comment-1319775">
				<div id="div-comment-1319775" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Peter Doubleday</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180104-00/?p=97715#comment-1319775">
			January 4, 2018 at 9:18 am</a>		</div>

		<p>I&#8217;m relieved to say, this looks pretty easy.  Only one extra dependency?</p>
<p>Concerning the mixing of C and C++ (headers): I&#8217;m not entirely sure that I&#8217;ve ever been able to do anything else in Windows.  Probably I&#8217;ve over-used <b>stdio.h</b>, or it&#8217;s a form of insanity, or something.  I will say that (networking headers aside) it&#8217;s always seemed fairly painless compared to the same in Linux, where from memory you have to juggle the C++ standard headers, the C standard headers, the Linux standard headers, and sometimes even the Posix standard headers.  But in either case it&#8217;s doable if you&#8217;re motivated enough.</p>
<p>(Of course, you are joking, and this only applies to the output line in this case, and therefore the issue is moot.)</p>
<p>Looking forward to the Interop version, which I&#8217;m guessing will in fact have to deal with more &#8220;gotchas&#8221; than this version &#8230;</p>

		
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-koldude even depth-2" id="comment-1319886">
				<div id="div-comment-1319886" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/kantos' rel='external nofollow' class='url'>kantos</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180104-00/?p=97715#comment-1319886">
			January 5, 2018 at 6:14 am</a>		</div>

		<p>The perfectionist in me gets annoyed because in C++ it should be <code>#include &lt;cstdio&gt;</code> that said it&#8217;s not <em>wrong</em> per se to use the C header.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment odd alt thread-even depth-1" id="comment-1319826">
				<div id="div-comment-1319826" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">James</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180104-00/?p=97715#comment-1319826">
			January 4, 2018 at 2:18 pm</a>		</div>

		<p>I mean there&#8217;s an argument to be made that the system serial number shouldn&#8217;t be readable from an unprivileged process.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-odd thread-alt depth-1 parent" id="comment-1319845">
				<div id="div-comment-1319845" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Pietro Gagliardi (andlabs)</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180104-00/?p=97715#comment-1319845">
			January 4, 2018 at 5:41 pm</a>		</div>

		<p>Wait, I forget; aren&#8217;t programs that call Windows Runtime functions like RoGetActivationFactory() supposed to call RoInitialize(), not CoInitialize()? Though I imagine I could change CCoInitialize into CRoInitialize by just changing the functions&#8230;</p>

		
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-archangelpip odd alt depth-2" id="comment-1319855">
				<div id="div-comment-1319855" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Darran+Rowe' rel='external nofollow' class='url'>Darran Rowe</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180104-00/?p=97715#comment-1319855">
			January 4, 2018 at 10:02 pm</a>		</div>

		<p>Technically yes, but I think for a desktop application they do the same work.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-fredericmagnyf even depth-2 parent" id="comment-1319876">
				<div id="div-comment-1319876" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Medinoc' rel='external nofollow' class='url'>Medinoc</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180104-00/?p=97715#comment-1319876">
			January 5, 2018 at 2:58 am</a>		</div>

		<p>I&#8217;m not sure it&#8217;s that simple: CCoInitialize &amp; CoInitialize() initialize as STA (as does OleInitialize()), whereas RoInitialize() apparently only supports MTA.</p>
<p>&#8230;How does the marshaling work for Windows Runtime interfaces?</p>

		
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-archangelpip odd alt depth-3" id="comment-1319896">
				<div id="div-comment-1319896" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Darran+Rowe' rel='external nofollow' class='url'>Darran Rowe</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180104-00/?p=97715#comment-1319896">
			January 5, 2018 at 8:28 am</a>		</div>

		<p>Well, the documentation for this is meh.<br />
For example, the documentation for Windows::Foundation::Initialize (which calls RoInitialize) states:<br />
Windows::Foundation::Initialize is changed to create ASTAs instead of classic STAs for the RO_INIT_TYPE value RO_INIT_SINGLETHREADED. Windows::Foundation::Initialize(RO_INIT_SINGLETHREADED) is not supported for desktop applications and will return CO_E_NOTSUPPORTED if called from a process other than a Windows Store app.<br />
However, the header RoApi only defines RO_INIT_SINGLETHREADED when you are compiling for desktop and it sets the default to RO_INIT_SINGLETHREADED for the desktop.<br />
  _Check_return_<br />
        __inline HRESULT Initialize(_In_ RO_INIT_TYPE initType</p>
<p>#if WINAPI_FAMILY_PARTITION(WINAPI_PARTITION_DESKTOP)<br />
             = RO_INIT_SINGLETHREADED<br />
#endif // WINAPI_FAMILY_PARTITION(WINAPI_PARTITION_DESKTOP)<br />
            )<br />
        {<br />
            return RoInitialize(initType);<br />
        }<br />
And calling Windows::Foundation::Initialize using the default parameters works too. So the documentation is just at odds with the headers in this case.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1 parent" id="comment-1319885">
				<div id="div-comment-1319885" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Zolone</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180104-00/?p=97715#comment-1319885">
			January 5, 2018 at 5:54 am</a>		</div>

		<p>The C way &#8230;</p>
<p>#include<br />
#include<br />
#include </p>
<p>/***<br />
From windows.system.profile.systemmanufacturers.h<br />
&#8230;<br />
		MIDL_INTERFACE(&#8220;080CCA7C-637C-48C4-B728-F9273812DB8E&#8221;)<br />
		ISmbiosInformationStatics : IInspectable<br />
&#8230;<br />
EXTERN_C const IID IID___x_ABI_CWindows_CSystem_CProfile_CSystemManufacturers_CISmbiosInformationStatics;<br />
***/</p>
<p>const IID IID___x_ABI_CWindows_CSystem_CProfile_CSystemManufacturers_CISmbiosInformationStatics =<br />
{<br />
	0x080CCA7C, 0x637C, 0x48C4, { 0xB7, 0x28, 0xF9, 0x27, 0x38, 0x12, 0xDB, 0x8E }<br />
};</p>
<p>//#pragma comment(lib, &#8220;windowsapp.lib&#8221;)<br />
#pragma comment(lib, &#8220;runtimeobject.lib&#8221;)</p>
<p>int main()<br />
{<br />
	if (SUCCEEDED(CoInitialize(NULL)))<br />
	{<br />
		TCHAR strBuffer[256];</p>
<p>		__x_ABI_CWindows_CSystem_CProfile_CSystemManufacturers_CISmbiosInformationStatics *statics;</p>
<p>		HSTRING_HEADER hhdr;<br />
		HSTRING smbiosInfo;<br />
		HSTRING serialNumber;</p>
<p>		DWORD dwWritten;</p>
<p>		WindowsCreateStringReference(<br />
			RuntimeClass_Windows_System_Profile_SystemManufacturers_SmbiosInformation,<br />
			ARRAYSIZE(RuntimeClass_Windows_System_Profile_SystemManufacturers_SmbiosInformation) &#8211; 1,<br />
			&amp;hhdr,<br />
			&amp;smbiosInfo);</p>
<p>		RoGetActivationFactory(smbiosInfo,<br />
			&amp;IID___x_ABI_CWindows_CSystem_CProfile_CSystemManufacturers_CISmbiosInformationStatics,<br />
			(VOID**)(&amp;statics));</p>
<p>		statics-&gt;lpVtbl-&gt;get_SerialNumber(statics, &amp;serialNumber);</p>
<p>		WriteConsole(GetStdHandle(STD_OUTPUT_HANDLE), strBuffer,<br />
			wsprintf(strBuffer, TEXT(&#8220;Serial number = %ls\n&#8221;),<br />
				WindowsGetStringRawBuffer(serialNumber, NULL)),<br />
			&amp;dwWritten, NULL);</p>
<p>		WindowsDeleteString(serialNumber);</p>
<p>		statics-&gt;lpVtbl-&gt;Release(statics);</p>
<p>		CoUninitialize();<br />
	}<br />
	return 0;<br />
}</p>

		
				</div>
		<ol class="children">
		<li class="comment odd alt depth-2" id="comment-1319955">
				<div id="div-comment-1319955" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Zolone</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180104-00/?p=97715#comment-1319955">
			January 5, 2018 at 6:17 pm</a>		</div>

		<p>Should be:</p>
<p>#include &lt;windows.h&gt;<br />
#include &lt;roapi.h&gt;<br />
#include &lt;windows.system.profile.systemmanufacturers.h&gt;</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment even thread-odd thread-alt depth-1" id="comment-1320446">
				<div id="div-comment-1320446" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://dbj.org' rel='external nofollow' class='url'>DBJ</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180104-00/?p=97715#comment-1320446">
			January 10, 2018 at 10:32 pm</a>		</div>

		<p>I thought (snuggly) this is *much* easier to obtain using WMI ( <a href="https://support.microsoft.com/en-us/help/558124" rel="nofollow">https://support.microsoft.com/en-us/help/558124</a> ) but alas it returns &#8220;To Be Filled By O.E.M.&#8221; &#8230; as a serial number on my machine.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-even depth-1" id="comment-1320895">
				<div id="div-comment-1320895" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Pietro Gagliardi (andlabs)</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180104-00/?p=97715#comment-1320895">
			January 15, 2018 at 12:26 pm</a>		</div>

		<p>Actually another question I only now just thought of: what is the run-time (i.e. LoadLibrary()) equivalent of linking to windowsapp.lib or runtimeobject.lib, which admittedly I&#8217;m not sure which symbols they provide? Or are they all either in combase.dll or defined in header files?</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>