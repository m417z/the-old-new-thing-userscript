<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (15)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-223193">
				<div id="div-comment-223193" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Matt</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041105-00/?p=37383#comment-223193">
			November 5, 2004 at 7:04 am</a>		</div>

		<p>Surely Windows 1.0 was the one OS that MS could have afforded to break compatibility with!</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-223203">
				<div id="div-comment-223203" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">mschaef</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041105-00/?p=37383#comment-223203">
			November 5, 2004 at 7:20 am</a>		</div>

		<p>This 286 protected mode stuff was first introduced in Windows 3.0 standard mode, no?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-223223">
				<div id="div-comment-223223" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Anonymous Coward</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041105-00/?p=37383#comment-223223">
			November 5, 2004 at 8:03 am</a>		</div>

		<p>I wrote most of my assignments at university using Write on Windows 286!</p>
<p>The thing I don&#8217;t remember is if Windows 286 had virtual memory of any sort.  From the above scheme it was possible.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-223233">
				<div id="div-comment-223233" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">mschaef</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041105-00/?p=37383#comment-223233">
			November 5, 2004 at 8:11 am</a>		</div>

		<p>&quot;The thing I don&#8217;t remember is if Windows 286 had virtual memory of any sort. From the above scheme it was possible. &quot;</p>
<p>Part of the reason I asked my question was that I thought I remembered that Windows/286 didn&#8217;t do anything 286 specific other than unmask the A20 line and allocate memory in the 1024-1088K range. Otherwise, it was plain old real mode.</p>
<p>I&#8217;m not 100% sure about this, however.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-223243">
				<div id="div-comment-223243" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Nicholas Allen</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041105-00/?p=37383#comment-223243">
			November 5, 2004 at 8:28 am</a>		</div>

		<p>286 wouldn&#8217;t have had virtual memory.  You need paging so that you can give applications a logical view of memory rather than a physical view.  That didn&#8217;t happen until the 386.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-223253">
				<div id="div-comment-223253" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Tom</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041105-00/?p=37383#comment-223253">
			November 5, 2004 at 8:51 am</a>		</div>

		<p>mschaef:<br />
<br />Couldn&#8217;t Windows 286 use more than 1MB? I think it could allocate memory upto the 16MB limit (the segment base in the descriptor was 24-bit) on the processor.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-223263">
				<div id="div-comment-223263" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ben Hutchings</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041105-00/?p=37383#comment-223263">
			November 5, 2004 at 9:51 am</a>		</div>

		<p>Nicholas: Selectors provide that virtualisation. I&#8217;d say swapping of entire segments is a kind of virtual memory, even though it&#8217;s rather less useful than paged virtual memory.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-223273">
				<div id="div-comment-223273" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Michael J.</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041105-00/?p=37383#comment-223273">
			November 5, 2004 at 9:53 am</a>		</div>

		<p>i286 allowed up to 16MB of RAM, and Windows could use it. I remember running Win3.0 in Standard Mode on my 286. One needed at least 1MB to run Windows in Standard Mode. We had got several 286 machines with 1MB onboard and with 1MB expansion card in each. The card was taking a full-length full-height 16-bit ISA slot. The expansion card allowed to set the starting memory address which it served, so I pulled one card from a machine which was intended for DOS tasks only, and put it into my machine, thus I got two huuuuge cards inside and a whopping 3MB memory. Windows was able to use all of it. As always, Windows perfomance did depend mostly of RAM size. It was barely usable with 1MB, but really flied (err, like a DC10, not like F-16) with 2MB or more. Word 2.0 was a very nice wordprocessor, but I still favored Word 6.0 for DOS for its speed and small size.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-223283">
				<div id="div-comment-223283" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">ATZ Man</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041105-00/?p=37383#comment-223283">
			November 5, 2004 at 9:56 am</a>		</div>

		<p>There are 13 bits available in a selector for indexing the LDT or GDT. The processor was capable of combining this with all or almost all of the segment base bits to access more than 16MB overall. However I never heard of an OS that tried to do that. OSs generally just worked with the offset as an offset into a uniform memory space.</p>
<p>In a Windows/286 system, there would have been a lot of junk competing for the 0-640K region and there would be ISA I/O boards mapped in between 640K and 1MB.</p>
<p>I think Windows/286 could spill stuff to the hard drive in temporary files or use an XMS banking scheme to use more RAM than 16MB. Most people concerned about performance in those days would have a RAM drive in XMS.</p>
<p>The article on GlobalLock in Windows/386 is going to be short :)<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-223303">
				<div id="div-comment-223303" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Mike Swaim</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041105-00/?p=37383#comment-223303">
			November 5, 2004 at 11:04 am</a>		</div>

		<p>I had a &#8216;286 with 6 MB of memory. (6 was on an ISA card using SIMMs liberated from old Sparkstations.) Windows was MUCH faster with my temp directory on a 2 MB RAMDisk.<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-223343">
				<div id="div-comment-223343" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Sven G. Ali</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041105-00/?p=37383#comment-223343">
			November 5, 2004 at 11:56 am</a>		</div>

		<p>If I recall correctly, the 286 supported segmented (rather than paged) virtual memory. The segment descriptor tables provided the address translation layer that was the key to virtual memory. It was less efficient than paging, but only because segments were variable in size and therefore more difficult to manage. Everything else was there &#8211; segmentation faults for swapping, protection bits, etc.</p>
<p>The address space consisted of a maximum of 8192 GDT and 8192 LDT segments, for a theoretical maximum of 1GB (16K segments x 64KB). The processor was of course limited to 16MB of physical RAM.</p>
<p>The 286&#8217;s Protected mode also provided a bewildering array of other hardware features that supported the implementation of a fully multithreaded, memory-protected OS (e.g., hardware support for thread switching). Unfortunately I think OS/2 1.x was the only OS that took advantage of them all.</p>
<p>The thing that most impressed me about early Windows versions is that MS invented a programming model that abstracted away the tremendous differences between Real and Protected modes, allowing Windows apps to run on both without recompilation. I still think that was some feat. Raymond, did the 286 exist when you guys were working on Windows 1.x?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-223353">
				<div id="div-comment-223353" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">ATZ Man</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041105-00/?p=37383#comment-223353">
			November 5, 2004 at 1:48 pm</a>		</div>

		<p><a target="_new" href="http://cpu-museum.de/?m=Intel&amp;f=80286" rel="nofollow">http://cpu-museum.de/?m=Intel&#038;f=80286</a><br />
<br />One of the model numbers was &quot;introduced&quot; in 1982 and was manufactured in 1984.<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-223413">
				<div id="div-comment-223413" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://jamesatuncw.com/blog' rel='external nofollow' class='url'>James Summerlin</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041105-00/?p=37383#comment-223413">
			November 6, 2004 at 9:13 pm</a>		</div>

		<p>&quot;(And please let&#8217;s just agree to disagree on whether backwards compatibility is a good thing or not.)&quot;</p>
<p>Backwards compatiblity is a good thing&#8230;but surely you are not still trying to be compatible with Windows 1.0!!!</p>
<p>James<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-223443">
				<div id="div-comment-223443" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">beuges</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041105-00/?p=37383#comment-223443">
			November 6, 2004 at 11:42 pm</a>		</div>

		<p>WinXP has to be compatible with Win2k, which has to be compatible with NT and Me, which have to be compatible with 98, which has to be compatible with 95, which has to be compatible with 3.1, which has to be compatible with 3.0, which has to be compatible with 2, which had to be compatible with 1.0.</p>
<p>Sure now its easy to say &quot;But no-one uses Windows 1.0 any more, you can break compatibility with that&quot;, but theres a chain that&#8217;s been created now&#8230; breaking windows 1.0 compatibility will break some Win 3.1 or 95 or XP program that was written using functionality that hasn&#8217;t changed since Windows 1.</p>
<p>Altho the moveability rules for GlobalAlloc are now pretty redundant, there&#8217;s some program somewhere that&#8217;s passing in those parameters and expecting things to work as they used to.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-223453">
				<div id="div-comment-223453" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.chrisormerod.com' rel='external nofollow' class='url'>Chris Ormerod</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041105-00/?p=37383#comment-223453">
			November 7, 2004 at 2:03 pm</a>		</div>

		<p>And just for kicks, the apps (calc, clock etc.) that came with Windows 2.0 still run under Windows XP&#8230;. Haven&#8217;t tried SP2.</p>
<p>But of course that compatibility isn&#8217;t perfect, I have a copy of &quot;Windows Draw 4.0&quot; (can&#8217;t remember who makes that), but they did some crazy owner drawing of the File&gt;Open dialog, but they based their drawing on the coordinates on the dialogs in Windows 95 and NT4, so since Windows 98 and 2000 changed that dialog quite a lot this program hasn&#8217;t allowed us to open or save files.  But that is the software companies fault, not Microsofts.</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>