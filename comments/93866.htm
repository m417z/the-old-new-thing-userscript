<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (10)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1 parent" id="comment-1255995">
				<div id="div-comment-1255995" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Killer{R}</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160713-00/?p=93866#comment-1255995">
			July 13, 2016 at 12:07 pm</a>		</div>

		<p>but if caller of ReadDirectoryChangesW specified completion routines &#8211; they will be called via APC. And APCs are called in same order as they queued. And since kernel queues APC when it completes calls and since calls completed in same order as requested &#8211; then completion routines should be called also in same order as corresponding ReadDirectoryChangesW-s were called, aren&#8217;t they?</p>

		
				</div>
		<ol class="children">
		<li class="comment odd alt depth-2 parent" id="comment-1255996">
				<div id="div-comment-1255996" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160713-00/?p=93866#comment-1255996">
			July 13, 2016 at 12:31 pm</a>		</div>

		<p>Stacking them on APC doesn&#8217;t work either because APC can be on top of APC.</p>
<p>However if they were asynchronous overlapped calls picked up with WaitForMultipleObjects in the order they were issued the code suddenly starts working.</p>

		
				</div>
		<ol class="children">
		<li class="comment even depth-3 parent" id="comment-1256015">
				<div id="div-comment-1256015" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Killer{R}</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160713-00/?p=93866#comment-1256015">
			July 13, 2016 at 12:57 pm</a>		</div>

		<p>Whats the problem with APC on top of APC? User-mode APCs always called in alertable wait, so everything in your hands. And it doesn&#8217;t matter if user mode APC called from alertable wait executed somewhere in code that executes another APC, if you&#8217;re careful enough.</p>

		
				</div>
		<ol class="children">
		<li class="comment odd alt depth-4 parent" id="comment-1256035">
				<div id="div-comment-1256035" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160713-00/?p=93866#comment-1256035">
			July 13, 2016 at 1:59 pm</a>		</div>

		<p>Well if you want occasionally the later one to be processed first &#8230;</p>

		
				</div>
		<ol class="children">
		<li class="comment even depth-5" id="comment-1256055">
				<div id="div-comment-1256055" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Killer{R}</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160713-00/?p=93866#comment-1256055">
			July 13, 2016 at 3:57 pm</a>		</div>

		<p>The main thing about APC queue that it is a queue. When thread comes to waitable wait &#8211; scheduler looks at queue, retrieves from it next pending item, and executes it, so flow is it called like a callback inside that alertable wait function. It doesn&#8217;t care what is behind current context &#8211; normal flow or something inside another APC. Actually I&#8217;d not be very wrong saying that thread&#8217;s user-mode code execution start from kernel-colored glasses (c) :) actually is just a first user-mode APC queued to thread.<br />
So APCs executed always in same order as queued, to break things you need to perform alertable wait before actually doing job that particular APC intended to do. Like:<br />
VOID CALLBACK APCProc(ULONG_PTR dwParam)<br />
{<br />
SleepEx(0, TRUE);<br />
DoIt(dwParam);<br />
}<br />
And this again doesn&#8217;t break APC order, it just breaks your code :) Of course you should be careful and do not use not only SleepEx(..TRUE) but also anything else that may execute alertable wait inside, that means anything higher level than base kernel32 API. My favorite example of such API-with-surprise that calls alertable wait inside is CreateToolhelp32Snapshot(TH32CS_SNAPMODULE).</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment odd alt depth-3 parent" id="comment-1256065">
				<div id="div-comment-1256065" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://harryjohnston.wordpress.com' rel='external nofollow' class='url'>Harry Johnston</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160713-00/?p=93866#comment-1256065">
			July 13, 2016 at 5:27 pm</a>		</div>

		<p>I don&#8217;t think WaitForMultipleObjects will (reliably) work, because if more than one of the events is already set when you call it there&#8217;s no way to determine which event was set first.  The same presumably applies if multiple events are set during a period when the thread is running a kernel-mode APC, as described in the documentation for PulseEvent.</p>
<p>I think you could use APC, carefully.  For example, make the APC calls do nothing but push the information into an ordered queue for another thread to take care of.</p>

		
				</div>
		<ol class="children">
		<li class="comment even depth-4 parent" id="comment-1256075">
				<div id="div-comment-1256075" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160713-00/?p=93866#comment-1256075">
			July 13, 2016 at 6:58 pm</a>		</div>

		<p>As Raymond said, calls finish in the order issued.</p>

		
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-dwalker-wk odd alt depth-5" id="comment-1256105">
				<div id="div-comment-1256105" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/DWalker' rel='external nofollow' class='url'>DWalker</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160713-00/?p=93866#comment-1256105">
			July 14, 2016 at 10:18 am</a>		</div>

		<p>Yes, but don&#8217;t forget what he said in the last paragraph.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment even depth-3 parent" id="comment-1256095">
				<div id="div-comment-1256095" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">JW</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160713-00/?p=93866#comment-1256095">
			July 14, 2016 at 4:30 am</a>		</div>

		<p>I think you have a misunderstanding about how APCs work.  They are only delivered to your thread when you are in an Alertable Wait State (e.g. SleepEx() ), not at any old time the kernel feels like it.  This means you will never get an out-of-order APC unless you are specifically doing something incorrect in the APC handler.  Generally I&#8217;d discourage putting an APC handling routine into any sort of wait state, let alone an alertable one, so I don&#8217;t see any situation in decent coding that would result in APC delivery being out of order.</p>

		
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-oldnewthing bypostauthor odd alt depth-4" id="comment-1256295">
				<div id="div-comment-1256295" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Raymond+Chen+-+MSFT' rel='external nofollow' class='url'>Raymond Chen - MSFT</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160713-00/?p=93866#comment-1256295">
			July 15, 2016 at 1:03 pm</a>		</div>

		<p>I was assuming the I/O were using an IOCP, not APCs.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>