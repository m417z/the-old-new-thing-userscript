<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (15)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment byuser comment-author-bboorman even thread-even depth-1" id="comment-1115363">
				<div id="div-comment-1115363" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Brian_EE' rel='external nofollow' class='url'>Brian_EE</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140324-00/?p=1413#comment-1115363">
			March 24, 2014 at 8:35 am</a>		</div>

		<p>Maybe now they can update the link at the bottom of their page for the C program to link to this article. <a rel="nofollow" target="_new" href="http://theory.cs.uvic.ca/dis/distribute.pl.cgi?package=">theory.cs.uvic.ca/&#8230;/distribute.pl.cgi</a></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-maurits odd alt thread-odd thread-alt depth-1" id="comment-1115423">
				<div id="div-comment-1115423" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Maurits+%5BMSFT%5D' rel='external nofollow' class='url'>Maurits [MSFT]</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140324-00/?p=1413#comment-1115423">
			March 24, 2014 at 1:16 pm</a>		</div>

		<p>The link to A000110 (from the &quot;Info about Set Partitions&quot; page) is broken: here&#39;s the correct link</p>
<p><a rel="nofollow" target="_new" href="http://oeis.org/search?q=A000110">oeis.org/search</a></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-maurits even thread-even depth-1" id="comment-1115433">
				<div id="div-comment-1115433" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Maurits+%5BMSFT%5D' rel='external nofollow' class='url'>Maurits [MSFT]</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140324-00/?p=1413#comment-1115433">
			March 24, 2014 at 1:17 pm</a>		</div>

		<p>Or better, <a rel="nofollow" target="_new" href="http://oeis.org/A000110">http://oeis.org/A000110</a></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-maurits odd alt thread-odd thread-alt depth-1" id="comment-1115443">
				<div id="div-comment-1115443" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Maurits+%5BMSFT%5D' rel='external nofollow' class='url'>Maurits [MSFT]</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140324-00/?p=1413#comment-1115443">
			March 24, 2014 at 2:41 pm</a>		</div>

		<p>Nitpick: your Bell() function&#39;s for loop should start at i = 0 rather than i = 1, to catch the Stirling(0, 0, f) case.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1115523">
				<div id="div-comment-1115523" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">GWO</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140324-00/?p=1413#comment-1115523">
			March 25, 2014 at 1:28 am</a>		</div>

		<p>There&#39;s something about that algorithm that screams &quot;Write me in lisp&quot;!</p>
<p>(Note to young people: lisp is what Haskell will look like when it eventually evolves into a useful programming language)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1115533">
				<div id="div-comment-1115533" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">silly</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140324-00/?p=1413#comment-1115533">
			March 25, 2014 at 1:51 am</a>		</div>

		<p>(((Note) (to young people)): (lisp ((((is what Haskell) (will look like) (when it eventually evolves) (into a useful programming language))))))</p>
<p>FTFY <a rel="nofollow" target="_new" href="http://stackoverflow.com/questions/234075/what-is-your-best-programmer-joke/235790#235790">stackoverflow.com/&#8230;/235790</a> :)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1115543">
				<div id="div-comment-1115543" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">AC</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140324-00/?p=1413#comment-1115543">
			March 25, 2014 at 2:35 am</a>		</div>

		<p>&gt;lisp</p>
<p>&gt;look like</p>
<p>&gt;useful programming language</p>
<p>I like functional programming like the next of you, but seriously, the single worst thing about lisp is how it LOOKS (or reads).</p>
<p>&gt;Lisp=Lotsa insignificant Stupid Parentheses</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1115563">
				<div id="div-comment-1115563" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Neil</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140324-00/?p=1413#comment-1115563">
			March 25, 2014 at 4:15 am</a>		</div>

		<p>I noticed some potential optimisations:</p>
<p>n &lt; k (no results)</p>
<p>n == k (n blocks each with one element)</p>
<p>Having dealt with all of the n == 0 cases you can also cover:</p>
<p>k == 0 (no results)</p>
<p>k == 1 (one block with all n elements)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1115573">
				<div id="div-comment-1115573" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Arakula</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140324-00/?p=1413#comment-1115573">
			March 25, 2014 at 5:09 am</a>		</div>

		<p>&quot;Back in 2005&quot;?</p>
<p>Well, I&#39;m a firm believer in procrastination, too, but I don&#39;t think I got anything on my backlog that&#39;s been sleeping there for 9 years&#8230; I bow my head in admiration :-)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1115603">
				<div id="div-comment-1115603" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">GWO</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140324-00/?p=1413#comment-1115603">
			March 25, 2014 at 5:37 am</a>		</div>

		<p>@AC Fair point &#8211; although I meant &quot;look&quot; somewhat more figuratively than literally. i.e. &quot;Lisp has developed a balance between the imperative and the functional which Haskell will probably eventually emulate.&quot; [I do appreciate there is no one thing called &quot;lisp&quot;, and that each sub-lisp has itself struck this balance in a difference place] </p>
<p>See also <a rel="nofollow" target="_new" href="http://en.wikipedia.org/wiki/Greenspun%27s_tenth_rule">en.wikipedia.org/&#8230;/Greenspun%27s_tenth_rule</a></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1115613">
				<div id="div-comment-1115613" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">acq</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140324-00/?p=1413#comment-1115613">
			March 25, 2014 at 5:41 am</a>		</div>

		<p>Wow Raymond uses JS to present Haskell-like programs.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1115653">
				<div id="div-comment-1115653" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Nick</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140324-00/?p=1413#comment-1115653">
			March 25, 2014 at 9:00 am</a>		</div>

		<p>Turns out JavaScript is actually a pretty cool language that lets you do some pretty neat things.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-davebacher even thread-even depth-1" id="comment-1115673">
				<div id="div-comment-1115673" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Dave+Bacher' rel='external nofollow' class='url'>Dave Bacher</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140324-00/?p=1413#comment-1115673">
			March 25, 2014 at 9:21 am</a>		</div>

		<p>That JavaScript doesn&#39;t pass coding standards because it is comprehensible. &nbsp;</p>
<p>First, run each word in the routine names through a thesaurus and pick the best and most incomprehensible synonym. &nbsp;Then, remove such minor letters as e. &nbsp;After that, introduce at least three spelling errors in each word. &nbsp;To be cool, also replace all c&#39;s with k&#39;s, and all k&#39;s with c&#39;s. &nbsp;If there&#39;s an f, that becomes ph and so forth.</p>
<p>Instead of using separate functions &#8212; use one function, pass it a parameter that indicates which work to do. &nbsp;Don&#39;t make the mistake of doing all the related work together, instead intermix the lines with an if statement checking which work to do on a line by line basis. &nbsp;The JavaScript console is for the weak, so instead use jQuery and post to Google Docs or Office Online. &nbsp;In addition be cautious to avoid the error of using asynchronous requests, because nothing signals fantastic JavaScript like the browser hanging while it is running.</p>
<p>If possible, name your function $ as that is sure not to collide with anything else on the page.</p>
<p>Now you have proper JavaScript code.</p>
<p>All kidding aside, it&#39;s an elegant solution to the problem though.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1115763">
				<div id="div-comment-1115763" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Gabe</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140324-00/?p=1413#comment-1115763">
			March 25, 2014 at 7:38 pm</a>		</div>

		<p>Nick: Raymond&#39;s JS code is actually pretty straightforward to translate into C#. Just add some types, change the spelling of &quot;concat&quot; to &quot;Concat&quot; and &quot;map&quot; to &quot;Select&quot;, and change the &quot;function&quot; syntax, and it works.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1115783">
				<div id="div-comment-1115783" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ralph</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140324-00/?p=1413#comment-1115783">
			March 26, 2014 at 6:46 am</a>		</div>

		<p>I like the use of javascript here, opening a fresh tab in my browser and bringing up its console is a very quick way of writing/testing a quick function like this one.</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>