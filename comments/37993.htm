<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (45)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-206913">
				<div id="div-comment-206913" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Cooney</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040901-00/?p=37993#comment-206913">
			September 1, 2004 at 7:18 am</a>		</div>

		<p>Hey Raymond,<br />
<br />Your sidebar looks all borked in Mozilla, FYI.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-206923">
				<div id="div-comment-206923" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.winsper.org.uk' rel='external nofollow' class='url'>Darren Winsper</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040901-00/?p=37993#comment-206923">
			September 1, 2004 at 7:33 am</a>		</div>

		<p>Looks fine here, using Firefox 0.9.3</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-206933">
				<div id="div-comment-206933" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Stephane Rodriguez</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040901-00/?p=37993#comment-206933">
			September 1, 2004 at 7:37 am</a>		</div>

		<p>A topic revolving around ShellExecute (&quot;<a target="_new" href="<a target="_new" href="http://xxxx&quot;" rel="nofollow"></a><a href="http://xxxx&#038;quot" rel="nofollow">http://xxxx&#038;quot</a>;&#8220;><a target="_new" href="http://xxxx&quot;" rel="nofollow"></a><a href="http://xxxx&#038;quot" rel="nofollow">http://xxxx&#038;quot</a>;) that I have seen covered nowhere : if any COM application is running in the system, then depending on its health it might provide a Ctrl+R ShellExecute(&quot;<a target="_new" href="<a target="_new" href="http://xxxx&quot;" rel="nofollow"></a><a href="http://xxxx&#038;quot" rel="nofollow">http://xxxx&#038;quot</a>;&#8220;><a target="_new" href="http://xxxx&quot;" rel="nofollow"></a><a href="http://xxxx&#038;quot" rel="nofollow">http://xxxx&#038;quot</a>;) from showing an Internet Explorer window at all, or very slowly (1 minute for instance to wait before the window pops up). And vice versa.<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-206943">
				<div id="div-comment-206943" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.strangelights.com' rel='external nofollow' class='url'>Robert Pickering</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040901-00/?p=37993#comment-206943">
			September 1, 2004 at 8:00 am</a>		</div>

		<p>Note: If you just want to launch the URL generically, you should use </p>
<p>ShellExecute(NULL, &quot;open&quot;, &quot;<a target="_new" href="http://www.microsoft.com&quot;" rel="nofollow"></a><a href="http://www.microsoft.com&#038;quot" rel="nofollow">http://www.microsoft.com&#038;quot</a>;,<br />
<br />             NULL, NULL, SW_SHOWNORMAL);</p>
<p>&#8230; For some reason if you do this and your default is internet explorer and you already have a internet explorer browser open then the shell will open it in that browser. I find this very annoying. Why is it so? Why not a new internet explorer.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-206953">
				<div id="div-comment-206953" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Cooney</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040901-00/?p=37993#comment-206953">
			September 1, 2004 at 8:01 am</a>		</div>

		<p>I must have failed to load the stylesheet or something. It&#8217;s back to normal, now.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-206963">
				<div id="div-comment-206963" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Nekto</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040901-00/?p=37993#comment-206963">
			September 1, 2004 at 8:13 am</a>		</div>

		<p>Tools -&gt; Options -&gt; Advanced -&gt; Reuse Windows for lunch shortcuts</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-206973">
				<div id="div-comment-206973" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">David Candy</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040901-00/?p=37993#comment-206973">
			September 1, 2004 at 8:17 am</a>		</div>

		<p>In AppPaths there appear to be several undocumented features.</p>
<p>One semi documented (and only recently) is the path value. This appends (or prepends) the directory to the Path for that process (and for years I thought it set the current directory).</p>
<p>There is also OpenURL. And more recently SaveURL appeared. OpenURL seemed to indicate it could work with URL paths and presumbably daveURL is similar. Though what effect this has I don&#8217;t know.</p>
<p>There is also UseShortName.</p>
<p>It would be good to see actual definitions for these rather than guessing based on their name.</p>
<p>Now if they only made cmd as smart as shellexecute.</p>
<p>There are two others.<br />
<br />Block on TS Non Install mode<br />
<br />and<br />
<br />RunAsOnNonAdminInstall</p>
<p>Presumbably these are meant for terminal server and setup/install programs.</p>
<p>Also one MS component and some third party are storing configuration info here. Such as AVG (it stores the local language that appears on the context menu that it&#8217;s faulty context menu extension uses). Also cmmgr32.exe (I think is MS but I don&#8217;t actually have the file) uses<br />
<br />CMInternalVersion<br />
<br />CmNative<br />
<br />CmstpExtensionDll<br />
<br />I presume these are app specific.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-206983">
				<div id="div-comment-206983" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://weblogs.asp.net/oldnewthing/' rel='external nofollow' class='url'>Raymond Chen</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040901-00/?p=37993#comment-206983">
			September 1, 2004 at 8:53 am</a>		</div>

		<p>cmd is intentionally not as &quot;smart&quot; as ShellExecute. cmd is for raw low-level stuff. Imagine if you went to cmd.exe and typed &quot;dir&quot; and you didn&#8217;t get a directory listing but rather some &quot;filtered pretty version&quot; that the shell &quot;decided&quot; you should see. Imagine if you set your environment variables just right and then ran a command from cmd.exe and cmd.exe went and changed your environment &quot;to help you out&quot;.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-206993">
				<div id="div-comment-206993" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://weblogs.asp.net/oldnewthing/' rel='external nofollow' class='url'>Raymond Chen</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040901-00/?p=37993#comment-206993">
			September 1, 2004 at 8:54 am</a>		</div>

		<p>Stephane: It&#8217;s called DDE. I&#8217;ll write about it later.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-207003">
				<div id="div-comment-207003" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://roub.net/blahg' rel='external nofollow' class='url'>Paul Roub</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040901-00/?p=37993#comment-207003">
			September 1, 2004 at 8:55 am</a>		</div>

		<p>The &quot;some reason&quot;, in this case (IE View, linked at the top of your article), is that ShellExecute() was not available to me (at least not with parameters) via the standard XUL libraries.</p>
<p>Since this was a weekend hack (at best), I didn&#8217;t see myself building custom DLLs to get at ShellExecute(); there might be an easier way to get at it, but I&#8217;m busy preparing to flee Hurricane Frances, so I probably won&#8217;t get to it for a while.</p>
<p>-paul<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-207013">
				<div id="div-comment-207013" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Merle</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040901-00/?p=37993#comment-207013">
			September 1, 2004 at 9:16 am</a>		</div>

		<p>I don&#8217;t think a lot of people know about the &quot;App Paths&quot; key.</p>
<p>I love it, because I like the apple-R (pause) (type short word) to start an app.  And I keep all sorts of little apps scattered around, not in the path.</p>
<p>But another reason might be that they just don&#8217;t trust paths.  Which is not totally without reason.  Suppose Wily Virus Writer puts an iexplore.exe somewhere high in the path?  (on the other hand, I would not even attempt to locate it, because I&#8217;m one of those freaks who installs Windows on a drive other than C: and lets nothing live in &quot;Program Files&quot;&#8230;)</p>
<p>BTW, Raymond, your &#8216;ShellExecute&#8217; hyperlink has an extra %22 at the end of it that breaks it.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-207033">
				<div id="div-comment-207033" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Jonathan</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040901-00/?p=37993#comment-207033">
			September 1, 2004 at 10:57 am</a>		</div>

		<p>Ah yes, the DDE delay&#8230;  Happens pretty rarely, but just often enough to make it annoying.  Nothing like pressing Windows-E only to have your taskbar freeze for a minute.</p>
<p>I don&#8217;t think I&#8217;ve noticed it since I installed SP2&#8230; but it could still be there.</p>
<p>I also had something similar with WMP 8 on XP.  When I had been playing a CD, but stopped it and ejected it and left the CD drive open, then pressing Windows-E (or any similar DDE request) would cause WMP to bring up an &quot;Error &#8211; no disk in drive&quot; message.  Gotta love DDE.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-207063">
				<div id="div-comment-207063" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">runtime</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040901-00/?p=37993#comment-207063">
			September 1, 2004 at 11:22 am</a>		</div>

		<p>Since we are discussing IE and DDE, I just wanted to spread the word about a known IE/DDE crash on Windows ME. Here is a comment from my product&#8217;s code. &lt;:) </p>
<p>        //<br />
<br />        // If an instance of the default browser is not already running when<br />
<br />        // we try to use DDE WWW_OpenURL, Windows ME will launch a new browser<br />
<br />        // process but the browser will occasionally crash in DDEML.DLL. This<br />
<br />        // is a bug in Windows ME and affects both IE and Netscape. This<br />
<br />        // workaround was borrowed from Dreamweaver 4.01.<br />
<br />        //<br />
<br />        // For more information, see the following Macromedia Tech Notes:<br />
<br />        //<br />
<br />        // &quot;Windows ME crashes using Help or Publish Preview&quot;<br />
<br />        // <a target="_new" href="http://www.macromedia.com/support/flash/ts/documents/win_me_help_crash.htm" rel="nofollow">http://www.macromedia.com/support/flash/ts/documents/win_me_help_crash.htm</a><br />
<br />        //<br />
<br />        // &quot;Dreamweaver, and other programs that make browser calls,</p>
<p>        // sometimes crash when Previewing in Browser on Windows ME.&quot;<br />
<br />        // <a target="_new" href="http://www.macromedia.com/support/dreamweaver/releasenotes/4/releasenotes_4.htm" rel="nofollow">http://www.macromedia.com/support/dreamweaver/releasenotes/4/releasenotes_4.htm</a><br />
<br />        //<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-207073">
				<div id="div-comment-207073" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">ATZ Man</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040901-00/?p=37993#comment-207073">
			September 1, 2004 at 11:29 am</a>		</div>

		<p>I think by now the only people using Windows ME are developers who have it running on an expendable machine to test/debug for ME-compatibility. &lt;font=&quot;wingdings&quot;&gt;J&lt;/font&gt;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-207023">
				<div id="div-comment-207023" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://roub.net/blahg/archives/000145.html' rel='external nofollow' class='url'>Paul Roub : blahg</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040901-00/?p=37993#comment-207023">
			September 1, 2004 at 12:20 pm</a>		</div>

		<p>Raymond Chen &lt;a href=&quot;<a href="http://weblogs.asp.net/oldnewthing/archive/2004/09/01/223936.aspx&#038;quot" rel="nofollow">http://weblogs.asp.net/oldnewthing/archive/2004/09/01/223936.aspx&#038;quot</a>; title=&quot;&quot;How to find the Internet Explorer binary&quot;&gt;takes &quot;some people&quot; to task&lt;/a&gt; for &quot;[going] to enormous lengths to locate the Internet Explorer binary&quot;.  The linked poster-child?  &lt;a href=&quot;<a href="http://ieview.mozdev.org/&quot;&gt;IE" rel="nofollow">http://ieview.mozdev.org/&quot;&gt;IE</a> View&lt;/a&gt;.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-207083">
				<div id="div-comment-207083" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Justin Wood (Callek)</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040901-00/?p=37993#comment-207083">
			September 1, 2004 at 1:04 pm</a>		</div>

		<p>Raymond,</p>
<p>The issue with IEView is that as an XUL extension, there can be no compiled code (without much more work) in the extension.  IEView is meant to be a simple, compact codelet (which it is) to allow those who use Mozilla Products to open pages that would otherwise be broken to them. (Provided they have IE).</p>
<p>Mozilla Components do not expose shellExecute because mozilla XUL is intended to be cross OS, and exposing an OS specific function is not usually a nice solution.</p>
<p>So instead of going through the hurdles of adding a new component to Mozilla for himself, the developer of ieview just added a few rutines to find IE on the users system. If you want to allow it otherwise, the &quot;openwith&quot; extension lets you open the &quot;target&quot; of a URL with any application (you can specify)&#8230;so if the syntax ieview uses to find IE doesnt work, the latter will!</p>
<p>I understand your use for explaining the syntax here, but imo degrading &quot;ieview&quot; without knowing its reasons/design construct (albeit very passively degrading) is not a good course of action.</p>
<p>But in the end, keep up your wonderfully enlightening blog!</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-207043">
				<div id="div-comment-207043" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://jazzynupe.net/blog/archive/2004/09/01/355.aspx' rel='external nofollow' class='url'>Deep Thoughts...</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040901-00/?p=37993#comment-207043">
			September 1, 2004 at 1:58 pm</a>		</div>

		
		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-207093">
				<div id="div-comment-207093" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">darwou</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040901-00/?p=37993#comment-207093">
			September 1, 2004 at 2:12 pm</a>		</div>

		<p>One thing that bothers me is that cmd.exe will run executables that are named as non-executables.</p>
<p>For example if you rename &quot;notepad.exe&quot; to &quot;notepad.doc&quot; and enter it at the cmd.exe prompt (using &quot;notepad.doc&quot; or &quot;start notepad.doc&quot;), notepad will come up, not notepad.doc opened in Word. </p>
<p>However the shell will do the right thing (via ShellExecute) and launch Word with notepad.doc.</p>
<p>If you enter &quot;document.doc&quot; or &quot;start document.doc&quot;, cmd.exe does the right thing, and opens document.doc in Word like Shell does.</p>
<p>I&#8217;d expect cmd.exe to do what Shell does in both cases, or check the filename against %PATHEXT% and reject notepad.doc as an invalid executable.</p>
<p>I understand this quirk is due to the way CreateProcess works (it grovels the file header to determine if it&#8217;s an executable) vs ShellExecute, but it seems like rather dangerous behavior &#8212; cmd.exe can accidently launch an executable instead of a document file, and there no way short of inspecting the file before running it to know which it is.<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-207103">
				<div id="div-comment-207103" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://weblogs.asp.net/oldnewthing/' rel='external nofollow' class='url'>Raymond Chen</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040901-00/?p=37993#comment-207103">
			September 1, 2004 at 2:39 pm</a>		</div>

		<p>Because cmd.exe is doing what you said, even if what you said isn&#8217;t what you meant.  Cmd.exe is the ultimate power tool &#8211; it doesn&#8217;t second-guess you. It does exactly what you tell it. You should not operate it carelessly, because there are no safety interlocks and no do-overs.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-207113">
				<div id="div-comment-207113" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">David Candy</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040901-00/?p=37993#comment-207113">
			September 1, 2004 at 2:52 pm</a>		</div>

		<p>How does create process tell if a file is a bat file, com file or not an executable (assuming it tests the headers first and has concluded it&#8217;s not an exe).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-207143">
				<div id="div-comment-207143" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">asdf</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040901-00/?p=37993#comment-207143">
			September 1, 2004 at 3:30 pm</a>		</div>

		<p>Yeah seriously, I&#8217;m with darwou here, I thought the PATHEXT environment variable was supposed to specify which extensions to use as an executable.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-207153">
				<div id="div-comment-207153" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Pavel Lebedinsky</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040901-00/?p=37993#comment-207153">
			September 1, 2004 at 5:30 pm</a>		</div>

		<p>CreateProcess looks at the first two bytes of the file and if they are &#8216;MZ&#8217; it tries to launch it as an executable.</p>
<p>Try this little experiment: create a file named test.txt and type some text in it starting with MZ, for example &quot;MZasdasdasdasd&quot;. Then try to launch it from cmd. On my machine I get an error like this:</p>
<p>&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;<br />
<br />16 bit MS-DOS Subsystem<br />
<br />&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;<br />
<br />C:WINNTsystem32cmd.exe &#8211; test.txt<br />
<br />The NTVDM CPU has encountered an illegal instruction.<br />
<br />CS:0588 IP:016e OP:ff e9 ff fe 80 Choose &#8216;Close&#8217; to terminate the application.<br />
<br />&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;<br />
<br />Close   Ignore</p>
<p>&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;</p>
<p>CreateProcess noticed that the file starts with MZ, but it didn&#8217;t look like a valid PE executable. So CreateProcess decided that it must be a 16-bit program, and launched it inside ntvdm.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-207053">
				<div id="div-comment-207053" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Aarrgghh</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040901-00/?p=37993#comment-207053">
			September 1, 2004 at 11:04 am</a>		</div>

		<p>Raymond: Speaking of dusty old stuff like DDE, what the heck was OLE1, exactly, implementation-wise? </p>
<p>I&#8217;ve found one or two references to it in MSDN, but they were essentially fossil index entries; the actual information was no longer there[1]. It&#8217;s not that I have any *use* for the information; just curiosity. Do you do requests? It seems like a good candidate for the Raymond Chen Treatment. </p>
<p>[1] For example: <a target="_new" href="http://msdn.microsoft.com/library/default.asp?url=/library/en-us/vcmfc98/html/_mfcnotes_tn008.asp" rel="nofollow">http://msdn.microsoft.com/library/default.asp?url=/library/en-us/vcmfc98/html/_mfcnotes_tn008.asp</a><br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-207203">
				<div id="div-comment-207203" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://weblogs.asp.net/larryosterman' rel='external nofollow' class='url'>Larry Osterman</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040901-00/?p=37993#comment-207203">
			September 1, 2004 at 9:49 pm</a>		</div>

		<p>Ah yes, the old &quot;How about you make it configurable&quot; option.</p>
<p>So how do we make this registry switch discoverable?  For 99% of the cases, content sniffing will do the right thing for you &#8211; the only time you&#8217;ll have a problem is if you have a program that&#8217;s renamed to be a document.  If the thing you&#8217;re launching really is a document then cmd.exe will work correctly.</p>
<p>So you&#8217;re looking for a registry switch to control a 1% behavior.  If we put in a switch, we need to have a test case for the switch.  And that means resources that don&#8217;t get spent on other features.</p>
<p>Is this feature important enough to enough users to justify the expense?<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-207123">
				<div id="div-comment-207123" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Merle</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040901-00/?p=37993#comment-207123">
			September 1, 2004 at 2:53 pm</a>		</div>

		<p>DDE delays?  Happen daily for me.  StarTeam 4.2 suffers from them.  StarTeam, connected to a server far away down a slow link, can delay your win-E keypress from happening for *minutes*.</p>
<p>Aarrgghh: didn&#8217;t you save every MSDN library CD since the early 90s?  I just assumed they would not republish &quot;obsolete&quot; information&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-207133">
				<div id="div-comment-207133" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">darwou</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040901-00/?p=37993#comment-207133">
			September 1, 2004 at 3:00 pm</a>		</div>

		<p>&gt; it doesn&#8217;t second-guess you.<br />
<br />&gt; It does exactly what you tell it. </p>
<p>In that case, why does &quot;del *.*&quot; ask &quot;Are you sure (Y/N)?&quot;, unless you explicitly tell it not to?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-207213">
				<div id="div-comment-207213" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://url' rel='external nofollow' class='url'>name</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040901-00/?p=37993#comment-207213">
			September 1, 2004 at 10:16 pm</a>		</div>

		<blockquote><p>
  If you want to get your hands dirty, you can of course do it yourself. It involves reading the specification from the other side, this time the specification on how to register your program&#8217;s name and path (&quot;Registering Application Path Information&quot;).</p>
<p>General issue with reading specs from the other side: As you&#8217;ve taught us, Windows implementers often can&#8217;t stop when Windows fulfills its part of the contract; their code has to guess what to do when someone breaks the spec.  If someone registers an application in a slightly screwy way, ShellExecute may work whereas your version of it may not.  If that&#8217;s not true of ShellExecute, surely it&#8217;s true of other contracts.</p>
<p>Even more generally, you don&#8217;t want to reinvent the wheel unless you must &#8212; since lots of hours were put into making the old wheel sturdy.
</p></blockquote>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-207233">
				<div id="div-comment-207233" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Jordan Russell</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040901-00/?p=37993#comment-207233">
			September 2, 2004 at 12:57 am</a>		</div>

		<p>Larry Osterman wrote:<br />
<br />&quot;For 99% of the cases, content sniffing will do the right thing for you &#8211; the only time you&#8217;ll have a problem is if you have a program that&#8217;s renamed to be a document. If the thing you&#8217;re launching really is a document then cmd.exe will work correctly.&quot;</p>
<p>Imagine if Windows Explorer exhibited the same behavior as cmd.exe &#8212; if it did the right thing in &quot;99% of cases&quot; but in the remaining cases ran malicious executables disguised under document extensions. Don&#8217;t you think people would be exploiting this left and right? Would this not be deemed a &quot;security vulnerability&quot; and fixed in a heartbeat?</p>
<p>Most of the time I use the command line in place of Explorer. Why should I (and others like me) be exposed to potential trojans disguised as .doc files, while Explorer users are immune to them? Why can&#8217;t a file with a .doc extension <em>always</em> be treated as a .doc file, instead of just &quot;99%&quot; of the time?</p>
<p>I realize, of course, that there could be apps out there that rely on the present behavior. Hence the suggestion to make this &quot;configurable&quot;. Regardless, I think this is an issue that deserves attention due to the potential security ramifications.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-207163">
				<div id="div-comment-207163" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Jordan Russell</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040901-00/?p=37993#comment-207163">
			September 1, 2004 at 7:03 pm</a>		</div>

		<p>&gt; It does exactly what you tell it.</p>
<p>Except in this case you can&#8217;t tell it what you *want* it to do with the file; cmd.exe chooses one of two behaviors itself based on file&#8217;s contents.</p>
<p>Can&#8217;t this be made configurable (e.g. via a registry tweak)? I launch documents from the command line all the time and would prefer that they always open in their associated applications.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-207243">
				<div id="div-comment-207243" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://ggreig.livejournal.com/' rel='external nofollow' class='url'>Gavin Greig</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040901-00/?p=37993#comment-207243">
			September 2, 2004 at 2:38 am</a>		</div>

		<p>While recognising what you said about cmd being intentionally not as smart as ShellExecute, why don&#8217;t AppPaths work from the command line as well as the Run dialog?</p>
<p>It&#8217;s great that we&#8217;re getting a lot more command line tools appearing for Windows developers, but it&#8217;s frustrating that there doesn&#8217;t seem to be a good mechanism for making them all easily available from the command line. You soon fill your PATH to bursting point, or have to create a single folder location to cram lots of tools that expect their own folders into &#8211; or do both.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-207253">
				<div id="div-comment-207253" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">David Candy</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040901-00/?p=37993#comment-207253">
			September 2, 2004 at 2:50 am</a>		</div>

		<p>Explorer can do content sniffing. However it&#8217;s the third choice used (after file extensions, clsid in compound docs, then sniffing) which is a different order to that which COM uses.</p>
<p>The byte matching patterns are stored here<br />
<br />HKEY_CLASSES_ROOTFileType</p>
<p>And the docs for it are in the COM part of the SDK.</p>
<p>So if you rename doc extension to nothing or an unregistered extension it will still open in word from the CLSID stored in the file.</p>
<p>BIFF files (and I&#8217;ve not ever seen one) is one type that is content sniffed. From memory on 95 there were no entries as standard but XP has 10 or so.</p>
<p>I used to set a match with &lt;html&gt; so html files without extensions would still show in IE.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-207223">
				<div id="div-comment-207223" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.xxeo.com/' rel='external nofollow' class='url'>Dru Nelson</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040901-00/?p=37993#comment-207223">
			September 1, 2004 at 11:46 pm</a>		</div>

		<p>Here is the real issue. What if I just want the browser to start in a *new window*. What if the user isn&#8217;t running IE.</p>
<p>then you have to get down and dirty in the registry to find the appropriate handler for http and shell execute that.</p>
<p>Starting IE is easy, this is a little more work. For example, Mozilla/Firefox will use quotes differently.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-207313">
				<div id="div-comment-207313" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://weblogs.asp.net/oldnewthing/' rel='external nofollow' class='url'>Raymond Chen</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040901-00/?p=37993#comment-207313">
			September 2, 2004 at 8:18 am</a>		</div>

		<p>If you say &quot;start iexplore&quot; then cmd.exe will fall back to ShellExecute and then all the magic AppPaths stuff happens.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-207493">
				<div id="div-comment-207493" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Peter Smith</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040901-00/?p=37993#comment-207493">
			September 2, 2004 at 10:25 am</a>		</div>

		<p>Getting back to the original comment from Raymond (you know, about finding the IExplore comment&#8230;.): part of the problem with the solution is the documentation from MSDN.  Here&#8217;s the part of it that talks about the &#8216;lpFile&#8217; parameter (which Raymond says should be &#8216;iexplore.exe&#8217;)</p>
<p>&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;<br />
<br />lpFile<br />
<br />    [in] Pointer to a null-terminated string that specifies the file or object on which to execute the specified verb. To specify a Shell namespace object, pass the fully qualified parse name. Note that not all verbs are supported on all objects. For example, not all document types support the &quot;print&quot; verb.<br />
<br />&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;</p>
<p>Who could guess from the aboe that the lpFile doesn&#8217;t have to have a path?  Or that Shell will do something different from cmd? Raymond, you claim that Shell will find iexplore.exe all by itself: can you back that up with actual written documentation from Microsoft?</p>
<p>Interestingly, I&#8217;ve just looked at the pointer you had to the &quot;Design Specifications and Guidelines &#8211; Integrating with the System&quot; section on the AppPath.  Did you know that it was wrong?  It claims that the AppPath data is directly off of HKLM.  Who knew (other than you, of course) that it&#8217;s really somewhere else completely?</p>
<p>As an extra aside, the AppPath documentation doesn&#8217;t say that Shell will use the AppPath and cmd won&#8217;t; it just says that &quot;the system&quot; will use the AppPath data.</p>
<p>Part of the fun of writing for Windows is that some undocumented behaviour needs to be shunned, and some undocumented behaviour is encouraged, and some documented behavious is documented incorrectly.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-207543">
				<div id="div-comment-207543" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">David Candy</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040901-00/?p=37993#comment-207543">
			September 2, 2004 at 11:25 am</a>		</div>

		<p>Everyone knows about the AppPath key. It was in windows 95 and every program I&#8217;ve written has added itself, and repairs at every startup. This has been since 95/NT4 (so 9 years). It&#8217;s been a tip on my web site for years.</p>
<p>To prove it type iexplore in Start Run.</p>
<p>The shell does not ALWAYS use the apppath key. It uses it if you type in Start Run or shellexecute from a program. If you double click a file it is NOT used (and it should be). From memory it is also the last resort means of finding the file. It is implemented by the shell not create process. Create Process doesn&#8217;t use it.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-207263">
				<div id="div-comment-207263" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Jeremy Davis</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040901-00/?p=37993#comment-207263">
			September 2, 2004 at 6:04 am</a>		</div>

		<p>There are those of us who *prefer* cmd not to second-guess us. Frankly, if you&#8217;re working from a commandline you ought to know what you&#8217;re trying to execute. If you want &quot;friendly&quot; extension-based behavior, explorer and the run dialog are right there for you. Beyond that, if you want your .doc to open in word, there&#8217;s always &quot;pathtowinword.exe your.doc&quot;. cmd does what you tell it witout question, and it&#8217;s one of a very small number of things in Windows that do. Leave it be.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-207643">
				<div id="div-comment-207643" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">David Candy</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040901-00/?p=37993#comment-207643">
			September 2, 2004 at 5:33 pm</a>		</div>

		<p>You can always use Doskey. </p>
<p>doskey wipedisk=c:somefolderwipedisk $1</p>
<p>and set cmd to load a bat on startup to load your doskey definitions.</p>
<p>One thing I&#8217;ve always been curious about is the GUI order of search. Leaving out the non duplicated parts &#8211; system32 is searched, then windows, then the path (which is system32 then windows). Does windows really search system32 twice?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-207653">
				<div id="div-comment-207653" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Norman Diamond</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040901-00/?p=37993#comment-207653">
			September 2, 2004 at 6:48 pm</a>		</div>

		<p>9/2/2004 12:57 AM Jordan Russell</p>
<p>&gt; Imagine if Windows Explorer exhibited the<br />
<br />&gt; same behavior as cmd.exe &#8212; if it did the<br />
<br />&gt; right thing in &quot;99% of cases&quot; but in the<br />
<br />&gt; remaining cases ran malicious executables<br />
<br />&gt; disguised under document extensions. Don&#8217;t<br />
<br />&gt; you think people would be exploiting this<br />
<br />&gt; left and right? Would this not be deemed<br />
<br />&gt; a &quot;security vulnerability&quot;</p>
<p>Hear, hear.</p>
<p>&gt; and fixed in a heartbeat? </p>
<p>Cynics might guess differently.</p>
<p>9/2/2004 2:50 AM David Candy</p>
<p>&gt; Explorer can do content sniffing. [&#8230;]<br />
<br />&gt; So if you rename doc extension to nothing or<br />
<br />&gt; an unregistered extension it will still open<br />
<br />&gt; in word from the CLSID stored in the file.</p>
<p>Hmm, so Explorer DOES have a security vulnerability almost as bad as cmd.exe.  Fortunately Explorer gives priority to the file&#8217;s extension so it will invoke the expected application if it is associated.  But if Explorer falls back to a CLSID, a security viewpoint says that Explorer should ask the user if the user wants to run a particular application, where the recommended application is whatever.  In some cases Explorer already puts up these prompts, so this just needs to be expanded to cover cases important to security as well.</p>
<p>By the way,<br />
<br />9/1/2004 8:13 AM Nekto<br />
<br />&gt; Tools -&gt; Options -&gt; Advanced -&gt;<br />
<br />&gt; Reuse Windows for lunch shortcuts </p>
<p>Does anyone know the rules for when Internet Explorer will obey this setting vs. when Internet Explorer will ignore this setting?  I always set it, and the setting always appears to stick (i.e. if I go to Tools &#8211; Internet Options again later, it is not cleared), but at random times it doesn&#8217;t get obeyed.</p>
<p>One time recently I clicked on a link in one IE window.  The target didn&#8217;t open in the same window, and the target didn&#8217;t open in a new window, the target opened in a sub-frame of some other existing and unrelated IE window.</p>
<p>Actually some cases are not completely random.  If I click on a link in an OE message, then usually it reuses an existing IE window.  (Why do I click on links in OE messages?  Well if I have e-mailed a link to myself then I have a tendency to trust it.  If anyone wants to phish for me, they&#8217;ll have to fake me as the sender and persuade me that the link is one that I e-mailed to myself.)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-207623">
				<div id="div-comment-207623" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://ggreig.livejournal.com/' rel='external nofollow' class='url'>Gavin Greig</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040901-00/?p=37993#comment-207623">
			September 2, 2004 at 3:43 pm</a>		</div>

		<p>I&#8217;ve come across the same documentation issues as Peter Smith regarding AppPaths &#8211; thanks to him for jogging my memory.</p>
<p>Using &quot;start&quot; is OK for launching GUI programs from the command line, but it&#8217;s inappropriate for &quot;real&quot; command line use, as the command will be processed in a new command window which may close or not, depending on whether it&#8217;s a cmd command, a batch file or a console application that you&#8217;ve tried to run.</p>
<p>To give a trivial example: say I want to be able to use &quot;dir&quot; and &quot;ls&quot; interchangeably to produce directory listings, and I have a console application that provides ls behaviour. If I do &quot;start dir&quot;, a new command window appears, containing a directory listing, and stays open until I dismiss it. If I do &quot;start ls&quot;, a new command window opens, presumably containing a directory listing, but it disappears again before I can see what&#8217;s there.</p>
<p>Although there might well be circumstances in which you&#8217;d want to use a command that runs another command in a new window (as start does), neither of the above behaviours are sensible *default* behaviours for command line programs, which should do their thing, whatever it may be, in the same command window they are launched from.</p>
<p>If using start is the only way to benefit from AppPaths on the command line, it&#8217;s not very satisfactory. As things stand, AppPaths are impractical for console applications and it comes back to having a bloated and maxed-out PATH variable and/or maintaining a bloated common directory for command line tools.</p>
<p>It would be interesting to hear why this is so.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-207913">
				<div id="div-comment-207913" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">ATZ Man</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040901-00/?p=37993#comment-207913">
			September 3, 2004 at 7:07 pm</a>		</div>

		<p>N Diamond,</p>
<p>Browsers open/re-use windows differently than the shell does. You say &quot;I clicked on a link in one IE window. The target didn&#8217;t open in the same window, and the target didn&#8217;t open in a new window, the target opened in a sub-frame [somewhere].&quot; (By the way, I feel your pain.) A link can have a target attribute, e.g. &quot;&lt;a href=&quot;example.com&quot; target=&quot;peach&quot;&gt;click here&lt;/a&gt;&quot; and if there is a frame named peach accessible to the page you clicked on, it will have its document replaced with example.com. If said frame does not exist, the doc will open in a new window called &quot;peach&quot;.</p>
<p>The OE thing is some other quirk altogether. Moz TBird does the same thing to Firefox. And I often use &quot;copy link location&quot; to manually transfer the URL from the email to the one instance or tab of Firefox I want to view the link with.<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-208003">
				<div id="div-comment-208003" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Norman Diamond</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040901-00/?p=37993#comment-208003">
			September 5, 2004 at 6:02 pm</a>		</div>

		<p>9/3/2004 7:07 PM ATZ Man</p>
<p>&gt; if there is a frame named peach accessible<br />
<br />&gt; to the page you clicked on, it will have its<br />
<br />&gt; document replaced</p>
<p>Oh neat.  Odds are that the target frame was some nice unique name like &quot;frame1&quot; that no other web site designer would ever think of using so this kind of collision wouldn&#8217;t occur.  OK, so this one isn&#8217;t IE&#8217;s fault.</p>
<p>&gt; The OE thing is some other quirk altogether.<br />
<br />&gt; Moz TBird does the same thing to Firefox.</p>
<p>But OE is part of IE, right?  OE is intentionally violating the user&#8217;s setting.</p>
<p>Are TBird and Firefox part of the same program?  Can one exist without the other?  Can Linux exist without them?  Anyway, it sounds likely to also be a bug, maybe an intentional bug-for-bug workalike.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-208123">
				<div id="div-comment-208123" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://silverstr.ufies.org/blog/' rel='external nofollow' class='url'>Dana Epp</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040901-00/?p=37993#comment-208123">
			September 6, 2004 at 9:35 pm</a>		</div>

		<p>OMG. PLEASE don&#8217;t do this. Just because it&#8217;s easy doesn&#8217;t mean you want to do this. (I am referring to jamming in document extensions and letting ShellExecute figure out what to execute).</p>
<p>Most developers use ShellExecute. It seems harmless enough as in the docs it is explained as a wrapper around the CreateProcess() API call. But thats wrong. It might wrap the CreateProcess() call, but it does so in a way that exposes your code to the potential of tainted data injection, or more to the point misdirection threats. </p>
<p>ShellExecute() uses the built in file association data stored in the registry to determine which process will be passed to CreateProcess. So if you feed it *.DOC file and Word is installed, it will execute Word accordingly. Some of you pointed this out already. The real problem with this is that an attacker could modify the association and point it to their malicious program. In doing so, you increase the attack surface of your application as you have untrusted data determining your code execution path. Very bad. Very bad indeed.</p>
<p>A more secure way to do this is to call CreateProcess() directly. But I wouldn&#8217;t even recommend that. What I would recommend would be to use the the CreateProcessAsUser() API. It is similar to CreateProcess() but you can force the new process to run in the security context of the user you truely want to execute as. You can create a security descriptor to tie this down even further, and even use a restricted token to ensure this new process has only the required access to do its task. Remember, all code execution should be ran with least privilege whereever possible. Even if all you are doing is launching a browser. Well, maybe its even MORE important when launching a browser these days! :)</p>
<p>If you need to spawn secondary processes in Windows, forget using ShellExecute(). Instead, use CreateProcessAsUser(). Looking at the unneccesary risk at blindly calling out untrusted code, its very little extra work to actually find the binary you want and ensuring you load it in a safe context with the minimum amount of privileges to do its work.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-208953">
				<div id="div-comment-208953" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.nugae.com' rel='external nofollow' class='url'>Martin Kochanski</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040901-00/?p=37993#comment-208953">
			September 10, 2004 at 12:55 am</a>		</div>

		<p>It would be beautiful if I didn&#8217;t have to emulate the whole of ShellExecute in my program; but unfortunately it seems to be necessary.</p>
<p>If you use ShellExecuteEx in a multithreaded apartment (MTA), it works as long as you don&#8217;t try to use it to open &quot;<a target="_new" href="http://www.microsoft.com&quot;" rel="nofollow"></a><a href="http://www.microsoft.com&#038;quot" rel="nofollow">http://www.microsoft.com&#038;quot</a>; (or some other URL).  If you do, it fails with ERROR_ACCESS_DENIED.</p>
<p>Some experiments with bouncing the command through to my process&#8217;s main STA led to unexplained 35-second delays during which the whole of Windows XP was completely unresponsive&#8230; so I&#8217;ve ended up having to parse all the registry entries myself.<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-208983">
				<div id="div-comment-208983" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://weblogs.asp.net/oldnewthing/' rel='external nofollow' class='url'>Raymond Chen</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040901-00/?p=37993#comment-208983">
			September 10, 2004 at 6:14 am</a>		</div>

		<p>The delay is most likely wedged DDE. If you reimplemented ShellExecute you&#8217;d run into the same problem. (Assuming you implemented the DDE part.)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-209583">
				<div id="div-comment-209583" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Stefan Kanthak</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040901-00/?p=37993#comment-209583">
			September 12, 2004 at 9:07 pm</a>		</div>

		<p>Raymond wrote:</p>
<p>&gt; When you do this, don&#8217;t forget to<br />
<br />&gt; call the ExpandEnvironmentStrings<br />
<br />&gt; function if the registry value&#8217;s<br />
<br />&gt; type is REG_EXPAND_SZ. (Lots of<br />
<br />&gt; people forget about REG_EXPAND_SZ.) </p>
<p>Will you write a few words why it&#8217;s not used throughout windows?<br />
<br />Can you write a few words why so many DLLs and EXEs are referenced in the registry without their full path?</p>
<p>Take 269049 for example: no fix would have been necessary if the full path was given.<br />
<br />With XP it was, but in braindead manner: while the HIVESFT.INF writes it as REG_EXPAND_SZ=%SystemRoot%system32userinit.exe, some &quot;wise&quot; guy decided to replace this during setup with REG_SZ=c:windowssystem32userinit.exe.</p>
<p>What follows can be read in Q249321, and the security hole is open again?!<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>