<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (23)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-937623">
				<div id="div-comment-937623" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ian</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110928-00/?p=9533#comment-937623">
			September 28, 2011 at 7:53 am</a>		</div>

		<p>&quot;Ohhhhhh, you&#39;re impersonating. Thanks for not mentioning that.&quot;</p>
<p>This perfectly illustrates the importance of boiling down your problem to the smallest and simplest test case that still exhibits the problem before calling for support. It is a shame so few people seem to do this vital step. If this customer had, he would almost certainly have discovered that as soon as he removed impersonation from his test case everything would have started working and he would have had his answer before even contacting support.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-937633">
				<div id="div-comment-937633" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110928-00/?p=9533#comment-937633">
			September 28, 2011 at 8:09 am</a>		</div>

		<p>No wonder people want cheaper process create.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-937653">
				<div id="div-comment-937653" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">ipoverscsi</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110928-00/?p=9533#comment-937653">
			September 28, 2011 at 8:15 am</a>		</div>

		<p>If impersonation is so hard to implement, under what circumstances would you actually bother using it?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-937663">
				<div id="div-comment-937663" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joe Dietz</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110928-00/?p=9533#comment-937663">
			September 28, 2011 at 8:24 am</a>		</div>

		<p>Impersonation is important for any sort of server process you might need to implement that needs to do work for and on-behalf of a user. &nbsp;Its actually a very important security tool as well. &nbsp;You could write a service that acts with super-user authority, but the you would need to ensure that you are providing all of the necessary security checks yourself, and of course you will get it wrong. &nbsp;But aside from that without impersonation your service won&#39;t be able to interact with other services that have per-user behaviors like file system encryption, file servers etc.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-937683">
				<div id="div-comment-937683" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">David Walker</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110928-00/?p=9533#comment-937683">
			September 28, 2011 at 9:09 am</a>		</div>

		<p>I like the comment &quot;By default, nothing works when impersonating&quot;. &nbsp;That is very important to remember when debugging (and when programming, too).</p>
<p>I often run SQL Server Management Studio using RunAs (VPN does weird things and my domain is not trusted otherwise). &nbsp;I&#39;m not sure if this is the same as impersonation, but still, my local SQL Server Management Studio client doesn&#39;t display the right user information in the UI in some cases. &nbsp;It&#39;s not a big deal, or I would open a ticket. &nbsp;But when I&#39;m trying to diagnose problems like this, I need to remember that by default, nothing works when you&#39;re pretending to be someone you&#39;re not.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-937693">
				<div id="div-comment-937693" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110928-00/?p=9533#comment-937693">
			September 28, 2011 at 9:52 am</a>		</div>

		<p>@David Walker: I run that way as well. Disable UAC. It fixes almost all the glitches in that environment.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-937703">
				<div id="div-comment-937703" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Bill Edmonds</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110928-00/?p=9533#comment-937703">
			September 28, 2011 at 9:55 am</a>		</div>

		<p>@JamesJohnston: Raymond is over-shortening the URLs. Try adding a /library to the path, for example <a href="http://msdn.microsoft.com/en-us/ms724836.aspx" target="_new" rel="nofollow">msdn.microsoft.com/en-us/ms724836.aspx</a> (or whatever language/dialect you get redirected to) becomes <a href="http://msdn.microsoft.com/en-us/library/ms724836.aspx" target="_new" rel="nofollow">msdn.microsoft.com/en-us/library/ms724836.aspx</a> .</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-937713">
				<div id="div-comment-937713" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Alex Grigoriev</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110928-00/?p=9533#comment-937713">
			September 28, 2011 at 10:05 am</a>		</div>

		<p>@DW:</p>
<p>RunAs, at least in some OS versions, may not establish the complete environment of the target user. If I remember correctly, sometimes the env vars are not set, or like that. I had some programs not working even in Win7. A workaround that made them work: Start CMD by RunAs, then start your target from it.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-937753">
				<div id="div-comment-937753" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">JM</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110928-00/?p=9533#comment-937753">
			September 28, 2011 at 12:42 pm</a>		</div>

		<p>Note that RunAs has nothing to do with impersonation &#8212; it&#39;s a separate login and the process starts with a security token of the other account. Problems you have with RunAs are related to the environment variables or the user profile &#8212; runas /? gives you some options on that. If RunAs used impersonation, it would have a very low chance of accomplishing anything, per the problems Raymond has noted.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-937763">
				<div id="div-comment-937763" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">zonk</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110928-00/?p=9533#comment-937763">
			September 28, 2011 at 1:06 pm</a>		</div>

		<p>Then why impersonation was ever invented? Some kind of suid and common transport like messages or pipes that can cross boundaries will be just fine.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-937643">
				<div id="div-comment-937643" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blogs.msdn.com/johnstonj_4000_inn_2D00_soft.com/ProfileUrlRedirect.ashx' rel='external nofollow' class='url'>johnstonj@inn-soft.com</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110928-00/?p=9533#comment-937643">
			September 28, 2011 at 8:11 am</a>		</div>

		<p>Unrelated: does anybody else dislike the new MSDN styles? &nbsp;The MSDN link for &quot;(You have to use RegOpenCurrentUser or RegOpenUserClassesRoot.)&quot; doesn&#39;t even have navigation. &nbsp;Personally, I can&#39;t stand anything but MSDN Classic, since it&#39;s the only view I&#39;ve found that has a tree view on the left. &nbsp;I&#39;m *not* looking forward to the day they remove that tree view, though I&#39;m sure it&#39;s coming as probably &quot;classic&quot; == &quot;legacy code we want to get rid of&quot;&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-yuhong-bao odd alt thread-odd thread-alt depth-1" id="comment-937773">
				<div id="div-comment-937773" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Yuhong+Bao' rel='external nofollow' class='url'>Yuhong Bao</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110928-00/?p=9533#comment-937773">
			September 28, 2011 at 7:27 pm</a>		</div>

		<p>Note for the registry there is RegDisablePredefinedCache which can disable the cache for HKCU.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-937783">
				<div id="div-comment-937783" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ian Boyd</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110928-00/?p=9533#comment-937783">
			September 28, 2011 at 8:01 pm</a>		</div>

		<p>Can anyone point to any MSDN documentation that explains what Impersonation is, why it exists (the problem it solves), the caveats when using it, how to use it, and why things don&#39;t work when using it?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-alegrigoriev odd alt thread-odd thread-alt depth-1" id="comment-937793">
				<div id="div-comment-937793" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/alegr1' rel='external nofollow' class='url'>alegr1</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110928-00/?p=9533#comment-937793">
			September 28, 2011 at 8:37 pm</a>		</div>

		<p>@zonk:</p>
<p>Suppose you have a server. Remote clients connect to it and request to open files or other secure resources, or perform other actions on behalf of the remote user. To achieve that, the service thread assumes the identity of the client (impersonates).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-937803">
				<div id="div-comment-937803" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">zonk</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110928-00/?p=9533#comment-937803">
			September 28, 2011 at 10:23 pm</a>		</div>

		<p>zonk: &quot;Then why impersonation was ever invented?&quot;</p>
<p>To allow impersonation. (<a rel="nofollow" target="_new" href="http://msdn.microsoft.com/en-us/library/windows/desktop/ms691341(v=vs.85).aspx" rel="nofollow">msdn.microsoft.com/&#8230;/ms691341(v=vs.85).aspx</a>)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-937813">
				<div id="div-comment-937813" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Crescens2k</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110928-00/?p=9533#comment-937813">
			September 29, 2011 at 1:07 am</a>		</div>

		<p>zonk:</p>
<p>&quot;Some kind of suid and common transport like messages or pipes that can cross boundaries will be just fine.&quot;</p>
<p>Except that the security checks will not be done for the user you want to impersonate and so things may be inaccurate. Two potential problems are, access to HKCU, if you are running a service which wants to access this key, then it is easier to impersonate and access HKCU that way. Two, you are also assuming that the process which you want to access things on behalf of a particular user can access everything that user can. Now what happens if you are being security aware and program your application/service to run as a limited user and the user you want to work on behalf of is an administrator.</p>
<p>There are other things too, usually the best way of checking if a user has access to a resource relatively cheaply is to just try to open it. Of course, without impersonation then you are going to have to do things the hard way and it is likely you will still get it wrong. So instead of trying to guess or check the security information in that token, why not just impersonate and use the regular function to do the work. The other thing is that if you want to create files on behalf of a user, you could do the file access and then change the owner and the acl on that file, but it is again much easier to impersonate and work on that file, the security information is then set to that user by default.</p>
<p>Ian Boyd:</p>
<p>Simply put, impersonation is when you want to do something using a different user&#39;s identity. It isn&#39;t a common occurance and you usually find it happening in server processes. As an example, have you ever checked the owner of say any of the visual studio files? You should find that they are all owned by System. This is because they were written to disk by the Windows Installer service, and that runs as System. But what happened if you had a service which writes to disk like Windows Installer, but you wanted to set the owner of the files to the user who invoked it. The service itself would either have to be started every single time with credentials for that user, making it lose effectiveness as a service, write files and then change the owner and acl afterwards which requires an extra step or two, or you can use impersonation. With impersonation, the service could run as any user account which allows it to do its job, and when you want to write files you set the impersonation token and just write. The owner and acl will be set automatically to the defaults for the impersonated user rather than the service&#39;s defaults. Of course, this is just one of many uses, but it should illustrate that while it isn&#39;t something you will use often, when you do need to use it then it will be extremly useful.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-937843">
				<div id="div-comment-937843" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Deduplicator</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110928-00/?p=9533#comment-937843">
			September 29, 2011 at 4:50 am</a>		</div>

		<p>As such, impersonation is a tool for avoiding the inherent overhead of process creation for &quot;just a few measly operations&quot; as a different user. That would still be worthwhile if you could avoid the userland process-startup as with unix-like fork(), as there would still be all the unavoidable in-kernel overhead.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-937943">
				<div id="div-comment-937943" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Simon Smith</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110928-00/?p=9533#comment-937943">
			September 29, 2011 at 10:06 am</a>		</div>

		<p>The main user of impersonation here is IIS: the ASP.NET worker process runs as the user defined by its App Pool, but we specify impersonation in the Web.Config file. The thread in the worker process handling a request impersonates the calling user and does things like check AD for the relevant permissions.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-937973">
				<div id="div-comment-937973" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">David Walker</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110928-00/?p=9533#comment-937973">
			September 29, 2011 at 10:35 am</a>		</div>

		<p>Thanks for the comments on RunAs; I&#39;ll check it out. &nbsp;It&#39;s only a display issue in the status bar of SQL Server Management Studio, so it&#39;s not crucial, but maybe getting the environment variables set right would help. &nbsp;</p>
<p>On the other hand, the incorrect display doesn&#39;t bother me much. &nbsp;The other side does trust me when I use RunAs and doesn&#39;t trust me when I don&#39;t, so the important things work under RunAs. &nbsp;And now I know that RunAs is not impersonation. &nbsp;:-)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-cheong odd alt thread-odd thread-alt depth-1" id="comment-938133">
				<div id="div-comment-938133" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/cheong00' rel='external nofollow' class='url'>cheong00</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110928-00/?p=9533#comment-938133">
			September 29, 2011 at 6:50 pm</a>		</div>

		<p>Imperonation is essential for actions like remote starting / stopping service on another server using web interface, without granting right to access these service with current server machine account. (For things like administrative panels on web based systems and virtualization solutions)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-cheong even thread-even depth-1" id="comment-938143">
				<div id="div-comment-938143" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/cheong00' rel='external nofollow' class='url'>cheong00</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110928-00/?p=9533#comment-938143">
			September 29, 2011 at 7:14 pm</a>		</div>

		<p>I think a lot of parallelization libraries creates worker thread for you. Does that mean if your code ever need impersaontion, it&#39;d be unsafe to call them?</p>
<p>I think it&#39;d be common for web developers to call functions on PLINQ or just LINQ and others that have similar effect.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-cheong odd alt thread-odd thread-alt depth-1" id="comment-938153">
				<div id="div-comment-938153" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/cheong00' rel='external nofollow' class='url'>cheong00</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110928-00/?p=9533#comment-938153">
			September 29, 2011 at 7:18 pm</a>		</div>

		<p>Ok, maybe database related libraries doesn&#39;t matter (SSPI is aware of that I think) but the point on parallelization libraries get across.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-hardon even thread-even depth-1" id="comment-938363">
				<div id="div-comment-938363" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/gdalsnes' rel='external nofollow' class='url'>gdalsnes</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110928-00/?p=9533#comment-938363">
			October 1, 2011 at 5:38 am</a>		</div>

		<p>I don&#39;t understand why it was designed not to work. If you are impersonating a thread, the system knows and could do the right thing. If you are impersonating and wanted to do some superuser stuff on the side, _then_ you could pass a token to override. The current design it the opposite of what seems logical (to me).</p>
<div class="post">[<i>I think you missed the point. The <span style="text-decoration:underline;">system</span> (i.e., kernel) is fine with impersonation. The problem is all the code that&#39;s not part of the system which assumes identity does not change (because it rarely does). You probably write code like that all the time, for example, any time you implement a cache. You pass the superuser token to do some side work, but oh sorry, that side work fails because somebody cached the fact that the process is not running as superuser. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>