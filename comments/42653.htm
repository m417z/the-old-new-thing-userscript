<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (11)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-123363">
				<div id="div-comment-123363" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ken</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20030905-02/?p=42653#comment-123363">
			September 5, 2003 at 9:37 pm</a>		</div>

		<p>I get a different result for the 64-bit CLR System.DateTime. I suppose one reason the Win32 FILETIME starts in 1600 is to avoid the ugly switchover from the Julian to Gregorian calendars in 1582, when ten days were dropped in October. One way to calculate it without resorting to fancy formulas would be to calculate the number of days to 1-Jan-2003:</p>
<p>2000 years * 365.25 days/year in Julian calendar<br />
&#8211; 10 days dropped in 1582<br />
&#8211; 3 days for leap years in Julian calendar that aren&#8217;t in Gregorian since (1700, 1800, 1900)<br />
+ 365 days for 2001<br />
+ 365 days for 2002</p>
<p>then work backwards to 26-Nov-2002:</p>
<p>&#8211; 31 days in December<br />
&#8211; (last) 5 days in November<br />
= 731,181 days from 1-Jan-0001</p>
<p>The rest is pretty straightforward. PST is 8 hours behind UTC, so 19:25PST is actually &quot;27:25&quot;:</p>
<p>731,181 days * 86,400 sec/day<br />
+ 27 hours * 3600 sec/hour<br />
+ 25 mins * 60 sec/min<br />
* 10,000,000 hundred-nanosecs/sec<br />
= 0x8c4656e:085f8e00</p>
<p>I cross-checked that with both a calendar object and some Julian Day formulas and they matched; but frankly I&#8217;m still not 100% sure. At least that obscure calendar knowledge:</p>
<p><a href="http://www.tondering.dk/claus/cal/node3.html" rel="nofollow">http://www.tondering.dk/claus/cal/node3.html</a></p>
<p>finally came in handy.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-123373">
				<div id="div-comment-123373" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blogs.gotdotnet.com/BradA' rel='external nofollow' class='url'>Brad Abrams</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20030905-02/?p=42653#comment-123373">
			September 6, 2003 at 7:52 pm</a>		</div>

		<p>Ah, I knew it!  When I asked Raymond to start a blog a few months ago I know he&#8217;d eventually be forced into writting about managed code.    ;-)<br />
Do Raymonds readers want to hear more about managed code from him? </p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-123383">
				<div id="div-comment-123383" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://dotsql.dyndns.org:8674/weblog/' rel='external nofollow' class='url'>Damit</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20030905-02/?p=42653#comment-123383">
			September 6, 2003 at 9:26 pm</a>		</div>

		<p>Managed ways of interacting with Win32 UI/shell elements would be cool. :-)</p>
<p>Or a series on &quot;rolling your own compliant scrollbar in .NET&quot; ?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-123393">
				<div id="div-comment-123393" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">runtime</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20030905-02/?p=42653#comment-123393">
			September 12, 2003 at 3:31 pm</a>		</div>

		<p>I thought I might share the following time functions that I just implemented. I had to implement these because Windows CE does not implement such rudimentary standard library functions as time(). NB: There might be a precision bug in my code because my UnixTimeFromFileTime() and UnixTimeToFileTime() functions do not produce identical roundtrip results. The low FILETIME bits are slightly different. Use at your own risk! :-) </p>
<p>-runtime</p>
<p>#ifdef UNDER_CE<br />
typedef unsigned long time_t;<br />
#endif // UNDER_CE</p>
<p>void UnixTimeToSystemTime(time_t unixtime, SYSTEMTIME* systemtime)<br />
{<br />
	FILETIME filetime;<br />
	UnixTimeToFileTime(unixtime, &amp;filetime);<br />
	FileTimeToSystemTime(&amp;filetime, systemtime);<br />
}</p>
<p>void UnixTimeToFileTime(time_t unixtime, FILETIME* filetime)<br />
{<br />
    LONGLONG longlong = Int32x32To64(unixtime, 10000000) + 116444736000000000;<br />
    filetime-&gt;dwLowDateTime = (DWORD) longlong;<br />
    filetime-&gt;dwHighDateTime = longlong &gt;&gt; 32;<br />
}</p>
<p>time_t UnixTimeFromFileTime(const FILETIME* filetime)<br />
{<br />
	LONGLONG longlong = filetime-&gt;dwHighDateTime;<br />
	longlong &lt;&lt;= 32;<br />
	longlong |= filetime-&gt;dwLowDateTime;<br />
	longlong -= 116444736000000000;<br />
	return longlong / 10000000;<br />
}</p>
<p>time_t UnixTimeFromSystemTime(const SYSTEMTIME* systemtime)<br />
{<br />
	// convert systemtime to filetime<br />
	FILETIME filetime;<br />
	SystemTimeToFileTime(systemtime, &amp;filetime);</p>
<p>	// convert filetime to unixtime<br />
	time_t unixtime = UnixTimeFromFileTime(&amp;filetime);</p>
<p>#ifdef _DEBUG<br />
	{<br />
		FILETIME roundtrip;<br />
		UnixTimeToFileTime(unixtime, &amp;roundtrip);<br />
		assert(UnixTimeFromFileTime(&amp;roundtrip) == unixtime);<br />
	}<br />
#endif // _DEBUG</p>
<p>	return unixtime;<br />
}</p>
<p>#ifdef UNDER_CE<br />
time_t time(time_t* out)<br />
{<br />
	SYSTEMTIME systemtime;<br />
	GetLocalTime(&amp;systemtime);<br />
	time_t unixtime = UnixTimeFromSystemTime(&amp;systemtime);<br />
	if (out)<br />
		*out = unixtime;</p>
<p>	return unixtime;<br />
}<br />
#endif // UNDER_CE</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-166853">
				<div id="div-comment-166853" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Anuj Agarwal</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20030905-02/?p=42653#comment-166853">
			April 22, 2004 at 5:36 pm</a>		</div>

		<p>Here is .NET code to convert between time_t and DateTime &#8211;</p>
<p>	 public sealed class ConvertTime<br />
<br />	 {<br />
<br />		 /// &lt;summary&gt;<br />
<br />		 /// Private constructor to prevent the class from being instantiated.<br />
<br />		 /// &lt;/summary&gt;<br />
<br />		 private ConvertTime() {}</p>
<p>		 private static DateTime origin = System.TimeZone.CurrentTimeZone.ToLocalTime(new DateTime(1970, 1, 1, 0, 0, 0));</p>
<p>		 /// &lt;summary&gt;<br />
<br />		 /// time_t is an int representing the number of seconds since Midnight UTC 1 Jan 1970 on the Gregorian Calendar.<br />
<br />		 /// &lt;/summary&gt;<br />
<br />		 /// &lt;param name=&quot;time_t&quot;&gt;&lt;/param&gt;<br />
<br />		 /// &lt;returns&gt;&lt;/returns&gt;<br />
<br />		 public static DateTime ToDateTime(int time_t)<br />
<br />		 {<br />
<br />			 DateTime convertedValue = origin + new TimeSpan(time_t * TimeSpan.TicksPerSecond);<br />
<br />			 if (System.TimeZone.CurrentTimeZone.IsDaylightSavingTime(convertedValue) == true)<br />
<br />			 {<br />
<br />				 System.Globalization.DaylightTime daylightTime = System.TimeZone.CurrentTimeZone.GetDaylightChanges(convertedValue.Year);<br />
<br />				 convertedValue = convertedValue + daylightTime.Delta;<br />
<br />			 }<br />
<br />			 return convertedValue;<br />
<br />		 }</p>
<p>		 /// &lt;summary&gt;<br />
<br />		 /// time_t is an int representing the number of seconds since Midnight UTC 1 Jan 1970 on the Gregorian Calendar.<br />
<br />		 /// &lt;/summary&gt;<br />
<br />		 /// &lt;param name=&quot;time&quot;&gt;&lt;/param&gt;<br />
<br />		 /// &lt;returns&gt;&lt;/returns&gt;<br />
<br />		 public static int To_time_t(DateTime time)<br />
<br />		 {<br />
<br />			 DateTime convertedValue = time;<br />
<br />			 if (System.TimeZone.CurrentTimeZone.IsDaylightSavingTime(convertedValue) == true)<br />
<br />			 {<br />
<br />				 System.Globalization.DaylightTime daylightTime = System.TimeZone.CurrentTimeZone.GetDaylightChanges(convertedValue.Year);<br />
<br />				 convertedValue = convertedValue &#8211; daylightTime.Delta;<br />
<br />			 }<br />
<br />			 long diff = convertedValue.Ticks &#8211; origin.Ticks;<br />
<br />			 return (int)(diff / TimeSpan.TicksPerSecond);<br />
<br />		 }<br />
<br />	 }<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-166863">
				<div id="div-comment-166863" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://weblogs.asp.net/oldnewthing' rel='external nofollow' class='url'>Raymond Chen</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20030905-02/?p=42653#comment-166863">
			April 22, 2004 at 5:45 pm</a>		</div>

		<p>Wow, that was an awful lot of code compared to Brad&#8217;s three-line function.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-217183">
				<div id="div-comment-217183" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://httpcode.com/blogs/posts/397.aspx' rel='external nofollow' class='url'>Daniels Blog</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20030905-02/?p=42653#comment-217183">
			October 14, 2004 at 7:20 am</a>		</div>

		
		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-429843">
				<div id="div-comment-429843" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blogs.msdn.com/ericlippert/archive/2003/09/16/eric-s-complete-guide-to-vt-date.aspx' rel='external nofollow' class='url'>Fabulous Adventures In Coding</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20030905-02/?p=42653#comment-429843">
			October 12, 2006 at 1:11 pm</a>		</div>

		<p>I suspect that I may be the world&#8217;s leading authority on bugs having to do with the OLEAUT date format, a dubious distinction at best.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-463023">
				<div id="div-comment-463023" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blogs.msdn.com/jmstall/archive/2007/01/18/timestamps.aspx' rel='external nofollow' class='url'>Mike Stall's .NET Debugging Blog</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20030905-02/?p=42653#comment-463023">
			January 18, 2007 at 11:00 pm</a>		</div>

		<p>Folks may use the term &quot;Module Timestamp&quot; to mean both file timestamp and image header timestamp. Although</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-533543">
				<div id="div-comment-533543" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.jimaxsoft.net/wordpress/?p=39' rel='external nofollow' class='url'>???????????? &raquo; Blog ?????? &raquo; ??????TimeStamp</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20030905-02/?p=42653#comment-533543">
			August 5, 2007 at 7:23 am</a>		</div>

		<p>PingBack from <a rel="nofollow" target="_new" href="http://www.jimaxsoft.net/wordpress/?p=39" rel="nofollow">http://www.jimaxsoft.net/wordpress/?p=39</a></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-690663">
				<div id="div-comment-690663" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://wampir.mroczna-zaloga.org/archives/452-I-jeszcze-o-czasie-time_t,-FILETIME,-TIMESTAMP....html' rel='external nofollow' class='url'>Wampiryczny blog</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20030905-02/?p=42653#comment-690663">
			December 8, 2008 at 2:23 pm</a>		</div>

		<p>Wczoraj napisałem kilka sł&#243;w o r&#243;żnych timestampach zwracanych przez LogParser dla r&#243;żnych format&#243;w wejściowych. Dziś jeszcze kilka sł&#243;w w tym temacie.time_t (unix time) time_t to typ danych, w kt&#243;rym data jest reprezentowana jako ilość se</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>