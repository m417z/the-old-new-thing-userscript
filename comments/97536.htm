<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (7)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment byuser comment-author-bboorman even thread-even depth-1" id="comment-1317616">
				<div id="div-comment-1317616" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Brian_EE' rel='external nofollow' class='url'>Brian_EE</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20171207-00/?p=97536#comment-1317616">
			December 7, 2017 at 7:28 am</a>		</div>

		<p>&#8220;&#8230; by contacting a Web service.&#8221;<br />
Addendum: &#8220;And that process hung when the web service failed to respond, because the (forgotten) computer under someone&#8217;s desk got unplugged as part of an office redecorating project.&#8221; <a href="https://blogs.msdn.microsoft.com/oldnewthing/20090114-00/?p=19493/" rel="nofollow">https://blogs.msdn.microsoft.com/oldnewthing/20090114-00/?p=19493/</a></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1317625">
				<div id="div-comment-1317625" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">DWalker07</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20171207-00/?p=97536#comment-1317625">
			December 7, 2017 at 8:39 am</a>		</div>

		<p>Hmmm..  A link to MJ?  Interesting.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-iboyd even thread-even depth-1 parent" id="comment-1317635">
				<div id="div-comment-1317635" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/IanBoyd' rel='external nofollow' class='url'>IanBoyd</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20171207-00/?p=97536#comment-1317635">
			December 7, 2017 at 9:19 am</a>		</div>

		<p>There&#8217;s a lot of chewing-gum code out there for how to launch a process and capture its command-line output. You create a pipe, you supply the writable end of the pipe to the child process using the `StartupInfo.hStdOutput` parameter of **CreateProcess**.  The chewing gum code fails when they try wait for the child process to end by waiting for the child process handle to become signaled (e.g. MsgWaitFor&#8230;).</p>
<p>The problem is that if you wait, the child process will **never** signal:</p>
<p>&#8211; because the child process can never close<br />
&#8211; because it&#8217;s stalled writing to the pipe<br />
&#8211; because the pipe buffer is full<br />
&#8211; because you&#8217;re not reading from your readable end of the pipe<br />
&#8211; because you&#8217;re waiting for the child process to close</p>
<p>**Deadlock**</p>
<p>The proper solution is to keep reading from the pipe in a loop. When the child process terminates, it&#8217;s writeable end of the pipe will close with it. That will cause **ReadFile** to return false, and **GetLastError** will return `ERROR_BROKEN_PIPE` *(&#8220;The pipe has been ended.&#8221;)*. </p>
<p>Be sure to keep reading from the pipe in a loop until **ReadFile** fails:</p>
<p>    //Read will return when the buffer is full, or if the pipe on the other end has been broken<br />
    while (ReadFile(stdOutRead, buffer, bufferSize, &amp;bytesRead, null)<br />
        runningText = runningText + Copy(buffer, 1,  bytesRead);</p>
<p>    //ReadFile will either tell us that the pipe has closed, or give us an error<br />
    DWORD le = GetLastError;<br />
    if (le != ERROR_BROKEN_PIPE) //&#8221;The pipe has been ended.&#8221;<br />
       RaiseLastOSError(le);</p>
<p>And an important point is that once you hand your child process the writable end of the pipe, you must call **CloseHandle** on your reference to the writeable end of the pipe; that way it will signal when the child process terminates.</p>
<p>**tl;dr:** Stop waiting for the child process to end before you read from the pipe.</p>

		
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-zlynx odd alt depth-2" id="comment-1317645">
				<div id="div-comment-1317645" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Zan+Lynx%27' rel='external nofollow' class='url'>Zan Lynx'</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20171207-00/?p=97536#comment-1317645">
			December 7, 2017 at 1:11 pm</a>		</div>

		<p>And the worst bit about what you describe is that some data will fit into the pipe buffer without being read. Which means that small test outputs will appear to work but longer outputs will hang.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even depth-2 parent" id="comment-1317655">
				<div id="div-comment-1317655" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20171207-00/?p=97536#comment-1317655">
			December 7, 2017 at 5:12 pm</a>		</div>

		<p>I got really annoyed that ReadFile can fail with ERROR_BROKEN_PIPE. My helper libraries change that to a successful read of length 0 now. (Hint: EOF) Of course I have to do something a little different if I want stdout and stderr separate (waaay too much code in any case).</p>

		
				</div>
		<ol class="children">
		<li class="comment odd alt depth-3" id="comment-1317695">
				<div id="div-comment-1317695" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Harry Johnston</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20171207-00/?p=97536#comment-1317695">
			December 8, 2017 at 9:12 pm</a>		</div>

		<p>What does the helper do if it actually gets a successful read of length zero?  For a named pipe, that&#8217;s legal: it just means that the process at the other end of the pipe performed a null write.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment even thread-odd thread-alt depth-1" id="comment-1317665">
				<div id="div-comment-1317665" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.silverbacknetworks.tech' rel='external nofollow' class='url'>Joshua Bowman</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20171207-00/?p=97536#comment-1317665">
			December 7, 2017 at 9:28 pm</a>		</div>

		<p>These are by far the most useful articles I read on your blog! I&#8217;ve used them to compile a cheat sheet for debugging hangs and difficult crashes. Sadly, even when I eventually track down the culprits, the owners of the code rarely bother, but it&#8217;s worth knowing anyway.</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>