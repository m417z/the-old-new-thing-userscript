<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (26)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1 parent" id="comment-1281795">
				<div id="div-comment-1281795" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">The_Assimilator</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170130-00/?p=95285#comment-1281795">
			January 30, 2017 at 7:07 am</a>		</div>

		<p>I&#8217;d love to see stats on the total count of security &#8220;vulnerabilities&#8221; reported to Microsoft vs the number of actual security vulnerabilities. I&#8217;m expecting that ratio to be extremely low.</p>

		
				</div>
		<ol class="children">
		<li class="comment odd alt depth-2 parent" id="comment-1281805">
				<div id="div-comment-1281805" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Antonio Rodríguez</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170130-00/?p=95285#comment-1281805">
			January 30, 2017 at 7:38 am</a>		</div>

		<p>You know, Windows is presumed to be buggy and unsecure, where Unix is presumed to be solid and safe. When confronted with a strange or complicated security-related behavior, the default in Windows is to blame Microsoft (even if it involves third party software), where in Unix, it&#8217;s usual to look for more information.</p>

		
				</div>
		<ol class="children">
		<li class="comment even depth-3 parent" id="comment-1281845">
				<div id="div-comment-1281845" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Karellen</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170130-00/?p=95285#comment-1281845">
			January 30, 2017 at 9:46 am</a>		</div>

		<p>That could be because of the separation in Unix between the POSIX specification and the vendor implementation(s). In order to figure out whether the problem is with your vendor, you need to find the spec and study it to determine what the behaviour ought to be, and why. Only then can you figure out whether:<br />
a) your vendor has produced a robust implementation of a shoddy API (in which case you&#8217;re hosed),<br />
b) your vendor has produced a shoddy implementation of a robust API (in which case you can shout at them to fix it), or<br />
c) you&#8217;ve misunderstood the API and can now fix your mental model, and your code, without embarrassing yourself in front of your vendor (or on social media) by announcing your mistake.</p>
<p>Of course, no-one thinks up-front that it might be c), so where the spec and the implementation are by the same people, as with Windows, it probably is very tempting to just go straight to blaming Microsoft.</p>
<p>Another option is that Windows is thought of as being &#8220;easy to understand&#8221;, whereas Unix systems are known to be subtle and complex &#8211; despite Windows&#8217; ACLs being more complex (featureful) than Unix&#8217; classic user/group/other read/write/execute permissions system. That could mean that people who think they&#8217;ve found a bug in Windows automatically think they&#8217;ve understood things correctly, because Windows is easy to understand. Whereas people who think they&#8217;ve found a bug in Unix are more wary of the fact that there may be subtleties that they&#8217;re missing.</p>

		
				</div>
		<ol class="children">
		<li class="comment odd alt depth-4" id="comment-1281945">
				<div id="div-comment-1281945" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://nbtparse.org' rel='external nofollow' class='url'>Kevin</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170130-00/?p=95285#comment-1281945">
			January 30, 2017 at 4:45 pm</a>		</div>

		<p>&gt; a) your vendor has produced a robust implementation of a shoddy API (in which case you’re hosed),</p>
<p>The typical response to that is to invent your own less-shoddy API, get your vendor to implement it (in this case, you often *are* the vendor), and then tell everyone to use that instead, portability be damned.  For a classic example of this, Google &#8220;completely stupid semantics of System V&#8221; (you should see a number of BSD man pages whining about a blatant misfeature in fcntl(2) file locking).</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment even thread-odd thread-alt depth-1" id="comment-1281815">
				<div id="div-comment-1281815" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Jan</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170130-00/?p=95285#comment-1281815">
			January 30, 2017 at 8:11 am</a>		</div>

		<p>Also, &#8220;there are really only two effectively distinct settings for the UAC slider&#8221;, and the task manager asks for elevation in the reasonable one.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-even depth-1 parent" id="comment-1281825">
				<div id="div-comment-1281825" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170130-00/?p=95285#comment-1281825">
			January 30, 2017 at 8:32 am</a>		</div>

		<p>Ah a UIPI topic [now I know the name]. If the suggestion box ever opened again that would have been my request.</p>
<p>It is interesting to note it is possible to talk about UIPI w/o ever talking about UAC by talking about a service that spawns a process on the desktop deliberately (by stealing the winlogon token for the desired session).</p>
<p>Incidentally, for domain joined workstations, there is only one effective setting for the UAC slider. \\my-computer-name\c$ works just fine to lay the cuckoo&#8217;s egg from any other computer on the domain.</p>

		
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-mngoldeneagle even depth-2 parent" id="comment-1281905">
				<div id="div-comment-1281905" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/MNGoldenEagle' rel='external nofollow' class='url'>MNGoldenEagle</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170130-00/?p=95285#comment-1281905">
			January 30, 2017 at 3:01 pm</a>		</div>

		<p>Only if that user has permission to access that volume according to the share permissions and ACLs.  Even when they do ACLs are still enforced, so a typical user won&#8217;t be able to write to Program Files or Windows.  This isn&#8217;t the case when you&#8217;re an administrator, but that&#8217;s not what UAC is meant to help with.</p>

		
				</div>
		<ol class="children">
		<li class="comment odd alt depth-3 parent" id="comment-1281925">
				<div id="div-comment-1281925" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170130-00/?p=95285#comment-1281925">
			January 30, 2017 at 3:38 pm</a>		</div>

		<p>It&#8217;s just another UAC bypass, and not a fixable one this time. It&#8217;s not much more of a UAC bypass than a program carrying around its own RDP implementation just a lot simpler.</p>

		
				</div>
		<ol class="children">
		<li class="comment even depth-4" id="comment-1281955">
				<div id="div-comment-1281955" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">ErikF</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170130-00/?p=95285#comment-1281955">
			January 30, 2017 at 11:34 pm</a>		</div>

		<p>I too can completely bypass UAC if I open up the computer and take out the hard drive (I don&#8217;t even need an account!) This, however, is not a flaw in UAC because UAC is only designed to prevent certain interactive scenarios, not all possible access methods.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1 parent" id="comment-1281835">
				<div id="div-comment-1281835" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Piotr</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170130-00/?p=95285#comment-1281835">
			January 30, 2017 at 8:52 am</a>		</div>

		<p>is that why drag and drop from windows explorer to an elevated IE doesn&#8217;t work (but to an unelevated IE works)?</p>

		
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-bob-rao even depth-2" id="comment-1281935">
				<div id="div-comment-1281935" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Vulpini' rel='external nofollow' class='url'>Vulpini</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170130-00/?p=95285#comment-1281935">
			January 30, 2017 at 4:04 pm</a>		</div>

		<p>Yup![1] It can get really annoying at times, but there&#8217;s not much that can be done about it. Except maybe running an elevated (third-party) file explorer, with all the potential security implications.</p>
<p>[1]: <a href="https://blogs.msdn.microsoft.com/patricka/2010/01/28/q-why-doesnt-drag-and-drop-work-when-my-application-is-running-elevated-a-mandatory-integrity-control-and-uipi/" rel="nofollow">https://blogs.msdn.microsoft.com/patricka/2010/01/28/q-why-doesnt-drag-and-drop-work-when-my-application-is-running-elevated-a-mandatory-integrity-control-and-uipi/</a></p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment odd alt thread-even depth-1" id="comment-1281855">
				<div id="div-comment-1281855" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Yukkuri</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170130-00/?p=95285#comment-1281855">
			January 30, 2017 at 10:22 am</a>		</div>

		<p>Sounds like they were assuming the UAC slider was at the max when it was not (or less charitably, don&#8217;t even know about it)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-odd thread-alt depth-1 parent" id="comment-1281865">
				<div id="div-comment-1281865" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">DWalker07</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170130-00/?p=95285#comment-1281865">
			January 30, 2017 at 10:22 am</a>		</div>

		<p>Interesting that the article discusses Windows Vista.  Are there &#8220;too many&#8221; articles like this for them all to be updated?</p>
<p>I wonder if it&#8217;s difficult to make sure that &#8212; if this is the current documentation for this feature &#8212; this doc should never be erased.  Maybe articles like this are NEVER erased&#8230;..</p>

		
				</div>
		<ol class="children">
		<li class="comment odd alt depth-2" id="comment-1281875">
				<div id="div-comment-1281875" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">voo</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170130-00/?p=95285#comment-1281875">
			January 30, 2017 at 11:38 am</a>		</div>

		<p>&#8220;I wonder if it’s difficult to make sure that — if this is the current documentation for this feature — this doc should never be erased&#8221;<br />
Few things are ever erased, but I think we can all agree that that article moved at least once since it was written.<br />
We&#8217;re talking about msdn here after all.</p>
<p>I understand that this is a non trivial problem, but whoever operates msdn is particularly incompetent about keeping URLs working. </p>
<p>Although the last blog update worked surprisingly well, so maybe things are finally improving.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1 parent" id="comment-1281885">
				<div id="div-comment-1281885" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ted Spence</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170130-00/?p=95285#comment-1281885">
			January 30, 2017 at 11:51 am</a>		</div>

		<p>One thing I&#8217;d be curious about is whether there has been discussion of a &#8220;honeypot&#8221; or &#8220;trap&#8221; environment for elevation.</p>
<p>Given how many programs wish they could run elevated, and how many programs ask for elevation for suspicious reasons, it seems like one approach would be as follows:<br />
a) Give each application elevation when they ask for it;<br />
b) Sandbox all of their changes and actions; and<br />
c) Show those actions to the user to decide whether to approve them.</p>
<p>The goal would be, when I install a sketchy app that needs to have access to my start menu so that it can add its own startup program, that it goes ahead and does &#8220;everything a programmer gets a bonus for doing&#8221; &#8211; but then I can silently set that aside.</p>
<p>I know from Raymond&#8217;s perspective that all feature proposals start with negative-one-hundred points, and this clearly seems extremely complex; but over time the number of sketchy applications that we really wish we could use keeps increasing.</p>

		
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-mngoldeneagle odd alt depth-2 parent" id="comment-1281895">
				<div id="div-comment-1281895" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/MNGoldenEagle' rel='external nofollow' class='url'>MNGoldenEagle</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170130-00/?p=95285#comment-1281895">
			January 30, 2017 at 12:22 pm</a>		</div>

		<p>For a typical user, this will just look like noise (&#8220;what the heck is this CLSID?  Why is it talking about COM objects?&#8221;), especially when a program installer installs other dependencies (VC++ runtime, DirectX installers wrt older games, etc.), so they&#8217;ll just blindly accept and get frustrated in the process.  For a power user, it would be useful from an auditing perspective, but even then this list could be absurdly long.</p>
<p>It also raises other questions: what if the process is long-lived?  What if it has external side-effects, like creating firewall rules or network shares?  What if it tries to use IPC and expects to have certain permissions that it doesn&#8217;t?  This is kinda why a lot of OSes use &#8220;capabilities&#8221; instead.  Not quite as noisy, easier to implement, and you don&#8217;t have to worry about side-effects.  That being said, a lot of OSes don&#8217;t let you choose which capabilities to enable and just let you say &#8220;Allow All&#8221; or &#8220;Don&#8217;t Run&#8221;, which can be frustrating when you want to run an app but don&#8217;t want it to have, for example, access to your Documents or to the Internet.</p>

		
				</div>
		<ol class="children">
		<li class="comment even depth-3" id="comment-1282145">
				<div id="div-comment-1282145" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ted Spence</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170130-00/?p=95285#comment-1282145">
			February 1, 2017 at 9:20 am</a>		</div>

		<p>True &#8211; so the big challenge would be &#8220;How can this be useful?&#8221; I definitely get your point; asking users to approve changes to CLSIDs wouldn&#8217;t work.  So let&#8217;s think a bit alternatively (of course, since I&#8217;m not on the windows team, this is all hypothetical anyway).</p>
<p>For example, I know if my IPhone came with a virtual-honeypot-contacts list, when an iPhone game asked to use my contacts list I could choose &#8220;Allow&#8221;, &#8220;Allow Honeypot&#8221;, or &#8220;Deny&#8221;.  Since some iPhone games refuse to give me certain features if I deny them, I could instead give them my honeypot instead.  So maybe the way to approach this would be to only virtualize certain features, like startup programs, that are especially user hostile?</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment odd alt depth-2" id="comment-1281915">
				<div id="div-comment-1281915" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Koro</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170130-00/?p=95285#comment-1281915">
			January 30, 2017 at 3:25 pm</a>		</div>

		<p>If they did it, it would just be a matter of time before people found out the exact implementation details and limits of the sandbox, and wrote their programs to &#8220;act around it&#8221; by being nice for the time they are sandboxed so that they can get allowed for real, then do all kind of nasties once they are really elevated.</p>
<p>And by the way, this &#8220;emulate the program for a bit to see what it does&#8221; method is exactly what antiviruses&#8217; heuristics module does.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even depth-2" id="comment-1281965">
				<div id="div-comment-1281965" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Radosław Cybulski</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170130-00/?p=95285#comment-1281965">
			January 31, 2017 at 3:35 am</a>		</div>

		<p>As other fellows already responded its rather hard to make your idea work. But why exactly do you need to present those changes to the user at all? You can just keep them and reinstance sandbox every time the application is launched. This could consume some more memory (and hard drive), but it could be manageable. As a bonus, once you would uninstall an application, you would remove the sandbox with it, thus removing any traces of the application.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1 parent" id="comment-1282055">
				<div id="div-comment-1282055" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">nic</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170130-00/?p=95285#comment-1282055">
			January 31, 2017 at 4:30 pm</a>		</div>

		<p><i>Sign in as a user who is a member of the Administrators group.</i></p>
<p>Has a security vulnerability that starts with this ever being an actual vulnerability.</p>

		
				</div>
		<ol class="children">
		<li class="comment even depth-2" id="comment-1282855">
				<div id="div-comment-1282855" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">my123</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170130-00/?p=95285#comment-1282855">
			February 6, 2017 at 11:13 am</a>		</div>

		<p>Yes, for example a Code Integrity bypass for loading unsigned drivers, or a Secure Boot exploit.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment odd alt thread-even depth-1 parent" id="comment-1282105">
				<div id="div-comment-1282105" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Tor</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170130-00/?p=95285#comment-1282105">
			February 1, 2017 at 2:16 am</a>		</div>

		<p>I think many people are confused about what UAC prompts are for. On Linux you have to type your password when using sudo to do something as root. You can exempt certain commands, and it would be a security issue if one of them allowed you to run arbitrary commands as root.</p>
<p>UAC prompts are similar to sudo in some ways, but not the same. They are only there to limit programs acting as the user, not the user themselves.</p>

		
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-mngoldeneagle even depth-2 parent" id="comment-1282175">
				<div id="div-comment-1282175" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/MNGoldenEagle' rel='external nofollow' class='url'>MNGoldenEagle</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170130-00/?p=95285#comment-1282175">
			February 1, 2017 at 10:34 am</a>		</div>

		<p>Except that the user is also limited when UAC is enabled, since they have less privileges applied to their token than a standard administrator.  UAC works a lot like sudo, but with less control (and sudo is essentially running a process as root but inheriting your environment, while UAC is running as you but with all the privilege flags enabled).</p>
<p>It still bothers me to no end that there&#8217;s no way to force Windows to allow non-elevated users to create symlinks, at least with a group policy.</p>

		
				</div>
		<ol class="children">
		<li class="comment odd alt depth-3" id="comment-1282435">
				<div id="div-comment-1282435" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">smf</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170130-00/?p=95285#comment-1282435">
			February 3, 2017 at 12:57 am</a>		</div>

		<p>Yeah that is weird, and not being able to delete a symbolic link to a directory that contains open files is odd too.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment even thread-odd thread-alt depth-1" id="comment-1282115">
				<div id="div-comment-1282115" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://skuldwyrm.no/' rel='external nofollow' class='url'>Roger Hågensen</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170130-00/?p=95285#comment-1282115">
			February 1, 2017 at 5:07 am</a>		</div>

		<p>Raymond you forgot to point out that whomever reported this also used the admin account as their regular account; because if their regular account was a normal privilege account (which every one should do) then task manager/UAC would show a administrative password prompt.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-even depth-1" id="comment-1282495">
				<div id="div-comment-1282495" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">MarcK4096</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170130-00/?p=95285#comment-1282495">
			February 3, 2017 at 9:36 am</a>		</div>

		<p>&#8220;The malware can tell the victim, &#8220;Okay, run this program, and when it asks for permission, say Yes.&#8221;&#8221;</p>
<p>Sadly, this works because users have been conditioned to following instructions like this in order to get poorly written legitimate software working.  Our users were once told by a big payroll company to uninstall the latest version of Java and install an ancient version in order to be able to get into the system.</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>