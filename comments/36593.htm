<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (38)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-249263">
				<div id="div-comment-249263" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.benwatson.org' rel='external nofollow' class='url'>Ben Watson</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050126-00/?p=36593#comment-249263">
			January 26, 2005 at 7:14 am</a>		</div>

		<p>Not sure about the syntax, but:</p>
<p>ROUNDED = TRUNCATE(ACCRUED * 4) / 4</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-249273">
				<div id="div-comment-249273" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">BradC</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050126-00/?p=36593#comment-249273">
			January 26, 2005 at 7:29 am</a>		</div>

		<p>Well, it rounds at the beginning when it does a<br />
<br />STR(ACCRUED,6,2)</p>
<p>So 4.246 gets first rounded to 4.25, which stays 4.25 after the second rounding, which allows more vacation than has actually been earned.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-249303">
				<div id="div-comment-249303" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">DanR</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050126-00/?p=36593#comment-249303">
			January 26, 2005 at 7:56 am</a>		</div>

		<p>What about simply</p>
<p>rounded = (accrued*4) div 4</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-249313">
				<div id="div-comment-249313" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">DanR</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050126-00/?p=36593#comment-249313">
			January 26, 2005 at 7:58 am</a>		</div>

		<p>Make that </p>
<p>rounded = (int(accrued*4))/4</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-249323">
				<div id="div-comment-249323" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.jerf.org/iri' rel='external nofollow' class='url'>Jeremy Bowers</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050126-00/?p=36593#comment-249323">
			January 26, 2005 at 8:08 am</a>		</div>

		<p>I don&#8217;t know how that language stores numbers or what bitwise operations you may have available to you, but you could truncate/mask off all but the first two binary digits after the decimal point, if you can bitwise manipulate a float.</p>
<p>This is possible because .0, .25, .5, and .75 are the exact (decimal) values that can be stored in the two most significant fractional bits, and truncate always rounds down.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-249333">
				<div id="div-comment-249333" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.jerf.org/iri' rel='external nofollow' class='url'>Jeremy Bowers</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050126-00/?p=36593#comment-249333">
			January 26, 2005 at 8:13 am</a>		</div>

		<p>Double rounding: If the STR function is implemented with the rounding we learned about in school (.5+, round up, else round down), the true boundaries for the fractions are .245, .495, and .745, instead of .25, .5, and .75?<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-249353">
				<div id="div-comment-249353" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">lowercase josh</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050126-00/?p=36593#comment-249353">
			January 26, 2005 at 8:23 am</a>		</div>

		<p>Even if you can do bitwise operations on floats in this language, you need to know how many bits above the binary point there are before you can mask.  Or you could just take the fractional part and do that.  That&#8217;s probably slower and certainly more difficult to read than the simple arithmetic method.</p>
<p>And truncation doesn&#8217;t always round down, but hopefully the cases where it doesn&#8217;t wouldn&#8217;t happen here.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-249363">
				<div id="div-comment-249363" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">lowercase josh</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050126-00/?p=36593#comment-249363">
			January 26, 2005 at 8:26 am</a>		</div>

		<p>Well, I guess that does depend on your definition of &quot;down&quot;&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-249373">
				<div id="div-comment-249373" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.evilrob.org/journal' rel='external nofollow' class='url'>Rob Meyer</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050126-00/?p=36593#comment-249373">
			January 26, 2005 at 8:35 am</a>		</div>

		<p>That reminds of my favorite hunk of code I&#8217;ve ever found in a production system. The name of the method was &quot;moveDecimalPoint&quot; or something like that, and it took a string that was a floating point number. In about 5-6 lines of awful looking looping code it searched through the string, manually split on the decimal point, then created a new string with the point moved 2 spaces to the right.</p>
<p>Most work I&#8217;ve ever seen anyone do to multiply a number by 100. Involved a 5 line loop, a couple of string creations, a string buffer creation, and a horrible method name.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-249393">
				<div id="div-comment-249393" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">RJ</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050126-00/?p=36593#comment-249393">
			January 26, 2005 at 8:55 am</a>		</div>

		<p>Yes, one would hope that your earned vacation time is never negative.   But perhaps at EA&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-249403">
				<div id="div-comment-249403" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.craigberntson.com' rel='external nofollow' class='url'>Craig Berntson</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050126-00/?p=36593#comment-249403">
			January 26, 2005 at 9:06 am</a>		</div>

		<p>I didn&#8217;t know you once wrote Fox applications! You should go see what the Fox team is up to now.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-249423">
				<div id="div-comment-249423" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Waaaaay Back</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050126-00/?p=36593#comment-249423">
			January 26, 2005 at 9:38 am</a>		</div>

		<p>Fox?  Sounds like dBaseII or III to me.  I remember an project I worked on where the numbers were more than 4,294,967,296.   I had to add and subtract by writing decimal math routines.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-249443">
				<div id="div-comment-249443" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">vinod vemireddi</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050126-00/?p=36593#comment-249443">
			January 26, 2005 at 11:52 am</a>		</div>

		<p>this can be done in excel as </p>
<p>= ceiling(cellvalue,0.25)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-249503">
				<div id="div-comment-249503" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Chep</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050126-00/?p=36593#comment-249503">
			January 26, 2005 at 1:42 pm</a>		</div>

		<p>Once, an intern attempted to do bitwise operations (it was in BPW, or maybe Delphi 1.0 at the time). </p>
<p>Yes, me posting in this thread is enough of a clue, so you guessed what he did. He first converted the integers into a string of &#8216;0&#8217; and &#8216;1&#8217;, performed the bitwise operation on the chars, and finally converted back to an integer (actually, we caught him as he called for help converting the string of, uh, bits, into an integer)</p>
<p>At least interns are cheap.</p>
<p>/thanks Raymond, Larry, Michael and the feedback community(ies). You&#8217;re part of my daily insight influx.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-249523">
				<div id="div-comment-249523" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Betty</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050126-00/?p=36593#comment-249523">
			January 26, 2005 at 2:32 pm</a>		</div>

		<p>wouldn&#8217;t</p>
<p>value -= fmod(value, 0.25);</p>
<p>work?<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-249283">
				<div id="div-comment-249283" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Bogus McMurphy</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050126-00/?p=36593#comment-249283">
			January 26, 2005 at 7:31 am</a>		</div>

		<p>ROUNDED = VAL(LEFT(S,4)+((F/25)*25))</p>
<p>e.g., if F=49, F/25*25 = 49/25*25 = 1*25 = 25<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-249293">
				<div id="div-comment-249293" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">GregM</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050126-00/?p=36593#comment-249293">
			January 26, 2005 at 7:35 am</a>		</div>

		<p>Since you&#8217;re rouding *down*, and converting a number to a string presumably rounds normally, 4.749 would round to 4.75 when it should round to 4.5.<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-249543">
				<div id="div-comment-249543" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">lf</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050126-00/?p=36593#comment-249543">
			January 26, 2005 at 5:25 pm</a>		</div>

		<p>My favourite is the rotated drawString() from com.ms.fx.FxGraphics. The algorithm used is</p>
<p>&#8211; render the string into a bitmap (actually an int[])<br />
<br />&#8211; for each white pixel in the bitmap, rotate the  coordinates (calling sin() and cos() twice each, once for the x and once for the y coordinate), and add them to a list<br />
<br />&#8211; pass that list of pixels to the optimized drawPixels() function</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-249413">
				<div id="div-comment-249413" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">B.Y.</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050126-00/?p=36593#comment-249413">
			January 26, 2005 at 9:37 am</a>		</div>

		<p>rounded=0.25f * (float) ( (int)(accrued*4.0f+0.5f) );</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-249433">
				<div id="div-comment-249433" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.jerf.org/iri' rel='external nofollow' class='url'>Jeremy Bowers</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050126-00/?p=36593#comment-249433">
			January 26, 2005 at 9:41 am</a>		</div>

		<p>In the past, I&#8217;ve always gone with the int*4/4 method myself. I just added my point because it wasn&#8217;t covered, and the coincidence of wanting a rounding that happens to work that way (most don&#8217;t) was too much to pass up, plus the int*4/4 method was already covered.</p>
<p>As for speed, both int*4/4 and a mask will be so much faster than the original method as to make no difference. Which will be faster depends on how fast float-&gt;ints convert, which I have to confess I honestly don&#8217;t know. It&#8217;s going to be hard to beat suggestion I made if done directly in machine language, though, because it never really does &lt;i&gt;math&lt;/i&gt; on the float, the slow stuff with floats, it just some masking, shifting, and a single simple addition. How fast it would go implemented in that language, I have no idea, and if it is interpreted int*4/4 would almost certainly cream it unless some wild optimizations took place.</p>
<p>Mostly I suggested it as an interesting idea, but there&#8217;s a chance it&#8217;s right :-)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-249573">
				<div id="div-comment-249573" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">chrishad</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050126-00/?p=36593#comment-249573">
			January 26, 2005 at 6:42 pm</a>		</div>

		<p>double rounded  = (int) x + (int)( ( x &#8211; (int) x ) / 0.25) * 0.25;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-249453">
				<div id="div-comment-249453" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">waaaay back</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050126-00/?p=36593#comment-249453">
			January 26, 2005 at 12:25 pm</a>		</div>

		<p>in Foxpro 2.6. . .</p>
<p>rounded = ((int(((accrued &#8211; int(accrued)) * 100) / 25) * .25) + int(accrued)</p>
<p>it&#8217;s amazing what you can do with that question mark!</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-249473">
				<div id="div-comment-249473" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">waaaaaay back further</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050126-00/?p=36593#comment-249473">
			January 26, 2005 at 12:28 pm</a>		</div>

		<p>oops</p>
<p>store  ((int(((accrued &#8211; int(accrued)) * 100) / 25) * .25) + int(accrued) to rounded</p>
<p>sigh</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-249483">
				<div id="div-comment-249483" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://spaces.msn.com/members/pjsson/Blog/cns!1p76K4WF1ADMWttSKAc6E-Sg!142.entry' rel='external nofollow' class='url'>Patric Johansson</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050126-00/?p=36593#comment-249483">
			January 26, 2005 at 12:47 pm</a>		</div>

		<p>Here&#8217;s an improved more generic version, however written in C# from my blog. </p>
<p>class Test<br />
<br />{<br />
<br />    public static double RoundToUnit(double d, double unit, bool roundDown)<br />
<br />    {<br />
<br />        if (roundDown)<br />
<br />        {<br />
<br />            // Round down.<br />
<br />            return Math.Round(Math.Round((d / unit) &#8211; 0.5, 0) * unit, 2);<br />
<br />        }<br />
<br />        else<br />
<br />        {<br />
<br />            // Round up<br />
<br />            return Math.Round(Math.Round((d / unit) + 0.5, 0) * unit, 2);<br />
<br />        }<br />
<br />    }</p>
<p>    [STAThread]<br />
<br />    static void Main()<br />
<br />    {<br />
<br />        double d1 = RoundToUnit(2.413, 0.25, true);  // d1 = 2.25.<br />
<br />        double d2 = RoundToUnit(2.413, 0.25, false); // d2 = 2.50.<br />
<br />        double d3 = RoundToUnit(2.413, 0.30, true);  // d3 = 2.40.<br />
<br />        double d4 = RoundToUnit(2.413, 0.30, false); // d4 = 2.70.<br />
<br />    }<br />
<br />}<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-249563">
				<div id="div-comment-249563" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://lazybones.ca/blog/index.php?p=32' rel='external nofollow' class='url'>Anonymous</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050126-00/?p=36593#comment-249563">
			January 26, 2005 at 9:31 pm</a>		</div>

		<p>lazybones &amp;raquo; All about rounding</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-249613">
				<div id="div-comment-249613" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.pranavnegandhi.com' rel='external nofollow' class='url'>Pranav</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050126-00/?p=36593#comment-249613">
			January 27, 2005 at 3:06 am</a>		</div>

		<p>Math isn&#8217;t my strongest point, but here goes&#8230;</p>
<p>ACCRUED = ACCRUED &#8211; (ACCRUED % 0.25)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-249633">
				<div id="div-comment-249633" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.sebastianmendel.de/' rel='external nofollow' class='url'>Sebastian Mendel</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050126-00/?p=36593#comment-249633">
			January 27, 2005 at 5:51 am</a>		</div>

		<p>whats the problem with:</p>
<p>FLOOR( ACCRUED * 4 ) / 4</p>
<p>??</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-249643">
				<div id="div-comment-249643" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://arcavia.com/kyle' rel='external nofollow' class='url'>Kyle Lahnakoski</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050126-00/?p=36593#comment-249643">
			January 27, 2005 at 7:02 am</a>		</div>

		<blockquote><p>
  Vacation days accrued at a fixed rate but were<br />
  <br />&gt; granted only in quarter-day increments [by<br />
  <br />&gt; rounding down]. </p>
<p>I would like to point out that no employee can get his/her full vacation allotment until after the year is effectively over.  If the company does not allow employees to carry forward their vacation, then this sucks.
</p></blockquote>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-249733">
				<div id="div-comment-249733" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://david.acz.org/' rel='external nofollow' class='url'>David Phillips</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050126-00/?p=36593#comment-249733">
			January 27, 2005 at 8:29 am</a>		</div>

		<p>lf: I&#8217;ve actually written code like that back in my high school game programming days.  Performance issues aside, that algorithm is flawed (it might work alright for text).  There are usually more pixels in the rotated bitmap, so you end up with holes in the result.  You have to rotate the destination pixel backwards to find the correct source pixel.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-249593">
				<div id="div-comment-249593" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">mrscott</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050126-00/?p=36593#comment-249593">
			January 27, 2005 at 2:06 am</a>		</div>

		<p>Using 3 casts and a mod op:</p>
<p>(verified works)</p>
<p>double rounded = x &#8211; (x &#8211; (int)x) + (((x &#8211; (int)x) * 100) &#8211; (((x &#8211; (int)x) * 100) % 25))/100;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-249603">
				<div id="div-comment-249603" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">mrscott</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050126-00/?p=36593#comment-249603">
			January 27, 2005 at 2:18 am</a>		</div>

		<p>slightly better&#8230;</p>
<p>double rounded = (int)x + (((x &#8211; (int)x) * 100) &#8211; (((x &#8211; (int)x) * 100) % 25))/100;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-250063">
				<div id="div-comment-250063" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Basil Hussain</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050126-00/?p=36593#comment-250063">
			January 28, 2005 at 2:53 am</a>		</div>

		<p>Aaaahhh&#8230; Foxpro. Those were the days.</p>
<p>Oh, wait, my company still uses it! D&#8217;oh!</p>
<p>Where does Raymond get the maximum of 32 for the number of subroutines? Consulting my Foxpro for DOS 2.6 help file, I see it says:</p>
<p>&quot;Max. # of procedures per file: unlimited&quot;</p>
<p>Perhaps Raymond is referring to:</p>
<p>&quot;Max. # of nested DO calls: 32&quot;</p>
<p>But that would only affect recursion (or really big programs). Or, maybe Raymond is talking about an even older version of Foxpro (Foxbase+?)&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-250113">
				<div id="div-comment-250113" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Waaaaay Back</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050126-00/?p=36593#comment-250113">
			January 28, 2005 at 9:14 am</a>		</div>

		<p>Basil:  Maybe Raymond will enlighten us as to the software he was using.  I&#8217;m betting on DbaseIII or IV (for DOS).</p>
<p>There have been a number of interesting solutions  presented, but few under the contraints that Raymond placed.</p>
<p>The Highest Level, is course</p>
<p>&quot;number of vacation days taken and available for each employee. Vacation days accrued at a fixed rate but were granted only in quarter-day increments.&quot;</p>
<p>Personally, I&#8217;d write a couple of lines in C and let the compiler take care of the optimizations.</p>
<p>Perhaps Raymond can give us his solution somewhere down the road.</p>
<p>I love this blog.  I can&#8217;t pretend to understand much of what is going on. . .  but it&#8217;s easy to see that the general level of comprehension in the community is inversely proportional to the amount of feedback on each topic.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-252573">
				<div id="div-comment-252573" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Nekto</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050126-00/?p=36593#comment-252573">
			February 3, 2005 at 2:37 am</a>		</div>

		<p>Охуенно!!!</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-252743">
				<div id="div-comment-252743" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.3porosenka.ru' rel='external nofollow' class='url'>Beavis</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050126-00/?p=36593#comment-252743">
			February 3, 2005 at 8:58 am</a>		</div>

		<p>Vi vse tupiue pidarasi!<br />
<br />Hello from Russia, fucking lamers!</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-253253">
				<div id="div-comment-253253" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://jamesatuncw.com/blog/archive/2005/02/06/436.aspx' rel='external nofollow' class='url'>James Summerlin's Blog</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050126-00/?p=36593#comment-253253">
			February 6, 2005 at 2:26 pm</a>		</div>

		
		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-253273">
				<div id="div-comment-253273" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://jamesatuncw.com/blog/archive/0001/01/01/436.aspx' rel='external nofollow' class='url'>James Summerlin's Blog</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050126-00/?p=36593#comment-253273">
			February 6, 2005 at 3:36 pm</a>		</div>

		
		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-343743">
				<div id="div-comment-343743" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blogs.msdn.com/oldnewthing/archive/2006/02/07/526632.aspx' rel='external nofollow' class='url'>The Old New Thing</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050126-00/?p=36593#comment-343743">
			February 7, 2006 at 10:00 am</a>		</div>

		<p>A tip from abstract algebra.</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>