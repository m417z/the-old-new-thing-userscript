<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (22)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-783133">
				<div id="div-comment-783133" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Tim Kay</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20091104-01/?p=16143#comment-783133">
			November 4, 2009 at 7:36 am</a>		</div>

		<p>After starting my first job out of school, I put it this way: In school, there are deadlines that really can&#8217;t slip, but quality can slip like mad. &nbsp;At work, there is a level of quality you have to have, and so it is the deadlines that can slip.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-783183">
				<div id="div-comment-783183" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">J</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20091104-01/?p=16143#comment-783183">
			November 4, 2009 at 9:03 am</a>		</div>

		<p>At my last job we carefully assessed the risk to all of our changes near the ship date and we bordered on paranoia when it came to fixing anything other than a minor bug. &nbsp;It worked out well for us because I don&#8217;t think we ever shipped with a major issue, and we&#8217;d fix all the little things in regular maintenance releases.</p>
<p>The problem was a partner vendor who clearly didn&#8217;t have the same level of appreciation for reducing risk at the end of a product cycle. &nbsp;No matter how often we asked that they delivered us the exact same software plus the single bug fix, we&#8217;d invariably find out that they shipped something with extra bug fixes.</p>
<p>And of course the only way to find that out is to find a new bug in a completely different area of the product and trace it back to the vendor&#8217;s new release. &nbsp;Ugh.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-783203">
				<div id="div-comment-783203" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Teo</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20091104-01/?p=16143#comment-783203">
			November 4, 2009 at 10:56 am</a>		</div>

		<p>I am arguing about a related problem with Visual Studio. You give us Betas to find bugs, then I compile our code base with it, find a major problem &#8211; like a C++ standard violation, report it, then my bugs get closed with &quot;thanks, but we have already locked down the code base and can&#8217;t fix it now.&quot; (Admittedly next VS usually fixes my bugs). Me and VS team have been playing this game since VS 2003 era :) But now I am growing older and tired of this game, I want the old-fashioned betas, which used to lead to reported bugs getting fixed.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-783213">
				<div id="div-comment-783213" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Brian Tkatch</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20091104-01/?p=16143#comment-783213">
			November 4, 2009 at 11:16 am</a>		</div>

		<p>In school failure puts you back in the same class.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-783253">
				<div id="div-comment-783253" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Krunch</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20091104-01/?p=16143#comment-783253">
			November 4, 2009 at 11:48 am</a>		</div>

		<blockquote><p>
  in school, as the deadline approaches,</p>
<p>  the work becomes increasingly frantic. On the</p>
<p>  other hand, in commercial software, as the</p>
<p>  deadline approaches, the rate of change slows down
</p></blockquote>
<p>I think you can see the same pattern in school and in commercial software if you compare the shipping deadline from school to the &quot;planning&quot; deadline in commercial software (or whatever you call the deadline where Product Management says &quot;after that point, we are not going to accept any more change except for exceptions matching specific criteria&quot;).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-783263">
				<div id="div-comment-783263" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Anonymous</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20091104-01/?p=16143#comment-783263">
			November 4, 2009 at 11:49 am</a>		</div>

		<p>&quot;The developers found a place where the code forgot to perform this conversion before using a local handle.&quot;</p>
<p>Pretty clever developers. &nbsp;At least, I can see they&#8217;re good at re-assigning blame. &nbsp;&quot;We found this code, and it forgot to perform this conversion! &nbsp;Silly sentient code, always forgetting to do things&#8230;&quot; &nbsp;Rather than say, &quot;we forgot to perform this conversion.&quot; &nbsp;:-)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-783293">
				<div id="div-comment-783293" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Aaron G</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20091104-01/?p=16143#comment-783293">
			November 4, 2009 at 12:18 pm</a>		</div>

		<p>Schroedinbugs are always the most fun. &nbsp;There&#8217;s nothing quite like staring at code you know is wrong and trying to figure out how it ever worked in the first place.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-783323">
				<div id="div-comment-783323" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://jenk.livejournal.com' rel='external nofollow' class='url'>Jenk</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20091104-01/?p=16143#comment-783323">
			November 4, 2009 at 12:30 pm</a>		</div>

		<p>&lt;i&gt;&quot;The developers found a place where the code forgot to perform this conversion before using a local handle.&quot;</p>
<p>Pretty clever developers. &nbsp;At least, I can see they&#8217;re good at re-assigning blame. &nbsp;&quot;We found this code, and it forgot to perform this conversion! &nbsp;Silly sentient code, always forgetting to do things&#8230;&quot; &nbsp;Rather than say, &quot;we forgot to perform this conversion.&quot; &nbsp;:-) &lt;/i&gt;</p>
<p>Because of course the specific developers who wrote those original lines of code were still working on that specific section years later&#8230;. &nbsp;;)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-783333">
				<div id="div-comment-783333" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://modsbylaz.hugelaser.com' rel='external nofollow' class='url'>BrotherLaz</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20091104-01/?p=16143#comment-783333">
			November 4, 2009 at 3:55 pm</a>		</div>

		<p>So Raymond, you say it would be better to ship with a hidden bug that would surface when this variable is used (ie. a broken feature that crashes Windows), instead of accidentally discovering it?</p>
<div class=post>[<i>The hidden bug was harmless for years, and it would have remained harmless for many more years if nobody had perturbed the system. When you&#8217;re trying to stabilize your product, you don&#8217;t go around perturbing it. Obviously you want to identify the defects in your system, but you don&#8217;t want to <u>magnify</u> them in the process. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-783173">
				<div id="div-comment-783173" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Pierre B.</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20091104-01/?p=16143#comment-783173">
			November 4, 2009 at 8:56 am</a>		</div>

		<p>I once had a problem like that from code I was given to maintain. For a few years, until we finally found the source of the problem, after each new version we&#8217;d have to modify the code until the memory corruption vanished once again.</p>
<p>(The original author was obviously beginning in object-oriented design: he had designed a base class with a Do(void *) virtual function and each sub-class would cast the void * to something else. These classes were actually multi-threaded and would swap() pointers instead of copying memory for optimization. It was money laundering scheme applied to memory mamagement. You could not follow where the memory went.)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-783343">
				<div id="div-comment-783343" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Jiri Dvorak</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20091104-01/?p=16143#comment-783343">
			November 4, 2009 at 5:02 pm</a>		</div>

		<p>I got my lesson six years ago when I was working on a budget RTS game (it started as a turn-based game but that is a different story).</p>
<p>Few hours before it was sent to DVD replication plant we were still fixing things :-|. One thing I fixed was a visual glitch in transition between control panel (contains commands and informations for currently selected unit) and panel used to display text of in-game conversations. From limited testing (the game was long so it was not possible to play entire game in the time we had left) all appeared to be working correctly so it was sent to replication.</p>
<p>Problem was that the entire transition was triggered by two scripting commands. Those commands should have been specified in specific order. The older version worked even if the order was incorrect. The new version did not. There was exactly one place within entire game where the order was incorrect: near end of one late level. Because of this, the control panel was never restored and the mission could be not completed. In the end we had to create a zero day patch to fix this.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-dean-harding odd alt thread-odd thread-alt depth-1" id="comment-783363">
				<div id="div-comment-783363" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Dean+Harding' rel='external nofollow' class='url'>Dean Harding</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20091104-01/?p=16143#comment-783363">
			November 4, 2009 at 8:55 pm</a>		</div>

		<p>BrotherLaz: The &quot;bug&quot; was essentially this:</p>
<p>int x = 0;</p>
<p>// stuff</p>
<p>x = 0; // this is the bug</p>
<p>// more stuff</p>
<p>It just set something that was already 0, to 0. By changing the layout of global memory, the bug caused SOMETHING ELSE to get set to 0.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-783373">
				<div id="div-comment-783373" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://lambert.geek.nz/' rel='external nofollow' class='url'>Miral</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20091104-01/?p=16143#comment-783373">
			November 4, 2009 at 9:54 pm</a>		</div>

		<p>I had one of those recently. &nbsp;I added some fields to a structure and suddenly some other code exploded. &nbsp;Turned out one of the modules (the one responsible for initialising the structure) was compiled with a different byte packing than the rest of the code; when it initialised the structure it ended up writing a zero just past the &quot;real&quot; end of an array. &nbsp;Previously, that didn&#8217;t cause any problems, because the next field in the structure was already zero at that point (and it wasn&#8217;t writing past the end of the structure). &nbsp;But after the change, it was now toasting a vtbl pointer and causing a virtual function call to die with a null reference.</p>
<p>It was quite a bit of fun to track that one down. &nbsp;As Aaron said, sometimes you really have to wonder how stuff ever works at all&#8230; ;)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-783403">
				<div id="div-comment-783403" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">peterchen</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20091104-01/?p=16143#comment-783403">
			November 4, 2009 at 11:33 pm</a>		</div>

		<p>@Teo: right to the mark. connect.microsoft.com is a quite discouraging experience.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-783413">
				<div id="div-comment-783413" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Andreas</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20091104-01/?p=16143#comment-783413">
			November 4, 2009 at 11:57 pm</a>		</div>

		<p>I&#8217;ve experienced this as well. I wrote a driver for the graphics hardware of our machine (instead of using memcpy() to blit) and weird things started to happen to the screen under certain circumstances. Of course everyone blamed my driver but I knew it wasn&#8217;t the source of the bug.</p>
<p>Finally I discovered that the bug was a memory corruption bug due to incorrect clipping of screen elements before they were rendered. The bug had been there all along, but before my driver it had corrupted system memory instead of video memory.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-783453">
				<div id="div-comment-783453" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">James</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20091104-01/?p=16143#comment-783453">
			November 5, 2009 at 5:25 am</a>		</div>

		<p>Teo, one challenge is explaining to end users (you) why it&#8217;s better to ship instead of delaying shipping for the testing it&#8217;ll need to fix the reported bugs and the bugs those bug fixes introduce.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-783533">
				<div id="div-comment-783533" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Hardware Junkie</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20091104-01/?p=16143#comment-783533">
			November 5, 2009 at 12:07 pm</a>		</div>

		<p>I had to tell an earnest, newly promoted, dev mgr who wanted to fix every bug &quot;We can&#8217;t ship this until you stop changing it.&quot; He got it.</p>
<p>OTOH, even at the mother ship, I&#8217;ve seen massive changes demanded late in the dev cycle just for the sake of doing something, in this case, about perf.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-783673">
				<div id="div-comment-783673" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">yngwe</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20091104-01/?p=16143#comment-783673">
			November 6, 2009 at 9:20 am</a>		</div>

		<p>Adding a global flag to change the behaviour of another function is bad. I&#8217;m glad it slapped you in the face, honestly.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-783733">
				<div id="div-comment-783733" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">rev</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20091104-01/?p=16143#comment-783733">
			November 6, 2009 at 11:11 am</a>		</div>

		<p>i had the same result when refactoring a header. &nbsp;all i did was rearrange the variable declarations to logically group public/protected/private and all kinds of bad happened. &nbsp;sure enough, the code was writing past the end of a buffer and in the past it was benign.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-783743">
				<div id="div-comment-783743" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Teo</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20091104-01/?p=16143#comment-783743">
			November 6, 2009 at 11:44 am</a>		</div>

		<p>My experience developing Windows software is that Debug and Release x86 / x64 builds have sufficiently different memory layouts so these bugs happen very rarely in our code base. I cannot remember a major memory corruption happening in the last 5 years and certainly not in the final sprint before release.</p>
<p>And Visual Studio and the C++ compiler are tools I use every day all day so I am very sensitive to their bugs.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-783933">
				<div id="div-comment-783933" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Josh</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20091104-01/?p=16143#comment-783933">
			November 9, 2009 at 7:48 am</a>		</div>

		<p>It happened to me a couple years ago while working at Microsoft on another product. &nbsp;We were getting shutdown crashes that appeared to be in some input related code, but only when compiled for release; debug code never hit it. &nbsp;It turned out the problem was caused by a recent change to the input code (reverting the change fixed the problem), but the crash still appeared unrelated.</p>
<p>After working with other people on my team to debug it for quite a while (I was relatively new to the debugger at the time), we discovered that the stack was getting corrupted, and the single value being written was a status code indicating that a timer was interrupted. &nbsp;But if we tried to watch that memory address with an on-write breakpoint, it never triggered. &nbsp;Searching further, I discovered a bit of code called in the same thread, but otherwise unrelated, which was passing a struct to a timer initialization function, but the struct was stack allocated. Problem was, the timer was kernel mode, and involved a status write back when it fired (even though we didn&#8217;t care about the value at that point). &nbsp;Most of the struct was configuration data; after you sent it, you didn&#8217;t care about it anymore, but one single 32 bit integer was a write back.</p>
<p>I eventually figured out that the input change had increased the depth of the stack at the time of shutdown so it overlapped the area where that struct had been allocated. The breakpoint never tripped because a user mode debugger wouldn&#8217;t see kernel activity (the timer writeback), and it didn&#8217;t hit when compiled for debug because the unoptimized code made the write back hit an innocuous (or mostly innocuous) address.</p>
<p>Still the most annoying problem I&#8217;ve ever had to debug.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-784593">
				<div id="div-comment-784593" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">ton</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20091104-01/?p=16143#comment-784593">
			November 10, 2009 at 7:46 am</a>		</div>

		<p>@peterchen</p>
<blockquote><p>
  @Teo: right to the mark. &gt;connect.microsoft.com is a quite discouraging &gt;experience.
</p></blockquote>
<p>Peter you&#8217;re on the money there. I signed up for the site trying to report a bug with the VB debugger crashing VS2003 w/ SP1. (Why would such an elite developer such as myself be maintaining a VB.NET project don&#8217;t ask but I&#8217;ll admit I like the case insensitivity.:-) )After starting the debugger to go thru a largish project (approx. &gt; 1MB ) the debugger &nbsp;often crashes on shutdown and takes VS with it. Probably some kind of segmentation fault caused the issue I think. I tried to report this on connect but the search feature couldn&#8217;t successfully find any obvious place to look up FAQs related to the problem or report the issue. The entire site is a major usability nightmare that seems to be designed to discourage the user from reporting issues. An incredibly frustrating experience to say the least.</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>