<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (48)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-198513">
				<div id="div-comment-198513" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.zero-one-zero.com/vs' rel='external nofollow' class='url'>Jonathan Payne</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040727-00/?p=38323#comment-198513">
			July 27, 2004 at 7:33 am</a>		</div>

		<p>Is there a way a process can save this flag and other flags (eg the floating point exception flags) before calling third party code (other than wrapping all calls, including some system calls)?  In the past we have had lots of problems with printer drivers / TWAIN providers / plug-ins / anything else that runs in-process changing flags like this causing an unrelated area of the application to behave differently.  Process wide flags like this in Windows mean a printer driver could (but hopefully wouldn&#8217;t) change the application&#8217;s behaviour when it crashed.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-198533">
				<div id="div-comment-198533" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">DrPizza</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040727-00/?p=38323#comment-198533">
			July 27, 2004 at 7:33 am</a>		</div>

		<p>&quot;(But if you read the documentation, you&#8217;ll see that SEM_NOALIGNMENTFAULTEXCEPT is special: The system won&#8217;t let you turn it off once it&#8217;s been turned on. Why? Because too many people were already making this mistake. I remember before this special rule was introduced.&quot;</p>
<p>It was introduced because MS is insistent on working around faulty applications, thereby making Win32 more brittle and less capable.  The OS should not try to second-guess applications in this way.<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-198523">
				<div id="div-comment-198523" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://weblogs.asp.net/oldnewthing/' rel='external nofollow' class='url'>Raymond Chen</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040727-00/?p=38323#comment-198523">
			July 27, 2004 at 7:36 am</a>		</div>

		<p>Ben: Try it and see.</p>
<p>Jonathan: As I noted in the article, SetErrorMode returns the previous error mode. For floating point, you can ask the FPU directly.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-198543">
				<div id="div-comment-198543" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Mark Jackson</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040727-00/?p=38323#comment-198543">
			July 27, 2004 at 7:37 am</a>		</div>

		<p>Just tried it, you don&#8217;t get the crash dialog or any anything else! How come you haven&#8217;t added a GetErrorMode function?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-198553">
				<div id="div-comment-198553" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://weblogs.asp.net/oldnewthing/' rel='external nofollow' class='url'>Raymond Chen</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040727-00/?p=38323#comment-198553">
			July 27, 2004 at 7:41 am</a>		</div>

		<p>DrPizza: With that attitude nobody would have bought Windows 95.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-198573">
				<div id="div-comment-198573" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.codeproject.com/script/articles/list_articles.asp?userid=152' rel='external nofollow' class='url'>Mike Dunn</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040727-00/?p=38323#comment-198573">
			July 27, 2004 at 7:48 am</a>		</div>

		<p>MFC&#8217;s DllMain calls SetErrorMode when it gets the DLL_PROCESS_ATTACH notification; is that really a wise thing to do, given that changing the error mode shouldn&#8217;t be done lightly?</p>
<p>I also remember the docs used to give some sample code of the right way to set the mode, it was a bit different though:</p>
<p>SetErrorMode(SetErrorMode(0)|SEM_NOGPFAULTERRORBOX);</p>
<p>which seems sensible enough.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-198593">
				<div id="div-comment-198593" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Aarrgghh</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040727-00/?p=38323#comment-198593">
			July 27, 2004 at 7:48 am</a>		</div>

		<p>Raymond: It&#8217;s a documentation issue. Microsoft needs to educate their shareholders about the fact that moral superiority is more desirable than revenue. When they complain, just say &quot;user misunderstanding; behavior is by design&quot; and close the issue.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-198603">
				<div id="div-comment-198603" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://weblogs.asp.net/oldnewthing/' rel='external nofollow' class='url'>Raymond Chen</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040727-00/?p=38323#comment-198603">
			July 27, 2004 at 8:06 am</a>		</div>

		<p>DrPizza (b): All non-x86 processors require this to compensate for lazy programmers who think that x86 is the only processor in the world. More on this subject on August 25th.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-198623">
				<div id="div-comment-198623" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Cooney</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040727-00/?p=38323#comment-198623">
			July 27, 2004 at 8:38 am</a>		</div>

		<blockquote><p>
  DrPizza (b): All non-x86 processors require this to compensate for lazy programmers who think that x86 is the only processor in the world. More on this subject on August 25th.</p>
<p>In defense of those &#8216;lazy&#8217; programmers, I&#8217;m sure many of them are merely ignorant. While most CS programs require you to write to multiple unix platforms (for the formally educated), it&#8217;s quite possible that a significant portion of people graduate without being bitten by this bug. </p>
<p>Incidentally, does the NT codebase still run on anything but x86? The only thing I can think of is the embedded stuff and maybe wince, but I don&#8217;t know if those targets have this problem with alignment.
</p></blockquote>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-198633">
				<div id="div-comment-198633" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ben Cooke</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040727-00/?p=38323#comment-198633">
			July 27, 2004 at 8:52 am</a>		</div>

		<p>Aarrgghh: the law says that &quot;shareholder value&quot; is more important than anything else to publically-traded company. I don&#8217;t think many of the shareholders would percieve moral superiority as being &quot;better value&quot; than an increased share price.</p>
<p>Having said that, I&#8217;m not really sure what you&#8217;re replying to anyway&#8230; who said anything about morals?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-198643">
				<div id="div-comment-198643" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://weblogs.asp.net/larryosterman' rel='external nofollow' class='url'>Larry Osterman</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040727-00/?p=38323#comment-198643">
			July 27, 2004 at 9:10 am</a>		</div>

		<p>IA64 and AMD64 &#8211; each of which is different from x86<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-198653">
				<div id="div-comment-198653" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Irf</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040727-00/?p=38323#comment-198653">
			July 27, 2004 at 10:15 am</a>		</div>

		<p>Out of curiosity, is there a technical reason something like GetErrorMode() hasn&#8217;t been added at some point? Or is this API not considered mainstream enough to warrant the change?<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-198663">
				<div id="div-comment-198663" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Aarrgghh</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040727-00/?p=38323#comment-198663">
			July 27, 2004 at 10:27 am</a>		</div>

		<p>Ben Cooke: Of course the shareholders don&#8217;t value moral superiority &#8212; that&#8217;s why you have to educate them!</p>
<p>I was trying to be funny. I may not have succeeded.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-198683">
				<div id="div-comment-198683" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.valhallalegends.com' rel='external nofollow' class='url'>Skywing</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040727-00/?p=38323#comment-198683">
			July 27, 2004 at 10:37 am</a>		</div>

		<p>You can also disable the harderror popup with job objects.</p>
<p>Setting SEM_NOGPFAULTERRORBOX changes the default behavior for kernel32!UnhandledExceptionFilter to return EXCEPTION_CONTINUE_SEARCH instead of handling the exception by raising a hard error popup.  The NT kernel (not kernel32.dll) default &quot;exception handler&quot; then terminates the thread (NOT the process) because nobody handled the exception.  Note that other threads will continue to run, assuming there are other threads in the process at the time of the unhandled exception (!), so use this option with care.  Kernel32 provides the functionality of terminating the process on an unhandled exception.  This may not be the case on Win9x, but it defiitely is true on NT.</p>
<p>You can also perform similar handling by calling SetUnhandledExceptionFilter and reacting to unhandled exceptions accordingly.</p>
<p>As for GetErrorMode:  It turns out that there really is such a function in kernel32, but it just isn&#8217;t exported (who knows why).  If you have valid symbols for kernel32, you can find it and see how it works&#8230;:</p>
<p>0:001&gt; u kernel32!GetErrorMode<br />
<br />kernel32!GetErrorMode:<br />
<br />77e4270d 55               push    ebp<br />
<br />77e4270e 8bec             mov     ebp,esp<br />
<br />77e42710 51               push    ecx<br />
<br />77e42711 6a00             push    0x0<br />
<br />77e42713 6a04             push    0x4<br />
<br />77e42715 8d45fc           lea     eax,[ebp-0x4]<br />
<br />77e42718 50               push    eax<br />
<br />77e42719 6a0c             push    0xc<br />
<br />0:001&gt; u<br />
<br />kernel32!GetErrorMode+0xe:<br />
<br />77e4271b 6aff             push    0xff<br />
<br />77e4271d ff15b810e477 call dword ptr [kernel32!_imp__NtQueryInformationProcess (77e410b8)]<br />
<br />77e42723 85c0             test    eax,eax<br />
<br />77e42725 7cd7             jl      kernel32!GetErrorMode+0x1a (77e426fe)<br />
<br />77e42727 8b45fc           mov     eax,[ebp-0x4]<br />
<br />77e4272a a801             test    al,0x1<br />
<br />77e4272c 7505             jnz     kernel32!GetErrorMode+0x2b (77e42733)<br />
<br />77e4272e 83c801           or      eax,0x1<br />
<br />0:001&gt; u<br />
<br />kernel32!GetErrorMode+0x33:<br />
<br />77e42731 c9               leave<br />
<br />77e42732 c3               ret<br />
<br />77e42733 83e0fe           and     eax,0xfffffffe<br />
<br />77e42736 c9               leave<br />
<br />77e42737 c3               ret</p>
<p>Given this, it would be trivial to write your own implementation of such a function.  Of course, this is completely undocumented and unsupported, so use it at your own risk.  Especially since you don&#8217;t really need it.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-198703">
				<div id="div-comment-198703" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.theinquirer.net/?article=14407' rel='external nofollow' class='url'>Reinder</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040727-00/?p=38323#comment-198703">
			July 27, 2004 at 11:41 am</a>		</div>

		<blockquote><p>
  Incidentally, does the NT codebase still run on anything but x86?</p>
<p>XBox 2? &lt;<a target="_new" href="http://www.theinquirer.net/?article=14407&gt;" rel="nofollow"></a><a href="http://www.theinquirer.net/?article=14407&#038;gt" rel="nofollow">http://www.theinquirer.net/?article=14407&#038;gt</a>;
</p></blockquote>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-198713">
				<div id="div-comment-198713" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Steve Sheppard</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040727-00/?p=38323#comment-198713">
			July 27, 2004 at 11:49 am</a>		</div>

		<p>Aarrgghh: No, you succeeded, he was just being obtuse.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-198723">
				<div id="div-comment-198723" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Steve Sheppard</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040727-00/?p=38323#comment-198723">
			July 27, 2004 at 11:54 am</a>		</div>

		<p>DrPizza: I don&#8217;t necessarily disagree with the idea that MS should not constantly add in compatibility hacks. Unfortunately, that horse not only left the barn a long time ago but has since died of old age.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-198733">
				<div id="div-comment-198733" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">ATZ Man</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040727-00/?p=38323#comment-198733">
			July 27, 2004 at 12:16 pm</a>		</div>

		<p>Did the MIPS/RISC port of NT ship? ISTR hearing about it before hearing of the Alpha port.<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-198743">
				<div id="div-comment-198743" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.valhallalegends.com' rel='external nofollow' class='url'>Skywing</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040727-00/?p=38323#comment-198743">
			July 27, 2004 at 12:39 pm</a>		</div>

		<p>Given that the NT 3.51 DDK supports it, probably.</p>
<p> Directory of C:WINDDK1057BIN</p>
<p>06/30/2004  11:37 PM    &lt;DIR&gt;          .<br />
<br />06/30/2004  11:37 PM    &lt;DIR&gt;          ..<br />
<br />06/30/2004  04:28 PM    &lt;DIR&gt;          ALPHA<br />
<br />06/30/2004  11:19 PM    &lt;DIR&gt;          I386<br />
<br />06/30/2004  04:28 PM    &lt;DIR&gt;          MIPS<br />
<br />06/30/2004  04:28 PM    &lt;DIR&gt;          PPC</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-198763">
				<div id="div-comment-198763" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Cooney</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040727-00/?p=38323#comment-198763">
			July 27, 2004 at 12:59 pm</a>		</div>

		<p>Larry Ostermann:<br />
<br />&gt;  IA64 and AMD64 &#8211; each of which is different from x86 </p>
<p>I imagine that AMD64 handles unaligned access gracefully. I&#8217;d forgotten about IA64, but then, hasn&#8217;t everybody?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-198783">
				<div id="div-comment-198783" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Cooney</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040727-00/?p=38323#comment-198783">
			July 27, 2004 at 1:11 pm</a>		</div>

		<blockquote><p>
  Did the MIPS/RISC port of NT ship?</p>
<p>I could swear that I saw ads for MIPS/NT workstations in my college computer store around 1995. There&#8217;s also this:</p>
<p><a target="_new" href="http://www.microsoft.com/ntserver/partners/findoffering/certapp/ISupport.asp" rel="nofollow">http://www.microsoft.com/ntserver/partners/findoffering/certapp/ISupport.asp</a>
</p></blockquote>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-198793">
				<div id="div-comment-198793" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.johntopley.com' rel='external nofollow' class='url'>John Topley</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040727-00/?p=38323#comment-198793">
			July 27, 2004 at 1:31 pm</a>		</div>

		<p>The Windows NT 4.0 CD-ROM came with binaries for i386, Alpha AXP, PowerPC and MIPS (R4000 I believe).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-198503">
				<div id="div-comment-198503" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ben Cooke</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040727-00/?p=38323#comment-198503">
			July 27, 2004 at 7:24 am</a>		</div>

		<p>Interesting. So what happens if the program *does* GPF? Does it just vanish inexplicably?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-198583">
				<div id="div-comment-198583" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">DrPizza</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040727-00/?p=38323#comment-198583">
			July 27, 2004 at 7:48 am</a>		</div>

		<p>(a) No skin off my nose.<br />
<br />(b) How can that possibly be true?  What is a hack such as this providing backwards compatibility with?  Why would *any* Win32 implementation need this kind of a &quot;fix&quot;?  The only way your comment makes any sense is if NT had this defect since day one.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-198813">
				<div id="div-comment-198813" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">DrPizza</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040727-00/?p=38323#comment-198813">
			July 27, 2004 at 4:05 pm</a>		</div>

		<p>&quot;Did the MIPS/RISC port of NT ship? ISTR hearing about it before hearing of the Alpha port. &quot;</p>
<p>Versions of NT have shipped for x86, MIPS (R4K), Alpha AXP, CHRP-based PowerPC, and IA64.  x86-64 is forthcoming but still in beta.</p>
<p>It seems feasible that it may also have been built for i860 (i.e. the platform that it was meant to run on, and if the world was a sane place, /would/ have run on&#8230; x86 be damned), and it is rumoured to have been built and run on SPARC, though of course this never saw the light of day.<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-198773">
				<div id="div-comment-198773" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blogs.msdn.com/matt_pietrek/archive/2004/07/27/198981.aspx' rel='external nofollow' class='url'>Under The Hood - Matt Pietrek</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040727-00/?p=38323#comment-198773">
			July 27, 2004 at 4:07 pm</a>		</div>

		
		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-198823">
				<div id="div-comment-198823" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">asdf</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040727-00/?p=38323#comment-198823">
			July 27, 2004 at 4:34 pm</a>		</div>

		<p>How about this, is there any way to test if your app is doing unaligned access on an x86?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-198833">
				<div id="div-comment-198833" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.valhallalegends.com' rel='external nofollow' class='url'>Skywing</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040727-00/?p=38323#comment-198833">
			July 27, 2004 at 6:00 pm</a>		</div>

		<p>Yes, but it requires both messing around with Cr0 in either a driver or the kernel debugger and the usage of an undocumented native system call or two.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-198693">
				<div id="div-comment-198693" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">DrPizza</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040727-00/?p=38323#comment-198693">
			July 27, 2004 at 11:12 am</a>		</div>

		<p>&quot;DrPizza (b): All non-x86 processors require this to compensate for lazy programmers who think that x86 is the only processor in the world. More on this subject on August 25th. &quot;<br />
<br />That&#8217;s an absurd rationale.</p>
<p>Even back in NT4&#8217;s cross-platform heydey, the only company making much of an effort at supporting the different processor families was MS themselves, and even then, they only provided any significant amount of support for the Alpha.  Most x86 applications were never built for Alpha, so it would never be noticed if they broke on the Alpha.</p>
<p>The rationale becomes even less true when looking at migrating from 32- to 64-bit platforms.  There are *so* many things that can break your code, so why make an exception for this thing?</p>
<p>Let programs break and people will fix them.  If they don&#8217;t fix them, let their uses use shims to work around the programs&#8217; defects.  Yes, it&#8217;ll require user education, so that people stop pointing the finger at MS when some undocumented behaviour changes and breaks an application, but in the long run that&#8217;ll help everyone.  Apart from anything else, it&#8217;ll reduce the amount of work MS has to do attempting to maintain compatibility with all these broken applications.</p>
<p>Encouraging lazy developers who write broken applications does the platform no favours (as it means it becomes associated with buggy programs; chances are that the kind of Mort who cocks this up will cock up all sorts of other things too) and it does MS no favours (as it means they&#8217;ve got to insert all sorts of hacks into their code and make sure that all the broken applications still work).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-198843">
				<div id="div-comment-198843" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Norman Diamond</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040727-00/?p=38323#comment-198843">
			July 27, 2004 at 6:12 pm</a>		</div>

		<p>7/27/2004 7:41 AM Raymond Chen:</p>
<p>&gt; DrPizza: With that attitude nobody would<br />
<br />&gt; have bought Windows 95.</p>
<p>And the world would have been a better place.  Windows NT was far more reliable.  It is a huge relief that the home edition of Windows XP has a mostly-working kernel and moderately reliable drivers.  Although XP has a way to go before matching NT&#8217;s reliability, it&#8217;s orders of magnitude better than 95.  I only saw one person lose the entire contents of his disk partitions under XP and that was due to a virus instead of being due to the OS itself.  In 95 it&#8217;s the OS itself and 100% reproducible.  Absolutely right, no one should have bought 95, and no one should have had it forced on them when they wanted to buy the hardware and buy NT.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-198853">
				<div id="div-comment-198853" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://weblogs.asp.net/larryosterman' rel='external nofollow' class='url'>Larry Osterman</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040727-00/?p=38323#comment-198853">
			July 27, 2004 at 6:22 pm</a>		</div>

		<p>We actually built a version of NT with alignment exceptions turned on for x86 (you can do that as Skywing mentioned).</p>
<p>We quickly turned it off, because of the number of apps that broke :)<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-198883">
				<div id="div-comment-198883" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">asdf</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040727-00/?p=38323#comment-198883">
			July 27, 2004 at 9:44 pm</a>		</div>

		<p>There is no prepackaged solution for this?</p>
<p>So I need to enter kernel mode, set the AM flag in CR0, call some undocumented function(s), then back in usermode I need to set the AC flag in EFLAGS.</p>
<p>What are the extra undocumented functions for? And once I set the AM flag in CR0, does that mean it&#8217;s a system wide, per process, or per thread setting?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-198893">
				<div id="div-comment-198893" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.valhallalegends.com' rel='external nofollow' class='url'>Skywing</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040727-00/?p=38323#comment-198893">
			July 27, 2004 at 9:54 pm</a>		</div>

		<p>I don&#8217;t know of any way to turn it on without third party software (e.g. a driver).</p>
<p>Enabling AM in CR0 tells the CPU to look at AC in EFLAGS if CPL=3 for purposes of raising alignment check exceptions or automatically fixing them.</p>
<p>Each process in the system has a default auto alignment fix mode: whenever a thread is created in a process, it inherits the auto alignment fix mode of the process.</p>
<p>Each thread in the system also, thus, has an auto alignment fix mode.  If this is not set a certain way, NT will try to hide any alignment faults that the hardware happens to raise in the context of a given thread (presumably this is for architectures where the hardware does not provide for optional alignment faults).</p>
<p>The NtSetInformationThread call tells NT to not hide any alignment faults that do happen by silently turning off AC in EFLAGS and retrying the instruction.</p>
<p>All three of these need to come to pass for user mode programs to ever see alignment faults.  So, yes, setting AM in CR0 affects all code running on the processor, but there are still two &quot;safeguards&quot; in place that would stop alignment faults from showing up (unless you explicitly disable those &quot;safeguards&quot; as the demo app does).</p>
<p>Remember that since NtSetInformationThread is not documented, it could theoretically change at some time in the future (though AFAIK the part of it the sample uses has never changed in any shipping builds).</p>
<p>You can use SetErrorMode to modify your process&#8217;s default auto alignment fix mode, but as I stated above this won&#8217;t change anything for already running threads (you would need to start a new thread after that, and then the new thread could see alignment faults if EFLAGS were properly set).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-198903">
				<div id="div-comment-198903" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">asdf</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040727-00/?p=38323#comment-198903">
			July 28, 2004 at 12:17 am</a>		</div>

		<p>I swear I posted that previous message before I saw you posted the demo. This is exactly what I was looking for and many thanks for posting it.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-198923">
				<div id="div-comment-198923" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">asdf</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040727-00/?p=38323#comment-198923">
			July 28, 2004 at 1:14 am</a>		</div>

		<p>Ah, spoke too soon &#8211; CreateWindow eventually calls a function that does a rep movs on an unaligned dword ptr. So much for testing this on an x86.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-198943">
				<div id="div-comment-198943" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.jasmusic.com' rel='external nofollow' class='url'>Josh S.</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040727-00/?p=38323#comment-198943">
			July 28, 2004 at 3:22 am</a>		</div>

		<p>I was always a fan of the way the MFC ModifyStyle(&#8230;) function was designed because it was cleaner to use and helped prevent the kind of flag-overwriting you discussed here.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-198873">
				<div id="div-comment-198873" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.valhallalegends.com' rel='external nofollow' class='url'>Skywing</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040727-00/?p=38323#comment-198873">
			July 27, 2004 at 9:05 pm</a>		</div>

		<p>I went ahead and wrote up a little demo app (<a target="_new" href="http://www.valhallalegends.com/skywing/files/alignflt/alignflt.zip" rel="nofollow">http://www.valhallalegends.com/skywing/files/alignflt/alignflt.zip</a> &#8212; source included) that enables alignment fault exceptions for x86-based NT systems.  It ought to work on Windows 2000 and later (and would work on Windows NT 4.0 if you bothered to modify it a bit), but full multiprocessor support requires Windows Server 2003 because the function to send an IPI wasn&#8217;t exported prior to that.</p>
<p>The sample involves the use of a driver (sorry, no way around it without a special build of NT like Larry alluded to).  It&#8217;s fairly simple, what&#8217;s involved is this:</p>
<p>&#8211; Call the driver to set the AM flag in CR0 for all processors.  This can only be done from kernel mode, hence the need for the driver.<br />
<br />&#8211; Call an undocumented function (NtSetInformationThread) to disable automatic alignment fault fixups for the current thread.<br />
<br />&#8211; Set the AC bit in EFLAGS for the current thread, enabling alignment checks.</p>
<p>Some observations:</p>
<p>&#8211; You should be able to use SetErrorMode to enable alignment faults on x86 for *new* threads after calling the driver.  However, this won&#8217;t modify the alignment fault mode for *already existing* threads.  With this in mind, you could drop the undocumented bit if you really wanted to.<br />
<br />&#8211; By default, threads will continue to have alignment faults disabled, so this shouldn&#8217;t break already-running programs.<br />
<br />&#8211; Alignment faults are only possible in user mode due to hardware limitations (for x86).  Don&#8217;t expect this to change anything for drivers.</p>
<p>As the example program shows, if you trip an alignment fault, you will get a STATUS_DATATYPE_MISALIGNMENT exception.</p>
<p>I suppose this could be useful if you wanted to do some profiling of a program you wrote (since unaligned accesses still do have a performance penalty associated with them, even if they don&#8217;t cause a hard crash on x86 NT by default).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-198953">
				<div id="div-comment-198953" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Chris Becke</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040727-00/?p=38323#comment-198953">
			July 28, 2004 at 4:39 am</a>		</div>

		<p>The messyness of the dual SetErrorMode call is the potential for a race condition on a multithreaded app on non x86 ahrdware.</p>
<p>An ia64 app changed its error mode setting after createing worker threads could leave the system in a transient fault-on-unaligned access state &#8211; if a worker thread got hold of some CPU time&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-198913">
				<div id="div-comment-198913" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blogs.msdn.com/Aaron_Margosis' rel='external nofollow' class='url'>Aaron Margosis</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040727-00/?p=38323#comment-198913">
			July 28, 2004 at 12:22 am</a>		</div>

		<p>Norman Diamond &#8211; XP *is* NT 5.1.  Home Edition has the same kernel as Professional.  If by &quot;NT&quot; you mean NT4, I don&#8217;t know what data you&#8217;re basing your assertion on that XP is less reliable than NT4.</p>
<p>And although I rarely defend Win95, it served its market much better than NT could have at the time.  Memory was still expensive then &#8211; Win95&#8217;s minimum RAM was 4MB, while NT 3.x (which didn&#8217;t even have the Explorer UI) needed at least 12MB, IIRC.  And it obviously took a LOT of work to come up with a good way to hide the complexity of NT from home users.  Much as I&#8217;ve always preferred working with NT, I&#8217;ve always been impressed with how much the Win95 team managed to accomplish &#8211; completely new UI, pre-emptive multithreading (to a point:-), built-in multimedia and networking, binary compatibility with most NT apps and almost *all* DOS and 16-bit Windows apps, AND fit it into 4MB.  The backward compatibility is what made it so unstable, but which also helped make it the right product at that time.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-199003">
				<div id="div-comment-199003" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">mschaef</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040727-00/?p=38323#comment-199003">
			July 28, 2004 at 7:38 am</a>		</div>

		<p>&quot;Much as I&#8217;ve always preferred working with NT, I&#8217;ve always been impressed with how much the Win95 team managed to accomplish &quot;</p>
<p>Yeah, Windows 95 was a remarkable product. It caught a lot of flack for not being &quot;pure&quot; (whatever that means), but MS did a good job of bringing lots of capabilities to the masses.</p>
<p>As a side note, Andrew Schulman wrote a book, &quot;Unauthorized Windows 95&quot; that talks a lot about how the internals of the system work. In it he has a detailed discussion of the complexities of disk access works that describes control flow through the system after a disk request is made.  Given all the hoops they had to jump through to support things like real mode disk I/O drivers, it&#8217;s amazing to me they got it working at all&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-199123">
				<div id="div-comment-199123" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Petr Kadlec</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040727-00/?p=38323#comment-199123">
			July 28, 2004 at 8:34 am</a>		</div>

		<p>Hmmm, unaligned memory access&#8230;wasn&#8217;t there some performance-monitoring-counter event for those? That might even work in usermode? And for just performance checking, this might even suffice. Maybe, just thinking aloud.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-199173">
				<div id="div-comment-199173" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.valhallalegends.com' rel='external nofollow' class='url'>Skywing</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040727-00/?p=38323#comment-199173">
			July 28, 2004 at 9:26 am</a>		</div>

		<p>The system supports accounting those types of faults, but by default (for x86) the hardware provides zero indicataion to the operating system about any of them (they are silently fixed by the hardware itself), so without the driver the counter would always be zero.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-199493">
				<div id="div-comment-199493" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://weblogs.asp.net/oldnewthing/' rel='external nofollow' class='url'>Raymond Chen</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040727-00/?p=38323#comment-199493">
			July 28, 2004 at 6:14 pm</a>		</div>

		<p>I did work on those problems and my Windows 95 machine rarely if ever bluescreened. Which I&#8217;m sure means nothing to you.</p>
<p>Windows 95 breathed life into 32-bit Windows programming. Windows NT had been out for two years but most companies ignored it and continued writing 16-bit programs because most consumers were running Windows 3.1. Windows 95 made it worthwhile to write 32-bit programs for the masses.</p>
<p>You may argue that Windows 95 did a bad job of running 32-bit programs, but that&#8217;s not my point. The point is that Windows 95 made writing Win32 programs a worthwhile endeavour.<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-199473">
				<div id="div-comment-199473" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Norman Diamond</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040727-00/?p=38323#comment-199473">
			July 28, 2004 at 6:03 pm</a>		</div>

		<p>7/28/2004 12:22 AM Aaron Margosis</p>
<p>&gt; Norman Diamond &#8211; XP *is* NT 5.1.</p>
<p>Yes, I used to spell out Windows NT4 as NT4, but have gradually gotten used to Microsoft&#8217;s practice of no longer using the NT name for more recent versions and just using the NT name for NT4.</p>
<p>&gt; Home Edition has the same kernel as<br />
<br />&gt; Professional.</p>
<p>No kidding, I said how valuable this is.</p>
<p>&gt; If by &quot;NT&quot; you mean NT4, I don&#8217;t know what<br />
<br />&gt; data you&#8217;re basing your assertion on that XP<br />
<br />&gt; is less reliable than NT4.</p>
<p>In my experience, NT4 SP3 blue-screened only on machines that had no I8042 chip and only if I forgot to disable the I8042 driver prior to installing SP3.  The Atapi driver for SP4 (fortunately available as a separate download) is needed to manage disk drives less than 6 years old, but there is no need to suffer problems caused by the rest of SP4, 5, 6, and 6a.  One of these later SPs had a second reason for blue-screening, if a CD was inserted with a bad block.</p>
<p>Windows 2000 blue-screens due to Microsoft-provided video drivers, TCP-IP drivers (mostly fixed but not fixed in SP2 as was asserted), and other random unknown reasons.  Windows XP blue-screens less often than 2000, sometimes for known reasons and sometimes for unknown reasons.  But XP still has a way to go before catching up to NT4 SP3.</p>
<p>&gt; And although I rarely defend Win95, it served<br />
<br />&gt; its market much better than NT could have at<br />
<br />&gt; the time.</p>
<p>That&#8217;s an outright lie.  Windows NT&#8217;s disk administrator did not create overlapping partitions on SCSI disks.  Windows 95 did not serve anyone by doing that.  No one benefits from losing the entire contents of their disk partitions.  No market is served by that.</p>
<p>Windows 95 by itself didn&#8217;t blue screen 15 times a day, maybe only once a day.  To get 15 times a day, one had to use Word 95 on top of Windows 95.  No one is served by this either.  Anyone who wanted to get any work done had to use NT.</p>
<p>Just imagine if Mr. Chen (and I assume some colleagues) had worked on these problems instead of making broken apps work.  Windows 95 might have worked.</p>
<p>&gt; Memory was still expensive then</p>
<p>No kidding, but losing disk partitions and getting 15 blue screens per day was not cheaper than spending 20,000 yen for additional memory.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-199823">
				<div id="div-comment-199823" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Norman Diamond</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040727-00/?p=38323#comment-199823">
			July 29, 2004 at 5:44 pm</a>		</div>

		<p>7/28/2004 6:14 PM Raymond Chen</p>
<p>&gt; I did work on those problems and my Windows<br />
<br />&gt; 95 machine rarely if ever bluescreened.<br />
<br />&gt; Which I&#8217;m sure means nothing to you. </p>
<p>It means Microsoft did a lot less testing than Microsoft customers had to do (and still have to do).  Whether this meaning is &quot;nothing&quot; or not, well, I&#8217;m not quite sure what you mean by that.</p>
<p>You along with everyone in your company seem genuinely unaware of how much damage is caused by defects in your company&#8217;s products.  Perhaps we should meet sometime so I can show you.  At least one item that took months to track down can be duplicated in 10 minutes now.</p>
<p>&gt; Windows 95 breathed life into 32-bit Windows<br />
<br />&gt; programming.</p>
<p>Windows 95 breathed both life and death into it.  The amount of damage far outweighed the benefits.  NT4 was harder to administer and harder to program for, but that wasn&#8217;t the reason for having fewer developers.  Customers who wanted to buy hardware with NT4 had to pay twice for OSes, we didn&#8217;t get the option of not paying for 95.  So the marketplace stayed with 95 instead of NT4.  The marketplace was not served by this.</p>
<p>&gt; You may argue that Windows 95 did a bad job<br />
<br />&gt; of running 32-bit programs</p>
<p>Mostly no (though we know ways in which that is true).  Mostly I am arguing that Windows 95 did a bad job of running itself.</p>
<p>By the way there were a couple of bugs in my memory in my previous posting here.  Word 95 on top of Windows 95 didn&#8217;t cause 15 blue screens per day.  Word 97 on top of Windows 95 did more than Word 95.  But the biggest change around that time was that Internet Explorer became part of the OS, IE version 4 became usable for the length of time between booting and blue screening, and when in use it did cause quite a lot of blue screens.  So the real cause of Windows 95 blue screening 15 times per day was more likely Internet Explorer with help from Word 97.</p>
<p>Consider how frequently Windows 2000 closed down Internet Explorer due to IE trying to access invalid memory locations, both reads and writes.  Think about the damage the same IE bugs did to the kernels in W95 and W98 with no memory protection.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-199953">
				<div id="div-comment-199953" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">DrPizza</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040727-00/?p=38323#comment-199953">
			July 30, 2004 at 5:29 am</a>		</div>

		<p>&quot;Consider how frequently Windows 2000 closed down Internet Explorer due to IE trying to access invalid memory locations, both reads and writes. &quot;<br />
<br />Infrequently, and normally due to plugins rather than IE itself.</p>
<p>&quot;Think about the damage the same IE bugs did to the kernels in W95 and W98 with no memory protection. &quot;<br />
<br />Er&#8230; what kernels are they?</p>
<p>The Win9x kernels did have memory protection (albeit with a big chunk of shared memory).<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-200013">
				<div id="div-comment-200013" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Mystique</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040727-00/?p=38323#comment-200013">
			July 30, 2004 at 7:43 am</a>		</div>

		<p>Okay, here&#8217;s a suggestion. Rigorously disable all compatibility hacks for native 64-bit apps. I&#8217;ll explain:</p>
<p>Granted, Windows XP 64-bit edition needs binary compatibility with 32-bit apps, and these generally rely on bugs and hacks and workarounds that were present back since DOS 1.0, as Raymond elaborately explains and illustrates again and again.</p>
<p>Now my idea: native 64-bit apps need to be recompiled from scratch anyway. There&#8217;s no chance that any end user will want to execute a 64-bit app that was exclusively compiled and tested against Windows 95. 64-bit apps can&#8217;t be executed on a 32-bit OS anyway. So, for 64-bit apps, disable all the compatibility hacks that Raymond has ever talked about.</p>
<p>This is both safe (if a software vendor&#8217;s freshly sold 64-bit app breaks, only he will get the blame) and good (because compat. hacks are *evil*, albeit a necessary one).</p>
<p>Mystique out.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-200493">
				<div id="div-comment-200493" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Norman Diamond</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040727-00/?p=38323#comment-200493">
			August 2, 2004 at 5:48 pm</a>		</div>

		<p>7/30/2004 5:29 AM DrPizza (responding to me)<br />
<br />&gt;&gt; Consider how frequently Windows 2000 closed<br />
<br />&gt;&gt; down Internet Explorer due to IE trying to<br />
<br />&gt;&gt; access invalid memory locations, both reads<br />
<br />&gt;&gt; and writes.<br />
<br />&gt;<br />
<br />&gt; Infrequently,</p>
<p>&quot;Infrequently&quot; like an average of once a day, but sometimes higher.  When IE 5.5 SP2 came out with a feature to report errors to Microsoft, I let it send off about 50 to Microsoft within the first two weeks.  (The US version of IE had it in 5.5 SP1 if I recall correctly.)</p>
<p>&gt; and normally due to plugins rather than IE<br />
<br />&gt; itself.</p>
<p>Well, you could be right, but how can anyone other than Microsoft know that?  Occasionally when Windows asked if I wanted to debug IE I pretended to want to do so, but couldn&#8217;t see much of use in the disassembly.  If IE happily tried to execute garbage that was fed to it by invisibly installed and invisibly executed plugins, then it still seems IE is the primary contributor.  The only binary that I intentionally executed in those cases was IE.</p>
<p>&gt;&gt; Think about the damage the same IE bugs did<br />
<br />&gt;&gt; to the kernels in W95 and W98 with no<br />
<br />&gt;&gt; memory protection.<br />
<br />&gt;<br />
<br />&gt; Er&#8230; what kernels are they? </p>
<p>The Windows 95 kernel and the Windows 98 kernel.</p>
<p>An aside here to Mr. Chen:  Where you have seen problems with PSS or with Office developers or with code that Microsoft built into Windows CDs that perhaps was submitted to Microsoft by other makers, Microsoft customers do not see PSS or Office developers or outside code.  In these cases Microsoft customers see Microsoft.</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>