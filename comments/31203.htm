<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (28)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment byuser comment-author-kjkhyperion even thread-even depth-1" id="comment-380833">
				<div id="div-comment-380833" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">KJK::Hyperion</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060515-07/?p=31203#comment-380833">
			May 15, 2006 at 10:56 am</a>		</div>

		<p>Actually, the string returned by GetModuleFileName can be spoofed, too. Not quite as easily as changing the command line, but still a writable string in user-mode memory provided by the caller</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-380843">
				<div id="div-comment-380843" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Gary Niger</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060515-07/?p=31203#comment-380843">
			May 15, 2006 at 10:57 am</a>		</div>

		<p>Correct me if I&#8217;m wrong, but don&#8217;t those issues apply to the exec* family of functions as well?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-380853">
				<div id="div-comment-380853" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Michael</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060515-07/?p=31203#comment-380853">
			May 15, 2006 at 12:36 pm</a>		</div>

		<p>Yes, but in order to spoof the string returned by GetModuleFileName the attacker needs write access to the memory in your process.</p>
<p>In which case, you&#8217;ve already lost.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-380863">
				<div id="div-comment-380863" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Jonathan Payne</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060515-07/?p=31203#comment-380863">
			May 15, 2006 at 1:08 pm</a>		</div>

		<p>Perforce uses this to decide if the Perforce server should run as a command line application (p4d.exe) or a service (p4s.exe).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-380873">
				<div id="div-comment-380873" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Cooney</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060515-07/?p=31203#comment-380873">
			May 15, 2006 at 1:39 pm</a>		</div>

		<p>Actually, in Unix, files are distinct from their names, so the file for vi can be the same one as that for &#8216;ex&#8217;. There isn&#8217;t any sleight of hand or aliasing occurring &#8211; vi just has 2 names.</p>
<p>I still think it&#8217;s a bad idea to allow this sort of inconsistency. What does it buy?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-380883">
				<div id="div-comment-380883" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Andrew Taylor</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060515-07/?p=31203#comment-380883">
			May 15, 2006 at 1:44 pm</a>		</div>

		<p>This trick is possible in Unix, but it is not usually used for the vi/ex example you give. &nbsp;The screen mode is determined by the value of argv[0], but vi and ex are generally launched with argv[0] equal to the binary name.</p>
<p>It is the binary name itself is changed: usually ex is a symbolic link to vi. &nbsp;This would still be possible even if the first argument wasn&#8217;t independent of the binary name.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-380893">
				<div id="div-comment-380893" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Anonymous</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060515-07/?p=31203#comment-380893">
			May 15, 2006 at 1:49 pm</a>		</div>

		<p>Try this: &nbsp;type in the command line</p>
<p>c:&quot;program files&quot;resetofpath.exe</p>
<p>Quote only parts of the path that contain blanks like &quot;program files&quot; above. &nbsp;</p>
<p>Guess what will be the value of argv[0] and argv[1]?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-380903">
				<div id="div-comment-380903" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">bash</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060515-07/?p=31203#comment-380903">
			May 15, 2006 at 2:18 pm</a>		</div>

		<blockquote><p>
  &gt; What does it buy?</p>
<p>Disk space ?<br />
  <br />My router with embedded linux does not have 20GB of disk. </p>
</blockquote>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-380913">
				<div id="div-comment-380913" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">microbe</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060515-07/?p=31203#comment-380913">
			May 15, 2006 at 2:27 pm</a>		</div>

		<p>To make it very clear, the rule should be &quot;the first parameter in lpCommandLine is always the program name&quot; no matter what lpApplicationName is.</p>
<p>It is be a convention. It is a rule.<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-380923">
				<div id="div-comment-380923" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Alex Lambert</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060515-07/?p=31203#comment-380923">
			May 15, 2006 at 2:45 pm</a>		</div>

		<p>Release notes for sendmail 8.8:</p>
<p>&quot;8.8.3/8.8.3   96/11/17<br />
<br />    SECURITY: it was possible to get a root shell by lying to sendmail about argv[0] and then sending it a signal. &nbsp;Problem noted by Leshka Zakharoff &lt;leshka@leshka.chuvashia.su&gt; on the best-of-security list.&quot;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-380933">
				<div id="div-comment-380933" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">antonio vargas</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060515-07/?p=31203#comment-380933">
			May 15, 2006 at 2:51 pm</a>		</div>

		<p>the most popular example for using argv[0] for switching the operating mode is on the package busybox, where a whole lot of 100 programs are packed inside one executable. on instalation you just make 100 symlinks to the real executable and there you go. the programs jsut are hand-optimised-for-size versions of the usual unix tools, and very popular for space-constrained distros</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-dean-harding odd alt thread-odd thread-alt depth-1" id="comment-380953">
				<div id="div-comment-380953" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Dean+Harding' rel='external nofollow' class='url'>Dean Harding</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060515-07/?p=31203#comment-380953">
			May 15, 2006 at 7:49 pm</a>		</div>

		<p>In my last job, we used to work on a windows port of a unix server application (until we rewrote it to be more &quot;windows-like&quot; using thread pooling and stuff, anyway).</p>
<p>The unix version had used that symlink trick to get one executable perform many tasks (I think there ended up being around 7 or 8 symlinks to the one file). So in the port, they just copied the actual file 7 times to the 7 different names. Not exactly efficient, but the actual implementation of the the functions was in a separate DLL so the .exe was actually only a couple of KB anyway.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-380963">
				<div id="div-comment-380963" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Norman Diamond</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060515-07/?p=31203#comment-380963">
			May 15, 2006 at 8:37 pm</a>		</div>

		<p>I thought Unix installations of vi and ex made them hard links to the same file, not using symlinks.</p>
<p>Meanwhile I read that plans for Vista include letting some users create symlinks. &nbsp;If I recall correctly some users won&#8217;t have privileges to create symlinks even within their own directories. &nbsp;When symlinks exist their behaviour appears to be guided by Unix symlinks though of course Win32 APIs differ from Unix APIs so they still can&#8217;t be made identical.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-381013">
				<div id="div-comment-381013" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">meo</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060515-07/?p=31203#comment-381013">
			May 16, 2006 at 2:43 am</a>		</div>

		<p>You know, you just quoted the guy wrong and with the most annoying word: noone.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-380973">
				<div id="div-comment-380973" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ulric</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060515-07/?p=31203#comment-380973">
			May 15, 2006 at 9:01 pm</a>		</div>

		<p>&gt;&gt; What does it buy?<br />
<br />&gt;Disk space ?<br />
<br />&gt;My router with embedded linux does not have<br />
<br />&gt;20GB of disk.</p>
<p>Ridiculous geek talk&#8230; &nbsp;The reason why some unix programmer put everything in one excutable and used different names to invoke it in different way is because &#8230; they could, they thought it was cool, and it saved them some typing at the command line when calling these tools.</p>
<p>The content of a unix distribution isn&#8217;t about saving disk space, it&#8217;s litteraly a dump of hundreds of executable and legacy tools, and there are a lot of other things taking disk space, like allocation size, config files, etc. It was never made to be compact. If they were trying to save space, they would have *dropped*, for example, the old editors that no one uses, and shipped just their new editor.</p>
<p>The only thing using symlinks buys you is saving some typing at the command line, and accomodate legacy reflexes or batch files.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-381023">
				<div id="div-comment-381023" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">...</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060515-07/?p=31203#comment-381023">
			May 16, 2006 at 4:04 am</a>		</div>

		<blockquote><p>
  &gt; Ridiculous geek talk&#8230; &nbsp;The reason why some unix programmer put everything in one excutable and used different names to invoke it in different way is because &#8230; they could, they thought it was cool, and it saved them some typing at the command line when calling these tools. </p>
<p>It&#8217;s not geek talk. You know a router with less EPROM space is a cheaper router to produce. A cheaper router can be sold.. uh cheaper. A cheaper product sells more. More sells means more money.<br />
  
</p></blockquote>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-381033">
				<div id="div-comment-381033" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">x</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060515-07/?p=31203#comment-381033">
			May 16, 2006 at 5:25 am</a>		</div>

		<blockquote><p>
  &gt; And the use of symbolic link is usually related to changing &quot;old practice&quot; to &quot;new practice&quot; in a graceful way. (For example source code of &nbsp;&quot;/usr/src/kernel/kernel-&lt;version&gt;&quot; is linked to &quot;/usr/src/linux&quot; to conserve backward compatibility with other linux packages and *nix distros)</p>
<p>Which reminds me on why we have two copies of notepad ..
</p></blockquote>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-381003">
				<div id="div-comment-381003" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">cheong00</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060515-07/?p=31203#comment-381003">
			May 15, 2006 at 11:10 pm</a>		</div>

		<p>&gt; If they were trying to save space, they would<br />
<br />&gt; have *dropped*, for example, the old editors<br />
<br />&gt; that no one uses, and shipped just their new<br />
<br />&gt; editor.<br />
<br />Not exactly always, as some programs may still be dependent on the &quot;old editors that noone uses&quot;.</p>
<p>Just consider how many people still use &quot;edlin&quot; when &quot;edit&quot;(qbasic) is available at the ages of DOS.</p>
<p>And the use of symbolic link is usually related to changing &quot;old practice&quot; to &quot;new practice&quot; in a graceful way. (For example source code of &nbsp;&quot;/usr/src/kernel/kernel-&lt;version&gt;&quot; is linked to &quot;/usr/src/linux&quot; to conserve backward compatibility with other linux packages and *nix distros)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-381053">
				<div id="div-comment-381053" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Geek</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060515-07/?p=31203#comment-381053">
			May 16, 2006 at 6:20 am</a>		</div>

		<p>&quot;Ridiculous geek talk&#8230;&quot;</p>
<p>Is it hell.</p>
<p>At the time that ex/vi were introduced, disk usage was a big deal.</p>
<p>The design remains the same because to change it now would achieve nothing.</p>
<p>And UNIX systems retain all those esoteric binaries, because at this stage it &quot;costs&quot; virtually nothing, and each one is used by somebody somewhere for their shell script.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-381063">
				<div id="div-comment-381063" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Archangel</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060515-07/?p=31203#comment-381063">
			May 16, 2006 at 6:33 am</a>		</div>

		<blockquote><p>
  &gt; Ridiculous geek talk&#8230; &nbsp;The reason why some unix programmer put everything in one excutable and used different names to invoke it in different way is because &#8230; they could, they thought it was cool, and it saved them some typing at the command line when calling these tools. </p>
<p>One assumes you&#8217;re thinking of Busybox, which ties up many many functions into one binary. It&#8217;s got nothing to do with saving typing (in fact it doesn&#8217;t save any, because they&#8217;re the same names as the individual binaries) but it has an awful lot to do with saving space. You can sniff at that, but when you need to fit a semi-functional system into an initial ramdisk image that&#8217;s only a few MB, it&#8217;s quite helpful.</p>
<p>&gt;&gt;The only thing using symlinks buys you is saving some typing at the command line, and accomodate legacy reflexes or batch files.</p>
<p>Or an awful lot of convienience &#8211; as someone suggested before, symlinking /usr/src/linux to /usr/src/linux-version, to facilitate multiple source trees at once. Or backwards compatibility if you move libraries to a new location. Or lots of other things I can&#8217;t think of at present.</p>
<p>Just because you can&#8217;t see a use for something doesn&#8217;t mean it doesn&#8217;t have one.
</p></blockquote>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-381073">
				<div id="div-comment-381073" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Centaur</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060515-07/?p=31203#comment-381073">
			May 16, 2006 at 7:05 am</a>		</div>

		<p>+1 Interesting. I never thought about it this way.</p>
<p>Some tools ported from Un*x behave this way in Windows. E.g. bzip2 compresses files by default, bunzip2 decompresses, and bz2cat decompresses them to stdout, and all that is in a single binary which one can copy or hardlink.</p>
<p>I assume the historical reason for this behavior is that one binary means one instance of the C runtime, one instance of the command line parser, and one instance of the decompressor, and that people are more comfortable calling bunzip2 instead of bzip2 -d.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-381083">
				<div id="div-comment-381083" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">BryanK</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060515-07/?p=31203#comment-381083">
			May 16, 2006 at 8:21 am</a>		</div>

		<p>Archangel &#8212; one more thing that symlinks let you do is get rid of DLL Hell.</p>
<p>/sbin/ldconfig creates (or replaces) a symlink whose name is the &quot;soname&quot; of each library, pointing at the full name of the library. &nbsp;So any program that links to the soname (which is everything, since that&#8217;s how /usr/bin/ld works) actually indirects through the symlink. &nbsp;And upgrading the library because of (e.g.) a security vulnerability means that all you have to do is copy the new library over, then update the symlink, then restart the affected programs. &nbsp;(Whether you remove the old library or not doesn&#8217;t make a difference; you can remove in-use files, but if you don&#8217;t, it won&#8217;t be used anyway.)</p>
<p>Any upgrade to the library that preserves binary compatibility should retain the soname.</p>
<p>There&#8217;s also a symlink named just libwhatever.so &#8212; that&#8217;s for compile time, and it should point at the newest library available (regardless of compatibility with old versions). &nbsp;So you can link against plain old -lwhatever, and it&#8217;ll pick up the newest library on the system. &nbsp;It&#8217;ll record the soname in the output file, though (not the unversioned name), so that future upgrades will stay compatible.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-381093">
				<div id="div-comment-381093" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Adam</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060515-07/?p=31203#comment-381093">
			May 16, 2006 at 8:53 am</a>		</div>

		<p>Brian&gt; &quot;Any upgrade to the library that preserves binary compatibility should retain the soname.&quot;</p>
<p>Conversely, and more importantly, any upgrade to the library that <em>breaks</em> binary compatibility <em>must change</em> the soname.</p>
<p>And under windows, any upgrade to a dll that breaks binary compatibility should change the dll filename.</p>
<p>In my experience, the main thing that causes dll hell on windows is not the lack of sonames, it&#8217;s that many windows developers appear to be incapable of maintaining binary compatibility between &quot;minor&quot; releases of their own dlls.</p>
<p>(The fact that some developers often fail to make sure that they don&#8217;t overwrite newer versions of a dll with an older one on application installation doesn&#8217;t help. But if it&#8217;s a 3rd party dll, the dll author can&#8217;t really be blamed for that one.)<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-381133">
				<div id="div-comment-381133" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Richard</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060515-07/?p=31203#comment-381133">
			May 16, 2006 at 10:31 am</a>		</div>

		<p>Interestingly, if I have a C# app which outputs the contents of its args array, and execute it with something like the following:</p>
<p>::CreateProcess(&quot;theapp.exe&quot;, &quot;argument1 argument2&quot;, NULL, NULL, FALSE, 0, NULL, NULL, &amp;si, &amp;pi);</p>
<p>the .NET framework assumes that arg[0] is the app name and outputs only &quot;argument2&quot;.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-381183">
				<div id="div-comment-381183" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">[]</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060515-07/?p=31203#comment-381183">
			May 16, 2006 at 11:46 am</a>		</div>

		<p>It&#8217;s correct that arg[0] is not an argument but it&#8217;s either the name of the program or of the alias used to launch it.</p>
<p>arg[0] is not a parameter, the whole post was about not making<br />
assumptions which can compromise security on the value of arg[0], not<br />
on the right and wrong of thinking of it as the program name. </p>
<p>BTW &#8220;argv[0] = Program Name&#8221; is sanctioned by the ANSI C standard.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-381043">
				<div id="div-comment-381043" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Markus</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060515-07/?p=31203#comment-381043">
			May 16, 2006 at 5:49 am</a>		</div>

		<p>&gt;&gt; Ridiculous geek talk&#8230; </p>
<p>I well remember the time i started to learn C programming under Unix on a 68020-machine with 8 terminals and 20 MB hard disk. When working on a larger project, i often had to ask fellows students to delete their a.out (compiled programs) because the disk didn&#8217;t have enugh free space left.</p>
<p>(at the time, vi was a killer editor &#8211; so much better than the line-editors available under CP/CMS ;-)</p>
<p>don&#8217;t forget, unix is *ancient*. in those times, every kB of disk space counted.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-407673">
				<div id="div-comment-407673" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://blogs.msdn.com:443/jeffdav/archive/2006/08/09/694118.aspx' rel='external nofollow' class='url'>jeff's WebLog : more fun with GetCommandLine()</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060515-07/?p=31203#comment-407673">
			August 10, 2006 at 3:13 am</a>		</div>

		<p>PingBack from <a rel="nofollow" target="_new" href="https://blogs.msdn.com:443/jeffdav/archive/2006/08/09/694118.aspx" rel="nofollow">https://blogs.msdn.com:443/jeffdav/archive/2006/08/09/694118.aspx</a></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-490713">
				<div id="div-comment-490713" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.developers.org.ua/archives/max/2006/05/16/nemnogo-ob-argv0/' rel='external nofollow' class='url'>?????????????? ???? argv[0] - max - ???????? ??????????????????????????</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060515-07/?p=31203#comment-490713">
			April 9, 2007 at 5:04 am</a>		</div>

		<p>PingBack from <a rel="nofollow" target="_new" href="http://www.developers.org.ua/archives/max/2006/05/16/nemnogo-ob-argv0/" rel="nofollow">http://www.developers.org.ua/archives/max/2006/05/16/nemnogo-ob-argv0/</a></p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>