<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (11)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1 parent" id="comment-1254746">
				<div id="div-comment-1254746" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Mc</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160701-00/?p=93785#comment-1254746">
			July 1, 2016 at 7:05 am</a>		</div>

		<p>Does it actually use a sentinal value of  	&#x1f622;  (Unicode crying face)   or something more boring like -1?</p>

		
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-oldnewthing bypostauthor odd alt depth-2 parent" id="comment-1254765">
				<div id="div-comment-1254765" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Raymond+Chen+-+MSFT' rel='external nofollow' class='url'>Raymond Chen - MSFT</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160701-00/?p=93785#comment-1254765">
			July 1, 2016 at 7:21 am</a>		</div>

		<p>This is actually an insightful question disguised as a joke. I&#8217;ll answer it in another post.</p>

		
				</div>
		<ol class="children">
		<li class="comment even depth-3" id="comment-1254805">
				<div id="div-comment-1254805" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Piotr Siódmak</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160701-00/?p=93785#comment-1254805">
			July 1, 2016 at 9:11 am</a>		</div>

		<p>lemme guess: 0x5ADDFACE? :)</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment byuser comment-author-alegrigoriev odd alt depth-2" id="comment-1254855">
				<div id="div-comment-1254855" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/alegr1' rel='external nofollow' class='url'>alegr1</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160701-00/?p=93785#comment-1254855">
			July 2, 2016 at 10:05 am</a>		</div>

		<p>The only requirement that the &#8220;valid&#8221; (the least significant) bit is zero. The rest of PTE can be used to point to OS structures that describe this region. It&#8217;s unlikely that it&#8217;s wasted on a joke bitmask.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment byuser comment-author-dwalker-wk even thread-odd thread-alt depth-1" id="comment-1254785">
				<div id="div-comment-1254785" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/DWalker' rel='external nofollow' class='url'>DWalker</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160701-00/?p=93785#comment-1254785">
			July 1, 2016 at 7:23 am</a>		</div>

		<p>Are these sad-faces visible in memory dumps?  That&#8217;s cute!</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-even depth-1" id="comment-1254795">
				<div id="div-comment-1254795" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Matt G</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160701-00/?p=93785#comment-1254795">
			July 1, 2016 at 8:46 am</a>		</div>

		<p>I&#8217;m guessing that it uses the value 0xdeadbeef</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-odd thread-alt depth-1 parent" id="comment-1254845">
				<div id="div-comment-1254845" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Nawak</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160701-00/?p=93785#comment-1254845">
			July 1, 2016 at 1:27 pm</a>		</div>

		<p>As a side note, not all architectures uses a hierarchical page table. x86 and ARM do, but PowerPC for instance doesn&#8217;t. They mostly use a hash-table for PTE (but on some PowerPC there isn&#8217;t even a page table, only TLB that are loaded by software).<br />
On these kinds of CPU, not doing anything special for &#8220;reserved but not commited&#8221; memory is the &#8220;obvious&#8221; way. I wonder if the x86 memory manager would have been &#8220;optimized&#8221; from the start if Windows had been *first* designed for that kind of CPU. Sometimes you don&#8217;t realize that there are shortcuts when you have always thought of a problem in a certain way, and it&#8217;s only when you (or someone else) approach it from a different angle that the question &#8220;Wait, is this intermediate step really necessary?&#8221; does pop up.<br />
Or maybe the shortcut was always known but wasn&#8217;t deemed worthy of the extra lines?</p>

		
				</div>
		<ol class="children">
		<li class="comment odd alt depth-2 parent" id="comment-1254915">
				<div id="div-comment-1254915" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Simon Farnsworth</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160701-00/?p=93785#comment-1254915">
			July 3, 2016 at 11:49 am</a>		</div>

		<p>I suspect that it&#8217;s just that programming models have changed; in DOS days, address space and physical memory were the same thing, and thus the early reservers of address space were people who expected to back it with something already available to the system (mirrors of RAM or disk contents).</p>
<p>Modern users reserve as much address space as they could possibly need in the worst case. These people don&#8217;t expect to back most of the space with anything, it&#8217;s just reserved and empty.</p>

		
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-jan-ringos even depth-3 parent" id="comment-1254935">
				<div id="div-comment-1254935" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Jan+Ringo%C5%A1' rel='external nofollow' class='url'>Jan Ringoš</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160701-00/?p=93785#comment-1254935">
			July 4, 2016 at 3:11 am</a>		</div>

		<p>It was probably also a case of not optimizing for the case that nobody has used. The approach of using continuous memory is quite recent. The good old days used to be all about linked lists and quite a lot of things in Windows are still implemented that way.</p>

		
				</div>
		<ol class="children">
		<li class="comment odd alt depth-4" id="comment-1255455">
				<div id="div-comment-1255455" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.farnz.org.uk/' rel='external nofollow' class='url'>Simon Farnsworth</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160701-00/?p=93785#comment-1255455">
			July 8, 2016 at 4:05 am</a>		</div>

		<p>Also worth noting that when the algorithm was first chosen, Win16 and Win32s apps would have been the norm, at 16 MiB of address space per app, and that restriction would still have mattered in developer thinking. While Win32 increased the address space to 2 GiB, it took a while for people to get the idea that they could actually use that, and even then, it wouldn&#8217;t be uncommon for the maximum possible need to be beyond 2 GiB (even though the typical case is closer to 8 MiB).</p>
<p>It&#8217;s not until 64-bit CPUs become the norm (address space of 8 TiB in early 64-bit Windows, 128 TiB in current 64-bit Windows) that most processes had sufficient address space that they could simply reserve the largest continuous block that they could possibly need instead of worrying about running out of space.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment even depth-2" id="comment-1254926">
				<div id="div-comment-1254926" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">smf</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160701-00/?p=93785#comment-1254926">
			July 4, 2016 at 2:27 am</a>		</div>

		<p>@nawak Windows NT was designed for Intel i860XR first and then ported to MIPS and then later to the 386 and dec alpha. MIPS only has a TLB, so I doubt that throwing PowerPC into the mix would have made much difference.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>