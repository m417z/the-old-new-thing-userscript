<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (10)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1 parent" id="comment-1275135">
				<div id="div-comment-1275135" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">DWalker07</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20161128-00/?p=94815#comment-1275135">
			November 28, 2016 at 10:05 am</a>		</div>

		<p>I hope they plan to do something with the key eventually &#8212; otherwise, they don&#8217;t need to create it.</p>
<p>Why can&#8217;t they create the key when they want to write to it or add subkeys?  I don&#8217;t understand&#8230;</p>

		
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-oldnewthing bypostauthor odd alt depth-2 parent" id="comment-1275145">
				<div id="div-comment-1275145" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Raymond+Chen+-+MSFT' rel='external nofollow' class='url'>Raymond Chen - MSFT</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20161128-00/?p=94815#comment-1275145">
			November 28, 2016 at 10:49 am</a>		</div>

		<p>Probably because they are interacting with a component that triggers on key existence, where the value is not relevant.</p>

		
				</div>
		<ol class="children">
		<li class="comment even depth-3" id="comment-1275846">
				<div id="div-comment-1275846" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">DWalker07</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20161128-00/?p=94815#comment-1275846">
			December 6, 2016 at 6:45 am</a>		</div>

		<p>Ah, thanks.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1 parent" id="comment-1275155">
				<div id="div-comment-1275155" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20161128-00/?p=94815#comment-1275155">
			November 28, 2016 at 11:08 am</a>		</div>

		<p>Before the UAC days, passing MAXIMUM_ALLOWED in contexts like this was sane. But then again, 0 is sane either way.</p>

		
				</div>
		<ol class="children">
		<li class="comment even depth-2 parent" id="comment-1275165">
				<div id="div-comment-1275165" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Dave</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20161128-00/?p=94815#comment-1275165">
			November 29, 2016 at 1:02 am</a>		</div>

		<p>Is passing 0 guaranteed to be future-proof?  What if a future version of the API, performing more rigorous checking, decides that passing 0 doesn&#8217;t make sense since you won&#8217;t be able to use the key you&#8217;ve just created, and returns an error?</p>

		
				</div>
		<ol class="children">
		<li class="comment odd alt depth-3 parent" id="comment-1275175">
				<div id="div-comment-1275175" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">anai</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20161128-00/?p=94815#comment-1275175">
			November 29, 2016 at 7:00 am</a>		</div>

		<p>As I understand it, the access is for the handle returned, not for the operation of the function call. So if this (key creation unrelated to returned handle use) remains in the future, and you still don&#8217;t want to use the handle returned (apart from close which requires no special permissions) passing 0 will always be valid.</p>
<p>That is, the function is designed for a use case whereby the handle returned is not used (except to close). That case is the creation of a key. If this use case is valid in the future then passing 0 will be valid.</p>
<p>Notes:</p>
<p>From the documentation (and the name of the function) it does not appear that this &#8216;just create a key&#8217; is a side effect, that could be &#8216;dropped&#8217;.</p>
<p>In the future, maybe you will have to have non-zero access permissions on handles (why?), which would break this use, however best practice is to use the minimum permissions required. Therefore if the above use case is required, best practice would dictate that  should be supported.</p>

		
				</div>
		<ol class="children">
		<li class="comment even depth-4" id="comment-1275185">
				<div id="div-comment-1275185" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">anai</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20161128-00/?p=94815#comment-1275185">
			November 29, 2016 at 7:03 am</a>		</div>

		<p>&#8230; that {nothing} should be supported &#8230; (angle brackets not good)</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment byuser comment-author-archangelpip odd alt depth-3" id="comment-1275255">
				<div id="div-comment-1275255" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Darran+Rowe' rel='external nofollow' class='url'>Darran Rowe</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20161128-00/?p=94815#comment-1275255">
			November 29, 2016 at 9:39 am</a>		</div>

		<p>Well, there is a use for opening a file or key with no access to it already. So while there is a reason for it then it isn&#8217;t going away.<br />
Checking for the existence is one very valid reason, and you don&#8217;t need the access mask to have anything other than 0 for that. Pre-emptively creating a file or a key is also another very valid reason, and again a 0 for the access mask will do just fine.<br />
Another thing that is called out in the documentation is that some actions don&#8217;t actually check the access mask, they check the key&#8217;s ACL instead. So an example of this is if you create a key, specifying that the key has a 0 access mask, you can still use the handle obtained from that to use as a parent key for another call to RegCreateKeyEx. This is mentioned in the remarks section for RegOpenKeyEx. (<a href="https://msdn.microsoft.com/en-us/library/windows/desktop/ms724897(v=vs.85)" rel="nofollow">https://msdn.microsoft.com/en-us/library/windows/desktop/ms724897(v=vs.85)</a>.aspx).<br />
So no, the access mask being 0 is not going away because it is quite future proof and also quite useful.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment even depth-2" id="comment-1275295">
				<div id="div-comment-1275295" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Kirill</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20161128-00/?p=94815#comment-1275295">
			November 30, 2016 at 5:26 am</a>		</div>

		<p>Passing MAXIMUM_ALLOWED has never been sane. It worked, sure, but it wasn&#8217;t sane.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>