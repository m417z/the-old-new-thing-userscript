<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (30)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-1156613">
				<div id="div-comment-1156613" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Kevin</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20141021-00/?p=43803#comment-1156613">
			October 21, 2014 at 7:09 am</a>		</div>

		<p>Without even looking, my guess: findstr either does not support (negative) lookahead, or does not support that particular syntax for it.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1156633">
				<div id="div-comment-1156633" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ed</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20141021-00/?p=43803#comment-1156633">
			October 21, 2014 at 7:37 am</a>		</div>

		<p>/C:string &nbsp;Uses specified string as a literal search string.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1156643">
				<div id="div-comment-1156643" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Phil</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20141021-00/?p=43803#comment-1156643">
			October 21, 2014 at 7:43 am</a>		</div>

		<p>@Ed: /r: Uses search strings as regular expressions</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-davebacher odd alt thread-odd thread-alt depth-1" id="comment-1156663">
				<div id="div-comment-1156663" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Dave+Bacher' rel='external nofollow' class='url'>Dave Bacher</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20141021-00/?p=43803#comment-1156663">
			October 21, 2014 at 8:04 am</a>		</div>

		<p>You&#39;re handy table doesn&#39;t list findstr specifically, but TechNet does:</p>
<p><a rel="nofollow" target="_new" href="http://technet.microsoft.com/en-us/library/bb490907.aspx">technet.microsoft.com/&#8230;/bb490907.aspx</a></p>
<p>Why on earth there&#39;s not a switch for findstr to use Microsoft&#39;s ECMA implementation (I can understand it not being the default, because that could break things) &#8212; which would have a lot higher penetration (I guess the 12 lines of code to initialize the COM object and call through to it would kill the exe size?)&#8230; &nbsp;but that&#39;s neither here nor there.</p>
<p>findstr apparently doesn&#39;t support grouping, capture or negate &#8212; it looks like it only supports character ranges and wildcards.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1156673">
				<div id="div-comment-1156673" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Tim</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20141021-00/?p=43803#comment-1156673">
			October 21, 2014 at 8:23 am</a>		</div>

		<p>This frustrates me to no end. So many tools support regular expressions and just about all of them are different. It&#39;s a mystery why there isn&#39;t a standard library that was settled on and used everywhere by now. It&#39;s not like the problem is heavily coupled to a particular platform. A straight C implementation of a standard library would work fine anywhere you would want to use it.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1156683">
				<div id="div-comment-1156683" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Mark VY</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20141021-00/?p=43803#comment-1156683">
			October 21, 2014 at 8:55 am</a>		</div>

		<p>Tim: it&#39;s not such a big mystery to me. &nbsp;I bet it&#39;s simply because by the time people realized how annoying all the incompatible syntax was, it was too late to do much about it without breaking things. &nbsp;On the bright side: at least the list is no longer growing much, as people these days tend to indeed pick one of the popular ones and implement that. &nbsp;Sometimes they even manage to implement it correctly!</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1156693">
				<div id="div-comment-1156693" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Kevin</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20141021-00/?p=43803#comment-1156693">
			October 21, 2014 at 9:14 am</a>		</div>

		<p>@Tim: Lots of open standards have this problem (cf. Markdown). &nbsp;It&#39;s endemic.</p>
<p><a rel="nofollow" target="_new" href="http://xkcd.com/927/">http://xkcd.com/927/</a></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1156703">
				<div id="div-comment-1156703" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">DWalker</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20141021-00/?p=43803#comment-1156703">
			October 21, 2014 at 9:27 am</a>		</div>

		<p>Kinda stretches the definition of &quot;regular&quot;, doesn&#39;t it? &nbsp;So many irregular regular expression parsers&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1156713">
				<div id="div-comment-1156713" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Karellen</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20141021-00/?p=43803#comment-1156713">
			October 21, 2014 at 9:39 am</a>		</div>

		<p>@Tim: There is a standard library for it &#8211; the POSIX.2 additions to the C standard library[0][1]. The NT family of Windows OSs has been POSIX.2 compliant for years, I heard somewhere?</p>
<p>Alternatively, there&#39;s std::basic_regex in the C++ standard library[2], which handles the ECMAScript, basic POSIX, extended POSIX, awk, grep and egrep families. They were introduced in std::tr1 in 2007, so any modern standards-compliant C++ implementation should have them by now.</p>
<p>/snark</p>
<p>Alternatively, while it&#39;s not a de-jure standard, PCRE[3] is a straight C implementation of Perl&#39;s regex syntax, and is popular, available for most platforms (including Windows), and in wide use by a large number of applications. It&#39;s in the dependency chain of Chrome and Firefox (along with dozens of other packages) on my system, so you may have a copy already installed.</p>
<p>[0] <a rel="nofollow" target="_new" href="http://linux.die.net/man/3/regex">linux.die.net/&#8230;/regex</a></p>
<p>[1] <a rel="nofollow" target="_new" href="http://linux.die.net/man/7/regex">linux.die.net/&#8230;/regex</a></p>
<p>[2] <a rel="nofollow" target="_new" href="http://en.cppreference.com/w/cpp/regex">en.cppreference.com/&#8230;/regex</a></p>
<p>[3] <a rel="nofollow" target="_new" href="http://www.pcre.org/">http://www.pcre.org/</a></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1156733">
				<div id="div-comment-1156733" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">RJB</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20141021-00/?p=43803#comment-1156733">
			October 21, 2014 at 11:42 am</a>		</div>

		<p>See, they&#39;re just getting too fancy&#8230;the pipeline is your friend:</p>
<p>findstr /r /c:&quot;a(?!.*b)&quot; file.txt</p>
<p>findstr a file.txt | findstr /V ab</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-alexcohn even thread-even depth-1" id="comment-1156753">
				<div id="div-comment-1156753" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Alex+Cohn' rel='external nofollow' class='url'>Alex Cohn</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20141021-00/?p=43803#comment-1156753">
			October 21, 2014 at 12:36 pm</a>		</div>

		<p>&quot;a not followed anywhere by a b&quot;: that sounds like &quot;a and b were sitting on the pipe&quot;, with similar consequences.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1156763">
				<div id="div-comment-1156763" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">EvilKiru</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20141021-00/?p=43803#comment-1156763">
			October 21, 2014 at 12:46 pm</a>		</div>

		<p>@RJB: findstr a file.txt | findstr /V /r /c:&quot;a.*b&quot;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1156773">
				<div id="div-comment-1156773" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">j b</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20141021-00/?p=43803#comment-1156773">
			October 21, 2014 at 1:16 pm</a>		</div>

		<p>@dave,</p>
<p>And, in contrast to most regexp languages: Snobol is _readable_!</p>
<p>I must admit that I never expected to find anyone defending Snobol in the year 2014. Since I learned it as a student, more than 30 years ago (and came to love it), I have met less than a dozen people who know it at all. I have never seen it in a real, commercial application (but I still have the source code of a primitive &quot;Liza&quot; laying around, dated 1976, if I remember right). Once I made a proposal for an extension to Pascal for embedding Snobol-typoe expressions into that language, but it never got past the drawing board. That was in the early 1980s. a time where regexps were known only to a small fraction of programmers, so I had to both defend the idea of pattern matching and also the value of incorporating it into an algorithmic language. The second part would have been difficult alone, even if people had been open to the first part.</p>
<p>Now that you remind me of it&#8230; I hope that I have preserved my old proposal. Maybe I should dig it up and see if I still can defend it&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1156723">
				<div id="div-comment-1156723" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">dave</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20141021-00/?p=43803#comment-1156723">
			October 21, 2014 at 10:46 am</a>		</div>

		<p>We should all embed snobol4 interpreters instead. &nbsp;Now *there&#39;s* a pattern-matching language.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1156783">
				<div id="div-comment-1156783" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Wear</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20141021-00/?p=43803#comment-1156783">
			October 21, 2014 at 4:29 pm</a>		</div>

		<p>@J b, I find Regular Expressions to be fairly readable. I mean they can get pretty bad but if you don&#39;t go overboard and keep your problem specific they tend not to be too bad.</p>
<p>findstr /R /C:&quot;^[^aA]*[aA][^bB]*$&quot; file.txt</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1156803">
				<div id="div-comment-1156803" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Steve</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20141021-00/?p=43803#comment-1156803">
			October 21, 2014 at 11:48 pm</a>		</div>

		<p>@Wear</p>
<p>That&#39;s only true for certain values of &#39;readable&#39;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1156813">
				<div id="div-comment-1156813" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">640k</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20141021-00/?p=43803#comment-1156813">
			October 22, 2014 at 12:14 am</a>		</div>

		<p>Please use the command shell specified by microsoft common engineering criteria for these kind of tasks. It reuse the regex parser from .net with no surprises.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1156833">
				<div id="div-comment-1156833" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Neil</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20141021-00/?p=43803#comment-1156833">
			October 22, 2014 at 3:28 am</a>		</div>

		<p>@Wear The ^[^aA]* at the beginning of your regular expression is superfluous as the match will always start at the first A anyway.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1156843">
				<div id="div-comment-1156843" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">mirabilos</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20141021-00/?p=43803#comment-1156843">
			October 22, 2014 at 4:35 am</a>		</div>

		<p>Sweet link, thanks! Now I finally know what to look for when reviewing my coworkers’ GNU {B,E}RE for portability. (Though my BSD re have [[:&lt;:]] and [[:&gt;:]] extensions, which aren’t listed on that page, but simple to spot. <a rel="nofollow" target="_new" href="https://www.mirbsd.org/man7/re_format">http://www.mirbsd.org/&#8230;/re_format</a> for reference.)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1156853">
				<div id="div-comment-1156853" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">RonO</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20141021-00/?p=43803#comment-1156853">
			October 22, 2014 at 4:53 am</a>		</div>

		<p>The currently location of the referenced &#39;flavors&#39; page above is now at <a rel="nofollow" target="_new" href="http://www.regular-expressions.info/tools.html">http://www.regular-expressions.info/tools.html</a></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1156873">
				<div id="div-comment-1156873" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">J&#252;rgen</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20141021-00/?p=43803#comment-1156873">
			October 22, 2014 at 6:08 am</a>		</div>

		<p>@Neil @Myself Or probably I spoke too soon and misread the original problem as to find all lines that don&#39;t have an &quot;a&quot; followed by a &quot;b&quot;.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1156893">
				<div id="div-comment-1156893" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Adam Rosenfield</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20141021-00/?p=43803#comment-1156893">
			October 22, 2014 at 7:47 am</a>		</div>

		<p>@Kevin: There&#39;s actually now a Markdown specification and reference implementation called CommonMark <a rel="nofollow" target="_new" href="http://commonmark.org/">http://commonmark.org/</a> that&#39;s intended to be the new standard Markdown. &nbsp;Though it&#39;s still not any kind of official standard — it&#39;s not ISO/IEC/IETF/ANSI/ECMA/etc., nor was it produced by the original creator of Markdown, John Gruber.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1156903">
				<div id="div-comment-1156903" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Wear</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20141021-00/?p=43803#comment-1156903">
			October 22, 2014 at 8:32 am</a>		</div>

		<p>@Jürgen @Neil That was my reading as well. I guess it could be &quot;There is at least one &#39;a&#39; without &#39;b&#39;s after it&quot;, in that case the &quot;^[^aA]*&quot; isn&#39;t needed.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1156913">
				<div id="div-comment-1156913" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Funny How</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20141021-00/?p=43803#comment-1156913">
			October 22, 2014 at 9:54 am</a>		</div>

		<p>@RonO, umm sure, except it doesn&#39;t include the table which was the whole point of Raymond including it in the post in the first place.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1156943">
				<div id="div-comment-1156943" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">KC</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20141021-00/?p=43803#comment-1156943">
			October 22, 2014 at 11:35 am</a>		</div>

		<p>I&#39;ve run into the same issue of owning an existing product when that was developed before a standard existed, and having to figure out how to get standard-compliant behavior without breaking things. &nbsp;It can be a difficult engineering problem. &nbsp;In the case of findstr, maybe it would have been simple to add another option. &nbsp;OTOH, I wouldn&#39;t be surprised if no one had touched the findstr code since long before any standardization work in this area. &nbsp;I&#39;ve worked in groups that groups with a strong aversion to making changes to old stable code. &nbsp;There is a theorem (old wives tale?) that for every change in code, there is a non-zero probability of introducing a defect. &nbsp;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1156963">
				<div id="div-comment-1156963" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Eric</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20141021-00/?p=43803#comment-1156963">
			October 22, 2014 at 12:20 pm</a>		</div>

		<p>Bah. &nbsp; Snobol is for losers. &nbsp; Real programmers use &lt;a href=<a rel="nofollow" target="_new" href="http://www.cs.arizona.edu/icon/&gt;Icon&lt;/a&gt;"></a><a href="http://www.cs.arizona.edu/.../a&#038;gt" rel="nofollow">http://www.cs.arizona.edu/&#8230;/a&#038;gt</a>;. &nbsp;Snobol with real structured programming.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1156973">
				<div id="div-comment-1156973" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Kevin</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20141021-00/?p=43803#comment-1156973">
			October 22, 2014 at 12:29 pm</a>		</div>

		<p>@Adam: Within 24 hours of it going up, its name was changed twice, both times in response to objections from Gruber. &nbsp;It no longer calls itself &quot;Markdown.&quot; &nbsp;I&#39;ve yet to see any evidence that it has &quot;caught on&quot; in any significant sense.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1156863">
				<div id="div-comment-1156863" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">J&#252;rgen</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20141021-00/?p=43803#comment-1156863">
			October 22, 2014 at 5:49 am</a>		</div>

		<p>@Neil No, the ^[^aA]* is not superfluous. If you leave it out &quot;[aA][^bB]*$&quot; would give a match for &quot;aba&quot;.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1157083">
				<div id="div-comment-1157083" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">RonO</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20141021-00/?p=43803#comment-1157083">
			October 23, 2014 at 5:31 am</a>		</div>

		<p>@Funny How: You&#39;re correct. My mistake. :/</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1157333">
				<div id="div-comment-1157333" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">j b</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20141021-00/?p=43803#comment-1157333">
			October 23, 2014 at 1:41 pm</a>		</div>

		<p>@Wear,</p>
<p>I guess the main &quot;philosophical&quot; difference between regexp-variants and Snobol is that Snobol encourages an &quot;algorithmic&quot; approach: You are explicitly lead towards the way the interpreter processes your pattern. </p>
<p>The regexp variants are more of the &quot;predicate&quot; approach, stating requirements to the result. People who love, say, XSLT and Prolog, are likely to love regexp unconditionally. In my student days, I took a course in Prolog, and later I have periodically been forced to work with XSLT. I never caught onto either. I have realized that my nature is the algorithmic way, rather than the predicative.</p>
<p>One great advantage of Snobol&#39;s algorithmic approach: You can very easily and readably construct a complex pattern piece by piece, gluing more complex panttern structures together from named, simpler components, analogous to the way you gradually build a complex data structure from lower-level components. That is one of the most essential readability aspects. Those predicative regexp-languages may try to offer a small piece of this functionality, but if at all provided, it is usually limited, and few if any make use of it. </p>
<p>The common way to write regexps is as one super-complex monolitic jungle. If you bring your digital machete to cut through the wilderness, you will most surely be chopping off some essential strand that keeps the whole thing alive&#8230; :-)</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>