<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (11)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-422323">
				<div id="div-comment-422323" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">steveg</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060920-07/?p=29663#comment-422323">
			September 20, 2006 at 11:04 am</a>		</div>

		<blockquote><p>
  Don&#8217;t be the one responsible for having to issue a hotfix for your product.<br />
  <br />Or you&#8217;ll be sitting all alone in the cafeteria after being shamed (but not named) right here. I feel for your pain, whomever you are.</p>
<p>BTW Is Uninit really the opposite of Init?
</p></blockquote>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-422333">
				<div id="div-comment-422333" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Niko</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060920-07/?p=29663#comment-422333">
			September 20, 2006 at 11:04 am</a>		</div>

		<p>Why Windows does not automatically unregisters them when a process terminate?<br />
<br />Sure, the programmer should always ensures he close all resources (memory, handles, etc) he allocate in his program. But shouldn&#8217;t Windows automatically free these resources when the process terminate if the programmer has not done it?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-422343">
				<div id="div-comment-422343" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Niko</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060920-07/?p=29663#comment-422343">
			September 20, 2006 at 11:10 am</a>		</div>

		<p>Forget my previous comment. I missed the important part: &quot;when the dll is dynamically unloaded&quot;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-422373">
				<div id="div-comment-422373" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Norman Diamond</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060920-07/?p=29663#comment-422373">
			September 21, 2006 at 1:31 am</a>		</div>

		<p>Thank you very much for every bit you wrote here. &nbsp;Also thanks to whoever permitted the hotfix to be released.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-422433">
				<div id="div-comment-422433" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">me</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060920-07/?p=29663#comment-422433">
			September 21, 2006 at 3:17 am</a>		</div>

		<p>Citing: &quot;and the Windows error reports that are generated by these crashes won&#8217;t even be assigned to your DLL since your DLL is long gone.&quot;</p>
<p>In kernel mode, WinDBG shows the addresses of drivers already unloaded. If you are testing your own driver (and reloading it some times), you might even so it 6 or 7 times in the list, so you can recognize where the bug comes from.</p>
<p>This info is even written into a crash dump, at least on Win 2000 and higher.</p>
<p>Why can&#8217;t the reporting tools do similar for the user space? Wouldn&#8217;t this make sense for this type of crash?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-422443">
				<div id="div-comment-422443" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Tom M</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060920-07/?p=29663#comment-422443">
			September 21, 2006 at 3:28 am</a>		</div>

		<p>I had a series of DLLs with different CAxWindow based controls which caused a crash when you unloaded one and then loaded another. This only happened when statically linked with ATL, and didn&#8217;t occur when you dynamically linked with it. Turns out it was a bug in ATL because ATL does not unregister the window classes that it registers, at least when statically linked.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-422493">
				<div id="div-comment-422493" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.explorewindows.com/Blogs' rel='external nofollow' class='url'>Vipin</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060920-07/?p=29663#comment-422493">
			September 21, 2006 at 9:24 am</a>		</div>

		<p>Fundamentally, the problem here is with the window proceedure for a custom control class which will be pointing to a dangling memory when the dll gets unloaded. Microsoft could have solved this had their FreeLibrary(&#8230;) api implementation looked up in its internal data structures and figured out these window classes are going to have their wndprocs dangling post dll unload and hence need to kick them off, in fact unregister them. </p>
<p>If you look at the UnregisterClass documentation:-<br />
<br />It says this &quot;Windows 95/98/Me: All window classes registered by a dynamic-link library (DLL) are unregistered when the DLL is unloaded.&quot; </p>
<p>&quot;Windows NT/2000/XP: No window classes registered by a DLL registers are unregistered when the .dll is unloaded. &quot;</p>
<p>What brings in the difference for NT, only Microsoft will know.</p>
<p>Also another problem is let us say I create a window with a class registered a dll, then I have this window alive when I do a FreeLibrary of the dll. We are going to get the same crash, in fact an unavoidable crash.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-422503">
				<div id="div-comment-422503" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Kevin Eshbabch</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060920-07/?p=29663#comment-422503">
			September 21, 2006 at 9:26 am</a>		</div>

		<p>I also wondered why there was no way to uninitialize the common controls library and this finally explains it! &nbsp;Somebody forgot to include this functionality.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-424713">
				<div id="div-comment-424713" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://tdlevins@comcast.net' rel='external nofollow' class='url'>David Levins</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060920-07/?p=29663#comment-424713">
			September 27, 2006 at 10:53 am</a>		</div>

		<p>DLL function call crashed</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-424723">
				<div id="div-comment-424723" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://tdlevins@comcast.net' rel='external nofollow' class='url'>David Levins</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060920-07/?p=29663#comment-424723">
			September 27, 2006 at 10:54 am</a>		</div>

		<p>DLL function call crashed</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-471443">
				<div id="div-comment-471443" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blogs.msdn.com/oldnewthing/archive/2007/02/12/1661754.aspx' rel='external nofollow' class='url'>The Old New Thing : Why doesn't the window manager unregister window classes when the owning DLL unloads?</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060920-07/?p=29663#comment-471443">
			February 12, 2007 at 10:00 am</a>		</div>

		<p>PingBack from <a rel="nofollow" target="_new" href="http://blogs.msdn.com/oldnewthing/archive/2007/02/12/1661754.aspx" rel="nofollow">http://blogs.msdn.com/oldnewthing/archive/2007/02/12/1661754.aspx</a></p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>