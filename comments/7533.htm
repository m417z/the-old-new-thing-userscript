<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (18)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-987543">
				<div id="div-comment-987543" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blogs.msdn.com/arcangelpip_4000_hotmail.com/ProfileUrlRedirect.ashx' rel='external nofollow' class='url'>arcangelpip@hotmail.com</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120525-00/?p=7533#comment-987543">
			May 25, 2012 at 7:14 am</a>		</div>

		<p>Just to give the third method some love. There is a third method to export symbols, that is the linker&#39;s /export command line option. This can be put into a source file using the #pragma directive.</p>
<p>#pragma comment(linker, &quot;/export:symbol&quot;)</p>
<p>But I&#39;m only mentioning this because I think it is unfair that the MSDN documentaiton only mentions the .DEF file in the dllexport documentation.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-987573">
				<div id="div-comment-987573" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120525-00/?p=7533#comment-987573">
			May 25, 2012 at 8:21 am</a>		</div>

		<p>Private calling conventions in assembly make things <em>interesting</em> for the debugger.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-987583">
				<div id="div-comment-987583" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Aaron</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120525-00/?p=7533#comment-987583">
			May 25, 2012 at 8:35 am</a>		</div>

		<p>What is &quot;C name mangling&quot;? &nbsp; I didn&#39;t know that C did anything to the names.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-987593">
				<div id="div-comment-987593" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Stefan</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120525-00/?p=7533#comment-987593">
			May 25, 2012 at 8:41 am</a>		</div>

		<p>@Aaron</p>
<p>see: <a rel="nofollow" target="_new" href="http://gustedt.wordpress.com/2011/06/24/name-mangling-in-c/" rel="nofollow">gustedt.wordpress.com/&#8230;/name-mangling-in-c</a></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-fredericmagnyf even thread-even depth-1" id="comment-987603">
				<div id="div-comment-987603" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Medinoc' rel='external nofollow' class='url'>Medinoc</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120525-00/?p=7533#comment-987603">
			May 25, 2012 at 8:42 am</a>		</div>

		<p>@Aaron: Mostly the number of bytes of parameters in __stdcall and __fastcall, but there&#39;s slightly more to it. Search __fastcall on MSDN and you should find the info.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-987623">
				<div id="div-comment-987623" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Adam Rosenfield</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120525-00/?p=7533#comment-987623">
			May 25, 2012 at 8:55 am</a>		</div>

		<p>@Aaron: Read the post linked to in the &quot;C mangling&quot; link in the third blockquote. &nbsp;Each different calling convention has a slightly different name decoration in C.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-987633">
				<div id="div-comment-987633" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">fatcathu</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120525-00/?p=7533#comment-987633">
			May 25, 2012 at 8:55 am</a>		</div>

		<p>Hmm.. IIRC WINAPI(_stdcall) are mangled, while all actuall Windows API dlls exports functions as non-mangled, so they all using DEF file ?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-987643">
				<div id="div-comment-987643" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Yuriy Gettya</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120525-00/?p=7533#comment-987643">
			May 25, 2012 at 9:19 am</a>		</div>

		<p>There&#39;s a third way to expose a function without any mangling:</p>
<ol>
<li>In .h file: extern &quot;C&quot; __declspec(dllexport) void foo();</li>
<li>
<p>In .cpp/.c file: void foo(); // without __declspec(dllexport)!</p>
</li>
</ol>
<p>This way .def file is not needed</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-987653">
				<div id="div-comment-987653" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Steve Friedl</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120525-00/?p=7533#comment-987653">
			May 25, 2012 at 10:41 am</a>		</div>

		<p>@Aaron &#8211; the C language itself doesn&#39;t provide for this, but an implementation might. Microsoft C compilers disambiguate the calling convention to avoid catastrophic stack corruption on mismatch.</p>
<p>Ref: <a rel="nofollow" target="_new" href="http://unixwiz.net/techtips/win32-callconv.html" rel="nofollow">unixwiz.net/&#8230;/win32-callconv.html</a></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-987663">
				<div id="div-comment-987663" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">640k</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120525-00/?p=7533#comment-987663">
			May 25, 2012 at 10:41 am</a>		</div>

		<p>Why is this even an issue 2012? The docs should have been super clear on this for the last 20 years.</p>
<div class="post">[<i>We thought the docs were clear on this, especially since nobody asked about it until 2011. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-987693">
				<div id="div-comment-987693" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120525-00/?p=7533#comment-987693">
			May 25, 2012 at 3:51 pm</a>		</div>

		<p>How does the linker figure it out at build time that the compiler exported symbol x@42 is the .def symbol x.</p>
<p>I&#39;m not sure this can happen but if it did I&#39;d imagine it would be worse:</p>
<p>_x</p>
<p>__x</p>
<p>EXPORTS x</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-987703">
				<div id="div-comment-987703" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">foo</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120525-00/?p=7533#comment-987703">
			May 25, 2012 at 11:00 pm</a>		</div>

		<p>@Yuriy. Maybe I&#39;m missing something, but I don&#39;t see that using MSVC if I declare &amp; define foo() as you suggest, except with __stdcall convention.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-987713">
				<div id="div-comment-987713" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blogs.msdn.com/yuriy_4000_cyberdude.com/ProfileUrlRedirect.ashx' rel='external nofollow' class='url'>yuriy@cyberdude.com</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120525-00/?p=7533#comment-987713">
			May 26, 2012 at 5:54 am</a>		</div>

		<p>@foo:</p>
<p>I&#39;ve got a .dll compiled with /Gd (__cdecl), here&#39;s how a function is prototyped and declared:</p>
<p>extern &quot;C&quot; xENGINE_API HRESULT CreateInstance(shared_ptr&lt;xFramework::IPlugin&gt;&amp; ppPlugin);</p>
<p>HRESULT CreateInstance(shared_ptr&lt;xFramework::IPlugin&gt;&amp; ppPlugin)</p>
<p>&#8212;&#8211; results of dumpbin:</p>
<p>&nbsp; &nbsp;ordinal hint RVA &nbsp; &nbsp; &nbsp;name</p>
<p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;1 &nbsp; &nbsp;0 00011398 CreateInstance = @ILT+915(_CreateInstance)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-987733">
				<div id="div-comment-987733" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Anonymous Coward</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120525-00/?p=7533#comment-987733">
			May 26, 2012 at 6:45 am</a>		</div>

		<p>I must say I initially also read the documentation as ‘extern &quot;C&quot; will disable name mangling’. Of course, when I tried to use the DLL I quickly discovered that this was not case. But I&#39;m afraid it was easier to add ‘-Wl,&#8211;kill-at’ to the makefile than to have the added burden of a .def-file that must be kept in synch with the source files.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-fredericmagnyf even thread-even depth-1" id="comment-987753">
				<div id="div-comment-987753" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Medinoc' rel='external nofollow' class='url'>Medinoc</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120525-00/?p=7533#comment-987753">
			May 26, 2012 at 12:58 pm</a>		</div>

		<p>I remember I failed a school project because I assumed prefixing C symbols with an underscore was universal after seeing on both DOS (QuickC) and Windows (Visual and MinGW). I learned at my expense that *n*x systems don&#39;t add anything.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-987763">
				<div id="div-comment-987763" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">foo</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120525-00/?p=7533#comment-987763">
			May 27, 2012 at 3:27 am</a>		</div>

		<p>@Yuriy: Ah right, so using extern &quot;C&quot; disabled C++ name mangling. Cool.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-987963">
				<div id="div-comment-987963" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">David Walker</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120525-00/?p=7533#comment-987963">
			May 29, 2012 at 7:53 am</a>		</div>

		<p>Yes, I definitely understand the incorrect interpretation of the documentation. &nbsp;It&#39;s hard to write good documentation!</p>
<p>When I see something that says &quot;if such and such is not desired, do this&quot;, I naturally assume that if I &quot;do this&quot;, then &quot;such and such&quot; won&#39;t happen.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-davebacher odd alt thread-odd thread-alt depth-1" id="comment-988403">
				<div id="div-comment-988403" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Dave+Bacher' rel='external nofollow' class='url'>Dave Bacher</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120525-00/?p=7533#comment-988403">
			May 30, 2012 at 12:48 pm</a>		</div>

		<p>@Joshua:</p>
<p>If you pop over to msdn.microsoft.com, and search on &quot;Module Definition File,&quot; you&#39;ll find the format specs.</p>
<p>However, basically, you do this:</p>
<p>x=__x &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; @1</p>
<p>x2=_x &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; @2</p>
<p>x3=x &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;@3</p>
<p>If you screw it up, the linker gives the usual suite of complaints &#8212; General Protection Fault, Ambiguous Symbol, symbol not found, etc.</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>