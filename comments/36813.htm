<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (11)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-239123">
				<div id="div-comment-239123" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">M Knight</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050104-00/?p=36813#comment-239123">
			January 4, 2005 at 8:42 am</a>		</div>

		<p>CreateFiberEx is what you would use if you dont want to give the fiber the default stack size.  However, it doesnt look to be able to set the stack size for the 1st initial fiber you create.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-239163">
				<div id="div-comment-239163" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">happy :-)</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050104-00/?p=36813#comment-239163">
			January 4, 2005 at 2:10 pm</a>		</div>

		<p>Finally this boring series is over.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-239173">
				<div id="div-comment-239173" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">rebuttal</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050104-00/?p=36813#comment-239173">
			January 4, 2005 at 2:55 pm</a>		</div>

		<p>happy :-) you don&#8217;t have to read Raymond&#8217;s blog if you don&#8217;t want to, besides this boring series has some very good info in it that could be useful to many, many people that are happy to get it not happy to see it over with.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-239193">
				<div id="div-comment-239193" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">mschaef</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050104-00/?p=36813#comment-239193">
			January 4, 2005 at 5:02 pm</a>		</div>

		<p>This is one of the more useful series of posts lately.  I&#8217;m thinking of implementing threads in a lisp interpreter and need precise control over the execution of threads (primarily to avoid having threads stomp all over my GC).  It seems like fibers might be a good fit.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-239203">
				<div id="div-comment-239203" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Dave</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050104-00/?p=36813#comment-239203">
			January 4, 2005 at 6:24 pm</a>		</div>

		<p>raymond, thanks for the info on fibers, this was a really informative series.<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-239213">
				<div id="div-comment-239213" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Vorn</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050104-00/?p=36813#comment-239213">
			January 4, 2005 at 7:58 pm</a>		</div>

		<p>What exactly do you mean by the &quot;one-thread-per-connection problem&quot;?  Connection to what?</p>
<p>Vorn</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-239223">
				<div id="div-comment-239223" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://weblogs.asp.net/oldnewthing' rel='external nofollow' class='url'>Raymond Chen</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050104-00/?p=36813#comment-239223">
			January 4, 2005 at 8:06 pm</a>		</div>

		<p>A quick google for &lt;one thread per connection&gt; yields many hits, among them <a target="_new" href="http://www.cim.mcgill.ca/~franco/OpSys-304-427/lecture-notes/node68.html" rel="nofollow">http://www.cim.mcgill.ca/~franco/OpSys-304-427/lecture-notes/node68.html</a></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-239233">
				<div id="div-comment-239233" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Vorn</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050104-00/?p=36813#comment-239233">
			January 4, 2005 at 9:09 pm</a>		</div>

		<p>Oh that.  Yes, I&#8217;ve run into that problem.</p>
<p>(one of my first big projects was an IRCd, and I wrote a threadpool thingy for it.  Threadpools are easy like whoa in Python, in particular because it&#8217;s got queue implementations that come with it that are designed specifically to be nice to threadpools)</p>
<p>The link there doesn&#8217;t seem to like me, though.</p>
<p>Vorn</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-239243">
				<div id="div-comment-239243" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Cooney</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050104-00/?p=36813#comment-239243">
			January 5, 2005 at 6:55 am</a>		</div>

		<p>Isn&#8217;t the standard solution (when this one hits its limit) to use a fixed size pool of worker threads and have another thread dispatch work to them as available? This usually requires that you treat each connection like a state machine and also works best when the individual activities are fairly fine grained, but I haven&#8217;t seen anything that works better yet.</p>
<p>As far as fibers are concerned, they&#8217;d probably work great with CreateFiberEx &#8211; 1MB is entirely more stack than you need most of the time, and 64k would easily allow 10k connections.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-239423">
				<div id="div-comment-239423" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Vorn</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050104-00/?p=36813#comment-239423">
			January 5, 2005 at 1:35 pm</a>		</div>

		<p>It&#8217;s not necessarily another thread dispatching.  It&#8217;s more often a data structure that makes threads wait until there&#8217;s something to do.  Check out Python&#8217;s PriorityQueue module for an example.</p>
<p>Vorn</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-247873">
				<div id="div-comment-247873" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.wisniewski-online.com/cs/blogs/wizzys_world/archive/2005/01/20/4.aspx' rel='external nofollow' class='url'>Wizzy's World</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050104-00/?p=36813#comment-247873">
			January 20, 2005 at 6:33 pm</a>		</div>

		<p>A while back there was an article in MSDN magazine about wrapping up the unmaged fibers API to implement&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>