<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (20)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-272643">
				<div id="div-comment-272643" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Anonymous Coward</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050425-41/?p=35803#comment-272643">
			April 25, 2005 at 9:36 am</a>		</div>

		<p>Sounds like -h- thinks his DLL is running in his process, when it&#8217;s actually running in the hooked program&#8217;s process&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-272663">
				<div id="div-comment-272663" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.csc.calpoly.edu/~bfriesen/' rel='external nofollow' class='url'>Brian Friesen</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050425-41/?p=35803#comment-272663">
			April 25, 2005 at 9:54 am</a>		</div>

		<p>Speaking of hooks, does any know if the HHOOK parameter passed to CallNextHookEx is manditory or not?  The MSDN documentation indicates it&#8217;s required, but 99% of the sample hook code I&#8217;ve seen they just pass NULL.  Thanks.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-272713">
				<div id="div-comment-272713" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ben Cooke</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050425-41/?p=35803#comment-272713">
			April 25, 2005 at 10:30 am</a>		</div>

		<p>Just the other day I was writing a program which used WH_KEYBOARD_LL. I did it with an external DLL because that&#8217;s what I&#8217;d always done before. Nice to know it didn&#8217;t have to be so hard. ;)</p>
<p>I did see something along those lines in the documentation while I was doing it, but I was being a cocky programmer and assuming I already knew it all. Lesson learned, I think.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-272763">
				<div id="div-comment-272763" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Daev</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050425-41/?p=35803#comment-272763">
			April 25, 2005 at 11:56 am</a>		</div>

		<p>OK, the WH_KEYBOARD_LL and WH_MOUSE_LL hooks perform a context switch AND a message-loop negotiation every time there&#8217;s a keyboard or mouse event.  There are an awful lot of WM_MOUSEMOVE events.  How does the system avoid thrashing?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-272773">
				<div id="div-comment-272773" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Anonymous</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050425-41/?p=35803#comment-272773">
			April 25, 2005 at 11:59 am</a>		</div>

		<p>Is it because the hInstance he is passing is actually the module instance of his EXE, and not his actual DLL?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-272783">
				<div id="div-comment-272783" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.eluent.com/freeware.htm' rel='external nofollow' class='url'>Doug Harrison</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050425-41/?p=35803#comment-272783">
			April 25, 2005 at 12:23 pm</a>		</div>

		<p>Brian, the current CallNextHookEx documentation says the HHOOK argument is ignored.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-272813">
				<div id="div-comment-272813" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.csc.calpoly.edu/~bfriesen/' rel='external nofollow' class='url'>Brian Friesen</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050425-41/?p=35803#comment-272813">
			April 25, 2005 at 1:45 pm</a>		</div>

		<p>Thanks Doug, I guess it&#8217;s time to install a newer version of the MSDN. :)</p>
<p>Really this just raises further questions.  The older documentation clearly states you pass the handle returned from SetWindowsHookEx.  So either:</p>
<p>1) Older OS like 9x and NT require this handle but the newer MSDN assumes you&#8217;re coding for only newer OSs.</p>
<p>2) The original documentation was wrong and this parameter has always been ignored.</p>
<p>Ugh, what&#8217;s a programmer to do?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-oldnewthing bypostauthor odd alt thread-odd thread-alt depth-1" id="comment-272823">
				<div id="div-comment-272823" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Raymond+Chen+-+MSFT' rel='external nofollow' class='url'>Raymond Chen - MSFT</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050425-41/?p=35803#comment-272823">
			April 25, 2005 at 2:09 pm</a>		</div>

		<p>Pass it anyway.  It doesn&#8217;t hurt.</p>
<p>This is what happens when MSDN starts documenting implementation instead of contract. The contract is &quot;pass the hook handle&quot;. Whether any particular implementation requires it is irrelevant to writing correct code. You write code to the contract, not to the implementation.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-272833">
				<div id="div-comment-272833" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Gordo</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050425-41/?p=35803#comment-272833">
			April 25, 2005 at 3:35 pm</a>		</div>

		<p>Has anyone tried playing with some global hooks (like WH_SHELL) from managed code? Our team loves to send messages around via the Windows message service (the UDP one, not messenger!). Even though I keep reminding them that it&#8217;s 2005 and not 1995, they persist. I thought I&#8217;d try to write a nice WH_SHELL hook to listen for window created messages, scrape the screen, and send me an email with the message instead.</p>
<p>Even with an unmanaged DLL to solve the HINSTANCE problem, I ran into lots of excitement trying to pin the return address of my callback function. Eventually I gave up, and went back to cursing and swearing every time a message pops up when I&#8217;m coding, and my return key closes it before I can read it.</p>
<p>Where is my managed user32!?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-272843">
				<div id="div-comment-272843" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">A</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050425-41/?p=35803#comment-272843">
			April 25, 2005 at 4:14 pm</a>		</div>

		<blockquote><p>
  Pass it anyway. It doesn&#8217;t hurt.</p>
<p>But only the process that called SetWindowsHookEx has a handle. When a hook DLL is injected into another process, it&#8217;s not given any handle, AFAIK. So what is there for the DLL to pass other than NULL?
</p></blockquote>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-272883">
				<div id="div-comment-272883" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.eluent.com/freeware.htm' rel='external nofollow' class='url'>Doug Harrison</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050425-41/?p=35803#comment-272883">
			April 25, 2005 at 11:35 pm</a>		</div>

		<blockquote><p>
  Really this just raises further questions. The older documentation clearly states you pass the handle returned from SetWindowsHookEx. So either: </p>
<p>1) Older OS like 9x and NT require this handle but the newer MSDN assumes you&#8217;re coding for only newer OSs. </p>
<p>2) The original documentation was wrong and this parameter has always been ignored.<br />
  <br />&lt;</p>
<p>My bet is on (2). It&#8217;s nice to relax this requirement. It does away with the need to share the HHOOK between processes. It also seems to avoid a race condition in which one process uninstalls the hook while another goes on to CallNextHookEx(dead_hook_handle). I was never clear as to whether that was a real issue, and if it was, how to overcome it.</p>
<p>&gt;Ugh, what&#8217;s a programmer to do? &lt;</p>
<p>In this case, I&#8217;m content to listen to the documentation. :)
</p></blockquote>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-272873">
				<div id="div-comment-272873" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Tim Smith</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050425-41/?p=35803#comment-272873">
			April 25, 2005 at 11:09 pm</a>		</div>

		<p>&gt; You write code to the contract, not to the implementation.</p>
<p>Boy this is a drum I beat constantly at work.  I just laugh at all the people who outsmart themselves by programming around &#8216;issues&#8217; in the operating systems.  Then when a new version comes out, their software fails.</p>
<p>I also get onto people who design API based on the problem at hand.  They don&#8217;t think about the bigger picture and how well rounded the contract might be.  *sigh*</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-oldnewthing bypostauthor even thread-even depth-1" id="comment-273003">
				<div id="div-comment-273003" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Raymond+Chen+-+MSFT' rel='external nofollow' class='url'>Raymond Chen - MSFT</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050425-41/?p=35803#comment-273003">
			April 26, 2005 at 11:47 am</a>		</div>

		<p>Shared sections are a security hole.<br />
<br /><a rel="nofollow" target="_new" href="http://blogs.msdn.com/oldnewthing/archive/2004/08/04/208003.aspx" rel="nofollow">http://blogs.msdn.com/oldnewthing/archive/2004/08/04/208003.aspx</a></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-272983">
				<div id="div-comment-272983" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://david.acz.org/' rel='external nofollow' class='url'>David Phillips</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050425-41/?p=35803#comment-272983">
			April 26, 2005 at 11:18 am</a>		</div>

		<p>The DLL can install the hook itself and store the returned handle in shared memory:</p>
<p>#pragma data_seg(&quot;.SHARED&quot;)<br />
<br />/* Shared between all instances of DLL */<br />
<br />HHOOK hook = NULL;<br />
<br />#pragma data_seg()<br />
<br />#pragma comment(linker, &quot;/section:.SHARED,RWS&quot;)</p>
<p>You can protect the hook installation with a mutex.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-273013">
				<div id="div-comment-273013" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.eluent.com/freeware.htm' rel='external nofollow' class='url'>Doug Harrison</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050425-41/?p=35803#comment-273013">
			April 26, 2005 at 11:53 am</a>		</div>

		<p>&gt;The DLL can install the hook itself and store the returned handle in shared memory: </p>
<p>#pragma data_seg(&quot;.SHARED&quot;)<br />
<br />/* Shared between all instances of DLL */<br />
<br />HHOOK hook = NULL;<br />
<br />#pragma data_seg()<br />
<br />#pragma comment(linker, &quot;/section:.SHARED,RWS&quot;)<br />
<br />&lt;</p>
<p>Yes, that&#8217;s the usual way it&#8217;s done.</p>
<p>&gt;You can protect the hook installation with a mutex. &lt;</p>
<p>You&#8217;d have to protect the CallNextHookEx call and hook uninstallation. It appears to me that for a CallNextHookEx that uses its HHOOK parameter, one shouldn&#8217;t want process X to uninstall the hook while process Y has just entered the hook function and is about to call CallNextHookEx. Wrapping that call in a mutex makes me nervous, so I&#8217;ve never done it, and this is partly why I was happy to read the function ignores its HHOOK parameter. I&#8217;ve never seen any code that uses a mutex to protect the HHOOK, nor have I seen this race condition discussed, but AFAICT, it would exist for a CallNextHookEx that uses its HHOOK parameter, and it would have to be accounted for in some way.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-273073">
				<div id="div-comment-273073" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">DL</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050425-41/?p=35803#comment-273073">
			April 27, 2005 at 6:51 am</a>		</div>

		<p>Even if you use shared memory to share the HHOOK handle across processes, the handle itself would have to be global (e.g. consider sharing a file handle in a similar way. Obviously it wouldn&#8217;t work as the handle is per process).</p>
<p>Treating the handle as global would have all sorts of security implications&#8230; for example, malicious processes could brute-force window hook handles and use them to &quot;inject&quot; data to other &quot;hookers&quot; in the chain, etc.</p>
<p>With that said, it&#8217;s obvious that the HHOOK parameter was in fact *never* used by the system in Win32. My guess is that it&#8217;s another legacy from good-ol&#8217; Win16.</p>
<p>And finally, a question: Any reason why the SetWindowsHookEx function receives its argument as HMODULE, and not as LPCWSTR (i.e. dll filename)? Obviously, the first thing the SetWindowsHookEx implementation does is to convert the handle back to a filename!</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-273393">
				<div id="div-comment-273393" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">an0nym0us</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050425-41/?p=35803#comment-273393">
			May 2, 2005 at 11:52 am</a>		</div>

		<blockquote><p>
  You write code to the contract, not to the implementation. </p>
<p>A contract that is not enforced leads to app-compat issues once the implementation starts enforcing it.
</p></blockquote>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-304003">
				<div id="div-comment-304003" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blogs.msdn.com/oldnewthing/archive/2005/09/07/461912.aspx' rel='external nofollow' class='url'>The Old New Thing</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050425-41/?p=35803#comment-304003">
			September 7, 2005 at 10:00 am</a>		</div>

		<p>Because there is nowhere to inject them into.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-304143">
				<div id="div-comment-304143" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blogs.msdn.com/oldnewthing/archive/2005/09/07/461912.aspx' rel='external nofollow' class='url'>The Old New Thing</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050425-41/?p=35803#comment-304143">
			September 7, 2005 at 3:44 pm</a>		</div>

		<p>Because there is nowhere to inject them into.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-408013">
				<div id="div-comment-408013" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blogs.msdn.com/oldnewthing/archive/2006/08/11/695514.aspx' rel='external nofollow' class='url'>The Old New Thing : Why does SetWindowsHookEx take an HINSTANCE parameter?</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050425-41/?p=35803#comment-408013">
			August 11, 2006 at 10:00 am</a>		</div>

		<p>PingBack from <a rel="nofollow" target="_new" href="http://blogs.msdn.com/oldnewthing/archive/2006/08/11/695514.aspx" rel="nofollow">http://blogs.msdn.com/oldnewthing/archive/2006/08/11/695514.aspx</a></p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>