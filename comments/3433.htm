<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (30)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-1074053">
				<div id="div-comment-1074053" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130822-00/?p=3433#comment-1074053">
			August 22, 2013 at 7:53 am</a>		</div>

		<p>I still say there&#39;s no excuse for GetFileType blocking. That should not even be I/O, just looking up a config byte in the kernel structures that was set when the file was opened. It can&#39;t even change while the handle is open.</p>
<div class="post">[<em>&quot;All operations on synchronous handles are synchronous, with one exception.&quot; Now you&#39;ve opened the door. Tomorrow, there will be two exceptions. -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-alegrigoriev odd alt thread-odd thread-alt depth-1" id="comment-1074063">
				<div id="div-comment-1074063" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/alegr1' rel='external nofollow' class='url'>alegr1</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130822-00/?p=3433#comment-1074063">
			August 22, 2013 at 8:28 am</a>		</div>

		<p>Small clarification. The scope of I/O serialization is not simply a handle, but all I/O for a given FILE_OBJECT. Additional handles created by DuplicateHandle are included to the serialization scope.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1074073">
				<div id="div-comment-1074073" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">waleri</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130822-00/?p=3433#comment-1074073">
			August 22, 2013 at 8:59 am</a>		</div>

		<p>I don&#39;t understand. Does that mean, that if two threads try to read from a file they will wait for each other? Also, does that mean, that if one uses async mode, the I/O requests will wait for each other too?</p>
<div class="post">[<em>If you attempt to perform asynchronous I/O on a synchronous handle, <a href="http://blogs.msdn.com/b/oldnewthing/archive/2012/04/05/10290954.aspx">it is performed synchronously</a>. Synchronous-ness is a property of the handle (or, more accurately, file object), not the I/O request. -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1074083">
				<div id="div-comment-1074083" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Gabe</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130822-00/?p=3433#comment-1074083">
			August 22, 2013 at 9:15 am</a>		</div>

		<p>Considering that the post &quot;Someone&quot; commented on was about different processes sharing a synchronous file (stdin in that case), and different processes clearly have different handles, it is obviously true that &quot;synchronous or asynchronous&quot; is not a property of the handle, but of some underlying object to which the handle refers (as alegr1 points out).</p>
<p>So if DuplicateHandle returns a reference to the same FILE_OBJECT, that leaves one to wonder how ReOpenFile works. Does it return a reference to the same object, just with different options? Or does it copy the FILE_OBJECT and change some options? Or something else entirely?</p>
<div class="post">[<em>It creates a new FILE_OBJECT that refers to the same file as the original. -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1074093">
				<div id="div-comment-1074093" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blogs.msdn.com/arcangelpip_4000_hotmail.com/ProfileUrlRedirect.ashx' rel='external nofollow' class='url'>arcangelpip@hotmail.com</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130822-00/?p=3433#comment-1074093">
			August 22, 2013 at 10:13 am</a>		</div>

		<p>@waleri:</p>
<p>The reason why CreateFile has the file share flags, and the LockFile(Ex) functions exist is because there is no synchronisation between two separate handles.</p>
<p>So if you want any kind of guarantee that the carpet isn&#39;t pulled out from under you, you would either open the file with no file sharing set to not allow writing (either use FILE_SHARE_READ or 0) or you lock the region of bytes that you want to work on with LockFile(Ex) before you start, and then unlock them after you have complete.</p>
<p>This guarantees that another I/O operation on another handle can&#39;t interfere with what you are doing.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1074113">
				<div id="div-comment-1074113" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blogs.msdn.com/arcangelpip_4000_hotmail.com/ProfileUrlRedirect.ashx' rel='external nofollow' class='url'>arcangelpip@hotmail.com</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130822-00/?p=3433#comment-1074113">
			August 22, 2013 at 10:16 am</a>		</div>

		<p>I should have read that again before posting.</p>
<p>&quot;you would either open the file with no file sharing set to not allow writing&quot;</p>
<p>Two different thoughts at the same time. That should be</p>
<p>&quot;you would either open the file with sharing set to not allow writing&quot;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1074123">
				<div id="div-comment-1074123" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Douglas</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130822-00/?p=3433#comment-1074123">
			August 22, 2013 at 10:20 am</a>		</div>

		<p>&quot;There can be five handles to the same file&quot;</p>
<p>I&#39;ve never heard that limit before. Is that system-wide, per process, or per thread?</p>
<div class="post">[<em>The context of that sentence was intended to be &quot;You can, for example, create five handles to the same file&#8230;&quot; It was not intended to mean &quot;You can create at most five handles to the same file.&quot; -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1074133">
				<div id="div-comment-1074133" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blogs.msdn.com/arcangelpip_4000_hotmail.com/ProfileUrlRedirect.ashx' rel='external nofollow' class='url'>arcangelpip@hotmail.com</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130822-00/?p=3433#comment-1074133">
			August 22, 2013 at 10:23 am</a>		</div>

		<p>@Douglas:</p>
<p>Handles should be limited only by available memory. Or at least that is what the MSDN says.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1074143">
				<div id="div-comment-1074143" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130822-00/?p=3433#comment-1074143">
			August 22, 2013 at 11:32 am</a>		</div>

		<p>[&quot;All operations on synchronous handles are synchronous, with one exception.&quot; Now you&#39;ve opened the door. Tomorrow, there will be two exceptions. -Raymond]</p>
<p>You already have 3 of them. CloseHandle, DuplicateHandle, ReOpenFile. Oh wait CloseHandle is blocked by somebody else&#39;s IO only on the single processor kernel.</p>
<p>Another way of looking at it is NT4 and 2000 claimed POSIX compliance. This method would be the implementation of isatty(), which must not block.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1074163">
				<div id="div-comment-1074163" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blogs.msdn.com/arcangelpip_4000_hotmail.com/ProfileUrlRedirect.ashx' rel='external nofollow' class='url'>arcangelpip@hotmail.com</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130822-00/?p=3433#comment-1074163">
			August 22, 2013 at 2:02 pm</a>		</div>

		<p>@Joshua:</p>
<p>None of those three are what you claim them to be though.</p>
<p>They would be meta meta operations.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1074173">
				<div id="div-comment-1074173" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">640k</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130822-00/?p=3433#comment-1074173">
			August 22, 2013 at 2:32 pm</a>		</div>

		<p>5 open handles per file ought to be enough for everyone.</p>
<p>@Crescens2k: Handles should be limited only by available memory. Or at least that is what the MSDN says.</p>
<p>Where exactly? NT dies with 10k+ open handles. 32-bit and 64-bit. ram doesn&#39;t matter.</p>
<div class="post">[<em>Not sure where you got that from. Mark Russinovich discovered that the actual limit is <a href="http://blogs.technet.com/b/markrussinovich/archive/2009/09/29/3283844.aspx">16 million handles per process</a>. -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1074193">
				<div id="div-comment-1074193" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Mark</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130822-00/?p=3433#comment-1074193">
			August 22, 2013 at 2:40 pm</a>		</div>

		<p>640k: [[Citation needed]]. As far as I know, the only limit is 16M.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1074203">
				<div id="div-comment-1074203" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blogs.msdn.com/arcangelpip_4000_hotmail.com/ProfileUrlRedirect.ashx' rel='external nofollow' class='url'>arcangelpip@hotmail.com</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130822-00/?p=3433#comment-1074203">
			August 22, 2013 at 2:56 pm</a>		</div>

		<p>@640k:</p>
<p><a rel="nofollow" target="_new" href="http://msdn.microsoft.com/en-us/library/ms724469(v=vs.85).aspx">msdn.microsoft.com/&#8230;/ms724469(v=vs.85).aspx</a></p>
<p>Yes, that does talk about the system limit, but please remember the original context (handles open to a file).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1074213">
				<div id="div-comment-1074213" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">ErikF</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130822-00/?p=3433#comment-1074213">
			August 22, 2013 at 3:39 pm</a>		</div>

		<p>@Joshua: NT4/2000 only claimed POSIX compliance within the POSIX subsystem; Win64/32 still behaves like Windows (case is still folded for filenames, for example.) The kernel can behave any way it likes, as long as it can satisfy the requirements of the subsystems.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-alegrigoriev even thread-even depth-1" id="comment-1074223">
				<div id="div-comment-1074223" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/alegr1' rel='external nofollow' class='url'>alegr1</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130822-00/?p=3433#comment-1074223">
			August 22, 2013 at 3:55 pm</a>		</div>

		<p>@640K:</p>
<p>I see 39000 handles in my x86 laptop.</p>
<p>Now, somebody tell me please, why does Outlook have to have 5K+ handles? and 1000+ GDI objects?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-alegrigoriev odd alt thread-odd thread-alt depth-1" id="comment-1074233">
				<div id="div-comment-1074233" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/alegr1' rel='external nofollow' class='url'>alegr1</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130822-00/?p=3433#comment-1074233">
			August 22, 2013 at 4:03 pm</a>		</div>

		<p>@Joshua:</p>
<p>&quot;You already have 3 of them. CloseHandle, DuplicateHandle, ReOpenFile. Oh wait CloseHandle is blocked by somebody else&#39;s IO only on the single processor kernel.&quot;</p>
<p>You don&#39;t know what you&#39;re talking about. Number of processors doesn&#39;t affect CloseHandle blocking or not.</p>
<p>DuplicateHandle doesn&#39;t have to block, because it doesn&#39;t affect the FILE_OBJECT state, or query its state. It doesn&#39;t issue any IRP.</p>
<p>ReOpenFile may or may not have to block, depending on how it&#39;s implemented.</p>
<p>CloseHandle HAS to block, only if it&#39;s the last handle, and there is synchronous I/O in progress (which can only happen on a different processor). When the last handle is closed, a IRP_MJ_CLEANUP request is issued for the given FILE_OBJECT. It have to be serialized with other I/O.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-alegrigoriev even thread-even depth-1" id="comment-1074243">
				<div id="div-comment-1074243" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/alegr1' rel='external nofollow' class='url'>alegr1</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130822-00/?p=3433#comment-1074243">
			August 22, 2013 at 4:05 pm</a>		</div>

		<p>&gt; (which can only happen on a different processor). </p>
<p>*different thread, obviously</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1074253">
				<div id="div-comment-1074253" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">.dan.g.</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130822-00/?p=3433#comment-1074253">
			August 22, 2013 at 6:00 pm</a>		</div>

		<p>Raymond, could we have a citation for the &quot;Do you feel lucky, punk?&quot;?</p>
<p>I know where it comes from but there may be some youngsters who do not&#8230;</p>
<div class="post">[<em>Fortunately, youngsters know <a href="http://www.bing.com/search?q=Do+you+feel+lucky%2C+punk">how to use a search engine</a>. -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-maurits even thread-even depth-1" id="comment-1074263">
				<div id="div-comment-1074263" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Maurits+%5BMSFT%5D' rel='external nofollow' class='url'>Maurits [MSFT]</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130822-00/?p=3433#comment-1074263">
			August 22, 2013 at 6:21 pm</a>		</div>

		<p><a rel="nofollow" target="_new" href="http://www.imdb.com/title/tt0066999/quotes?item=qt0536449">http://www.imdb.com/&#8230;/quotes</a></p>
<p>Dirty Harry</p>
<p>Harry Callahan: I know what you&#39;re thinking, punk. You&#39;re thinking &quot;did he fire six shots or only five?&quot; Now to tell you the truth I forgot myself in all this excitement. But being this is a .44 Magnum, the most powerful handgun in the world and will blow you head clean off, you&#39;ve gotta ask yourself a question: &quot;Do I feel lucky?&quot; Well, do ya, punk?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1074273">
				<div id="div-comment-1074273" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Silly</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130822-00/?p=3433#comment-1074273">
			August 22, 2013 at 7:22 pm</a>		</div>

		<p>&gt; I know where it comes from but there may be some *young punks* who do not&#8230;</p>
<p>ftfy</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1074363">
				<div id="div-comment-1074363" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">j b</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130822-00/?p=3433#comment-1074363">
			August 23, 2013 at 11:36 am</a>		</div>

		<p>@alegr1 (and others),</p>
<p>This discussion about number of hsandles and other system objects reminds me of one developer back in the 1990s (in the days when NetNews was the place to air frustrations and seek advice) complaining that Windows crashed after just a few thousand windows were opened.</p>
<p>He was developing a text processor, displaying every word in a separate window (with no border or any sort of decoration). That way he could justify the text by simply adjusting the window position for each word window, without doing any redrawing. To this developer, that was the most obvious and natural way of doing things, like, &#39;Wouldn&#39;t everybody do it that way? Why not?&#39;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1074393">
				<div id="div-comment-1074393" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Someone confused</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130822-00/?p=3433#comment-1074393">
			August 23, 2013 at 2:06 pm</a>		</div>

		<p>A few Questions:</p>
<p>1 What state is shared accross duplicated handles? I&#39;m especially concerned about file-pointer and IO-Aborts.</p>
<p>2 How would you open an asynchronous handle for writing to a file opened with exclusive access, given a synchronous handle (having no/read/all access)? Wouldn&#39;t ReOpenFile be blocked?</p>
<p>3 Is there a safe non-blocking way to do point 2?</p>
<div class="post">[<em>File pointer position is a property of the file object, not the handle. (Easily verified by experiment.) I don&#39;t know about cancellation. And yes, if you open the file in exclusive mode, then you have exclusive access. That&#39;s sort of the point. -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1074313">
				<div id="div-comment-1074313" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">waleri</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130822-00/?p=3433#comment-1074313">
			August 23, 2013 at 9:20 am</a>		</div>

		<p>[If you attempt to perform asynchronous I/O on a synchronous handle, it is performed synchronously. Synchronous-ness is a property of the handle (or, more accurately, file object), not the I/O request. -Raymond]</p>
<p>Thank you for the clarification. I asked, because it is not very clear who performs the conversion between synchronous and asynchronous. For example an API can simply internally allocate an OVERLAPPED and a *per thread* event object then wait on that event. In this case the thread still would perform synchronously yet other threads won&#39;t be blocked.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-alegrigoriev odd alt thread-odd thread-alt depth-1" id="comment-1074423">
				<div id="div-comment-1074423" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/alegr1' rel='external nofollow' class='url'>alegr1</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130822-00/?p=3433#comment-1074423">
			August 23, 2013 at 5:24 pm</a>		</div>

		<p>CancelIo(hFile) walks the list of IRPs (I/O Request Packets) for the current thread and calls IoCancelIrp for every IRP for this FILE_OBJECT. The IRP doesn&#39;t keep a corresponding HANDLE, so it&#39;s impossible to cancel on a separate handle basis.</p>
<p>CancelIoEx walks all threads, and all IRPs in their pending lists, then matches them against the pOverlapped. Same as CancelIo, it has no means to see which one of duplicated handles was used to initiate the IO.</p>
<p>Even if ReOpenFile blocks on a synchronous original handle (which requires verification), it won&#39;t block or will only block for short time, if all possible I/O on it complete promptly.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-alegrigoriev even thread-even depth-1" id="comment-1074433">
				<div id="div-comment-1074433" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/alegr1' rel='external nofollow' class='url'>alegr1</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130822-00/?p=3433#comment-1074433">
			August 23, 2013 at 5:35 pm</a>		</div>

		<p>One example of per-handle state is file region locks. A duplicated handle doesn&#39;t give access to the region locked by another handle to the same FILE_OBJECT. At least it&#39;s what LockFile documentation says for inherited handles, without clarification for duplicated handles.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1074513">
				<div id="div-comment-1074513" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Someone confused</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130822-00/?p=3433#comment-1074513">
			August 24, 2013 at 3:09 pm</a>		</div>

		<p>@Raymond: So your advice to reopen as (a)synchronous becomes impossible to follow, much of the time. Unless there&#39;s another way to get a handle with changed (a)synchronous mode option we don&#39;t know about yet. I acknowledge that generally evading the exclusive option is bad, but if that&#39;s the only way to get it done, maybe a Flag to ReOpenFile allowing all access and &nbsp;same or tighter sharing modes available as if the passed FILE_OBJECT didnt exist yet&#8230;</p>
<p>@alegr1 re CancelIoEx: I&#39;m sure its restricted to the calling process, otherwise it would be a glaring security hole.</p>
<p>@alegr1 re ReOpenFile: If it blocks on a synchronous handle at all, it could block &#39;forever&#39;: See &quot;Don&#39;t let more than one process try to read from stdin at the same time&quot; linked by Raymond as &quot;create a second handle&#8230;&quot;.</p>
<p>@alegr1 re file region locks: Looks like its keyed to process+FILE_OBJECT, not any kind of per handle data.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1074523">
				<div id="div-comment-1074523" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Deduplicator</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130822-00/?p=3433#comment-1074523">
			August 24, 2013 at 3:54 pm</a>		</div>

		<p>I&#39;m not sure: Is there any state/data/permissions in Windows ever associated with a specific handle instead of with the referenced Kernel object?</p>
<p>As far as i can see, the api reference writers are generally not sure if any state/privilige/data is associated with the underlying object (the file itself), the kernel object (refered to as FILE_OBJECT here) or the handle&#8230;</p>
<p>Its really frustrating when the one and only authoritative source is confused about the concepts involved.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-alegrigoriev odd alt thread-odd thread-alt depth-1" id="comment-1074563">
				<div id="div-comment-1074563" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/alegr1' rel='external nofollow' class='url'>alegr1</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130822-00/?p=3433#comment-1074563">
			August 25, 2013 at 6:52 pm</a>		</div>

		<p>@Deduplicator:</p>
<p>Access mask is associated with a handle. This is why DuplicateHandle allows to create a handle with different access mask.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1074723">
				<div id="div-comment-1074723" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Deduplicator</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130822-00/?p=3433#comment-1074723">
			August 26, 2013 at 5:49 pm</a>		</div>

		<p>Thanks, I should have recalled the access_mask.</p>
<p>Should also have remembered bInheritable aka Unix O_CLOEXEC.</p>
<p>Any more coming to mind?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1074763">
				<div id="div-comment-1074763" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Hm</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130822-00/?p=3433#comment-1074763">
			August 27, 2013 at 12:59 am</a>		</div>

		<p>&gt;&gt;</p>
<p>All I/O on a synchronous file handle is serialized; that&#39;s why it&#39;s called a synchronous file handle</p>
<p>&lt;&lt;</p>
<p>But the sane expectation is that the meaning of &quot;synchronous&quot; is bound to the thread making an I/O call over the handle: The thread makes a I/O call, the kernel creates the I/O request and waits for its completition on behalf of the thread making the call, to make the call synchronous.</p>
<p>The layer processing the I/O requests can serialize them when it makes sense, for example, by serving them in FIFO manner to read or write data from a byte stream that does not support a file position. If the byte stream supports file positions, the I/O layer is free to process the I/O requests in any order.</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>