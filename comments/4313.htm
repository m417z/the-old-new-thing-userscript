<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (10)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment byuser comment-author-maurits even thread-even depth-1" id="comment-1057423">
				<div id="div-comment-1057423" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Maurits+%5BMSFT%5D' rel='external nofollow' class='url'>Maurits [MSFT]</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130520-00/?p=4313#comment-1057423">
			May 20, 2013 at 4:47 pm</a>		</div>

		<p>Nitpick:</p>
<p>COleInitialize() : m_hr(OleInitialize(NULL)) { }</p>
<p>~COleInitialize() { if (SUCCEEDED(m_hr)) OleUninitialize(); }</p>
<p>It is just possible that the runtime will succeed creation of all the members but then decide that for some reason it can&#39;t create the containing object. In such a scenario OleInitialize(NULL) will be called (and may succeed), but OleUninitialize() will not be called. Fix would be to change the constructor as follows:</p>
<p>COleInitialize() { m_hr = OleInitialize(NULL); }</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1057433">
				<div id="div-comment-1057433" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Danny</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130520-00/?p=4313#comment-1057433">
			May 20, 2013 at 4:55 pm</a>		</div>

		<p>Another nitpick:</p>
<p>#include &lt;shlobj.h&gt;</p>
<p>#include &lt;atlbase.h&gt;</p>
<p>#include &lt;shlobj.h&gt;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1057443">
				<div id="div-comment-1057443" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Paul Parks</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130520-00/?p=4313#comment-1057443">
			May 20, 2013 at 6:23 pm</a>		</div>

		<p>@Maurits: What you say is technically true, but it&#39;s rather irrelevant to the example. In Raymond&#39;s code there are no intervening initializations that could throw, so the constructor will complete and the destructor will get called at scope exit. If your OLE initializer is esoteric enough to trigger the behavior you describe, then you&#39;re doing RAII wrong. Besides, Raymond&#39;s intializer is much more likely to do the right thing than putting the calls directly into wmain. So, no, there&#39;s nothing really wrong with using the initializer list there.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1057453">
				<div id="div-comment-1057453" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130520-00/?p=4313#comment-1057453">
			May 20, 2013 at 7:14 pm</a>		</div>

		<p>I&#39;d suspect the fact the process terminates almost immediately on failure means the error-cleanup is irrelevant.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-gregm even thread-even depth-1" id="comment-1057463">
				<div id="div-comment-1057463" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/GregM' rel='external nofollow' class='url'>GregM</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130520-00/?p=4313#comment-1057463">
			May 20, 2013 at 7:25 pm</a>		</div>

		<p>Maurits, in what situation do you think that it would be possible for the creation of that object, exactly as it is defined, to fail after the OleInitialize function has returned when it&#39;s in the member initialization list, but not when it&#39;s in the body of the constructor?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-aadsso-1live-com00034001a5381f07 odd alt thread-odd thread-alt depth-1" id="comment-1057473">
				<div id="div-comment-1057473" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Georg_Rottensteiner' rel='external nofollow' class='url'>Georg_Rottensteiner</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130520-00/?p=4313#comment-1057473">
			May 20, 2013 at 10:15 pm</a>		</div>

		<p>Could that be a setup to the really really complicated way to delay render a virtual file?</p>
<p>(such as needed when you write a compressor GUI and want to drag files outside which then will be uncompressed on the fly)</p>
<p>Is there a full example of something like that documented somewhere? Back when I needed that I had to combine a few samples from various web sites and it felt horribly complex.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1057563">
				<div id="div-comment-1057563" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Francis Gagne</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130520-00/?p=4313#comment-1057563">
			May 21, 2013 at 4:59 pm</a>		</div>

		<p>When exiting Microsoft Word (and maybe other Office applications), if you&#39;re copied some fancy OLE object from Word to the clipboard, Word will ask whether you want to keep that data on the clipboard or not. Reading this article, I figured Word is probably asking me whether it should call OleFlushClipboard or clear the clipboard. (I never worked directly with the clipboard API functions, so I didn&#39;t know about OleFlushClipboard).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-aaron-margosis odd alt thread-odd thread-alt depth-1" id="comment-1057573">
				<div id="div-comment-1057573" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Aaron+Margosis' rel='external nofollow' class='url'>Aaron Margosis</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130520-00/?p=4313#comment-1057573">
			May 21, 2013 at 6:03 pm</a>		</div>

		<p>I&#39;ll just say one thing: &nbsp;clip.exe</p>
<p>Check it out. &nbsp;One of the most useful programs in System32.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1058113">
				<div id="div-comment-1058113" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">640k</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130520-00/?p=4313#comment-1058113">
			May 26, 2013 at 12:23 pm</a>		</div>

		<p>You&#39;re doing it wrong. Please don&#39;t teach people these hacks.</p>
<p>No need to use bloated COM for this, Winapi can do this stuff just fine. With less, and more readable, code.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1058123">
				<div id="div-comment-1058123" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">640k</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130520-00/?p=4313#comment-1058123">
			May 26, 2013 at 2:10 pm</a>		</div>

		<p>OpenClipboard</p>
<p>SetClipboardData</p>
<p>CloseClipboard</p>
<p>&#8230;are more than enough.</p>
<div class="post">[<em>Sure, if you want to manually set a bunch of different clipboard formats. (CFSTR_SHELLIDLIST, CFSTR_SHELLIDLISTOFFSET, CFSTR_FILEDESCRIPTOR, CFSTR_FILECONTENTS, CFSTR_FILENAME, CF_HDROP, CFSTR_PREFERREDDROPEFFECT, plus the drag image formats, plus other stuff I&#39;m probably forgetting. Why not just let the shell do all the heavy lifting?) -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>