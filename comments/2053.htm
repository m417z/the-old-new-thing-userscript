<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (21)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-1100253">
				<div id="div-comment-1100253" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Henke37</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140117-00/?p=2053#comment-1100253">
			January 17, 2014 at 7:06 am</a>		</div>

		<p>The fun part isn&#39;t pointing out the error. It is understanding why it worked despite the error.</p>
<p>The answer is that the DialogBox function runs its own message pump that doesn&#39;t do the incorrect filtering.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1100273">
				<div id="div-comment-1100273" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Nicholas</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140117-00/?p=2053#comment-1100273">
			January 17, 2014 at 7:24 am</a>		</div>

		<p>OK, I seriously missing something here in this article. &nbsp;I get that applying a filter is dangerous. &nbsp;What I don&#39;t get is where it is happening? &nbsp;I see this everywhere:</p>
<p>GetMessage(&amp;msg, hwnd, 0, 0)</p>
<p>And according to MSDN the zeros mean that there is no filtering and all messages will be retrieved.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1100283">
				<div id="div-comment-1100283" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">laonianren</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140117-00/?p=2053#comment-1100283">
			January 17, 2014 at 7:29 am</a>		</div>

		<p>@Nicholas: The hwnd parameter is a filter.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1100293">
				<div id="div-comment-1100293" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Anon</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140117-00/?p=2053#comment-1100293">
			January 17, 2014 at 7:39 am</a>		</div>

		<p>This is why you never provide a solution until someone explains how and why they created the problem!</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1100303">
				<div id="div-comment-1100303" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140117-00/?p=2053#comment-1100303">
			January 17, 2014 at 7:45 am</a>		</div>

		<p>Is there a good reason to use the hwnd argument anymore or is it a holdover from Win16?</p>
<div class="post">[<em>I can&#39;t think of a good reason even in Win16. It probably exists merely to align with with PeekMessage. -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1100333">
				<div id="div-comment-1100333" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Jason</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140117-00/?p=2053#comment-1100333">
			January 17, 2014 at 8:39 am</a>		</div>

		<p>@Nicholas: I think those are different types of filtering. &nbsp;hWnd filters on the window handle, wMsgFilterMin/Max filter on the message value.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1100343">
				<div id="div-comment-1100343" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">pmbAustin</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140117-00/?p=2053#comment-1100343">
			January 17, 2014 at 8:47 am</a>		</div>

		<p>It seems to me this would be a good target for code analysis&#8230; flagging that as a warning if a parameter is ever specified there. &nbsp;If it&#39;s a constant source of misunderstanding, and thus bugs, and there&#39;s no obvious &quot;good&quot; reason to ever supply that parameter, then it would seem flagging it would be a Very Good Thing to do.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1100383">
				<div id="div-comment-1100383" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">smf</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140117-00/?p=2053#comment-1100383">
			January 17, 2014 at 11:03 am</a>		</div>

		<p>You&#39;ll get this problem all the time 99% of software developers belong to a cargo cult. It&#39;s only possible because software development has been made &quot;easier&quot;, if it was harder they wouldn&#39;t have found their way out of writing hello world.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1100403">
				<div id="div-comment-1100403" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Anonymous Coward</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140117-00/?p=2053#comment-1100403">
			January 17, 2014 at 12:07 pm</a>		</div>

		<p>1) I assume the filter parameters for GetMessage have to remain in the binary interface for compatibility reasons, but there&#39;s no reason why the header files couldn&#39;t include a macro that disables their use.</p>
<p>2) I&#39;ve seen countless message loops, and all the ones that weren&#39;t flawed were essentially the same. Why then, isn&#39;t this standard message loop part of the Win32 API? I realise that most GUI toolkits provide it, but more people than you&#39;d think use raw C++ and screw it up.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1100423">
				<div id="div-comment-1100423" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140117-00/?p=2053#comment-1100423">
			January 17, 2014 at 1:24 pm</a>		</div>

		<p>If I recall correctly (it&#39;s been a looong time), my documentation stated GetMessage was available on Windows 2.x but PeekMessage required 3.0.</p>
<p>I&#39;d guess the filter is to remove a message you know you posted there by some action.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1100443">
				<div id="div-comment-1100443" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Nicholas</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140117-00/?p=2053#comment-1100443">
			January 17, 2014 at 3:28 pm</a>		</div>

		<p>Thanks laonianren and Jason. &nbsp;Stupid of me since the very first line of the article is:</p>
<p>&quot;The second parameter to the GetÂ­Message&#8230;&quot;</p>
<p>Apparently I had severe memory loss by the time I got to the end of the article. &nbsp;My bad.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1100473">
				<div id="div-comment-1100473" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Matt</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140117-00/?p=2053#comment-1100473">
			January 17, 2014 at 6:20 pm</a>		</div>

		<p>What happens if you (i.e. someone at Microsoft) edits GetMessage to ignore the filter parameter, and then run all of your app-compat regression tests. That would show you (A) if there are any legitimate uses of this functionality and (B) give you a cheap fix for this if not. You can maintain the binary compatibility by making hwndFilter a reserved (and ignored) parameter.</p>
<div class="post">[<em>I&#39;m sure there are apps that rely on filtering. That doesn&#39;t mean that their use is legitimate. <a href="http://blogs.msdn.com/b/oldnewthing/archive/2005/01/18/355177.aspx">A lot of compatibility involves getting existing apps to work in spite of their bugs</a>. -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1100373">
				<div id="div-comment-1100373" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Antonio &#039;Grijan&#039;</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140117-00/?p=2053#comment-1100373">
			January 17, 2014 at 10:31 am</a>		</div>

		<p>TRWTF is adding your own message pump to a test window. After reading the series of articles on the dialog manager, I wouldn&#39;t dare to have more than one message pump for each thread (apart from the dialog manager itself, that is). If you ever need to make something fancy with some window&#39;s messages, you can always call a filter function in the main message loop, just before the call to DispatchMessage().</p>
<p>A filtered GetMessage() *could* be useful to remove messages left by PeekMessage() when hWnd != NULL and wRemoveMsg == PM_NOREMOVE (if you ever need to do that, which is dubious), but that&#39;s a corner case.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-aadsso-1live-com00034001a5381f07 odd alt thread-odd thread-alt depth-1" id="comment-1100483">
				<div id="div-comment-1100483" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Georg_Rottensteiner' rel='external nofollow' class='url'>Georg_Rottensteiner</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140117-00/?p=2053#comment-1100483">
			January 17, 2014 at 11:09 pm</a>		</div>

		<p>The next really common problem is returning TRUE for every handled message in your custom WindowProc without calling DefWindowProc and/or putting return DefWindowProc only in the default clause.</p>
<p>Te cause for this might be the default Win32 project template. At least in VS 2008 it does exactly that. While it works for that specific sample it is a really bad start if the code gets expanded. Sooner or later a message is handled, not passed on to DefWindowProc and everything breaks apart.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1100493">
				<div id="div-comment-1100493" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Kyle S.</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140117-00/?p=2053#comment-1100493">
			January 17, 2014 at 11:53 pm</a>		</div>

		<p>&gt; [I can&#39;t think of a good reason even in Win16. It probably exists merely to align with with PeekMessage. -Raymond]</p>
<p>On the Mac, NSWindow has -nextEventMatchingMask:, which behaves identically to GetMessage. So apparently at some point in the time of Win16 and NEXTSTEP this was considered a good idea.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1100503">
				<div id="div-comment-1100503" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Neil</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140117-00/?p=2053#comment-1100503">
			January 18, 2014 at 2:36 am</a>		</div>

		<p>Doesn&#39;t the fact that a dialog has its own message loop cause a problem if you have more than one top-level window? Unless you create them in different threads, then as soon as you open a dialog the accelerators in the other window will stop working.</p>
<div class="post">[<em>You can read <a href="http://blogs.msdn.com/b/oldnewthing/archive/tags/modality/">the modality series</a> for extended discussion on this topic. -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1100513">
				<div id="div-comment-1100513" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Azarien</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140117-00/?p=2053#comment-1100513">
			January 18, 2014 at 3:25 am</a>		</div>

		<p>@Georg_Rottensteiner: what would break apart? I don&#39;t see the point in passing most of handled messages to DefWindowProc.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-aadsso-1live-com00034001a5381f07 odd alt thread-odd thread-alt depth-1" id="comment-1100543">
				<div id="div-comment-1100543" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Georg_Rottensteiner' rel='external nofollow' class='url'>Georg_Rottensteiner</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140117-00/?p=2053#comment-1100543">
			January 18, 2014 at 11:00 pm</a>		</div>

		<p>@Azarien: The sample code from VS does return 0 if the message is handled without calling DefWindowProc. Try that with WM_CREATE for example, or WM_NC_CREATE. Basically every message should be passed on unless the explicitely say so.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1100603">
				<div id="div-comment-1100603" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Master</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140117-00/?p=2053#comment-1100603">
			January 19, 2014 at 11:23 am</a>		</div>

		<p>Creating hidden windows for cross-thread communication: fail.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-alegrigoriev odd alt thread-odd thread-alt depth-1" id="comment-1100633">
				<div id="div-comment-1100633" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/alegr1' rel='external nofollow' class='url'>alegr1</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140117-00/?p=2053#comment-1100633">
			January 19, 2014 at 7:47 pm</a>		</div>

		<p>@Neil:</p>
<p>Having more than one top-level window opens a big can of worms. Having any top-level window enabled while showing a modal dialog (or running any modal loop without mouse capture bail-out) will give you headaches.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-fredericmagnyf even thread-even depth-1" id="comment-1100653">
				<div id="div-comment-1100653" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Medinoc' rel='external nofollow' class='url'>Medinoc</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140117-00/?p=2053#comment-1100653">
			January 20, 2014 at 7:10 am</a>		</div>

		<p>The combo box fails becauses it uses a non-child window, doesn&#39;t it? (and IIRC, it&#39;s also unowned, and I&#39;m not sure it should be)</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>