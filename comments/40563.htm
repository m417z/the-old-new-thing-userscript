<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (38)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-145943">
				<div id="div-comment-145943" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Alex Black</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040218-00/?p=40563#comment-145943">
			February 18, 2004 at 9:44 am</a>		</div>

		<p>Hi Raymond, I ran into issues related to this just yesterday! (great BLOG btw).</p>
<p>1) What is the width of a RECT?<br />
<br />width = rect.right &#8211; rect.left +1?</p>
<p>2) Are RECTs ever interpreted differently? consider FillRect vs. InvalidateRect or GetClientRect</p>
<p>Basically, I have a VB picturebox, that is 640&#215;480 pixels.  I call GetClientRect and get (0,0,640,480), then I call MyGetRectWidth(rect) and get 639!</p>
<p>am I misunderstanding something here? :)</p>
<p>thx!</p>
<p>&#8211; Alex</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-145953">
				<div id="div-comment-145953" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://weblogs.asp.net/oldnewthing/' rel='external nofollow' class='url'>Raymond Chen</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040218-00/?p=40563#comment-145953">
			February 18, 2004 at 9:55 am</a>		</div>

		<p>The width of a rectangle is &quot;rect.right-rect.left&quot; and you should assume that&#8217;s how all Windows functions treat rectangles.  Any exceptions are (or should be) explicitly called out in the function documentation. I don&#8217;t know of any exceptions offhand.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-145963">
				<div id="div-comment-145963" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.camazotz.com' rel='external nofollow' class='url'>Mark Smith</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040218-00/?p=40563#comment-145963">
			February 18, 2004 at 10:33 am</a>		</div>

		<p>It&#8217;s 20 years old, but the Quickdraw section of Inside Macintosh Volume I still has the clearest explanation of why coordinates-between-the-pixels is a Good Thing.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-145983">
				<div id="div-comment-145983" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Dan Maas</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040218-00/?p=40563#comment-145983">
			February 18, 2004 at 10:48 am</a>		</div>

		<p>I think the preferred convention is that the center of pixel N,M is at (N+0.5,M+0.5), and if you must use a box filter, then the footprint of the filter is N &lt;= x &lt; N+1 and M &lt;= y &lt; M+1.</p>
<p>The reason we do this is the same reason arrays start at zero rather than one in C. It seems awkward at first, but it makes the math much cleaner.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-146003">
				<div id="div-comment-146003" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://mikedimmick.blogspot.com' rel='external nofollow' class='url'>Mike Dimmick</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040218-00/?p=40563#comment-146003">
			February 18, 2004 at 12:15 pm</a>		</div>

		<p>You might want to tell the Windows CE guys: FillRect draws one pixel more to the right and bottom on CE than it does on the desktop.</p>
<p>Of course, there&#8217;s the backwards-compatibility issue: if it gets changed now, it breaks every program already written for CE. Not nearly as many as on the desktop, true, but a significant enough number.</p>
<p>I wonder if this wart made it into .NET CF?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-146033">
				<div id="div-comment-146033" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">CW user</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040218-00/?p=40563#comment-146033">
			February 18, 2004 at 2:05 pm</a>		</div>

		<p>And then there are MetaFiles. Raymond can you tell us a story<br />
<br />what&#8217;s happening with rectangles when we use them with<br />
<br />(Enhanced)MetaFiles?</p>
<p>Please! Please!</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-146043">
				<div id="div-comment-146043" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">foo</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040218-00/?p=40563#comment-146043">
			February 18, 2004 at 2:19 pm</a>		</div>

		<p>Java uses the same scheme for substrings: myString.substring(start, end) where end is excluded. The length of the substring is simply (end &#8211; start). It&#8217;s simple. I love it.</p>
<p>The problem is, Java substrings are so convenient that nearly every time I do string manipulation in C#, I curse the .NET-folks for using that old-fashioned (start, length) notation.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-146063">
				<div id="div-comment-146063" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.popcornfilms.com' rel='external nofollow' class='url'>Simon Cooke [exMSFT]</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040218-00/?p=40563#comment-146063">
			February 18, 2004 at 2:42 pm</a>		</div>

		<p>Dan Maas:</p>
<p>X+0.5, Y+0.5 being the center of the pixel is only valid if you&#8217;re using floating point graphics libraries such as GDI+, DirectX or OpenGL.</p>
<p>GDI and regular Win32 are integer, and so that definition doesn&#8217;t really hold.</p>
<p>(Of course, GDI is fixed-point internally, but that representation doesn&#8217;t generally make it out of the API).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-146083">
				<div id="div-comment-146083" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://weblogs.asp.net/oldnewthing' rel='external nofollow' class='url'>Raymond Chen</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040218-00/?p=40563#comment-146083">
			February 18, 2004 at 3:08 pm</a>		</div>

		<p>Sorry, CW, I don&#8217;t know anything about metafiles. And sorry, Mike, I don&#8217;t have any contacts in Windows CE (so I can&#8217;t even verify whether the problem indeed exists).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-146093">
				<div id="div-comment-146093" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://mo.mckinlay.me.uk' rel='external nofollow' class='url'>Mo</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040218-00/?p=40563#comment-146093">
			February 18, 2004 at 4:13 pm</a>		</div>

		<p>Raymond, I have a question which you might be able to answer.</p>
<p>All of us good boys and girls who did our homework have known for years that NT&#8217;s POSIX subsystem (and by association Interix/SFU) support fork() [for those that don&#8217;t know: create a duplicate of a process, usually done in such a way that no/very few pages are actually copied until they&#8217;re written to &#8211; called Copy-on-Write, or COW].</p>
<p>The Win32 API (as far as I can tell by RTFMing, Googling, newsgrouping, and generally given up trying some time ago) doesn&#8217;t contain any equivalent &#8211; not even a closely guarded one. If I&#8217;m wrong, stop me now :)</p>
<p>Assuming I&#8217;m on-base up until now, the question is this: POSIX/Interix/SFU all need to get some kind of help from the kernel at some point along the way in order to actually perform the fork. After all, they&#8217;re subsystems (or a subsystem, depending on how you look at it), not kernel-mode drivers, so they don&#8217;t have much more access to the MM than I do in my Win32 process. By what mechanism do they get this &quot;help&quot; &#8212; and how POSIX-specific is the help that they get? Specifically, would it be at all possible to utilize this support code &#8211; assuming it exists &#8211; from within the Win32 subsystem in order to achieve the same thing?</p>
<p>[Unsuprisingly enough, the fact that POSIX apps run in a different subsystem means they end up being really quite dull &#8212; no &quot;best of both worlds&quot; for developers there]</p>
<p>Anyway, if you know the answer (or can point to some MSDN material that explains), I&#8217;d be very much appreciative. And apologies for a great big comment which bears practically no relation to rectangles :)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-146103">
				<div id="div-comment-146103" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://weblogs.asp.net/oldnewthing/' rel='external nofollow' class='url'>Raymond Chen</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040218-00/?p=40563#comment-146103">
			February 18, 2004 at 4:16 pm</a>		</div>

		<p>Sorry, Mo, I have no idea.  Gosh, people seem to be asking a lot of questions about things I know nothing about&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-146113">
				<div id="div-comment-146113" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Dan Maas</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040218-00/?p=40563#comment-146113">
			February 18, 2004 at 5:03 pm</a>		</div>

		<p>Another off-topic question but maybe you can answer this&#8230; Is there an official policy on whether C++ exceptions should be able to propagate through Win32 API callbacks? i.e. if I throw an exception inside of a WndProc is it supposed to come out of the message loop or are the results &quot;undefined&quot;? I know this doesn&#8217;t work with GCC on Windows but I am wondering what VC++ does. I assume you have to catch the exception before it propagates back out into Win32 code?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-146123">
				<div id="div-comment-146123" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">sd</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040218-00/?p=40563#comment-146123">
			February 18, 2004 at 5:06 pm</a>		</div>

		<p>Great article!  I found this site through the aformentioned kuro5hin comment.  I really dig the inside look at the Windows platform.  Keep &#8217;em comming!</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-146133">
				<div id="div-comment-146133" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://mo.mckinlay.me.uk' rel='external nofollow' class='url'>Mo</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040218-00/?p=40563#comment-146133">
			February 18, 2004 at 5:12 pm</a>		</div>

		<p>Thanks anyway, Raymond. It was worth a try :)</p>
<p>I guess it&#8217;s back to the drawing board with that one..</p>
<p>(I promise I won&#8217;t use any undocumented APIs, though&#8230;)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-146143">
				<div id="div-comment-146143" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://weblogs.asp.net/oldnewthing/' rel='external nofollow' class='url'>Raymond Chen</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040218-00/?p=40563#comment-146143">
			February 18, 2004 at 5:15 pm</a>		</div>

		<p>Dan: I can&#8217;t think of an official policy off the top of my head against throwing C++ exceptions across Win32 callbacks, but my gut tells me nothing good can come of it&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-146163">
				<div id="div-comment-146163" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.virtualdub.org/' rel='external nofollow' class='url'>Phaeron</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040218-00/?p=40563#comment-146163">
			February 18, 2004 at 7:43 pm</a>		</div>

		<p>Another disadvantage of inclusive rects is that you can&#8217;t represent empty rects with them.</p>
<p>Simon Cooke:<br />
<br />Even with integer coordinates you still need pixel center rules for rasterization of certain primitives, such as solid ellipses.  It is also possible to set scaling modes to gain direct access to 28.4 coordinates under NT GDI.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-146173">
				<div id="div-comment-146173" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Pavel Lebedinsky</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040218-00/?p=40563#comment-146173">
			February 18, 2004 at 8:06 pm</a>		</div>

		<p>Re: fork() and SFU</p>
<p><a target="_new" href="http://weblogs.asp.net/jdzions" rel="nofollow">http://weblogs.asp.net/jdzions</a> would be a better place to ask this.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-146183">
				<div id="div-comment-146183" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">B.Y.</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040218-00/?p=40563#comment-146183">
			February 18, 2004 at 10:36 pm</a>		</div>

		<p>I agree endpoint-exclusive is a much better arrangement than endpoint-inclusive, but, I always wondered why the RECT structure have right/bottom instead of width/height, because rectangle&#8217;s size and location are really two separate properties. And if you have width/height, you only need to touch left/top to move the RECT around.</p>
<p>And remotely related to this &#8211; I don&#8217;t know if you know this Raymond &#8211; in multiple monitor support, why is it designed such that the sides of monitor RECTs only need to touch each other ? This makes things like centering a window on screen a major hassle, sometimes not even possible, it&#8217;s theoretically possible to have 4 video cards positioned along the sides of the virtual screen, but leave a hole in the center.</p>
<p>Why wasn&#8217;t it designed such that all video cards must form one big rectangle and cover all of it, and have the same bit depth ? Sure that reduces the flexibility, but it&#8217;s a lot easier to program.<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-146193">
				<div id="div-comment-146193" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://weblogs.asp.net/oldnewthing/' rel='external nofollow' class='url'>Raymond Chen</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040218-00/?p=40563#comment-146193">
			February 18, 2004 at 11:33 pm</a>		</div>

		<p>right/bottom vs. width/height &#8211; it&#8217;s a matter of style I guess. I happen to like right/bottom but then again I&#8217;m biased.</p>
<p>Multiple monitors: One could turn the question around.  Why arbitrarily restrict all monitors to be the same resolution and be at the same color depth?  In the early days of multiple monitors, the two video cards had very different capabilities. You had the onboard video that came with your motherboard (usually pretty lame) and a video card that you bought separately (pretty powerful).  Forcing all video cards to be at the same resolution and color depth would mean that you would be running your expensive video card at some awful resolution like 800&#215;600 because that&#8217;s all the motherboard video could do. And then you&#8217;d be complaining, &quot;I paid $200 for this video card. Why are you forcing me to run this pathetic resolution! Microsoft must be in a conspiracy with the video card manufacturers!&quot;</p>
<p>And you shouldn&#8217;t be trying to center on the virtual screen anyway. Pick a monitor and center on that monitor. If you try to center on the virtual screen, you will often end up with a window that is exactly cut in half by the two monitors, which is pretty useless.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-146203">
				<div id="div-comment-146203" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Christian</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040218-00/?p=40563#comment-146203">
			February 19, 2004 at 1:17 am</a>		</div>

		<p>Look here:<br />
<br /><a target="_new" href="http://www.cygwin.com/ml/cygwin/2002-02/msg00068.html" rel="nofollow">http://www.cygwin.com/ml/cygwin/2002-02/msg00068.html</a></p>
<p>I own that book (Windows NT/2000 Native API Reference) and indeed it contains an example code that does a fork with copy-on-write</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-146223">
				<div id="div-comment-146223" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Moi</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040218-00/?p=40563#comment-146223">
			February 19, 2004 at 1:56 am</a>		</div>

		<p>Nothing to do with this article, Ramon, just an oddity I came across recently. In the MFC&#8217;s AFXRES.H there are command ids for things like copy, paste, etc. and in WINUSER.H there are ids for messages which perform those types of actions (WM_COPY, WM_PASTE, etc.). Why are they not in the same order?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-146233">
				<div id="div-comment-146233" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://mikedimmick.blogspot.com' rel='external nofollow' class='url'>Mike Dimmick</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040218-00/?p=40563#comment-146233">
			February 19, 2004 at 1:59 am</a>		</div>

		<p>On C++ exceptions in callbacks: if compiled with MSVC, a C++ exception is simply a Win32 SEH exception with code 0xE06D7363 (or 0xE0 &#8216;m&#8221;s&#8221;c&#8217;). IIRC, a pointer to the thrown object gets passed around in one of the SEH exception&#8217;s parameters.</p>
<p>So the answer to Dan&#8217;s question is whether an SEH exception can be successfully propogated through the Win32 API at this point. I think it probably can. MFC sets up a try/catch block in AfxCallWndProc (wincore.cpp) to stop exceptions propogating out of your message handlers, although this may be for debugging purposes. ATL doesn&#8217;t bother.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-146243">
				<div id="div-comment-146243" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Moi</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040218-00/?p=40563#comment-146243">
			February 19, 2004 at 2:01 am</a>		</div>

		<p>Ramon? Sorry, Raymond, I guess my typing fingers are slacking. I shall punich them appropriately.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-146253">
				<div id="div-comment-146253" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">hans</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040218-00/?p=40563#comment-146253">
			February 19, 2004 at 2:12 am</a>		</div>

		<p>There is a difference between FillRectangle() and DrawRectangle(). FillRectangle() is endpoint-exclusive but DrawRectangle() is endpoint-inclusive. </p>
<p>Some sample-code:</p>
<p>        private void button1_Click(object sender, System.EventArgs e)<br />
<br />        {<br />
<br />            Graphics g=System.Drawing.Graphics.FromHwnd(this.Handle);</p>
<p>            g.FillRectangle(Brushes.Beige,30,30, 100,100);<br />
<br />            g.DrawRectangle(Pens.Black,30,30,100,60);</p>
<p>            Rectangle r1=new Rectangle(30,150,100,100);<br />
<br />            Rectangle r2=new Rectangle(30,150,100,60);</p>
<p>            g.FillRectangle(Brushes.Beige,r1);<br />
<br />            g.DrawRectangle(Pens.Black,r2);</p>
<p>        }</p>
<p>Both rectangles have the same width but the drawn rectangle is one pixel wider than the filled one&#8230; Why is this?<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-146273">
				<div id="div-comment-146273" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">hans</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040218-00/?p=40563#comment-146273">
			February 19, 2004 at 5:51 am</a>		</div>

		<p>If you use FillEllipse() and DrawEllipse() there seems to be the same inconsistency. Maybe this applies to all Drawing-Functions.<br />
<br />Its especially apparent when using small values for width/height.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-146283">
				<div id="div-comment-146283" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://weblogs.asp.net/oldnewthing' rel='external nofollow' class='url'>Raymond Chen</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040218-00/?p=40563#comment-146283">
			February 19, 2004 at 7:47 am</a>		</div>

		<p>Mike: Now I remember &#8211; throwing across a callback will often mess up the activation context stack. These sorts of bugs are incredibly hard to track down. You end up dying with STATUS_SXS_EARLY_DEACTIVATION or STATUS_SXS_INVALID_DEACTIVATION for no apparent reason.</p>
<p>Moi: You&#8217;ll have to ask an MFC person.</p>
<p>hans: Um, that&#8217;s some .NET thing isn&#8217;t it. You should ask a .NET person.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-146293">
				<div id="div-comment-146293" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.codeproject.com/script/articles/list_articles.asp?userid=152' rel='external nofollow' class='url'>Mike Dunn</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040218-00/?p=40563#comment-146293">
			February 19, 2004 at 7:51 am</a>		</div>

		<p>Raymond, your mention of multiple monitors reminds me of something (and I think you can answer this one ;) )<br />
<br />A while ago you gave a great explantion of WM_NCCALCSIZE. Could you do the same for the MINMAXINFO struct? My specific problem is figuring out what to put in ptMaxSize. The docs only say &quot;this refers to the primary monitor&quot; which isn&#8217;t much help.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-146303">
				<div id="div-comment-146303" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Seth McCarus</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040218-00/?p=40563#comment-146303">
			February 19, 2004 at 8:24 am</a>		</div>

		<p>And Raymond, since we sort-of got onto the topic of exception handling, can we expect your dissertation on it soon?  That&#8217;s one I&#8217;m looking forward to!<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-146363">
				<div id="div-comment-146363" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Andreas H&#228;ber</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040218-00/?p=40563#comment-146363">
			February 19, 2004 at 10:58 am</a>		</div>

		<p>Raymond: Seems like the graphic code above (Hans&#8217; comment) is GDI+, so it&#8217;s not only a .NET thing :)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-146373">
				<div id="div-comment-146373" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://weblogs.asp.net/oldnewthing' rel='external nofollow' class='url'>Raymond Chen</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040218-00/?p=40563#comment-146373">
			February 19, 2004 at 11:07 am</a>		</div>

		<p>Okay, well GDI+ is less than 5 years old so I&#8217;m going to declare it &quot;not old enough&quot;. :-)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-146403">
				<div id="div-comment-146403" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blogs.msdn.com/ericlippert' rel='external nofollow' class='url'>Eric Lippert</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040218-00/?p=40563#comment-146403">
			February 19, 2004 at 11:49 am</a>		</div>

		<p>Seth, if you want an excellent article on how exception handling works, try this one:</p>
<p><a target="_new" href="http://weblogs.asp.net/cbrumme/archive/2003/10/01/51524.aspx" rel="nofollow">http://weblogs.asp.net/cbrumme/archive/2003/10/01/51524.aspx</a><br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-146443">
				<div id="div-comment-146443" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Not actually a .NET admirer</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040218-00/?p=40563#comment-146443">
			February 19, 2004 at 2:37 pm</a>		</div>

		<blockquote><p>
  declare it &quot;not old enough&quot;. :-) </p>
<p>Yes,</p>
<p>It says &quot;The Old New Thing&quot; and &quot;not actually a .NET blog&quot;.</p>
<p>I don&#8217;t know how to ask, but what I am trying here is something<br />
  <br />like, in a way and sort of, heh, Raymond did you look at .NET stuff?<br />
  <br />Or better, do you participate on it? Do you like it? Is there on<br />
  <br />this blog or wherever some insight from you about .NET and<br />
  <br />related technologies? Looks to me as if you are the only guy from<br />
  <br />MS discussing good old Win32 stuff, while everybody else is<br />
  <br />doing .NET.</p>
<p>PS. That&#8217;s why I don&#8217;t read any other programming blogs but yours.<br />
  <br />If you go .NET, then I don&#8217;t know what I&#8217;ll do. I&#8217;ll be lost!<br />
  
</p></blockquote>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-146453">
				<div id="div-comment-146453" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://weblogs.asp.net/oldnewthing/' rel='external nofollow' class='url'>Raymond Chen</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040218-00/?p=40563#comment-146453">
			February 19, 2004 at 2:47 pm</a>		</div>

		<p>Hey stop introducing more .NET content into this &quot;not .NET&quot; blog!  I use it but I don&#8217;t write about it.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-147233">
				<div id="div-comment-147233" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ben Hutchings</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040218-00/?p=40563#comment-147233">
			February 23, 2004 at 1:08 pm</a>		</div>

		<blockquote><p>
  Why wasn&#8217;t it designed such that all video cards must form one big rectangle and cover all of it, and have the same bit depth ?</p>
<p>If your monitor screens aren&#8217;t at quite the same height, you won&#8217;t want the mouse cursor to jump up or down as it crosses between them. Well, I don&#8217;t anyway.
</p></blockquote>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-197553">
				<div id="div-comment-197553" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://weblogs.asp.net/oldnewthing/' rel='external nofollow' class='url'>Raymond Chen</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040218-00/?p=40563#comment-197553">
			July 23, 2004 at 12:02 am</a>		</div>

		<p>Commenting closes after two weeks. </p>
<p><a target="_new" href="http://weblogs.asp.net/oldnewthing/archive/2004/02/21/77681.aspx" rel="nofollow">http://weblogs.asp.net/oldnewthing/archive/2004/02/21/77681.aspx</a></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-215153">
				<div id="div-comment-215153" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://weblogs.asp.net/oldnewthing/archive/2004/10/06/238630.aspx' rel='external nofollow' class='url'>The Old New Thing</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040218-00/?p=40563#comment-215153">
			October 6, 2004 at 9:59 am</a>		</div>

		<p>Preparing to combine multiple context menu extensions into one.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-218543">
				<div id="div-comment-218543" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://weblogs.asp.net/oldnewthing/archive/2004/10/18/243973.aspx' rel='external nofollow' class='url'>The Old New Thing</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040218-00/?p=40563#comment-218543">
			October 18, 2004 at 11:43 am</a>		</div>

		
		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-396463">
				<div id="div-comment-396463" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blogs.msdn.com/oldnewthing/archive/2006/06/29/650752.aspx' rel='external nofollow' class='url'>The Old New Thing</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040218-00/?p=40563#comment-396463">
			June 29, 2006 at 10:00 am</a>		</div>

		<p>Using the TTN_GETDISPINFO notification.</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>