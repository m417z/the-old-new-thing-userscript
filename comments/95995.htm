<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (4)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment byuser comment-author-koldude even thread-even depth-1 parent" id="comment-1293236">
				<div id="div-comment-1293236" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/kantos' rel='external nofollow' class='url'>kantos</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170419-00/?p=95995#comment-1293236">
			April 20, 2017 at 5:02 am</a>		</div>

		<p>My understanding was always that reserving memory was intended to be used by custom <code>malloc</code> implementations as a way of keeping a contiguous heap; or for (potentially) large dynamic allocations where continuity in the address space was needed. Basically a way of telling the loader to not load anything there because you&#8217;re going to potentially need it as one big block later. In fact based on MSDN and this blog I&#8217;ve always assumed that the memory manager could care less about reservations for the most part until you committed.</p>

		
				</div>
		<ol class="children">
		<li class="comment odd alt depth-2" id="comment-1294485">
				<div id="div-comment-1294485" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">JDG</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170419-00/?p=95995#comment-1294485">
			April 28, 2017 at 11:56 am</a>		</div>

		<p>*could not</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment even thread-odd thread-alt depth-1 parent" id="comment-1293436">
				<div id="div-comment-1293436" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Someone</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170419-00/?p=95995#comment-1293436">
			April 21, 2017 at 2:09 am</a>		</div>

		<p>&#8221; was intended to be used by custom malloc &#8221; ?</p>
<p>Why only *custom* mallocs? The use of Memory Mapped Files as also loading&amp;unloading of additional DLLs after initial startup can fragment the address space at any time. So every implementation of heap memory should reserve &#8220;some&#8221; address space (at least on 32bit systems). But its tricky to leave enough space for other heaps and mapped files&#8230;.</p>

		
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-koldude odd alt depth-2" id="comment-1293455">
				<div id="div-comment-1293455" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/kantos' rel='external nofollow' class='url'>kantos</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170419-00/?p=95995#comment-1293455">
			April 21, 2017 at 5:40 am</a>		</div>

		<p>I assumed <code>HeapAlloc</code> already does this, as far as I know all the <code>*Alloc</code> allocators on windows are implemented in terms of <code>VirtualAlloc</code> at the lowest level as it is the WIN32 closest equivalent of <code>mmap</code>.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>