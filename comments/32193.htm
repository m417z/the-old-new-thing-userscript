<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (48)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-348723">
				<div id="div-comment-348723" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blogs.ugidotnet.org/lbarbieri/archive/2006/02/22/35377.aspx' rel='external nofollow' class='url'>Lorenzo Barbieri @ UGIblogs!</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060222-11/?p=32193#comment-348723">
			February 22, 2006 at 10:04 am</a>		</div>

		
		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-348733">
				<div id="div-comment-348733" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Moi</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060222-11/?p=32193#comment-348733">
			February 22, 2006 at 10:05 am</a>		</div>

		<p>&quot;Calling the update function&quot; Presumably you mean calling SystemParametersInfo with the fWinIni set to an appropriate value?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-348753">
				<div id="div-comment-348753" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">vince</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060222-11/?p=32193#comment-348753">
			February 22, 2006 at 10:10 am</a>		</div>

		<p>Was there ever any publicly released document on why MS chose to move to using a registry anyway?</p>
<p>I remember back in the pre-registry days, us UNIX folks were mocked because we stored configuration info in ASCII text files.</p>
<p>But in the end it turns out that storing things in text files is probably faster, just as secure, and a lot easier to manage.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-348763">
				<div id="div-comment-348763" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">8</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060222-11/?p=32193#comment-348763">
			February 22, 2006 at 10:15 am</a>		</div>

		<p>Are there actually programs that access the registry upon every mouse move?</p>
<p>Given the nature of the registry (a place to store configuration variables), the cost of reading values has a low impact, since a program would only read it&#8217;s values when it starts, and only write values when the user changes the configuration. I think it was a well-known fact that using the registry in an application is costly. Didn&#8217;t all win&gt;=32 developers knew already? Hmm.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-348773">
				<div id="div-comment-348773" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.valhallalegends.com/skywing' rel='external nofollow' class='url'>Skywing</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060222-11/?p=32193#comment-348773">
			February 22, 2006 at 10:17 am</a>		</div>

		<p>The Registry tends to be a lot more friendly to programmatic alteration than flat text files. &nbsp;For instance, if I want to alter the configuration of something, I can just set a string or dword value in the registry in the vast majority of cases instead of having to write a configuration file parser and writer for that particular program&#8217;s config file format.</p>
<p>Yes, more standard formats like .ini files can help alieviate this, but then you still don&#8217;t necessarily have a centralized location to say find where a program is installled or alter it&#8217;s settings regardless of where the actual binary happened to end up on the end user system.</p>
<p>I would suspect that a linear search through a text file is also probably going to be much slower than the much more optimized hive data structures in memory.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-348783">
				<div id="div-comment-348783" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">8</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060222-11/?p=32193#comment-348783">
			February 22, 2006 at 10:30 am</a>		</div>

		<p>Yes, Skywing I was writing that but I accidentally closed Firefox. However, I still have something to add. When your program is a self-serving EXE file that can be dragged around by users, the registry is quite a useful tool. However, when there&#8217;s a lot to store then it&#8217;s better to use a file because registry performance degrades when it grows. Thus, all registry-enabled programs would slow. Wether the user actually notices it is another, ofcourse.</p>
<p>When using a file, make sure the performance is consistant, as Skywing pointed out. Make sure it&#8217;ll &nbsp;be compatible with future (and then older) versions, that it uses the right character set, and so on.</p>
<p>When searching, you don&#8217;t have to search linearly, and you don&#8217;t have to use the filesystem API in the process either. And you get to optimize for the actual data type(s) being stored.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-348793">
				<div id="div-comment-348793" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Dave</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060222-11/?p=32193#comment-348793">
			February 22, 2006 at 10:47 am</a>		</div>

		<p>&quot;Are there actually programs that access the registry upon every mouse move?&quot;</p>
<p>Error: Result set too large to display. :)</p>
<p>Get a copy of SysInternals RegMon and start it with nothing filtered out. It&#8217;s incredible how much registry banging happens on most systems, even when you&#8217;re not physically interacting with the system.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-348803">
				<div id="div-comment-348803" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">kokorozashi</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060222-11/?p=32193#comment-348803">
			February 22, 2006 at 10:50 am</a>		</div>

		<p>RC, you&#8217;ve also written recently about MsgWaitForMultipleObjects, which has become my new favorite API. And it happens that I&#8217;m using it in concert with RegNotifyChangeKeyValue. I suppose deciding which strategy is &quot;better&quot; is an application-level trade-off, and RegisterWaitForSingleObject might be useful in a program without a message pump, but it still strikes me as unnecessarily complex. In fact, this whole notion of spawning a thread just so it can block on something feels wrong to me, which is why I find MsgWaitForMultipleObjects so appealing. Can you elaborate?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-348813">
				<div id="div-comment-348813" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">8</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060222-11/?p=32193#comment-348813">
			February 22, 2006 at 11:16 am</a>		</div>

		<p>Dave, how about a port of XCruise to the registry (and libSDL)?</p>
<p><a rel="nofollow" target="_new" href="http://xcruiser.sourceforge.net/" rel="nofollow">http://xcruiser.sourceforge.net/</a></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-348823">
				<div id="div-comment-348823" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Anonymous Coward</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060222-11/?p=32193#comment-348823">
			February 22, 2006 at 11:45 am</a>		</div>

		<p>Grab regmon from <a href="http://www.sysinternals.com" rel="nofollow">http://www.sysinternals.com</a> and be horrified at just how frequently the registry is polled by various programs. &nbsp;My favourite is how often Yahoo Messenger looks for new versions of Flash &#8211; about once a second. &nbsp;The little talking heads are all coded in Flash.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-348863">
				<div id="div-comment-348863" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">stb</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060222-11/?p=32193#comment-348863">
			February 22, 2006 at 12:32 pm</a>		</div>

		<p>To me, it seems that Microsoft does not practice what Raymond is preaching. Go get regmon, filter for just &quot;explorer.exe&quot;, and go browse your Start Menu. </p>
<p>On Windows XP, I browsed Start -&gt; Programs -&gt; Microsoft Visual Studio .NET 2003 and then hovered over the link to start up Visual Studio. All told, about 1000 registry accesses occurred during this process. By Raymond&#8217;s given values, that means that on the order of 60 million to 100 million cycles were just spent so that I could browse the start menu.</p>
<p>I&#8217;ll grant you, this isn&#8217;t exactly in a critical section. Still, it seems pretty overkill when you consider that this is data that should not be changing that often.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-348893">
				<div id="div-comment-348893" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">AC2</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060222-11/?p=32193#comment-348893">
			February 22, 2006 at 12:58 pm</a>		</div>

		<p>Andrew/Andrea,</p>
<p>Huh?</p>
<p>1) OK, maybe, but you can do this with regedit.</p>
<p>2) It&#8217;s easy enough to fix the format with notepad. Change to/from Unicode, edit the first line.</p>
<p>3) You mean simultaneously use the same config on multiple machines? Roaming profiles. Like Raymond said.</p>
<p>4) You mean share the same config for all users? Why would you want to do that? You can accomplish this by storing it in HKLM and changing the permissions, I guess &#8211; the same way you&#8217;d have to change permissions for a writable central config file on the machine.</p>
<p>5) And you&#8217;d have to mess about with permissions for a writable simple config file too.</p>
<p>6) It&#8217;s easy: HKCUSoftwareManufacturerProgramNamewhatever</p>
<p>7) How so? I can see more scope for security errors parsing a config file than using the registry API.<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-348903">
				<div id="div-comment-348903" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">vince</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060222-11/?p=32193#comment-348903">
			February 22, 2006 at 1:01 pm</a>		</div>

		<p>Skywing said:<br />
<br />&gt; I would suspect that a linear search<br />
<br />&gt; through a text file is also probably<br />
<br />&gt; going to be much slower than the much<br />
<br />&gt; more optimized hive data structures<br />
<br />&gt; in memory.</p>
<p>Yes, but suspicions are not the proper way to design an OS.</p>
<p>The nice thing about UNIX/Linux is that there&#8217;s often open discussions, benchmarks, and even papers written about performance and security decisions.</p>
<p>With Windows, unless Raymond or someone similar posts it to their blogs, you have no idea why anything is done, and often you can just assume &nbsp;that it was done for fairly arbitrary reasons.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-mgrier odd alt thread-odd thread-alt depth-1" id="comment-348933">
				<div id="div-comment-348933" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/MGrier' rel='external nofollow' class='url'>MGrier</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060222-11/?p=32193#comment-348933">
			February 22, 2006 at 1:14 pm</a>		</div>

		<p>Re: thread affinity:</p>
<p>There are two ways around this.</p>
<p>If you&#8217;re going to do only a little work based on the handle being signalled, it&#8217;s no big deal since what happens is that the event is signalled when the queuing thread terminates (I think it&#8217;s an IRP that gets queued when you request the notification so when the queuing thread is destroyed, all the outstanding IRPs are cancelled and the completion routines will signal the event).</p>
<p>If you&#8217;re going to do a lot of work, you want to use a persistent thread in the thread pool to queue the original notification and then register the wait.</p>
<p>The latter is overkill if you&#8217;re just going to read one value from an already open key handle but if you&#8217;re going to tear down some big configuration data structure and rebuild it and you&#8217;re not in control of the thread lifetimes on which your code runs (e.g. a typical component) you should queue the work item to a persistent thread to start the wait.<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-348953">
				<div id="div-comment-348953" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Dave</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060222-11/?p=32193#comment-348953">
			February 22, 2006 at 1:27 pm</a>		</div>

		<p>&quot;In fact, this whole notion of spawning a thread just so it can block on something feels wrong to me&#8230;&quot;</p>
<p>Why so? It&#8217;s conceptually easy to have a thread with a single-minded goal blocking until it can achieve that goal. Contrast that with dispatching off a message loop or one thread waiting for a variety of events. Now of course it gets more complicated if the thread needs to synchronize with something once the goal is achieved, sometimes you get that for free with the other approaches.<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-348963">
				<div id="div-comment-348963" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">jon</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060222-11/?p=32193#comment-348963">
			February 22, 2006 at 2:09 pm</a>		</div>

		<p>stb:</p>
<p>I have a 3.4ghz processor &#8211; that&#8217;s 3,400,000,000 cycles per second (not counting hyperthreading). So at 100,000 cycles per registry read, that&#8217;s still 34,000 reads a second.</p>
<p>So Explorer reading 1000 values for something the user initiates (say by hovering the mouse over something in the start menu) isn&#8217;t really that big a deal, is it?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-348973">
				<div id="div-comment-348973" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Doug</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060222-11/?p=32193#comment-348973">
			February 22, 2006 at 2:11 pm</a>		</div>

		<p>You said:<br />
<br />When the event fires on the thread pool, handle the change, then ask your persistent thread to start a new cycle of RegNotifyChangeKeyValue. </p>
<p>You should do:<br />
<br />When the event fires on the thread pool, ask your persistent thread to start a new cycle of RegNotifyChangeKeyValue, then handle the change. &nbsp;Otherwise you have a race condition where a registry change occurs after you handle the change but before you RegNotifyChangeKeyValue.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-348983">
				<div id="div-comment-348983" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">stb</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060222-11/?p=32193#comment-348983">
			February 22, 2006 at 2:42 pm</a>		</div>

		<p>jon:</p>
<p>As I said, I agree that this is not a critical section. That doesn&#8217;t change the fact that this seems hugely wasteful. </p>
<p>On the one hand, it&#8217;s easy to discount it by saying that yes, many modern systems could do this sort of read many times over easily. On the other hand, I find it hard to believe that this information couldn&#8217;t be held onto longer by explorer.exe, instead of requiring that it re-read it constantly. </p>
<p>Also, remember that not everyone has as nice a computer as you do. This is something that developers (myself included) tend to lose sight of. If we were talking about a game, then I&#8217;d say the developers can assume whatever level of performance they want, but this is a fairly simple operation. </p>
<p>To demonstrate that point, a question: were you on a 800MHz machine, which would be capable of only 8000 reads per second, would you hold the same opinion? Personally, I would think simple menu navigation taking up 1/8 of the CPU resources seems more than just a little bit overkill.</p>
<p>It seems reasonable to think that this kind of thinking (&quot;it&#8217;s only 1000 reads &#8230;&quot;) is exactly why each version of Windows needs more resources than the last. Little bits add up.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-348993">
				<div id="div-comment-348993" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">kokorozashi</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060222-11/?p=32193#comment-348993">
			February 22, 2006 at 2:44 pm</a>		</div>

		<p>Dave, if a thread is going to do real work that the user cares about, that is a thread worth creating, and the blocking is merely incidental to getting its job done. But when the only motive for creating a thread is that the programmer encountered an API which blocks, and the only work for that thread to do once that API unblocks is to post a message to the main thread, something has gone wrong from a design perspective, because the programmer wanted the API, not the thread. It seems to me that non-abusive use of RegNotifyChangeKeyValue is likely to fit into the latter scenario more often than the former.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-349043">
				<div id="div-comment-349043" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Eric Duran</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060222-11/?p=32193#comment-349043">
			February 22, 2006 at 4:29 pm</a>		</div>

		<p>&quot;Are there actually programs that access the registry upon every mouse move?&quot;</p>
<p>Yes, Microsoft Mouse (point32.exe) does. Once again, take RegMon and you will see how bad it hits the registry (with every single mouse movement).<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-349093">
				<div id="div-comment-349093" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">SuperKoko</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060222-11/?p=32193#comment-349093">
			February 22, 2006 at 6:11 pm</a>		</div>

		<p>&quot;7) How so? I can see more scope for security errors parsing a config file than using the registry API.&quot;<br />
<br />When opening a file without write sharing, no other process can &quot;break your file&quot; during parsing.</p>
<p>With registry, there is no global lock.<br />
<br />There is only a lock operation for each read/write operation.</p>
<p><a rel="nofollow" target="_new" href="http://www.oreilly.com/catalog/winreg/chapter/ch04ex.html" rel="nofollow">http://www.oreilly.com/catalog/winreg/chapter/ch04ex.html</a></p>
<p>&quot;Multiple operations, thus, are not atomic. For instance, if your application uses RegEnumValue to enumerate all the values belonging to a particular key, a mutex is used to insure the integrity of the individual read operation. But the integrity of the enumeration as a whole cannot be guaranteed; that is, there is no guarantee that the properties of the value entries and the values themselves will be the same when you finish your enumeration as they were when you began your enumeration. In fact, since the registry&#8217;s locking scheme is implemented at a system level by the Virtual Machine Manager, it is not possible to apply it to multiple operations, since the system has no way of knowing how many operations you intend to perform. Attempting to apply it to multiple operations would inevitably block other applications&#8217; access to the registry and bring the system to a crawl. Consequently, the documentation for RegEnumKey, RegEnumKeyEx, and RegEnumValue in the Win32 SDK warns that, while enumerating keys or values, your application should not modify any of the objects being enumerated.</p>
<p>So it is quite possible, when you&#8217;re in the middle of a series of registry operations, that some other application can change either the data itself or information about the data (like the number of value entries belonging to a subkey or the number of bytes in the longest data value). For instance, before using RegEnumValue to enumerate a series of values, you call RegQueryInfoKey to determine both the number of value entries and the length of the longest data item. As you&#8217;re enumerating the values, another application deletes a value that you haven&#8217;t yet enumerated, and writes new data to another value entry that you haven&#8217;t enumerated that is significantly longer than RegQueryInfoKey reported.&quot;</p>
<p>&quot;I would suspect that a linear search through a text file is also probably going to be much slower than the much more optimized hive data structures in memory.&quot;<br />
<br />Depends on the type of information you need.</p>
<p>Often, the program just needs to read a big list of settings, and often the whole list is read at once.<br />
<br />So, with a text file, it is quite easy and fast, all the data is read at a time.<br />
<br />If there is not a fixed number of settings, but an association between some keys and settings, the file works well, but the registry sucks&#8230; because with the registry, you must use a RegEnumKeyEx function call, which is very slow, because the registry was not designed to be used like that.<br />
<br />The registry can only be used efficiently with direct accesses (enumeration is slow).</p>
<p>A wondeful example of total misuse of the registry, is the &quot;new&quot; submenu of the context menu of the background of shell folders.<br />
<br />I didn&#8217;t read the Windows code, but under Windows 98, getting access to this submenu is very very slow.<br />
<br />It is very probably due to an enumeration of all keys under HKCR, and research of each ShellNew key under each file extension key.</p>
<p>It needs about 1.5 second on my computer (and that, for only 9 menu items)<br />
<br />There is no caching mechanism.<br />
<br />My computer is a K6-2 550Mhz, with a 100Mhz motherboard, and 192MB RAM.<br />
<br />Much better than common computers that were used in 1998.</p>
<p>1.5 second, it is 825 millions CPU cycles!<br />
<br />Clearly, the ShellNew information is not stored in a consistent way in the registry base.<br />
<br />And the absence of caching system is inacceptable.<br />
<br />Imagine my CPU ran 55Mhz instead of 550Mhz (Windows 95 ran on 486 DX2 66), it would need at least 15 seconds!<br />
<br />And, it needed 2.5 seconds, last month, before I upgraded my 333Mhz CPU to a 550Mhz one.<br />
<br />Even that 1.5 second delay I use alternative ways for creating files (such as using DOS prompt), because that&#8217;s just too slow.</p>
<p>PS: That is an incorrect way to use the registry base, but I don&#8217;t mean that every use of the registry base is bad.<br />
<br />And, there are some things that are better done with config files, as there are things that are well done with the registry base.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-348853">
				<div id="div-comment-348853" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Andrea Raimondi</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060222-11/?p=32193#comment-348853">
			February 22, 2006 at 12:23 pm</a>		</div>

		<p>There&#8217;re very few annoying things like a program storing configs in the registry.<br />
<br />Possibly, there&#8217;s *nothing* worse than that, even getting a virus is maybe better &#8211; as long as it doesn&#8217;t write in the registry.</p>
<p>This is because registry-oriented persistence is a real pain in the ace under several points of view:</p>
<p>1) It makes a case for an import/export configuration feature(which isn&#8217;t mostly provided)</p>
<p>2) Makes program backup much harder, because if there&#8217;s no configuration import/export you have to copy the keys and the values, but mind what format you choose, because you may end up being incompatible with Windows 9x/ME/Godknowswhat</p>
<p>3) Sharing configurations among machines is plain impossible</p>
<p>4) Sharing configurations for users on the same machine(!!!!!) is much harder</p>
<p>5) You have to mess with permissions about the keys</p>
<p>6) Choosing the right key to store the right data takes time out of real work</p>
<p>7) Registry is more &quot;vulnerable&quot; than simple configuration files</p>
<p>Raymond?</p>
<p>Cheers,</p>
<p>Andrew</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-348943">
				<div id="div-comment-348943" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Andrea Raimondi</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060222-11/?p=32193#comment-348943">
			February 22, 2006 at 1:23 pm</a>		</div>

		<p>Andrew = to signal I&#8217;m male<br />
<br />Andrea = real name :-)</p>
<p>Regedit has to be done *manually*&#8230; do it for several machines ;-)</p>
<p>Same for fixing&#8230; it&#8217;s ok for one machine, how about tens or hundreds?</p>
<p>No, I mean that you can have some basic file on a shared network with some sensitive settings already filled being lots easier than having to do Godknowswhat to achieve the same.</p>
<p>Not really the same as file, if you keep your configuration file in the shared documents folder, for instance. About this aspect, it&#8217;s<br />
<br />interesting to notice that said config file could possibly be encrypted, loaded in memory, being decripted, settings loaded then unloaded from memory. Do this with registry settings.</p>
<p>About HKCU: not quite. You just said you&#8217;d need to load it from HKLM if you want to share among users&#8230; now what? ;-) Using a file, all that changes is a PATH. That&#8217;s it.</p>
<p>About vulnerability: try modifying a value in the registry and then do the same in a config file&#8230; which is easier to correct? Consider that the key tree might be complex and have several similar branches&#8230; using a simple configuration file, ini for example, you can comment sections once and forget about them.</p>
<p>Cheers,</p>
<p>Andrew</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-349013">
				<div id="div-comment-349013" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.guyswithtowels.com' rel='external nofollow' class='url'>Tim</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060222-11/?p=32193#comment-349013">
			February 22, 2006 at 3:30 pm</a>		</div>

		<p>I noticed a while back that one version of Valve&#8217;s Steam client would do tens of registry reads per second &#8211; all the time.</p>
<p>I noticed because I had regmon open debugging one of our own apps, and I had to filter out Steam&#8217;s rampant registry abuse just to see what was going on.</p>
<p>I believe Valve have fixed the problem now. &nbsp;But this was done by the supposedly lightweight tray app, and happened *all* the time. &nbsp;Then again, Steam falls into the &#8216;pointlessly skinned interface&#8217; class of apps too, so I shouldn&#8217;t be that surprised.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-349063">
				<div id="div-comment-349063" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Andy C</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060222-11/?p=32193#comment-349063">
			February 22, 2006 at 4:56 pm</a>		</div>

		<p>&quot;Regedit has to be done *manually*&#8230; do it for several machines ;-)&quot; </p>
<p>reg.exe is your friend</p>
<p>&quot;Same for fixing&#8230; it&#8217;s ok for one machine, how about tens or hundreds? &quot;</p>
<p>Group Policy is your other friend</p>
<p>Used properly, the registry is great. The problem is the large number of applications which don&#8217;t use it correctly. Personally, I&#8217;d have designed it differently, but that certainly wouldn&#8217;t be a bunch of text files.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-349103">
				<div id="div-comment-349103" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">steveg</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060222-11/?p=32193#comment-349103">
			February 22, 2006 at 6:56 pm</a>		</div>

		<p>A problem (I find) with linux text config files is the numerous formats that abound. Win16 had an advantage with its common INI file format.</p>
<p>When # of PCs==small, it *is* easier to hack a text file quickly than fire up RegEdit and locate the key and then change the value. </p>
<p>However as # of PCs approaches LotsAndLots the Registry and group policy etc starts looking very attractive.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-349153">
				<div id="div-comment-349153" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Aaargh!</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060222-11/?p=32193#comment-349153">
			February 23, 2006 at 5:03 am</a>		</div>

		<p>&quot;A problem (I find) with linux text config files is the numerous formats that abound. Win16 had an advantage with its common INI file format.&quot;</p>
<p>The best solution is IMHO the way MacOS X does it, with plist files, which are basically XML files (although they can be stored in a binary format too, but those can be converted to and from the XML file).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-349173">
				<div id="div-comment-349173" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">SuperKoko</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060222-11/?p=32193#comment-349173">
			February 23, 2006 at 5:52 am</a>		</div>

		<p>&quot;A problem (I find) with linux text config files is the numerous formats that abound. Win16 had an advantage with its common INI file format.&quot;</p>
<p>steveg: Right, it would be good to normalize the format for new softwares.<br />
<br />In particular, I wonder why some files use &#8216;!&#8217; for comments while others use &#8216;#&#8217;.</p>
<p>Also, I think that the registry should be mainly used for shared settings.<br />
<br />Settings used by more than one program.</p>
<p>It makes no sense to have two independent programs, with independent settings be blocked on the mutex of the registry base&#8230; It looks like a cooperative multitasking.</p>
<p>Also, something I like with Linux config files, is the very good documentation that comes with, and the comments!<br />
<br />The registry base never contains comments.<br />
<br />Programs that use registry base, generally are not designed to allow the user modifying settings manually (and settings change from one version to another).<br />
<br />Linux config files are designed to be modified by the user, and remains compatible between releases of the same program.<br />
<br />Of course, that is not inherent to the registry base, but the fact that programs use the registry base in an obscure way, make it a big bunch of undocumented settings which are not correctly import/exportable from one machine to another.<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-349183">
				<div id="div-comment-349183" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">8</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060222-11/?p=32193#comment-349183">
			February 23, 2006 at 5:54 am</a>		</div>

		<blockquote><p>
  &gt;Are there actually programs that access the registry<br />
  <br />&gt;&gt;upon every mouse move?<br />
  <br />&gt;Yes, Microsoft Mouse (point32.exe) does. Once again,<br />
  <br />&gt;take RegMon and you will see how bad it hits the<br />
  <br />&gt;registry (with every single mouse movement).</p>
<p>So is Raymond being a hypocrite, or was msmouse coded by an interim?</p>
<p>&gt;A problem (I find) with linux text config files is<br />
  <br />&gt;the numerous formats that abound. Win16 had an<br />
  <br />&gt;advantage with its common INI file format. </p>
<p>Let&#8217;s leave sendmail out of the picture ok? :D<br />
  <br />It is commonly accepted that # is used for comments, that the filename ends with &quot;.conf&quot; and that it can be edited with ordinary text editors. Also the ini-style headers ( [foo] ) are sometimes used. Usually it just takes a second or two looking at the file to know it&#8217;s syntax.</p>
<p>But yes, a &quot;standardised&quot; library to deal with this is useful. Gnome uses GConf which is much better then the Windows registry IMHO, because it is capable of multiple backends (like MySQL or XML files), is better organised, and is quite easy to edit, since many variables have (translated) descriptions(!).
</p></blockquote>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-349213">
				<div id="div-comment-349213" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">8</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060222-11/?p=32193#comment-349213">
			February 23, 2006 at 9:11 am</a>		</div>

		<p>&#8230;I&#8217;d like to add that some programs use a scripting language for the config file (usually because they&#8217;ve got scripting support anyway), so you can &quot;code&quot; the config files, like creating macro&#8217;s that evaluate variables and act accordingly. Uber-geeky stuff :)</p>
<p>One prime example is ofcourse the bash config file (~/.bashrc and /etc/bash.bashrc), which is basically just another bash script :)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-349133">
				<div id="div-comment-349133" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">josh</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060222-11/?p=32193#comment-349133">
			February 23, 2006 at 2:06 am</a>		</div>

		<p>&quot;Regedit has to be done *manually*&#8230;&quot;</p>
<p>regedit /e file key</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-mike-dimmick odd alt thread-odd thread-alt depth-1" id="comment-349333">
				<div id="div-comment-349333" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Mike+Dimmick' rel='external nofollow' class='url'>Mike Dimmick</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060222-11/?p=32193#comment-349333">
			February 23, 2006 at 2:24 pm</a>		</div>

		<p>If you want to be able to configure a registry key on multiple machines, you can create an .ADM file for Group Policy. You can decide to do it on a per-user basis if you use the User Configuration part rather than the System Configuration part.</p>
<p>Your application should always check HKCU as well as HKLM, preferring the settings from HKCU if set. I personally wish that the URL protocol handling code in IE and the shell would check HKCU as well as HKLM so that RSS Bandit didn&#8217;t have to write the feed: protocol keys into HKLM, which obviously (unless you weaken the ACLs) must be done as an administrator or power user.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-349353">
				<div id="div-comment-349353" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">David Walker</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060222-11/?p=32193#comment-349353">
			February 23, 2006 at 3:13 pm</a>		</div>

		<p>&quot;Was there ever any publicly released document on why MS chose to move to using a registry anyway?&quot;</p>
<p>I think Eric or Raymond has addressed this before, but the old .ini file structure was horrible, with clashes when two programs tried to update their own settings in win.ini at the same time, and the growing size of the file. </p>
<p>Maybe someone will remind us what the reasons for going to the registry were. &nbsp;Someone also commented that if you want to abolish the registry, you have to replace it with something.<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-349373">
				<div id="div-comment-349373" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://techies.teamlupus.hu/2006/02/23/registry-kezeles/' rel='external nofollow' class='url'>Techies blog &raquo; Registry kezel??s</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060222-11/?p=32193#comment-349373">
			February 23, 2006 at 4:13 pm</a>		</div>

		<p>PingBack from <a rel="nofollow" target="_new" href="http://techies.teamlupus.hu/2006/02/23/registry-kezeles/" rel="nofollow">http://techies.teamlupus.hu/2006/02/23/registry-kezeles/</a></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-349393">
				<div id="div-comment-349393" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Legolas</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060222-11/?p=32193#comment-349393">
			February 23, 2006 at 5:05 pm</a>		</div>

		<p>When you say &#8216;the thread pool&#8217; do you mean some windows service/api or something I have to write myself?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-349443">
				<div id="div-comment-349443" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">J</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060222-11/?p=32193#comment-349443">
			February 23, 2006 at 7:12 pm</a>		</div>

		<p>&quot;So is Raymond being a hypocrite, or was msmouse coded by an interim?&quot;</p>
<p>A) &nbsp;What makes you think that Raymond coded msmouse?</p>
<p>B) &nbsp;Even if he did, why couldn&#8217;t he learn from a mistake and post what not to do? &nbsp;Jackass.<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-patriotb even thread-even depth-1" id="comment-349463">
				<div id="div-comment-349463" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">PatriotB</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060222-11/?p=32193#comment-349463">
			February 23, 2006 at 10:25 pm</a>		</div>

		<p>Legolas &#8212; Windows 2000 introduced a thread pool API for applications to use, instead of having to write their own thread pool. &nbsp;See <a rel="nofollow" target="_new" href="http://msdn.microsoft.com/library/default.asp?url=/library/en-us/dllproc/base/thread_pooling.asp" rel="nofollow">http://msdn.microsoft.com/library/default.asp?url=/library/en-us/dllproc/base/thread_pooling.asp</a>.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-junfeng odd alt thread-odd thread-alt depth-1" id="comment-349523">
				<div id="div-comment-349523" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Junfeng+Zhang' rel='external nofollow' class='url'>Junfeng Zhang</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060222-11/?p=32193#comment-349523">
			February 24, 2006 at 1:02 am</a>		</div>

		<p>Polling is bad, but reading on demand may not. </p>
<p>I can not imagine when everybody decides to listen to registry change notification. Will the system be able to handle that?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-349563">
				<div id="div-comment-349563" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Steve</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060222-11/?p=32193#comment-349563">
			February 24, 2006 at 8:58 am</a>		</div>

		<p>J, </p>
<p>Remember that Microsoft is a single entity, like the Borg. Raymond is Microsoft. I am Microsoft. &quot;We&quot; all coded all applications release by Microsoft and are therefore all responsible for all misbehavior in all Microsoft application and any version of any Microsoft O/S. Any criticism of coding practices that are later revealed to exist somewhere in the BILLIONS of lines of Microsoft code qualifies as hypocrisy. </p>
<p>Geez, get with the program dude!<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-350993">
				<div id="div-comment-350993" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blog.escoria.org/PermaLink,guid,35ea61e1-58e7-49d3-9556-00b103f7f7ec.aspx' rel='external nofollow' class='url'>Anuncie Aqui!</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060222-11/?p=32193#comment-350993">
			March 1, 2006 at 4:34 pm</a>		</div>

		
		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-351723">
				<div id="div-comment-351723" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">LittleNicky</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060222-11/?p=32193#comment-351723">
			March 6, 2006 at 6:17 am</a>		</div>

		<p>Why does ActiveSync hammer the registry?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-485553">
				<div id="div-comment-485553" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.janus-net.de/2006/02/27/avoid-polling-registry-keys-in-net-c/' rel='external nofollow' class='url'>janus-net.de &raquo; Blog Archive &raquo; Avoid polling registry keys in .NET (C#)</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060222-11/?p=32193#comment-485553">
			March 25, 2007 at 7:42 am</a>		</div>

		<p>PingBack from <a rel="nofollow" target="_new" href="http://www.janus-net.de/2006/02/27/avoid-polling-registry-keys-in-net-c/" rel="nofollow">http://www.janus-net.de/2006/02/27/avoid-polling-registry-keys-in-net-c/</a></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-570253">
				<div id="div-comment-570253" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blogs.msdn.com/oldnewthing/archive/2007/11/26/6523907.aspx' rel='external nofollow' class='url'>The Old New Thing : Why are INI files deprecated in favor of the registry?</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060222-11/?p=32193#comment-570253">
			November 26, 2007 at 12:17 pm</a>		</div>

		<p>PingBack from <a rel="nofollow" target="_new" href="http://blogs.msdn.com/oldnewthing/archive/2007/11/26/6523907.aspx" rel="nofollow">http://blogs.msdn.com/oldnewthing/archive/2007/11/26/6523907.aspx</a></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-571103">
				<div id="div-comment-571103" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.nikvoronin.com/2007/11/27/pochemu-ini-fajly-ustareli-a-reestr-net/' rel='external nofollow' class='url'>Klatu! Veratu! Ni&#8230;khm-khm! &raquo; Blog Archive &raquo; ???????????? INI-?????????? ????????????????, ?? ???????????? ???????</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060222-11/?p=32193#comment-571103">
			November 27, 2007 at 7:25 am</a>		</div>

		<p>PingBack from <a rel="nofollow" target="_new" href="http://www.nikvoronin.com/2007/11/27/pochemu-ini-fajly-ustareli-a-reestr-net/" rel="nofollow">http://www.nikvoronin.com/2007/11/27/pochemu-ini-fajly-ustareli-a-reestr-net/</a></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-615593">
				<div id="div-comment-615593" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blogs.msdn.com/ie/archive/2008/04/04/designing-for-add-on-performance.aspx' rel='external nofollow' class='url'>IEBlog</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060222-11/?p=32193#comment-615593">
			April 4, 2008 at 1:34 pm</a>		</div>

		<p>As we worked towards the recent release of Internet Explorer 8 Beta 1, the IE team focused hard on performance.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-616123">
				<div id="div-comment-616123" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.b-spot.se/designing-for-add-on-performance/' rel='external nofollow' class='url'>Designing for Add-on Performance :: b[logg]Spot.se</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060222-11/?p=32193#comment-616123">
			April 7, 2008 at 6:59 am</a>		</div>

		<p>PingBack from <a rel="nofollow" target="_new" href="http://www.b-spot.se/designing-for-add-on-performance/" rel="nofollow">http://www.b-spot.se/designing-for-add-on-performance/</a></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-718923">
				<div id="div-comment-718923" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blogs.msdn.com/ie8kr/archive/2009/03/20/9491934.aspx' rel='external nofollow' class='url'>IE8 팀 블로그</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060222-11/?p=32193#comment-718923">
			March 20, 2009 at 3:23 am</a>		</div>

		<p>&amp;#160; 최근 Internet Explorer 8 Beta 1 출시를 위해 개발중인 IE 팀은 성능에 심혈을 기울이고 있습니다. IE&amp;#160; 향상을 위한 노력의 일환으로 실행한</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-720573">
				<div id="div-comment-720573" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blogs.msdn.com/oldnewthing/archive/2009/03/26/9508968.aspx' rel='external nofollow' class='url'>The Old New Thing : The inability to lock someone out of the registry is a feature, not a bug</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060222-11/?p=32193#comment-720573">
			March 26, 2009 at 3:50 pm</a>		</div>

		<p>PingBack from <a rel="nofollow" target="_new" href="http://blogs.msdn.com/oldnewthing/archive/2009/03/26/9508968.aspx" rel="nofollow">http://blogs.msdn.com/oldnewthing/archive/2009/03/26/9508968.aspx</a></p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>