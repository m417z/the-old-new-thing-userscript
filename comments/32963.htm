<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (42)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-330413">
				<div id="div-comment-330413" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">dls</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20051215-11/?p=32963#comment-330413">
			December 15, 2005 at 10:14 am</a>		</div>

		<p>At least a few manufacturers offer what is usually marketed as &quot;industrial&quot; grade flash products (I&#8217;ve seen these in CF, but suspect USB is available). These usually claim 2 million write/erase cycles versus 1 million for the consumer products (although, getting the detailed product information for the consumer products is sometimes hard). Even with that many write operations, operating system tuning (e.g. disabling last modified time and background defragmentation) and other protections like XPe&#8217;s enhanced write filter are critical if you don&#8217;t enjoy mysterious disk errors.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-330423">
				<div id="div-comment-330423" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Oli</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20051215-11/?p=32963#comment-330423">
			December 15, 2005 at 10:15 am</a>		</div>

		<p>I think it depends on the type of flash but it&#8217;s in the region of about 1,000,000 writes for some of the best chips.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-330463">
				<div id="div-comment-330463" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Dave</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20051215-11/?p=32963#comment-330463">
			December 15, 2005 at 10:35 am</a>		</div>

		<p>I run apps from flash to clean up systems that are infected with spyware and viruses. Firefox can run from a flash drive, and most antispyware apps do as well. I&#8217;ve had six of these USB flash keys, mostly the cheap $20 models, and never had one fail because the flash went bad. I&#8217;ve had two physically break though, so maybe the electronics aren&#8217;t the weak spot.</p>
<p>Here&#8217;s another endorsement of flash durability. The Vista guys are doing a lot of work to improve power management, and part of that is reducing disk drive power consumption. At the last WinHEC they showed a Samsung hybrid drive that had a large front-end flash buffer. That way the drive wouldn&#8217;t need to spin up in many cases. Of course Vista has a bunch of changes to make that work nicely, and I suspect they avoid excessive writes to flash.</p>
<p>BTW, I think this is the paper you mentioned:<br />
<br /><a rel="nofollow" target="_new" href="http://citeseer.ist.psu.edu/kawaguchi95flashmemory.html" rel="nofollow">http://citeseer.ist.psu.edu/kawaguchi95flashmemory.html</a><br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-330473">
				<div id="div-comment-330473" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://mikenbondi.blogspot.com' rel='external nofollow' class='url'>Mike Williams</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20051215-11/?p=32963#comment-330473">
			December 15, 2005 at 10:40 am</a>		</div>

		<p>This was one of the issues faced when we made Pocket Access and ADOCE back in 97/98, and a million writes was the ballpark limit. You&#8217;ll really don&#8217;t want to be writing back to the file on a per-record basis when you have a large database. It&#8217;s better to have software that can handle large R/O databases like product catalogs.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-330483">
				<div id="div-comment-330483" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">BryanK</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20051215-11/?p=32963#comment-330483">
			December 15, 2005 at 10:47 am</a>		</div>

		<p>I believe Linux has some options (in patches, not included in the standard kernel) for flash FSes, though it&#8217;s possible that that&#8217;s old information too.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-330493">
				<div id="div-comment-330493" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">FlashDirt</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20051215-11/?p=32963#comment-330493">
			December 15, 2005 at 10:47 am</a>		</div>

		<p>Since writes to flash media involves erase, consecutive writes to a (logical) sector do not write to the same (physical) sector. This is how it works with most modern day removable flash media (not sure how the firmware for the USB Thumbdrives are written). So, as long the disk space is not near full capacity, the writes are okay. Only once in N writes to the same logical sector will the same physical sector be re-written. Where the N is the number of free physical sectors (this is usually more than the number of free logical sectors).</p>
<p>Logical sectors are sectors as seen by the OS. Physical sectors are the sectors as seen by the media. Flash media like memory stick, xD picture card, SmartMedia, have this memory mapping known to their readers. Media like MemoryStick Pro, MMC, SD,.. are slightly more intelligent in that they abstract this functioning from the host (reader).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-330503">
				<div id="div-comment-330503" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.rufian.zilbermann.com' rel='external nofollow' class='url'>Eusebio Rufian-Zilbermann</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20051215-11/?p=32963#comment-330503">
			December 15, 2005 at 10:50 am</a>		</div>

		<p>Running the OS directly from flash memory is certainly doable (the proof is in my keychain) and it can be very practical for troubleshooting machines with problems. For avoiding excessive writing it is a good idea to use a version that is designed to run from CD (like Windows XP Preinstallation Environment or the equivalent non-Windows choices) and remembering to reserve some space in the memory so that it is possible to save data manually if it is necessary.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-330513">
				<div id="div-comment-330513" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">zz</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20051215-11/?p=32963#comment-330513">
			December 15, 2005 at 10:50 am</a>		</div>

		<p>How about &quot;Super-Fetch&quot; (from Jim Allchin&#8217;s keynote) in Windows Vista? Isn&#8217;t that suppose to leverage a USB drive to extend VM?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-330523">
				<div id="div-comment-330523" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Meatloaf</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20051215-11/?p=32963#comment-330523">
			December 15, 2005 at 10:51 am</a>		</div>

		<p>Schweitzer Engineering sells industrial PCs which have compact flash hard drives.<br />
<br /><a rel="nofollow" target="_new" href="http://www.selinc.com/computers.htm" rel="nofollow">http://www.selinc.com/computers.htm</a></p>
<p>The 3301 unit comes with XP Embedded and the Enhanced Write Filter to protect the CF card.  They have had so many problems with the Write Filter (customers not realizing that File-&gt;Save doesn&#8217;t actually save a file until it is explicitly committed to flash) that they gave up on it for the 3351 unit.<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-330533">
				<div id="div-comment-330533" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Dan McCarty</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20051215-11/?p=32963#comment-330533">
			December 15, 2005 at 10:53 am</a>		</div>

		<p>I believe Intel&#8217;s Strataflash has wear leveling, either built-in or optional.  I&#8217;m not sure if it&#8217;s done at the hardware or software level though.</p>
<p>hardware: <a rel="nofollow" target="_new" href="http://www.intel.com/design/flcomp/prodbref/306782.htm" rel="nofollow">http://www.intel.com/design/flcomp/prodbref/306782.htm</a><br />
<br />software: <a rel="nofollow" target="_new" href="http://www.intel.com/design/flcomp/toolbrfs/298073.htm" rel="nofollow">http://www.intel.com/design/flcomp/toolbrfs/298073.htm</a></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-330563">
				<div id="div-comment-330563" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.trikaliotis.net/' rel='external nofollow' class='url'>strik</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20051215-11/?p=32963#comment-330563">
			December 15, 2005 at 10:57 am</a>		</div>

		<p>My USB stick has a write protection switch. I think this is the best policy against wearing out the stick because of excessive writes.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-330583">
				<div id="div-comment-330583" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Michael Moulton</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20051215-11/?p=32963#comment-330583">
			December 15, 2005 at 11:06 am</a>		</div>

		<p>Aren&#8217;t they just EEPROMs?</p>
<p>And how does that memory mapping work?  It seems to me that no matter what kind of creative memory mapping you come up with, you have to have a FAT-equivalent at the beginning of the flash drive.  I would expect that to fail long before any of the other segments of the memory.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-330593">
				<div id="div-comment-330593" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">BryanK</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20051215-11/?p=32963#comment-330593">
			December 15, 2005 at 11:14 am</a>		</div>

		<p>Michael:  The memory mapping makes it so that the FAT-equivalent that&#8217;s at the &quot;beginning&quot; of the drive isn&#8217;t actually at the physical beginning of the drive.  The sectors that the OS sees are different than the sectors on the flash chips.</p>
<p>It&#8217;s like virtual memory: process memory can be moved around in physical RAM at will by the OS, as long as it keeps the page tables for that process updated.  The page tables are a layer of indirection between the virtual addresses used by the process&#8217;s code and the physical addresses sent out the memory bus.</p>
<p>Likewise, there&#8217;s probably a virtual-sector to physical-sector mapping table somewhere in the flash drive&#8217;s firmware, that the firmware keeps up to date.</p>
<p>About flash drives being just EEPROMs: I don&#8217;t believe so, but I don&#8217;t know for sure.  I think the number of write-erase cycles that a typical EEPROM can do is smaller than the number of write-erase cycles that a typical Flash chip can do; but again, that&#8217;s possibly-out-of-date information.  I don&#8217;t know for sure.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-330603">
				<div id="div-comment-330603" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">vince</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20051215-11/?p=32963#comment-330603">
			December 15, 2005 at 11:14 am</a>		</div>

		<p>Umm.. shouldn&#8217;t the OS&#8217;s disk cache help majorly with this issue?</p>
<p>Or does MS mount flash-disks synchronously?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-330613">
				<div id="div-comment-330613" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">BryanK</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20051215-11/?p=32963#comment-330613">
			December 15, 2005 at 11:15 am</a>		</div>

		<p>Oh, wait, I see what you&#8217;re saying:  No matter how you do it in the FS code, you still have at least one portion that changes fairly frequently.</p>
<p>Maybe the FS code moves the FAT structure around?</p>
<p>I&#8217;m not entirely sure on that one though, either.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-330623">
				<div id="div-comment-330623" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">RevMike</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20051215-11/?p=32963#comment-330623">
			December 15, 2005 at 11:35 am</a>		</div>

		<p>The rewrite problem is why I don&#8217;t use flash based memory.  Nope, I&#8217;m building thumb drives using hand wound ferrous core.  My first 16K unit is about the size of a large dictionary so I can&#8217;t plug it directly into the usb port.  Instead I use a usb extension cable.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-330633">
				<div id="div-comment-330633" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.timestreamtech.com/' rel='external nofollow' class='url'>Michael Dwyer</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20051215-11/?p=32963#comment-330633">
			December 15, 2005 at 11:49 am</a>		</div>

		<p>Compact Flash devices have wear-leveling built in.  On top of emulating an ATA drive, they also shuffle blocks around to try to keep the wear level across the memory device.  They will relocate blocks that become dead. So, even if you continuously write one byte in the same location, on the actual physical flash, that block might move all over the device.</p>
<p>I was stunned to see the myriad differences between similarly labeled CF devices.  I&#8217;m told they use second-rate FLASH chips and just use the wear-leveling and defect tracking systems to work around it.  So, even if your have 512MB of space on the card, only a fraction of that could be available.</p>
<p>Of course, nobody documents their wear-leveling schemes, so I couldn&#8217;t tell you which one was better or worse.  When I was doing embedded linux work, our solution was to limit writes to the disk as much as possible &#8212; no swap space, for one.</p>
<p>The other trick is to mount filesystems with &#8216;noatime&#8217; &#8212; which turns off some of the filesystem metadata updating &#8212; specifically, it no longer updates the &#8216;last accessed&#8217; time.  This setting is useful in non-flash environments because it makes read-only operations faster.  Web servers, for instance, should probably serve content from filesystems mounted noatime.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-330643">
				<div id="div-comment-330643" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Dave</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20051215-11/?p=32963#comment-330643">
			December 15, 2005 at 11:55 am</a>		</div>

		<p>&quot;Umm.. shouldn&#8217;t the OS&#8217;s disk cache help majorly with this issue? &quot;</p>
<p>Nope. Flash drives are removable media, and by default Windows assumes you will be capricious and yank them out without using the &quot;Safely Remove Device&quot; feature. So, it uses a write-through policy rather than buffering writes and doing them in batches. That way the data is always consistent unless you yank it while an app is in the midst of a write.</p>
<p>If you like to live dangerously, you can go into Device Manager and change the policy for the flash drive to &quot;Optimize for performance&quot;. After that you&#8217;d better always use the Safely Remove Device feature or be prepared to kiss your data goodbye.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-330663">
				<div id="div-comment-330663" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Mark Brown</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20051215-11/?p=32963#comment-330663">
			December 15, 2005 at 12:19 pm</a>		</div>

		<p>USB flash drives will actually do wear levelling which does greatly mitigate against the wear and tear &#8211; you won&#8217;t constantly be doing erase cycles on the same flash block.</p>
<p>Linux has JFFS2 in the standard kernel and YAFFS too (can&#8217;t remember if that is merged or not) both of which are flash-specific. However, you still need to pay attention to what you&#8217;re doing in your application &#8211; it&#8217;s only possible to mitigate against wear problems, not eliminate them.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-330703">
				<div id="div-comment-330703" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Wound</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20051215-11/?p=32963#comment-330703">
			December 15, 2005 at 1:24 pm</a>		</div>

		<p>At about &#163;30 for a half gig pen drive, I&#8217;m not going to lose too much sleep over this.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-330713">
				<div id="div-comment-330713" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">popester</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20051215-11/?p=32963#comment-330713">
			December 15, 2005 at 1:40 pm</a>		</div>

		<p>I dunno, I end up losing all my USB drives before they could possibly die&#8230;.</p>
<p>(Maybe that&#8217;s why I&#8217;ve stopped buying them.)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-330723">
				<div id="div-comment-330723" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">mikeb</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20051215-11/?p=32963#comment-330723">
			December 15, 2005 at 1:42 pm</a>		</div>

		<blockquote><p>
  &gt; At about &#163;30 for a half gig pen drive, I&#8217;m not going to lose too much sleep over this. &lt;&lt;</p>
<p>As with pretty much all media, the problem with media loss is not that you have to replace the media.</p>
<p>The problem is the data that&#8217;s on the media (backup, backup, backup).</p>
<p>Although if your &#163;30 flash drive quit after only a couple days because it had a limit of ~10000 write cycles, you&#8217;d probably lose your temper, if not sleep.
</p></blockquote>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-330743">
				<div id="div-comment-330743" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Alex</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20051215-11/?p=32963#comment-330743">
			December 15, 2005 at 2:18 pm</a>		</div>

		<p>As alluded to by numerous people, &quot;flash&quot; is a wide ranging term.  Flash is a specific type of memory, different than EEPROM, but with similar characteristics.</p>
<p>At the lowest level, you have flash memory chips.  Flash chips will wear out if you write to the same sector.</p>
<p>So people do &quot;something&quot; to wear-level.</p>
<p>In the case of removable flash media, there&#8217;s a controller of some sort that provides some sort of abstract access to the flash disks themselves.  CompactFlash has 3 distinct access modes, with the low level being simple &quot;read/write this memory address&quot;, and the high level being &quot;I&#8217;m an IDE hard drive!&quot;</p>
<p>In the case of embedded devices running off of flash that&#8217;s soldered on board (cellphones are the prime example), the wear leveling is usually handled in software.  Flash filesystems are available for most all Real Time Operating Systems, and I imagine they&#8217;re also available seperately.  When you configure these flash filesystems, you tell it the memory address of the flash, type of flash, etc etc.</p>
<p>Linux has the &quot;jffs2&quot; filesystem &#8212; a journaling flash filesystem, included in the kernel now.</p>
<p>Now, if you&#8217;re running normal operating systems off of CompactFlash (or similar media), you&#8217;re in danger mode.  Non-embedded Windows is really dangerous.  Linux and Embedded Windows variants will let you turn off all swap files and control the processes running on the flash, but you&#8217;ve still got to make sure that there&#8217;s nothing on the disk that can wear out the flash in the operational time that you&#8217;ve got planned for the device.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-330763">
				<div id="div-comment-330763" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Mike Dunn</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20051215-11/?p=32963#comment-330763">
			December 15, 2005 at 3:01 pm</a>		</div>

		<p>The first thing I thought when I saw the Super-Fetch(tm) demo was &quot;won&#8217;t that wear out the USB drive more quickly?&quot;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-330783">
				<div id="div-comment-330783" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Nate</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20051215-11/?p=32963#comment-330783">
			December 15, 2005 at 3:28 pm</a>		</div>

		<p>If you can get past the idiots then this thread over at ars is related. <a rel="nofollow" target="_new" href="http://episteme.arstechnica.com/groupee/forums/a/tpc/f/99609816/m/521006306731/r/620006706731#620006706731" rel="nofollow">http://episteme.arstechnica.com/groupee/forums/a/tpc/f/99609816/m/521006306731/r/620006706731#620006706731</a></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-330813">
				<div id="div-comment-330813" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Jon</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20051215-11/?p=32963#comment-330813">
			December 15, 2005 at 6:36 pm</a>		</div>

		<p>You have to remember there&#8217;s two types of flash, NAND and NOR. StrataFlash is a NOR memory type, which looks more like RAM. It has usually 10k-100k erase cycles, is highly reliable, has fast read times, and erase times in the seconds. You rarely see people using NAND in anything over 1Gbit/chip. NOR is used for firmware and booting, say Pocket PC.</p>
<p>Flash drives use NAND, because it&#8217;s cheap and high-density. Those have 100k-1M erase cycles, fast read and write, except they&#8217;re sequential read, usually comes with bad blocks, and tends to flip bits by itself (bit error rates at more than 1%). Anything that uses NAND uses a controller and a bad-block reallocation algorithm. While you&#8217;re doing that, you might as well do wear leveling. NAND is used in CF, SD and all those bulk storage methods.</p>
<p>So USB drives basically always have wear leveling. If you assume, maybe a 5 MByte/sec transfer rate, you can easily show that it will take more than a year of waiting to wear out a USB memory drive.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-330823">
				<div id="div-comment-330823" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.hexblog.com' rel='external nofollow' class='url'>Ilfak Guilfanov</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20051215-11/?p=32963#comment-330823">
			December 15, 2005 at 7:07 pm</a>		</div>

		<p>Usually CompactFlash and similar media use simple file systems like FAT or FAT32. If you run a program which does not create any files in the current directory/drive then there is no danger.</p>
<p>These file systems have no notion of &#8216;last accessed&#8217; or similar frequently modified fields, so the OS will not update the card if not really necessary&#8230;<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-330863">
				<div id="div-comment-330863" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Abhijit</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20051215-11/?p=32963#comment-330863">
			December 15, 2005 at 8:01 pm</a>		</div>

		<p>Have you guys checked out <a rel="nofollow" target="_new" href="http://www.u3.com/?" rel="nofollow"></a><a href="http://www.u3.com/" rel="nofollow">http://www.u3.com/</a>? Go figure :-)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-330883">
				<div id="div-comment-330883" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Mr. Ed</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20051215-11/?p=32963#comment-330883">
			December 15, 2005 at 8:15 pm</a>		</div>

		<p>PE-built OS running (read-only) on the first USB memory drive<br />
<br />+ a second USB memory drive for storing your data<br />
<br />= the answer<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-330893">
				<div id="div-comment-330893" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Stu</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20051215-11/?p=32963#comment-330893">
			December 15, 2005 at 10:03 pm</a>		</div>

		<p>I just avoid all this and use a 12GB 2.5&quot; HDD in a USB 2.0 enclosure. Total cost, about &#163;25 from ebay (~$60). Faster transfer rates, loads more space, much less of a wearing out problem.</p>
<p>Also, XP will autorun a USB HDD, but not a USB removable drive, which is great because I set mine up to autorun a nice little menu program for running my USB apps.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-330903">
				<div id="div-comment-330903" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Nandman Diamond</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20051215-11/?p=32963#comment-330903">
			December 15, 2005 at 10:47 pm</a>		</div>

		<blockquote><p>
  Note that my information about the number of<br />
  <br />&gt; write cycles of flash memory is pretty old.</p>
<p>Actually it isn&#8217;t.  I was about to nitpick your statement &quot;Originally measured in the thousands&quot; but then remembered you were talking about USB drives.  Those are not old.  Rewrite limits on flashable memory were originally measured in hundreds if not lower, but those predated USB.</p>
<p>Thursday, December 15, 2005 10:57 AM by strik<br />
  <br />&gt; My USB stick has a write protection switch.</p>
<p>Oh, where did you get that?  I used to diligently remove write rings from tapes after making backups in order to maximize the possibility that backups would still be available when needed, and I&#8217;ve always missed write protection features in external drives.</p>
<p>For that matter I should miss write protection in internal drives too, since Linux even occasionally writes to a partition that&#8217;s explicitly mounted as read only.  (Yeah, Linux reads a journal and knows how to interpret the contents.  Linux should be content to interpret the journal contents and retrieve files appropriately, without writing when told not to write.)</p>
<p>Thursday, December 15, 2005 11:55 AM by Dave<br />
  <br />&gt; If you like to live dangerously, you can go<br />
  <br />&gt; into Device Manager and change the policy<br />
  <br />&gt; for the flash drive to &quot;Optimize for<br />
  <br />&gt; performance&quot;. After that you&#8217;d better always<br />
  <br />&gt; use the Safely Remove Device feature or be<br />
  <br />&gt; prepared to kiss your data goodbye.</p>
<p>If you like to live dangerously, you can go into Device Manager and change the policy to disable the cache and always do write-through, AND always use the Safely Remove Device feature, AND still sometimes kiss your data goodbye.  A not-quite example, because this one recovered everything:<br />
  <br /><a rel="nofollow" target="_new" href="http://www.geocities.jp/hitotsubishi/chkdsk-2.txt" rel="nofollow">http://www.geocities.jp/hitotsubishi/chkdsk-2.txt</a></p>
<p>Thursday, December 15, 2005 10:03 PM by Stu<br />
  <br />&gt; Also, XP will autorun a USB HDD, but not a<br />
  <br />&gt; USB removable drive,</p>
<p>Huh?  In my experience XP and 2003 autorun everything from 500GB HDDs to 32MB removable drives, except when TweakUI has been used to prevent it.  (Yes I thank Mr. Chen again for TweakUI.  By the way where&#8217;s the x64 version&#8230;)
</p></blockquote>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-330913">
				<div id="div-comment-330913" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Stu</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20051215-11/?p=32963#comment-330913">
			December 15, 2005 at 11:14 pm</a>		</div>

		<p>And while we&#8217;re on the subject of flash wearing out, I once attempted to use an old compactflash card to transfer data from an old Windows 95 laptop to a modern XP machine.<br />
<br />The card worked fine in 95, it also worked fine in XP, but if XP formatted it, 95 could not see XP files, but could create it&#8217;s own, which would corrupt the entire drive as seen by XP. If 95 formatted it, it was seen as corrupt by XP. After a bit of investigating I found that 95 would report a bad media descriptor every time scandisk was run, even if it had just &quot;fixed&quot; it.<br />
<br />I then bought a new CF card which worked flawlessly&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-330933">
				<div id="div-comment-330933" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">PJ</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20051215-11/?p=32963#comment-330933">
			December 16, 2005 at 4:38 am</a>		</div>

		<p>People can, because more and more programmers are getting their act together and writing software which doesn&#8217;t write to &quot;my documents&quot; or spam the registry, and some people have started to compile it: <a rel="nofollow" target="_new" href="http://portablefreeware.com/" rel="nofollow">http://portablefreeware.com/</a><br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-330973">
				<div id="div-comment-330973" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">John C. Kirk</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20051215-11/?p=32963#comment-330973">
			December 16, 2005 at 9:08 am</a>		</div>

		<p>I think it depends a lot on the type of program. I&#8217;ve found that USB sticks are very useful for storing service packs etc., and I will normally run those programs off the stick (rather than copying them to the hard drive first) since they use the hard drive to create any temp files. On the other hand, I wouldn&#8217;t want to run Word off one, mainly due to the speed.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-331073">
				<div id="div-comment-331073" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Nate Silva</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20051215-11/?p=32963#comment-331073">
			December 16, 2005 at 12:15 pm</a>		</div>

		<p>While this is interesting to know, it doesn&#8217;t matter. Flash drives are cheap! If you get a year&#8217;s use out of your $25 flash stick, it was probably worth it.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-331153">
				<div id="div-comment-331153" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Anonymous Coward</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20051215-11/?p=32963#comment-331153">
			December 16, 2005 at 4:51 pm</a>		</div>

		<p>Some USB memory drives can handle only 5-10 write cycles: <a rel="nofollow" target="_new" href="http://www.mways.co.uk/rom_use_only_usb_key.html" rel="nofollow">http://www.mways.co.uk/rom_use_only_usb_key.html</a></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-331193">
				<div id="div-comment-331193" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">asdf</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20051215-11/?p=32963#comment-331193">
			December 16, 2005 at 6:44 pm</a>		</div>

		<p>Is there a noatime equivalent for windows?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-331273">
				<div id="div-comment-331273" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Stephen Jones</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20051215-11/?p=32963#comment-331273">
			December 18, 2005 at 4:45 pm</a>		</div>

		<p>My last flash drive gave up the Ghost after only two wash cycles in my shirt pocket.</p>
<p>Does Raymond know if the MBF increases if I change the setting to use cold water only?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-331263">
				<div id="div-comment-331263" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">David Walker</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20051215-11/?p=32963#comment-331263">
			December 18, 2005 at 12:58 pm</a>		</div>

		<p>Even with wear leveling, isn&#8217;t the map that implements the logical-to-physical mapping stored in the flash drive?  And wouldn&#8217;t that need to be rewritten often?  As often as anything else on the drive?</p>
<p>That&#8217;s sort of what BryanK is saying with &quot;you still have at least one portion that changes fairly frequently. Maybe the FS code moves the FAT structure around?&quot;  Moving the FAT structure around still needs to write the FAT structure to the disk, in case the user yanked it out.  </p>
<p>It *seems* that there will have to be one portion that changes very frequently. </p>
<p>I happened to be debugging some problems for a friend lately, and I happened to have Windows 2000 SP4, which he hadn&#8217;t installed yet, on my 512M keychain drive.  (I also have WinXP SP2 on the same drive.) </p>
<p>Does that make me a geek?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-331573">
				<div id="div-comment-331573" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://dashslot.co.uk' rel='external nofollow' class='url'>Mat Hall</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20051215-11/?p=32963#comment-331573">
			December 20, 2005 at 10:21 am</a>		</div>

		<p>adf: &quot;Is there a noatime equivalent for windows?&quot;</p>
<p>Yes.  At a command prompt type:</p>
<p>fsutil behaviour set disablelastaccess 1</p>
<p>or modify</p>
<p>HKLMSYSTEMCurrentControlSetControlFileSystemNtfsDisableLastAccessUpdate</p>
<p>and voila, no &quot;last accessed time&quot; tomfoolery.  (It&#8217;s not very flexible &#8212; either it&#8217;s on for all NTFS drives, or it&#8217;s off for all of them &#8212; but it&#8217;s better than nothing.)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-332023">
				<div id="div-comment-332023" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Norman Diamond</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20051215-11/?p=32963#comment-332023">
			December 20, 2005 at 9:52 pm</a>		</div>

		<p>Hmm, fsutil command eh, let&#8217;s see what it can do&#8230;</p>
<p>fsutil /?</p>
<p>It did give me some help (thanks), after first blaming me because it wasn&#8217;t aware of Microsoft&#8217;s conventions on asking for help.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-332743">
				<div id="div-comment-332743" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Yuhong Bao</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20051215-11/?p=32963#comment-332743">
			December 22, 2005 at 2:52 pm</a>		</div>

		<p>I see some references to the flash file system in the MS-DOS 6.22 documentation.</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>