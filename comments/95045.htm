<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (10)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1 parent" id="comment-1278455">
				<div id="div-comment-1278455" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Clockwork-Muse</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20161229-00/?p=95045#comment-1278455">
			December 29, 2016 at 11:07 am</a>		</div>

		<p>Well, you _could_ &#8230;. it&#8217;d just take you about 19 years to do it&#8230;</p>
<p>2 ^ 32 characters.<br />
5 characters per average word, plus 1 space (ignoring punctuation).<br />
200-230 word-per-minute average reading comprehension speed<br />
60 minutes in a hour<br />
8 &#8216;working&#8217; hours per day.<br />
365.25 days per year.</p>
<p>-or-<br />
(2 ^ 32) / (5 + 1) / 215 / 60 / 8 / 365.25 = ~19 years</p>
<p>&#8230; so it&#8217;s conceivable that somebody whose job was mostly reading/collating paperwork has read that many words over their career (probably longer than 20 years, though).</p>

		
				</div>
		<ol class="children">
		<li class="comment odd alt depth-2" id="comment-1279215">
				<div id="div-comment-1279215" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://nbtparse.org' rel='external nofollow' class='url'>Kevin</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20161229-00/?p=95045#comment-1279215">
			January 3, 2017 at 1:28 pm</a>		</div>

		<p>Raymond, I think you have to bring back the Nitpicker&#8217;s Corner for this one!</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment even thread-odd thread-alt depth-1 parent" id="comment-1278505">
				<div id="div-comment-1278505" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ivan k</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20161229-00/?p=95045#comment-1278505">
			December 30, 2016 at 4:48 am</a>		</div>

		<p>Some install program surprisingly (to me) asked me if it could just go ahead and just change maxpath. Hahaha&#8230; No.</p>

		
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-mike-dimmick odd alt depth-2" id="comment-1278525">
				<div id="div-comment-1278525" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Mike+Dimmick' rel='external nofollow' class='url'>Mike Dimmick</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20161229-00/?p=95045#comment-1278525">
			December 30, 2016 at 7:35 am</a>		</div>

		<p>It&#8217;s possible your installer was trying to change the group policy setting that enables OS support for longer-than-MAX_PATH paths in legacy APIs. For this to work, a) you must be running the Anniversary Update (build 14393 or later), b) the Group Policy has to be changed and c) programs have to opt-in via an app manifest. .NET apps targeting framework version 4.6.1 or earlier *also* have to opt in via a setting in their .exe.config files (before 4.6.2, the .NET Framework itself checked for path-too-long and threw an exception without asking the OS what it thought). See <a href="https://blogs.msdn.microsoft.com/jeremykuhne/2016/07/30/net-4-6-2-and-long-paths-on-windows-10/" rel="nofollow">https://blogs.msdn.microsoft.com/jeremykuhne/2016/07/30/net-4-6-2-and-long-paths-on-windows-10/</a></p>
<p>Of course it would be incredibly bad if installers changed that setting for you without understanding what they were doing. It&#8217;s behind a group policy setting because it&#8217;s a bit incomplete &#8211; some parts of CMD.EXE reportedly work properly, others don&#8217;t.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment byuser comment-author-alegrigoriev even thread-even depth-1" id="comment-1278515">
				<div id="div-comment-1278515" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/alegr1' rel='external nofollow' class='url'>alegr1</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20161229-00/?p=95045#comment-1278515">
			December 30, 2016 at 7:28 am</a>		</div>

		<p>But how do I open those ridiculously long log files?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1278535">
				<div id="div-comment-1278535" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Adrian</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20161229-00/?p=95045#comment-1278535">
			December 30, 2016 at 8:08 am</a>		</div>

		<p>It seems there are other places that the standard static control text size could be limited.  For example, when painting, it presumably uses something like TextOutW, which appears to have an undocumented limit of 32,767 WCHARs.  I suppose it might use DrawTextW, but I expect that would issue multiple TextOutW (or equivalent) calls for multiple lines, so it might be unbounded in total length, but each line would be bounded by the 32K character limit.</p>
<p>Yeah, lines of 32K-character lines in a static text control are highly unlikely.  On the other hand, you could have a tiny font, a window that spans multiple super-high DPI monitors, and a bunch of those WCHARs could be surrogate pairs and combining characters that take little to no horizontal space.  Just saying.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1278755">
				<div id="div-comment-1278755" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">640k</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20161229-00/?p=95045#comment-1278755">
			January 1, 2017 at 12:19 pm</a>		</div>

		<p>Simple math dictates, that when 128-bit windows comes, we will be able to store 2^64 bytes of text in static controls.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-jeremytais odd alt thread-odd thread-alt depth-1" id="comment-1279095">
				<div id="div-comment-1279095" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/SimonRev' rel='external nofollow' class='url'>SimonRev</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20161229-00/?p=95045#comment-1279095">
			January 3, 2017 at 8:12 am</a>		</div>

		<p>I once used a bit of software that created files that directly corresponded with object names in the project.  This same software helpfully tried to make sure that paths never exceeded 200 bytes (not sure where they got the 200 bytes from).</p>
<p>The upshot was that it was very easy to create projects on one machine that were not portable to another machine because the resulting paths were too long on the 2nd machine.  (It also helpfully refused to open such projects with an &#8220;invalid name&#8221; error).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1279166">
				<div id="div-comment-1279166" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">DWalker07</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20161229-00/?p=95045#comment-1279166">
			January 3, 2017 at 10:36 am</a>		</div>

		<p>It&#8217;s funny that someone assumes that a Microsoft PR person would have the technical expertise to write a blog post like the linked post.  It&#8217;s possible, but after reading that post, &#8220;PR person&#8221; is not the first thought that would come to me&#8230;.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1279257">
				<div id="div-comment-1279257" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Zenith</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20161229-00/?p=95045#comment-1279257">
			January 4, 2017 at 11:17 am</a>		</div>

		<p>Too late to ask this, I suppose, but does that have anything to do with how Labels have their text saved to a resx file in Visual Studio?  I have a habit of deleting that worthless file as all it ever contained was a location for my timers and other non-controls.  And then, once, I had a long block of text in a Label that went poof when I deleted that file.  Apparently, at some arbitrary length, VS moves Label text out of the form designer&#8217;s InitializeComponent() block and into that resx file.  I&#8217;ve tried everything that I could find to stop this from happening but there doesn&#8217;t seem to be any way to do so without assigning the text elsewhere or using a disabled multiline TextBox instead.</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>