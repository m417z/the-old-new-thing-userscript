<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (27)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-412663">
				<div id="div-comment-412663" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Tom M</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060823-00/?p=29993#comment-412663">
			August 23, 2006 at 10:39 am</a>		</div>

		<p>So the problem was that ERRORLEVEL was 0 at the point the batch script was loaded?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-412683">
				<div id="div-comment-412683" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Mark</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060823-00/?p=29993#comment-412683">
			August 23, 2006 at 10:51 am</a>		</div>

		<p>No, at the point the line &#8211; which spills onto multiple lines by using ( ) &#8211; was read. &nbsp;Think of it as:</p>
<p> &nbsp;for &#8230; do IsVarMap.exe &#8230; &amp; echo %ERRORLEVEL%</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-412693">
				<div id="div-comment-412693" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Mike</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060823-00/?p=29993#comment-412693">
			August 23, 2006 at 11:04 am</a>		</div>

		<p>Are &quot;procedures&quot; inlined/precompiled too (I suspect not)? If not, could one potential solution be to &quot;call&quot; a &quot;procedure&quot; (a label) in the same batch file, assuming this is for NT5 or later?</p>
<p>In a way, it reminds me of the pattern of C++ std::for_each, where you give start, end and a function to call for each iteration.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-412703">
				<div id="div-comment-412703" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">KJK::Hyperion</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060823-00/?p=29993#comment-412703">
			August 23, 2006 at 11:27 am</a>		</div>

		<p>Mike: &quot;call :label&quot; effectively reparses the batch file and resets the state &#8211; even the %0, %1, &#8230; constants are reset. You even have to call &quot;setlocal&quot; at the beginning of a procedure, or your variables are going to spill into the caller&#8217;s context</p>
<p>So, yes, you can &quot;call :label &lt;arguments&gt;&quot; in a loop, even recursively, but I don&#8217;t recommend it, as string escaping gets funky across a call</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-412713">
				<div id="div-comment-412713" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Arlie Davis</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060823-00/?p=29993#comment-412713">
			August 23, 2006 at 11:28 am</a>		</div>

		<p>Must&#8230; &nbsp;destroy&#8230; &nbsp;CMD.EXE&#8230;</p>
<p>Destroy&#8230;</p>
<p>too late&#8230;<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-412743">
				<div id="div-comment-412743" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">dave</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060823-00/?p=29993#comment-412743">
			August 23, 2006 at 12:03 pm</a>		</div>

		<p>The issue arises when you start programming in a language not originally intended for programming.</p>
<p>&#8220;Proper&#8221; programming languages tend to be a little clearer about the difference between lexical processing and command interpretation. &nbsp;And anyone who&#8217;s used a decent macrogenerator (not the C preprocessor) gets the concept.</p>
<p>But command languages originally designed for people to type tend to create a little more confusion.</p>
<div class="post">[<i>Very true. I doubt anybody actually enjoys writing batch files. It&#8217;s not so much a programming language as a script. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-412753">
				<div id="div-comment-412753" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://deadnode.org/sw/' rel='external nofollow' class='url'>James</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060823-00/?p=29993#comment-412753">
			August 23, 2006 at 12:16 pm</a>		</div>

		<p>For extra pain &#8211; er, credit &#8211; try a .cmd script which generates registry entries (with variable substitution) which will then be executed. Some of them, via cmd.exe. Oh, you need to pipe variable stuff into another command while you&#8217;re doing it.</p>
<p>(Oh, the joys of building a setup which partitions, formats and installs a system automatically &#8211; with different partitioning schemes for different arguments, and different applications installed depending on the machine&#8217;s DNS entry!)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-412763">
				<div id="div-comment-412763" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">OrsoYoghi</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060823-00/?p=29993#comment-412763">
			August 23, 2006 at 12:26 pm</a>		</div>

		<p>I&#8217;m missing something..</p>
<p>why is SETLOCAL ENABLEDELAYEDEXPANSION required ?<br />
<br />I mean, cmd.exe can already tell between the twos because all old code is %WRITTENTHISWAY% while code using the new expansion style is !WRITTENTHISWAY! &#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-412773">
				<div id="div-comment-412773" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">pcooper</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060823-00/?p=29993#comment-412773">
			August 23, 2006 at 12:43 pm</a>		</div>

		<p>OrsoYoghi: I assume that&#8217;s for backward compatibility with old batch files that assumed that text between exclamation points was just text between exclamation points. You can&#8217;t just suddenly change the syntax of the file without requiring people to opt into the new functionality.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-412783">
				<div id="div-comment-412783" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Jonathan</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060823-00/?p=29993#comment-412783">
			August 23, 2006 at 12:49 pm</a>		</div>

		<p>@OrsoYoghi: Yes, but what if old code depended on !STUFF_WRITTEN_LIKE_THIS! being treated as a literal string? The only backwords-compatible way is to use the old method with an option to enable the new one. </p>
<p>(Then again, couldn&#8217;t you enable the new method by default in .cmd files, and leave .bat files alone?)</p>
<div CLASS=post>[<i>Making it on by default for .cmd files would break compatibility with NT4 .cmd files (which expected ! to mean !.) -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-412793">
				<div id="div-comment-412793" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Jonathan</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060823-00/?p=29993#comment-412793">
			August 23, 2006 at 12:51 pm</a>		</div>

		<p>I guess I was too slow. :) Sorry pcooper.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-412893">
				<div id="div-comment-412893" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Stu</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060823-00/?p=29993#comment-412893">
			August 23, 2006 at 5:47 pm</a>		</div>

		<p>That&#8217;s interesting; the CMD team seem to think that it&#8217;s ok to implement features that break compatability, as long as you make them opt-in. <br />The rest of Microsoft just uses &#8220;it will break back-compatability&#8221; as a reason not to improve things&#8230;</p>
<div CLASS=post>[<i>cmd.exe is a much more tightly-scoped problem. Command scripts communicate with other command scripts only through environment variables and the command line. Command scripts can&#8217;t inject themselves into other command scripts. There are no &#8220;cmd.exe plug-ins&#8221;. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-412903">
				<div id="div-comment-412903" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.ookii.org' rel='external nofollow' class='url'>Sven Groot</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060823-00/?p=29993#comment-412903">
			August 23, 2006 at 6:17 pm</a>		</div>

		<p>I&#8217;d just like to say, thank God for Monad. :)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-412913">
				<div id="div-comment-412913" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blogs.msdn.com/myocom' rel='external nofollow' class='url'>Mark Yocom</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060823-00/?p=29993#comment-412913">
			August 23, 2006 at 8:30 pm</a>		</div>

		<p>[Very true. I doubt anybody actually enjoys writing batch files. It&#8217;s not so much a programming language as a script. -Raymond]</p>
<p>Oh, I dunno &#8211; I enjoy writing them. &nbsp;CMD is like your weird Uncle Harold. &nbsp;He&#8217;s fun to be around, despite his quirks.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-412933">
				<div id="div-comment-412933" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://barrkel.blogspot.com/' rel='external nofollow' class='url'>Barry Kelly</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060823-00/?p=29993#comment-412933">
			August 23, 2006 at 9:23 pm</a>		</div>

		<p>Ah yes, yet another reason I use bash / rxvt / Cygwin.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-412943">
				<div id="div-comment-412943" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Cooney</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060823-00/?p=29993#comment-412943">
			August 23, 2006 at 9:31 pm</a>		</div>

		<p>Yes, thank god for bash. cmd.exe isn&#8217;t a script so much as a juiced up command.com. No wonder people hate the command line.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-msdnarchive even thread-even depth-1" id="comment-412953">
				<div id="div-comment-412953" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">MSDN Archive</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060823-00/?p=29993#comment-412953">
			August 24, 2006 at 2:22 am</a>		</div>

		<blockquote><p>
  For extra pain &#8211; er, credit &#8211; try a .cmd<br />
  <br />&gt; script which generates registry entries<br />
  <br />&gt; (with variable substitution) which will then<br />
  <br />&gt; be executed. Some of them, via cmd.exe. Oh,<br />
  <br />&gt; you need to pipe variable stuff into another<br />
  <br />&gt; command while you&#8217;re doing it. </p>
<p>James, it sounds like you&#8217;re using a batch file to write .reg files and execute them. It&#8217;s much easier to use &quot;%windir%system32reg.exe&quot; from a batch file instead.
</p></blockquote>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-412963">
				<div id="div-comment-412963" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://deadnode.org/sw/' rel='external nofollow' class='url'>James</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060823-00/?p=29993#comment-412963">
			August 24, 2006 at 5:19 am</a>		</div>

		<p>Geffner: I am using reg, rather than creating .reg files; the &#8216;will then be executed&#8217; refers to the entries themselves being RunOnceEx entries which get run after the second reboot. The stuff I&#8217;m piping into another command is a diskpart script, not a set of registry entries.</p>
<p>Nothing too painful, just a fiddly set of scripts to tie all the partitioning and installation together. Especially now we have two virtual machines and a dual-boot Linux setup to contend with, and could be running anywhere from the labs (a dozen new user accounts created/deleted each day, permanent Net connection, everything from AutoCAD to Visual Studio running) to staff laptops (one user, usually offline).</p>
<p>A bit more work upfront, but since the hardware&#8217;s all heterogenous, a single &quot;install&quot; command with literally everything else automated saves enough staff time to justify it quite easily.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-412993">
				<div id="div-comment-412993" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">dave</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060823-00/?p=29993#comment-412993">
			August 24, 2006 at 9:07 am</a>		</div>

		<p>The real question is, of course, why sane people bother trying to program in a jumped-up MS-DOS &#8216;batch&#8217; (which of course isn&#8217;t a batch system at all) language when they could just install Perl.</p>
<p>Perl has the benefit of bizarre syntax, thus giving ex-batch-programmers a warm and fuzzy feeling that there&#8217;s something else for them to be puzzled over, but at the same time actually having the capabilities one needs.</p>
<p>;-)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-413093">
				<div id="div-comment-413093" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Batchman</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060823-00/?p=29993#comment-413093">
			August 24, 2006 at 10:50 am</a>		</div>

		<p>Dave: Why don&#8217;t you consider ms-dos batch files as a batch system at all?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-413273">
				<div id="div-comment-413273" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">mikeb</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060823-00/?p=29993#comment-413273">
			August 24, 2006 at 12:12 pm</a>		</div>

		<blockquote><p>
  &gt; The real question is, of course, why sane people bother trying to program in a jumped-up MS-DOS &#8216;batch&#8217; (which of course isn&#8217;t a batch system at all) language when they could just install Perl. &lt;&lt;</p>
<p>The reason is quite simple &#8211; because the cmd scripts will work without having to bother the user with installing Perl (or whatever other tool).</p>
<p>The real problem with cmd scripting is that the syntax and semantics of the scripting language has been enhanced since the MS-DOS days in an ad-hoc manner rather than designing the language in a more formal manner. &nbsp;At least that&#8217;s what it looks like.</p>
<p>The other big problem (at least for me) is that applications are responsible for parsing command lines instead of having the shell parse the commad line, so it can be a nightmare to convince some tools to accept parameters that contain special characters which need escaping (particularly quotes) that is also acceptable to cmd.exe.<br />
  
</p></blockquote>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-413283">
				<div id="div-comment-413283" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">mikeb</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060823-00/?p=29993#comment-413283">
			August 24, 2006 at 12:22 pm</a>		</div>

		<blockquote><p>
  &gt; The real question is, of course, why sane people bother trying to program in a jumped-up MS-DOS &#8216;batch&#8217; (which of course isn&#8217;t a batch system at all) language when they could just install Perl. &lt;&lt;</p>
<p>The reason is quite simple &#8211; because the cmd scripts will work without having to bother the user with installing Perl (or whatever other tool).</p>
<p>The real problem with cmd scripting is that the syntax and semantics of the scripting language has been enhanced since the MS-DOS days in an ad-hoc manner rather than designing the language in a more formal manner. &nbsp;At least that&#8217;s what it looks like.</p>
<p>The other big problem (at least for me) is that applications are responsible for parsing command lines instead of having the shell parse the commad line, so it can be a nightmare to convince some tools to accept parameters that contain special characters which need escaping (particularly quotes) that is also acceptable to cmd.exe.<br />
  
</p></blockquote>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-413643">
				<div id="div-comment-413643" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">steveg</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060823-00/?p=29993#comment-413643">
			August 25, 2006 at 1:04 am</a>		</div>

		<p>No offence to the cmd team, but MS could&#8217;ve done it &quot;properly&quot; years ago. The big mistake IMHO was NT (3.51) maintained DOS cmd compatibility &#8212; I&#8217;ll let the Win9x family off the hook. Although perhaps the ultimate blame lies with OS2.</p>
<p>It would&#8217;ve been very very useful if shell-level scripting had been built into the Window Manager right from the start (imagine being able to test/manipulate your UI from a script supported by the OS? App.Window[1].Maximise (as an aside it would&#8217;ve been awesome if Noah Webster had had another hobby apart from butchering the english language)).</p>
<p>As for the &quot;just use [perl|cygwin|.*]&quot; argument, it doesn&#8217;t always work in large organisations where introducing a new technology into the production environment is a long slow process requiring meetings of dozens, evaluation committees etc. .bat is very very good compared to facing that rubbish (maybe that&#8217;s only the Australian Govt for you).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-413653">
				<div id="div-comment-413653" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">steveg</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060823-00/?p=29993#comment-413653">
			August 25, 2006 at 1:09 am</a>		</div>

		<p>Before anyone mentions it vba makes a good scripting language not.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-414123">
				<div id="div-comment-414123" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Jules</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060823-00/?p=29993#comment-414123">
			August 28, 2006 at 11:35 am</a>		</div>

		<p>Raymond, your explanation of why this behaviour is the default doesn&#8217;t make sense. &nbsp;You say &#8220;prior to Windows NT, that was the only type of expansion supported by the command interpreter.&#8221; &nbsp;But prior to NT, the command interpreter only supported executing a single command per line read, so the question of when variables were expanded never arose: it happened immediately prior to execution, which also happened to be immediately after reading them. </p>
<p>When the NT interpreter was written, somebody decided that this way was the best way of doing it. &nbsp;I&#8217;m sure that CMD.EXE has always been written in C or some other high-level language, so the complexity of doing it the other way can&#8217;t have been that bad. &nbsp;So I still wonder why this decision went the way it did, when the other way is much more useful.</p>
<div CLASS=post>[<i>It also had to be compatible with OS/2 batch files, and OS/2&#8217;s command interpreter was written in assembly language as I vaguely recall. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-415643">
				<div id="div-comment-415643" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Rexxx</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060823-00/?p=29993#comment-415643">
			August 31, 2006 at 4:00 am</a>		</div>

		<p>OS/2 batch files = Rexx<br />
<br />Quite superior to Batch.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-555513">
				<div id="div-comment-555513" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://maonet.wordpress.com/2007/10/01/using-dos-command-to-auto-pick-todays-wallpaper/' rel='external nofollow' class='url'>Using DOS command to Auto-Pick today&#8217;s wallpaper &laquo; maonet technotes</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060823-00/?p=29993#comment-555513">
			October 2, 2007 at 11:13 am</a>		</div>

		<p>PingBack from <a rel="nofollow" target="_new" href="http://maonet.wordpress.com/2007/10/01/using-dos-command-to-auto-pick-todays-wallpaper/" rel="nofollow">http://maonet.wordpress.com/2007/10/01/using-dos-command-to-auto-pick-todays-wallpaper/</a></p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>