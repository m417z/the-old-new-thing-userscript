<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (11)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-1189454">
				<div id="div-comment-1189454" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Mordachai</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150522-00/?p=45054#comment-1189454">
			May 22, 2015 at 7:14 am</a>		</div>

		<p>Headlines: Microsoft indicates it is a good idea to use SHFileOperation from a service, according to a senior technology expert at the company.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-hankhein odd alt thread-odd thread-alt depth-1" id="comment-1189484">
				<div id="div-comment-1189484" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Henri+Hein' rel='external nofollow' class='url'>Henri Hein</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150522-00/?p=45054#comment-1189484">
			May 22, 2015 at 12:44 pm</a>		</div>

		<p>You made me nervous about using Shell functions from a service at all. What if I need to call SHChangeNotify() because something on a virtual disk changed? Would I need to impersonate each logged-in user and call SHChangeNotify() in that context? I have found that if I don&#39;t use SHChangeNotify(), the user will have to keep hitting F5 to see the changes, and an unwitting user will not know to do that. (What I mean is: I know about it, because I&#39;m looking for the changes, but I assume a normal user would not).</p>
<div class="post">[<em>Impersonation doesn&#39;t help because you&#39;re in the wrong session. If by virtual disk you mean VHD, then that should be picked up automatically because VHDs still generate file system notifications. If by virtual disk you mean virtual folder, then you need some way for your service to tell the clients that changes have occurred, and then the clients can do the SHChangeNotify. -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1189494">
				<div id="div-comment-1189494" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ben Voigt</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150522-00/?p=45054#comment-1189494">
			May 22, 2015 at 12:54 pm</a>		</div>

		<p>@Henri Hein, is the virtual disk mounted in the filesystem, or accessed through a shell namespace extension? &nbsp;In the former case, you can use FindFirstChangeNotification (possibly together with ReadDirectoryChangesW).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-hankhein odd alt thread-odd thread-alt depth-1" id="comment-1189504">
				<div id="div-comment-1189504" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Henri+Hein' rel='external nofollow' class='url'>Henri Hein</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150522-00/?p=45054#comment-1189504">
			May 22, 2015 at 3:29 pm</a>		</div>

		<p>@Raymond: thanks for the tip. &nbsp;It&#39;s a virtual folder (actually mounted as a separate drive letter, but I believe that still puts it in your latter category). &nbsp;Sending the notifications through the user session client makes sense.</p>
<p>@Ben: It&#39;s in the filesystem, but I&#39;m generating the events, not listening for them.</p>
<div class="post">[<em>If it&#39;s a real file system that supports ReadDirectoryChangesW, then you can just raise standard file system events, and Explorer will pick them up. -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-hankhein even thread-even depth-1" id="comment-1189514">
				<div id="div-comment-1189514" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Henri+Hein' rel='external nofollow' class='url'>Henri Hein</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150522-00/?p=45054#comment-1189514">
			May 22, 2015 at 4:56 pm</a>		</div>

		<p>@Raymond: thanks again. &nbsp;I use a 3rd party library for the driver, but I&#39;ll check if they support raising events.</p>
<div class="post">[<em>If they don&#39;t, then apps that call FindFirstChangeNotification are in for a surprise. -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1189524">
				<div id="div-comment-1189524" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150522-00/?p=45054#comment-1189524">
			May 22, 2015 at 6:20 pm</a>		</div>

		<p>Well I can imagine how a VFS could fail to raise any or some events. It would indeed be annoying if they declared themselves incorrectly.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1189534">
				<div id="div-comment-1189534" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Danny</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150522-00/?p=45054#comment-1189534">
			May 24, 2015 at 12:49 pm</a>		</div>

		<p>Microsoft still trying, 2 decades later, to shed off their MSDOS legacy? I mean, if you publish API&#39;s for your OS expect developers to call them from every possible corner, even using the microscope as a nut cracker.</p>
<div class="post">[<em>Not sure how MS-DOS fits into the story. Services and copy hooks didn&#39;t exist in MS-DOS. -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1190614">
				<div id="div-comment-1190614" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Anon</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150522-00/?p=45054#comment-1190614">
			May 26, 2015 at 7:52 am</a>		</div>

		<p>@Danny</p>
<p>The difference between Windows and, say, OSX is that if you do that kind of thing in OSX, you might find your code permanently blacklisted.</p>
<p>You call published APIs according to the published documentation, or you accept the negative consequences of your actions.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1191164">
				<div id="div-comment-1191164" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Danny</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150522-00/?p=45054#comment-1191164">
			May 28, 2015 at 3:49 am</a>		</div>

		<p>@Ray &#8211; [Not sure how MS-DOS fits into the story. Services and copy hooks didn&#39;t exist in MS-DOS. -Raymond</p>
<p>Very simple. MSDOS was the one where u had, as developer, be careful what to call and when, otherwise the OS was very easy to get hung. I mean wasn&#39;t that the whole purpose of Windows operating systems? That if a program does crappy code that results in CPU faults the OS catches those and closes the rogue program, so the OS keeps running? And now this API is still careful documented by you to not be called with some value for its parameters? That&#39;s where the MSDOS legacy fits in my previous comment.</p>
<div class="post">[<em>But there&#39;s no MS-DOS compatibility here, except possibly compatibility with the &quot;MS-DOS way of thinking&quot;. In this case, you&#39;re writing a service. A service is fully capable of screwing up the entire operating system. That&#39;s sort of the point of services. It stands to reason that if you&#39;re writing a service, you have to be very careful. -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1191524">
				<div id="div-comment-1191524" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Danny</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150522-00/?p=45054#comment-1191524">
			May 28, 2015 at 9:58 pm</a>		</div>

		<p>@Ray &#8211; [A service is fully capable of screwing up the entire operating system. That&#39;s sort of the point of services. It stands to reason that if you&#39;re writing a service, you have to be very careful]</p>
<p>I can transform any executable into a service, so the program will run before I login to do his job. Most common example is mail client. I want my mails to be already on my client from the different servers on those different accounts. So you telling me that if I have a faulty mail client, which will NOT run under Admin but merely a restricted user, I still can pawn the OS? Oh boy, so Windows from that perspective still carry the full MSDOS legacy then.</p>
<p>And furthermore, a service is not a driver, to require high privileges, I can have a service for almost anything, and they run under restricted users. Which means your API function we discuss here still will get the OS hairy? boy, oh boy</p>
<div class="post">[<em>To transform an executable into a service, you have to add a <code>Service&shy;Main</code> function that responds to service control messages, and the executable needs to adhere to the special rules that a service must follow. I doubt your mail client has one of those. Now, it&#39;s true that there are people who have written adapters that have their own <code>Service&shy;Main</code> function and tries to convert service control messages into some form of <code>Create&shy;Process</code> and <code>Terminate&shy;Process</code>, and they hope that the executable doesn&#39;t violate any of the rules for services (or if they violate them, that nothing too awful happens). This is the equivalent of building a European-to-US power converter that merely reshapes the plugs without doing any voltage or frequency conversion. If this overheats your lamp and starts a fire, don&#39;t blame the power company. -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1191554">
				<div id="div-comment-1191554" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">ender</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150522-00/?p=45054#comment-1191554">
			May 29, 2015 at 12:53 am</a>		</div>

		<p>@Danny: there&#39;s very little difference between drivers and services actually &#8211; both are managed by the same set of APIs, the main difference is that drivers run in kernel mode, while services run in user mode. And while services often don&#39;t run with system privileges, being able to run that way is one of the points of services.</p>
<p>Some APIs simply aren&#39;t meant to be run in a non-interactive way, or as a system user. This isn&#39;t any different than *nix daemons &#8211; you shouldn&#39;t be using UI toolkits with them either.</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>