<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (56)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-573953">
				<div id="div-comment-573953" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">AB</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071204-00/?p=24313#comment-573953">
			December 4, 2007 at 10:18 am</a>		</div>

		<p>IIRC, on NTFS, if you create a file and then set the EOF pointer to a huge value, you can create a huge file almost instantly.</p>
<p>However, there is a catch &#8211; once you write to any position in the file, all bytes before that position will be physically initialized, resulting in a long wait.</p>
<p>If you have SE_MANAGE_VOLUME_NAME privilege, you can skip the zero-initialization altogether by calling SetFileValidData() API.</p>
<p>This way, the file creation will be truly instant, and the file will contain whatever was written in those clusters before the file was created.</p>
<p>(also see FSCTL_SET_ZERO_DATA ioctl code)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-573973">
				<div id="div-comment-573973" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://dataland.wordpress.com/' rel='external nofollow' class='url'>Dataland</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071204-00/?p=24313#comment-573973">
			December 4, 2007 at 10:39 am</a>		</div>

		<p>AB,</p>
<p>As you have mentioned, a large file can be created much faster, but doing so does not exercise much of the File IO APIs. &nbsp;I mean, if you are going to test that a 16TB can be properly created, you will really want to write the whole dang thing. And then, read the whole dang thing, and while you are at it, you probably want to run a bunch of other File APIs to make sure that the 16TB file works just like a 16KB one. &nbsp; So, yep there are shortcuts but these (at least IMHO) defeat the purpose of what they were trying to do.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-573993">
				<div id="div-comment-573993" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Bobaloo</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071204-00/?p=24313#comment-573993">
			December 4, 2007 at 10:43 am</a>		</div>

		<p>You know, I&#8217;ve finally got to ask: What the heck is this stupid coderblogs thing that keeps cropping up in blog comments? &nbsp;Are your posts being duplicated with or without your permission? &nbsp;If without, why isn&#8217;t someone at Microsoft threatening legal action and/or sending DMCA takedowns on their employee&#8217;s behalf?</p>
<p>This kind of stuff really burns my butt if it&#8217;s done without permission, and if it is with permission it really should say so somewhere on this guy&#8217;s site. &nbsp;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-574023">
				<div id="div-comment-574023" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Michael Dwyer</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071204-00/?p=24313#comment-574023">
			December 4, 2007 at 11:43 am</a>		</div>

		<p>See? &nbsp;Microsoft /does/ do testing!</p>
<p>Not that I had any doubts, but it somehow really pleases me to see that somebody&#8217;s burning a week to check one edge case. &nbsp;That&#8217;s somehow really cool and really disturbing at the same time&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-574033">
				<div id="div-comment-574033" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.apptranslator.com' rel='external nofollow' class='url'>Serge Wautier</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071204-00/?p=24313#comment-574033">
			December 4, 2007 at 12:42 pm</a>		</div>

		<p>Forgive my ignorance about storage in general and NTFS in particular but I guess they had to spread the volume accross several physical disks, right? How does one do that? Or did they have a 16TB disk back in 2002?</p>
<p>Just curious&#8230;</p>
<div class="post">[<i>I understand there are these things called &#8220;search engines&#8221; that are pretty good at helping you look up up product features. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-574043">
				<div id="div-comment-574043" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Mihai</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071204-00/?p=24313#comment-574043">
			December 4, 2007 at 12:42 pm</a>		</div>

		<p>Nitpicker&#8217;s corner: with the following statement &quot;read the entire file back into memory&quot; does not mean that the full file was present in memory at one time (which requires more than 16TB of memory).</p>
<p>Ok, fixed that :-D</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-574053">
				<div id="div-comment-574053" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">pplu</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071204-00/?p=24313#comment-574053">
			December 4, 2007 at 12:44 pm</a>		</div>

		<p>Tests should be done on edge cases (that&#8217;s one of the points in good testing methodologies).</p>
<p>Why is it disturbing? It&#8217;s not like it&#8217;s going to make windows lauch a week later&#8230; and if it did&#8230; I prefer a late launch with no NTFS file system flaws to an update because files beyond x size are not properly handled.</p>
<p>By the way, Raymond, and just out of curiousity: on the fundamental pieces of the OS (like NTFS) what are the coverage metrics? (I hope they are disclosable, and a proud 100%)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-574073">
				<div id="div-comment-574073" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Aaargh!</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071204-00/?p=24313#comment-574073">
			December 4, 2007 at 12:59 pm</a>		</div>

		<p>I wonder if anyone in the Real World(tm) is actually using NTFS to store huge files like that ? Wouldn&#8217;t you use a more suitable filesystem ? Is it e.g. even possible to resize a live NTFS filesystem ?</p>
<p>What alternatives are there on windows beside NTFS and FAT32 ?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-574093">
				<div id="div-comment-574093" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Gabe</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071204-00/?p=24313#comment-574093">
			December 4, 2007 at 1:14 pm</a>		</div>

		<p>Writing a 16TB file in 3 days means a constant 60+ MB/sec, or a 64kB transaction every millisecond.</p>
<p>Does anybody know how many disks they used? I would have to imagine it&#8217;s in the hundreds! The nice thing about a test like this is that redundancy is unimportant, so you could make a huge RAID 0 stripe set.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-574103">
				<div id="div-comment-574103" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">John</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071204-00/?p=24313#comment-574103">
			December 4, 2007 at 1:15 pm</a>		</div>

		<p>But how long does it take to copy a 16TB file?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-574133">
				<div id="div-comment-574133" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Aaargh!</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071204-00/?p=24313#comment-574133">
			December 4, 2007 at 1:28 pm</a>		</div>

		<p>&quot;Forgive my ignorance about storage in general and NTFS in particular but I guess they had to spread the volume accross several physical disks, right? How does one do that?&quot;</p>
<p>Either some kind of RAID or Logical Volume Management. Basically, you have some software (or hardware) that maps the logical adress space of the volume to the different physical disks.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-574153">
				<div id="div-comment-574153" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://dataland.wordpress.com/' rel='external nofollow' class='url'>Dataland</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071204-00/?p=24313#comment-574153">
			December 4, 2007 at 1:48 pm</a>		</div>

		<p>Personally, I think it&#8217;s great that MS sweats the edge cases! &nbsp;I also think it would be great for PR, and edu-tainment if more &quot;inside info&quot; like this was blogged. &nbsp;</p>
<p>On a related topic&#8230; Over the past decade I&#8217;ve been disappointed that MSDN magazine has replaced stories/sagas/inside-scoops (i.e. Raymond-type articles) with developer-focused-marketing of Complexity.Stew.And.Cool.New.Technologies. &nbsp;I guess what i&#8217;m trying to say is I find Raymond&#8217;s MSDN mag articles (and this blog) much more interesting/useful/helpful than the rest of MSDN mag.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-574173">
				<div id="div-comment-574173" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">anonymous</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071204-00/?p=24313#comment-574173">
			December 4, 2007 at 2:12 pm</a>		</div>

		<p>AB, you don&#8217;t need this privilege</p>
<p>to use FileSetValidData(). Anyway, you could simply create a sparse file and set the EOF pointer to a large value. Again, without any special privileges.</p>
<p>Maybe you&#8217;re confused because the FSUTIL command utility doesn&#8217;t run without administrator privileges. A quick &nbsp;patch making a JNZ into an unconditional JMP fixes this issue.</p>
<div class="post">[<i><u>Nitpicker&#8217;s corner</u>: &#8220;&#8230; to create a 16TB file <u>with meaningful contents, not uninitialized garbage</u>.&#8221; I can&#8217;t believe I had to write that. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-574183">
				<div id="div-comment-574183" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">sandman</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071204-00/?p=24313#comment-574183">
			December 4, 2007 at 2:38 pm</a>		</div>

		<p>Didn&#8217;t online resizing for NTFS get added in the Vista kernel? (I could be wrong here &#8211; I haven&#8217;t needed to do it yet).</p>
<p>But yes, all the uses I can think of for a 16TB filesystem (other than test like the story) I would want the enterprise features of online resize and Logival volume management.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-574193">
				<div id="div-comment-574193" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">sandman</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071204-00/?p=24313#comment-574193">
			December 4, 2007 at 2:39 pm</a>		</div>

		<p>Yeah, A sparse file won&#8217;t help the test case &#8211; but why would it have uninitialised garbage &#8211; surely the kernel substuites zeros for the unallocated blocks?</p>
<div class="post">[<i>I was referring to the original comment which suggested SetFileValidData. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-574203">
				<div id="div-comment-574203" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">DriverDude</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071204-00/?p=24313#comment-574203">
			December 4, 2007 at 2:40 pm</a>		</div>

		<p>Back in 2002, the disks were 160 GB max (assuming cheap large ATA disks, as opposed to small fast SCSI) So they would&#8217;ve needed 100+ disks and some serious enterprise equipment just to make a 16 TB volume.</p>
<p>I&#8217;m impressed the NTFS team could requisition that kind of hardware just for a test. Obviously, I hope they took the time to run other tests too.</p>
<p>E.g., has anyone created 2^32 -1 files on a NTFS volume yet?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-574213">
				<div id="div-comment-574213" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Aaargh!</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071204-00/?p=24313#comment-574213">
			December 4, 2007 at 2:46 pm</a>		</div>

		<p>&quot;Didn&#8217;t online resizing for NTFS get added in the Vista kernel? (I could be wrong here &#8211; I haven&#8217;t needed to do it yet).&quot;</p>
<p>I tried looking it up on MSDN but that&#8217;s completely useless, can&#8217;t find a single piece of usefull information. The info on wikipedia also seems out of date.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-574223">
				<div id="div-comment-574223" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">mh</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071204-00/?p=24313#comment-574223">
			December 4, 2007 at 2:48 pm</a>		</div>

		<p>It always amazes me the extent to which the MS folks go to test things. &nbsp;I could well imagine a lot of others (myself included) assuming that nobody would ever want a 16 TB file, and just not bothering.</p>
<p>This one is right up there with &quot;the USB cart of doom&quot; in my list of personal favourites.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-574233">
				<div id="div-comment-574233" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">thomas.tmc</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071204-00/?p=24313#comment-574233">
			December 4, 2007 at 2:56 pm</a>		</div>

		<p>As far as getting the needed hardware goes, MS spends several billion dollars a year in research. They probably used leftover components from other research projects, ie a 3TB array here, a 5TB array from there, and pieced them together.</p>
<p>It wouldn&#8217;t surprise me if you could walk into a storeroom at an MS research building and find a box with 100 160GB drives and 40 barbones boxes just sitting in shrink wrap.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-574243">
				<div id="div-comment-574243" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">David Walker</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071204-00/?p=24313#comment-574243">
			December 4, 2007 at 3:48 pm</a>		</div>

		<p>I&#8217;m NOT impressed that the test team could requisition 100 disks &quot;just&quot; for such a test. &nbsp;It seems like a fundamental thing to test. &nbsp;</p>
<p>If you claim that your OS can create a 16 TB file, you ought to test it, and &quot;the&quot; test team certainly ought to be given the resources to do this. &nbsp;MS could easily have afforded this in 2002!</p>
<p>I&#8217;ll bet MS had tons of enterprise-class equipment even back in 2002.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-574253">
				<div id="div-comment-574253" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Mark Steward</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071204-00/?p=24313#comment-574253">
			December 4, 2007 at 4:09 pm</a>		</div>

		<p>Online resizing is available in Vista:</p>
<p><a rel="nofollow" target="_new" href="http://windowshelp.microsoft.com/Windows/en-US/Help/f2e9a502-e63c-413d-8804-87326ef4f4cc1033.mspx" rel="nofollow">http://windowshelp.microsoft.com/Windows/en-US/Help/f2e9a502-e63c-413d-8804-87326ef4f4cc1033.mspx</a></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-574263">
				<div id="div-comment-574263" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Rob</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071204-00/?p=24313#comment-574263">
			December 4, 2007 at 4:53 pm</a>		</div>

		<p>Diskpart was introduced around the Windows 2000 SP1 time frame. Diskpart will allow you to extend a data drive on the fly. See KB325590 <a rel="nofollow" target="_new" href="http://support.microsoft.com/default.aspx?scid=kb;EN-US;325590" rel="nofollow">http://support.microsoft.com/default.aspx?scid=kb;EN-US;325590</a></p>
<p>Vista will let you extend or shrink volumes including the OS drive.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-574273">
				<div id="div-comment-574273" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Cooney</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071204-00/?p=24313#comment-574273">
			December 4, 2007 at 4:54 pm</a>		</div>

		<p>Any idea about XP? I don&#8217;t really want to run Vista. Ever.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-574283">
				<div id="div-comment-574283" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Evan</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071204-00/?p=24313#comment-574283">
			December 4, 2007 at 5:11 pm</a>		</div>

		<p>pplu: &quot;By the way, Raymond, and just out of curiousity: on the fundamental pieces of the OS (like NTFS) what are the coverage metrics? (I hope they are disclosable, and a proud 100%)&quot;</p>
<p>100% coverage for just about any well-written software, both in practice and in theory.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-574293">
				<div id="div-comment-574293" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Evan</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071204-00/?p=24313#comment-574293">
			December 4, 2007 at 5:20 pm</a>		</div>

		<p>Hmmm, I probably should have finished writing my previous post before posting. It should have read:</p>
<p>&quot;100% coverage IS IMPOSSIBLE for just about any well-written software, both in practice and in theory.&quot;</p>
<p>This is true even if you&#8217;re talking statement coverage. If you talking something like path coverage, it becomes even worse.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-574303">
				<div id="div-comment-574303" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Gabe</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071204-00/?p=24313#comment-574303">
			December 4, 2007 at 5:36 pm</a>		</div>

		<p>I&#8217;m pretty sure that NTFS volumes have always been able to be extended online. The partition generally could not be expanded, though. You would just create a new partition (possibly adjacent to the old one), and expand the volume into the new partition. The space would immediately become available.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-574313">
				<div id="div-comment-574313" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Nar</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071204-00/?p=24313#comment-574313">
			December 4, 2007 at 5:37 pm</a>		</div>

		<blockquote><p>
  &quot;100% coverage IS IMPOSSIBLE for just about any well-written software, both in practice and in theory.&quot;</p>
<p>  This is true even if you&#8217;re talking statement coverage.
</p></blockquote>
<p>How? Unit testing can get every method covered easily, and if your methods are so convoluted that it&#8217;s hard&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-574323">
				<div id="div-comment-574323" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">James Day</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071204-00/?p=24313#comment-574323">
			December 4, 2007 at 5:38 pm</a>		</div>

		<p>If the information in the encyclopedia hosted at Wikipedia.org is out of date, there&#8217;s a simple solution: fix it. That&#8217;s why it&#8217;s a wiki.</p>
<p>Remember to include links to your sources so what you change can be verified by others.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-574343">
				<div id="div-comment-574343" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">mh</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071204-00/?p=24313#comment-574343">
			December 4, 2007 at 5:58 pm</a>		</div>

		<p>&quot;Any idea about XP? I don&#8217;t really want to run Vista. Ever.&quot;</p>
<p>Diskpart will work very happily with XP too. &nbsp;You can get even more flexibility by using dynamic disks. &nbsp;Plenty of documentation out there if you&#8217;re interested.</p>
<p>The main limitation comes in if you want to shrink a partition. &nbsp;You&#8217;re also restricted from extending the system or boot partition(s). &nbsp;But if you&#8217;re creative enough you can work around that with the tools you get for free (a combination of WinPE, ImageX and a spare partition springs to mind).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-574353">
				<div id="div-comment-574353" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">DriverDude</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071204-00/?p=24313#comment-574353">
			December 4, 2007 at 6:00 pm</a>		</div>

		<p>Back-of-envelope says $10K of hardware today &#8211; 17 disks, couple of RAID cards and one computer &#8211; can do this same test (write and read) in less than two days. Dell or Apple Xserve boxes cost more but it still won&#8217;t break the bank or table.</p>
<p>I wonder if these tests are in the NTFS regression test suite&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-574363">
				<div id="div-comment-574363" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Evan</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071204-00/?p=24313#comment-574363">
			December 4, 2007 at 6:04 pm</a>		</div>

		<p>&quot;How? Unit testing can get every method covered easily, and if your methods are so convoluted that it&#8217;s hard&#8230;&quot;</p>
<p>At the very least, what about stuff like</p>
<p>switch (x) {</p>
<p>case A:</p>
<p>&nbsp; &#8230;</p>
<p>case B:</p>
<p>&nbsp; &#8230;</p>
<p>case C:</p>
<p>&nbsp; &#8230;</p>
<p>default:</p>
<p>&nbsp; // this should never happen</p>
<p>&nbsp; return EINVAL;</p>
<p>}</p>
<p>You also have the condition of asserts, which should never fire, and it&#8217;s not a bad idea to keep stuff like that around for a number of reasons.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-574383">
				<div id="div-comment-574383" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Legolas</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071204-00/?p=24313#comment-574383">
			December 4, 2007 at 6:23 pm</a>		</div>

		<p>I wonder how fast that test would be done today. And I&#8217;m slightly surprised it would still take over a dozen disks today&#8230; So did they code and test a larger one yet? (Ok perhaps you can&#8217;t talk about that sort of thing yet. Would be a cool story though ;-)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-574393">
				<div id="div-comment-574393" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">sandman</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071204-00/?p=24313#comment-574393">
			December 4, 2007 at 6:45 pm</a>		</div>

		<p>MH: &quot; You&#8217;re also restricted from extending the system or boot partition(s).&quot;</p>
<p>That&#8217;s characteristic though of offline resizing where the volume cannot be dismounted. The question was about online where a partition is resized while filehandles are open on the volume. I&#8217;m not sure that Mark&#8217;s link clears the matter up either.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-574403">
				<div id="div-comment-574403" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">nksingh</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071204-00/?p=24313#comment-574403">
			December 4, 2007 at 7:55 pm</a>		</div>

		<p>I&#8217;ve definitely recently extended an NTFS partition on my laptop to use space from a defunct Linux partition. &nbsp;This worked as expected on Vista.</p>
<p>I think I also had shrunk the partition before when I first installed Linux, but I&#8217;m not as sure about that.</p>
<p>Testing limits is hard when the limits are chosen to be bigger than currently available hardware. &nbsp;And they can&#8217;t just set a #define somewhere because the file system and memory manager work hand in hand and they&#8217;d definitely want to track down non-obvious interactions between limits in both of them.</p>
<p>I bet the most costly part of writing that huge file was multiple traversals of the MFT File Record and perhaps the creation of multiple linked overflow records. &nbsp;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-574433">
				<div id="div-comment-574433" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">microbe</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071204-00/?p=24313#comment-574433">
			December 4, 2007 at 8:09 pm</a>		</div>

		<p>Reading is slower because it&#8217;s mostly synchronous (there probably wasn&#8217;t a very huge buffer and the prefetch probably wasn&#8217;t aggressive enough), while writes are asynchronous.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-574443">
				<div id="div-comment-574443" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Mark Steward</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071204-00/?p=24313#comment-574443">
			December 4, 2007 at 8:14 pm</a>		</div>

		<p>sandman: I just shrunk my only drive while running Vista by 50MB and then extended it again. &nbsp;Just for you ;-)</p>
<p>You&#8217;re restricted from extending the system or boot partitions only on XP and its ilk.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-574473">
				<div id="div-comment-574473" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.popcornfilms.com/accidentalscientist' rel='external nofollow' class='url'>Simon Cooke</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071204-00/?p=24313#comment-574473">
			December 4, 2007 at 8:42 pm</a>		</div>

		<p>I find it a fun exercise to come up with the pattern writer that would be used to write the data out to the file&#8230;</p>
<p>After all, you&#8217;re not going to just want sequential access tested, you&#8217;re going to want random access tested too, so you can&#8217;t use a linear congruential random number generator. (Unless you partition it into chunks, and use the chunk # as the seed for the start of the chunk).</p>
<p>It&#8217;s times like this that I really like the idea of writing out the digits of PI and filling that space up using the Bailey-Borwein-Plouffe algorithm.</p>
<p>You get nice random-ish data, recoverable in constant time, for any point in the file. :)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-574483">
				<div id="div-comment-574483" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">DriverDude</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071204-00/?p=24313#comment-574483">
			December 4, 2007 at 8:58 pm</a>		</div>

		<p>&quot;I bet the most costly part of writing that huge file was multiple traversals of the MFT File Record and perhaps the creation of multiple linked overflow records.&quot;</p>
<p>I thought the metadata would be cached and only flushed to disk a few times&#8230;</p>
<p>Also, why would multiple overflow records be needed, assuming most of the file is contiguous?</p>
<p>On the other hand, how many non-contigous extents can NTFS deal with, if there were a few million files already scattered across the volume?</p>
<p>Corner cases involving large numbers are interesting indeed.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-574493">
				<div id="div-comment-574493" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Gazpacho</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071204-00/?p=24313#comment-574493">
			December 5, 2007 at 12:00 am</a>		</div>

		<p>Any organization with 16TB of data sitting around would certainly be big enough to put the hurt on Microsoft if it had failed to test the file system.</p>
<p>Oh, and hello Simon. Haven&#8217;t seen you since back in the day on MSNBC.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-574543">
				<div id="div-comment-574543" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">sandman</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071204-00/?p=24313#comment-574543">
			December 5, 2007 at 2:18 am</a>		</div>

		<p>DriverDude:&quot;I thought the metadata would be cached and only flushed to disk a few times&#8230;&quot;</p>
<p>Maybe, but NTFS is metadata journalled.</p>
<p>You must write the metadata fully out to the drive when you complete a checkpoint. And if you are extending a 16TB file there&#8217;s a lot of metadata. How many checkpoints where needed is an interesting question.</p>
<p>Interestingly &#8211; in some ways it would be safe not to write the metadata from file extension to the journal &#8211; as the lack of a metadata write is an automatic rollback. Without FileSetValidData() the data <em>must</em> be &nbsp;checkpointed before or simulatanosuly with the metadata.</p>
<p>Of course since you realistically need to ensure metadata writes are ordered and shrinking, or deleting a files metadata writes must happen before that files block is reallocated. (Otherwise there is a security whole if you can force an system crash and reload at the right moment). This implies it is simpler just to journal all metadata writes&#8230;.</p>
<p>The upshot of this is there could be quite a lot of metadata activity as the file is allocated,</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-574453">
				<div id="div-comment-574453" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://greasemonkey.nonlogic.org' rel='external nofollow' class='url'>GreaseMonkey</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071204-00/?p=24313#comment-574453">
			December 4, 2007 at 8:15 pm</a>		</div>

		<p>For 16TB, you could rip nearly 1,800 dual-layer DVDs, uncompressed. Anyone who would have that many DVDs is either a crazy movie fanatic, or on the run from the RIAA.</p>
<p>If you&#8217;re talking about the full 16EB, though, that&#8217;d be 1,800,000,000 DL-DVDs. And I guess it&#8217;d take many years to fill *THAT* much space. Heck, after pirating that much, you could be out of prison by the time it&#8217;s finished.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-574553">
				<div id="div-comment-574553" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Neil</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071204-00/?p=24313#comment-574553">
			December 5, 2007 at 5:55 am</a>		</div>

		<blockquote><p>
  But how long does it take to copy a 16TB file?
</p></blockquote>
<p>If you&#8217;re using the same hardware and APIs as the NTFS test team, then I&#8217;d say about six to seven days. (I say that because I believe that CopyFile would not be suitable in this case.)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-574603">
				<div id="div-comment-574603" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Danny</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071204-00/?p=24313#comment-574603">
			December 5, 2007 at 10:23 am</a>		</div>

		<blockquote><p>
  Tuesday, December 04, 2007 2:40 PM by &gt;DriverDude</p>
<p>  E.g., has anyone created 2^32 -1 files on a &gt;NTFS volume yet?
</p></blockquote>
<p>I did that last year when I got hands on a DVD with Fable game and put Nero to do a image &#8211; at work. Was 4GB file. And at home I had FAT32, so image my face when I finally realized is time for converting my FAT32 to NTFS :)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-574613">
				<div id="div-comment-574613" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">David Walker</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071204-00/?p=24313#comment-574613">
			December 5, 2007 at 10:26 am</a>		</div>

		<p>You don&#8217;t need to close ALL open handles on a volume in order to extend or shrink it. &nbsp;</p>
<p>You might need to delay some new file creations or deletions, or new allocations in the bitmap, while you rewrite some things, but the currently open files ought to be able to stay open.</p>
<p>I don&#8217;t know why Windows 2000 did not provide a native way to resize the system or boot partition&#8230; I suppose it&#8217;s just a case of not allocating the resources to write the software, which is perfectly understandable.</p>
<p>The mainframe operating system TPF (Transaction Processing Facility, formerly known as ACP for Airline Control Program), which can typically handle 5000 transactions per second or more, has always had programmatic support in the operating system with on-the-fly ability to add (or remove) entire disk drives to its storage array. &nbsp;</p>
<p>It then proceeds to &quot;level&quot; the data across all of the disk drives, by moving data records from the fuller disks to the new disks, while still processing thousands of transactions per second.</p>
<p>Again, I suppose it&#8217;s a matter of prioritizing programming resources. &nbsp;But don&#8217;t assume that something like that can&#8217;t be done.</p>
<p>(As a related example, critical system files COULD be replaced in memory while the operating system is running. &nbsp;Consider the state of memory and disk (system folders) before the operation, and the state of memory and disk that you would get after file replacement and a regular reboot, and figure out a way to map everything from one to the other, and implement that mapping in software. &nbsp;Some locks would be required. &nbsp;It&#8217;s hard, but not impossible.)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-574623">
				<div id="div-comment-574623" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ryan</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071204-00/?p=24313#comment-574623">
			December 5, 2007 at 11:38 am</a>		</div>

		<p>My organization has more than 16TB of data online, and we have just 120 employees and under $100M in revenue. Most if this is SQL Server database files.</p>
<p>We&#8217;re not big enough to put the hurt on MSFT for anything.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-574663">
				<div id="div-comment-574663" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">anomymous</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071204-00/?p=24313#comment-574663">
			December 5, 2007 at 12:44 pm</a>		</div>

		<p>A question: Why did their use some static patterns instead of random data? Just create a cryptographic checksum of the data while writing them, then read it back while checksumming it, and compare the checksums.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-574713">
				<div id="div-comment-574713" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">DriverDude</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071204-00/?p=24313#comment-574713">
			December 5, 2007 at 1:27 pm</a>		</div>

		<p>&quot;Just create a cryptographic checksum of the data while writing them, then read it back while checksumming it, and compare the checksums.&quot;</p>
<p>That tells you whether the file changed, but doesn&#8217;t indicate what or where. A known pattern can indicate whether a portion of the file was written over itself, etc.</p>
<p>Of course, that assumes you pick a useful pattern, one with a unique identifier every 512 bytes (like a block counter and timestamp)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-574743">
				<div id="div-comment-574743" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Gazpacho</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071204-00/?p=24313#comment-574743">
			December 5, 2007 at 2:05 pm</a>		</div>

		<p>If you hash 16TB with a 20-byte hashing algorithm, then you can expect a lot of other bit patterns to hash to the same value. If the hash is uniform, there will be more than 800G such bit patterns, which may or may not be significantly different from each other. In short, I would be at a loss to give a manager any reason for doing it that way instead of the direct way.</p>
<p>However, if it was me doing the test I would fill the file with data from a cryptographic PRNG, and then verify it with the same seed value.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-574843">
				<div id="div-comment-574843" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Gabe</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071204-00/?p=24313#comment-574843">
			December 5, 2007 at 4:02 pm</a>		</div>

		<p>Danny, he meant a volume with 2^32-1 files, not a file with 2^32-1 bytes. Since each file will require at least a 1kB record in the MFT, you would need at the very minimum a 4TB volume to hold that many files. You would also need some additional space for overhead (volume bitmap, an index of those 4 billion files, etc.). Anyway, the volume would have to be 4.5e12 bytes or so.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-574893">
				<div id="div-comment-574893" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">joe</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071204-00/?p=24313#comment-574893">
			December 5, 2007 at 6:07 pm</a>		</div>

		<p>16 TB? Was that 1 TB = 1,000 GB, 1 GB = 1,000 KB, 1 KB = 1,000 bytes like the drive manufacturers use?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-574923">
				<div id="div-comment-574923" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.martialdevelopment.com/blog/' rel='external nofollow' class='url'>Chris Marshall</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071204-00/?p=24313#comment-574923">
			December 5, 2007 at 6:29 pm</a>		</div>

		<p>Doesn&#8217;t nearly every CD/DVD drive produced in the last 5 years write faster than it reads?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-574943">
				<div id="div-comment-574943" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Stefan Kanthak</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071204-00/?p=24313#comment-574943">
			December 5, 2007 at 8:08 pm</a>		</div>

		<p>Big SCSI disks are a myth!</p>
<p>Back in 2001 I got a bunch of small fast SCSI disks for my RAID @home: Seagate ST118677LC, each 180GB small.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-575013">
				<div id="div-comment-575013" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Gabe</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071204-00/?p=24313#comment-575013">
			December 5, 2007 at 11:11 pm</a>		</div>

		<p>joe: That file was 17,592,185,978,880 bytes. It&#8217;s 268,435,455 (2^28-1) clusters, each 65,536 (2^16) bytes. Or as it says in the article Raymond linked to, it&#8217;s 2^44 bytes &#8211; 2^16 bytes.</p>
<p>In SI units, I guess that would be 16TiB or 17.6TB. It would require 18 disk drives rated to hold 1TB each.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-575493">
				<div id="div-comment-575493" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">anomymous</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071204-00/?p=24313#comment-575493">
			December 7, 2007 at 9:24 am</a>		</div>

		<p>&#8220;That tells you whether the file changed, but doesn&#8217;t indicate what or where.&#8221;</p>
<p>Well, since we&#8217;re only making a go/no-go test we only care if the file was changed or not. If everything is OK then there should be no change, and since this is the most likely case, we can optimize for it.</p>
<div class="post">[<i>Good luck with that random access testing. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-575663">
				<div id="div-comment-575663" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">-</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071204-00/?p=24313#comment-575663">
			December 7, 2007 at 11:59 am</a>		</div>

		<blockquote><p>
  the theoretical maximum file size on NTFS is 2^64−1 clusters
</p></blockquote>
<p>Haha. No. Not even close. Try again with 2^64−1 bytes.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-575953">
				<div id="div-comment-575953" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Gabe</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071204-00/?p=24313#comment-575953">
			December 8, 2007 at 3:15 am</a>		</div>

		<p>If you believe the article, neither 2^64-1 clusters nor 2^64-1 bytes is correct. It&#8217;s 2^64-1024 bytes. To quote the article, &quot;Theory: 16 exabytes minus 1 KB (2^64 bytes minus 1 KB)&quot;.</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>