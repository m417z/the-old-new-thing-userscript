<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (11)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-1216481">
				<div id="div-comment-1216481" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Kevin</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20151202-00/?p=92241#comment-1216481">
			December 2, 2015 at 10:40 am</a>		</div>

		<p>This looks like a case of API-colored glasses to me. &nbsp;The author of the code fragment wanted to show off all the cool things you can do with thread pools, even though you probably don&#39;t actually want to do all of those things (at least, not all in the same piece of code).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1216471">
				<div id="div-comment-1216471" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">sense</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20151202-00/?p=92241#comment-1216471">
			December 2, 2015 at 11:26 am</a>		</div>

		<p>That&#39;s what you get from not reading the code you copy and paste.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1216451">
				<div id="div-comment-1216451" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Michael Burr</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20151202-00/?p=92241#comment-1216451">
			December 2, 2015 at 12:02 pm</a>		</div>

		<p>I wouldn&#39;t be surprised if there are a lot of thread pools out there that have this bug &#8211; that&#39;s the nature of examples in official or defacto documentation.</p>
<p>I think the issue is actually more likely to make to the wild than many &#39;example code bugs&#39; since the work items will get done, just not as efficiently as they should. Testing might not detect the problem unless someone is looking very, very closely at the thread pool&#39;s behavior.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1216441">
				<div id="div-comment-1216441" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Sean</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20151202-00/?p=92241#comment-1216441">
			December 2, 2015 at 12:07 pm</a>		</div>

		<p>@Kevin: In general I tend to prefer comprehensive examples that show a bunch of parts of a new API (and how they are put together in relation to each other). I don&#39;t want to say that this is the only alternative, but I&#39;ve come across far too many APIs that go in the opposite direction, with a few very concise examples that may nicely target the 80% use case but are useless for the 20% of the time I have a special case that needs to use a niche feature of the API. I find it easier to trim out useless cruft from example code than to figure out where to put in useful specialization when I need it.</p>
<p>However, the ideal is obviously enough good examples to show off 95+% of the use cases plus good documentation for each individual part of the API which makes it clear how they&#39;re supposed to be used.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1216431">
				<div id="div-comment-1216431" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Kevin</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20151202-00/?p=92241#comment-1216431">
			December 2, 2015 at 1:00 pm</a>		</div>

		<p>@Sean: Sure, API-colored glasses can be helpful. &nbsp;But you have to be very clear upfront that that&#39;s what you&#39;re doing, or else people will just blindly copy and paste.</p>
<p>Well, people will blindly cut and paste no matter what, but at least this way, those of us on Stack Overflow have something to hit them with when they realize it doesn&#39;t work and come crying to us for help.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1216421">
				<div id="div-comment-1216421" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">acq</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20151202-00/?p=92241#comment-1216421">
			December 2, 2015 at 2:59 pm</a>		</div>

		<p>And where is the documentation about &quot;using the system thread pool&quot;? I tried to find out and probably followed the path of the intern:</p>
<p>&quot;OK, somebody who knows told me to use thread pool. Where to look? There&#39;s this Thread Pool API <a rel="nofollow" target="_new" href="https://msdn.microsoft.com/en-us/library/windows/desktop/ms686766%28v=vs.85%29.aspx">msdn.microsoft.com/&#8230;/ms686766%28v=vs.85%29.aspx</a> Good what do I need? A Thread Pool, well there&#39;s the Pool section in the table, and 4 entries, the second one is CreateThreadpool, I guess I can start there, and lo! It doesn&#39;t mention that some pool I can use already exist. Just that this way a new is created. And there is link to the example. And that&#39;s the example Raymond discusses here.&quot;</p>
<p>So what&#39;s the &quot;simpler&quot; way?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1216411">
				<div id="div-comment-1216411" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">acq</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20151202-00/?p=92241#comment-1216411">
			December 2, 2015 at 3:26 pm</a>		</div>

		<p>It seems that the trick is passing NULL to the second parameter of SetThreadpoolCallbackPool, but see the description of that parameter now:</p>
<p>&quot;ptpp [in] &nbsp; &nbsp;A TP_POOL structure that defines the thread pool. The CreateThreadpool function returns this structure.&quot;</p>
<p>That it can be null is not specified here in any way. But there&#39;s the remark &quot;If you do not specify a thread pool, the global thread pool is used.&quot;</p>
<p>Now I entered &quot;global thread pool&quot; in MSDN search and&#8230; I can&#39;t say I&#39;ve found any description of what a &quot;global thread pool&quot; is at all. So how&#39;s a beginner to even get the idea that it&#39;s OK thing to do that, and what he can expect?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-hikari odd alt thread-odd thread-alt depth-1" id="comment-1216911">
				<div id="div-comment-1216911" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Chris+Crowther' rel='external nofollow' class='url'>Chris Crowther</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20151202-00/?p=92241#comment-1216911">
			December 3, 2015 at 12:43 am</a>		</div>

		<p>acq: <a rel="nofollow" target="_new" href="https://msdn.microsoft.com/en-us/library/windows/desktop/ms686756(v=vs.85).aspx">msdn.microsoft.com/&#8230;/ms686756(v=vs.85).aspx</a> may give you some clue. &nbsp;Specifically &quot;To request that a work item be handled by a thread in the thread pool, call the QueueUserWorkItem function. &quot; and &quot;The thread pool is created the first time you call QueueUserWorkItem&#8230;&quot;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1216901">
				<div id="div-comment-1216901" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">acq</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20151202-00/?p=92241#comment-1216901">
			December 3, 2015 at 2:36 am</a>		</div>

		<p>Chris Crowther: Thanks! Still: &quot;This topic describes the original thread pool API. The thread pool API introduced in Windows Vista is simpler, more reliable, has better performance, and provides more flexibility for developers.&quot; Not surprising that the programmer believes that he should use the new API then? Neither &quot;system thread pool&quot; nor &quot;global thread pool&quot; are named. And the parameter ptpp &nbsp;I&#39;ve mentioned is &quot;in&quot; and not &quot;in_opt&quot; like it would be marked in some other functions that accept NULL.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-wndsks odd alt thread-odd thread-alt depth-1" id="comment-1216891">
				<div id="div-comment-1216891" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/skSdnW' rel='external nofollow' class='url'>skSdnW</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20151202-00/?p=92241#comment-1216891">
			December 3, 2015 at 6:46 am</a>		</div>

		<p>..and there is/was a even older threadpool API in shlwapi, created around the IE4/5 timeframe.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1217171">
				<div id="div-comment-1217171" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">DWalker</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20151202-00/?p=92241#comment-1217171">
			December 4, 2015 at 10:26 am</a>		</div>

		<p>@Sean, @Kevin: &nbsp;Speaking of examples, and how poor they often are: &nbsp;I have NEVER seen an example, in any Microsoft SQL documentation, of how to use the Join clause to join two tables *on one more than one column*. &nbsp;Every single Join example joins two tables on one column only. &nbsp;</p>
<p>When you are trying to learn something, as we all have at one time or another, some examples beyond the bare minimum would be very helpful.</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>