<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (11)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-750213">
				<div id="div-comment-750213" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">John</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090626-00/?p=17733#comment-750213">
			June 26, 2009 at 10:08 am</a>		</div>

		<p>This is why the only thing I ever do in DllMain is InitializeCriticalSection and DeleteCriticalSection; pretty much anything else can be lazy-initialized if needed.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-tihiy odd alt thread-odd thread-alt depth-1" id="comment-750233">
				<div id="div-comment-750233" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Tihiy</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090626-00/?p=17733#comment-750233">
			June 26, 2009 at 10:58 am</a>		</div>

		<p>&gt;must call DestroyWindow from the same window</p>
<p>you meant same thread?</p>
<div class=post>[<i>Fixed, thanks. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-750363">
				<div id="div-comment-750363" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ben Voigt [C++ MVP]</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090626-00/?p=17733#comment-750363">
			June 26, 2009 at 5:00 pm</a>		</div>

		<p>Given the problem of global hooks running arbitrary code, is it possible to safely create a window from the DLL_THREAD_ATTACH notification (note THREAD not PROCESS)?</p>
<div class=post>[<i>Was never possible to do safely. Global hooks are just one of many problems. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-750393">
				<div id="div-comment-750393" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Worf</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090626-00/?p=17733#comment-750393">
			June 27, 2009 at 1:46 am</a>		</div>

		<p>Which brings up the question &#8211; what is the purpose of DllMain, and what would someone normally use it for?</p>
<p>If it&#8217;s not a replacement for Init()/Deinit() type functions, what should one use it for?</p>
<p>(Especially since there&#8217;s a default stub if you don&#8217;t implement one&#8230;)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-750403">
				<div id="div-comment-750403" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Jeff</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090626-00/?p=17733#comment-750403">
			June 27, 2009 at 2:58 am</a>		</div>

		<p>@Worf</p>
<p>DllMain can be used to initialize/release a few basic low-level primitives that are explicitly designed to be called during DllMain. &nbsp;MSDN gives examples:</p>
<p>&quot;For example, DllMain can create synchronization objects such as critical sections and mutexes, and use TLS.&quot;</p>
<p>However, if you don&#8217;t have any use for it, then by all means just pretend DllMain doesn&#8217;t exist. &nbsp;(Do still call DisableThreadLibraryCalls though).</p>
<p>Additionally, your programming language&#8217;s runtime will take care of bookkeeping in or around DllMain. &nbsp;For example: the C runtime initializes global variables, and the C++ runtime calls the class constructors for global objects (a compelling reason to avoid having global C++ objects).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-750443">
				<div id="div-comment-750443" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Daev</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090626-00/?p=17733#comment-750443">
			June 27, 2009 at 3:02 pm</a>		</div>

		<p>Also, if you have an &quot;atexit function&quot; in your DLL written in C, and that DLL is linked with the static version of the C run-time library, then the atexit function is automatically called from DllMain during DLL_PROCESS_DETACH.</p>
<p>So don&#8217;t do anything complicated in an atexit function &#8212; in particular, don&#8217;t call functions which are in some other DLL, &#8217;cause that other DLL might have already been unloaded. &nbsp;(There&#8217;s no way to guarantee that your DLL gets detached before any DLLs it might be using.)</p>
<p>This bit me, because I had an atexit function which closed any open sockets in case of process termination. &nbsp;But sockets are in the WinSock DLL &#8230; which wasn&#8217;t there anymore. &nbsp;Crash!</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-750483">
				<div id="div-comment-750483" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">W</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090626-00/?p=17733#comment-750483">
			June 28, 2009 at 5:48 pm</a>		</div>

		<p>The contract of dllmain is one of the most problematic things in Win32. Especially since many programmers don&#8217;t even realize they are implementing dllmain since their language abstracts that away(static constructors/destructors in C++, initialization/finalization sections in Delphi).</p>
<p>I&#8217;m sure I violated it quite often before learning about it. Probably I&#8217;m still violating it in my current programs as it is almost impossible to write code which does not call any external functions.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-mike-dimmick odd alt thread-odd thread-alt depth-1" id="comment-750523">
				<div id="div-comment-750523" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Mike+Dimmick' rel='external nofollow' class='url'>Mike Dimmick</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090626-00/?p=17733#comment-750523">
			June 29, 2009 at 6:48 am</a>		</div>

		<p>It&#8217;s one of these things that started out with good intentions, of being a place where you would do initialisation and cleanup. However, the implementation imposed some restrictions, and over time it&#8217;s become clear that those restrictions stop you doing anything actually useful in it.</p>
<p>There are other good intentions in Windows &#8211; the IsBadXxxPtr family spring to mind. Again, the consequences are more serious than were anticipated when they were designed.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-750513">
				<div id="div-comment-750513" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Anonymous</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090626-00/?p=17733#comment-750513">
			June 29, 2009 at 5:38 am</a>		</div>

		<p>Two other useful things to do in a DllMain:</p>
<p>* Stash the first argument to DLL_PROCESS_ATTACH somewhere, it is useful.</p>
<p>* Call DisableThreadLibraryCalls() so you will not be bothered again until the DLL_PROCESS_DETACH.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-750823">
				<div id="div-comment-750823" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">640k</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090626-00/?p=17733#comment-750823">
			June 30, 2009 at 7:27 am</a>		</div>

		<p>Unmanaged code is so last millennium.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-maurits even thread-even depth-1" id="comment-751273">
				<div id="div-comment-751273" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Maurits+%5BMSFT%5D' rel='external nofollow' class='url'>Maurits [MSFT]</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090626-00/?p=17733#comment-751273">
			July 2, 2009 at 8:11 am</a>		</div>

		<blockquote><p>
  you must call DestroyWindow from the same thread that created it
</p></blockquote>
<p>I&#8217;ll bite. &nbsp;Why?</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>