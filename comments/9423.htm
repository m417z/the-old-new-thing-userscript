<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (40)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment byuser comment-author-alegrigoriev even thread-even depth-1" id="comment-939723">
				<div id="div-comment-939723" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/alegr1' rel='external nofollow' class='url'>alegr1</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20111011-00/?p=9423#comment-939723">
			October 11, 2011 at 7:16 am</a>		</div>

		<p>FAT(32) needs to go away in favor of exFAT. Unfortunately, there are reasons for the manufacturers to use only FAT32 as an initial format.</p>
<p>ANother &quot;helpful&quot; error message is when a storage port returns SRB_STATUS_TIMEOUT. It gets translated to STATUS_IO_TIMEOUT, which gets translated to ERROR_SEM_TIMEOUT, and gives: &quot;The semaphore timeout period has expired.&quot;. Lolwut?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-939773">
				<div id="div-comment-939773" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Cesar</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20111011-00/?p=9423#comment-939773">
			October 11, 2011 at 8:06 am</a>		</div>

		<p>Another option is UDF: <a rel="nofollow" target="_new" href="http://superuser.com/questions/39942/using-udf-on-a-usb-flash-drive" rel="nofollow">superuser.com/&#8230;/using-udf-on-a-usb-flash-drive</a></p>
<p>Unless you are trying to write to it from Windows XP (which should cease to be a problem in a few years), it works quite well in my experience. (Windows XP can read, but not write.)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-939783">
				<div id="div-comment-939783" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20111011-00/?p=9423#comment-939783">
			October 11, 2011 at 8:17 am</a>		</div>

		<p>@alegrl: Problem 1: No Windows XP Support. Portable media must support XP for years to come. Problem 2: Patents. Removable media filesystems need to be practically not patent protected. The patents on VFAT will probably fail due to latches, but the patents on exFAT look good.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-939793">
				<div id="div-comment-939793" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Tanveer Badar</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20111011-00/?p=9423#comment-939793">
			October 11, 2011 at 8:32 am</a>		</div>

		<p>Solution: convert /?</p>
<p>Been doing that for ages with USB thumbies.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-alegrigoriev even thread-even depth-1" id="comment-939813">
				<div id="div-comment-939813" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/alegr1' rel='external nofollow' class='url'>alegr1</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20111011-00/?p=9423#comment-939813">
			October 11, 2011 at 9:20 am</a>		</div>

		<p>@Joshua:</p>
<p><a rel="nofollow" target="_new" href="http://www.microsoft.com/download/en/details.aspx?id=19364" rel="nofollow">http://www.microsoft.com/&#8230;/details.aspx</a></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-939823">
				<div id="div-comment-939823" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Jeff</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20111011-00/?p=9423#comment-939823">
			October 11, 2011 at 9:25 am</a>		</div>

		<p>Instead of using an unportable filesystem, you could always just split the file into multiple parts. (Unfortunately, Windows doesn&#39;t come with anything like &quot;dd&quot; as far as I know, but archiver programs can create multi-file archives, e.g. 7-zip&#39;s -v option)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-939833">
				<div id="div-comment-939833" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">SimonRev</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20111011-00/?p=9423#comment-939833">
			October 11, 2011 at 9:37 am</a>		</div>

		<p>Ironically this bit me while trying to install the Windows 8 developer preview. &nbsp;As I didn&#39;t have a blank 9 GB dvd, I tried to put the install onto a thumb drive. &nbsp;Unfortunately one of the files was in the ~5GB range and it failed (actually the software I was using didn&#39;t even report the failure &#8212; I discovered it during the install process).</p>
<p>Eventually I found another bit of software that presumably formatted my USB stick with exFAT before copying the files.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-939843">
				<div id="div-comment-939843" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">voo</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20111011-00/?p=9423#comment-939843">
			October 11, 2011 at 9:47 am</a>		</div>

		<p>Yeah using exFat is a great idea.. well except if you have to use other users linux workstations (yes I know there&#39;s some support, but it doesn&#39;t seem that stable and reliable), macs or Win XP installs that didn&#39;t go through the length of installing an optional update (ie basically anyone&#39;s)</p>
<p>So it&#39;s basically unportable and NTFS has its own share of problems which makes me a bit uneasy with it, so yes FAT32 is still the best solution in my opinion. Well &quot;best&quot; &#8211; let&#39;s say least worst.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-939853">
				<div id="div-comment-939853" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Anonymous</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20111011-00/?p=9423#comment-939853">
			October 11, 2011 at 9:58 am</a>		</div>

		<p>I have also seen the error code ERROR_DISK_FULL come up in this context.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-alegrigoriev odd alt thread-odd thread-alt depth-1" id="comment-939863">
				<div id="div-comment-939863" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/alegr1' rel='external nofollow' class='url'>alegr1</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20111011-00/?p=9423#comment-939863">
			October 11, 2011 at 9:58 am</a>		</div>

		<p>Just to clear misunderstanding:</p>
<p>&quot;I found another bit of software that presumably formatted my USB stick with exFAT&quot;</p>
<p>Vista+ format/GUI format can do that.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-939913">
				<div id="div-comment-939913" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Gabe</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20111011-00/?p=9423#comment-939913">
			October 11, 2011 at 1:48 pm</a>		</div>

		<p>I like to be able to take a USB stick and plug it into my car&#39;s radio to play MP3s, plug it into a kiosk at the photo lab to print JPEGs from it, plug it into my neighbor&#39;s Mac to transfer files with it, plug it into a computer at the hotel&#39;s business center to print documents, use it to copy photos onto my mother&#39;s digital picture frame, use it to show PPTs on video projectors, and also use it to copy utilities onto whatever computer I&#39;m trying to fix.</p>
<p>It will be a decade or more before I can expect all of those systems to support anything other than FAT32.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-nanashi3exehotmail-com odd alt thread-odd thread-alt depth-1" id="comment-939933">
				<div id="div-comment-939933" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/GreenCat' rel='external nofollow' class='url'>GreenCat</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20111011-00/?p=9423#comment-939933">
			October 11, 2011 at 2:08 pm</a>		</div>

		<p>Wasn&#39;t it better to establish an intelligible error code newly?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-939943">
				<div id="div-comment-939943" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Crescens2k</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20111011-00/?p=9423#comment-939943">
			October 11, 2011 at 2:09 pm</a>		</div>

		<p>I have seen Invalid Parameter come up in some other interesting contexts too.</p>
<p>One of them was that I was creating a catalog file for a Windows setup image, SIM was extracting files to my temporary directory but I accidentally let it run out of space. The files that it extracted ended up pretty much undeleteable because of this. For some reason, every time I tried doing something with those files it returned this error. If I tried to copy somewhere else, it produced this error, if I tried to delete then it produced this error. This was even with an administrator account and the exact same thing occured under explorer and cmd.</p>
<p>In the end, I had to boot into Windows PE to delete these files.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-939953">
				<div id="div-comment-939953" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Pete</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20111011-00/?p=9423#comment-939953">
			October 11, 2011 at 2:11 pm</a>		</div>

		<p>I keep software ISO&#39;s on a memory stick so I can quickly install my common programs. I have hit this problem a few times, tried NTFS but you have to be so careful with it. exFAT is a vast improvement just need better support in other OS&#39;s.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-939763">
				<div id="div-comment-939763" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">JM</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20111011-00/?p=9423#comment-939763">
			October 11, 2011 at 7:49 am</a>		</div>

		<p>I format my large USB sticks as NTFS for this reason. The primary reason I *have* sticks that big is to store large files, not to store lots of small files.</p>
<p>Of course, NTFS on a removable drive is fraught with peril, as detailed on this very site (<a rel="nofollow" target="_new" href="http://blogs.msdn.com/b/oldnewthing/archive/2004/04/05/108205.aspx" rel="nofollow">blogs.msdn.com/&#8230;/108205.aspx</a>). But if you play by the rules, it works fine.</p>
<p>I didn&#39;t know exFAT existed, so that&#39;s good information. Linux support is still sketchy, it seems, which is a reason for me to favor NTFS for now.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-939973">
				<div id="div-comment-939973" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Leo Davidson</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20111011-00/?p=9423#comment-939973">
			October 11, 2011 at 3:07 pm</a>		</div>

		<p>One warning about exFAT: Don&#39;t build Visual Studio 2010 projects on exFAT drives. That combination can result in randomly corrupted binaries.</p>
<p>The bug is in VS2010, not in the exFAT filesystem, so it&#39;s not a reason to distrust exFAT (I use it myself for large removable drives where I don&#39;t care about compatibility with other OS). It&#39;s just something to be aware of and a combination to avoid. It certainly caused me some headaches.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-939993">
				<div id="div-comment-939993" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Nick</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20111011-00/?p=9423#comment-939993">
			October 11, 2011 at 3:29 pm</a>		</div>

		<p>I&#39;ve always been sad that Windows can put split files back together (with copy) but cannot split them.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-940013">
				<div id="div-comment-940013" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Anonymous Coward</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20111011-00/?p=9423#comment-940013">
			October 11, 2011 at 4:40 pm</a>		</div>

		<p>Leo, why is that? Why would VS2010 care about what file system is used? Or how, even?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-940163">
				<div id="div-comment-940163" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">ender</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20111011-00/?p=9423#comment-940163">
			October 12, 2011 at 3:01 am</a>		</div>

		<p>Using removable drives with alternate filesystems would&#39;ve been so much easier if Windows didn&#39;t treat drives with removable flag set as special and didn&#39;t prevent you from partitioning them. Unfortunately it does, and finding USB sticks that don&#39;t have the removable flag set is nearly impossible (what I don&#39;t understand is, why Windows treats the removable flag as special &#8211; it has nothing to do with the drive actually being removable, as I learned when I tried installing XP on a CF card in IDE-&gt;CF adapter).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-940203">
				<div id="div-comment-940203" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Leo Davidson</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20111011-00/?p=9423#comment-940203">
			October 12, 2011 at 4:13 am</a>		</div>

		<p>@Anonymous Coward:</p>
<p>I don&#39;t know how VS2010 manages to have such a bug but it has been confirmed. There&#39;s more info here:</p>
<p><a rel="nofollow" target="_new" href="http://www.pretentiousname.com/vs2010exfatbug/index.html" rel="nofollow">http://www.pretentiousname.com/&#8230;/index.html</a></p>
<p><a rel="nofollow" target="_new" href="https://connect.microsoft.com/VisualStudio/feedback/details/552011/vs2010-produces-corrupt-binaries-for-projects-on-exfat-partitions" rel="nofollow">connect.microsoft.com/&#8230;/vs2010-produces-corrupt-binaries-for-projects-on-exfat-partitions</a></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-940233">
				<div id="div-comment-940233" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Gabe</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20111011-00/?p=9423#comment-940233">
			October 12, 2011 at 7:34 am</a>		</div>

		<p>Leo: From the Connect page, it seems the problem is actually related to incremental linking. It only seems to be exFAT-related because it&#39;s easy to reproduce on exFAT (and maybe FAT), but very difficult to repro on NTFS.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-alegrigoriev odd alt thread-odd thread-alt depth-1" id="comment-940243">
				<div id="div-comment-940243" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/alegr1' rel='external nofollow' class='url'>alegr1</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20111011-00/?p=9423#comment-940243">
			October 12, 2011 at 7:48 am</a>		</div>

		<p>@Gabe:</p>
<p>Must be caused by the last modification time granularity.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-940313">
				<div id="div-comment-940313" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Tanveer Badar</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20111011-00/?p=9423#comment-940313">
			October 12, 2011 at 11:29 am</a>		</div>

		<p>My guess. Screw with a transactional system&#39;s log and it screws you back.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-940343">
				<div id="div-comment-940343" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blogs.msdn.com/johnstonj_4000_inn_2D00_soft.com/ProfileUrlRedirect.ashx' rel='external nofollow' class='url'>johnstonj@inn-soft.com</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20111011-00/?p=9423#comment-940343">
			October 12, 2011 at 1:52 pm</a>		</div>

		<p>@Tanveer: right &#8211; NTFS is a journaling file system. &nbsp;How does a surprise USB removal screw with its log? &nbsp;&quot;It is a critical functionality of NTFS for ensuring that its internal complex data structures, and indices will remain consistent in case of system crashes&quot; (&#8211;Wikipedia). &nbsp;Which is true with any similar file system. &nbsp;Or so I thought.</p>
<p>I&#39;m genuinely curious how this can be &#8211; surprise removals when the USB drive is FAT should be causing corruption &#8211; not NTFS &#8211; right??</p>
<p>Something else is going on and I&#39;d love to know what.</p>
<div class="post">[<i>That &quot;something else&quot; is usability. Users are accustomed to yanking USB drives as soon as the copy dialog disappears. If they yank it before the journal flushes, then the drive is still intact, but the last few bytes of the file <span style="text-decoration:underline;">did not get copied</span>. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-940363">
				<div id="div-comment-940363" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Evan</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20111011-00/?p=9423#comment-940363">
			October 12, 2011 at 2:02 pm</a>		</div>

		<p>@James:</p>
<p>(I don&#39;t have direct knowledge about this, but I think this is a good guess. I&#39;ll talk as if it&#39;s true.) It&#39;s a combination of factors. If you follow the link JM posted, you&#39;ll see there are options for &quot;optimize for speed&quot; vs &quot;optimize for quick removal&quot;. The former is what you&#39;re supposed to use with NTFS, but it will enable write caching. That write caching is why you can lose data, because it might not actually be flushed out to disk.</p>
<p>File system corruption itself is a different beast, and NTFS will be better at that &#8212; and you won&#39;t get it with a USB drive any more likely than with a hard drive. However, this refers to file system metadata: what blocks are associated with which files, link counts of files, etc. This is what you get from the NTFS journal &#8212; not protection that the data you are writing is on disk, but that the file system structures remain consistent.</p>
<p>Long story short: NTFS should make you more robust from a file system point of view. However, the fact that apparently you may need to turn on write caching to use it means that you can lose data.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-940303">
				<div id="div-comment-940303" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blogs.msdn.com/johnstonj_4000_inn_2D00_soft.com/ProfileUrlRedirect.ashx' rel='external nofollow' class='url'>johnstonj@inn-soft.com</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20111011-00/?p=9423#comment-940303">
			October 12, 2011 at 10:08 am</a>		</div>

		<p>Pardon my ignorance, but why is NTFS so finicky about being on a removable drive? &nbsp;Shouldn&#39;t it be *more* robust and not less robust on a removable drive? &nbsp;My computer&#39;s internal NTFS-partitioned hard drive doesn&#39;t get scrambled when the computer crashes / loses power. &nbsp;Why would that happen to my NTFS USB stick on surprise removal?! &nbsp;(I thought NTFS was designed to have more robust data structures than FAT, etc. etc. &nbsp;I can&#39;t remember the last time I had severe file system corruption with NTFS on my Windows drive, if ever.)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-940473">
				<div id="div-comment-940473" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">NB</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20111011-00/?p=9423#comment-940473">
			October 13, 2011 at 4:57 am</a>		</div>

		<p>Doesn&#39;t everyone use &quot;Safe Removal&quot; from System Notification Area when removing an USB thumb drive?</p>
<p>That should ensure that you never lose data even if the file system is NTFS.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-alegrigoriev odd alt thread-odd thread-alt depth-1" id="comment-940613">
				<div id="div-comment-940613" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/alegr1' rel='external nofollow' class='url'>alegr1</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20111011-00/?p=9423#comment-940613">
			October 13, 2011 at 9:19 am</a>		</div>

		<p>I think NTFS FSD doesn&#39;t check if the volume is removable, for different file cache policies. FASTFAT driver does. For example, lazy write may be less lazy on a removable FAT volume. If FSD fails to consider removability, it may become very annoying, such as XP/Win2003 behavior with the USB drives. God forbid you unplugged them without invoking &quot;safe removal&quot;. They will tell you about delayed write error on a metafile.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-940703">
				<div id="div-comment-940703" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">David Walker</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20111011-00/?p=9423#comment-940703">
			October 13, 2011 at 11:50 am</a>		</div>

		<p>That VS2010 bug is REALLY weird. &nbsp;Especially since Microsoft has confirmed it, and it IS exFAT-related. &nbsp;As several people pointed out, Visual Studio should not care about the file type of the underlying storage. &nbsp;</p>
<p>But as Leo points out on his page, mt.exe had a &quot;FAT32 workaround&quot; switch at one point. &nbsp; I&#39;ll bet there was some code in Visual Studio or mt.exe that did some things that Raymond has said on this very blog, that you should not do. &nbsp;:-)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-940483">
				<div id="div-comment-940483" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blogs.msdn.com/johnstonj_4000_inn_2D00_soft.com/ProfileUrlRedirect.ashx' rel='external nofollow' class='url'>johnstonj@inn-soft.com</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20111011-00/?p=9423#comment-940483">
			October 13, 2011 at 6:53 am</a>		</div>

		<p>&quot;options for &quot;optimize for speed&quot; vs &quot;optimize for quick removal&quot;. The former is what you&#39;re supposed to use with NTFS&quot;</p>
<p>Right, it seems pretty obvious the latter option disables write caching. &nbsp;If the former is what you have to use with NTFS then the reasons for requiring safe removal should be obvious. &nbsp;It&#39;s good to know that at least the total file system doesn&#39;t get corrupted/trashed, according to Raymond. &nbsp;It&#39;s reasonable to expect an individual file recently written to have issues. &nbsp;Not reasonable for the file system to be trashed which was my initial impression upon reading about this requirement.</p>
<p>I don&#39;t really see why the &quot;quick removal&quot; option *should* be incompatible with NTFS. &nbsp;Maybe the NTFS driver just does not support drives that don&#39;t have write caching and the business case wasn&#39;t made for supporting it? &nbsp;(I can&#39;t see a reason why the NTFS driver would care about how the underlying drive caching works, but then again I&#39;ve never written a file system driver). &nbsp;And then the question: what if I change the setting for speed, format a USB stick as NTFS, and then move the drive to another computer that hasn&#39;t been configured yet. &nbsp;Does the drive refuse to mount until I change the setting? &nbsp;Does the setting change automatically? &nbsp;Or does NTFS run anyway in a safer configuration for quick removal? &nbsp;(Somebody with more time than me can try this!)</p>
<p>It seems to me that if NTFS supported &quot;optimize for quick removal&quot; then it would be an even safer choice than FAT. &nbsp;I could use it with the same quick removal style as a FAT32 drive. &nbsp;And if I yank the drive in the middle of writing all kinds of stuff to the drive, at least the file system should stay consistent and not make a mess of itself like FAT file systems might.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-940813">
				<div id="div-comment-940813" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">640k</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20111011-00/?p=9423#comment-940813">
			October 13, 2011 at 3:42 pm</a>		</div>

		<p>ntfs has been a transactional file system for many years. Not a single byte should be corrupt or missing, it should be foolproof.</p>
<p>Wby does the copy dialog disappear (or indicate operation finished) before a copy operation is flushed on a removable file system?</p>
<div class="post">[<i>It finished writing the last byte. As far as the file copy is concerned, it&#39;s done. (Forcing a flush is in general <a href="http://blogs.msdn.com/b/oldnewthing/archive/2010/09/09/10059575.aspx" rel="nofollow">a bad idea</a>.) -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-940833">
				<div id="div-comment-940833" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Gabe</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20111011-00/?p=9423#comment-940833">
			October 13, 2011 at 4:06 pm</a>		</div>

		<p>640k: Transactions in NTFS are optional; they have to be initiated by the application. Even so, transactions ensure that data is not corrupt, not missing. In other words, the data will all be there (committed) or all missing (rolled back).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-alegrigoriev even thread-even depth-1" id="comment-940853">
				<div id="div-comment-940853" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/alegr1' rel='external nofollow' class='url'>alegr1</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20111011-00/?p=9423#comment-940853">
			October 13, 2011 at 4:33 pm</a>		</div>

		<p>&quot;It finished writing the last byte. As far as the file copy is concerned, it&#39;s done. (Forcing a flush is in general a bad idea.) -Raymond&quot;</p>
<p>In Vista+,if you copy a large file to a USB drive, and want to cancel operation, you may have to wait for long time. Because it&#39;s in overlapped mode, not cached, and has enormous amount of pending write IOs which are not cancelable. It doesn&#39;t need flush. Don&#39;t remember if Win7SP1 has it fixed.</p>
<p>But in older OSes, when the lazy write was used, it was making total sense to limit amount of dirty data for 1 seconds of writes worth, or so.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-940923">
				<div id="div-comment-940923" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Someone</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20111011-00/?p=9423#comment-940923">
			October 14, 2011 at 1:48 am</a>		</div>

		<p>@Gabe: I&#39;m not sure if 640k is talking about the fact that NTFS is a journaling file system since it was invented (which only protects metadata), or about the transactional support added with Vista that allows commit/rollback of file operations like a database. (I would not consider something introduced in Vista as being existent &quot;for many years&quot;.)</p>
<p>I&#39;m also not sure, if committing a transactional file operations really means that all data related to that operations (metadata and filedata) are flushed to disks during the commit. I see this file transactions only as a form of isolation: Other processes will see the transacted changes all at once, or never, but no intermediate changes.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-941083">
				<div id="div-comment-941083" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Anonymous</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20111011-00/?p=9423#comment-941083">
			October 14, 2011 at 2:59 pm</a>		</div>

		<p>Can&#39;t send mail to user: not a typewriter</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-941123">
				<div id="div-comment-941123" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Evan</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20111011-00/?p=9423#comment-941123">
			October 15, 2011 at 4:21 am</a>		</div>

		<p>@Someone: If NTFS transactions *don&#39;t* flush to disk (or at least have that as an option), I would view that as a major problem. Maybe I&#39;m too much in a database mindset, but to me, &quot;transaction&quot; (at least in the context of disk operations) means ACID. If you lack a flush you don&#39;t even really get isolation, because if it crashes in the middle than a process that starts after the restart isn&#39;t isolated from the intermediate changes; for this among other reasons, IMO transactions without ACID buy very little. (Exception: the OS says &quot;transaction committed!&quot; but it is not flushed to disk. A crash happens. The state of the system after boot is in the pre-transaction state. This isn&#39;t ideal, but it&#39;s pretty good as long as if you want durability, you can stick a flush inside your txn.)</p>
<p>Fortunately, <a rel="nofollow" target="_new" href="http://msdn.microsoft.com/en-us/magazine/cc163388.aspx" rel="nofollow">msdn.microsoft.com/&#8230;/cc163388.aspx</a> indicates that it&#39;s ACID: &quot;When I say transacted file operations, I am talking about transactions with fully ACID semantics&quot;.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-941133">
				<div id="div-comment-941133" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">640k</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20111011-00/?p=9423#comment-941133">
			October 15, 2011 at 7:06 am</a>		</div>

		<p>Forcing a flush from a GUI standpoint on *removable file system* is NOT a bad idea.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-941153">
				<div id="div-comment-941153" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">foo.bar</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20111011-00/?p=9423#comment-941153">
			October 15, 2011 at 2:40 pm</a>		</div>

		<p>A bug the Windows team never bothered to fix</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-941183">
				<div id="div-comment-941183" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Klimax</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20111011-00/?p=9423#comment-941183">
			October 15, 2011 at 11:43 pm</a>		</div>

		<p>@foo.bar:</p>
<p>What bug? Error in error message? (passing internal error)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-941213">
				<div id="div-comment-941213" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Someone</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20111011-00/?p=9423#comment-941213">
			October 17, 2011 at 2:34 am</a>		</div>

		<p>@Evan: I found a better explanation here: <a rel="nofollow" target="_new" href="http://msdn.microsoft.com/en-us/library/ee240893%28v=VS.85%29.aspx" rel="nofollow">msdn.microsoft.com/&#8230;/ee240893%28v=VS.85%29.aspx</a>. &quot;When a commit occurs, TxF first flushes all undo information, then flushes the actual file changes, and then writes and flushes a commit record.&quot; etc etc</p>
<p>So yes, TxF not only provides isolation of ongoing modifications but also ensures the persistence of commits.</p>
<p>&quot;Forcing a flush from a GUI standpoint on *removable file system* is NOT a bad idea.&quot; I also think so because this would perform better than doing all operations with a disabled write cache.</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>