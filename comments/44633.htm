<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (4)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-1176553">
				<div id="div-comment-1176553" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150219-00/?p=44633#comment-1176553">
			February 19, 2015 at 7:03 am</a>		</div>

		<p>Ah yes private heap for arena memory management. Glad that idea is not abandoned to the mists of time.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1176623">
				<div id="div-comment-1176623" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Cody</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150219-00/?p=44633#comment-1176623">
			February 19, 2015 at 10:00 am</a>		</div>

		<p>Interesting article about timer queues. I have recently dealt with private heaps, so I can relate well to the comparison you make in this article. I assume that if the waits and timer callbacks occur in a separate thread, then proper synchronization (i.e. mutexes and such) would also be needed to prevent issues like data corruption.</p>
<p>Thanks for the analysis.</p>
<p>Cody Licorish</p>
<p>Tulane Univ. / Freeman School student</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1176663">
				<div id="div-comment-1176663" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Josh</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150219-00/?p=44633#comment-1176663">
			February 19, 2015 at 6:12 pm</a>		</div>

		<p>@Harry Johnston: This claims msvcrt stopped using a private heap in Visual Studio 2012. <a rel="nofollow" target="_new" href="http://stackoverflow.com/questions/21625330/does-msvcrt-uses-a-different-heap-for-allocations-since-vs2012-2010-2013">stackoverflow.com/&#8230;/does-msvcrt-uses-a-different-heap-for-allocations-since-vs2012-2010-2013</a></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1176643">
				<div id="div-comment-1176643" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Harry Johnston</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150219-00/?p=44633#comment-1176643">
			February 19, 2015 at 12:47 pm</a>		</div>

		<p>@Joshua: oddly enough, the Visual Studio C runtime library uses a private heap rather than the process default heap. &nbsp;That&#39;s one of the reasons you can run into trouble if a DLL uses a different runtime instance than the executable. &nbsp;But the idea is *definitely* not abandoned.</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>