<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (16)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-1021293">
				<div id="div-comment-1021293" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Henke37</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20121116-00/?p=6073#comment-1021293">
			November 16, 2012 at 7:10 am</a>		</div>

		<p>Of course, just because you can doesn&#39;t mean that you should.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1021303">
				<div id="div-comment-1021303" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">parkrrrr</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20121116-00/?p=6073#comment-1021303">
			November 16, 2012 at 7:25 am</a>		</div>

		<p>Isn&#39;t &quot;Hey, check it out; it works&quot; the rallying cry of every programmer who ever made it necessary for you to make compromises for the sake of compatibility?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1021323">
				<div id="div-comment-1021323" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Random832</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20121116-00/?p=6073#comment-1021323">
			November 16, 2012 at 7:49 am</a>		</div>

		<p>I was going to check whether this syntax is documented or not, to reply to parkrrrr, but I couldn&#39;t find where the regular forwarding syntax was documented.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1021343">
				<div id="div-comment-1021343" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">David Walker</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20121116-00/?p=6073#comment-1021343">
			November 16, 2012 at 8:00 am</a>		</div>

		<p>I never thought the loader would be saying &quot;Whoa!&quot; but it&#39;s an amusing thought. &nbsp;Anthropomorphizing is fun!</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1021353">
				<div id="div-comment-1021353" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20121116-00/?p=6073#comment-1021353">
			November 16, 2012 at 8:15 am</a>		</div>

		<p>@parkrrr, He&#39;s depending on compiler internals rather than Windows internals. Having read the PE spec, I can see this will continue to work on newer versions of Windows. I have no idea if this will work on newer versions of compilers and I&#39;d wager Raymond doesn&#39;t either. (You&#39;ll notice on recompile if this gets broken in a newer compiler version.)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-fjeldse odd alt thread-odd thread-alt depth-1" id="comment-1021363">
				<div id="div-comment-1021363" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Erik+F' rel='external nofollow' class='url'>Erik F</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20121116-00/?p=6073#comment-1021363">
			November 16, 2012 at 8:15 am</a>		</div>

		<p>@Parkrrrr: That&#39;s true when someone uses an undocumented/abusive method to achieve something, but in this case the &quot;#x&quot; method is documented (at least it was in Win16, and Windows is known for its back-compat). Doing some digging, I did find a VS6 doc page that uses this format for specifying ordinals: <a rel="nofollow" target="_new" href="http://msdn.microsoft.com/en-us/library/aa264882%28v=vs.60%29.aspx" rel="nofollow">msdn.microsoft.com/&#8230;/aa264882%28v=vs.60%29.aspx</a></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1021373">
				<div id="div-comment-1021373" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">parkrrrr</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20121116-00/?p=6073#comment-1021373">
			November 16, 2012 at 8:39 am</a>		</div>

		<p>Whether this specific behavior is documented or not is beside the point, really.</p>
<p>If you discovered something works (on at least one computer, in at least one test case, for at least one sheep in Scotland who is black on at least one side) by writing the code and seeing what it did, two things are possible. Either you&#39;ve discovered undocumented behavior, or you&#39;ve discovered documented behavior but don&#39;t know that you have. Short of looking for the documentation, you have no way to know whether you&#39;re in the &quot;bad&quot; or &quot;okay&quot; case. So you should check the documentation to make sure. But since that&#39;s the case, why not just check the documentation first?</p>
<div class="post">[<em>It&#39;s much easier to find an answer once you know what the answer is. (In other words: Now that you know the answer, you have a better chance of finding it in the documentation since you know what search keywords are likely to work.) -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1021383">
				<div id="div-comment-1021383" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">John</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20121116-00/?p=6073#comment-1021383">
			November 16, 2012 at 9:03 am</a>		</div>

		<p>Failure to find documentation does not mean documentation does not exist. &nbsp;You can prove that something is documented. &nbsp;You cannot prove that something is not documented (unless explicitly documented as being undocumented). &nbsp;Of course if you A) assume everything is undocumented by default and B) do not rely on undocumented behavior then you will be safe.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1021393">
				<div id="div-comment-1021393" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">me2</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20121116-00/?p=6073#comment-1021393">
			November 16, 2012 at 9:28 am</a>		</div>

		<p>&quot;Windows is known for its back-compat&quot; Try this FAIL</p>
<p>IMPORTS</p>
<p>Dial = B.#1</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1021403">
				<div id="div-comment-1021403" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blogs.msdn.com/timothy_4000_roseharp.com/ProfileUrlRedirect.ashx' rel='external nofollow' class='url'>timothy@roseharp.com</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20121116-00/?p=6073#comment-1021403">
			November 16, 2012 at 10:19 am</a>		</div>

		<p>[QUOTE]You can hide a number inside a string by using MAKEINTRESOURCE, and you can hide a string inside a number by using the &#39;#&#39; character.</p>
<p>Given that the number sign has been used in the past to hide a number inside a string[/QUOTE]</p>
<p>I&#39;m confused. Are the &quot;string in number&quot; and &quot;number in string&quot; reversed in the first sentence?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1021413">
				<div id="div-comment-1021413" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20121116-00/?p=6073#comment-1021413">
			November 16, 2012 at 11:13 am</a>		</div>

		<p>@me2: I&#39;m pretty sure there&#39;s a more appropriate syntax for import by ordinal.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1021453">
				<div id="div-comment-1021453" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Neil</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20121116-00/?p=6073#comment-1021453">
			November 17, 2012 at 1:19 pm</a>		</div>

		<p>If it was so hard for Raymond to find out the appropriate documentation, I wonder how hard it is going to be for me to find out what GetProcAddress does. (It amuses me to think that it could return ERROR_FILE_NOT_FOUND for instance.)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1021463">
				<div id="div-comment-1021463" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20121116-00/?p=6073#comment-1021463">
			November 18, 2012 at 5:10 pm</a>		</div>

		<p>@Neil: You did GetProcAddress on a forwarded function and the DLL it was forwarded to was not found.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-cheong odd alt thread-odd thread-alt depth-1" id="comment-1021473">
				<div id="div-comment-1021473" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/cheong00' rel='external nofollow' class='url'>cheong00</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20121116-00/?p=6073#comment-1021473">
			November 18, 2012 at 10:05 pm</a>		</div>

		<p>@Erik: FYI, DllImport in latest version of Visual Studio uses it as well. Seems fundamental blocks like this won&#39;t change a lot.</p>
<p><a rel="nofollow" target="_new" href="http://msdn.microsoft.com/en-us/library/f5xe74x8(v=vs.110).aspx" rel="nofollow">msdn.microsoft.com/&#8230;/f5xe74x8(v=vs.110).aspx</a></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1021483">
				<div id="div-comment-1021483" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">640k</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20121116-00/?p=6073#comment-1021483">
			November 19, 2012 at 1:43 am</a>		</div>

		<p>[It&#39;s much easier to find an answer once you know what the answer is. (In other words: Now that you know the answer, you have a better chance of finding it in the documentation since you know what search keywords are likely to work.) -Raymond]</p>
<p>This is an indication of that the documentations is almost worthless. Although most blame has to be assigned to the search engine used.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-cheong odd alt thread-odd thread-alt depth-1" id="comment-1021583">
				<div id="div-comment-1021583" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/cheong00' rel='external nofollow' class='url'>cheong00</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20121116-00/?p=6073#comment-1021583">
			November 19, 2012 at 7:54 pm</a>		</div>

		<p>@640k: Indeed.</p>
<p>In a recent question asked in MS forums, someone called Control.Invoke() and meet &quot;Invoke or BeginInvoke cannot be called on a control until the window handle has been created.&quot; exception, and doesn&#39;t know what to do.</p>
<p>In fact, there&#39;s a line in Remarks section of Control.InvokeRequired property tell you that you should also check for Control.IsHandleCreated if it&#39;ll be run at a place you&#39;re not sure whether target window is created.</p>
<p>That line does not exist on the Control.Invoke() page itself.</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>