<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (22)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-801923">
				<div id="div-comment-801923" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Marquess</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100111-00/?p=15333#comment-801923">
			January 11, 2010 at 7:09 am</a>		</div>

		<p>My first reaction was &quot;Why should you?&quot; After all, as a certain Raymond Chen once blogged: Do not change program semantics in the debug build. (Which is pretty much the same issue)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-801953">
				<div id="div-comment-801953" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://K.Hagan@thermoteknix.com' rel='external nofollow' class='url'>Ken Hagan</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100111-00/?p=15333#comment-801953">
			January 11, 2010 at 8:28 am</a>		</div>

		<p>@Marquess: Because if you don&#8217;t, you end up with an eco-system stuffed full of programs that require workarounds, making Windows slow and bloated, and programmers who never find out that they have bugs they ought to fix.</p>
<p>The point about using the debugger as a switch is that the affected people are the original guilty party AND in a position to do something about it.</p>
<p>For similar reasons, one might suggest that all app-compat workarounds should squawk through OutputDebugString each time they are used. Again, this will really only be an issue for the very people who might be able to do something about it.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-801973">
				<div id="div-comment-801973" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">DriverDude</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100111-00/?p=15333#comment-801973">
			January 11, 2010 at 9:31 am</a>		</div>

		<p>Aren&#8217;t compatibility workarounds created after the buggy app shipped? Which means the people in the best position to do fix it &#8211; the original author or company &#8211; has essentially stopped supporting or caring about their product. So how does it help to disable the workarounds when a debugger is running?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-801983">
				<div id="div-comment-801983" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Marquess</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100111-00/?p=15333#comment-801983">
			January 11, 2010 at 9:54 am</a>		</div>

		<p>Right. Not only are app-compat workarounds only for programs only in the wild already, and only targetting a specific version. Patch it, and you better patch the app-compat issue as well.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-801993">
				<div id="div-comment-801993" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Duran</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100111-00/?p=15333#comment-801993">
			January 11, 2010 at 10:27 am</a>		</div>

		<p>I&#8217;m totally with you. &nbsp;It should be an exceedingly rare event that program behavior should be changed under a debugger. &nbsp;It should raise eyebrows and provoke discussion. &nbsp;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-802043">
				<div id="div-comment-802043" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">pete.d</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100111-00/?p=15333#comment-802043">
			January 11, 2010 at 11:18 am</a>		</div>

		<p>Sorry Microsoft (and Raymond). &nbsp;As you already know, you&#8217;re in a no-win situation. &nbsp;Fine-tune Windows to accommodate all the crappy software that&#8217;s been written and is out there being used, and you wind up with bloat. &nbsp;Everyone complains that Windows is slow and bloated.</p>
<p>On the other hand, fail to accommodate all the crappy software that&#8217;s been written and is out there being used, and you wind up with applications running on Windows that are crappy and don&#8217;t work correctly. &nbsp;But no one will believe that it&#8217;s the fault of the crappy software. &nbsp;They still say it&#8217;s Windows that&#8217;s doing screwy things.</p>
<p>Bonus unfair criticism: try to point out that it&#8217;s the fault of the crappy software and not Windows, the Windows haters will all say &quot;well, it&#8217;s still Windows&#8217; fault for having a hard-to-use API&quot;. &nbsp;As if Cocoa is some walk in the park.</p>
<p>On the bright side, bloat is harder and harder to notice, as computers get faster and faster (okay, so CPU speeds have fallen away in favor of multi-coreâ€¦but one can see similar gains anyway) and memory and storage is cheaper and cheaper. &nbsp;The compatibility-hack approach probably is the right &quot;you lose&quot; choice to make, out of an impossible situation. &nbsp;:)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-802053">
				<div id="div-comment-802053" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">osexpert</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100111-00/?p=15333#comment-802053">
			January 11, 2010 at 11:33 am</a>		</div>

		<p>&quot;These checks are not cheap, because the compatibility infrastructure needs to look up the currently-running application&#8230;&quot; Why isnt&#8217;t this check performed once on startup based on file name, hash, version etc.?</p>
<p>And are really compat hacks added directly in production code like that?? Wouldn&#8217;t it be possible/better to link/forward hacked methods to some hack dll eg. kernel32.hacks.dll (detours)?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-802063">
				<div id="div-comment-802063" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">osexpert</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100111-00/?p=15333#comment-802063">
			January 11, 2010 at 11:37 am</a>		</div>

		<p>If you read this article it claims windows does exactly what I suggested:</p>
<p><a href="http://msdn.microsoft.com/en-us/library/bb432182%28VS.85%29.aspx" target=_new rel=nofollow rel="nofollow">http://msdn.microsoft.com/en-us/library/bb432182%28VS.85%29.aspx</a></p>
<p>&#8220;With Appfix, hooks are installed for APIs called by the components of the application. These hooks point to stub functions that can be called instead of the system functions (also known as shimming).&#8221;</p>
<div class=post>[<i>For app-specific fixes that break other apps, then yes that&#8217;s what happens. But if a compatibility fix causes no harm to other apps, then there&#8217;s no point adding the switch statement. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-802073">
				<div id="div-comment-802073" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Alexandre Grigoriev</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100111-00/?p=15333#comment-802073">
			January 11, 2010 at 12:19 pm</a>		</div>

		<p>I&#8217;ll repeat my suggestion: only expose new features to the executables that are marked with the current OS version, while disabling kludge-type workarounds for such processes. What that means for an ISV is: if you want these new goodies, get your stuff together and fix the shit. If an ISV can&#8217;t be bothered fixing it, or is defunct, then that software should not have access to any new GUI look, or kernel functionality. That will also reduce compatibility issues.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-802093">
				<div id="div-comment-802093" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Gabe</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100111-00/?p=15333#comment-802093">
			January 11, 2010 at 12:29 pm</a>		</div>

		<p>Alexandre: Are you suggesting that I have to recompile every EXE on my box in order to use a shell extension that uses new kernel functionality? That&#8217;s insane! Can you imagine the support hassles?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-mike-dimmick even thread-even depth-1" id="comment-802103">
				<div id="div-comment-802103" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Mike+Dimmick' rel='external nofollow' class='url'>Mike Dimmick</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100111-00/?p=15333#comment-802103">
			January 11, 2010 at 12:29 pm</a>		</div>

		<p>Darn! meant to add: Alexandre&#8217;s plan falls apart in the plug-in model. If a new version of IE is marked with the current OS version, you should not disable &#8216;workarounds&#8217; that target problems in Flash Player.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-mike-dimmick odd alt thread-odd thread-alt depth-1" id="comment-802113">
				<div id="div-comment-802113" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Mike+Dimmick' rel='external nofollow' class='url'>Mike Dimmick</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100111-00/?p=15333#comment-802113">
			January 11, 2010 at 12:30 pm</a>		</div>

		<p>Gabe: or even recompile every shell extension in order to use Windows Explorer.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-802133">
				<div id="div-comment-802133" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blog.wisefaq.com' rel='external nofollow' class='url'>Dale</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100111-00/?p=15333#comment-802133">
			January 11, 2010 at 1:25 pm</a>		</div>

		<p>Larry Osterman raised the case of the debug heap being different, and causing a heisenberg bug, here:</p>
<p><a rel="nofollow" target="_new" href="http://blogs.msdn.com/larryosterman/archive/2008/09/03/anatomy-of-a-heisenbug.aspx" rel="nofollow">http://blogs.msdn.com/larryosterman/archive/2008/09/03/anatomy-of-a-heisenbug.aspx</a></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-matteo odd alt thread-odd thread-alt depth-1" id="comment-802153">
				<div id="div-comment-802153" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Matteo+Italia' rel='external nofollow' class='url'>Matteo Italia</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100111-00/?p=15333#comment-802153">
			January 11, 2010 at 3:49 pm</a>		</div>

		<p>Exactly like the heisenbug I&#8217;m after in these days. I must thank you, Raymond and Dale (and, indirectly, Yuhong Bao :P ), for that information: I was exactly wondering why an app run smoothly in the debug build, and in the release build when started by the debugger but crashes when run normally.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-802183">
				<div id="div-comment-802183" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://nathan.tuggycomputer.com/' rel='external nofollow' class='url'>Nathan Tuggy</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100111-00/?p=15333#comment-802183">
			January 11, 2010 at 6:27 pm</a>		</div>

		<p>It occurs to me that you know you&#8217;re being a persistent annoyance if Raymond Chen starts aiming his Pre-emptive Comments at you&#8230; spare me from this fate!</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-802193">
				<div id="div-comment-802193" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Tuesday</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100111-00/?p=15333#comment-802193">
			January 11, 2010 at 6:30 pm</a>		</div>

		<p>Erm&#8230; Don&#8217;t reinvent the wheel with every new OS version? Just leave &quot;old&quot; things alone and implement glasses and shakes as new interfaces? These workarounds wouldn&#8217;t be necessary if the OS hadn&#8217;t changed. So who is to blame?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-mike-dimmick even thread-even depth-1" id="comment-802083">
				<div id="div-comment-802083" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Mike+Dimmick' rel='external nofollow' class='url'>Mike Dimmick</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100111-00/?p=15333#comment-802083">
			January 11, 2010 at 12:28 pm</a>		</div>

		<p>Alexandre, as Raymond *just explained*, the code path for the workaround is shorter than testing whether to apply the workaround.</p>
<p>I wouldn&#8217;t necessarily call it a workaround, in fact. It&#8217;s really tightening up the specification of the function; in Raymond&#8217;s example the function goes from returning 0 or WS_MAXIMIZED to returning 0 or (whatever the compiler chooses for boolean &#8216;true&#8217;).</p>
<p>Today I found that in implementing a new feature, I could finally add a feature to our porting library (it implements an obsolete interface from DOS-based devices on Windows CE). In doing so I discovered that various applications we&#8217;ve shipped that only used the CE version have misused that API, so I had to code it so that the behaviour would be reasonable for those apps.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-802213">
				<div id="div-comment-802213" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Drak</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100111-00/?p=15333#comment-802213">
			January 11, 2010 at 10:38 pm</a>		</div>

		<p>@Tuesday: Ah, so you advocate leaving bugs in the OS that you know about, and can fix with a one-liner (Raymonds first function)? Let&#8217;s never bugfix anything anymore :P</p>
<p>@Mike Dimmick: Raymonds fix actually returns TRUE or FALSE, not TRUE or 0 :)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-802233">
				<div id="div-comment-802233" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Dhericean</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100111-00/?p=15333#comment-802233">
			January 12, 2010 at 1:54 am</a>		</div>

		<p>I know it&#8217;s a bit of an aside but I felt I needed to share a very strange Heisenberg moment I had (almost 25 years ago).</p>
<p>I was a postgrad solid state chemist, building my own computer-controlled Raman Spectrometer. &nbsp;The spectrum was scanned by driving a stepper motor which turned a holographic grating. &nbsp;We had bought the controller boards for the motor and were communicating with them through an IEEE-488 interface from APL (the GPIB drivers were the only non-trivial assembler I ever wrote and are a story on their own &gt;.&lt; ).</p>
<p>The computer was communicating to the stepper motor controller fine, retrieving status and setting values, but the motor was not moving. &nbsp;So I got an oscillosope and put it across the outputs to check that the correct wave form was being produced. &nbsp;However when I put the oscilloscope on, the motor started to move; and when I took it off, it stopped again. &nbsp;As a non-electronic engineer I was left trying to wonder how I was going to explain that I needed an oscilloscope permanently connected to my spectrometer.</p>
<p>A more experienced hand diagnosed a floating ground on the low voltage side of the transformer (the wiring diagram provided did not show it being commoned) which was being grounded through the oscilloscope, and managed to rescue the instrument. &nbsp;But for a moment I really wondered if I had proved Heisenberg.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-802243">
				<div id="div-comment-802243" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Vilx-</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100111-00/?p=15333#comment-802243">
			January 12, 2010 at 4:23 am</a>		</div>

		<p>He, I got hit by the heap manager too one day. I was writing a software for a computing olympiad. My program took as a parameter another program (.exe file) and ran it in a controlled environment &#8211; well, as much as I could control it. I set limits for memory and CPU time, limited the security tokens, and monitored it continuously if it was sleep()ing too much. I also attached as a debugger in order to provide as much information about a crash as possible. One contest entry then managed to hit this heap manager behaviour. It was completing the task almost instantly when run as standalone, but when run under my controller software it took more than 10 seconds of solid CPU time (the contest time limit was 1 second). Turns out that the program was allocating 10,000 vectors or something and each one of those was a separate memory allocation by the heap manager. Under the debugger this took way more time. :)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-802273">
				<div id="div-comment-802273" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">fahadsadah</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100111-00/?p=15333#comment-802273">
			January 12, 2010 at 8:13 am</a>		</div>

		<p>@Alexandre:</p>
<p>Imagine this was done with Vista. There would be thousands of support calls: &quot;X works with Aero, Y doesn&#8217;t&quot;. People blame Micros~1 for creating a buggy and inconsistent OS.</p>
<p>Imagine it was done with 7. There would be thousands of support calls: &quot;X gives previews, Y doesn&#8217;t&quot;. People blame Micros~1 for creating a buggy and inconsistent OS.</p>
<p>It&#8217;s not as bad if it&#8217;s done with API calls only, though</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-802283">
				<div id="div-comment-802283" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">fahadsadah</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100111-00/?p=15333#comment-802283">
			January 12, 2010 at 8:16 am</a>		</div>

		<p>To the above, apply sed expression s/gives previews/works with Aero Peek/</p>
<p>OT: Alternatively, the sed expression can be written as: &quot;segives previewseworks with Aero Peeke&quot;</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>