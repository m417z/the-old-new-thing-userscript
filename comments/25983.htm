<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (29)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-526043">
				<div id="div-comment-526043" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Tim Smith</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070717-00/?p=25983#comment-526043">
			July 17, 2007 at 10:21 am</a>		</div>

		<p>I&#8217;ve always wonder how common that trick is. &nbsp;I&#8217;ve seen it used to avoid the reuse problem in VMS&#8217;s process IDs. &nbsp;I&#8217;ve used it myself to avoid the same.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-526103">
				<div id="div-comment-526103" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Gabe</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070717-00/?p=25983#comment-526103">
			July 17, 2007 at 11:07 am</a>		</div>

		<p>NTFS does a similar thing. File reference numbers (like inode numbers in Unix) are 64 bits. The first 48 bits are the index into a table and the next 16 bits are the sequence number (incremented every time that index is reused). That way if you have something that references file 12345, but file 12345 is deleted and gets reused, you know that your reference to file 12345 is no longer valid.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-526113">
				<div id="div-comment-526113" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">pcooper</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070717-00/?p=25983#comment-526113">
			July 17, 2007 at 11:13 am</a>		</div>

		<p>Assuming that they&#8217;re even lets you use the last bit as an internal flag of sorts. You just need to AND it with FFFE before handing it back to the OS.</p>
<p>(Not that I advocate doing such a thing. But I&#8217;ve seen it done.)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-526123">
				<div id="div-comment-526123" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">HitScan</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070717-00/?p=25983#comment-526123">
			July 17, 2007 at 11:29 am</a>		</div>

		<p>Was the last bit used as a flag in older versions of Windows the same way it is in Windows Mobile?</p>
<p>(Calling SetForegroundWindow on WM acts differently if you add 1 to your HWND)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-526133">
				<div id="div-comment-526133" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">John</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070717-00/?p=25983#comment-526133">
			July 17, 2007 at 11:30 am</a>		</div>

		<p>This is the part about Windows that I just don&#8217;t understand. &nbsp;I know backwards compatibility is important, but at what cost? &nbsp;Wouldn&#8217;t it be better for everyone in the long run if you forced people to do things the right way? &nbsp;With all these hacks to support bad practices it&#8217;s amazing Windows even works at all. &nbsp;It would not surprise me if there are still ancient hacks from the Windows 3.1 (or even DOS) days embedded deep in the kernel.</p>
<p>On the other hand, if a million programs do something the wrong way does that make it the right way? &nbsp;Personally I don&#8217;t think so, but I could see the argument for it.</p>
<p>It&#8217;s good to know I&#8217;ll still be able to run Lotus 1-2-3 on Windows 2045.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-526153">
				<div id="div-comment-526153" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://wizou.fr' rel='external nofollow' class='url'>Wizou</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070717-00/?p=25983#comment-526153">
			July 17, 2007 at 11:58 am</a>		</div>

		<p>&quot;Wouldn&#8217;t it be better for everyone in the long run if you forced people to do things the right way?&quot;</p>
<p>Raymond repeats it a lot :</p>
<p>If a new version of Windows removed those hacks and application X ceased working, most users would charge the OS and say &quot;I can&#8217;t use app X on Windows Y, so Windows Y sucks&quot;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-526163">
				<div id="div-comment-526163" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">CGomez</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070717-00/?p=25983#comment-526163">
			July 17, 2007 at 11:59 am</a>		</div>

		<p>I guess the problem is when the general media tells everyone a new OS like Vista &quot;doesn&#8217;t work with older hardware&quot;, that just lets vendors off the hook. &nbsp;(as if they didn&#8217;t write new drivers for XP or 2000).</p>
<p>After over a year of opportunity to beta test and seven months of release Hewlett Packard has decided to make their custmers buy new printers (to replace fairly new printers). &nbsp;I guess they need an influx of cash.</p>
<p>Such an unethical practice is going to get me looking elsewhere. &nbsp;I&#8217;m glad someone tries to make the upgrade to a new OS compatible, and that of course is MSFT.</p>
<p>I&#8217;m constantly amazed at the amount of work MSFT does to retain backwards compatibility and make the OS work better around buggy programs.</p>
<p>In some sense, it could hurt theoretical maximums of the system, like in this example, but I think in each case a reasonable bargain is struck between compatibility and having an extra 30,000 window handles or so that go unused.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-526173">
				<div id="div-comment-526173" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Bob</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070717-00/?p=25983#comment-526173">
			July 17, 2007 at 12:00 pm</a>		</div>

		<p>Speculating wildly, I would assume that programs assumed HWNDs were even because they have historically been classed with pointers in the 16-bit eras.</p>
<p>My guess is that people used the least significant bit to overload the meaning of an HWND/HANDLE. Some Win32 functions do something similar as I recall.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-526203">
				<div id="div-comment-526203" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Mal</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070717-00/?p=25983#comment-526203">
			July 17, 2007 at 12:14 pm</a>		</div>

		<p>@CGomez</p>
<p>Not wishing to drag things too far off topic, but such a tactic by HP seems incredibly self defeating &#8211; as soon as you force someone to purchase a new product you&#8217;re giving them free license to jump ship to a competitor.</p>
<p>(Not to mention the fact that HP make their money on consumables rather than new machines)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-526213">
				<div id="div-comment-526213" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">kbiel</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070717-00/?p=25983#comment-526213">
			July 17, 2007 at 12:25 pm</a>		</div>

		<blockquote><p>
  &gt;It&#8217;s good to know I&#8217;ll still be able to run Lotus 1-2-3 on Windows 2045.
</p></blockquote>
<p>Uh, you won&#8217;t. &nbsp;You can&#8217;t even run it on Vista. &nbsp;MS has dropped 16-bit support going forward.</p>
<p>As far as the never-ending backwards compatibility, I see the move to .NET as an attempt to break with the past. &nbsp;It gives developers a new API and, hopefully, corrects the flaws and assumption of the past. &nbsp;Of course, I expect that in 10-20 years we&#8217;ll be hearing stories of the broken bits of .NET that are still around because of all the programs that misused the API.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-mike-dimmick even thread-even depth-1" id="comment-526243">
				<div id="div-comment-526243" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Mike+Dimmick' rel='external nofollow' class='url'>Mike Dimmick</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070717-00/?p=25983#comment-526243">
			July 17, 2007 at 12:35 pm</a>		</div>

		<p>@kbiel: untrue. 16-bit support is dropped on x64 because the processor doesn&#8217;t support 16-bit and 64-bit programs simultaneously, and the effort of providing an emulator was considered too great. (One does appear in Virtual Server, though, you can still run DOS programs in a VM running a 32-bit OS.)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-526293">
				<div id="div-comment-526293" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Rich</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070717-00/?p=25983#comment-526293">
			July 17, 2007 at 1:09 pm</a>		</div>

		<p>I think it&#8217;s unfair to blame applications for using HWNDs after they&#8217;re destroyed. For a start, the application might be in a separate process, or the DestroyWindow might be in asynchronous code which the application vendors don&#8217;t have access to. This sort of race condition is therefore inevitable (especially if it is in practice harmless)&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-526323">
				<div id="div-comment-526323" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Wolf Logan</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070717-00/?p=25983#comment-526323">
			July 17, 2007 at 1:30 pm</a>		</div>

		<p>Rich:</p>
<p>That sounds something like &quot;it&#8217;s unfair to blame applications for using pointers to memory that&#8217;s been free()&#8217;d&quot;. Window handles are resources, and require the same primacy of management that memory allocations do. If you&#8217;re using a window handle, you&#8217;d better be able to control both ends of its lifecycle, or you shouldn&#8217;t be using that handle. There may be some esoteric edge condition where that&#8217;s not possible, but none springs to mind at the moment.</p>
<p>As for &quot;in practice harmless&quot;, it&#8217;s all fun and games until someone loses an eye.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-526433">
				<div id="div-comment-526433" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">John</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070717-00/?p=25983#comment-526433">
			July 17, 2007 at 2:50 pm</a>		</div>

		<blockquote><p>
  &gt; This is the part about Windows that I just don&#8217;t understand. &nbsp;I know backwards compatibility is important, but at what cost?
</p></blockquote>
<p>Just my personal opinion &#8211; at all costs. Microsoft is in business of providing operating systems that makes all existing software simply work. Because of this companies and individuals pay billions of dollars to Microsoft every year. And that&#8217;s why there is no other business like Microsoft. Other folks inevitable try to &quot;force people to do things the right way&quot; and they soon learn what the outcome is &#8211; irrelevance and/or bankruptcy.</p>
<p>I got an impression that with .NET folks at MS tried to avoid this backward-compatibility &quot;curse&quot; by allowing to have multiple .NETs running side by side. But this approach seemed to have too many limitation to work, such as only one runtime is allowed per process. So eventually it appears they had to make it backward compatible to allow previous components to run seamlessly.</p>
<p>Certainly, backward compatibility is a very hard thing to do, but those succeeding at it will be paid off handsomely.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-526513">
				<div id="div-comment-526513" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">HitScan</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070717-00/?p=25983#comment-526513">
			July 17, 2007 at 4:30 pm</a>		</div>

		<p>Rich: the problem isn&#8217;t that another program is using that same number later, but that the same program is using an HWND that has already been freed, and then may have been assigned to a different program, and thus sending messages to a window that won&#8217;t be expecting them.</p>
<p>An example of why it matters: WM_USER. Maybe in App X WM_USER+1 means &quot;update the whoozit in the corner of the window&quot; but in App Y it means &quot;Reload widget file&quot; or something else. If App X is randomly sending messages to a window in App Y, the outcome could be innocuous, or disastrous.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-526523">
				<div id="div-comment-526523" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">kbiel</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070717-00/?p=25983#comment-526523">
			July 17, 2007 at 4:56 pm</a>		</div>

		<p>Mike: I stand corrected. &nbsp;There is much misinformation on this point throughout the intarweb and I fell for it.</p>
<p>BTW, running it in Virtual Server (Virtual PC, VMWare, etc.) is not exactly the same. &nbsp;Implementing compatibility through a VM would probably stop the whining about backwards compatibility preventing forward progress. &nbsp;On the other hand, it hasn&#8217;t been until recently, in my opinion, that using VMs to run older software on older versions of Windows/DOS has become practical (or at least acceptable by business users).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-526533">
				<div id="div-comment-526533" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://deadnode.org/' rel='external nofollow' class='url'>James</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070717-00/?p=25983#comment-526533">
			July 17, 2007 at 4:59 pm</a>		</div>

		<p>Gabe: IIRC the commonality goes one step further, too &#8211; you can always use zero for the sequence number when requesting FILE records, and the first 16 entries have zero there because they never get reused. (It&#8217;s a while since I dug around in any of that, though!)</p>
<p>I&#8217;m with John on backwards compatibility. In this case, the cost is trivial anyway &#8211; a limit of &quot;only&quot; 30,000 or so windows instead of 60,000 in exchange for a few customers able to use your product without jumping through an extra hoop or two. In a similar vein, you&#8217;ll find malloc normally aligns blocks of memory so that you can safely put almost anything in them, even at the expense of losing a few bytes of memory. Do you really think the &quot;feature&quot; of having thousands more potential windows going unused is worth breaking existing code? I don&#8217;t.</p>
<p>It&#8217;s different with features which actually offer something useful &#8211; supporting files over 2Gb in size by breaking the ability to treat file sizes as a signed 32 bit integer, for example &#8211; but how often have you found yourself needing the extra 30,000 windows?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-526543">
				<div id="div-comment-526543" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">dave</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070717-00/?p=25983#comment-526543">
			July 17, 2007 at 5:14 pm</a>		</div>

		<p>&quot;In a similar vein, you&#8217;ll find malloc normally aligns blocks of memory so that you can safely put almost anything in them, even at the expense of losing a few bytes of memory.&quot;</p>
<p>malloc is REQUIRED to give you memory that&#8217;s properly aligned to hold anything. &nbsp;(C89 4.10.3; C99 7.20.3)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-526083">
				<div id="div-comment-526083" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Adam</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070717-00/?p=25983#comment-526083">
			July 17, 2007 at 10:58 am</a>		</div>

		<p>&quot;Why did we lose half of the window handles? Because there are programs out there that assume that window handles are always even numbers!&quot;</p>
<p>*boggle*</p>
<p>That&#8217;s just amazing! I wonder what they actually used this assumption for? Did they perhaps divide all their handles by 2 so they could save space by fitting them in &#8230; a 15-bit int?!?</p>
<p>I thought before I read the final sentence that it was going to be that some programs stored handles in a signed 16-bit int, but assumed that only +ve values were valid. That kind of makes sense in a weird kind of way. Not much sense, I&#8217;ll grant, but surely more sense than assuming they&#8217;re even!</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-526603">
				<div id="div-comment-526603" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.levicki.net/' rel='external nofollow' class='url'>Igor</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070717-00/?p=25983#comment-526603">
			July 17, 2007 at 6:34 pm</a>		</div>

		<p>But malloc() still doesn&#8217;t give you 16-byte aligned memory for SIMD register access.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-dean-harding even thread-even depth-1" id="comment-526613">
				<div id="div-comment-526613" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Dean+Harding' rel='external nofollow' class='url'>Dean Harding</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070717-00/?p=25983#comment-526613">
			July 17, 2007 at 7:24 pm</a>		</div>

		<blockquote><p>
  it appears they had to make it backward compatible to allow previous</p>
<p>  components to run seamlessly.
</p></blockquote>
<p>I think it was probably more of a case that as the platform matures, the need for a complete break becomes less and less. It&#8217;s obviously &quot;nice&quot; to be able to completely break compatibilty when needed, but it&#8217;s probably better not to if you can avoid it.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-526673">
				<div id="div-comment-526673" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Mark Steward</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070717-00/?p=25983#comment-526673">
			July 17, 2007 at 10:16 pm</a>		</div>

		<p>Just to stick up for Rich: these were 16-bit programs. &nbsp;They didn&#8217;t have pre-emption to worry about, and the main way for communicating was through HWNDs. &nbsp;Sure, use them defensively, but you can never get exclusive control of one.</p>
<p>HWNDs are a shared resource even now (per-winstation), and my guess is that 32-bit programs are still at risk of some lunatic creating and destroying a billion windows.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-526743">
				<div id="div-comment-526743" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Merus</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070717-00/?p=25983#comment-526743">
			July 18, 2007 at 12:54 am</a>		</div>

		<p>&quot;Raymond repeats it a lot :</p>
<p>If a new version of Windows removed those hacks and application X ceased working, most users would charge the OS and say &quot;I can&#8217;t use app X on Windows Y, so Windows Y sucks&quot; &quot;</p>
<p>I know this goes against Raymond&#8217;s policy of avoiding naming examples, but Vista made an important change to the permissions required for normal users to make changes to Program Files, which also impacted programs. And we saw exactly what happened when programs weren&#8217;t allowed to do that, and how those faults were laid at Vista&#8217;s feet, instead of the programs that changed Program Files to suit itself instead of putting its configuration settings in the user profile where it belongs.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-526913">
				<div id="div-comment-526913" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://jasonhaley.com/blog/archive/2007/07/18/139772.aspx' rel='external nofollow' class='url'>Jason Haley</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070717-00/?p=25983#comment-526913">
			July 18, 2007 at 10:11 am</a>		</div>

		<p></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-527223">
				<div id="div-comment-527223" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">DriverDude</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070717-00/?p=25983#comment-527223">
			July 18, 2007 at 3:39 pm</a>		</div>

		<p>&quot;I know this goes against Raymond&#8217;s policy of avoiding naming examples, but Vista made an important change to the permissions required for normal users to make changes to Program Files, which also impacted programs&#8230;.&quot;</p>
<p>In the name of backwards compatibility, Vista redirects writes to Program Files and HKLMSoftware into a user&#8217;s profile.</p>
<p>I was floored when I learned about this. This isn&#8217;t some little appcompat hack&#8230; it&#8217;s practically a filesystem filter inspecting each file open and moving it around. Granted, not a new idea, but not exactly something that was widely deployed. (It was amusing to read the KB article explaining how files can appear in a app&#8217;s File Open dialog but not in Explorer.)</p>
<p>Back to window handles: what did NT do when it detected somebody using an obsolete HWND? Can I set a flag in the OS so the Window Manager kills apps that try to use obsolete HWNDs? :=)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-527263">
				<div id="div-comment-527263" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Triangle</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070717-00/?p=25983#comment-527263">
			July 18, 2007 at 5:32 pm</a>		</div>

		<p>DriverDude: You would probably find that most of your favorite programs stopped functioning if you could do that.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-527333">
				<div id="div-comment-527333" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Illuminator</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070717-00/?p=25983#comment-527333">
			July 18, 2007 at 6:38 pm</a>		</div>

		<p>There&#8217;s always the brain-tickling option of reference-counting window handles (open/close).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-529293">
				<div id="div-comment-529293" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Yuhong Bao</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070717-00/?p=25983#comment-529293">
			July 23, 2007 at 7:04 pm</a>		</div>

		<p>BTW, I remember reading that Windows NT 3.51 and older automatically filled out the uniquifier part of a window handle (the high 16-bit) if it was zeroed. e.g. casting a window handle to a short, like in the Excel XLL function xlGetHwnd before Excel 2007. NT 4.0 stopped doing that.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-661103">
				<div id="div-comment-661103" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://weseetips.com/2008/08/24/how-to-check-whether-the-window-handle-is-valid/' rel='external nofollow' class='url'>How to check whether the window handle is valid? &laquo; Visual C++ Tips</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070717-00/?p=25983#comment-661103">
			August 24, 2008 at 3:09 pm</a>		</div>

		<p>PingBack from <a rel="nofollow" target="_new" href="http://weseetips.com/2008/08/24/how-to-check-whether-the-window-handle-is-valid/" rel="nofollow">http://weseetips.com/2008/08/24/how-to-check-whether-the-window-handle-is-valid/</a></p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>