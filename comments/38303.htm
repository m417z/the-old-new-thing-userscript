<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (23)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-199653">
				<div id="div-comment-199653" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Jeff Parker</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040729-00/?p=38303#comment-199653">
			July 29, 2004 at 7:28 am</a>		</div>

		<p>Hmm, you know this is interesting, seen this sunken rule before but you know it explains something to me on a few applications I use. 3d development apps have gone crazy I think trying to redo the interface in 3d. Some of the Apps that come to mind are Poser and Bryce who use a raised window that is not sunken</p>
<p><a target="_new" href="http://www.curiouslabs.com/" rel="nofollow">http://www.curiouslabs.com/</a><br />
<br /><a target="_new" href="http://www.daz3d.com/program/bryce/" rel="nofollow">http://www.daz3d.com/program/bryce/</a></p>
<p>I have always just felt an uncomfortable feeling when using these apps, they just didn&#8217;t seem natural. However My favorite 3d app is Rhino 3d.<br />
<br /><a target="_new" href="http://www.rhino3d.com/" rel="nofollow">http://www.rhino3d.com/</a></p>
<p>I am more productive and it just feels comfortable to use. The do not stray from traditional window layouts, sunken workspaces. So there are apps out there challenging this rule, but if you ever work in one, it is uncomfortable at least for me anyway.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-199663">
				<div id="div-comment-199663" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ben Cooke</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040729-00/?p=38303#comment-199663">
			July 29, 2004 at 8:04 am</a>		</div>

		<p>Poser&#8217;s interface is a great example of form over function. They should&#8217;ve just used the standard controls and style like everyone else, rather than trying to be &quot;special&quot;.</p>
<p>That&#8217;s graphic designers for you, I guess.</p>
<p>The rules as Raymond writes them seem consistant with every app I&#8217;ve seen which I would class as &quot;sensible&quot;. Obviously there are plenty of apps not being sensible like Poser, Bryce and WinAmp&#8230; the &quot;let&#8217;s replace everything with fixed-size bitmaps&quot; brigade.</p>
<p>I wish application developers would realise that &quot;skinning&quot; should be an OS-level issue, not an application-level issue. The fact that every major skin out there has to be remade for every single skin-capable application should tell someone that this this is the wrong approach.</p>
<p>Of course, Windows XP won&#8217;t let you use &quot;custom skins&quot; system-wide without third-party add-on software, but that&#8217;s another story.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-199673">
				<div id="div-comment-199673" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.spectresoftware.com' rel='external nofollow' class='url'>Pete King</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040729-00/?p=38303#comment-199673">
			July 29, 2004 at 8:12 am</a>		</div>

		<p>Poser and Bryce are two applications that the designers clearly wanted to lift away from the whole boring notepad/office/application look. </p>
<p>Speaking as an owner of both these applications, and fairly regular user, I can say that their interfaces are easy to use and fairly innovative. For example, panning the camera using a visual ball control actually makes sense in 3D.</p>
<p>Also, try and bear in mind that both Poser and Bryce take a highly complex subject matter (creating and editting 3 dimensional content) and simplify it so that a beginner can pick up the basics and &quot;get into the package&quot; very quickly. The interface, I think, helps lower this barrier of entry.</p>
<p>Compare this to 3d studio max, Maya, Terragen and Motion Builder, whose interfaces can seem daunting.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-199713">
				<div id="div-comment-199713" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Don Kackman</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040729-00/?p=38303#comment-199713">
			July 29, 2004 at 8:58 am</a>		</div>

		<p>Every UI developer should read Alan Cooper&#8217;s book &quot;About Face&quot;.</p>
<p>He makes the very excelloant point that only software geeks like things such as skins and neat little UI widgets. Normal people just want software that allows them to accomplish their goals without feeling stupid.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-199723">
				<div id="div-comment-199723" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Maks Verver</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040729-00/?p=38303#comment-199723">
			July 29, 2004 at 9:12 am</a>		</div>

		<p>In reply to Don Kackman: &quot;[Alan Cooper] makes the very excellent point that only software geeks like things such as skins and neat little UI widgets. Normal people just want software that allows them to accomplish their goals without feeling stupid.&quot;</p>
<p>In my experience it is the other way around. I (a software geek) hate skinned GUI&#8217;s. Although I won&#8217;t claim that autoamtically proves my point for all &#8216;software geeks&#8217;, but in my experience many applications which are targeted at less skilled consumers tend to have non-standard interfaces.</p>
<p>Think of applications like Microsoft MSN Messenger, Symantec AntiVirus (and compare it to the Corporate Edition which uses a different, more standard-compliant GUI), Windows Media Player, filesharing programs like KaZaA, etcetera.</p>
<p>It may true that &#8216;normal people&#8217; just want to get their job done, but often they are badly informed. They will chose form over function whenever the functional differences between various applications are not clear to them. Many &#8216;normal people&#8217; are unaware of (and therefere can&#8217;t appreciate) the advantages that standard-comliant interfaces provide (ask your mother if she knows what those three dots in menu items mean, ask her if she knows how to drag-and-drop, etcetera) and are thus more likely to prefer an application that looks &#8216;nice&#8217; over an application that looks &#8216;boring&#8217; or &#8216;complicated&#8217; but provides the same functions.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-199753">
				<div id="div-comment-199753" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ben Cooke</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040729-00/?p=38303#comment-199753">
			July 29, 2004 at 10:07 am</a>		</div>

		<p>I&#8217;ve no objection to applications introducing new control types. You are right that Poser&#8217;s arrowy-ball-thingy is a great way to shift the camera intuitively.</p>
<p>However, there was no need to completely reinvent the wheel for the rest of the interface. The main view area could have been a sunken container, and the widget panels hanging around could have been toolbars and side panels containing buttons and other widgets with the same general appearance (the camera panel would be essentially unchanged apart from the color scheme, I suspect) and the app would still have been essentially as intuitive for new users and much less annoying for existing users and those who are used to more traditional interfaces. I seem to remember one of my pet hates was the tall, thin panel full of dials for changing the pose and body characteristics. Dials were just about the worst choice for those widgets, and I think most people probably type in values more than use the dials anyway due to how clumsy the dials are, so they could have made the type-in boxes a lot more accessible.</p>
<p>DAZ, who now own Bryce, are currently beta-testing a rival to Poser which I enjoy using a lot more. (when I do use it, anyway&#8230; I&#8217;m not really a 3D graphics person so I can&#8217;t claim I use any of these apps extensively.) They&#8217;ve still got a wacky color scheme, but on the whole their look is pretty standard.</p>
<p>I should also point out that I&#8217;ve not used Poser since a demo version I got off a magazine cover CD years back, so it might now be nothing like I remember it as I assume there have been a few new versions since then.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-199783">
				<div id="div-comment-199783" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Chris Altmann</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040729-00/?p=38303#comment-199783">
			July 29, 2004 at 2:15 pm</a>		</div>

		<p>Bryce. Ugh. </p>
<p>The first and only time I used it (years ago), it took over the entire screen, even though it only used a tiny portion of said screen (didn&#8217;t scale to my high resolution). And when I wanted to close it, I couldn&#8217;t find the exit button/menu/whatever. I had to kill it by other means.</p>
<p>Not very high on my list (ie: not at all) of quality UI.<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-199743">
				<div id="div-comment-199743" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Chris Becke</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040729-00/?p=38303#comment-199743">
			July 29, 2004 at 10:06 am</a>		</div>

		<p>I think to a large degree, applications with totally unique userinterfaces work with non computer uses precisely *because* they are different.</p>
<p>Basically, the applications become like discrete machines that can be leart seperate of any other app in the system.</p>
<p>While &quot;computer users&quot; are confortable using interface metaphores accross many apps, its the close similarity between apps that actually makes it difficult rather than easier for computer neophytes to find their way around &#8211; Its like being in a maze &#8211; The similarity of the corridors hinders your ability to find your way around.</p>
<p>Just recalling trying to teach my Grandfather how to perform some simple task &#8211; I remember the confusion caused by &quot;options&quot; moving from the &quot;view&quot; menu &#8211; where 95 and early windows apps put it &#8211; to the &quot;tools&quot; menu where it mostly seems to be found now.</p>
<p>Which is my beef with Office UI diverging from the base OS UI &#8211; similar enough to look like the same corridor I was in just now, but different enough to confuse.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-199803">
				<div id="div-comment-199803" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Norman Diamond</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040729-00/?p=38303#comment-199803">
			July 29, 2004 at 5:22 pm</a>		</div>

		<p>The base note surely explains why I still trip over parts of VS .NET and recent MSDN Libraries.  When a file is open it&#8217;s related to the tab which is not sunken and not highlighted in a different color.  When there is a selection of toolboxes or search panes or whatever, the panel that is open is the one which is not sunken and not highlighted in a different color.  Still not used to it.</p>
<p>The people who like skins aren&#8217;t computer software geeks (techies) but artistry software geeks (artists) who use computer software because it&#8217;s the current trend.</p>
<p>Techies who want to get work done turn off those skins, and set taskbar sizes to small (and have to repeat this setting over and over again in Longhorn beta).  We need space for the stuff we&#8217;re working on (in the client area), instead of extra space to make the non-client area look flashier.  Of course we techies aren&#8217;t normal users, but still, we&#8217;re not the ones putting skins on everything, artists are.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-199813">
				<div id="div-comment-199813" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://weblogs.asp.net/oldnewthing/' rel='external nofollow' class='url'>Raymond Chen</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040729-00/?p=38303#comment-199813">
			July 29, 2004 at 5:29 pm</a>		</div>

		<p>? Tabs are not containers; they should not be sunken.  I guess I don&#8217;t understand what your point is.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-199893">
				<div id="div-comment-199893" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Artist</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040729-00/?p=38303#comment-199893">
			July 30, 2004 at 1:07 am</a>		</div>

		<p>I&#8217;m an artist and I hate skins.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-199903">
				<div id="div-comment-199903" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.bigbeardy.co.uk' rel='external nofollow' class='url'>Mat Hall</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040729-00/?p=38303#comment-199903">
			July 30, 2004 at 1:09 am</a>		</div>

		<p>Skinned (or non-standard UI) apps can be their own wrost enemy.  Look at the UI for QuickTime 4 &#8212; they&#8217;ve gone down the &quot;let&#8217;s make it like a physical device&quot; route, but it just doesn&#8217;t work.  Some things you can click on don&#8217;t look like you can click on them, and some things that look the same as the non-obvious clickable areas don&#8217;t actually do anything; the volume control is just plain WRONG; the sliding trays mean that you pretty much need to keep the window in the top thrid of the screen to access some bits.  Apple are normally quite good at this sort of thing, but QT is simply awful.</p>
<p>Also, most skinned apps are no good for the visually impaired &#8212; they&#8217;re immune to high-contrast colour schemes and &quot;large fonts&quot;, and give screen readers a fit&#8230;</p>
<p>I can&#8217;t remember where the quote comes from, but it sums up skinning quite nicely:</p>
<p>Whenever a programmer thinks, &quot;Hey, skins, what a cool idea!&quot; their computer&#8217;s speakers should create some sort of cock-shaped soundwave and plunge it repeatedly through their skulls.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-199923">
				<div id="div-comment-199923" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.spectresoftware.com' rel='external nofollow' class='url'>Pete King</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040729-00/?p=38303#comment-199923">
			July 30, 2004 at 1:59 am</a>		</div>

		<p>Ben Cooke &#8211; Youre right about the Poser interface, and I think you have a good point about the dials. Double clicking a dial pops up a text box so you can manually key a number in, however, seeing as the controls use different numbering scales, 1 in one dial can mean a lot more than in another e.g. z scale (percent) vs z rotation (degrees).</p>
<p>Chris Altmann &#8211; You can change the document size to fill the screen in Bryce, however, Ive no idea why it doesnt do this by default. To get to the standard menu, move the mouse to the top of the screen and up it pops, you can close the application from there. I guess you get used to these little niggly things after a while, but I cant explain what the thinking was behind these.</p>
<p>Mat Hall &#8211; &quot;Whenever a programmer thinks, &quot;Hey, skins, what a cool idea!&quot; their computer&#8217;s speakers should create some sort of cock-shaped soundwave and plunge it repeatedly through their skulls. &quot; &#8230; Whats wrong with a developer wanting his application to look good or stand out from his competitors? After all, the GUI is what made Windows 95 attractive to the general public, is the main selling point of Windows Longhorn (3D!) and is often what drives people to Apple machines&#8230;</p>
<p>Maybe we should be praising developers for trying to be innovative.  As a programmer myself (I use VB.Net), I dont want to make a characterless application&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-199843">
				<div id="div-comment-199843" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.accidentalscientist.com' rel='external nofollow' class='url'>Simon Cooke [exMSFT]</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040729-00/?p=38303#comment-199843">
			July 29, 2004 at 9:26 pm</a>		</div>

		<p>Norman: strictly speaking, the client-edge is used for windows which the user interacts with the contents of. </p>
<p>Eg: A word document&#8217;s contents are shown within the sunken-client boundary. A web browser&#8217;s contents are shown within the boundary. A checkbox or radio button *used* to have the client-edge visual style, and kind of still do.</p>
<p>It&#8217;s a difficult thing to define in words, but once you get it, it&#8217;s easy to figure out which windows should have it and which ones shouldn&#8217;t.</p>
<p>One short-hand way of looking at it though is if you can conceivably think of a reasonable reason for the window in question to have scroll-bars attached to it, it most likely needs a sunken-client edge.</p>
<p>If not, then it doesn&#8217;t need one.</p>
<p>(Dialogs and tabs shouldn&#8217;t have scrollbars on them, regardless of whether or not .NET, VB or MFC allow you to create scrollable dialogs.)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-199943">
				<div id="div-comment-199943" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.bigbeardy.co.uk' rel='external nofollow' class='url'>Mat Hall</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040729-00/?p=38303#comment-199943">
			July 30, 2004 at 5:25 am</a>		</div>

		<p>Pete: One man&#8217;s good looking application is another mans butt-ugly eyesore, and making something &quot;pretty&quot; at the expense of ease-of-use or accessability is, well, just plain daft.</p>
<p>I&#8217;ve mentioned QT4 already, but it&#8217;s a perfect demonstration of why you shouldn&#8217;t try to reinvent the wheel, especially if your new version is square.  Here&#8217;s in-depth dissection of all the wrong things it does:</p>
<p><a target="_new" href="http://digilander.libero.it/chiediloapippo/Engineering/iarchitect/qtime.htm" rel="nofollow">http://digilander.libero.it/chiediloapippo/Engineering/iarchitect/qtime.htm</a></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-199963">
				<div id="div-comment-199963" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">DrPizza</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040729-00/?p=38303#comment-199963">
			July 30, 2004 at 5:33 am</a>		</div>

		<p>&quot;I can&#8217;t remember where the quote comes from, but it sums up skinning quite nicely: &quot;</p>
<p>jwz, of course.<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-199973">
				<div id="div-comment-199973" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">DrPizza</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040729-00/?p=38303#comment-199973">
			July 30, 2004 at 5:34 am</a>		</div>

		<p>(someone posted it as a response to his rant about media players, IIRC)<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-199983">
				<div id="div-comment-199983" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.spectresoftware.com' rel='external nofollow' class='url'>Pete King</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040729-00/?p=38303#comment-199983">
			July 30, 2004 at 5:41 am</a>		</div>

		<p>Good article, and good point.</p>
<p>However, good design and usability need not be mutually exclusive.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-200063">
				<div id="div-comment-200063" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Jeff Parker</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040729-00/?p=38303#comment-200063">
			July 30, 2004 at 9:45 am</a>		</div>

		<p>Hmm, I didn&#8217;t want to start a large debate, but Poser and Bryce were just 2 app that came to mind right away that I use as a developer to try to get work done and find the interface unproductive. Rhino though I think has a much beter camera controls, the window itself, Leftclick hold down and rotate however you want, Zoom in use the wheel. Need some granular control, hold down alt or ctrl while moving the mouse much like Adobe Phtoshops zoom controls work. </p>
<p>I guess the same thing can be applied to websites. I mean how many high scale informative protuctive sites use flash for anything other than banner adds. Flash on a website it a lot along the same lines. Yeah it has its purpose but is it usually very productive for getting around a website and getting irformation fast? Normally i see it just used for show. Don&#8217;t get me wrong but things like Movie Trailer sites, and New Game sites yeah they look great in flash they are all about marketing but then again they are not productive sites. But could you ever possably imagine MSDN in flash? </p>
<p>The Flash tool has been out for years I still find it a little difficult to use but it isn&#8217;t terrible. However one tool some may or may not remember is Microsoft&#8217;s Liquid Motion which originally started I thought to be a Rival to flash. Unfortunately Microsoft dropped it. It&#8217;s first generation came out about when Flash 4 did and I actually enjoyed using it. It was very close to being at generation 1 as powerful as Flash 4. Very easy to use and productive.</p>
<p>As far as Skinning, I have to agree what real developer uses skins? Ok I admit I download the Terminator 3 Windows Media player skin. I used it for a while but I am back at the default for it. But other than that I do not think I have ever skinned a app ever. I never even changed Windows default color scheme. I did change the background but nothing else. But you go to someone in Marketing or HR or something like that and they will have Fancy little mouse cursors, different little windows, and of course Clippy will be ever dominant on those PC&#8217;s and active offering to help HR write a letter or something. I did have the thought once of trying to figure out how to feed clippy a big UML diagram but he kept wanting to correct my spelling in class names I gave up and shut him off again.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-200033">
				<div id="div-comment-200033" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ben Cooke</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040729-00/?p=38303#comment-200033">
			July 30, 2004 at 8:16 am</a>		</div>

		<p>&gt; Whats wrong with a developer wanting his application to look good or stand out from his competitors?</p>
<p>I want to *use* applications, not be dazzled by the prowess of a company&#8217;s graphic designers. As I noted before, &quot;skinning&quot; should be a system-level issue applied to all applications, not an application issue implemented differently in every single application. For those who consider Windows&#8217; standard widgets to be &quot;ugly&quot;, they should be able to install a system-wide skin which will change the way they look everywhere. In fact, a third-party application that I don&#8217;t feel like advertising or promoting offer this possibility. For Windows XP, they get in front of uxtheme.dll and replace all of the Luna stuff. I think for earlier versions of Windows they just used ugly hooks to intercept paint messages for different window classes.</p>
<p>I also wish it involved less bitmaps and more scriptable GDI calls. How many people here have switched to a &quot;Windows Lookalike&quot; skin in a skinned app and been annoyed because, since it is just a *picture* of what Windows normally draws, it doesn&#8217;t adapt to different color themes, Luna-style borders (for those weird enough to use them) and other issues such as odd DPI settings.</p>
<p>Instead, a &quot;Windows Lookalike&quot; skin should just consist of a few GDI calls to draw the caption bar and some button-edged caption buttons, use Marlett to paint on the captions and you&#8217;re done. Depending on how wacky the application is, you could even just get Windows to draw it for you! This is most ideal, because then you get Luna controls when appropriate, the colors will &quot;just work&quot; and all the app has to worry about is drawing in the client area.</p>
<p>Now that I think about it, I wonder how easy it would be to get inside Winamp 2 as a general-purpose plugin and draw sensible widgets all over it by intercepting its WM_PAINT and WM_NCPAINT messages. It&#8217;d be an ugly hack, but it would be quite funny! :)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-200153">
				<div id="div-comment-200153" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.foxyshadis.com' rel='external nofollow' class='url'>foxyshadis</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040729-00/?p=38303#comment-200153">
			July 31, 2004 at 2:42 am</a>		</div>

		<p>Haha, Ben. You could call it the &quot;Unskin&quot;.</p>
<p>You can say something should be OS-level all you want, but as long as it isn&#8217;t it&#8217;ll be provided by third-parties. Third parties usually prove the market for such tools before a vendor is willing to put the effort into adding the functionality at a lower level.</p>
<p>I think skins are a perfectly valid response to the dismally repetitive, and occasionally ugly or broken standard visual styles. Good design means that everything feels seamless, not that it must be forced into a monocultural beige box. (Note that the default WMP skin is still a skin, and thus you use skins, just means you&#8217;re comfortable with the basic one.) Customization personalizes an app and makes it far more comfortable to use. If i could have the windows 2000 scheme but with a chisled granite flavor, I&#8217;d be in heaven.</p>
<p>I could just hear the howls from this crowd if the prevailing argument was that command lines were useless because no regular user ever used them. Isn&#8217;t that, along with regedit, tweakui, alternate browsers, and all preferences menus, just another more powerful form of customization, after all? ;) We strike a balance between the causual user, the computer literate, and the power user, to give our creations the widest possible utility.</p>
<p>Oh, and if a skin is important enough to bother someone on changing the windows scheme, than it&#8217;s probably important enough to hack to match the new scheme, just for peace of mind. Until powerful public libraries are readily available, people will go with the easier methods.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-200503">
				<div id="div-comment-200503" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Norman Diamond</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040729-00/?p=38303#comment-200503">
			August 2, 2004 at 6:14 pm</a>		</div>

		<p>7/29/2004 5:29 PM Raymond Chen<br />
<br />&gt; ? Tabs are not containers;<br />
<br />7/29/2004 9:26 PM Simon Cooke [exMSFT]<br />
<br />&gt; the client-edge is used for windows which<br />
<br />&gt; the user interacts with the contents of. </p>
<p>I&#8217;m not sure what the &quot;client-edge&quot; means.  As for tabs not being containers, I&#8217;ve just taken another look at the October 2001 MSDN Library and it is indeed true, the active tab is not sunken, but nonetheless the appearance of all the tabs back then was designed not to mislead.  The inactive tabs are not highlighted in a more prominent color than the active tabs.  The inactive tabs are separated from the panel by a line with just the right size and visibility, while the active tab is connected to the panel.  Among the ways in which newer MSDNs and VS .NET differ from that, I guess the biggest are that the inactive tabs are prominently highlighted and the inactive tabs are sunken.  These really are two backwards steps.</p>
<p>&gt; Eg: A word document&#8217;s contents are shown<br />
<br />&gt; within the sunken-client boundary.</p>
<p>Well, Word 2000 has its odd MSDI interface (not too bad for Word 2000 of course, but I saw someone&#8217;s web site showing what it does to Access 2000) and earlier versions of Word had ordinary MDI interfaces so I haven&#8217;t really noticed the effect that you&#8217;re talking about here.  Actually when Mr. Chen showed the evolution of the task bar from early trials through the version that is used in Windows 95 through 2000, the difference between that and tabs is highly visible.  I wish that an MDI application, if one executing instance of the application is used in opening multiple documents, would have its own task bar rather than either the old MDI interface (minimized icons hidden underneath open document windows) or tabs.  Since I think I haven&#8217;t seen the version you mention, I don&#8217;t know how it compares.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-200513">
				<div id="div-comment-200513" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://weblogs.asp.net/oldnewthing/' rel='external nofollow' class='url'>Raymond Chen</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040729-00/?p=38303#comment-200513">
			August 2, 2004 at 6:21 pm</a>		</div>

		<p>I think you&#8217;re misunderstanding what &quot;sunken client&quot; means. Tabs have no sunken client. The tab itself draws as &quot;lower&quot; (not even sunken; just lower) if it&#8217;s not active, that&#8217;s not the point here.</p>
<p>Sunken client = has a raised edge around its content.</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>