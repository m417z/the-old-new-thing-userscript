<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (9)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-403023">
				<div id="div-comment-403023" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Grant</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060724-00/?p=30403#comment-403023">
			July 24, 2006 at 11:26 am</a>		</div>

		<p>Is there a reason these &#8216;<strong>imp</strong>&#8216; functions don&#8217;t show up in &#8216;dumpbin /exports&#8217;, or am I just looking at the wrong dlls?</p>
<p>I ask because I&#8217;m generating some .coff files myself, and functions are linking fine but pointers to structs aren&#8217;t resolving properly. &nbsp;I thought dumpbin.exe output would be definitive, and everything looks good there, but it looks like I might need to look at the raw data.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-403033">
				<div id="div-comment-403033" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Chris Becke</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060724-00/?p=30403#comment-403033">
			July 24, 2006 at 11:39 am</a>		</div>

		<p>@Grant: the <strong>imp</strong> function dont show up in the dumpbin, because they dont exist in the Dll. They exist only in the .lib</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-403063">
				<div id="div-comment-403063" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Antonio Vargas</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060724-00/?p=30403#comment-403063">
			July 24, 2006 at 3:58 pm</a>		</div>

		<p>Hmmm.. so it turns &quot;a = &amp;b;&quot; into &quot;a = *_imp_b;&quot;? I can be pretty sure people have lost a lot of hair trying to debug his programs and realizing the compiler was changing the code behind their backs&#8230; nice trick anyhow ^^</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-403093">
				<div id="div-comment-403093" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">steveg</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060724-00/?p=30403#comment-403093">
			July 24, 2006 at 9:10 pm</a>		</div>

		<p>Antonio: I&#8217;d expect the register optimisation Raymond describes is only done for Release builds, not Debug.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-403113">
				<div id="div-comment-403113" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Moff</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060724-00/?p=30403#comment-403113">
			July 25, 2006 at 4:01 am</a>		</div>

		<p>Uh &#8211; oh. Finally it makes sense what Jeffery Richter wrote in his book (&quot;Advanced Windows Programming&quot;), when elaborating about thread injection and getting an address of the function stub. Thank you, Raymond.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-403123">
				<div id="div-comment-403123" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">peterchen</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060724-00/?p=30403#comment-403123">
			July 25, 2006 at 4:38 am</a>		</div>

		<blockquote><p>
  &gt;Note to crazy people<br />
  <br />I like that term :)</p>
<p>Curious: What are performance implications? Why do PSDK headers not<br />
  use this (for supported compilers) &#8211; to much work for to little<br />
  benefit, or something else?</p>
<div CLASS=post>[<i>The performance implications of what? The <strong>imp</strong> mechanism? THe SKD headers do use this &#8211; see the first sentence of this posting. -Raymond</i>]</div>
</blockquote>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-403163">
				<div id="div-comment-403163" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blogs.msdn.com/oldnewthing/archive/2006/07/25/677878.aspx' rel='external nofollow' class='url'>The Old New Thing</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060724-00/?p=30403#comment-403163">
			July 25, 2006 at 10:05 am</a>		</div>

		<p>When you ask C to do things it can&#8217;t.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-403413">
				<div id="div-comment-403413" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://a@b.com' rel='external nofollow' class='url'>moo</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060724-00/?p=30403#comment-403413">
			July 25, 2006 at 5:42 pm</a>		</div>

		<p>The patching would still be safe if it was done from inside the function at the original address and was idempotent.</p>
<p>(In other words: if calling the old function through the cached address in the register simply resulted in it being patched again and then the new function being called)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-403813">
				<div id="div-comment-403813" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">peterchen</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060724-00/?p=30403#comment-403813">
			July 27, 2006 at 1:38 am</a>		</div>

		<p>Ooops &#8211; checked again, and it was there in all it&#8217;s glory:<br />
<br />#if !defined(<em>USER32</em>)<br />
<br />#define WINUSERAPI DECLSPEC_IMPORT<br />
<br />#else<br />
<br />#define WINUSERAPI<br />
<br />#endif</p>
<p>Last time I checked I noticed onl the empty definition branch. There aredefinitely advantages to those who can read :-)</p>
<p>Seems like the typical define you make for building vs. consuming a DLL.<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>