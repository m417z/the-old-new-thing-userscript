<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (20)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment byuser comment-author-wndsks even thread-even depth-1" id="comment-1072433">
				<div id="div-comment-1072433" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/skSdnW' rel='external nofollow' class='url'>skSdnW</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130812-00/?p=3533#comment-1072433">
			August 12, 2013 at 7:12 am</a>		</div>

		<p>ReOpenFile is Vista+ but can be emulated downlevel with the NT API. The only problem with this API is that the &quot;has been renamed in the meantime&quot; part only applies to the local system, on a a network share you might end up opening the wrong file&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1072443">
				<div id="div-comment-1072443" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blogs.msdn.com/ajgelado_4000_hotmail.com/ProfileUrlRedirect.ashx' rel='external nofollow' class='url'>ajgelado@hotmail.com</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130812-00/?p=3533#comment-1072443">
			August 12, 2013 at 7:39 am</a>		</div>

		<p>I use to consider renaming/moving/deleting files that are under use of a program undefined behavior, the equivalent of pulling a rug from under one&#39;s feet. Locking a file when in use is a good practice because it helps to avoid doing it accidentally, but there is always a point where you can do nothing (for example, the file is renamed in a file server, as skSdnW points, the user ejects the CD or pendrive, or the hard drive breaks). In that case, the only thing you can do is fail quickly and safely (at least, as safely as such a traumatic event allows you to).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1072453">
				<div id="div-comment-1072453" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">dave</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130812-00/?p=3533#comment-1072453">
			August 12, 2013 at 7:53 am</a>		</div>

		<p>(Snark)</p>
<p>ReOpen file also demonstrates the strange programmer habit of putting capitals in the middle or words.</p>
<p>I think they should at least be consistent about it; if we&#39;re going to have ReOpen, why not ReName and ReMove?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1072463">
				<div id="div-comment-1072463" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Hm</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130812-00/?p=3533#comment-1072463">
			August 12, 2013 at 7:56 am</a>		</div>

		<p>The MSDN page for ReOpenFile states &quot;In Windows 8 and Windows Server 2012, this function is supported by the following technologies: Server Message Block (SMB) 3.0 protocol&quot;. So it should really reopen the correct file even on a network share, instead of reopening the wrong file as stated by the last &quot;Community Addition&quot;. This is a serious bug.</p>
<p>Sadly, MSDN failes to document the expected behavior before Windows 8, and how it behaves with mixed versions of client and server.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1072473">
				<div id="div-comment-1072473" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Mh</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130812-00/?p=3533#comment-1072473">
			August 12, 2013 at 8:10 am</a>		</div>

		<p>@Antonio Grijan:</p>
<p>I doubt that &quot;Locking a file when in use&quot; will prevent the renaming of a file. You can only lock ranged of bytes within the file, but not the directory entry.</p>
<p>&quot;In that case, the only thing you can do is fail quickly and safely&quot;: Why and how? If someone has renamed the log file your process is still writing to, nothing is wrong with that, and your process will not even notice.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1072483">
				<div id="div-comment-1072483" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Gabe</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130812-00/?p=3533#comment-1072483">
			August 12, 2013 at 8:27 am</a>		</div>

		<p>Mh: While you are techinically correct about locking, in this case he meant locking in the colloquial sense of &quot;not shared for write or delete&quot;. In other words, he meant &quot;specify at most FILE_SHARE_READ only&quot;. That will prevent the renaming or deleting of a file in use.</p>
<p>And in the case of &quot;fail quickly and safely&quot;, I believe he meant that the ReOpenFile call should fail in the event that it finds itself reopening a different file that just happens to have the same name as the original.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1072513">
				<div id="div-comment-1072513" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Nick</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130812-00/?p=3533#comment-1072513">
			August 12, 2013 at 11:14 am</a>		</div>

		<p>Boy, this post was getting me really excited. &nbsp;Like change my shirt kind of excited. &nbsp;And then I got to the last line.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1072533">
				<div id="div-comment-1072533" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Aaron Ballman</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130812-00/?p=3533#comment-1072533">
			August 12, 2013 at 7:48 pm</a>		</div>

		<p>Can ReOpenFile create a race condition internally, or is it &quot;atomic&quot; from the perspective of the calling application? &nbsp;Eg) if I call ReOpenFile, can another process with impeccable timing delete the file out from under me while the call is operating?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1072543">
				<div id="div-comment-1072543" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Someone</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130812-00/?p=3533#comment-1072543">
			August 13, 2013 at 4:08 am</a>		</div>

		<p>@Aaron Ballman: What race do you mean? Your program owns a handle to a file, and ReOpenFile() will give you another handle to the exact same file (ignoring the issue with network shares mentioned above).</p>
<p>The operating system has already determined the entry in the Master File Table, there is no reason to consult the orginal directory entry to create the new handle.</p>
<p>Because of this, it doesn&#39;t matter if the orginal directory entry was renamed or even deleted in the meantime.</p>
<p>[Renaming an open file might not be possible on same filesystem (i.e. FAT variants). Deleting an open file is currently not possible at all in Win32.]</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1072553">
				<div id="div-comment-1072553" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Aaron Ballman</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130812-00/?p=3533#comment-1072553">
			August 13, 2013 at 5:14 am</a>		</div>

		<p>@Someone &#8212; I&#39;m referring to the phrase &quot;actually goes and opens the file again&quot;. &nbsp;While it would certainly make sense that the MFT entry will be the same and that the file will remained locked while performing this operation, I&#39;m wondering whether there is a subtle race condition. &nbsp;&quot;as opposed to merely creating another reference to the same file object in the kernel&quot; coupled with the previous quote could be [mis]read as the file handle being closed (which means it is available to rename/delete/be opened elsewhere with different sharing modes/etc) and then opened a second time.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1072563">
				<div id="div-comment-1072563" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Someone</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130812-00/?p=3533#comment-1072563">
			August 13, 2013 at 5:29 am</a>		</div>

		<p>&quot;could be [mis]read as the file handle being closed&quot;: After ReOpenFile() returns, you have two file handles (h and h2 in Raymonds example). I don&#39;t see how can you get the impression that the original file handle needs to be closed to create another one.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-alegrigoriev odd alt thread-odd thread-alt depth-1" id="comment-1072603">
				<div id="div-comment-1072603" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/alegr1' rel='external nofollow' class='url'>alegr1</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130812-00/?p=3533#comment-1072603">
			August 13, 2013 at 7:48 am</a>		</div>

		<p>[Renaming an open file might not be possible on same filesystem (i.e. FAT variants). Deleting an open file is currently not possible at all in Win32.]</p>
<p>With FILE_SHARE_DELETE, you CAN delete an open file.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-alegrigoriev even thread-even depth-1" id="comment-1072613">
				<div id="div-comment-1072613" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/alegr1' rel='external nofollow' class='url'>alegr1</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130812-00/?p=3533#comment-1072613">
			August 13, 2013 at 7:49 am</a>		</div>

		<p>ReOpenFile is simply using open file by ID, which guarantees opening the same file as the original, even if the file was renamed in the meantime.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1072633">
				<div id="div-comment-1072633" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Someone</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130812-00/?p=3533#comment-1072633">
			August 13, 2013 at 8:32 am</a>		</div>

		<p>&quot;With FILE_SHARE_DELETE, you CAN delete an open file.&quot; ok. thats right. Just that executables and DLL are opened by the system without that flag.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1072673">
				<div id="div-comment-1072673" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Danny</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130812-00/?p=3533#comment-1072673">
			August 13, 2013 at 9:59 am</a>		</div>

		<p>&quot;&#8230;One way to do this is to call Create­File a second time with the FILE_FLAG_OVERLAPPED&#8230;&quot; &#8230; &quot;Enter Re­Open­File. This basically lets you do a Create­File based on another handle rather&quot;</p>
<p>And internally ReOpenFile does exactly that. It calls CreateFile.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-wndsks odd alt thread-odd thread-alt depth-1" id="comment-1072713">
				<div id="div-comment-1072713" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/skSdnW' rel='external nofollow' class='url'>skSdnW</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130812-00/?p=3533#comment-1072713">
			August 13, 2013 at 10:45 am</a>		</div>

		<p>@alegr1 @Danny It does not open by file id, it just sets the original handle in OBJECT_ATTRIBUTES and calls NtCreateFile</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1072753">
				<div id="div-comment-1072753" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Aaron Ballman</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130812-00/?p=3533#comment-1072753">
			August 13, 2013 at 2:47 pm</a>		</div>

		<p>@Someone &#8212; you&#39;re absolutely correct, I missed the fact that the original handle remained open after the call. &nbsp;That&#39;s what I get for looking at Raymond&#39;s blog at midnight after a day of travel. &nbsp;:-/</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1072793">
				<div id="div-comment-1072793" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Gabe</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130812-00/?p=3533#comment-1072793">
			August 13, 2013 at 6:06 pm</a>		</div>

		<p>I don&#39;t see any option in CreateFile or NtCreateFile to open a handle based on an existing handle. Does anybody have documentation on how this supposedly works?</p>
<p>I do see how you can open a file by ID, but that&#39;s a persistent filesystem-assigned object ID used for link tracking, not a handle.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1072823">
				<div id="div-comment-1072823" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Someone</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130812-00/?p=3533#comment-1072823">
			August 14, 2013 at 12:38 am</a>		</div>

		<p>@Gabe: I think alegr1 is refererring to something at the driver level. But because this would cause ReOpenFile() not to work with filesystems other than NTFS (file IDs exists only on NTFS, right?), I don&#39;t believe his statement.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1072933">
				<div id="div-comment-1072933" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">John Doe</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130812-00/?p=3533#comment-1072933">
			August 14, 2013 at 10:18 am</a>		</div>

		<p>Does ReOpenFile work with existing handles to symbolic links, alternate streams, directories, physical disks and volumes, changers, tapes, serial ports, consoles, mailslots and pipes?</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>