<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (2)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-645363">
				<div id="div-comment-645363" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Jamaw At Nouals</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080708-00/?p=21713#comment-645363">
			July 8, 2008 at 5:13 pm</a>		</div>

		<p>A pity menuitems and accels can&#8217;t be linked together, instead you have to put the accelerator of a menuitem in its string, seperated by a TAB character, like NewtCtrl+N. This way of doing this (almost) never takes into account Apple keyboards, layouts with a seperate Alt and AltGr and probably some others I can&#8217;t think of right now.</p>
<p>At some point I wanted accelerators to &quot;just work&quot; so I wrote a function that walks through the menu to generate the corresponding accelerator table, and just &quot;be done&quot; with it. I think it would&#8217;ve been better to write a function that combines LoadAccelerators and LoadMenu, adding the textual representation of an accelerator (with matching id) as it creates the menu. It&#8217;d only have to deal with 1 version of menu template, so it would be relatively simple.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-645383">
				<div id="div-comment-645383" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Yuhong Bao</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080708-00/?p=21713#comment-645383">
			July 8, 2008 at 5:33 pm</a>		</div>

		<p>On the matter of 16-bit extended templates, what was not so well known about Win9x is that it allowed some of its new features (not all, but most of the exceptions are related to the shell, for example none of the common controls introduced after Windows 95 can be used), including, of course, this, to be used by 16-bit applications WITHOUT thunking. In fact, in older versions of the Win32 SDKs there was a 16-bit RC utility that you could use to actually mark your app as version 4.0, and the Win9x DDKs had 16-bit header and library files that allowed you to program 16-bit apps that take advantage of Win9x. Most of this support probably came from early 95 development (for example, as mentioned in another blog article, the Cabinet shell was built in both 16-bit and 32-bit). It was not documented of course, and I wonder why?</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>