<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (16)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-489853">
				<div id="div-comment-489853" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Sunil</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070405-00/?p=27363#comment-489853">
			April 5, 2007 at 10:47 am</a>		</div>

		<p>When the mouse hovers over a disabled button in IE, the tooltip does show.</p>
<p>What magic is happening here?</p>
<p>Is the button not really disabled?</p>
<div class="post">[<i>It&#8217;s not a button. <a href="http://blogs.msdn.com/oldnewthing/archive/2005/02/11/371042.aspx" rel="nofollow">I discussed this over two years ago</a>. &#8211;Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-489863">
				<div id="div-comment-489863" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Jack Mathews</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070405-00/?p=27363#comment-489863">
			April 5, 2007 at 10:48 am</a>		</div>

		<p>I love posts like this one. &nbsp;The &quot;connect the dots&quot; posts of seemingly disparate parts of Win32.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-489893">
				<div id="div-comment-489893" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Daniel Garlans</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070405-00/?p=27363#comment-489893">
			April 5, 2007 at 12:45 pm</a>		</div>

		<p>I love posts like this one, specifically because it&#8217;s one of those things that are so obvious that you tend to overlook it. I&#8217;d say this is an extremely good example of learning to read and understand, and learning how to extrapolate, the consequences of API actions.</p>
<p>So, I for one say, Raymond, keep this kind of thing coming!</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-jamesnt odd alt thread-odd thread-alt depth-1" id="comment-489983">
				<div id="div-comment-489983" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/JamesNT' rel='external nofollow' class='url'>JamesNT</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070405-00/?p=27363#comment-489983">
			April 5, 2007 at 2:55 pm</a>		</div>

		<p>Paraphrasing the great master, Raymond Chen:</p>
<p>&quot;I can&#8217;t believe he had to explain that.&quot;</p>
<p>JamesNT</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-490013">
				<div id="div-comment-490013" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://dotnoted.spaces.live.com' rel='external nofollow' class='url'>codekaizen</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070405-00/?p=27363#comment-490013">
			April 5, 2007 at 3:53 pm</a>		</div>

		<p>You can, however, do this in WPF:</p>
<p>Button b = new Button();</p>
<p>ToolTipService.SetShowOnDisabled(b, true);</p>
<p>Kudos to the WPF team. I&#8217;m still fathoming how profoundly they&#8217;ve succeeded with their design. Little realizations like this one keep delighting me.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-490023">
				<div id="div-comment-490023" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Cooney</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070405-00/?p=27363#comment-490023">
			April 5, 2007 at 4:14 pm</a>		</div>

		<p>A related weirdness I&#8217;ve found: I run cygwin/X, and it will pop up emacs tooltips (not the windows flavor) when the window is under another one. Probably just bad code somewhere that I could fix in my CFT&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-490053">
				<div id="div-comment-490053" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://david.acz.org/' rel='external nofollow' class='url'>David Phillips</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070405-00/?p=27363#comment-490053">
			April 5, 2007 at 4:57 pm</a>		</div>

		<p>I&#8217;m curious about the API choice of having one function, EnableWindow(bool), compared to having two functions, EnableWindow and DisableWindow.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-490083">
				<div id="div-comment-490083" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Adam Glasgall</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070405-00/?p=27363#comment-490083">
			April 5, 2007 at 5:47 pm</a>		</div>

		<p>That&#8217;s not just an Emacs/X11 thing, Cooney. It happens on my Mac with Carbon Emacs too. I&#8217;ve wondered about that for a while.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-490093">
				<div id="div-comment-490093" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.arcticus.com' rel='external nofollow' class='url'>Chris Hanson</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070405-00/?p=27363#comment-490093">
			April 5, 2007 at 6:01 pm</a>		</div>

		<p>Toolbar buttons also aren&#8217;t actually Windows. The Toolbar is a Window, but the buttons within it are just drawn individually without having actual Windowhood.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-490113">
				<div id="div-comment-490113" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.levicki.net/' rel='external nofollow' class='url'>Igor</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070405-00/?p=27363#comment-490113">
			April 5, 2007 at 6:40 pm</a>		</div>

		<p>As long as your parent control knows where the mouse is, it can fire tooltips at will, right?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-490063">
				<div id="div-comment-490063" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Dan McCarty</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070405-00/?p=27363#comment-490063">
			April 5, 2007 at 5:27 pm</a>		</div>

		<p>Presumably this doesn&#8217;t apply to *toolbar* button s&#8230;? &nbsp;Is there a reasoning behind that difference? &nbsp;Or is it just a function of disabled windows not receiving mouse input, whereas toolbar frames (e.g., ToolbarWindow32) do?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-patriotb odd alt thread-odd thread-alt depth-1" id="comment-490153">
				<div id="div-comment-490153" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">PatriotB</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070405-00/?p=27363#comment-490153">
			April 6, 2007 at 1:13 am</a>		</div>

		<p>@codekaizen &#8212; I personally haven&#8217;t done much exploring of WPF yet, but I agree with you. &nbsp;Ah, the things you can accomplish with 6 years of development time, and 20 years of Win32&#8217;s history (pluses/minuses, lessons learned) to learn from. :)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-490473">
				<div id="div-comment-490473" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Jonathan</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070405-00/?p=27363#comment-490473">
			April 7, 2007 at 3:55 am</a>		</div>

		<p>David Phillips: I think it eases development of wrappers:</p>
<p>void EnableAllWindows (bool b)</p>
<p>{</p>
<p>&nbsp;EnableWindows(hWnd1, b);</p>
<p>&nbsp;EnableWindows(hWnd2, b);</p>
<p>&nbsp;&#8230;</p>
<p>}</p>
<p>The name is misleading though &#8211; maybe it should&#8217;ve been called &quot;SetWindowEnablement&quot;?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-491533">
				<div id="div-comment-491533" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Harold Hunt</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070405-00/?p=27363#comment-491533">
			April 10, 2007 at 10:46 am</a>		</div>

		<p>Cooney and Adam &#8211; I&#8217;m one of the original authors of Cygwin/X. &nbsp;The tooltips popping up from an obscured window is due to a deficiency in our window manager continuing to route mouse messages to windows that should not be receiving them. &nbsp;The tooltips are not rendering using the same mechanism that Raymond describes for Win32, instead, they are rendered by whatever mechanism each particular X11 app uses to render them. &nbsp;Thus, some applications will show tooltips when they are obscured and others will not, it all depends on the mechanism or toolkit that the app is using.</p>
<p>This problem happens on X11 for Mac OS X as well since we both handle our input the same way&#8230; it&#8217;s sort of random but we both have the same &quot;bug&quot; because it was the easiest way to solve the problem and it got us 99% of the way there :)</p>
<p>When I worked for StarNet (maker&#8217;s of X-Win32), we used a lot of the code that we&#8217;d written for Cygwin/X so we had this same bug for a little while, but we later fixed it since we had the time to do so.</p>
<p>Hope that helps,</p>
<p>Harold</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-491813">
				<div id="div-comment-491813" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Dmitry Vasilevsky</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070405-00/?p=27363#comment-491813">
			April 10, 2007 at 11:09 pm</a>		</div>

		<p><a rel="nofollow" target="_new" href="http://msdn2.microsoft.com/en-us/library/system.windows.forms.tooltip" rel="nofollow">http://msdn2.microsoft.com/en-us/library/system.windows.forms.tooltip</a>(VS.71).aspx</p>
<p>Note &nbsp; ToolTip text is not displayed for controls that are disabled.</p>
<p>Looking from &quot;inside&quot; of Win32 I understand the reasoning. However, as an application developer I think it&#8217;s just wrong. I hate when UI controls are grayed out and I don&#8217;t know the reason why. Every disabled control MUST tell why it is disabled. And one of the good ways to do so is to display this reason in the tooltip. It is out of the way if you are not interested. And it pops up if you trying to figure it out. No, you can&#8217;t do that. You have to invent your own code to hack around it.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-493213">
				<div id="div-comment-493213" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Miral</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070405-00/?p=27363#comment-493213">
			April 15, 2007 at 9:35 pm</a>		</div>

		<p>If you *really* want to do that, then make a little annotation control (like the ErrorProvider in .NET) that attaches itself to a disabled control and can tell the user why it&#8217;s disabled.</p>
<p>Usually, though, windows are disabled for very obvious reasons &#8212; if you find the need to explain why something is disabled then possibly your UI design needs improvement.</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>