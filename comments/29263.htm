<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (51)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-433383">
				<div id="div-comment-433383" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Gabe</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20061024-02/?p=29263#comment-433383">
			October 24, 2006 at 10:09 am</a>		</div>

		<p>It seems unlikely to me that a really old program would rely on<br />
invalidating the whole desktop. I can only imagine that it would be<br />
using that trick to repaint all of its windows. Why can&#8217;t the new DWM<br />
simply take that as a cue to repaint all of the windows belonging just<br />
to that thread or process that called Invalidate?</p>
<div class="post">[<i>Quite the contrary. It&#8217;s the old programs that are <u>more likely</u> to rely on it. That&#8217;s why it&#8217;s called backward compatibility. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-433593">
				<div id="div-comment-433593" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">RichB</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20061024-02/?p=29263#comment-433593">
			October 24, 2006 at 11:21 am</a>		</div>

		<p>From the original post:</p>
<blockquote><p>
  Changing nearly anything in the window manager</p>
<p>  raises a strong probability that there will be</p>
<p>  many programs that were relying on the old</p>
<p>  behavior, perhaps entirely by accident, and</p>
<p>  breaking those programs means an angry phone</p>
<p>  call from a major corporation because their</p>
<p>  factory control software stopped working.
</p></blockquote>
<p>The Linux folk are having the same deliberations. Should they throw out the Metacity window manager and go with compiz/beryl or should they extend Metacity keeping all the compatibility hacks in place?</p>
<p>Luckily, the Linux development process has so many levels (unstable WM, stable WM, WM integrated into unstable desktop env, WM integrated into stable desktop env, desktop env integrated into unstable distro, desktop env integrated into stable distro) that there&#8217;s lots of chances for new systems to be tested and hacks put back in, prior to arriving on a user&#8217;s desktop.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-433623">
				<div id="div-comment-433623" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Centaur</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20061024-02/?p=29263#comment-433623">
			October 24, 2006 at 11:40 am</a>		</div>

		<p>I notice that the heap memory allocation function, HeapAlloc,<br />
detects that a debugger is attached and fills the allocated memory with<br />
0xBAADF00D, which it doesnâ€™t without a debugger. I imagine many<br />
compatibility hacks could be disabled in this mode and replaced with<br />
warnings of varying visibility (ranging from OutputDebugString to<br />
message boxes to blue screens).</p>
<div class="post">[<i>You&#8217;d be surprised how many programs crash when you run them under the debugger because of this. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-433653">
				<div id="div-comment-433653" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">DrPizza</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20061024-02/?p=29263#comment-433653">
			October 24, 2006 at 12:09 pm</a>		</div>

		<p>This is a job for a shim. &nbsp;Indeed, most perpetuation of crap<br />
decisions should be dealt with by using a shim. &nbsp;It stops new<br />
programs being written to demand the broken behaviour, but lets old<br />
programs work.</p>
<p>&#8220;But what about applications we won&#8217;t know to put on the list of programs to be shimmed?&#8221;</p>
<p>Obvious answers (to be taken together to provide a satisfactory solution):</p>
<p>1) Make shim administration easier for people to use. &nbsp;ACT is<br />
annoying, to say the least, and not widely used. &nbsp;Give it some<br />
love to make the UI nicer (in particular, allow it to work &#8220;live&#8221;,<br />
rather than having to have the silly patch files that then have to be<br />
merged locally; that&#8217;s appropriate for some situations, but totally<br />
non-obvious for a user trying to fix a program)</p>
<p>2) Make shim diagnosis easier. &nbsp;The ACT has bugger all<br />
information about what its various hacks do, and there&#8217;s no easy way to<br />
find out what shims might fix a given situation. &nbsp;Yet this could<br />
be done. &nbsp;It already has the API profiler/logger shim. &nbsp;Make<br />
it process the output of that. &nbsp;This way it can actually see &#8220;hmm,<br />
that&#8217;s invalidating a lot of null windows&#8221; or &#8220;that&#8217;s dereferencing a<br />
lot of freed heap pointers&#8221; (etc.) and propose appropriate fixes.</p>
<p>3) Update the list of needed-shims regularly</p>
<p>4) Make the list of needed-shims community-based (much like certain<br />
spyware programs allow what is essentially &#8220;voting&#8221;; if lots of people<br />
report program X needs shim Y, it gets put on the list)</p>
<p>5) Don&#8217;t allow any shimming or workarounds in 64-bit APIs.<br />
&nbsp;There&#8217;s just no excuse for it. &nbsp;If a developer&#8217;s recompiling<br />
then they have to retest the entire app anyway, so they can damn well<br />
fix their problems.</p>
<div class="post">[<i>Sure logging might help for easy context-free<br />
things like invalidating the NULL window or double-freeing&#8211;assuming<br />
you even know to try it!&#8211;but most<br />
compatibility problems are not that obvious. Heap corruption, message<br />
order dependencies, hard-coded paths, passing incorrect buffer sizes,<br />
assuming that My Computer is the first icon that comes out of<br />
IEnumIDList::Next&#8230; Let&#8217;s look at this NULL window thing. The result<br />
is that the program doesn&#8217;t quite look right. It shows stale data<br />
sometimes, or half of the window updates and half doesn&#8217;t. When you see<br />
this, are you going to say, &#8220;Aha! I bet a shim will fix this!&#8221; -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-433683">
				<div id="div-comment-433683" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Gabe</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20061024-02/?p=29263#comment-433683">
			October 24, 2006 at 12:22 pm</a>		</div>

		<p>Raymond, I guess my question is just why an app would rely on repainting the whole desktop? If it has multiple windows, I can see where somebody would just invalidate the whole desktop rather than enumerate all their windows. But what sort of app would require every window on the desktop to repaint?</p>
<p>DrPizza, you can&#8217;t take backcompat out of 64-bit Windows. If people can&#8217;t just recompile and get it to work, they&#8217;ll simply say that a 64-bit version is unsupported. All you&#8217;d end up doing is reducing the number of 64-bit apps.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-433723">
				<div id="div-comment-433723" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">James Risto</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20061024-02/?p=29263#comment-433723">
			October 24, 2006 at 12:38 pm</a>		</div>

		<p>Here is a question &#8230; when is compat broken? Just if security?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-433833">
				<div id="div-comment-433833" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Richard Wells</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20061024-02/?p=29263#comment-433833">
			October 24, 2006 at 2:09 pm</a>		</div>

		<p>Gabe: One may need to repaint more than just an application&#8217;s windows. Those conglomerate apps so popular a decade ago provide an example. Third party controls or groups of apps stitched together with DDE might not update in a timely fashion. They will always repaint when the entire desktop repaints.</p>
<p>Like any clever trick, Null window got overused. Once many applications all try to repaint the desktop, video performance has to suffer.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-433843">
				<div id="div-comment-433843" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Nawak</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20061024-02/?p=29263#comment-433843">
			October 24, 2006 at 2:10 pm</a>		</div>

		<p>Raymond: &#8220;You have this program from 1998 that your company relies<br />
on for its day-to-day operations, and now it runs three times worse&#8221;</p>
<p>Since &#8220;their original plan was to get rid of the compatibility hack&#8221;, those programs would have been dead anyway.</p>
<p>But I agree that my proposition (and therefore theirs ;-) ) is not<br />
great, because it still means that the users will notice the change<br />
when they upgrade the OS and not when they buy the product.</p>
<p>Anyway, if I were in this situation, I would think hard to find a<br />
solution that prevents new buggy programs to be released, and only if<br />
none is sensible would I keep the compatibility hack in place and<br />
invisible.</p>
<p>For unknown applications:</p>
<p>some have suggested debuggers detection. I think it is a good idea,<br />
since I don&#8217;t know many programmers that would release an app they<br />
couldn&#8217;t run in the debugger.</p>
<p>If it were possible, maybe activating the hack depending on the app<br />
build date: if it is an old app then do the magic, if it is a new app<br />
(ie: being developped and run) then do what the doc says (eg: NULL is<br />
invalid)</p>
<p>Detecting the application build date could be accomplished by<br />
reading the PE header (if such an information is present in it), by<br />
looking at the target architecture, the DLLs wanted (some didn&#8217;t exist<br />
in 1998), the type of resources etc&#8230; The loader would check that and<br />
set up a flag somewhere to activate the compatibility hacks.</p>
<p>(For known applications, the necessary compatibility hacks are already known and used)</p>
<p>Last thing:</p>
<p>&#8220;You&#8217;d be surprised how many programs crash when you run them under the debugger because of this&#8221;</p>
<p>Are you talking about new programs or old apps you just debugged to<br />
know why they crashed on a new OS? Is there still programs that are<br />
released without having seen a debugger?</p>
<div class="post">[<i>I have seen many modern programs that<br />
(unintentionally) crash if you run them under a debugger. It&#8217;s a<br />
miracle that they run at all, but run they do, and if Windows Vista<br />
breaks them, it&#8217;s Vista&#8217;s fault. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-433863">
				<div id="div-comment-433863" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">VirtualRabbit</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20061024-02/?p=29263#comment-433863">
			October 24, 2006 at 2:21 pm</a>		</div>

		<p>&#8220;When you see this, are you going to say, &#8216;Aha! I bet a shim will fix this!'&#8221;</p>
<p>No, I&#8217;m going to do like anyone else and ask google. &nbsp;Google will tell me that a shim will fix it.</p>
<p>I think Microsoft needs to take responsibility the design decisions<br />
they made 10 years ago and drop these kind of hacks from their code.<br />
&nbsp;Every library is going to have some number of bugs or glitches<br />
that programmers will take advantage of, but Microsoft makes the<br />
problem much worse by effectively condoning the abuse of these<br />
glitches. </p>
<div class="post">[<i>I doubt even Google will know how to fix that program you hired a contractor to write in 1998. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-433873">
				<div id="div-comment-433873" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Bob</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20061024-02/?p=29263#comment-433873">
			October 24, 2006 at 2:28 pm</a>		</div>

		<p>How about having new versions of windows output nasty error messages<br />
to the system log. &nbsp;&#8220;Program XYZ has invalidated a null window in<br />
system call Blah &#8211; please notify the program&#8217;s vendor and see if a fix<br />
is available.&#8221;</p>
<p>Now, lots of people don&#8217;t know the logs exist, but perhaps enough do<br />
that support calls, complaints, and the like will pressure the vendors<br />
into fixing the problem in future versions. &nbsp;No, it&#8217;s not a fix<br />
for orphaned software but maybe it&#8217;ll allow you to get rid of these<br />
shims in another decade.</p>
<div class="post">[<i><a href="http://blogs.msdn.com/oldnewthing/archive/2006/04/04/568100.aspx" rel="nofollow">Spamming the event log doesn&#8217;t make things any better</a>. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-433903">
				<div id="div-comment-433903" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">640k</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20061024-02/?p=29263#comment-433903">
			October 24, 2006 at 2:52 pm</a>		</div>

		<p>And the &quot;major vendor&quot; in this case was M$ :)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-433923">
				<div id="div-comment-433923" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">DrPizza</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20061024-02/?p=29263#comment-433923">
			October 24, 2006 at 3:26 pm</a>		</div>

		<p>&#8220;DrPizza, you can&#8217;t take backcompat out of 64-bit Windows. If people<br />
can&#8217;t just recompile and get it to work, they&#8217;ll simply say that a<br />
64-bit version is unsupported. All you&#8217;d end up doing is reducing the<br />
number of 64-bit apps.&#8221;</p>
<p>Then when the world goes increasingly 64-bit consumers will put them under pressure to shape up or die.</p>
<div class="post">[<i>The world won&#8217;t go 64-bit until there is a<br />
critical mass of 64-bit apps. If you make it hard to port to 64-bit,<br />
you won&#8217;t have many 64-bit apps. See OS/2. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-433943">
				<div id="div-comment-433943" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Jonathan Wilson</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20061024-02/?p=29263#comment-433943">
			October 24, 2006 at 3:39 pm</a>		</div>

		<p>If its not already there, the checked build of windows should<br />
display or log (by default or with a special option) any time that an<br />
application uses any kind of backcompat hack (either one thats globally<br />
enabled or via a shim). Basicly, if you use something that microsoft<br />
considers &#8220;depreciated&#8221;, the checked build and/or some kind of<br />
application verifier would tell you &#8220;dont do that&#8221; and you could change<br />
the code.</p>
<p>I dont believe something like this already exists but I could be wrong&#8230;</p>
<div class="post">[<i>Wow, that&#8217;s such a great idea, somebody built a time machine and <a href="http://www.microsoft.com/technet/prodtechnol/windows/appcompatibility/appverifier.mspx" rel="nofollow">already did it, even calling it &#8220;Application Verifier&#8221;</a>! -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-434023">
				<div id="div-comment-434023" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Nekto2</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20061024-02/?p=29263#comment-434023">
			October 24, 2006 at 4:36 pm</a>		</div>

		<p>&gt; They contacted the vendor who agreed to fix the bug, but the<br />
fact that a modern program still relies on this ancient behavior gave<br />
them pause. </p>
<p><a href="http://msdn2.microsoft.com/en-us/library/c8xdzzhh.aspx" target="_new" rel="nofollow">http://msdn2.microsoft.com/en-us/library/c8xdzzhh.aspx</a></p>
<p>Why they need to contact in person if there should be compiler warning for such cases??</p>
<div class="post">[<i>Are you proposing deprecating the entire <code>InvalidateRect</code> function? How would you invalidate rectangles then? -Raymnond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-433463">
				<div id="div-comment-433463" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Nawak</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20061024-02/?p=29263#comment-433463">
			October 24, 2006 at 10:35 am</a>		</div>

		<p>If I remember correctly, when you talk about compatibility hacks,<br />
Raymond, people often say &#8220;do it but make it very slow&#8221; to which you<br />
reply &#8220;slower programs don&#8217;t sell the OS&#8221;</p>
<p>Still true, but in that case maybe doing it would have given a clue<br />
to the authors of the &#8220;many programs written in years past [that] also<br />
rely on that behavior&#8221; and microsoft could have gotten rid of the hack<br />
eventually.</p>
<p>Maybe be making it *noticeably* (by the author) slower would have<br />
been out of the question (it would have to be very slow to be noticed)<br />
but, I don&#8217;t know, making it blank-then-refresh the desktop three times<br />
would have been enough to make the author wonder about it (&#8220;Why three<br />
times?? I told only once you stupid Windows! Let&#8217;s see, what do they<br />
say about that buggy function&#8230; Oh-oh&#8230; looks like my instinct wasn&#8217;t<br />
right and NULL doesn&#8217;t mean what I thought!&#8221;).</p>
<p>And saying that &#8220;now it&#8217;s too late&#8221; isn&#8217;t right either, since this<br />
bad behaviour has been noticed loooong ago (when changing the API<br />
behaviour in the case of invalid parameters) and if the counter-measure<br />
had been implemented *then* instead of saying &#8220;oh it&#8217;s too late&#8221;, maybe<br />
*now* microsoft could have moved to a cleaner code base!</p>
<p>The DWM team has made the same mistake and won&#8217;t be able to get rid of it for DWM2.</p>
<p>Well&#8230; it&#8217;s too late now&#8230; ;)</p>
<div class="post">[<i>(1)&nbsp;Making it slow punishes users, not<br />
programmers. You have this program from 1998 that your company relies<br />
on for its day-to-day operations, and now it runs three times worse.<br />
Who do you blame, the contractor you hired eight years ago or Microsoft<br />
whose latest operating system sucks? (2)&nbsp;As if blinking three<br />
times will make the programmer investigate more carefully. The<br />
programmer will say, &#8220;Stupid buggy Windows. Keeps flashing the desktop<br />
randomly.&#8221; You&#8217;re not going to say &#8220;Gosh the desktop flashes at this<br />
call to InvalidateRect on line 1752.&#8221; You say, &#8220;Gosh, the desktop<br />
flashes randomly for no apparent reason. Must be Explorer acting crazy<br />
again.&#8221; -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-434093">
				<div id="div-comment-434093" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ryan Cavanaugh</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20061024-02/?p=29263#comment-434093">
			October 24, 2006 at 5:52 pm</a>		</div>

		<p>Nekto2: This is a run-time thing. InvalidateRect(someRectPtr) isn&#8217;t deprecated, InvalidateWindow(NULL) is. They&#8217;re the same function. You can&#8217;t deprecate one without deprecating the other.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-434103">
				<div id="div-comment-434103" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">David Walker</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20061024-02/?p=29263#comment-434103">
			October 24, 2006 at 5:54 pm</a>		</div>

		<p>Gee, when I connect my home computer to my office computer using Remote Desktop, the icons start to paint, then they all flash, then they continue painting, then they all flash again&#8230; they flash three times in total before being completely painted!</p>
<p>I wonder if Nawak is on to something there&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-433533">
				<div id="div-comment-433533" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Robert</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20061024-02/?p=29263#comment-433533">
			October 24, 2006 at 10:55 am</a>		</div>

		<p>if ((hwnd == NULL)&amp;&amp;(DebuggerAttached())</p>
<p>{</p>
<p> &nbsp;OutputDebugString(&#8220;NULL hwnd to clear desktop is<br />
undocumented, unsupported and deprecated and will not be supported<br />
anymore. Drop it. We are tired supporting people like you. Next time a<br />
relay will close the contact between your keyboard and the 220v wall<br />
plug. Remove this bug or die.n&#8221;);</p>
<p> &nbsp;DebugBreak();</p>
<p>}</p>
<p>this would not solve the problem today, but if it was done let&#8217;s say<br />
in 2001 in XP(maybe with *slightly* different words), today we would<br />
have not these problems anymore.</p>
<p>Or you can made the trick work in Win32 but not on Win64 and wait on natural platform selection to evolve..</p>
<div class="post">[<i>Why would this have been a valid solution in 2001 or XP? Who&#8217;s going to fix that program from 1998? -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-434153">
				<div id="div-comment-434153" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Cooney</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20061024-02/?p=29263#comment-434153">
			October 24, 2006 at 6:26 pm</a>		</div>

		<p>[Okay, I guess I still don&#8217;t understand. Fire up the time machine, let&#8217;s go back to 2001. You&#8217;re at a design meeting for Windows XP and somebody asks, &quot;So what should we do about this null window issue?&quot; What&#8217;s your answer? -Raymond]</p>
<p>Shim the known applications, remove the general fix for new apps, and die messily in the checked build. If you want to kill this, there will be some pain involved. Maybe I don&#8217;t get to make that call, but the tradeoff should be clear.</p>
<p>[The world won&#8217;t go 64-bit until there is a critical mass of 64-bit apps. If you make it hard to port to 64-bit, you won&#8217;t have many 64-bit apps. See OS/2. -Raymond]</p>
<p>Sure it will &#8211; look at linux. It went 64 bit, and now you can run 32 bit apps as well as 64 bit ones. Why would you run notepad as a 64b app, anyway? Only to ditch a dependency, so far as I can tell &#8211; the early adopters are CAD, databases, and other big memory apps. You bitch about app compatibility headaches, but when someone proposes a sensible break point (no, raymond, you can&#8217;t just rebuild. You know better), you shoot it down.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-433883">
				<div id="div-comment-433883" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Cooney</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20061024-02/?p=29263#comment-433883">
			October 24, 2006 at 2:44 pm</a>		</div>

		<p>Robert: </p>
<p>&gt;&gt;</p>
<p>this would not solve the problem today, but if it was done let&#8217;s say<br />
in 2001 in XP(maybe with *slightly* different words), today we would<br />
have not these problems anymore.</p>
<p>Or you can made the trick work in Win32 but not on Win64 and wait on natural platform selection to evolve..</p>
<p>[Why would this have been a valid solution in 2001 or XP? Who&#8217;s going to fix that program from 1998? -Raymond]</p>
<p>&lt;&lt;</p>
<p>Nobody&#8217;s going to fix that old thing, but they will stop (or retard)<br />
the use of it today. I personally favor the shim approach, since<br />
nobody&#8217;s going to stop doing this thing if it still works.</p>
<div class="post">[<i>Okay, I guess I still don&#8217;t understand. Fire up<br />
the time machine, let&#8217;s go back to 2001. You&#8217;re at a design meeting for<br />
Windows XP and somebody asks, &#8220;So what should we do about this null<br />
window issue?&#8221; What&#8217;s your answer? -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-vishalsi even thread-even depth-1" id="comment-434263">
				<div id="div-comment-434263" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">VishalSi</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20061024-02/?p=29263#comment-434263">
			October 25, 2006 at 12:04 am</a>		</div>

		<p>I wud believe there is tons of code out there which gets copy pasted or re-used when an application&#8217;s new version is revved since it just works. These code traces when encountered should either be removed or commented to be incompatible going forward.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-434283">
				<div id="div-comment-434283" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Jonathan Wilson</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20061024-02/?p=29263#comment-434283">
			October 25, 2006 at 1:11 am</a>		</div>

		<p>What surprises me is that more games arent 64 bit, I would have thought that with gamers being more likely to have 64 bit CPUs and with games being performance hungry, there would be advantages to porting games to x86-64&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-434323">
				<div id="div-comment-434323" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Chuck Chen</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20061024-02/?p=29263#comment-434323">
			October 25, 2006 at 3:06 am</a>		</div>

		<p>DrPizza,</p>
<blockquote><p>
  &gt;
</p></blockquote>
<p>ACT is annoying, to say the least, and not widely used. &nbsp;Give it some love to make the UI nicer (in particular, allow it to work &quot;live&quot;, rather than having to have the silly patch files that then have to be merged locally; that&#8217;s appropriate for some situations, but totally non-obvious for a user trying to fix a program)&#8230;</p>
<blockquote><p>
  &gt;
</p></blockquote>
<p>What version of ACT are you referring to? &nbsp;Tell us what we can do to make it better. &nbsp;It might not be too late&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-434353">
				<div id="div-comment-434353" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Chris Becke</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20061024-02/?p=29263#comment-434353">
			October 25, 2006 at 4:11 am</a>		</div>

		<p>Having bene the victim of my whole desktop flashing randomly in the past, I have very little sympathy for this backcompat fix.</p>
<p>esp. with a multi monitor system the visual jarring and general system slowdown incurred by a desktop repaint is bad enough to warrant seriously considering simply breaking apps that rely on it.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-434233">
				<div id="div-comment-434233" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.asvguy.com' rel='external nofollow' class='url'>Burak KALAYCI</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20061024-02/?p=29263#comment-434233">
			October 24, 2006 at 10:34 pm</a>		</div>

		<p>I don&#8217;t see any good reason to consider to plan to get rid of *any* compatibility hack. You either care about backwards compatibility or not. In the latter case, you should better rename/rebrand the software.</p>
<p>&#8216;They contacted the vendor who agreed to fix the bug,&#8230;&#8217;</p>
<p>I&#8217;ve just checked a 4 year old Win32 SDK help file and this is well documented (If this parameter is NULL, Windows invalidates and redraws all windows,&#8230;), I don&#8217;t think invalidating the null window with InvalidateRect can be considered a bug at all.</p>
<p>In any case, correct way to handle this shouldn&#8217;t be altering current behavior but introducing a new function (InvalidateRectEx), and then depreciate the original function 20 years later.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-434373">
				<div id="div-comment-434373" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">James Risto</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20061024-02/?p=29263#comment-434373">
			October 25, 2006 at 8:24 am</a>		</div>

		<p>Perhaps a new approach is needed here. Certainly all of us<br />
non-MS&#8217;ers DO NOT UNDERSTAND the magnitude of testing and decisions<br />
that have to be made. What if all applications that are found to break<br />
obvious rules were documented? Then, at least us IT&#8217;ers could bug the<br />
vendors to fix, at least for the apps that are still &#8220;alive&#8221;.</p>
<div class="post">[<i>You already have that list. Fire up the Application Compatibility Toolkit and start browsing. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-434383">
				<div id="div-comment-434383" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Robert</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20061024-02/?p=29263#comment-434383">
			October 25, 2006 at 8:27 am</a>		</div>

		<p>&gt;&gt; [Why would this have been a valid solution in 2001 or XP? Who&#8217;s going to fix that program from 1998? -Raymond]</p>
<p>Noone, but it would have been a good time to begin inspiring<br />
developers that the hack is.. an hack and not the correct way to do<br />
things.</p>
<p>Either you do something like that or you&#8217;re doomed to have random<br />
developers around the world use the hack again and again (most of them<br />
do not even figure out it&#8217;s not the right way).</p>
<p>2001/XP was the release date of the most popular OS version. You can<br />
bet most developers are running on XP machines and will run on them for<br />
a few years even after Vista is released (especially since the market<br />
of new machines is slowing down &#8211; a 2003 machine is still quite good<br />
despite its 3 years age). If it was introduce in 2001 you could safely<br />
assume very few applications were developed or maintained from<br />
2003-2006 with the hack in it and you could end up removing the support<br />
in say 2010 (or leave it as opt-in in the compatibility page). </p>
<div class="post">[<i>Okay, so your argument then is the same as the<br />
argument now. It&#8217;s just happening in the past. That doesn&#8217;t do anything to refute the arguments against. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-434433">
				<div id="div-comment-434433" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">John</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20061024-02/?p=29263#comment-434433">
			October 25, 2006 at 10:07 am</a>		</div>

		<p>Does Microsoft publish a list of app compat hacks in Windows?<br />
&nbsp;It should, under a heading of &#8220;Don&#8217;t do these things!&#8221;.<br />
&nbsp;Each hack should include a pointer to the documentation on the<br />
proper way to accomplish the task.</p>
<div class="post">[<i>See the Application Compatibility Toolkit and the Application Verifier. These tools have been around for years. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-434443">
				<div id="div-comment-434443" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">DrPizza</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20061024-02/?p=29263#comment-434443">
			October 25, 2006 at 10:09 am</a>		</div>

		<p>&#8220;[The world won&#8217;t go 64-bit until there is a critical mass of 64-bit<br />
apps. If you make it hard to port to 64-bit, you won&#8217;t have many 64-bit<br />
apps. See OS/2. -Raymond]&#8221;</p>
<p>64-bit apps will happen no matter what. &nbsp;It might take a while,<br />
but it&#8217;ll happen. &nbsp;There&#8217;s no need to worry about it. &nbsp;Just<br />
make Win64 &#8220;clean&#8221; and let the developers do the rest.</p>
<div class="post">[<i>I&#8217;m sure the people who bought 64-bit Alpha machines shared your enthusiasm and look where it got them. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-434593">
				<div id="div-comment-434593" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">James Risto</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20061024-02/?p=29263#comment-434593">
			October 25, 2006 at 11:02 am</a>		</div>

		<p>Does the App Compat Toolkit just examine your system? Perhaps I am wrong with my quick look. What I meant was a huge list of apps that do weird stuff, that MS has ever found. Perhaps MS can&#8217;t do that without wrath of the app vendors.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-434783">
				<div id="div-comment-434783" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ulric</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20061024-02/?p=29263#comment-434783">
			October 25, 2006 at 12:29 pm</a>		</div>

		<p>I&#8217;m with raymond on the compatibility stuff, but I&#8217;d like to know what that beta app was accomplishing?</p>
<p>I can understand invalidating a region of the display with NULL. For example if you&#8217;ve drawn something like a selection rect XORed basically on top of everything (which you should not do since it gives the wrong result with always-on-top windows). &nbsp;It could be useful for drawing splitter bars interaction, which need to draw on top of the child windows of the splitter view. &nbsp;Personnally I create a window on top to draw those things into though, it&#8217;s the only way to get proper clipping &#8211; but I can easily imagine people could not think of doing that.</p>
<p>I could see people easily passing a NULL window handle by calling InvalidateRect are the wrong time.</p>
<p>If that&#8217;s not the kind of use it is, I&#8217;d like to know more example.</p>
<div class=post>[<i>As I recall, it was just a bug. They meant to invalidate a particular window but something went amiss and they invalidated <code>NULL</code> instead. But they never noticed the bug since, well, the intended window did get invalidated at the end of the day.-Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-434933">
				<div id="div-comment-434933" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">asdf</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20061024-02/?p=29263#comment-434933">
			October 25, 2006 at 3:24 pm</a>		</div>

		<p>My suggestion is to keep the workaround (hey, it&#8217;s already documented in MSDN anyway) but if they&#8217;re running under the debugger, paint every window in their process a nasty color like bright pink or green before you redraw.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-435033">
				<div id="div-comment-435033" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Cooney</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20061024-02/?p=29263#comment-435033">
			October 25, 2006 at 5:00 pm</a>		</div>

		<p>[I&#8217;m sure the people who bought 64-bit Alpha machines shared your enthusiasm and look where it got them. -Raymond]</p>
<p>Never mind that Alphas cost more (generally) and ran existing apps slower, while the current 64 bit stuff is cheap and runs fast. Also see pentium pros.</p>
<div class=post>[<i>The road to failure is dotted with people who thought that they the lessons of history didn&#8217;t apply to them because they were different. (Mind you, many of these people also find the road to success.) But having Win32 and Win64 follow subtly different rules that can&#8217;t be caught at compile time smells like a road to failure to me. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-435143">
				<div id="div-comment-435143" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Cooney</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20061024-02/?p=29263#comment-435143">
			October 25, 2006 at 6:49 pm</a>		</div>

		<p>You see the trap you&#8217;ve laid yourself, don&#8217;t you? You hate having to support brokenness, but aren&#8217;t willing to change anything.</p>
<p>Anyway, the InvalidateWindow(NULL) thing is something to catch in a check build.</p>
<div class=post>[<i>I&#8217;m willing to change things if there is a plan for maintaining compatibility while moving forward. But changing stuff while saying &#8220;Screw compatibility&#8221; is a non-starter. Complaining in a checked build is not going to help. I would hazard that 99% of software developers don&#8217;t run a checked build, and I&#8217;m probably underestimating. We can&#8217;t even get people to use Application Verifier for goodness&#8217;s sakes. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-435173">
				<div id="div-comment-435173" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Cooney</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20061024-02/?p=29263#comment-435173">
			October 25, 2006 at 8:37 pm</a>		</div>

		<p>Well, the 64 bit upgrade is going to require testing and code changes anyway &#8211; it looks like a great time to drop some of the app compat things.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-435203">
				<div id="div-comment-435203" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ulric</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20061024-02/?p=29263#comment-435203">
			October 25, 2006 at 9:51 pm</a>		</div>

		<p>&quot;Anyway, the InvalidateWindow(NULL) thing is something to catch in a check build.&quot;</p>
<p>The last time I used a checked build was in Windows 3.1! &nbsp;I don&#8217;t know anyone using these anymore. &nbsp;(I also used to use codeview a monochrome monitor with an hercules card! &nbsp;Those were the days.. I miss them :( )</p>
<p>Bounds checker it is for the most developers who actually look for problems .. (if the &nbsp;company that owns it now hasn&#8217;t killed it yet.. &nbsp;MS should buy it)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-435313">
				<div id="div-comment-435313" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">pragmatist</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20061024-02/?p=29263#comment-435313">
			October 26, 2006 at 6:17 am</a>		</div>

		<p>If you want people to use Application Verifier, include it in Visual Studio and have it run automatically in Debug mode (optionally, but by default). This would make an enourmous difference.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-435383">
				<div id="div-comment-435383" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Chris Becke</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20061024-02/?p=29263#comment-435383">
			October 26, 2006 at 10:33 am</a>		</div>

		<p>Checked builds, and application verfier are two things that I, as a developer, just dont know how to use.</p>
<p>I mean, these products are not exactly integrated into the default development environment. Sure, im my case I *should* know better. But most developers dont even know these tools exist at all.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-436423">
				<div id="div-comment-436423" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://K.Hagan@thermoteknix.co.uk' rel='external nofollow' class='url'>Ken Hagan</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20061024-02/?p=29263#comment-436423">
			October 28, 2006 at 4:52 pm</a>		</div>

		<p>&quot;Complaining in a checked build is not going to help. I would hazard that 99% of software developers don&#8217;t run a checked build, and I&#8217;m probably underestimating. We can&#8217;t even get people to use Application Verifier for goodness&#8217;s sakes.&quot;</p>
<p>But I&#8217;d hazard that 99% of developers do use the debugger and that 99% of end-users don&#8217;t.</p>
<p>Now, I&#8217;m rather more certain of the first of those 99% figures, so if anyone can point to a body of users who habitually run programs under some sort of watchdog process that uses the debugging APIs, I won&#8217;t be entirely amazed, but in the absense of such users, Robert&#8217;s suggestion looks like an efficient way of punishing the programmers whilst letting the end-users off the hook.</p>
<p>You may be tempted to put in a plea for clemency on behalf of programmers using broken third party libraries. Don&#8217;t bother. Ultimately, they chose the bad vendor. Either they are willing to revisit that decision or they should pay the price!</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-437163">
				<div id="div-comment-437163" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ian Boyd</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20061024-02/?p=29263#comment-437163">
			October 31, 2006 at 7:27 am</a>		</div>

		<p>Would a checked build of NT3.5 have ensured that the application written in 1994 would be compatible with Common Controls v6? Would running the application though the App Verifier under Windows 2000?</p>
<p>Applications written in pre-Delphi 7 are not at all compatible with the Common Controls version 6. Would the Application Verifier have caught it? Would a checked build? i don&#8217;t know what Borland did, but it did it wrong &#8211; inadvertently. &nbsp;Is Borland not running a checked build? Is Borland not using the App Verifier?</p>
<p>In the same way a web programmer puts a strict DOCTYPE at the top of their page; i like the idea of an API DisableAllCompatibilityHacks(). Or make it a PE flag. Make it a side-by-side assembly manifest. At least this way when i run my program, i&#8217;ll see problems; and be able to correct them.</p>
<p>If the program doesn&#8217;t fail, and if i haven&#8217;t yet come across an article by Raymond explaining how it should be done (as opposed to the docs explaining how you can do it), then i&#8217;ll rightly assume that i got it right &#8211; until some later version of Windows comes along and breaks it.</p>
<p>Although, i guess (and someone could confirm) that a DisableAllCompatibilityHacks() call is too difficult to implement; it would require a whole different build of Windows (aka a checked build.) &nbsp;Perhaps if checked builds were free, and didn&#8217;t cost a license, they&#8217;d get used more. They&#8217;re slow enough to be their own deterrent to piracy.</p>
<p>NOTE: ActiveX controls written in Delphi are incompatible with ie7. It has to do with the browser now being in one thread, and the ActiveX in another. Is there anything Borland could have done to have seen it coming?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-437213">
				<div id="div-comment-437213" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ian Boyd</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20061024-02/?p=29263#comment-437213">
			October 31, 2006 at 9:46 am</a>		</div>

		<p>Application Verifier doesn&#8217;t complain on </p>
<p> &nbsp;InvalidateRect(NULL, NULL, True);</p>
<p>And the SDK says, &#8221; If this parameter is NULL, the system<br />
invalidates and redraws all windows, and sends the WM_ERASEBKGND and<br />
WM_NCPAINT messages to the window procedure before the function<br />
returns. &#8221;</p>
<p>It&#8217;s not an undocumented feature &#8211; it&#8217;s a documented feature. Woe to those who use documented features.</p>
<div class="post">[<i>Are you saying that this behavior should not have been documented? -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-437243">
				<div id="div-comment-437243" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://levicki.blogspot.com/' rel='external nofollow' class='url'>Igor</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20061024-02/?p=29263#comment-437243">
			October 31, 2006 at 11:11 am</a>		</div>

		<p>There is a way to fix at least one part of this &#8212; the one where people use wrong parameters intentionaly.</p>
<p>It would require some work on a compiler but it is doable and IMO not too hard.</p>
<p>Build a database of API calls with invalid parameters and let a compiler check the code it is generating against it. If it detects that it is pushing NULL onto a stack before call to InvalidateRect() then it should stop compilation with an error saying that NULL is not a valid parameters. Of course that wouldn&#8217;t catch runtime assigned values (i.e. non-constants) but it would help tremendously to prevent new errors.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-437463">
				<div id="div-comment-437463" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ian Boyd</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20061024-02/?p=29263#comment-437463">
			October 31, 2006 at 8:08 pm</a>		</div>

		<p>&#8220;[Are you saying that this behavior should not have been documented? -Raymond]&#8221;</p>
<p>Yes. </p>
<p>Or at the very least a comment about &#8220;this feature is non-standard, unsupported and may be removed in future versions.&#8221;</p>
<p>Instead, it sounds just as valid as calling:</p>
<p>InvalidateRect(dc, NULL, False);</p>
<p>Unless passing a null rect is also a compatability hack.</p>
<p>My point is, the only source for valid SDK documentation seems to be<br />
Raymond&#8217;s blog. Which isn&#8217;t good for all the API calls he hasn&#8217;t<br />
blogged about yet.</p>
<div class="post">[<i>Another example of &#8220;No matter what you do,<br />
somebody will insist that what you did was obviously the wrong thing.&#8221;<br />
Other people would argue that the behavior needs to be documented<br />
because leaving it out means that debugging a &#8220;my screen flashes&#8221;<br />
problem becomes impossible. You&#8217;re damned if you document it and you&#8217;re<br />
damned if you don&#8217;t. I would also like to reiterate that the information on this blog is <u>not</u> formal documentation. Anybody who treats it as such is doing themselves a disservice. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-437563">
				<div id="div-comment-437563" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://levicki.blogspot.com/' rel='external nofollow' class='url'>Igor</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20061024-02/?p=29263#comment-437563">
			October 31, 2006 at 10:33 pm</a>		</div>

		<p>How about a message box saying:</p>
<p>This program has requested that all windows be invalidated. What would you like Windows to do?</p>
<p>[Bug ISV to fix it] [Block always] [Block this time] [Allow this time] [Allow always]</p>
<p>[Bug ISV to fix it] should be the default and other buttons should<br />
be grayed and only unblocked one by one in 5 second intervals. So<br />
taking the &#8220;easy way out&#8221; with [Allow Always] would take 20 seconds<br />
giving user enough time to think about what they are doing.</p>
<p>Of course, the developer of the appication would also get the same<br />
prompt while testing so the new stuff would be fixed immediately.</p>
<div class="post">[<i><a href="http://blogs.msdn.com/oldnewthing/archive/2004/04/26/120193.aspx" rel="nofollow">In order to demonstrate our superior intellect, we will now ask you a question you cannot answer</a>.&#8221;<br />
(And besides, what happens when the user picks &#8220;Bug ISV to fix it&#8221;?<br />
Does Windows use its psychic powers to figure out the ISV&#8217;s email<br />
address?) -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-437583">
				<div id="div-comment-437583" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.asvguy.com' rel='external nofollow' class='url'>Burak KALAYCI</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20061024-02/?p=29263#comment-437583">
			November 1, 2006 at 12:31 am</a>		</div>

		<p>Let&#8217;s get one thing straight: Using InvalidateRect intentionally with the NULL window handle is NOT a bug. It&#8217;s documented, legal, part of Win32 API. It may have been a &#8216;compatibility hack&#8217; but it&#8217;s not now and it cannot be considered as such anymore. Ian Boyd is right, you shouldn&#8217;t document &#8216;hacks&#8217; like normal behavior, if you do so, it becomes the normal behavior. BTW, I wonder if using MessageBox with a NULL window handle was a &#8216;compatiblity hack&#8217; too, was it?</p>
<p>Best regards,</p>
<p>Burak</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-438423">
				<div id="div-comment-438423" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://levicki.blogspot.com/' rel='external nofollow' class='url'>Igor</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20061024-02/?p=29263#comment-438423">
			November 1, 2006 at 6:50 pm</a>		</div>

		<p>&gt;Does Windows use its psychic powers to figure out the ISV&#8217;s email address?</p>
<p>Why not use some cool programming powers for that?</p>
<p>For example some GetVersionInfo() accompanied with Uninstall<br />
registry key search for vendor contact information? Perhaps even some<br />
database query with exe name and checksum to one of your servers?</p>
<div class="post">[<i>Do you think many ISVs will sign up for this? Do<br />
you think users will say &#8220;Thank you, Microsoft, for making my day more<br />
annoying!&#8221;? -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-438443">
				<div id="div-comment-438443" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://levicki.blogspot.com/' rel='external nofollow' class='url'>Igor</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20061024-02/?p=29263#comment-438443">
			November 1, 2006 at 7:55 pm</a>		</div>

		<p>&gt;Do you think many ISVs will sign up for this?</p>
<p>Why should they sign up for this? You just make an application<br />
database, get support contact from their website and send an email with<br />
error details on behalf of the user. It is not exactly impossible thing<br />
to do considering that even major vendors have those issues and all of<br />
them have support emails (plus you most likely already know who they<br />
are).</p>
<p>&gt;Do you think users will say&#8230;</p>
<p>I don&#8217;t know for sure, but instead of just seeing unexplainable<br />
flickering each time some program calls InvalidateRect() with NULL<br />
window pointer they would at least have an option to complain to the<br />
vendor, or even to prevent the nasty program from doing that again.</p>
<p>Whichever way you turn it &#8212; it is bad the way it is right now.</p>
<p>Moreover, I am sure you are aware that people can learn?</p>
<p>When they notice that certain program misbehaves, they usually go to<br />
Control Panel / Add/Remove Programs and get rid of it and find an<br />
alternative which works better.</p>
<p>BUT&#8230; you need to make them notice that the program is misbehaving, not the OS.</p>
<p>Otherwise you will get the blame as in &#8220;Gosh, the desktop flashes<br />
randomly for no apparent reason. Must be Explorer acting crazy again.&#8221;<br />
&lt;- those are your words Raymond.</p>
<p>On the interface design, this is interesting read:</p>
<p><a href="http://www.joelonsoftware.com/printerFriendly/uibook/fog0000000249.html" target="_new" rel="nofollow">http://www.joelonsoftware.com/printerFriendly/uibook/fog0000000249.html</a></p>
<div class="post">[<i>I doubt ISVs would take kindly to Microsoft<br />
basically sending automated form letters to their inboxes without<br />
permission. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-438583">
				<div id="div-comment-438583" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ian Boyd</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20061024-02/?p=29263#comment-438583">
			November 2, 2006 at 6:49 am</a>		</div>

		<p>i still have to wonder, how am i (a developer) supposed to know if i<br />
am using an API wrong? i don&#8217;t want to use it wrong, i don&#8217;t mean to<br />
use it wrong, i don&#8217;t try to use it wrong.</p>
<p>But the docs don&#8217;t say it&#8217;s wrong. App Verifier doesn&#8217;t say it&#8217;s<br />
wrong. Return error codes doesn&#8217;t say it&#8217;s wrong. Event log error<br />
messages doesn&#8217;t say it&#8217;s wrong. Exceptions don&#8217;t say it&#8217;s wrong.<br />
&nbsp;It is not wrong &#8211; except an MS guy blogs about it, and tells us<br />
how people are using it wrong.</p>
<p>An excellent example is InvalidateRect with a null DC. There is<br />
nothing i can find anywhere that says passing a null DC is not the<br />
intended use, and you shouldn&#8217;t do it. i can&#8217;t find that information<br />
anywhere &#8211; except here.</p>
<p>How can anyone ever know that it&#8217;s wrong?</p>
<p>Help me help myself use the API properly.</p>
<p>People have come up with all kinds of ideas that Microsoft could<br />
choose from to address this problem. Sure they have problems &#8211; but at<br />
least something would be better than nothing.</p>
<div class="post">[<i>Are you saying you&#8217;re passing NULL intentionally?<br />
Why are you invalidating the entire screen on purpose? That&#8217;s the real<br />
question. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-439093">
				<div id="div-comment-439093" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ian Boyd</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20061024-02/?p=29263#comment-439093">
			November 3, 2006 at 9:36 am</a>		</div>

		<p>[Are you saying you&#8217;re passing NULL intentionally? Why are you invalidating the entire screen on purpose? That&#8217;s the real question. -Raymond]</p>
<p>i can tell you what the person who is passing NULL was thinking &#8211; or hoping to achieve. </p>
<p>&quot;i want a way to invalidate all windows in my process.&quot;</p>
<p>Turns out they can. i suppose they *could* keep a list of all windows created by their application, but Windows already has this information; so i&#8217;ll just ask it to do it.</p>
<p>And perhaps the DWM guys that do that instead; go through their list of windows and only invalidate ones owned by the process calling InvalidateRect(NULL)? </p>
<p>But the real info i&#8217;m begging for, is how to know what things are bad.</p>
<p>&lt;joke&gt;</p>
<p>Like the other little known compatility hack in SHFileOperation. You&#8217;re supposed to triple null terminate the list of filenames. But a well-known piece of software from a big-name company instead only double null terminated the filenames. Another compatibility hack was born.</p>
<p>&lt;/joke&gt;</p>
<p>It may be a joke, but for all i know it could be real.</p>
<p>i don&#8217;t want to be another barrier to innovation by relying on compatibility hacks. But how can i find out if i am in fact relying on one?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-439433">
				<div id="div-comment-439433" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://levicki.blogspot.com/' rel='external nofollow' class='url'>Igor</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20061024-02/?p=29263#comment-439433">
			November 5, 2006 at 11:19 pm</a>		</div>

		<p>Ian, you should never, ever try to invalidate all windows. They don&#8217;t belong to you or to your application. Period.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-579403">
				<div id="div-comment-579403" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.eriknovales.com/blog/index.php/2007/12/20/even-when-you-wrote-the-operating-system-you-still-have-to-work-around-other-peoples-bugs/' rel='external nofollow' class='url'>Even When You Wrote the Operating System, You Still Have to Work Around Other Peoples&#8217; Bugs</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20061024-02/?p=29263#comment-579403">
			December 20, 2007 at 2:01 pm</a>		</div>

		<p>PingBack from <a rel="nofollow" target="_new" href="http://www.eriknovales.com/blog/index.php/2007/12/20/even-when-you-wrote-the-operating-system-you-still-have-to-work-around-other-peoples-bugs/" rel="nofollow">http://www.eriknovales.com/blog/index.php/2007/12/20/even-when-you-wrote-the-operating-system-you-still-have-to-work-around-other-peoples-bugs/</a></p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>