<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (8)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-1167903">
				<div id="div-comment-1167903" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Jeson Park</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20141222-00/?p=43333#comment-1167903">
			December 22, 2014 at 9:19 am</a>		</div>

		<p>why you say about something that don&#39;t have to explain why?!?!? &nbsp;</p>
<p>there is better topic to fall in&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1167933">
				<div id="div-comment-1167933" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Timothy Byrd (ETAP)</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20141222-00/?p=43333#comment-1167933">
			December 22, 2014 at 10:16 am</a>		</div>

		<p>It&#39;s for the same reason I don&#39;t put honey in my tea on Mondays.</p>
<p>And I don&#39;t have to say why either&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1167943">
				<div id="div-comment-1167943" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Axel</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20141222-00/?p=43333#comment-1167943">
			December 22, 2014 at 10:35 am</a>		</div>

		<p>SSE3 is propably fine by now as well. It is supported by everything since 2005. Depends on what audience you want to target. I&#39;m in gamedev and there it is definitely acceptable.</p>
<div class="post">[<em>Since I work in the operating systems group, I tend to support the minimum operating system requirements. That&#39;s sort of what &quot;minimum operating system requirements&quot; means. -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1167953">
				<div id="div-comment-1167953" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Christian</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20141222-00/?p=43333#comment-1167953">
			December 22, 2014 at 12:10 pm</a>		</div>

		<p>Where you say &quot;and leaves the upper 64 bits with all bits set&quot;, don&#39;t you mean &quot;leaves only bit 64 set&quot;, and similarly for bit 0 in the right-shift case?</p>
<div class="post">[<em>No, really, all the top/bottom 64 bits remain set. Because <code>0xFFFFFFFF`FFFFFFFF`FFFFFFFF`FFFFFFF &lt;&lt; 64 = 0xFFFFFFFF`FFFFFFFF`00000000`00000000</code>. -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1167973">
				<div id="div-comment-1167973" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Christian</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20141222-00/?p=43333#comment-1167973">
			December 23, 2014 at 3:58 am</a>		</div>

		<p>Yes, if you had not done the PSRLQ right before. After the PCMPEQD, the register is 0xFFFFFFFF`FFFFFFFF`FFFFFFFF`FFFFFFFF, and the PSRLQ turns that into 0x00000000`00000001`00000000`00000001, doesn&#39;t it? Also, I thought you wanted only a single bit set in each lane after that step, not all of them.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1168173">
				<div id="div-comment-1168173" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Axel R.</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20141222-00/?p=43333#comment-1168173">
			December 23, 2014 at 4:03 pm</a>		</div>

		<p>Why? Because he can&#39;t wait for 128-bit CPUs ;-)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1168213">
				<div id="div-comment-1168213" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Tristan M.</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20141222-00/?p=43333#comment-1168213">
			December 23, 2014 at 11:41 pm</a>		</div>

		<p>Regarding &quot;Of course, you want to schedule the instructions better than the way I wrote them above. I wrote them in a logical order above to make the algorithm clearer, but you will want to reorder them to avoid stalls.&quot;, does the processor not execute SSE out of order or something? Or are you talking about somehow making the data dependencies clearer?</p>
<div class="post">[<em>Whether and to what degree the processor executes SSE out of order is an implementation detail. Explicit scheduling makes you less dependent on implementation. (Because who knows, maybe the next generation of CPU will do things differently.) -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1168583">
				<div id="div-comment-1168583" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Neil</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20141222-00/?p=43333#comment-1168583">
			December 26, 2014 at 2:52 am</a>		</div>

		<p>Why wouldn&#39;t the compiler be able to optimise the call to Calc2ToTheN with a constant argument? (Or do we have to wait for constexpr support for the magic to happen?)</p>
<div class="POST">[<em>The compiler might choose to optimize it or not, at its discretion. The template forces the optimization to occur. -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>