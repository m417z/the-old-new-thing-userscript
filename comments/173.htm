<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (2)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment byuser comment-author-alegrigoriev even thread-even depth-1" id="comment-1145893">
				<div id="div-comment-1145893" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/alegr1' rel='external nofollow' class='url'>alegr1</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140822-00/?p=173#comment-1145893">
			August 22, 2014 at 7:21 am</a>		</div>

		<p>OpenThread is one of those functions use of which is very suspicious. If you use it, then most likely you do the things wrong.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1146133">
				<div id="div-comment-1146133" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Myria</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140822-00/?p=173#comment-1146133">
			August 22, 2014 at 10:55 pm</a>		</div>

		<p>@alegr1: Pretty much. &nbsp;It&#39;s not very often that I use it (outside of debuggers and crash handlers).</p>
<p>In general, thread IDs should only be used during the lifetime of a thread that you started, and discarded once the thread is terminated and waited upon. &nbsp;So expanding on alegr1&#39;s statement, calling OpenThread probably means that you&#39;re mismanaging the lifetime of your program&#39;s threads, and probably have a bug somewhere that can occur if threads start and stop in a particular order or timing. &nbsp;You generally shouldn&#39;t need OpenThread because you should already have a handle to the thread.</p>
<p>If, when you create a thread, both the new thread and the creating thread need the new thread&#39;s handle, and want to maintain the lifetime of the handle on their own, have the creating thread own the handle returned by _beginthreadex, and have the new thread make a handle to itself using DuplicateHandle of GetCurrentThread(). &nbsp;You can also OpenThread on GetCurrentThreadId()&#8211;this particular use of OpenThread is safe, because a thread always knows that itself still exists. &nbsp;The scenario I&#39;ve describe isn&#39;t all that common, though; most often, a thread doesn&#39;t need its own handle.</p>
<p>Aside: Periodic reminder for your readers that the proper way to check for termination is not the STILL_RUNNING return value of GetExitCodeThread, but rather WaitForSingleObject with a zero timeout.</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>