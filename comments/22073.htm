<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (25)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-635923">
				<div id="div-comment-635923" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Nathan_works</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080604-00/?p=22073#comment-635923">
			June 4, 2008 at 10:13 am</a>		</div>

		<p>Interesting about applications having to manage the call stack. I&#8217;m happy to see that the MVC model was pushed onto Vista. Makes me wonder about many things in the driver world (since I&#8217;ve been out of it for ~6 years), where drivers similarly had to call the next one below them (filter drivers, interrupt handling etc). One &nbsp;are in particular, power management, was usually broken by not passing on correctly (or handling correctly) the power IRPs.</p>
<p>Though chaining in drivers is probably more necessary than in clipboard notifications.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-635943">
				<div id="div-comment-635943" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">ace</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080604-00/?p=22073#comment-635943">
			June 4, 2008 at 11:01 am</a>		</div>

		<p>Wow, thanks Raymond! I see the light!</p>
<p>After I&#8217;ve followed the links you&#8217;ve given, especially after reading</p>
<p><a rel="nofollow" target="_new" href="http://blogs.msdn.com/ts/archive/2006/11/20/why-does-my-shared-clipboard-not-work-part-2.aspx" rel="nofollow">http://blogs.msdn.com/ts/archive/2006/11/20/why-does-my-shared-clipboard-not-work-part-2.aspx</a></p>
<p>&#8230; I finally know why Copy-Paste in (the application that I will not name but it&#8217;s the second most popular web browser, the first being the default one from Microsoft) doesn&#8217;t work.</p>
<p>Now I know that they obviously &quot;OpenClipboad&quot; for whatever reason on some occasion (&quot;to read what&#8217;s there&quot;), and obviously keep it in already opened state at the very moment I do my &quot;Ctrl-C&quot;. Losers. The developers of the mentioned application happily ignore the issue for years now and that&#8217;s why I stopped using it.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-635953">
				<div id="div-comment-635953" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">BryanK</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080604-00/?p=22073#comment-635953">
			June 4, 2008 at 11:08 am</a>		</div>

		<p>Yeah, I&#8217;ve hit a seemingly-related issue a few times, where something related to RDP sessions is locking the clipboard. &nbsp;I&#8217;d start an RDP session to each of two different machines (because I do that every day), then start up various other programs.</p>
<p>At some point, local copy and paste breaks (that is, copying from a local process does not paste that data into any other local process), but disconnecting both RDP sessions and reconnecting fixes it. &nbsp;(I&#8217;m not sure if both need to be disconnected, though; I&#8217;ve never tested disconnecting just one.)</p>
<p>That doesn&#8217;t sound exactly the same as this problem, as the programs that don&#8217;t work with copy and paste were started after the RDP sessions &#8212; but restarting the RDP sessions does fix the issue. &nbsp;Any kind of issue with the notifier chain that gets fixed with an RDP-session-restart should have only affected programs that added themselves to the chain before the RDP session. &nbsp;(That is, programs after the RDP session in the chain.) &nbsp;This also doesn&#8217;t have anything to do with rdpclip; it&#8217;s strictly a local-machine issue.</p>
<p>But hey, whatever. &nbsp;(I should note, I don&#8217;t expect any kind of support here; I&#8217;m just recording a sort of &quot;I&#8217;m having that problem too; this is one way to get it working again&quot;.) &nbsp;This post does at least explain one possible reason why it would break; thanks!</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-635963">
				<div id="div-comment-635963" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Neil</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080604-00/?p=22073#comment-635963">
			June 4, 2008 at 11:22 am</a>		</div>

		<p>Obviously I&#8217;m guessing at which browser is suspected of holding the clipboard open, but one well-known alternative to IE uses OLE to copy and only opens the clipboard directly for long enough to make an internal copy to paste with.</p>
<p>If nothing else I now know it&#8217;s safe to try killing rdpclip.exe next time I have remote clipboard issues. I know of some badly-behaved VB-based shareware that effectively kills the clipboard in a remote session to test with.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-635973">
				<div id="div-comment-635973" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Gabe</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080604-00/?p=22073#comment-635973">
			June 4, 2008 at 11:44 am</a>		</div>

		<p>I think it would be nice to be able to find out what window/thread/process has the clipboard open so that I can terminate just the broken program. Maybe this is a job for Mark Russinovich.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-635983">
				<div id="div-comment-635983" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Adrian</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080604-00/?p=22073#comment-635983">
			June 4, 2008 at 12:00 pm</a>		</div>

		<p>I don&#8217;t think I&#8217;ve come across a program that locks up the clipboard this way. &nbsp;Usually when I can&#8217;t copy or paste, it&#8217;s because some bozo turned on Information Restrictions Management on an email message that I&#8217;ve minimized.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-635993">
				<div id="div-comment-635993" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Tom</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080604-00/?p=22073#comment-635993">
			June 4, 2008 at 12:34 pm</a>		</div>

		<p>Mark Russinovich&#8217;s name is spelled without a &quot;t&quot;, but yes, this does seem like a job for Sysinternals.</p>
<p>I stopped using the second-bestselling web browser when I discovered the third-bestselling web browser. &nbsp;Then I got a Tablet PC and went back to IE because #3 doesn&#8217;t interact well with TIP.</p>
<p>Browser choice may have to change as people continue to code web sites that hit known IE bugs, but if so then I&#8217;m going to switch to #3 instead of #2, just to foil the FOSSers&#8217; dastardly plots. &nbsp;(Example: Wikipedia images hit the &quot;Operation aborted&quot; bug in IE, either out of malice or accident.)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-636043">
				<div id="div-comment-636043" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://mygreenpaste.blogspot.com' rel='external nofollow' class='url'>molotov</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080604-00/?p=22073#comment-636043">
			June 4, 2008 at 1:23 pm</a>		</div>

		<p>GetClipboardOwner() + GetWindowThreadProcessId()</p>
<p>?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-636063">
				<div id="div-comment-636063" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://marksowul.com' rel='external nofollow' class='url'>Mark Sowul</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080604-00/?p=22073#comment-636063">
			June 4, 2008 at 1:36 pm</a>		</div>

		<p>The IE7 Pro extension gives IE much of what you&#8217;d want from #2. &nbsp;Inline find, crash recovery, mouse gestures, super drag-and-drop, etc.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-636083">
				<div id="div-comment-636083" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.morethannothing.com' rel='external nofollow' class='url'>[ICR]</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080604-00/?p=22073#comment-636083">
			June 4, 2008 at 1:51 pm</a>		</div>

		<p>&quot;The IE7 Pro extension gives IE much of what you&#8217;d want from #2. &nbsp;Inline find, crash recovery, mouse gestures, super drag-and-drop, etc.&quot;</p>
<p>And the IETab extension gives #2 much of what you&#8217;d want from IE. Swings and roundabouts.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-636113">
				<div id="div-comment-636113" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Neil</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080604-00/?p=22073#comment-636113">
			June 4, 2008 at 3:56 pm</a>		</div>

		<p>No, GetClipboardOwner tells you who put data on the clipboard (or promised to).</p>
<p>I seem to remember that the same problem for hook functions was fixed for Win32 (probably from being previously mentioned on this blog).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-636123">
				<div id="div-comment-636123" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">vsz</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080604-00/?p=22073#comment-636123">
			June 4, 2008 at 4:30 pm</a>		</div>

		<p>Damn, how many years I&#8217;ve been struggling with Firefox when Remote Desktop was open. I&#8217;ve even posted a bug report for FF. And I reckon they&#8217;ve even fixed it since.</p>
<p>It would be interesting to know why FF was more prone to this problem than other apps though, and how to workaround it.</p>
<p>And to let the critical voice out: Common sense would dictate that no faulty user apps should be able stop such a critical OS feature.</p>
<p>PS: Mark Russinovich is now at MS.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-636193">
				<div id="div-comment-636193" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Hobie-wan</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080604-00/?p=22073#comment-636193">
			June 4, 2008 at 9:05 pm</a>		</div>

		<p>Holy crap! I knew I couldn&#8217;t possibly be mis-typing CTRL+C that often. I thought I was going nuts for quite a while now when pasting wasn&#8217;t working. = /</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-636223">
				<div id="div-comment-636223" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Blake Coverett</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080604-00/?p=22073#comment-636223">
			June 4, 2008 at 10:09 pm</a>		</div>

		<p>The clipboard isn&#8217;t shared per Desktop, it is shared per WindowStation. &nbsp;That distinction very rarely matters in practice, but isn&#8217;t picking nits pretty much required here?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-636243">
				<div id="div-comment-636243" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Dan</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080604-00/?p=22073#comment-636243">
			June 4, 2008 at 10:46 pm</a>		</div>

		<p>I wrote a clipboard tool once, it cached a clipboard history as well as letting you edit, import, and export most of the major clipboard data formats. &nbsp;It&#8217;s quite a fun little tool. &nbsp;I had to deal with the &quot;clipboard chain&quot; so I could subscribe to clipboard events basically. &nbsp;I recall that I had to be careful to revert the chain when I was done or else the entire chain could pretty much break. &nbsp;I don&#8217;t think the app ever crashed so I never got to see what happened (since it&#8217;s .NET I should probably go back and write an unhandled exception handler to fix the chain).</p>
<p>&quot;&#8230; I finally know why Copy-Paste in (the application that I will not name but it&#8217;s the second most popular web browser, the first being the default one from Microsoft) doesn&#8217;t work.&quot;</p>
<p>Works for me. &nbsp;Unfortunately it can be difficult to track down the source of problems, but a good starting point is to see if it happens in safe mode or when using a fresh profile (start the browser with the -p switch to enter the profile manager). &nbsp;Then if it does chances are it&#8217;s a poorly written add-on.</p>
<p>I see lots of people wail on that browser without any hint that they made even minimal effort to track down the source. &nbsp;All you need do is try safe-mode to see if it still happens. &nbsp;If not then, if you&#8217;re willing, you can narrow the problem down by disabling extensions and restarting normally until it goes away. &nbsp;I had a couple problems I was ready to attribute to browser bugs but I tracked them to misbehaving extensions instead (one was a drive-by install by a download manager installer).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-636253">
				<div id="div-comment-636253" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ens</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080604-00/?p=22073#comment-636253">
			June 5, 2008 at 12:59 am</a>		</div>

		<p>On the one hand your irritation is often justified, but on the other hand nobody should feel compelled to memorize and list the entire debugging steps they went through before giving up on it. &nbsp;It&#8217;s not safe to assume nothing was tried just because somebody doesn&#8217;t mention trying things.</p>
<p>On a safe mode, fresh profile, firefox does this to me with, I would estimate, about 2-5% frequency (I only remember this happening from the address bar) &#8212; this has been happening from FF 1.5 stable at latest and still happens in the latest FF 3 beta. &nbsp;Whenever I use firefox I now just hit Ctrl+C twice in a row (well, truth be told, I hit the C key over and over like an overcaffeinated 7-year-old) and then I&#8217;m almost guaranteed to pick up the link.</p>
<p>This might be an artifact of the sort of sites I visit or some weird interaction with another running process, but it&#8217;s not an artifact of extensions or my profile.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-636263">
				<div id="div-comment-636263" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Worf</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080604-00/?p=22073#comment-636263">
			June 5, 2008 at 1:42 am</a>		</div>

		<p>Funny that people have clipboard issues with Firefox &#8211; I abuse it tons (lots of open windows and lots of tabs in each window), and never come across it. And I use copy-paste a lot (when you execute the same sequence of commands over and over again&#8230; and a batchfile won&#8217;t work (remote session, GUI, serial, ssh, telnet&#8230;), you copy and paste to fix). Or when you need to document output.</p>
<p>Strange, really. And my serial terminals do copy-on-select, too&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-636273">
				<div id="div-comment-636273" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Worf</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080604-00/?p=22073#comment-636273">
			June 5, 2008 at 1:45 am</a>		</div>

		<p>Gah. Forgot to mention &#8211; a program that locks the clipboard might be a fun prank to play on someone &#8211; have it remote controlled and it&#8217;ll die when no one&#8217;s around, but work when he shows anyone.</p>
<p>Also, I&#8217;m still on firefox 2&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-636293">
				<div id="div-comment-636293" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">ace</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080604-00/?p=22073#comment-636293">
			June 5, 2008 at 4:25 am</a>		</div>

		<p>Between the readers of this blog there are certainly many better developers than those working on #2. &nbsp;Here&#8217;s how Real developers would handle the issue of #2 mentioned earlier:</p>
<p>First, they would recognize that there is a problem (as the responses here can readily prove). And that it&#8217;s not in the other extensions. More probably spelling checker, something from &quot;don&#8217;t be evil&quot; company, or anything coming from Javascript or whatever.</p>
<p>Then, admitting the existence of the problem, the right way would be:</p>
<p>0) Not killing the bug reports, taking responsibility.</p>
<ul>
<li>Investigating from how many points the Clipboard can be opened.</li>
<li>
<p>Making sure that the state of &quot;being opened&quot; in all recognized cases doesn&#8217;t last any microsecond longer than really, really needed.</p>
</li>
<li>
<p>Hooking directly on OpenClipboard and CloseClipboard discovering which of these sources does it too often, too long, simply wrong or whatever.</p>
</li>
<li>
<p>If needed, redesigning the app so that all calls of given Win32 APIs go through some wrapper functions.</p>
</li>
<li>
<p>This would allow doing something more than</p>
</li>
</ul>
<p>if (!OpenCliboard()) WeDontCareThatUserWantedToCopySomething</p>
<ul>
<li>Having everything going through common points would allow enhancing them so that users with problems would be able to send the logs made at the time of failure.</li>
</ul>
<p>Instead the problem just gets oh so very ignored. &quot;I&#8217;ve spent only a few seconds in the application but I can&#8217;t reproduce. And it&#8217;s so boring fixing real problems when I can spend the time developing totally unneeded new features. Bug doesn&#8217;t exist.&quot;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-636303">
				<div id="div-comment-636303" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Jay Parzych</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080604-00/?p=22073#comment-636303">
			June 5, 2008 at 8:23 am</a>		</div>

		<p>&nbsp; &lt;DllImport(&quot;user32.dll&quot;)&gt; _</p>
<p>Public Function GetOpenClipboardWindow() As IntPtr</p>
<p>&nbsp; &nbsp;End Function</p>
<p>&nbsp;&lt;DllImport(&quot;user32.dll&quot;, SetLastError:=True)&gt; _</p>
<p>&nbsp; &nbsp;Public Function GetWindowThreadProcessId(ByVal hWnd As IntPtr, ByRef lpdwProcessId As Integer) As Integer</p>
<p>&nbsp; &nbsp;End Function</p>
<p>Public Function GetClipboardLocker() As String</p>
<p>&nbsp; &nbsp; &nbsp; &nbsp;Dim hwnd As IntPtr = GetOpenClipboardWindow()</p>
<p>&nbsp; &nbsp; &nbsp; &nbsp;If hwnd &lt;&gt; IntPtr.Zero Then</p>
<p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;Dim processId As Integer</p>
<p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;GetWindowThreadProcessId(hwnd, processId)</p>
<p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;Dim p As Process = Process.GetProcessById(processId)</p>
<p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;GetClipboardLocker = p.Modules(0).FileName</p>
<p>&nbsp; &nbsp; &nbsp; &nbsp;Else</p>
<p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;GetClipboardLocker = String.Empty</p>
<p>&nbsp; &nbsp; &nbsp; &nbsp;End If</p>
<p>&nbsp; &nbsp;End Function</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-636363">
				<div id="div-comment-636363" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Yuri</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080604-00/?p=22073#comment-636363">
			June 5, 2008 at 11:29 am</a>		</div>

		<p>The real problem here is not the badly behaved applications. Any design of a shared resource must take these into account.</p>
<p>The real issue is why the clipboard has open/close semantics in the first place. Surely it only needs get/set semantics?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-636473">
				<div id="div-comment-636473" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://mygreenpaste.blogspot.com' rel='external nofollow' class='url'>molotov</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080604-00/?p=22073#comment-636473">
			June 5, 2008 at 5:39 pm</a>		</div>

		<p>@Neil &#8211; thanks; as in Jay Parzych&#8217;s code, I <em>meant</em> GetOpenClipboardWindow&#8230; ;) (which may not work all the time, either)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-636503">
				<div id="div-comment-636503" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Gabe</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080604-00/?p=22073#comment-636503">
			June 6, 2008 at 12:15 am</a>		</div>

		<p>molotov is correct: GetOpenClipboardWindow does not always work. For one thing, if the clipboard is open with NULL as the owning window handle, you&#8217;re not going to be able to determine the owner. For another thing, it&#8217;s quite possible that you can use any hwnd to open the clipboard, thus making the results unreliable.</p>
<p>Since Windows knows the actual thread/process that opened the clipboard (so it can close it when the process is killed), it should be possible to retrieve it somehow.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-636913">
				<div id="div-comment-636913" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">SuperKoko</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080604-00/?p=22073#comment-636913">
			June 7, 2008 at 9:19 am</a>		</div>

		<p>&quot;The real problem here is not the badly behaved applications. Any design of a shared resource must take these into account.&quot;</p>
<p>Badly behaved applications are much easier with the Windows clipboard than with other shared resources, because the listener queue has to be maintained by applications themselves!</p>
<p>ANY buggy application in the viewer chain may break the chain or even create infinite loops!</p>
<p>Did you follow Raymond&#8217;s links?</p>
<p><a rel="nofollow" target="_new" href="http://blogs.msdn.com/ts/archive/2006/11/16/why-does-my-shared-clipboard-not-work-part-1.aspx" rel="nofollow">http://blogs.msdn.com/ts/archive/2006/11/16/why-does-my-shared-clipboard-not-work-part-1.aspx</a></p>
<p>&quot;The real issue is why the clipboard has open/close semantics in the first place. Surely it only needs get/set semantics?&quot;</p>
<p>This is to allow multiple representations (formats) of the same data and yet ensure atomicity of clipboard operations. Unfortunately, there&#8217;re race conditions.</p>
<p>To make it really work(TM), opening the clipboard while it&#8217;s already open by another application, should block the calling thread (like a mutex).</p>
<p>That&#8217;s what I would&#8217;ve said before reading this thread&#8230; But now that I&#8217;m aware of this issue, I fear that, the &quot;I cannot copy&quot; bug would be mutated in a &quot;Any application becomes totally unresponsive when I copy&quot;.</p>
<p>Eventually it could be possible to provide get/set semantics with a function taking an array of structures. Each structure would contain the required info for one format. I don&#8217;t see any major issue to this approach except that we don&#8217;t get a time machine.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-637053">
				<div id="div-comment-637053" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blogs.codes-sources.com/themit/archive/2008/06/09/quand-votre-pc-ne-veut-plus-utiliser-le-copier-coller.aspx' rel='external nofollow' class='url'>The Mit's Blog</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080604-00/?p=22073#comment-637053">
			June 9, 2008 at 4:25 am</a>		</div>

		<p>En pleine r&#233;daction passionn&#233; et passionnante, j&#8217;ai du subir un bug mais vraiment p&#233;nible &amp;gt;&amp;gt;&amp;gt;</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>