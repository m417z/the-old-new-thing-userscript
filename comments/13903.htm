<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (17)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-835293">
				<div id="div-comment-835293" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Damien</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100527-00/?p=13903#comment-835293">
			May 27, 2010 at 7:10 am</a>		</div>

		<p>Presumably, using the second code snippet you just posted i.e.</p>
<p>&nbsp; &nbsp;SetMenu(hwnd, LoadMenu(pWndClass-&gt;hInstance,</p>
<p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; pWndClass-&gt;lpszMenuName));</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-835313">
				<div id="div-comment-835313" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">TB</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100527-00/?p=13903#comment-835313">
			May 27, 2010 at 7:26 am</a>		</div>

		<p>@Damien</p>
<p>I would assume (assumptions are bad, but I&#39;m lazy atm) that the old menu needs to be destroyed manually, as per the rules Raymond laid out at the beginning of the post.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-835323">
				<div id="div-comment-835323" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Damien</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100527-00/?p=13903#comment-835323">
			May 27, 2010 at 7:48 am</a>		</div>

		<p>@TB &#8211; Doh.</p>
<p>Okay,</p>
<p>DestroyMenu(GetMenu(hwnd));</p>
<p>and then what I posted?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-835333">
				<div id="div-comment-835333" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://adamrosenfield.com' rel='external nofollow' class='url'>Adam Rosenfield</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100527-00/?p=13903#comment-835333">
			May 27, 2010 at 7:54 am</a>		</div>

		<p>Re: Bonus Chatter</p>
<p>I&#39;m guessing that the system keeps around one copy of a pristine, unmodified system menu, which it shares between all windows by default. &nbsp;Then, when someone calls GetSystemMenu(hwnd, FALSE), it copies that system menu, sets the window&#39;s system menu to that copy, and then returns the handle of that copy.</p>
<p>This way, in the common case (where the window doesn&#39;t touch its system menu), you don&#39;t have to bother copying a menu, but in the uncommon case, you do the same amount of work of copying a menu, except this time the copying happens when you call GetSystemMenu() instead of when the window is created. &nbsp;There&#39;s also a marginal amount of extra bookkeeping, but I don&#39;t think that&#39;s relevant.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-835343">
				<div id="div-comment-835343" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">mariete</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100527-00/?p=13903#comment-835343">
			May 27, 2010 at 7:54 am</a>		</div>

		<p>SetMenu(hwnd, LoadMenu(pWndClass-&gt;hInstance,pWndClass-&gt;lpszMenuName));</p>
<p>and restore it:</p>
<p>SetMenu(hwnd, TRUE);</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-835353">
				<div id="div-comment-835353" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Owen S</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100527-00/?p=13903#comment-835353">
			May 27, 2010 at 7:59 am</a>		</div>

		<p>Re: Adam Rosenfield</p>
<p>I&#39;d guess that the system doesn&#39;t do that; the app may call GetSystemMenu(TRUE) and then modify it.</p>
<p>What I would expect is that the menu has a dirty bit, which is set when its modified. GetSystemMenu(TRUE) only replaces &nbsp;a dirty menu.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-835373">
				<div id="div-comment-835373" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.henke37.cjb.net/' rel='external nofollow' class='url'>Henke37</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100527-00/?p=13903#comment-835373">
			May 27, 2010 at 8:27 am</a>		</div>

		<p>Kinda obvious, but I do think there is one more case where the menu will be destroyed for you, if you somehow manage to have one at process termination even when the windows have been destroyed.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-835383">
				<div id="div-comment-835383" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://adamrosenfield.com' rel='external nofollow' class='url'>Adam Rosenfield</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100527-00/?p=13903#comment-835383">
			May 27, 2010 at 8:27 am</a>		</div>

		<p>@Owen S: That&#39;s not possible. &nbsp;If you look at the documentation for GetSystemMenu(), it says that it returns NULL if bRevert is TRUE.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-835423">
				<div id="div-comment-835423" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Mark</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100527-00/?p=13903#comment-835423">
			May 27, 2010 at 11:59 am</a>		</div>

		<p>Henke37: probably not, it will just get lost as the process terminates.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-835433">
				<div id="div-comment-835433" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Henning Makholm</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100527-00/?p=13903#comment-835433">
			May 27, 2010 at 12:19 pm</a>		</div>

		<p>@Damien:</p>
<p>DestroyMenu(GetMenu(hwnd));</p>
<p>destroys the menu while it is still assigned to a window. That sounds like a no-no &#8212; if not by documented rule, then certainly as a matter of sane coding practice in general.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-835453">
				<div id="div-comment-835453" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Nick</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100527-00/?p=13903#comment-835453">
			May 27, 2010 at 7:28 pm</a>		</div>

		<p>Interesting timing on this article since I spent most of today working with the system menu and reading the related documentation. &nbsp;I haven&#39;t worked with the *Menu functions before so I&#39;ve been doing a lot of learning.</p>
<p>One question I ran across if anyone has any ideas: Is there a way to determine the number of items in a menu which is modified before being displayed? &nbsp;I have a program that adds several items to the system menu of all windows (via a global hook DLL I believe). &nbsp;When I call GetMenuItemCount I&#39;m given the number of items before this other program modifies the menu.</p>
<p>I assume this other program must be modifying the system menu when it&#39;s displayed (hence the discrepancy) so I can see the difficulty of determining the item count, but does anyone know of a way? &nbsp;Thanks.</p>
<div class="post">[<i>It sounds like you&#39;re asking for a time machine. &quot;I want to know how many items will be in a menu at some point in the future.&quot; You&#39;re also violating the rule <a href="http://blogs.msdn.com/oldnewthing/archive/2010/04/30/10004931.aspx" rel="nofollow">If it&#39;s not yours, then don&#39;t mess with it without permission from the owner</a> as well as the principle <a href="http://blogs.msdn.com/oldnewthing/archive/2005/06/07/426294.aspx" rel="nofollow">What if two programs did this?</a>. This is definitely not the way to learn how to work with the *Menu functions. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-835463">
				<div id="div-comment-835463" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Wilczek</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100527-00/?p=13903#comment-835463">
			May 28, 2010 at 4:44 am</a>		</div>

		<p>&#8212; OFF &#8212;</p>
<p>Hi all,</p>
<p>I&#39;m sorry to post this question, or rather observation here, but I could not add a comment to the article &quot;If you can detect the difference between an emulator and the real thing, then the emulator has failed&quot;. Recently I have migrated my very old stuff (including some 16 bit apps/programs) on a new computer into a virtual machine. The main OS is Win7 Pro 64 bit and I use Windows Virtual PC. In the virtual machine I&#39;ve installed Win2003 Server Standard (32 bit). Now, if I start for example turbo.exe (TP6.0 :)) in the VM, NTVDM says that &quot;NTVDM has encountered a hard error&quot;. If I run the same app. on the old computer where Win2003 Server Standard (32 bit) is not inside a VM, it starts fine. My question is if Virtual PC is on a 64 bit OS and it&#39;s creating a virtual 32 bit environment for the guest OS and it tries to start a 16 bit app then there is a limitation of the VPC? Also, if I run a 16 bit app. in a VM hosted by a 32 bit OS using Virtual PC and the guest OS is e.g. XP 32 bit, the 16 bit app. starts just fine.</p>
<p>PS: this is not an issue for me, it was just interesting&#8230;</p>
<p>Thanks and regards,</p>
<p>Wilczek</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-835473">
				<div id="div-comment-835473" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Josh</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100527-00/?p=13903#comment-835473">
			May 28, 2010 at 7:07 am</a>		</div>

		<p>According to several support engineers, 16 bit installers should work in XP mode (which is a 32 bit virtualized OS) on 64-bit Windows 7 ( <a rel="nofollow" target="_new" href="http://social.answers.microsoft.com/Forums/en-US/w7programs/thread/64b42c08-dd90-424f-8dfc-adf8fc474351" rel="nofollow">social.answers.microsoft.com/&#8230;/64b42c08-dd90-424f-8dfc-adf8fc474351</a> ). So if they&#39;re correct, the problem shouldn&#39;t be caused by the inability to run in 16 bit mode when the processor and host OS are 64 bit, though that would imply that the VM software would need to emulate 16 bit mode when the guest OS requests it.</p>
<p>Of course, most of the 16 bit apps I&#39;ve wanted to run are old DOS games; DOSBox works well enough for that, and doesn&#39;t depend on the 16 bit processor mode at all (it runs fine on my Vista x64 box). You need to exempt it from DEP checks to run it with full performance (because the fastest method of execution basically involves rewriting the DOS executable code to a buffer, then executing the buffer), but given how little CPU DOS programs depended on, you can usually run them at least as well as they ran on their original hardware. In many case they run better; old games like Master of Magic demanded your conventional memory be nearly unused, while also demanding lots of XMS and EMS memory, which required drivers that occupied the precious conventional memory. When I used to play it on actual machines, I had to manually install it from the CD onto the hard disk, then load up a custom autoexec.bat and config.sys that disabled the CD drive or I wouldn&#39;t have enough memory to load the sound driver and play the game at the same time. DOSBox just pretends to have completely empty conventional memory, and an arbitrary amount of XMS and EMS. Much simpler. :-)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-835553">
				<div id="div-comment-835553" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Nick</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100527-00/?p=13903#comment-835553">
			May 28, 2010 at 12:48 pm</a>		</div>

		<p>[It sounds like you&#39;re asking for a time machine. &#8230; ]</p>
<p>Thanks for the feedback, Raymond. &nbsp;As I said, I didn&#39;t expect it would be easy (or even possible). &nbsp;My only thought was that maybe there was a way to ask the window manager to &quot;pretend&quot; to show the menu (do everything but actually display it), and then get the item count from that. &nbsp;Of course, this may not even be possible (my ignorance is showing by this point I&#39;m sure).</p>
<p>For what it&#39;s worth, the program that manipulates every window&#39;s system menu is out of my control and I&#39;m just trying to work around it. &nbsp;As you suggest, hacking around a poorly implemented system is probably a bad way to try and learn something new, but all too often that seems to be how it goes :/</p>
<p>Thanks again.</p>
<div class="post">[<i>Imagine if there were a &quot;pretend to do it&quot; method. You &quot;pretend to do it&quot; and then do your extra thing. Hey, you now broke the assumption of some other guy who also used the &quot;pretend to do it&quot; technique, because he didn&#39;t get to see your extra thing! (Hence my reference to the &quot;What if two programs did this?&quot; principle.) You are saying &quot;I always want to be the last guy to modify this menu.&quot; And then when two people ask to always be the last guy? -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-835593">
				<div id="div-comment-835593" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Nick</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100527-00/?p=13903#comment-835593">
			May 28, 2010 at 1:10 pm</a>		</div>

		<p>[And then when two people ask to always be the last guy? -Raymond]</p>
<p>Clearly a match of wits must ensue. &nbsp;Perhaps a game of riddles or a quick round of Go between the two programs with the winner getting to be the last guy. That seems fair.</p>
<p>Seriously though, I see your point and appreciate the input.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-835653">
				<div id="div-comment-835653" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Worf</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100527-00/?p=13903#comment-835653">
			May 28, 2010 at 10:48 pm</a>		</div>

		<p>@Wilczek: The problem 8is you&#39;re runnimg 16 bit code on a 64-bit OS. That cannot be done due to the way x64 works. In 32-bit mode, an x64 CPU acts and behaves like a normal IA-32 system. But when a 64-bit OS puts the x64 chip into 64-bit mode, it&#39;s x64 with a 32-bit compatibility layer. 16-bit code is illegal and cannot run.</p>
<p>AMD got rid of all the 16-bit legacy stuff (16-bit, real mode, etc) when designing x64, but they kept the 32-bit protected mode. It&#39;s really two processors in one since an x64 program has a different programming model (more registers!).</p>
<p>DOSBox works because it emulates an x86 CPU (which is why your GHz class machine ends up being barely more than a 500MHz one), which enables it to work on non-x86 as well.</p>
<p>Your options are either to dual-boot with a 32-bit OS version, or hope your really old stuff works with DOSBox, QEMU or bochs. Or other emulator.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-835773">
				<div id="div-comment-835773" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Wilczek</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100527-00/?p=13903#comment-835773">
			May 31, 2010 at 2:58 am</a>		</div>

		<p>&#8212; OFF &#8212;</p>
<p>@Worf</p>
<p>Hi,</p>
<p>Please read my comment again, I am not trying to run 16 bit code on a 64 bit OS. There is a virtual machine running on the 64 bit OS and in the virtual machine there is a 32 bit OS installed. I tried to run the 16 bit app on the 32 bit OS inside the virtual machine.</p>
<p>@Josh:</p>
<p>Thanks for the comment. First I thought that it would work in the virtual machine :), the 2nd option was/is DOSBox.</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>