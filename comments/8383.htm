<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (22)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-964763">
				<div id="div-comment-964763" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">John</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120203-00/?p=8383#comment-964763">
			February 3, 2012 at 7:12 am</a>		</div>

		<p>&lt;i&gt;program logic shouldn&#39;t depend on the error code&lt;/i&gt;</p>
<p>I agree with this in theory, but in practice some errors can be handled more gracefully than others (obviously this depends on the nature of the program).</p>
<div class="post">[<i>You&#39;re right. I didn&#39;t phrase that right. Better would be to say that program logic should be robust to error codes. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-964773">
				<div id="div-comment-964773" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">WndSks</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120203-00/?p=8383#comment-964773">
			February 3, 2012 at 7:12 am</a>		</div>

		<p>I&#39;m not going to complain about the lack of documented GLE values per function since I know that it is a hard problem and you should generally just bail on !success (Except for LogonUser()) but it seems unlikely to me that some floppy (removable media?) code was added to the loader. I assume not ready is never going to happen for a fixed disk so was the loader changed or some code deeper down in the kernel?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-964783">
				<div id="div-comment-964783" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Miles Archer</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120203-00/?p=8383#comment-964783">
			February 3, 2012 at 7:48 am</a>		</div>

		<p>What&#39;s a floppy drive?</p>
<p>(kidding)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-964793">
				<div id="div-comment-964793" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Alex</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120203-00/?p=8383#comment-964793">
			February 3, 2012 at 7:54 am</a>		</div>

		<p>&lt;i&gt;program logic shouldn&#39;t depend on the error code&lt;/i&gt;</p>
<p>Example: an &quot;access denied&quot; error for CreateFile can bring up dialog for UAC elevation and retry the operation.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-964813">
				<div id="div-comment-964813" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">@ Mikes Archer</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120203-00/?p=8383#comment-964813">
			February 3, 2012 at 8:15 am</a>		</div>

		<blockquote><p>
  &gt; What&#39;s a floppy drive?
</p></blockquote>
<p>The feeling you perceive when you see a pretty not-enough-dressed girl but you are too old to raise an exception.</p>
<p>(don&#39;t know if this will ever pass Raymond moderation though :))</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-964823">
				<div id="div-comment-964823" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blogs.msdn.com/arcangelpip_4000_hotmail.com/ProfileUrlRedirect.ashx' rel='external nofollow' class='url'>arcangelpip@hotmail.com</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120203-00/?p=8383#comment-964823">
			February 3, 2012 at 8:31 am</a>		</div>

		<p>@WinSks</p>
<p>I think the reason why they don&#39;t document the error codes really comes down to preventing compatability constraints rather than it being a hard problem. If the list of errors is fully documented, then people will depend on that list, of course if the list changes then all of a sudden we can have an error no longer being caught, or an error can slightly change meaning. The documentation usually points out the important errors, but that is about it. To be honest, I prefer it this way.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-964833">
				<div id="div-comment-964833" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120203-00/?p=8383#comment-964833">
			February 3, 2012 at 8:40 am</a>		</div>

		<p>[You&#39;re right. I didn&#39;t phrase that right. Better would be to say that program logic should be robust to error codes. -Raymond]</p>
<p>It turns out that create file failing because the file already exists is significantly different from other cases. Otherwise, it&#39;s very hard to make distributed transactional systems on top of filesystems.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-964863">
				<div id="div-comment-964863" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">jmthomas</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120203-00/?p=8383#comment-964863">
			February 3, 2012 at 11:12 am</a>		</div>

		<p>The Windows 7 people got it right, but as usual, compatibility trumps almost everything.</p>
<p>Perhaps the original designers justified &quot;not found&quot; vs &quot;not ready&quot; by assuming the OS would give the user a chance to recover from a &quot;door open&quot; error before the program ever got the return code. &nbsp;Then &quot;not found&quot; would truly be &quot;not found&quot;. &nbsp;</p>
<p>If so, there developed a right-hand left-hand problem and something fell through the cracks. &nbsp;When the program started getting the one code to cover both conditions, it had to add the &quot;is the door still open&quot; logic to address a &quot;not found&quot; error.</p>
<p>(This problem may be been present from the beginning of time when two design groups failed to synchronize, or it may have appeared later when to OS decided to degrade the importance of floppy drives because hard drives had become ubiquitous.)</p>
<p>Much better to divide the situation into 2 parts so they can be handled more easily. &nbsp;Trying to discover is the call failed because the door is open or if the wrong diskette was inserted adds significant effort to the program. &nbsp;Kudos for the Win7 people trying make life easier for applications!</p>
<p>(As one who wrote operating system software for mainframes, we had axioms &quot;there can never be too much information in an error code&quot; and &quot;group codes for related reasons and sources together to allow quick filtering&quot;. &nbsp;So much of what we learned to hard way never made it into the heads of PC developers.)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-964873">
				<div id="div-comment-964873" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">640k</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120203-00/?p=8383#comment-964873">
			February 3, 2012 at 11:27 am</a>		</div>

		<p>@HiTech: &quot;there can never be too much information in an error code&quot;</p>
<p>Then you end up with:</p>
<ol>
<li>
<p>Error messages which scares users away</p>
</li>
<li>
<p>Over verbose logfiles which fill up the disk</p>
</li>
</ol>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-964883">
				<div id="div-comment-964883" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120203-00/?p=8383#comment-964883">
			February 3, 2012 at 11:35 am</a>		</div>

		<p>@640k: No, it shouldn&#39;t. Certain Filesystem API calls are supposed to provide the A and D parts. A developer who cannot construct a simple version of C and I from A deserves to get fired.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-964893">
				<div id="div-comment-964893" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Anonymous Coward Anonymous Coward</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120203-00/?p=8383#comment-964893">
			February 3, 2012 at 11:45 am</a>		</div>

		<p>This highlights (again) that the failure modes of a function are just as much part of the interface as its parameters and return value. The Java designers got it exactly right.</p>
<div class="post">[<i>If a function can fail in more than one way, and both failures apply, which one do you report? Does Java specify that if, say, Access Denied and Invalid Parameter both apply (say because you don&#39;t have access to the first parameter, and the second parameter is invalid), then one or the other must be raised in preference to the other? (Honest question.) -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-964923">
				<div id="div-comment-964923" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Malcolm</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120203-00/?p=8383#comment-964923">
			February 3, 2012 at 1:11 pm</a>		</div>

		<p>VMS only ever displays a max of three underlying layers.</p>
<p>And it was very handy in a way, since you were getting the error code each subsystem returned.</p>
<p>$ open /read infile foo.bar</p>
<p>%DCL-E-OPENIN, error opening file FOO.BAR</p>
<p>-RMS-E-FNF, file not found</p>
<p>-SYSTEM-W-NOSUCHFILE, no such file</p>
<p>$</p>
<p>If you wanted something more like English, you could turn off the Facility, Severity and Identity, and you get the perhaps less intimidating to the end user:</p>
<p>$ open /read infile foo.bar</p>
<p>Error opening file FOO.BAR</p>
<p>File not found</p>
<p>No such file</p>
<p>$</p>
<p>I still work with VMS, but not very regularly these days ;)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-964853">
				<div id="div-comment-964853" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">640k</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120203-00/?p=8383#comment-964853">
			February 3, 2012 at 9:50 am</a>		</div>

		<p>It *should* be hard to layer ACID atop of non-ACID.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-964903">
				<div id="div-comment-964903" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">dave</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120203-00/?p=8383#comment-964903">
			February 3, 2012 at 11:57 am</a>		</div>

		<p>&gt;I think the reason why they don&#39;t document the error codes </p>
<p>&gt;really comes down to preventing compatability constraints </p>
<p>&gt;rather than it being a hard problem.</p>
<p>If I write a function that sits on top of any Windows API, and which passes the same error code back to my caller, all I can tell you about what it returns is &quot;errors I explicitly coded, plus anything the underlying OS returns, including any lower layer components that may be invented tomorrow&quot;. &nbsp;And so recursively down the stack.</p>
<p>Ultimately, if you plug in a new device, that has the potential to change the error returns from my code.</p>
<p>The alternative, of course, is that I *don&#39;t* return the underlying error code directly. &nbsp;If I just return my own error code and discard what I got from the lower layers, that&#39;s hiding potentially useful information. If I return my own error code and also what I got from the lower layers, that gets unmanageable after two or three layers (been there, done that: VAX/VMS).</p>
<p>%MYPROG-E-NOPE, cannot open file FOO.BAR</p>
<p>-SOMELIB-E-RMSIO, error from RMS</p>
<p>-OTHERLIB-E-NOSUCH, no such file</p>
<p>-RMS-E-FNF, file not found</p>
<p>-SYSTEM-E-TIMEOUT, timeout</p>
<p>So, I think &quot;hard problem&quot; is correct.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-964953">
				<div id="div-comment-964953" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Midhat</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120203-00/?p=8383#comment-964953">
			February 4, 2012 at 5:30 am</a>		</div>

		<p>WHY is there a floppy drive and windows 7 on the same computer?????</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-964973">
				<div id="div-comment-964973" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blogs.msdn.com/arcangelpip_4000_hotmail.com/ProfileUrlRedirect.ashx' rel='external nofollow' class='url'>arcangelpip@hotmail.com</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120203-00/?p=8383#comment-964973">
			February 4, 2012 at 8:18 am</a>		</div>

		<p>@Midhat</p>
<p>My mother&#39;s computer has one, and it is running Windows 7.</p>
<p>If the hardware is older and the OS was upgraded, then it may be less likely than you think that a computer running Windows 7 has one.</p>
<p>Then again, it doesn&#39;t get used for more than just occasionally making funny noises.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-964983">
				<div id="div-comment-964983" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blogs.msdn.com/arcangelpip_4000_hotmail.com/ProfileUrlRedirect.ashx' rel='external nofollow' class='url'>arcangelpip@hotmail.com</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120203-00/?p=8383#comment-964983">
			February 4, 2012 at 8:18 am</a>		</div>

		<p>@Midhat</p>
<p>My mother&#39;s computer has one, and it is running Windows 7.</p>
<p>If the hardware is older and the OS was upgraded, then it may be less likely than you think that a computer running Windows 7 has one.</p>
<p>Then again, it doesn&#39;t get used for more than just occasionally making funny noises.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-965043">
				<div id="div-comment-965043" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120203-00/?p=8383#comment-965043">
			February 5, 2012 at 1:12 pm</a>		</div>

		<p>I&#39;ve seen what icon Windows Vista uses for 5¼&#39;&#39; floppy. It looks identical to the Win95 version (and probably is).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-alegrigoriev even thread-even depth-1" id="comment-965223">
				<div id="div-comment-965223" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/alegr1' rel='external nofollow' class='url'>alegr1</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120203-00/?p=8383#comment-965223">
			February 6, 2012 at 11:31 am</a>		</div>

		<blockquote><p>
  WHY is there a floppy drive and windows 7 on the same computer?????
</p></blockquote>
<p>A better question is why &quot;File Save&quot; icons still use the image of a floppy. Mictosoft, beinf famous for running usability tests, should have noticed that the young users would have no idea what that means.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-965233">
				<div id="div-comment-965233" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Michael Grier [MSFT]</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120203-00/?p=8383#comment-965233">
			February 6, 2012 at 11:37 am</a>		</div>

		<p>This is yet another smallish difficult problem to solve. &nbsp;My personal take is the following:</p>
<p>Design the API so that non-success results are not errors/exceptional. &nbsp;Then leave errors as clearly being undocumented and not having backwards compatibility constraints.</p>
<p>This is difficult. &nbsp;I did it for a family of internal APIs and while it was very successful, it still raises eyebrows. &nbsp;People don&#39;t get why you don&#39;t just check for ERROR_FILE_NOT_FOUND or catch the FileNotFound exception.</p>
<p>Part of the difficulty is that if there are multiple such non-success results, you need to differentiate them using some kind of codes/flags which ends up looking a lot like checking for specific error codes.</p>
<p>Searching an in-memory collection is a great case where returning NULL is a better result than returning ERROR_FILE_NOT_FOUND or throwing an exception.</p>
<p>One unmentioned difficulty here is that while CreateFileW() may return ERROR_FILE_NOT_FOUND in the case that the named directory does exist but the instance file does not, it&#39;s actually not as trivially guaranteed that that is the only case where ERROR_FILE_NOT_FOUND is returned. &nbsp;From my knowledge of the source code I&#39;m not aware of any other cases but you could imagine a filter driver or some using some clever technique to hijack the API (for good cause mind you! &nbsp;These kinds of situations often start with good intentions&#8230;) but they call LoadLibrary() perhaps and next thing you know you&#39;re getting ERROR_FILE_NOT_FOUND for some reason other than that the file isn&#39;t present in the directory.</p>
<p>Given the movement towards &quot;developer productivity&quot;, I am curious if such design issues will ever be addressed in any future computing platform and then whether this provides some kind of quantum limit to the correctness we can achieve if it is not. &nbsp;It&#39;s hard to imagine say 50 years from now deciding to &quot;fix&quot; this issue throughout the gobs and gobs of legacy code we&#39;ll have.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-965263">
				<div id="div-comment-965263" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Myria</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120203-00/?p=8383#comment-965263">
			February 6, 2012 at 1:10 pm</a>		</div>

		<p>Is it safe to rely upon APIs returning error codes like ERROR_INSUFFICIENT_BUFFER and ERROR_MORE_DATA as a means of detecting the size of allocation you need to pass?</p>
<div class="post">[<i>Does the documentation say that these error codes can be used for these specific purposes? -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-965413">
				<div id="div-comment-965413" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Jeroen Frijters</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120203-00/?p=8383#comment-965413">
			February 7, 2012 at 7:22 am</a>		</div>

		<p>[If a function can fail in more than one way, and both failures apply, which one do you report? Does Java specify that if, say, Access Denied and Invalid Parameter both apply (say because you don&#39;t have access to the first parameter, and the second parameter is invalid), then one or the other must be raised in preference to the other? (Honest question.) -Raymond]</p>
<p>The documentation isn&#39;t always great, but they have something called the Technology Compatibility Kit (TCK) that you have to pass to be able to be call your implementation Java &#8482; and it does enforce these error ordering issues.</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>