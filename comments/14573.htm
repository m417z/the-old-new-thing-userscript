<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (10)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-820093">
				<div id="div-comment-820093" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Tom</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100317-00/?p=14573#comment-820093">
			March 17, 2010 at 11:16 am</a>		</div>

		<p>Man, does this topic have legs!</p>
<p>My questions below might violate some implied ground rules, so feel free to delete or ignore this comment.</p>
<p>Raymond: do you have any thoughts on how prevalent these load-time optimizations might be? &nbsp;For example, are these techniques common when building the Windows Shell?</p>
<p>I know that this is not really a .NET blog, but a thought crosses my mind &#8212; would these techniques work on assemblies? &nbsp;My gut feeling is that they wouldn&#8217;t since the functions exported by assemblies must first be JIT-ed, but maybe these techniques could be applied to assemblies that have been pre-translated (ngen).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-820103">
				<div id="div-comment-820103" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Jared</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100317-00/?p=14573#comment-820103">
			March 17, 2010 at 1:56 pm</a>		</div>

		<p>I may be missing something, but this seems like a <em>trivia</em> boost. &nbsp;The number of entries in a dll should be relatively small, and in an ordered table.</p>
<p>When a dll has hundreds of entry points, perhaps it&#8217;s getting too big?</p>
<p>Maybe the real performance problem is an application having to loading a zillion bytes of dlls when only a few percent of the loaded coded is actually referenced (or potentially usable)?</p>
<div class=post>[<i>The export table is sorted by ordinal number, which isn&#8217;t much help when you&#8217;re looking by name. (And may I suggest reading up on &#8220;demand paging.&#8221;) -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-820113">
				<div id="div-comment-820113" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.doogal.co.uk' rel='external nofollow' class='url'>Doogal</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100317-00/?p=14573#comment-820113">
			March 17, 2010 at 2:24 pm</a>		</div>

		<p>I also wonder what kind of performance boost this would provide. Is it just a throwback to ye olde days where this would make a difference or is it still worth it? And if it&#8217;s the latter, what are the steps required by searching the export table that make it slow?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-820123">
				<div id="div-comment-820123" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Adrian</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100317-00/?p=14573#comment-820123">
			March 17, 2010 at 2:29 pm</a>		</div>

		<p>@Tom: &nbsp;I just did a dumpbin /exports of several common system modules like user32.dll. &nbsp;There you can see that those DLLs export functions by name and by ordinal.</p>
<p>Until a few minutes ago, I thought hints and ordinals were the same things. (I know I&#8217;ve read other articles that implied that and even used the terms interchangeably.) &nbsp;But dumpbin shows different numbers for ordinal and hint. &nbsp;So now I&#8217;m confused again.</p>
<p>My best guess is that the ordinal is just a 32-bit number that, if assigned to an exported function, can be used in place of the name of the function&#8211;comparing numbers is generally faster than comparing strings. &nbsp;The hint, then, would be the index into the export name table, which is possibly specific to the version of the DLL.</p>
<p>To use ordinals, I know you have to do extra work&#8211;specifically, create a .DEF file that specifies the ordinals and optionally tells the linker to discard the name. &nbsp;Does hinting happen automatically?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-820143">
				<div id="div-comment-820143" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Cheong</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100317-00/?p=14573#comment-820143">
			March 17, 2010 at 5:42 pm</a>		</div>

		<p>I&#8217;ve been used to bind function to the index back in the Win 3.1 days.</p>
<p>The reason is because TPW 1.5 online help say that this kind of bind is faster (and it is). Also my primary use if the API involved (WinExec()) is for calling up winmine.exe in the CS lesson after assignment is done. I don&#8217;t have to consider maintainance afterwards. :P</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-820163">
				<div id="div-comment-820163" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.pagetable.com/' rel='external nofollow' class='url'>Myria</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100317-00/?p=14573#comment-820163">
			March 17, 2010 at 8:41 pm</a>		</div>

		<p>Are exports&#8217; names always in lexicographical order, so that when hint lookup fails, it can do a binary search by name?</p>
<p>Regarding the questions above, the hints come from the import library you statically linked against.</p>
<p>Since the ordinal numbers differ among Windows versions, this hinting ultimately isn&#8217;t very useful.</p>
<p>Some ordinals don&#8217;t change between versions, such as the older functions of ws2_32.dll. &nbsp;This is because to this day, their import libraries still use ordinal-only lookup.</p>
<div class=post>[<i>Export names are not always in lexicographical order. If you explicitly assign ordinals, then they appear in the order you specified. <a href="http://blogs.msdn.com/oldnewthing/archive/2006/07/18/669668.aspx" rel="nofollow">I discussed this a few years ago</a>.-Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-820173">
				<div id="div-comment-820173" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Drak</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100317-00/?p=14573#comment-820173">
			March 17, 2010 at 11:39 pm</a>		</div>

		<p>@Myria:</p>
<p>I&#8217;d imagine that if you imported one of your own DLLs the ordinals wouldn&#8217;t change between windows versions.</p>
<p>(Disclaimer: I only do .Net programming for Windows so what I just said might be utter rubbish)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-820183">
				<div id="div-comment-820183" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.pelock.com' rel='external nofollow' class='url'>Bartosz W&#243;jcik</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100317-00/?p=14573#comment-820183">
			March 18, 2010 at 4:17 am</a>		</div>

		<p>In my executable protector loader code I&#8217;m also using an additional hint which are the first letters of the API (skipping anything else A..Z like _ @ etc.) so the export table search loop is even faster, import table resolving is the biggest issue in my software (in terms of speed, scanning an export table of 20MB dll file with &gt;50 chars in the export names takes sooo long), but there are some things that can be done to speed it up, eg. when you have a DLL loaded you can split a single IMAGE_IMPORT_DESCRIPTOR resolving across multiple threads (for the PE EXE files of course). The best solution to speed up import table resolving would be using only ordinals, blazing fast ;)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-820193">
				<div id="div-comment-820193" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Random832</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100317-00/?p=14573#comment-820193">
			March 18, 2010 at 7:08 am</a>		</div>

		<p>If it fails to find it at the slot specified in the hint, does it search nearby positions first? (i.e. the hint says 42, it&#8217;s not there, does it search 40 41 43 44 etc, or does it start from 1?)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-820303">
				<div id="div-comment-820303" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Kyle</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100317-00/?p=14573#comment-820303">
			March 18, 2010 at 10:39 am</a>		</div>

		<blockquote><p>
  &gt;&gt;
</p></blockquote>
<p>Maybe the real performance problem is an application having to loading a zillion bytes of dlls when only a few percent of the loaded coded is actually referenced (or potentially usable)?</p>
<blockquote><p>
  &gt;&gt;
</p></blockquote>
<p>Actually, executable modules aren&#8217;t loaded into memory wholesale, but rather are mapped into memory through the use of sections. &nbsp;In essence, Windows kind of treats them as a sort of read-only page file, loading pages of the executable at a time. &nbsp;This reduces load times and also frees up physical memory for other use.</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>