<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (16)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-893253">
				<div id="div-comment-893253" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Alex Grigoriev</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110204-00/?p=11583#comment-893253">
			February 4, 2011 at 7:26 am</a>		</div>

		<ol>
<li>Write some stuff in MIDL language.</li>
<li>
<p>Issue RPC call.</p>
</li>
</ol>
<p>&#8230;</p>
<ol>
<li>
<p>Profit!</p>
</li>
<li>
<p>Go to ATM machine and enter your PIN number&#8230;</p>
</li>
</ol>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-893283">
				<div id="div-comment-893283" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Adam Rosenfield</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110204-00/?p=11583#comment-893283">
			February 4, 2011 at 7:55 am</a>		</div>

		<p>@Alex: I was going to mumble something about RAS syndrome, but you put it way better than I possibly could have.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-893313">
				<div id="div-comment-893313" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Tanveer Badar</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110204-00/?p=11583#comment-893313">
			February 4, 2011 at 8:18 am</a>		</div>

		<p>Do you crucify the people who utter things like &quot;garbage collection&quot;, &quot;managed memory&quot; and CLR?</p>
<p>P.S.: Lack of comments is astounding.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-893323">
				<div id="div-comment-893323" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Mathieu Garstecki</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110204-00/?p=11583#comment-893323">
			February 4, 2011 at 8:48 am</a>		</div>

		<p>@Tanveer: There must be a nitpickers&#39; convention somewhere this week.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-jader3rd even thread-even depth-1" id="comment-893333">
				<div id="div-comment-893333" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/jader3rd' rel='external nofollow' class='url'>jader3rd</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110204-00/?p=11583#comment-893333">
			February 4, 2011 at 9:02 am</a>		</div>

		<p>I wish there was an FxCop rule which forbid boolean parameters. They virtually never make sense to someone reading the code that calls the method.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-893343">
				<div id="div-comment-893343" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Mason Wheeler</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110204-00/?p=11583#comment-893343">
			February 4, 2011 at 9:48 am</a>		</div>

		<p>&quot;fAbortÂ­Call&quot;? &nbsp;I don&#39;t think I&#39;ve ever seen an f prepended to a boolean parameter before. &nbsp;What does it stand for?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-893373">
				<div id="div-comment-893373" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Paul M. Parks</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110204-00/?p=11583#comment-893373">
			February 4, 2011 at 10:03 am</a>		</div>

		<p>@Mason: &quot;Flag&quot;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-893383">
				<div id="div-comment-893383" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110204-00/?p=11583#comment-893383">
			February 4, 2011 at 10:10 am</a>		</div>

		<p>FYI, Garbage collection doesn&#39;t help here as garbage collection can&#39;t see pointers in kernel.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-893423">
				<div id="div-comment-893423" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Antonio Rodr&#237;guez</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110204-00/?p=11583#comment-893423">
			February 4, 2011 at 11:43 am</a>		</div>

		<p>@Joshua: Then simply rewrite the whole kernel in managed code&#8230; Ah, yes, I forgot this is Windows, not Singularity&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-893453">
				<div id="div-comment-893453" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Mr Pickles</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110204-00/?p=11583#comment-893453">
			February 4, 2011 at 3:45 pm</a>		</div>

		<p>It&#39;s about time Microsoft did something about this.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-893463">
				<div id="div-comment-893463" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110204-00/?p=11583#comment-893463">
			February 4, 2011 at 4:10 pm</a>		</div>

		<p>@Mr. Pickles: no, it isn&#39;t.</p>
<p>These problems are normal to cancellable async. I/O. If you can&#39;t stomach it, don&#39;t use it. Memory&#39;s cheap. Use threads for cancellable sync. I/O.</p>
<p>I know UNIX has another solution involving select(), but that&#39;s its own headache until you get it right.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-893493">
				<div id="div-comment-893493" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Gechurch</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110204-00/?p=11583#comment-893493">
			February 4, 2011 at 11:26 pm</a>		</div>

		<p>Unbelievable! I&#39;m used to seeing customers on Raymond&#39;s blog that miss something obvious, or do something dumb. But this customer has been told the problem in their code (they aren&#39;t waiting until the async call is cancelled before cleaning it up), then they go and changed the fixed code to have a timeout! And then they re-open a case with Microsoft!</p>
<p>&quot;Hey Microsoft, you know how we had that bug where we weren&#39;t waiting for the async event to cancel? Well your fixed worked for a while, but now that we&#39;ve rewritten the code to only wait five seconds and then to clean up even if the call hasn&#39;t been cancelled the bug has come back. What could possibly be causing it?&quot;.</p>
<p>Duh!</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-893593">
				<div id="div-comment-893593" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Simon</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110204-00/?p=11583#comment-893593">
			February 6, 2011 at 4:46 pm</a>		</div>

		<p>@jader3rd &#8211; absolutely correct. Valid for setting a property (assuming a language without native property syntax), but I&#39;m even now in the middle of cleaning up some code featuring object constructors with up to 4 boolean parameters. Not exactly readable &#8211; I want to replace them with enums, assuming the settings cannot be removed entirely.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-893623">
				<div id="div-comment-893623" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Cheong</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110204-00/?p=11583#comment-893623">
			February 6, 2011 at 6:36 pm</a>		</div>

		<p>@Joshua: I&#39;m always hesitate to choose between 1) having asynchronous I/O; and 2) using synchronous I/O on a pool of threads. Is there any guideline on choosing which approach to use?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-893703">
				<div id="div-comment-893703" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Alex Grigoriev</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110204-00/?p=11583#comment-893703">
			February 7, 2011 at 3:32 pm</a>		</div>

		<p>@Cheong:</p>
<p>If a file handle is opened for synchronous IO (no OVERLAPPED flag), pool of threads is pointless, because only one IO can be in progress on such a handle.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-893723">
				<div id="div-comment-893723" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Cheong</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110204-00/?p=11583#comment-893723">
			February 7, 2011 at 5:07 pm</a>		</div>

		<p>@Alex: My question comparing between pool of thread (or perheps better saying using background thread instead) is for the sake of responsiveness.</p>
<p>But by what you said the result is clear.</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>