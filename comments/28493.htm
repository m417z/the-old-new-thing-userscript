<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (19)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-459463">
				<div id="div-comment-459463" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Jason</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070108-02/?p=28493#comment-459463">
			January 8, 2007 at 11:10 am</a>		</div>

		<p>Why doesn&#8217;t the property sheet manager create a copy of the entire DLGTEMPLATE/DLGTEMPLATEEX structure, set the style there, and call CreateDialogIndirectParam? (If the caller passed in an actual DLGTEMPLATE pointer to CreatePropertySheetPage, you would have to walk the struct to determine the length)</p>
<p>Also, why isn&#8217;t the WS_VISIBLE style bit needed/enforced?</p>
<div class="post">[<i>You can figure this out for yourself. Write (or pretend to write) the code that edits the template. Repeat with the code that copies the template (walking it if necessary), calls CreatedialogIndirectParam, and then frees the template. Compare how much time it took, the impact on the product schedule, and the memory footprint. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-459473">
				<div id="div-comment-459473" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Stu</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070108-02/?p=28493#comment-459473">
			January 8, 2007 at 11:34 am</a>		</div>

		<p>Proposal 4: Ship a tool with the beta SDK that could set or remove the flag on a pre-existing dialog template.</p>
<p>Upside: No ugly hacks that become obsolete and bothersome in the relatively near future.</p>
<p>Downside: Developers have to run the tool each time they edit their dialog.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-459483">
				<div id="div-comment-459483" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">GregM</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070108-02/?p=28493#comment-459483">
			January 8, 2007 at 11:42 am</a>		</div>

		<p>Wow, 10 years developing Windows software and I&#8217;ve never heard of DS_CONTROL before. &nbsp;Thanks a lot for this very helpful post!</p>
<p>I just checked my resources file, and out of 132 dialogs that are WS_CHILD dialogs, the only two dialogs that have this style are a file dialog addition, and a copy of that same dialog. &nbsp;I&#8217;m pretty sure that resource originally came from CodeProject or something like that. &nbsp;So, none of our property pages have this style, including the ones created using the &quot;new property page&quot; option in the resource editor in VC5 through 2003. &nbsp;I guess we need to make sure that someone on the VS team sees this post too if this hasn&#8217;t been added for 2005.</p>
<p>Raymond, I&#8217;m assuming that &quot;For the record, here are the style requirements for property sheets&quot; means &quot;the style requirements for dialog resources used as pages of property sheets&quot;.</p>
<p>I&#8217;ve passed on the link to the previous blog post about DS_CONTROL to another developer that has been strugging with getting tabbing working correctly in a dialog that uses child dialogs. &nbsp;None of the children use DS_CONTROL, which is probably why we&#8217;ve had to do everything ourselves. &nbsp;We thought there should have been a way to get Windows to do this for us, but we couldn&#8217;t find it.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-459503">
				<div id="div-comment-459503" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Jason</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070108-02/?p=28493#comment-459503">
			January 8, 2007 at 12:04 pm</a>		</div>

		<p>&quot;[You can figure this out for yourself. Write (or pretend to write) the code that edits the template. Repeat with the code that copies the template (walking it if necessary), calls CreatedialogIndirectParam, and then frees the template. Compare how much time it took, the impact on the product schedule, and the memory footprint. -Raymond&quot;</p>
<p>:) We have had to do this &#8212; older Windows Mobile Smartphone devices (2003) did not support PropertySheet at all, so we implemented a substitute call (via #ifdefs) that has a tab-less PropertySheet. Our version does just this, and it works OK without any exceptions being thrown. Of course, it works against our code only and is not tested against all types of DLGTEMPLATEs, but the code in question is under 100 lines of code.</p>
<p>This just seems easier than the exception handling approach you mentioned; I was wondering if there is a historical issue with legacy applications, such as an application that needed their own template in memory, perhaps when writing a custom Dialog class?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-larryosterman even thread-even depth-1" id="comment-459513">
				<div id="div-comment-459513" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Larry+Osterman+%5BMSFT%5D' rel='external nofollow' class='url'>Larry Osterman [MSFT]</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070108-02/?p=28493#comment-459513">
			January 8, 2007 at 12:20 pm</a>		</div>

		<p>OMG. &nbsp;That&#8217;s where that behavior came from&#8230;</p>
<p>It turns out that the PlaySound API relied on that behavior when playing sounds on 64bit machines.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-459523">
				<div id="div-comment-459523" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">GregM</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070108-02/?p=28493#comment-459523">
			January 8, 2007 at 12:25 pm</a>		</div>

		<p>Wow, the only style from that list of 7 that they all had was WS_CHILD.</p>
<p>We also have the DS_FIXEDSYS, WS_DISABLED, and WS_CAPTION. &nbsp;Should those really not be specified? &nbsp;I assume that DS_FIXEDSYS is ok in combination with DS_SETFONT. &nbsp;Also, if WS_CAPTION isn&#8217;t specified, then the dialog box editor removes the CAPTION statement from the resource, so there&#8217;s no tab title. &nbsp;I assume it&#8217;s OK to leave that style. &nbsp;What about WS_DISABLED?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-459533">
				<div id="div-comment-459533" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Coleman</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070108-02/?p=28493#comment-459533">
			January 8, 2007 at 12:56 pm</a>		</div>

		<p>&quot;We thought there should have been a way to get Windows to do this for us, but we couldn&#8217;t find it.&quot; &nbsp;Sigh. &nbsp;IMO, searching the MSDN for these types of &quot;pearls&quot; is a daunting task, which is one of the reasons I read this blog everyday, and also why I&#8217;ve pre-ordered the book. &nbsp;BTW, Amazon says the book won&#8217;t ship until March now. &nbsp;</p>
<p>Unless I&#8217;m missing something, the DS_CONTROL isn&#8217;t documented in the VS2005 MSDN Library for the STYLE statement. &nbsp;Through another search for &quot;DS_CONTROL&quot; I did find it under the &quot;About Dialog Boxes&quot; article. &nbsp;</p>
<p>Shouldn&#8217;t this be documented under the PropertySheet documentation somewhere? &nbsp;It would certainly prevent the continuation of using the wrong styles for property pages. &nbsp; &nbsp;</p>
<p>I&#8217;ve submitted a support/feedback request (ID 250615) to hopefully get this put into the MSDN. &nbsp;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-459553">
				<div id="div-comment-459553" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">A</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070108-02/?p=28493#comment-459553">
			January 8, 2007 at 1:10 pm</a>		</div>

		<p>&#8220;Compare how much time it took,&#8221;</p>
<p>Convincing the kernel team to implement a hack in UnhandledExceptionFilter just to make property sheets work didn&#8217;t take time?</p>
<p>&#8220;and the memory footprint.&#8221;</p>
<p>If I understand correctly, the overall memory footprint would actually be lower. Each time this hack kicks in and changes a page&#8217;s protection from READONLY to READWRITE, 4 KB of memory is leaked. If it made a copy of the template on the heap, more memory might be used during the creation of the dialog, but in the end no memory would be leaked.</p>
<div class=post>[<i>There was no &#8220;convincing&#8221; necessary. That code existed in Windows NT already. The property sheet code just took advantage of what was already there. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-459593">
				<div id="div-comment-459593" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">B</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070108-02/?p=28493#comment-459593">
			January 8, 2007 at 11:38 pm</a>		</div>

		<p>&quot;Convincing the kernel team to implement a hack in UnhandledExceptionFilter just to make property sheets work didn&#8217;t take time?&quot;</p>
<p>I guess the property sheet manager maps the dialog template as copy-on-write.</p>
<p>In a way, this is a bit like when relocations need to be applied to executable code &#8211; map the whole image is read only, copy on write. Then as you change it, the pages you change will get writeable copies generated on the fly.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-459663">
				<div id="div-comment-459663" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Mike Swaim</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070108-02/?p=28493#comment-459663">
			January 9, 2007 at 11:14 am</a>		</div>

		<p>[Quote]I&#8217;ve submitted a support/feedback request (ID 250615) to hopefully get this put into the MSDN.[Quote]</p>
<p>But you didn&#8217;t vote on it. You can vote on your own items, you know.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-patriotb even thread-even depth-1" id="comment-459753">
				<div id="div-comment-459753" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">PatriotB</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070108-02/?p=28493#comment-459753">
			January 9, 2007 at 12:23 pm</a>		</div>

		<p>There&#8217;s often a gap between new OS features and tools support for those features. &nbsp;For example, VS 2005 doesn&#8217;t support using Vista PNG icons in your resources. &nbsp;Even the just-released SP1 doesn&#8217;t fix this. :-(</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-459803">
				<div id="div-comment-459803" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Coleman</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070108-02/?p=28493#comment-459803">
			January 9, 2007 at 3:21 pm</a>		</div>

		<p>@Mike: &nbsp;Yikes. &nbsp;It looks like no body votes for their own items. &nbsp;FWIW, I just voted for mine. &nbsp;Truth be told, I was ignoring the voting system altogether. &nbsp;</p>
<p>On another note, my copy of the book shipped from Amazon yesterday and should be here on the 11th. &nbsp;</p>
<p>@PatriotB: &nbsp;This isn&#8217;t a new OS feature. &nbsp;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-459823">
				<div id="div-comment-459823" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blogs.msdn.com/larryosterman/archive/2007/01/09/sometimes-you-find-the-answers-to-questions-you-didn-t-even-know-you-were-asking.aspx' rel='external nofollow' class='url'>Larry Osterman's WebLog</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070108-02/?p=28493#comment-459823">
			January 9, 2007 at 4:34 pm</a>		</div>

		<p>Yesterday&#8217;s post by Raymond struck a chord when I read it. He discussed how the property sheets wrote</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-460523">
				<div id="div-comment-460523" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Paul Woodward</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070108-02/?p=28493#comment-460523">
			January 12, 2007 at 6:29 pm</a>		</div>

		<p>I am confused. &nbsp;</p>
<p>My understanding: Applications write to their own resources, not just the property sheet manager mentioned here. &nbsp;Since the resources are not initially writable, writing to them causes a fault. &nbsp;UnhandledExceptionFilter() looks at the fault, changes the memory to writable, and returns to the faulting instruction.</p>
<p>My confusion: All the callers up the chain have to know about this. &nbsp;If some unsuspecting caller uses Structured Exception Handling, it all fails. &nbsp;Also, if you implement a debugger you have to handle this case because UnhandledExceptionFilter is not called when running under a debugger. &nbsp;</p>
<p>I think making resources writable from the getgo would be more robust. &nbsp;I&#8217;m sure I&#8217;m missing something. &nbsp;What is the value of loading them as read only if you want writes to succeed?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-461003">
				<div id="div-comment-461003" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">GregM</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070108-02/?p=28493#comment-461003">
			January 15, 2007 at 11:50 pm</a>		</div>

		<p>Paul, Raymond never said anything about it being the unhandled exception filter that does this. &nbsp;He said that the kernel handled the exception. &nbsp;Someone else threw in the unhandled exception filter bit. &nbsp;Also, as far as I know, it&#8217;s very rare for an application to have to write to its own resources. &nbsp;I&#8217;ve never heard of anything having to do it before.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-461463">
				<div id="div-comment-461463" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Norman Diamond</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070108-02/?p=28493#comment-461463">
			January 16, 2007 at 8:47 pm</a>		</div>

		<p>Monday, January 15, 2007 11:50 PM by GregM </p>
<p>&gt; He said that the kernel handled the exception.</p>
<p>You&#8217;re right, he said that, and now I&#8217;m confused again. &nbsp;Larry Osterman had also posted that the kernel decided whether the read-only pages should be changed to read-write, but later said that the decision was really made in user-mode. &nbsp;Now the vote looks like about 1.5 to 0.5 in favour of being done by the kernel, and I still wonder why it&#8217;s the kernel.</p>
<p>&gt;&gt; The kernel catches this exception and</p>
<p>&gt;&gt; write-enables the page, then returns</p>
<p>&gt;&gt; EXCEPTION_CONTINUE_EXECUTION to say, &#8220;I</p>
<p>&gt;&gt; fixed the problem, try it again.&#8221;</p>
<div class="post">[<i>You&#8217;re reading too much into that one word. I&#8217;m using the word &#8220;kernel&#8221; loose to mean &#8220;some code that runs in the operating system at a comparatively low level.&#8221; Could be kernel32, could be kernel mode, could be ntdll—it&#8217;s not important where precisely. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-461613">
				<div id="div-comment-461613" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Norman Diamond</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070108-02/?p=28493#comment-461613">
			January 17, 2007 at 3:09 am</a>		</div>

		<p>&gt; You&#8217;re reading too much into that one word.</p>
<p>What(&#8216;s) a word. &nbsp;To anyone who has written/modified/whatever a device driver or task scheduler (no not _that_ task scheduler) or interrupt handler or any other part of a k..k&#8230;..something, it&#8217;s not exactly obvious that the word &#8220;kernel&#8221; was abused that way. &nbsp;To anyone who ever compiled a Linux kernel and had someone point them to an interesting entry in the credits file, it&#8217;s even less obvious. &nbsp;But I think you&#8217;ve clarified (indirectly) that this adjustment is decided by user-mode, thank you.</p>
<div class="post">[<i>There&#8217;s a user-mode component called &#8220;kernel32&#8243;—obviously the word &#8220;kernel&#8221; doesn&#8217;t mean &#8220;kernel mode&#8221;. And how did I clarify that it happens in user mode? I said that it &#8220;could be kernel32, could be kernel mode, could be ntdll—it&#8217;s not important where precisely.&#8221; Everything is still on the table. It has to be, because <u>I don&#8217;t know the answer</u>. I&#8217;m kind of baffled how you concluded the opposite of what I was saying. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-461623">
				<div id="div-comment-461623" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">ToyOS</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070108-02/?p=28493#comment-461623">
			January 17, 2007 at 4:07 am</a>		</div>

		<p>kernel runs in user mode. lol.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-462893">
				<div id="div-comment-462893" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Paul Woodward</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070108-02/?p=28493#comment-462893">
			January 18, 2007 at 3:57 pm</a>		</div>

		<p>GregM,</p>
<p>I was working from memory of an actual commercial application that wrote to its own resources. &nbsp;I ran into it about 5 years ago. &nbsp;My investigation at the time found UnhandledExceptionFilter made the memory writable. &nbsp;I just verified this with a test app where I write to the resources with different __except blocks around it.</p>
<p>If you have written your own debugger you have to make the resources writable when UnhandledExceptionFilter would, or else these applications will crash. &nbsp;The msdev debugger provides this feature.</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>