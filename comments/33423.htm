<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (10)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-319793">
				<div id="div-comment-319793" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Gabe</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20051108-05/?p=33423#comment-319793">
			November 8, 2005 at 10:15 am</a>		</div>

		<p>I believe that in modern VM parlance this would be called &quot;pinning&quot;. One &quot;pins&quot; memory to prevent it from being paged out or GC&#8217;d.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-319803">
				<div id="div-comment-319803" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">bramster</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20051108-05/?p=33423#comment-319803">
			November 8, 2005 at 10:38 am</a>		</div>

		<p>&quot;But why &quot;wire&quot;?&quot;</p>
<p>In applications where a nut-and-bolt fastening system must not vibrate loose, the nut used is a &quot;castlelated&quot; nut, the bolt has a hole through it.  After tightening the nut, a &quot;safety-wire&quot; is run through the hole, and twisted into place.  There are special &quot;safety-wire&quot; pliers, which make the twisting of the wire very quick.<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-319833">
				<div id="div-comment-319833" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Scott</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20051108-05/?p=33423#comment-319833">
			November 8, 2005 at 11:14 am</a>		</div>

		<p>Thoughts of old core memory leap to mind&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-319863">
				<div id="div-comment-319863" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.picoposter.com' rel='external nofollow' class='url'>K.T.</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20051108-05/?p=33423#comment-319863">
			November 8, 2005 at 12:27 pm</a>		</div>

		<p>&quot;GlobalWire&quot;??? &#8211; Sounds more like a financial transaction!</p>
<p>Is this a prime example of why APIs should be vetted for colloquialisms? </p>
<p>Are there any win32 functions that have esoteric names?<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-319923">
				<div id="div-comment-319923" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">John Elliott</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20051108-05/?p=33423#comment-319923">
			November 8, 2005 at 2:44 pm</a>		</div>

		<p>Wow. That was almost same-year service :-) </p>
<p>Gabe: I don&#8217;t think this is quite the same as pinning, because that would be done with GlobalLock. Or maybe GlobalFix. Oddly enough, there isn&#8217;t a GlobalPin or GlobalGlue or  GlobalWeld&#8230;<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-319993">
				<div id="div-comment-319993" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Art</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20051108-05/?p=33423#comment-319993">
			November 8, 2005 at 5:19 pm</a>		</div>

		<p>I like PrestoChangoSelector() more.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-320013">
				<div id="div-comment-320013" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Daev</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20051108-05/?p=33423#comment-320013">
			November 8, 2005 at 7:04 pm</a>		</div>

		<p>A function with the same intent as GlobalWire might still be useful.</p>
<p>Suppose your program is used for number crunching on potentially very large matrices.  You might need to grab several BIG chunks of memory from the allocator.</p>
<p>If you could ensure that your program&#8217;s modules (application, DLLs, etc.) hugged the fringes of virtual memory address space, that would leave lots of free empty room in the middle.</p>
<p>Wide open stretches of contiguous unallocated memory could mean the difference between success and failure when you call malloc(REALLY_BIG_NUMBER).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-320023">
				<div id="div-comment-320023" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Mike Dunn</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20051108-05/?p=33423#comment-320023">
			November 8, 2005 at 8:10 pm</a>		</div>

		<p>Daev&gt; The system DLLs are already mapped at the top end of the lower 2GB of the address space. As for your own allocs, VirtualAlloc() lets you specify the virtual address in the address space, so if you know you&#8217;re going to have large allocs, you can do them in the middle of the 2GB range.<br />
<br />Or, you can use the techniques that Raymond posted about a while ago (in the series about misconceptions regarding memory and address space) if you need to manually swap data in/out of your address space.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-320043">
				<div id="div-comment-320043" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">James Risto</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20051108-05/?p=33423#comment-320043">
			November 9, 2005 at 8:56 am</a>		</div>

		<p>GlobalWire and PrestoChangoSelector are still more meaningful than the BurgerMaster segment!</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-320063">
				<div id="div-comment-320063" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.mschaef.com/cgi-bin/blosxom.cgi' rel='external nofollow' class='url'>mschaef</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20051108-05/?p=33423#comment-320063">
			November 9, 2005 at 10:27 am</a>		</div>

		<p>&quot;GlobalWire and PrestoChangoSelector are still more meaningful than the BurgerMaster segment! &quot;</p>
<p>Not if you&#8217;re hungry after working long hours on the memory manager. :-)</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>