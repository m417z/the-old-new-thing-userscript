<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (35)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-444363">
				<div id="div-comment-444363" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://myspace.com/loosethreadrock' rel='external nofollow' class='url'>Don Vince</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20061122-50/?p=28933#comment-444363">
			November 22, 2006 at 11:42 am</a>		</div>

		<p>I&#8217;ve a similar story for you: I play in a band, while recording once, our singer was making (self admitted) ludicrous/impossible requests for strange effects.</p>
<p>To properly illustrate this, the soundman told us the story of the NND: To deal with these requests he says &quot;I have just the thing!&quot;, hauls out some equipment, tangles in some leads and has the offending requestor operate the dial &quot;very slowly and carefully, the subtlest change on the dial can have huge effects&quot;. Then he sets the recording playing and allows the good person after the bonkers request lovingly and with full creative control adjusts the dial.</p>
<p>This fine device, the NND, is of course the no noticeable difference machine.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-444383">
				<div id="div-comment-444383" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Aaron</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20061122-50/?p=28933#comment-444383">
			November 22, 2006 at 12:49 pm</a>		</div>

		<p>It&#8217;s the old story &#8211; random reinforcement breeds superstition. &nbsp;I recall people telling me in the Windows 95 days that changing some DUN registry keys would speed up my cable modem.</p>
<p>Funny how some people try to rationalize it, though. &nbsp;Sometimes I wonder if they came up with the explanations themselves using some bizarre analogies, or if one of their friends fed it to them just to see how gullible they were.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-444393">
				<div id="div-comment-444393" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Cody</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20061122-50/?p=28933#comment-444393">
			November 22, 2006 at 1:10 pm</a>		</div>

		<p>&quot;random reinforcement breeds superstition&quot; &#8211; That was a fun tactic in the game Black and White. &nbsp;You randomly praise or punish your creature and it ends up neurotic.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-444423">
				<div id="div-comment-444423" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">James Risto</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20061122-50/?p=28933#comment-444423">
			November 22, 2006 at 3:21 pm</a>		</div>

		<p><a rel="nofollow" target="_new" href="http://support.microsoft.com/kb/131041/en-us" rel="nofollow">http://support.microsoft.com/kb/131041/en-us</a></p>
<p>This kind of article makes one believe it helps apps.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-444443">
				<div id="div-comment-444443" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://deadnode.org/sw/' rel='external nofollow' class='url'>James</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20061122-50/?p=28933#comment-444443">
			November 22, 2006 at 4:10 pm</a>		</div>

		<p>&quot;This kind of article makes one believe it helps apps.&quot;</p>
<p>Only if you miss the explanation of how it affects the device drivers.</p>
<p>I&#8217;m more curious about the reference to &#8216;SYSINI.INI&#8217; (which would appear to be a symptom of a Trojan infection, as opposed to SYSTEM.INI, as documented in SYSINI.WRI)&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-444473">
				<div id="div-comment-444473" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">cAPS lOCK</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20061122-50/?p=28933#comment-444473">
			November 22, 2006 at 5:50 pm</a>		</div>

		<p>It might actually be a viable business model&#8230;</p>
<p><a rel="nofollow" target="_new" href="http://www.siltechcables.com/wawcs0115596/tn-philosophy.html" rel="nofollow">http://www.siltechcables.com/wawcs0115596/tn-philosophy.html</a></p>
<p>&quot;Part of the beauty of the design of Siltech cables, however, is beyond our design efforts. Nature itself ensures that our cables improve with age, due to the conductive qualities of silver.&quot;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-444483">
				<div id="div-comment-444483" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">ray</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20061122-50/?p=28933#comment-444483">
			November 22, 2006 at 6:20 pm</a>		</div>

		<p>ahh has it been 10 years already?</p>
<p><a rel="nofollow" target="_new" href="http://www.ftc.gov/os/1996/10/c3688cmp.htm" rel="nofollow">http://www.ftc.gov/os/1996/10/c3688cmp.htm</a></p>
<p>even made the top 3 worst pc tech of all time:</p>
<p><a rel="nofollow" target="_new" href="http://www.pcworld.com/article/id,125772-page,2/article.html" rel="nofollow">http://www.pcworld.com/article/id,125772-page,2/article.html</a></p>
<p>:)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-444503">
				<div id="div-comment-444503" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">DonNadie</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20061122-50/?p=28933#comment-444503">
			November 22, 2006 at 8:28 pm</a>		</div>

		<p>One day I found that someone pulled the WiFI ADSL router from the shelf below the printer and extended its antennae. Since our network is wired and I have disabled WiFi in the router in order to prevent &quot;bandwitdth sharers&quot;, I folded the antennae and returned the router to their original location. A few days later I found it again outside the shelf with the antennae extened. It seems that one of the times that the boss restarted the router (the ADSL connection is a bit unstable there), he noticed the antennae and thought that they could affect the ADSL &quot;reception&quot;. I explained him that they aren&#8217;t used for ADSL but for the local network and returned it again to its position.</p>
<p>After third time I found the router outside I left it there. It make happy the boss, don&#8217;t affect the network since WiFi isn&#8217;t used and the reset button it&#8217;s more accessible in that location :-) . Unfortunately, the ADSL continue having cuts from time to time&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-444513">
				<div id="div-comment-444513" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://aundh.blogspot.com' rel='external nofollow' class='url'>JamesW</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20061122-50/?p=28933#comment-444513">
			November 22, 2006 at 11:56 pm</a>		</div>

		<p>The favourite pointless ritual, that will cure all ills, in Apple land is &#8216;Repair Permissions&#8217;. It doesn&#8217;t matter what issue you have, or what forum you post in, someone will suggest that repairing permissions will fix it. Unsanity provided a pretty good debunking over a year ago: <a rel="nofollow" target="_new" href="http://www.unsanity.org/archives/000410.php" rel="nofollow">http://www.unsanity.org/archives/000410.php</a></p>
<p>Still the myth persists: I was having problems with iDVD. When I posted my query on Apple&#8217;s user discussion board, mentioning that an OpenGL error was being reported, what is the first suggested remedy? Repair Permissions! I gave hope up at that point.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-444453">
				<div id="div-comment-444453" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">JenK</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20061122-50/?p=28933#comment-444453">
			November 22, 2006 at 5:43 pm</a>		</div>

		<p>Re: knowledgebase articles: they are (or were) written by a variety of sources, some of which are also susceptible to this sort of urban legend. </p>
<p>Funny meta-reference: Since Wikipedia doesn&#8217;t want original research, I recently found myself googling for KB and other technical references *that I had written* to cite in the Wikipedia article I was rewriting&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-444523">
				<div id="div-comment-444523" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Yuhong Bao</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20061122-50/?p=28933#comment-444523">
			November 23, 2006 at 1:52 am</a>		</div>

		<p>Why not detect support for the cmpxchg16 instuction and increase the address space if it exists?</p>
<div class="post">[<i>I&#8217;ll let you guess. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-444543">
				<div id="div-comment-444543" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Jareth</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20061122-50/?p=28933#comment-444543">
			November 23, 2006 at 4:20 am</a>		</div>

		<blockquote><p>
  &gt; Why not detect support for the cmpxchg16 instuction and increase the address space if it exists?
</p></blockquote>
<p>That would be great. Also because all new processors from both AMD and Intel now have the cmpxchg16b (it was missing from the first versions of Athlon64s and Opterons).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-444643">
				<div id="div-comment-444643" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Deaf &amp; Blind</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20061122-50/?p=28933#comment-444643">
			November 23, 2006 at 5:32 pm</a>		</div>

		<p>I find much joy when people &quot;hear&quot; that a distinct digital bitpattern sounds better on some hardware than the identical bitpattern reproduced on other hardware.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-444683">
				<div id="div-comment-444683" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://levicki.blogspot.com/' rel='external nofollow' class='url'>Igor</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20061122-50/?p=28933#comment-444683">
			November 23, 2006 at 9:16 pm</a>		</div>

		<p>Seriously Raymond, why not use all those new instructions? What is the point in IHVs putting so much effort and money in new hardware capabilities when it still has to run legacy code mix?</p>
<p>We have cmpxchg16b and we don&#8217;t use it. It is a wasted silicone.</p>
<p>We have MONITOR/MWAIT thread synchronization primitives (for spinlocks, semaphores and such) and yet kernel doesn&#8217;t use them. Again wasted silicone which could be put to good use otherwise.</p>
<p>Next year we are going to have CPUs with CRC32 instruction. How long will it take for Microsoft software to pick it up if at all?</p>
<p>It is a shame that some of us are paying to have more features in their hardware and then we get slapped in the face by lazy software vendors who find it &quot;too complicated&quot; to test more than one code path and who never heard of automatic cpu dispatch.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-444713">
				<div id="div-comment-444713" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ulric</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20061122-50/?p=28933#comment-444713">
			November 23, 2006 at 11:33 pm</a>		</div>

		<blockquote><p>
  We have cmpxchg16b and we don&#8217;t use it. It is a wasted silicone
</p></blockquote>
<p>Talk about optimizing for edge cases just for the sake of it! It&#8217;s not because the instructions exist that they&#8217;re free to call!</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-444743">
				<div id="div-comment-444743" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://levicki.blogspot.com/' rel='external nofollow' class='url'>Igor</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20061122-50/?p=28933#comment-444743">
			November 24, 2006 at 12:04 am</a>		</div>

		<p>&quot;Talk about optimizing for edge cases just for the sake of it!&quot;</p>
<p>Well excuse me, but that instruction is now part of the most 64-bit CPUs on the market and it will continue to be present in all future architectures. So it is not an edge case.</p>
<p>Furthermore, it is not an optimization &#8212; it enables certain feature (atomic operation on 128-bit values) which would not be possible to implement otherwise.</p>
<p>&quot;It&#8217;s not because the instructions exist that they&#8217;re free to call!&quot;</p>
<p>FYI, majority of new instructions are:</p>
<ol>
<li>totally faster than the old ones</li>
<li>
<p>take same number of cycles but do more work per cycle</p>
</li>
<li>
<p>have the same performance/number of clocks but do not incur penalties or do not create dependencies and stalls</p>
</li>
</ol>
<p>Rationale:</p>
<p>New instructions are made to be used. If you don&#8217;t, you are anal and here is an analogy:</p>
<p>You asked city mayor to make a bypass so you can drive quickly from one end of the city to the other.</p>
<p>When it is finished you start using it but instead of driving fast like you should drive on the highway, you crawl like in the middle of a downtown traffic jam.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-444753">
				<div id="div-comment-444753" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Golden Ears</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20061122-50/?p=28933#comment-444753">
			November 24, 2006 at 1:52 am</a>		</div>

		<blockquote><p>
  I find much joy when people &quot;hear&quot; that a distinct digital bitpattern sounds better on some hardware</p>
<p>  than the identical bitpattern reproduced on other hardware.
</p></blockquote>
<p>That&#8217;s because the first hardware is using monster oxygen-free monofilament crystalline transparent copper cables that cost $200/metre. &nbsp;Sheesh, don&#8217;t you know anything about audio feng shui?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-444783">
				<div id="div-comment-444783" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joe Butler</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20061122-50/?p=28933#comment-444783">
			November 24, 2006 at 9:01 am</a>		</div>

		<p>Deaf &amp; Blind &gt; I find much joy when people &quot;hear&quot; that a distinct digital bitpattern sounds better on some hardware than the identical bitpattern reproduced on other hardware.</p>
<p>I find it amusing and frustrating when people make statements such as this one with the knowledge that digital is &#8216;precice and exact&#8217; to back up that assertion, yet failing to take into account the analogue path and other digital and analogue signal processing that may differ between the hardware.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-444793">
				<div id="div-comment-444793" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joe Butler</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20061122-50/?p=28933#comment-444793">
			November 24, 2006 at 9:05 am</a>		</div>

		<p>For a perceived performance boost, just install the XP Royale theme &#8211; it&#8217;s like go faster stripes for your computer. &nbsp;It really does make one&#8217;s computer feel sleeker and more powerful.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-444803">
				<div id="div-comment-444803" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Too embarassed to name myself</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20061122-50/?p=28933#comment-444803">
			November 24, 2006 at 10:51 am</a>		</div>

		<p>Back in the 90s I did actually put go faster stripes on my computer. Red insulating tape.</p>
<p>Naturally, I also changed the LED display on my front panel and pointed it out to my friends: &quot;See? Up from 66 to 67Mhz now, with the go faster stripes!&quot;</p>
<p>Sadly, nobody would pay me to make a similar upgrade to their machines.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-444923">
				<div id="div-comment-444923" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Nick</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20061122-50/?p=28933#comment-444923">
			November 24, 2006 at 6:30 pm</a>		</div>

		<p>[just install the XP Royale theme]</p>
<p>Is this available from MS anymore? &nbsp;I know it used to be on the New Zealand downloads page (here: <a rel="nofollow" target="_new" href="http://www.microsoft.com/downloads/details.aspx?FamilyID=15373c73-d5f6-4af0-b583-d633cb021612&amp;DisplayLang=en" rel="nofollow">http://www.microsoft.com/downloads/details.aspx?FamilyID=15373c73-d5f6-4af0-b583-d633cb021612&#038;DisplayLang=en</a>) but it&#8217;s been gone for a while. &nbsp;Why was it removed so soon after being publicly available?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-444933">
				<div id="div-comment-444933" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Yuhong Bao</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20061122-50/?p=28933#comment-444933">
			November 24, 2006 at 6:50 pm</a>		</div>

		<p>[I&#8217;ll let you guess. -Raymond]</p>
<p>It may cause compatibility issues, I guess.</p>
<div class="post">[<i>Hm, that&#8217;s not what I would&#8217;ve guessed. My guesses would have been (1)&nbsp;the instruction was added too late for the kernel team to risk a change to a core operating system function, and (2)&nbsp;nobody yet has complained that the 64-bit address space is too small so there&#8217;s no urgency to make it bigger. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-444953">
				<div id="div-comment-444953" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Gabe</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20061122-50/?p=28933#comment-444953">
			November 25, 2006 at 3:47 am</a>		</div>

		<p>The current architecture of x64 CPUs only allows 48 bits of address space to be used, which would yield 128TB of user address space if it were all available. I&#8217;m sure that by the time people actually need more than 8TB of address space, sufficiently many people will have the necessary CPU instruction that MS will implement it, allowing people to use the full 128TB of address space.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-445083">
				<div id="div-comment-445083" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">BryanK</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20061122-50/?p=28933#comment-445083">
			November 27, 2006 at 8:49 am</a>		</div>

		<p>Um, Gabe, no, it doesn&#8217;t. &nbsp;;-)</p>
<p>You&#8217;re confusing physical address space with linear address space. &nbsp;The x64 allows pointers to be 64 bits wide; therefore, you can access 2**64-1 different bytes in a program. &nbsp;The fact that *current* x64 implementations only have 48 address lines on their memory bus is an implementation detail. &nbsp;Writing a program that expects pointers to be 48 bits long, or only have the lower 48 bits be nonzero, based on the address bus size, is a bug.</p>
<p>(Besides, in the same way the Pentium Pro moved from a 32-bit address bus to a 36-bit address bus, the x64 processors could change their physical addressing range at any time. &nbsp;Now the PPro had some issues with actually addressing all that, because they went higher than their linear addresses, but the x64 change wouldn&#8217;t.)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-445093">
				<div id="div-comment-445093" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.werkema.com' rel='external nofollow' class='url'>Sean W.</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20061122-50/?p=28933#comment-445093">
			November 27, 2006 at 9:56 am</a>		</div>

		<p>&gt; Next year we are going to have CPUs with CRC32 instruction. How long will</p>
<p>&gt; it take for Microsoft software to pick it up if at all?</p>
<p>It&#8217;s never that simple. &nbsp;My company&#8217;s software, for example, runs on everything from Win95 to Vista, and yes, we have customers that really *do* run the darned thing on Win95, on boxes like a Pentium 100 with 64 megs of RAM. &nbsp;When you have to support a very wide range of systems, you have to focus more on the lower-common-denominators than you do on the highest-end systems, because there are a lot more lower-common-denominators than there are high-end boxes. &nbsp;Adding in specialized support for &quot;X&quot; random feature of the higher-end boxes requires a lot of additional testing to make sure you didn&#8217;t break anything on the low-end boxes too; and in a company as large as Raymond&#8217;s, that requires approval processes and committees too.</p>
<p>I wouldn&#8217;t blame Microsoft in the slightest for not using cmpxchg16b or crc32 in Vista, or even for ignoring those for some years from now. &nbsp;They have bigger fish to fry than immediately adding in support for every little pet instruction that Intel and AMD toss into their chips.</p>
<p>&gt; We have cmpxchg16b and we don&#8217;t use it. It is a wasted silicone.</p>
<p>Mmm&#8230; &nbsp;wasted silicone. &nbsp;*imagines jiggly processors walking down the street*</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-445643">
				<div id="div-comment-445643" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://levicki.blogspot.com/' rel='external nofollow' class='url'>Igor</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20061122-50/?p=28933#comment-445643">
			November 27, 2006 at 10:56 pm</a>		</div>

		<p>Sean W. said:</p>
<p>&quot;It&#8217;s never that simple&quot;</p>
<p>Well actually it is, compiler generates Pentium code for you, what is stopping you from using SIMD instructions in inline assembler or separate .asm files?</p>
<p>You just have to check if the feature is present and if you are running under OS which supports it. You can get 4x speedups by using SSE and SSE2 instruction set extensions. One good example of a program which still works on Windows 95 and Pentium but flies on latest hardware is VirtualDub by Avery Lee.</p>
<p>You can also get Intel C/C++ Complier and let it perform automatic CPU dispatch for you. It can also vectorize most common code and it optimizes a lot better (again up to 4x faster code) than even the latest MSVC 2005 compiler (which by the way has been considerably improved over the 2003 and VC6).</p>
<p>Sean W. said:</p>
<p>&quot;than immediately adding in support for every little pet instruction&quot;</p>
<p>If you believe that the instruction which will perform CRC32 checksum on a block of data is just a &quot;little pet instruction&quot;, then I don&#8217;t see a point in discussing this matter with you anymore.</p>
<p>(continues to read CUDA Programming Guide)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-445653">
				<div id="div-comment-445653" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://levicki.blogspot.com/' rel='external nofollow' class='url'>Igor</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20061122-50/?p=28933#comment-445653">
			November 27, 2006 at 10:56 pm</a>		</div>

		<p>&quot;Mmm&#8230; &nbsp;wasted silicone&quot;</p>
<p>Obviously a typo.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-446103">
				<div id="div-comment-446103" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.werkema.com' rel='external nofollow' class='url'>Sean W.</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20061122-50/?p=28933#comment-446103">
			November 28, 2006 at 5:14 pm</a>		</div>

		<p>&gt; If you believe that the instruction which will</p>
<p>&gt; perform CRC32 checksum on a block of data is</p>
<p>&gt; just a &quot;little pet instruction&quot;, then I don&#8217;t</p>
<p>&gt; see a point in discussing this matter with you anymore.</p>
<p>Your loss.</p>
<p>CRC32 has some value as an instruction, but the fact is that the code to compute it is well-known and well-optimized, and, as a general rule, every time a new specialized instruction like this gets added, it gets phased out a few years later because the more general solution is usually faster or better or both. &nbsp;Remember the x86 string instructions? &nbsp;How about aad/aam? &nbsp;They were all added in their day to make things go faster &#8212; and have been successively phased out ever since (the string instructions are slower than separate instructions on modern processors, and things like aad/aam don&#8217;t even exist on x64). &nbsp;Time and time and time again, the industry has failed to learn (and been forced to relearn) the lessons of RISC: &nbsp;That a few instructions that work really well in the general case are a lot better than a lot of instructions that are only usable in special cases.</p>
<p>CRC-32 runs just fine in software and has for decades now. &nbsp;Including it in hardware gives at best a marginal speedup to only a handful of applications, at a significant cost in silicon: &nbsp;Place ya bets you can&#8217;t find any common application in use today whose main bottleneck is computing CRC-32s.</p>
<p>&gt; You just have to check if the feature is</p>
<p>&gt; present and if you are running under OS which</p>
<p>&gt; supports it. You can get 4x speedups by using</p>
<p>&gt; SSE and SSE2 instruction set extensions.</p>
<p>And what about the hidden support and maintenance costs? &nbsp;Every time you add a conditional to your code, you&#8217;re adding a fork: &nbsp;Some people will take the left path, and some people will take the right; and if you have a bug in the left side but not in the right, or they compute different values in rare circumstances (and yes, that DOES happen), you&#8217;re ensuring that one group of people will see different output from your software than another. &nbsp;Each time a feature like this is added, you increase your support costs, so you have to seriously think and discuss it before you do it. &nbsp;There&#8217;s already too much software out there where if it crashes, people say, &quot;You probably need to disable SSE/MMX/SSE2/extension-du-jour to make it work.&quot; &nbsp;I don&#8217;t blame Microsoft &#8212; or any other company &#8212; for ignoring new instructions, because the performance potentially gained from them has to be balanced against the potential support and maintenance costs. &nbsp;It&#8217;s benefit of the users vs. cost to the company, and sometimes you have to land on the company side of that equation. &nbsp;Nothing is free, and if you&#8217;ve been reading Raymond&#8217;s blog carefully, you should know that by now.</p>
<p>&gt; Obviously a typo.</p>
<p>Well, *DUH*.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-446643">
				<div id="div-comment-446643" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://levicki.blogspot.com/' rel='external nofollow' class='url'>Igor</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20061122-50/?p=28933#comment-446643">
			November 29, 2006 at 7:24 pm</a>		</div>

		<p>Sean W. said:</p>
<p>&quot;the fact is that the code to compute it is well-known and well-optimized&quot;</p>
<p>Do you really think any optimized code for CRC32 calculation could beat a single instruction?</p>
<p>Sean W. said:</p>
<p>&quot;Remember the x86 string instructions?&quot;</p>
<p>Those still exist and P4 has fast strings mode which gets triggered if certain conditions are met.</p>
<p>Sean W. said:</p>
<p>&quot;the lessons of RISC&quot;</p>
<p>So you are a RISC guy? Well maybe those few fast instructions are fine for simple tasks but how many of them it takes to implement complex algorithm? Code becomes big, falls out of instruction cache, and decoding bandwidth is limited resource after all. I take CISC over RISC anytime.</p>
<p>Sean W. said:</p>
<p>&quot;you can&#8217;t find any common application&quot;</p>
<p>Of the top of my head any archiver, then also TCP/IP stack if hardware does not have checksum offloading.</p>
<p>Sean W. said:</p>
<p>&quot;and if you have a bug in the left side but not in the right&quot;</p>
<p>That is why I advocated use of Intel compiler &#8212; it generates runtime auto-dispatcher and different code paths based on the single source. So you don&#8217;t really have to maintain different code paths.</p>
<p>Sean W. said:</p>
<p>&quot;or they compute different values in rare circumstances&quot;</p>
<p>That is indeed very rare. I witnessed it once in my code and it was SSE code which had 4 times smaller error as a side-effect of vectorization so it was a good thing.</p>
<p>Sean W. said:</p>
<p>&quot;the performance potentially gained from them&quot;</p>
<p>The performance can be up to 4x greater, isn&#8217;t that worth some trouble?</p>
<p>You can give as many excuses for being lazy as you want but they are just that &#8212; excuses and lousy at best.</p>
<p>My point is that the software is lagging behind the hardware big time. It is time for software developers to take some responsibility for their sluggish code considering all those GFLOPS at their disposal.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-446753">
				<div id="div-comment-446753" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Gabe</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20061122-50/?p=28933#comment-446753">
			November 30, 2006 at 4:06 am</a>		</div>

		<p>BryanK, you are confusing linear address space with virtual address space. Although you can create a pointer to any theoretical address within the 64-bit address space, current x64 chips are designed so you can only create a mapping within the top or bottom 128TB of that address space.</p>
<p>In other words, when you tell an Opteron how to map a physical address to a virtual address, that virtual address must fit within 48 bits and the physical address must fit within 40 bits. Xeon processors also have 48-bit virtual address spaces but only 36-bit (33 address lines and 64 data lines) physical address spaces.</p>
<p>The reason you can&#8217;t use the full address space is that the page tables just aren&#8217;t big enough. In theory, a table to map every 64-bit address into a 4k page of 48-bit physical address would require over 2^48 bytes of memory per process. Since this isn&#8217;t practical, page tables are broken down into 4 levels of 512 entries each. Adding a 5th level would let you use an additional 9 bits of virtual address space at the cost of using more memory to store page tables and more cycles to access them. At some point enough programs will need more than 128TB of address space and the tradeoffs will be worth it, but that time is far off in the future.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-446913">
				<div id="div-comment-446913" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Gabe</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20061122-50/?p=28933#comment-446913">
			November 30, 2006 at 1:03 pm</a>		</div>

		<p>BryanK, there is no getting around that 48-bit limit. If you attempt to use an address that has bits 48-63 set to anything other than the same as bit 47, you get a GP fault. This is different from a page fault, which you get when you access an address which is in your address space but not currently mapped to physical memory.</p>
<p>The x64 architecture supports 2MB pages, but all that does is eliminate one level of page tables (making memory access faster at the expense of making page faults slower). Windows has for a while allowed you to let it use large pages for the kernel, and now you can request large pages in a user program if you have sufficient permission.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-446853">
				<div id="div-comment-446853" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">BryanK</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20061122-50/?p=28933#comment-446853">
			November 30, 2006 at 11:12 am</a>		</div>

		<p>&gt; Do you really think any optimized code for CRC32 calculation could beat a single instruction?</p>
<p>Yes, if the single instruction takes 1000 clocks to run.</p>
<p>Now obviously this isn&#8217;t the case with the crc32 instruction, but in general, yes, an optimized set of smaller instructions *can* beat a single larger instruction.</p>
<p>(As for your dislike of RISC: &nbsp;That&#8217;s funny, because effectively *every processor* is now RISC, including Intel-compatibles. &nbsp;They convert the CISC instructions of your program to RISC &quot;microcode&quot;, and then they run the microcode.)</p>
<p>Gabe: &nbsp;You&#8217;re right, I was thinking you were talking about the physical address bus size being 48 bits. &nbsp;So never mind there.</p>
<p>But linear addresses *are* virtual addresses. &nbsp;;-) &nbsp;The fact that some of them aren&#8217;t valid (because there&#8217;s no corresponding PTE) does mean that you can&#8217;t use all of them, but the processor just takes your linear address and looks it up in the current set of page tables. &nbsp;The linear versus virtual distinction only exists if you decide that invalid page faults from accessing pages that the OS hasn&#8217;t given you are somehow &quot;different&quot; from invalid page faults that come from accessing pages that the processor decided to not support.</p>
<p>But yes, processors that force the page table architecture to 4 levels of 512 64-bit entries each are going to page-fault if you give them a linear address outside the 48 bits that they give you.</p>
<p>I remember that the i686 had a &quot;page size extension&quot; mode that (IIRC anyway) made the pages 4M in size instead of 4K. &nbsp;This might help with the 48-bit limit (it&#8217;d raise it to 58 bits, because the extra 10 bits from the page size wouldn&#8217;t require any more page-table levels). &nbsp;OTOH, a lot of non-kernel code that runs on Windows probably depends on 4K pages now, which probably means these large pages won&#8217;t ever be turned on. &nbsp;(If the x86-64 even supports that extension in 64-bit mode&#8230;)</p>
<p>But that might be a way to give more *usable* linear/virtual address space to a program, if it was supported. &nbsp;(And if it didn&#8217;t require tons of bookkeeping in the kernel.)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-447013">
				<div id="div-comment-447013" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://levicki.blogspot.com/' rel='external nofollow' class='url'>Igor</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20061122-50/?p=28933#comment-447013">
			November 30, 2006 at 4:17 pm</a>		</div>

		<p>BryanK said:</p>
<p>&#8220;As for your dislike of RISC&#8221;</p>
<p>I am well aware that it is RISC under the hood. But my point was that if RISC was good enough, there would be no need for high-level languages.</p>
<p>If you haven&#8217;t noticed, high-level languages hide the complexity and poor manageability of assembler code and enable you to focus on the problem by giving you larger, already optimized, building blocks which you use to solve it.</p>
<p>IMHO, same goes for CISC .vs. RISC. Imagine if you had to calculate say square root using only addition and subtraction? Yes, the CISC&#8217;s DIV would take much more cycles to complete than RISC&#8217;s ADD/SUB but in the end CISC would still be a winner.</p>
<p>BryanK said:</p>
<p>&#8220;in general, yes, an optimized set of smaller instructions *can* beat a single larger instruction.&#8221;</p>
<p>Well, correct me if I am wrong but aren&#8217;t those &#8220;larger&#8221; instructions actually being made to beat that set of &#8220;smaller&#8221; instructions?!?</p>
<p>Lets say that CRC32 uses two registers, one as a pointer and the other holds the block length in bytes. It returns the CRC32 checksum in accumulator.</p>
<p>Perhaps it can be encoded with just two bytes but lets for the sake of argument say that it can be encoded with 3 bytes or 4 bytes in 64-bit mode if you count REX prefix.</p>
<p>Now compare that to the code size of the shortest and fastest possible version of CRC32 written in pure assembler.</p>
<p>Then take latest Intel Optimization Manual and read the part where it says that you have to have less than 18 instructions in a tight loop in order to keep maximal decoding bandwidth.</p>
<p>After that write another loop around your CRC32 code to call it N times for say blocks of 2048 bytes. Your already too big code just got bigger and slower, single instruction form however only now got it&#8217;s first loop which fits in instruction cache and is streamed from the buffer instead of decoded again and again.</p>
<p>Any bells ringing yet?</p>
<div class=post>[<i>Could you guys argue about this somewhere else? -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-447453">
				<div id="div-comment-447453" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://levicki.blogspot.com/' rel='external nofollow' class='url'>Igor</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20061122-50/?p=28933#comment-447453">
			December 1, 2006 at 6:48 pm</a>		</div>

		<p>Sure thing Raymond. Sorry about that, it is just that I am pretty sensitive when it comes to assembler and code optimization because that is what I do for living.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-447513">
				<div id="div-comment-447513" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.werkema.com' rel='external nofollow' class='url'>Sean W.</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20061122-50/?p=28933#comment-447513">
			December 2, 2006 at 11:06 am</a>		</div>

		<p>Out of deference to Raymond, I will let the subject drop, despite what I could say to Igor about optimization. &nbsp;This *should* be about placebo settings (oh, how I wish I could add one in my own apps too!) and nothing else.</p>
<p>But I would like to add one more thing, because I *did* get directly, personally insulted up there: &nbsp;Igor, please don&#8217;t call me lazy just because I prefer algorithmic optimizations to raw assembly optimizations, okay? &nbsp;Rewriting your whole app in assembly is a little silly when finding your bottlenecks and carefully replacing those with algorithmic improvements will give you much higher speedups &#8212; and without switching languages. &nbsp;I use assembly only where appropriate and necessary these days; I wrote whole apps in 100% carefully-tuned assembly when I was younger, and I sure as heck know better than do that kind of silliness anymore.</p>
<p>&quot;Work smarter, not harder.&quot; &#8212; Scrooge McDuck</p>
<p>&quot;Premature optimization is the root of all evil.&quot; &#8212; Edsger Dijkstra</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>