<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (46)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-876353">
				<div id="div-comment-876353" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ian Boyd</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101124-00/?p=12213#comment-876353">
			November 24, 2010 at 7:11 am</a>		</div>

		<p>i use the feature regularly, and have for many years. i didn&#39;t know it went back to Windows 3.1, which i used for a year before Windows NT 3.1.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-876363">
				<div id="div-comment-876363" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Sam</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101124-00/?p=12213#comment-876363">
			November 24, 2010 at 7:15 am</a>		</div>

		<p>I often use this feature and hadn&#39;t realized it was relatively unknown.</p>
<p>One of my biggest frustrations with Office 97 was that since they did their own custom open dialogs, sometimes this feature wasn&#39;t working properly. &nbsp;In particular I often had to use Access 97 to open files with a nonstandard extension (.ebp) and entering *.ebp in the Access 97 file open dialog gave me an error messagebox instead of filtering, while apps that used the normal common dialog handled it correctly. &nbsp;(It may have been a weird configuration on my system, because I can&#39;t reproduce it on my new one; but if they had used common dialogs, it would have just worked.)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-876383">
				<div id="div-comment-876383" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Adam Rosenfield</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101124-00/?p=12213#comment-876383">
			November 24, 2010 at 7:37 am</a>		</div>

		<p>I just discovered that in Windows 7 (not sure if this applies to earlier versions of Windows or not), you can type U+F03F into the Common File dialog (or Explorer) to get a literal question mark in a filename, although it&#39;s displayed as middle dot (Â·, U+00B7). &nbsp;U+F03F is a Private Use Area character (note that U+003F is the standard question mark).</p>
<p>I found this out by using Cygwin to create a file with a question mark in it and then seeing how Explorer et al handled it. &nbsp;Good job to the Explorer folks, since this seems like a very sane solution &#8212; using PUA characters for filename characters that have special meaning in Explorer but are otherwise perfectly legal in NTFS.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-876393">
				<div id="div-comment-876393" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">dalek</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101124-00/?p=12213#comment-876393">
			November 24, 2010 at 7:47 am</a>		</div>

		<p>I can imagine someone that never had any experience using a command line interface not knowing about wildcards at all. I can&#39;t imagine someone not getting someone with a little bit more computer experience to &nbsp;explain certain behavior of computers/software. Or searching the internet. Anyway (according to the description of the conversation) the customer knew that the question mark is an invalid character, and still tried to use it for a filename. Which led to unexpected behavior&#8230;&#8230;. I sure hope this customer wasn&#39;t a developer.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-876403">
				<div id="div-comment-876403" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Dan Bugglin</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101124-00/?p=12213#comment-876403">
			November 24, 2010 at 7:54 am</a>		</div>

		<p>U+F03F is not the same character as U+003F so it is valid. &nbsp;It&#39;s as simple as that.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-876413">
				<div id="div-comment-876413" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Dan Bugglin</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101124-00/?p=12213#comment-876413">
			November 24, 2010 at 7:54 am</a>		</div>

		<p>U+F03F is not the same character as U+003F so it is valid. &nbsp;It&#39;s as simple as that.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-876423">
				<div id="div-comment-876423" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Adam Rosenfield</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101124-00/?p=12213#comment-876423">
			November 24, 2010 at 8:10 am</a>		</div>

		<p>@Dan Bugglin: I didn&#39;t say it was invalid. &nbsp;I was merely observing an interesting side effect: if you type U+F03F, it&#39;s displayed as a middle dot, but when you actually save it to disk, it&#39;s stored as U+003F in NTFS. &nbsp;You can verify this by writing a short program that calls CreateFileW() with the raw filename containing U+003F in it.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-876433">
				<div id="div-comment-876433" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Dan Bugglin</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101124-00/?p=12213#comment-876433">
			November 24, 2010 at 8:18 am</a>		</div>

		<p>Interesting. &nbsp;Can you manipulate the file from Explorer and other apps, or do they try to name it using a normal question mark and thus fail to open it? &nbsp;If you can&#39;t delete the file normally it seems like the sort of thing malware would abuse, so I wouldn&#39;t rely on Microsoft not removing this behavior in a security patch down the line.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-876443">
				<div id="div-comment-876443" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Random832</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101124-00/?p=12213#comment-876443">
			November 24, 2010 at 8:21 am</a>		</div>

		<p>That&#39;s actually just how cygwin handles filenames with &#39;illegal&#39; characters &#8211; even though NTFS supports question marks cygwin overlays the win32 api which blocks them at that level.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-876453">
				<div id="div-comment-876453" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Random832</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101124-00/?p=12213#comment-876453">
			November 24, 2010 at 8:27 am</a>		</div>

		<p>[sorry for double posting] I couldn&#39;t duplicate your result with a test program &#8211; CreateFileW just gives ERROR_INVALID_NAME. Cygwin reference here: <a rel="nofollow" target="_new" href="http://www.cygwin.com/cygwin-ug-net/using-specialnames.html" rel="nofollow">http://www.cygwin.com/&#8230;/using-specialnames.html</a></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-876463">
				<div id="div-comment-876463" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Adam Rosenfield</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101124-00/?p=12213#comment-876463">
			November 24, 2010 at 8:36 am</a>		</div>

		<p>Yep, I can still manipulate it with Explorer and other apps. &nbsp;It&#39;s treated just like any other weird character &#8212; you wouldn&#39;t even know that it&#39;s not a middle dot unless you started enumerating the directory contents yourself with FindFirstFileW/FindNextFileW. &nbsp;Firefox displays it with a placeholder box character (a box with F03F written in the corners), but as far as I can tell no programs have any problems reading, writing, renaming, or deleting such files.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-876483">
				<div id="div-comment-876483" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">rsola</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101124-00/?p=12213#comment-876483">
			November 24, 2010 at 9:04 am</a>		</div>

		<p>A thing that puzzles me a bit is the apparently inconsistent behavior regarding some wildcard patterns in the common file dialogs and in other APIs like FindFirstFile or programs like the Windows command-line interpreter (Cmd.exe). I know those subtleties were present at least on Windows 95 and Windows NT 4.0 by means of the &quot;new Windows shell&quot;. Some older versions of Windows NT may have supported long filenames before Windows 95 was released, perhaps starting at Windows NT 3.5, I don&#39;t know for sure because I can&#39;t test them.</p>
<p>A simple example of extraneous pattern is &quot;*.&quot;. Depending on how and where it is used, it might mean &quot;all filenames with no extension&quot; (the old DOS way) or &quot;all filenames ending with a dot&quot;, which is illegal in the Windows API (so it wouldn&#39;t normally return any filename), but possible at the NT API level and the POSIX subsystem.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-876493">
				<div id="div-comment-876493" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">rsola</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101124-00/?p=12213#comment-876493">
			November 24, 2010 at 9:04 am</a>		</div>

		<p>A thing that puzzles me a bit is the apparently inconsistent behavior regarding some wildcard patterns in the common file dialogs and in other APIs like FindFirstFile or programs like the Windows command-line interpreter (Cmd.exe). I know those subtleties were present at least on Windows 95 and Windows NT 4.0 by means of the &quot;new Windows shell&quot;. Some older versions of Windows NT may have supported long filenames before Windows 95 was released, perhaps starting at Windows NT 3.5, I don&#39;t know for sure because I can&#39;t test them.</p>
<p>A simple example of extraneous pattern is &quot;*.&quot;. Depending on how and where it is used, it might mean &quot;all filenames with no extension&quot; (the old DOS way) or &quot;all filenames ending with a dot&quot;, which is illegal in the Windows API (so it wouldn&#39;t normally return any filename), but possible at the NT API level and the POSIX subsystem.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-876503">
				<div id="div-comment-876503" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">rsola</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101124-00/?p=12213#comment-876503">
			November 24, 2010 at 9:07 am</a>		</div>

		<p>Sorry for the duplication. Sometimes I don&#39;t know if the comment was accepted.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-876513">
				<div id="div-comment-876513" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Emtucifor</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101124-00/?p=12213#comment-876513">
			November 24, 2010 at 9:13 am</a>		</div>

		<p>It&#39;s funny that people don&#39;t know this. I use it all the time, mostly to navigate to a desired path through the keyboard. You can also use &quot;move up one directory&quot; which is .. and you can type the single names of folders to move into them. How can anyone use a computer for long and not know that you can do this?</p>
<p>In regards to anyone who &quot;isn&#39;t able to duplicate this&quot;, there are SOME styles or modes of file open/save dialogs that do not allow typing.</p>
<p>Programmers: These file dialogs suck. Do not use them in your programs. They tick me off. Learn how to pass in the correct parameters to the Windows API to give the new extended functionality so that people can type rather than being forced to use the mouse. Seriously. Don&#39;t be stupid with your software. Some of your potential customers can type and do so because it&#39;s faster than using the mouse.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-876523">
				<div id="div-comment-876523" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Troll</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101124-00/?p=12213#comment-876523">
			November 24, 2010 at 9:18 am</a>		</div>

		<p>Thankfully with Vista, Explorer got it as well thru Windows Search. XP users can also get it by installing StExBar. The latest version behaves like Windows Search, version 1.5.1 and earlier had true wildcard selection.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-876563">
				<div id="div-comment-876563" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">David Heffernan</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101124-00/?p=12213#comment-876563">
			November 24, 2010 at 12:01 pm</a>		</div>

		<p>I can barely believe that common file dialogs started at Win 3.1. &nbsp;As my first Windows was 3.11 for Workgroups I guess I don&#39;t recall what it was like before they existed. &nbsp;Can anyone remember what the prevailing apps of the day did before the common dialogs? &nbsp;Did every app really write their own file dialog?</p>
<div class="post">[<i>Yes, every app wrote their own custom file dialog. That&#39;s why we have the DlgDirList function. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-876573">
				<div id="div-comment-876573" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Hans</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101124-00/?p=12213#comment-876573">
			November 24, 2010 at 12:08 pm</a>		</div>

		<p>Sure windows 3.1. had common file dialog, see</p>
<p><a rel="nofollow" target="_new" href="http://insanecoding.blogspot.com/2007/03/file-dialogs.html" rel="nofollow">insanecoding.blogspot.com/&#8230;/file-dialogs.html</a></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-876583">
				<div id="div-comment-876583" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">David Heffernan</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101124-00/?p=12213#comment-876583">
			November 24, 2010 at 12:29 pm</a>		</div>

		<p>DlgDirList: wow, what an awesome function! &nbsp;I love the Windows file dialogs, especially the awesome Vista one which allows you to search.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-876593">
				<div id="div-comment-876593" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">David Heffernan</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101124-00/?p=12213#comment-876593">
			November 24, 2010 at 12:33 pm</a>		</div>

		<p>@Hans thanks for repeating what Raymond stated and letting us know that Win 3.1 had common file dialogs. &nbsp;That article you linked to made me laugh. &nbsp;Who knew about Windows 4 and Windows 5? &nbsp;I&#39;m dying to learn more about them!!</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-876373">
				<div id="div-comment-876373" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Dan Bugglin</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101124-00/?p=12213#comment-876373">
			November 24, 2010 at 7:23 am</a>		</div>

		<p>I regularly type the filter * into dialog boxes that do not have an &quot;All Files&quot; drop down option to filter by * that way.</p>
<p>@Sam sounds more like whoever coded the dialogs (or extended the normal dialogs, which is what I thought Office did, not sure) didn&#39;t know about this feature either!</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-876613">
				<div id="div-comment-876613" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Henke37</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101124-00/?p=12213#comment-876613">
			November 24, 2010 at 3:46 pm</a>		</div>

		<p>About not knowing about things despite using computers for a long time, try this: shift+insert. You&#39;d be lucky to know someone who can recall what that does without either trying it or looking it up.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-876623">
				<div id="div-comment-876623" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">djhayman</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101124-00/?p=12213#comment-876623">
			November 24, 2010 at 4:00 pm</a>		</div>

		<p>Shift+Delete = Cut</p>
<p>Shift+Insert = Paste</p>
<p>Sometimes, I accidentally hit Shift+Delete while moving the text selection around with the keyboard (Ctrl+Shift+Home or Ctrl+Shift+End), and it still stops me dead in my tracks wondering what I just did &nbsp;;-)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-876473">
				<div id="div-comment-876473" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Adam Rosenfield</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101124-00/?p=12213#comment-876473">
			November 24, 2010 at 8:44 am</a>		</div>

		<p>@Random832: Oh shoot, you&#39;re right, almost all of what I&#39;ve said here is wrong. &nbsp;I started with Cygwin to create the file with a question mark in its name and I didn&#39;t realize that it was *Cygwin* that was translating U+003F to U+F03F. &nbsp;U+003F _is_ a legal character in NTFS, but it&#39;s not supported by Windows even at the CreateFileW level. &nbsp;At that point, everything was looking at U+F03F and treating it normally. &nbsp;I wonder how Windows would react, though, if some other OS put a file on the file system that did have U+003F in the filename.</p>
<p>Sorry for the incorrect information.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-876633">
				<div id="div-comment-876633" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Brian (different Brian)</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101124-00/?p=12213#comment-876633">
			November 24, 2010 at 4:55 pm</a>		</div>

		<p>It&#39;s funny the things we know and the things we don&#39;t. &nbsp;I use &lt;shift&gt;+insert all the time (it&#39;s paste, and it works in some places that &lt;ctrl&gt;-v doesn&#39;t), but I&#39;d never thought of using wildcards (globbing) in dialogs. &nbsp;Note that I come from DOS 3.3, have used Linux for a decade, and have hotkeys to launch cygwin in a putty terminal on my Windows 7 box at home. &nbsp;I write simple little inline loops to do things while I&#39;m navigating around on a command line, but I would never expect them to work in a file dialog.</p>
<p>One other little UI thing; &nbsp;going from Windows XP to Windows 7 broke my flow for quite a while because I had originally stumbled on different ways of using the Explorer shell back in Windows 95. &nbsp;To get to the address bar and type a directory path I&#39;d &lt;win&gt;-E then F4 F4, which would highlight the address bar and I&#39;d start typing. &nbsp;Then it was &quot;broken&quot; in Win7. &nbsp;A coworker said &quot;just use &lt;alt&gt;-D&quot;. &nbsp;Ditto for backspace vs &lt;alt&gt;-up.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-876533">
				<div id="div-comment-876533" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Alex</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101124-00/?p=12213#comment-876533">
			November 24, 2010 at 9:27 am</a>		</div>

		<p>Really funny people don&#39;t know it, yep. I have never (well rarely) used the drop down for file types. You can&#39;t navigate it quickly AND precisely enough for filtering in a program that has a lot of filters. So I basically always type *.XXX or simply *&lt;enter&gt;, when the default is say, some obscure MS format but I really want to import a CSV file and there are only CSV files in the directory anyway.</p>
<p>Also great: You already are at the folder your files are located at in explorer and now you want to open a bunch of files. Copy the URL from the location bar (you all have it enabled, right?) and paste the URL into the open dialog. Now hit enter and you are there. I can&#39;t believe that there are still programs out there though, where this is greeted with an error message that the program can&#39;t open &quot;folder xyz&quot;. Unbelievably stupid!</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-876643">
				<div id="div-comment-876643" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Thank You different Brian</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101124-00/?p=12213#comment-876643">
			November 24, 2010 at 6:04 pm</a>		</div>

		<p>&quot;Ditto for backspace vs &lt;alt&gt;-up&quot;</p>
<p>THANK YOU VERY MUCH!!! &nbsp;That has made me so angry the occasional times I have had to use Vista / Win7. &nbsp;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-876553">
				<div id="div-comment-876553" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101124-00/?p=12213#comment-876553">
			November 24, 2010 at 11:01 am</a>		</div>

		<p>Just to clarify, it is *not* Windows that is storing question marks as U+F03F but Cygwin. Windows is displaying the middle dot because it doesn&#39;t know what glyph to use. If you type U+F03F character into the filename it shows up as question mark in Cygwin because that&#39;s what Cygwin does.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-876663">
				<div id="div-comment-876663" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Jon</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101124-00/?p=12213#comment-876663">
			November 24, 2010 at 7:45 pm</a>		</div>

		<p>Ah, discoverability. Hint to Microsoft UI developers: Tooltips.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-maurits odd alt thread-odd thread-alt depth-1" id="comment-876603">
				<div id="div-comment-876603" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Maurits+%5BMSFT%5D' rel='external nofollow' class='url'>Maurits [MSFT]</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101124-00/?p=12213#comment-876603">
			November 24, 2010 at 1:40 pm</a>		</div>

		<p>&gt; navigating to a new folder (like  or *)</p>
<p>, I believe. But *?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-876693">
				<div id="div-comment-876693" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joe</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101124-00/?p=12213#comment-876693">
			November 24, 2010 at 8:09 pm</a>		</div>

		<p>One sign that someone has been around since the old days is that thay use &quot;*.*&quot; instead of &quot;*&quot; when doing a FindFirst/FindNext.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-876703">
				<div id="div-comment-876703" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Kyle</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101124-00/?p=12213#comment-876703">
			November 24, 2010 at 9:22 pm</a>		</div>

		<p>&quot;One sign that someone has been around since the old days is that thay use &quot;*.*&quot; instead of &quot;*&quot; when doing a FindFirst/FindNext.&quot;</p>
<p>I *still* find myself using &quot;*.*&quot;.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-876713">
				<div id="div-comment-876713" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Gabe</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101124-00/?p=12213#comment-876713">
			November 24, 2010 at 9:22 pm</a>		</div>

		<p>Joe: I have a coworker who never used Windows before Win95, yet he always uses *.* when he wants all files. He also calls console windows &quot;DOS windows&quot; even though he never used DOS.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-876863">
				<div id="div-comment-876863" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Neil</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101124-00/?p=12213#comment-876863">
			November 25, 2010 at 7:55 am</a>		</div>

		<p>I just realised that I implemented my own file open dialog in a app that I wrote 17 years ago. And yes, it seems I faithfully copied the Windows 3.1/NT3.51 bug ;-)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-876733">
				<div id="div-comment-876733" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Cheong</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101124-00/?p=12213#comment-876733">
			November 25, 2010 at 12:26 am</a>		</div>

		<p>I *still* find myself using &quot;*.*&quot;. +1</p>
<p>Actually if you pay attention to those applications offering &quot;All files&quot; in file filter, most of them still using &quot;*.*&quot;.</p>
<p>For a related trick, I remember that in the win98 days, I used to type &quot;\localhost&quot; and then &quot;..&quot; to view all computers in the file dialog (&quot;\localhost..&quot; won&#39;t work). I checked this trick and confirmed it still works in Win7.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-876743">
				<div id="div-comment-876743" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Engywuck</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101124-00/?p=12213#comment-876743">
			November 25, 2010 at 12:47 am</a>		</div>

		<p>It&#39;s perfectly possible to create Files on a FAT or NTFS partition which are undeletable by Winows. Just mount the partition in the Linux distribution of your choice and generate them&#8230;</p>
<p>Mind you, it&#39;s even possible to create files in Linux which are non (easily) removable again in the same OS. just try to rm a file called &quot;*&quot; (without the quotes) ;-) Yes, you can do so by escaping the *, but you have to do so (and know about). Some years ago I knew some GUI programs which didn&#39;t&#8230;. Other nice candidates are &quot;.txt, ?.[ etc :D Essentially Bobby Tables for file names.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-876943">
				<div id="div-comment-876943" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">AsmGuru62</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101124-00/?p=12213#comment-876943">
			November 25, 2010 at 9:57 am</a>		</div>

		<p>&quot;17 years&quot;?!.. nice.</p>
<p>I just did my custom File Dialog last year &#8211; it loads about 40 times faster than the common one provided by Windows. Obviously, CoInitialize, etc. takes a long time.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-876753">
				<div id="div-comment-876753" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Neil</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101124-00/?p=12213#comment-876753">
			November 25, 2010 at 2:28 am</a>		</div>

		<p>NT3.51 has a bug in its common file dialog in that it doesn&#39;t filter for duplicates, so something like *t*;*x* will show you files containing both t and x twice.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-876763">
				<div id="div-comment-876763" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Karellen</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101124-00/?p=12213#comment-876763">
			November 25, 2010 at 5:20 am</a>		</div>

		<p>@Engywuck: Well, yes, if you don&#39;t escape or quote shell special characters when you&#39;re working from a shell, then the shell will interpret them as special characters. The solution is obviously to escape or quote them. Why is that surprising? Or use a different shell which uses different special characters.</p>
<p>I am somewhat suspicious about your claim that there were GUI programs which didn&#39;t escape &quot;*&quot; &#8211; that implies that the GUI was not just spawning an external program (e.g. &quot;rm&quot;) to delete a selected file, but spawning a shell (which is what does the &quot;*&quot; expansion) to run the program, which seems an incredibly round-about way of doing things. Why would the GUI app not just call unlink(2) directly? Can you remember the name of this app?</p>
<p>Going even more off-topic (sorry) &#8211; one other useful hint for working with oddly-named files from a shell is prefixing individual filenames with &quot;./&quot;, or prefixing a list of filenames with the option &quot;&#8211;&quot;, to prevent programs treating a filename beginning with a hyphen as an option rather than a filename; e.g. &quot;rm ./-f&quot; or &quot;rm &#8212; -f&quot;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-dean-harding odd alt thread-odd thread-alt depth-1" id="comment-877063">
				<div id="div-comment-877063" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Dean+Harding' rel='external nofollow' class='url'>Dean Harding</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101124-00/?p=12213#comment-877063">
			November 25, 2010 at 6:07 pm</a>		</div>

		<p>@AsmGuru62: How slowly is the built-in file dialog loading for you anyway? Only takes a fraction of a second for me&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-877223">
				<div id="div-comment-877223" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Cherry</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101124-00/?p=12213#comment-877223">
			November 26, 2010 at 8:46 am</a>		</div>

		<p>@Adam Rosenfield: You can actually create files and folders with illegal characters in it in Windows. This works on the command line, when you escape the name with the prefix &quot;\?&quot; which disables name parsing (as far as I know) and put it between double quotes.</p>
<p>Examples (just folders here):</p>
<p>md &quot;\?c: &quot;</p>
<p>&#8230;creates a folder with a space as name.</p>
<p>md &quot;\?c:nul&quot;</p>
<p>&#8230;creates a folder with the name &quot;nul&quot;. If you try to rename that folder in Windows Vista or 7, you get an infinite error loop.</p>
<p>md &quot;\?c:&#8230;&quot;</p>
<p>&#8230;creates a folder with three dots as name.</p>
<ul>
<li>etc.</li>
</ul>
<p>Best regards,</p>
<p>Cherry</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-877463">
				<div id="div-comment-877463" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Engywuck</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101124-00/?p=12213#comment-877463">
			November 29, 2010 at 12:43 am</a>		</div>

		<p>@Karellen: sorry, this was in KDE 2 times, so I don&#39;t remember the name. But yes, as far as I recall they essentially were a nice GUI on a sort-of-shellscript that didn&#39;t excape properly.</p>
<p>And sure, we know how to delete those files (or even the trick of adding a &quot;-f&quot; file so &quot;xyz *&quot; gets this flag, but I&#39;ve seen too many people struggle</p>
<p>@Cherry: thanks for the hints. Just tested them :) One difference for me: the &quot;nul&quot; folder only gave one error message when trying to rename via Explorer. Something about &quot;too big for the file system&quot;. Oh, and it wants admin privileges for renaming&#8230;. Tested on an USB stick and Win7 Pro, in case this matters</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-877513">
				<div id="div-comment-877513" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Cherry</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101124-00/?p=12213#comment-877513">
			November 29, 2010 at 8:29 am</a>		</div>

		<p>@Engywuck: Oh, I just tested it and found out the infinite error loop only happens when the folder is on the desktop.</p>
<p>@Adam Rosenfield: Yes, you are right, but that still let&#39;s you experience some basic weirdness of several applications or Windows itself when an invalid filename is encountered.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-877543">
				<div id="div-comment-877543" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Cesar</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101124-00/?p=12213#comment-877543">
			November 29, 2010 at 10:34 am</a>		</div>

		<p>Since everyone seems to be talking about illegal characters and escapes, let me leave a somewhat related link here: &quot;Fixing Unix/Linux/POSIX Filenames:</p>
<p>Control Characters (such as Newline), Leading Dashes, and Other Problems&quot; by David A. Wheeler, at <a rel="nofollow" target="_new" href="http://www.dwheeler.com/essays/fixing-unix-linux-filenames.html" rel="nofollow">http://www.dwheeler.com/&#8230;/fixing-unix-linux-filenames.html</a></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-yuhong-bao even thread-even depth-1" id="comment-877613">
				<div id="div-comment-877613" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Yuhong+Bao' rel='external nofollow' class='url'>Yuhong Bao</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101124-00/?p=12213#comment-877613">
			November 29, 2010 at 11:23 am</a>		</div>

		<p>&quot;He also calls console windows &quot;DOS windows&quot; even though he never used DOS.&quot;</p>
<p>Technically, in Win9x console windows really were DOS windows. It was NT where console windows were not DOS windows, even though NT prior to Windows 2000 misleadingly called the shortcut the &quot;MS-DOS Prompt&quot;.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-877503">
				<div id="div-comment-877503" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Adam Rosenfield</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101124-00/?p=12213#comment-877503">
			November 29, 2010 at 7:39 am</a>		</div>

		<p>@Cherry: That allows you to create filenames with illegal *whole names*, but it still does not let you create filenames with illegal *characters* such as ? or *. &nbsp;When you use the \? syntax, yes, it disables filename parsing, which allows you to control the exact path that gets passed to CreateFileW, but it doesn&#39;t change whether or not CreateFileW accepts your filename or not.</p>
<p>CreateFileW fails with ERROR_INVALID_NAME (&quot;The filename, directory name, or volume label syntax is incorrect.&quot;) if you pass in a filename containing an illegal character, whether or not you use the \? prefix.</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>