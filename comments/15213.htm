<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (62)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-803803">
				<div id="div-comment-803803" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">bahbar</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100120-00/?p=15213#comment-803803">
			January 20, 2010 at 7:05 am</a>		</div>

		<p>Ugh. My eyes! The goggles, they do nothing!</p>
<p>Are you sure you want to keep that code as is ? Think of the copy-paste-happy coders out there.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-803813">
				<div id="div-comment-803813" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Marquess</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100120-00/?p=15213#comment-803813">
			January 20, 2010 at 7:08 am</a>		</div>

		<p>Wow, just wow. This is wrong in at least three different ways &#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-803833">
				<div id="div-comment-803833" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Matt Fisher</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100120-00/?p=15213#comment-803833">
			January 20, 2010 at 7:13 am</a>		</div>

		<p><a href="http://blogs.msdn.com/oldnewthing/archive/2009/12/04/9932270.aspx" rel="nofollow"></a> They could&#8217;ve at least done a binary search&#8230; &nbsp;:P</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-803843">
				<div id="div-comment-803843" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">gedoe</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100120-00/?p=15213#comment-803843">
			January 20, 2010 at 7:23 am</a>		</div>

		<p>For the happy copiers amongst us</p>
<p><a rel="nofollow" target="_new" href="http://blogs.msdn.com/oldnewthing/archive/2006/09/27/773741.aspx" rel="nofollow">http://blogs.msdn.com/oldnewthing/archive/2006/09/27/773741.aspx</a></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-803873">
				<div id="div-comment-803873" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Robert</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100120-00/?p=15213#comment-803873">
			January 20, 2010 at 8:25 am</a>		</div>

		<p>Ooow. &nbsp;oOOoooww. &nbsp;OOOOOWWWWWWWW.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-803883">
				<div id="div-comment-803883" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Mc</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100120-00/?p=15213#comment-803883">
			January 20, 2010 at 8:29 am</a>		</div>

		<p>The company might be out of business but the programmer may still be at large in the community.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-803893">
				<div id="div-comment-803893" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">William H.</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100120-00/?p=15213#comment-803893">
			January 20, 2010 at 8:35 am</a>		</div>

		<p>Raymond, please, explain what&#8217;s wrong with that code.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-803913">
				<div id="div-comment-803913" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">David Walker</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100120-00/?p=15213#comment-803913">
			January 20, 2010 at 9:01 am</a>		</div>

		<p>There are at least two errors: &nbsp;One is that IsBadReadPtr should never be used. &nbsp;The other is obvious.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-803933">
				<div id="div-comment-803933" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">JS</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100120-00/?p=15213#comment-803933">
			January 20, 2010 at 9:14 am</a>		</div>

		<p>IsBadReadPtr() will only tell you whether the page is valid for your process (i.e., whether it can be read without an access violation). &nbsp;It will not prevent you from trashing other buffers belonging to your process and causing a crash or worse.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-803943">
				<div id="div-comment-803943" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">ScottF</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100120-00/?p=15213#comment-803943">
			January 20, 2010 at 9:19 am</a>		</div>

		<p>&lt;i&gt;Raymond, please, explain what&#8217;s wrong with that code.&lt;/i&gt;</p>
<p>And</p>
<p>4) What if the buffer is less that 16k?</p>
<p>That doesn&#8217;t mean that IsBadReadPtr will fail. &nbsp;Think if you have two 8k buffers that are allocated sequentially. &nbsp;Pass in the first buffer and this function will tell you it&#8217;s 16k. &nbsp;Boom buffer overflow.</p>
<p>In reality it&#8217;s unlikely that the memory past your buffer isn&#8217;t readable. &nbsp;Maybe it&#8217;s unallocated on the heap, farther down the stack, etc. &nbsp;This code will probably return 16k for almost every pointer passed to it.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-803963">
				<div id="div-comment-803963" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">GWO</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100120-00/?p=15213#comment-803963">
			January 20, 2010 at 9:27 am</a>		</div>

		<p>Which leaves the obvious question: can what this code is trying to do be done with the Win32 API? Even under limited circumstances (e.g. the pointer must&#8217;ve been returned by malloc())? &nbsp;In standard C / C++, I&#8217;m certain it cannot (if the buffer is just a pointer) but implementations need to store this information for an efficient free(). &nbsp;Do any of them export it for the user?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-803983">
				<div id="div-comment-803983" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Plompan</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100120-00/?p=15213#comment-803983">
			January 20, 2010 at 9:53 am</a>		</div>

		<p>This is a terrifying example that shows exactly why universities do the entire software engineering profession a disservice by providing CS degrees. &nbsp;Most programmers would be aided immensely by studying software engineering instead of computer science. &nbsp;I&#8217;m with Spolsky on this one. &nbsp;The guy who wrote this code was probably a low-to-middle of the class CS graduate. &nbsp;Knows big-O, when to use a list vs. a hash vs. an array, understands recursion at a basic level&#8230;but clearly can&#8217;t write quality code in a real-life environment. &nbsp;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-803993">
				<div id="div-comment-803993" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Gabe</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100120-00/?p=15213#comment-803993">
			January 20, 2010 at 10:07 am</a>		</div>

		<p>I should hope they&#8217;re out of business! It&#8217;s much more efficient to just start from zero! In fact, since the running time is dominated by page faults, this will probably be faster than even a binary search because it only incurs a single fault:</p>
<p>size = 0;</p>
<p>while (size &lt; 16384 &amp;&amp; !IsBadReadPtr(buffer, size)) {</p>
<p>&nbsp; &nbsp;size++;</p>
<p>}</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-804013">
				<div id="div-comment-804013" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Kyle</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100120-00/?p=15213#comment-804013">
			January 20, 2010 at 10:20 am</a>		</div>

		<p>Gabe, if that&#8217;s not sarcasm, then God help the quality of the software produced in the next 20 years.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-804023">
				<div id="div-comment-804023" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">stumpy</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100120-00/?p=15213#comment-804023">
			January 20, 2010 at 10:21 am</a>		</div>

		<p>@Gabe: Your logic skills astound me.</p>
<p>1: This code is bad</p>
<p>2: I personally think no CS graduate can code</p>
<p>3: This code must be written by someone who can&#8217;t code</p>
<p>4: therefore it must have been written by a CS graduate</p>
<p>5: And this proves that no CS graduate can code. q.e.d.</p>
<p>There are a good handful of flaws in this code. But there&#8217;s just as many flaws in your logic. And before you rant too much about others being bad programmers, I&#8217;d just like to interject that a basic understanding of logic tends to be important to a programmer. Perhaps you should have studied CS after all?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-804043">
				<div id="div-comment-804043" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Kyle</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100120-00/?p=15213#comment-804043">
			January 20, 2010 at 10:29 am</a>		</div>

		<p>stumpy, while I would agree that there are plenty of poorly trained CS graduates, there are plenty of them (including myself) who seriously believe in reading documentation and actually making an attempt to understand the technology behind the API calls. &nbsp;Blanket statements about CS not teaching anything are faulty at best.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-804053">
				<div id="div-comment-804053" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">J</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100120-00/?p=15213#comment-804053">
			January 20, 2010 at 10:58 am</a>		</div>

		<p>@Plompan: &nbsp;Let&#8217;s abolish universities and replace them with trade schools so we&#8217;ll never see this type of code again.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-804063">
				<div id="div-comment-804063" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Random832</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100120-00/?p=15213#comment-804063">
			January 20, 2010 at 11:34 am</a>		</div>

		<p>@ScottF &quot;Pass in the first buffer and this function will tell you it&#8217;s 16k. &nbsp;Boom buffer overflow.&quot;</p>
<p>Not to mention even if you have only one buffer, on x86 you&#8217;ve got the rest of the already-used stack (i.e. the return address and such, <em>exactly</em> what buffer overflow exploits target) after it in memory.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-804073">
				<div id="div-comment-804073" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Anonymous</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100120-00/?p=15213#comment-804073">
			January 20, 2010 at 11:35 am</a>		</div>

		<p>@Mike Dimmick</p>
<p>_msize() is garbage. &nbsp;If I saw this in a code review it would be a huge red flag and I would no longer trust that developer to do anything reasonable. &nbsp;The real way is to track the size of your buffers yourself, not rely on some silly non-standard malloc extension to free you from your own laziness.</p>
<p>The fundamental issue here is that people who don&#8217;t know C very well think that there&#8217;s a way to determine a size given a void*. &nbsp;There isn&#8217;t.</p>
<p>When people want to know how, they should be told this. &nbsp;Not some sissy answer like, &quot;oh, but you can non-portably check if the pages are mapped into your process&quot;, or, &quot;oh, if you&#8217;re using Visual Studio, you can ask the malloc implementation&quot;. &nbsp;As has been mentioned, these techniques have their flaws. &nbsp;Much worse, saying that these techniques are OK only encourages people to write bad code.</p>
<p>If people want to work in C, they should learn how to write C code, and the common idioms, such as keeping track of the length of your buffers. &nbsp;If they are unwilling to do this they should explore another language before thinking of what crazy hack they can do to work around the gaps in their understanding.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-804083">
				<div id="div-comment-804083" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">John</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100120-00/?p=15213#comment-804083">
			January 20, 2010 at 11:35 am</a>		</div>

		<p>@Gabe: Nice!</p>
<p>Come on, people; it was obviously sarcastic.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-804093">
				<div id="div-comment-804093" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.roseharp.com' rel='external nofollow' class='url'>Timothy Byrd</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100120-00/?p=15213#comment-804093">
			January 20, 2010 at 11:57 am</a>		</div>

		<p>Hey Raymond,</p>
<p>Now that code must be good because it isn&#8217;t in italics, right?</p>
<p>&#8212; T</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-804123">
				<div id="div-comment-804123" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Tony Cox [MSFT]</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100120-00/?p=15213#comment-804123">
			January 20, 2010 at 1:15 pm</a>		</div>

		<p><a href="http://blogs.msdn.com/oldnewthing/archive/2009/12/04/9932270.aspx" rel="nofollow"></a> I&#8217;m actually less concerned about the person who wrote this code than I am about that person&#8217;s manager/mentor.</p>
<p>Junior developers do dumb things. That doesn&#8217;t necessarily make them stupid or bad people, it just makes them junior. I&#8217;ve seen all sorts of similarly misguided code from junior developers who simply didn&#8217;t know any better. The key is whether you have a process in place that (a) prevents stuff like this from shipping, and (b) trains developers so that they don&#8217;t make this kind of mistake in future.</p>
<p>The majority of training should be on-the-job and is often ad hoc. A code snippet like this is a great &#8220;teachable moment&#8221; for a manager/mentor to use with a more junior developer. Use of the Socratic Method with an example like this, letting the junior developer figure out for themselves (with some guidance) why this code is bad, would be a great lesson. They&#8217;ll learn something about memory layout, paging, race conditions, competing concerns of fault tolerance versus fast failure, among other lessons. And it will stick with them because you worked through an actual example based on code they wrote rather than simply being an abstract lesson in a textbook. They&#8217;re more likely to absorb the general principles and apply them later.</p>
<p>The fact that this code made it into production says more about poor management than it does about the (undoubtedly) junior developer who wrote it.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-804133">
				<div id="div-comment-804133" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.16software.com/breevy' rel='external nofollow' class='url'>Patrick</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100120-00/?p=15213#comment-804133">
			January 20, 2010 at 1:46 pm</a>		</div>

		<p>Thanks, fixing my code now as we speak.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-804143">
				<div id="div-comment-804143" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">pulp</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100120-00/?p=15213#comment-804143">
			January 20, 2010 at 1:46 pm</a>		</div>

		<p>@bahbar: too late, I already copied it</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-804163">
				<div id="div-comment-804163" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Absotively</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100120-00/?p=15213#comment-804163">
			January 20, 2010 at 2:42 pm</a>		</div>

		<p>Crescens2K: &nbsp;Gosh, thanks. &nbsp;It had never occurred to me to track the size of a buffer.</p>
<p>Next thing you know, you&#8217;ll be suggesting something radical, like making sure to free memory that you&#8217;ve allocated.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-804173">
				<div id="div-comment-804173" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">alephnaut</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100120-00/?p=15213#comment-804173">
			January 20, 2010 at 3:11 pm</a>		</div>

		<p>@stumpy,</p>
<p>When a pipe bursts in your house you don&#8217;t hire a metallurgist to fix it you hire a plumber.</p>
<p>When your car breaks down you don&#8217;t hire a mechanical engineer to fix it, you hire a mechanic.</p>
<p>When you need to build a house you don&#8217;t hire a materials scientist, you hire a builder.</p>
<p>When you need to build software why on earth would you hire an electrical engineer? &nbsp;Or a computer engineer?</p>
<p>Unless you&#8217;re building electrical components (for EEs) or computers (for CEs) hire the right degree for the job.</p>
<p>During undergrad CS I took a course on electronics but am certainly not qualified to build a city&#8217;s powergrid.</p>
<p>Just say no to computer programming by anyone other than CS or SoftEng grads.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-804183">
				<div id="div-comment-804183" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Kyle</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100120-00/?p=15213#comment-804183">
			January 20, 2010 at 3:25 pm</a>		</div>

		<p>Tony hit it right on the money. &nbsp;This should have become a teachable moment for an inexperienced developer, not production code.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-804193">
				<div id="div-comment-804193" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Nik</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100120-00/?p=15213#comment-804193">
			January 20, 2010 at 3:32 pm</a>		</div>

		<p>Raymond, your post is already #3 in Google results (#11 on Bing) for &quot;determine the size of a buffer&quot;.</p>
<p>So it is virtually guaranteed that this code will be copied and used dozens of times by eager young programmers all around the world. &nbsp;Yay !</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-804203">
				<div id="div-comment-804203" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Dave</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100120-00/?p=15213#comment-804203">
			January 20, 2010 at 3:55 pm</a>		</div>

		<p>@Plompan &#8211; I (as a CS dropout) chose to leave my university&#8217;s CS program due to the poor quality of education I was receiving there. Having taught myself a lot prior to college I only felt they were undoing that which I had learned prior. I haven&#8217;t regretted that choice once. For me it was simply an example of &quot;Those who can, do. Those who can’t, teach.&quot; Yes, I know that&#8217;s a blanket statement and not all programs or teachers are bad, but I ended up being better off pocketing the money I would have paid out to the college.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-804213">
				<div id="div-comment-804213" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">steveg</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100120-00/?p=15213#comment-804213">
			January 20, 2010 at 3:58 pm</a>		</div>

		<p>I like the case where you might allocate MAX_[datatype] when size wraps and all of a sudden IsBadReadPtr is accessing a random address.</p>
<p>To be fair to the original programmer: when was that code written? When did IsBadReadPtr&#8217;s limitations become well-known and documented? If that was written forever ago, well, you know, all of us old-timers have used IsBadReadPtr. Perhaps they didn&#8217;t have the latest MSDN library disc.</p>
<p>The Gen-Y view: &quot;It&#8217;s not optimal code, but meh, these days 16384 anything doesn&#8217;t take that long. Do I really have to test my code?&quot;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-804223">
				<div id="div-comment-804223" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">steveg</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100120-00/?p=15213#comment-804223">
			January 20, 2010 at 4:38 pm</a>		</div>

		<p>@Tony Cox: you work for a very large organisation with full-time testers and managers, your own office and benefits out of this world, so you get the luxury of doing things properly.</p>
<p>I&#8217;m a pretty good programmer, not the best, but you know, stuff I write mostly works. My contract at the moment is &quot;the geek&quot; at a 120 person company with a 5 person IT team (that&#8217;s everyone, from helpdesk to network to the boss). One moment I&#8217;m in meetings with the CEO + COO gathering requirements, the next I&#8217;m debugging a stored procedure, or writing a utility, or doing data analysis, or coding an update for the website.</p>
<p>How much time do I have to think things through? We&#8217;re getting another developer in for two weeks because I&#8217;m overloaded. How much time will I have to test let alone review his work? Almost none.</p>
<p>Is that bad management? Probably. Where&#8217;s the money going to come from, though, to do it properly?</p>
<p>Reality and theory aren&#8217;t always the best bedfellows.</p>
<p>Raymond&#8217;s snippet may or may not work. It&#8217;s provably a timebomb, but you know what, it may not actually matter.</p>
<p>(BTW I totally agree with @Tony Cox, I&#8217;m providing a counterpoint).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-804233">
				<div id="div-comment-804233" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">blah</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100120-00/?p=15213#comment-804233">
			January 20, 2010 at 4:42 pm</a>		</div>

		<p>You guys all missed the proper way to do it with style!</p>
<p>size = sizeof(buffer);</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-803903">
				<div id="div-comment-803903" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Kyle</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100120-00/?p=15213#comment-803903">
			January 20, 2010 at 9:00 am</a>		</div>

		<p>&lt;i&gt;Raymond, please, explain what&#8217;s wrong with that code.&lt;/i&gt;</p>
<p>Are you serious?</p>
<p>This is where it&#8217;s helpful to actually understand the technologies you&#8217;re using, like memory allocation. &nbsp;There are at least the following problems with the function:</p>
<p>1) What if the buffer is larger than 16k?</p>
<p>2) This wastes precious CPU time.</p>
<p>3) It probably won&#8217;t be accurate anyway.</p>
<p>Now, only #3 is really worth responding to. &nbsp;#3 is true because memory access violations are only handled at the page level (4KB on up). &nbsp;So if you allocate something like 5KB, at least two pages are required in the 4KB scenario. &nbsp;Not only that, but if the heap manager places this buffer at the beginning of this two-page region, this function call will succeed for 8KB, even though you only wanted 5KB.</p>
<p>While this doesn&#8217;t necessarily prove that the IsBad***Ptr() functions are crap all around (the link that Raymond provided does that), this &lt;i&gt;does&lt;/i&gt; necessarily prove that in this situation they&#8217;re worthless.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-804243">
				<div id="div-comment-804243" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">tm</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100120-00/?p=15213#comment-804243">
			January 20, 2010 at 5:02 pm</a>		</div>

		<p>This is a terrifying example that shows exactly why universities do the entire programming profession a disservice by providing software engineering degrees. &nbsp;Most programmers would be aided immensely by studying computer science instead of software engineering. &nbsp;Spolsky is an idiot. &nbsp;The guy who wrote this code was probably a middle-to-upper class software engineering graduate. &nbsp;Knows project management, when to write requirement docs vs. agile methodology plans, understands unit testing at a basic level&#8230;but clearly can&#8217;t write quality code in a real-life environment to save his or her life. &nbsp;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-804263">
				<div id="div-comment-804263" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Gaspar</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100120-00/?p=15213#comment-804263">
			January 20, 2010 at 5:06 pm</a>		</div>

		<p>@Nik</p>
<p>I just check and you are right&#8230; &nbsp;And that terrifies me&#8230; &nbsp;X(</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-803953">
				<div id="div-comment-803953" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Mike Dunn</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100120-00/?p=15213#comment-803953">
			January 20, 2010 at 9:25 am</a>		</div>

		<p>*facepalm* </p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-mike-dimmick even thread-even depth-1" id="comment-803973">
				<div id="div-comment-803973" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Mike+Dimmick' rel='external nofollow' class='url'>Mike Dimmick</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100120-00/?p=15213#comment-803973">
			January 20, 2010 at 9:47 am</a>		</div>

		<p>GWO: if it is a heap-allocated buffer allocated with malloc() (and friends), you can use _msize in the Visual C++ runtime to find out how large the block is. If you want to extend a buffer *without* copying it if there isn&#8217;t space, use _expand. realloc() will allocate a new block if it can&#8217;t extend this one, so you have to be prepared to get a new pointer value back.</p>
<p>For code that allocated with LocalAlloc, use LocalSize. For HeapAlloc, use HeapSize. For GlobalAlloc, use GlobalSize. (For the equivalent of _expand, see HeapReAlloc with the HEAP_REALLOC_IN_PLACE_ONLY flag.)</p>
<p>Finally, for CoTaskMemAlloc, use CoGetMalloc to get an IMalloc pointer and call IMalloc::GetSize. There doesn&#8217;t seem to be an equivalent for BSTR (SysAllocString) despite having a SysReAllocString.</p>
<div class=post>[<i>For BSTR, use SysStringLen. Of course, knowing the allocation size doesn&#8217;t tell you the size of the buffer. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-804283">
				<div id="div-comment-804283" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Olivier</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100120-00/?p=15213#comment-804283">
			January 20, 2010 at 5:55 pm</a>		</div>

		<p>I&#8217;m starting my own company and I was searching for a way to determine how to determine the size of a buffer. The solution is right there, I just had to copy/paste.</p>
<p>So thanks to the company &quot;out of business&quot; and Raymond, you saved my company!</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-804293">
				<div id="div-comment-804293" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">BC</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100120-00/?p=15213#comment-804293">
			January 20, 2010 at 6:07 pm</a>		</div>

		<p>MSDN: &#8220;This function is typically used when working with pointers returned from third-party libraries, where you cannot determine the memory management behavior in the third-party DLL.&#8221;</p>
<p>Given that this code is from &#8220;a back-end program on a web server&#8221;, then probably this module needs to rewrite the GET string, and all it gets from the previous module in the pipeline is the location of the string buffer, not the size of the buffer. &nbsp;</p>
<p>It is entirely possible that, originally, the code did the &#8220;right thing&#8221;: allocate a new buffer large enough to hold the original string plus whatever modifications this module needed to make, but, after being put in production, the server started bogging down because every module in the pipeline was doing the &#8220;right thing&#8221;, and the system was spending more time swapping than processing. </p>
<p>Thus resulted this code, which determines if a supplied buffer is large enough to be reused. </p>
<div class=post>[<i>If they were trying to modify a string in-place, wouldn&#8217;t they have used IsBad<u>Write</u>Ptr? Or maybe that&#8217;s the secret joke: Not only did they do it the wrong way, the used the wrong function to do it! -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-804003">
				<div id="div-comment-804003" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Keith</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100120-00/?p=15213#comment-804003">
			January 20, 2010 at 10:13 am</a>		</div>

		<p>*twitch*</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-804033">
				<div id="div-comment-804033" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blog.paulbetts.org' rel='external nofollow' class='url'>Paul Betts</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100120-00/?p=15213#comment-804033">
			January 20, 2010 at 10:29 am</a>		</div>

		<p>I think above every bad code sample you post, you need to have comments like:</p>
<p>// XXX: This is a horrible idea, please don&#8217;t do this.</p>
<p>// XXX: Seriously. A really bad idea.</p>
<p>// XXX: Once again, I can&#8217;t stress enough, the badness of this idea.</p>
<p>size = 16384;</p>
<p>while (size &amp;&amp; IsBadReadPtr(buffer, size)) {</p>
<p>/* &#8230; */</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-804313">
				<div id="div-comment-804313" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Nick</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100120-00/?p=15213#comment-804313">
			January 20, 2010 at 8:06 pm</a>		</div>

		<p>@Nik</p>
<p>What&#8217;s even better is that this blog entry is the #2 Google result for &quot;best way to determine the size of a buffer&quot;</p>
<p><a rel="nofollow" target="_new" href="http://www.google.com/search?q=best+way+to+determine+the+size+of+a+buffer" rel="nofollow">http://www.google.com/search?q=best+way+to+determine+the+size+of+a+buffer</a></p>
<p>:)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-804113">
				<div id="div-comment-804113" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">an_idiot_is_an_idiot_no_matter_what_degrees</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100120-00/?p=15213#comment-804113">
			January 20, 2010 at 12:49 pm</a>		</div>

		<p>Wednesday, January 20, 2010 9:53 AM by Plompan </p>
<p>&gt; This is a terrifying example that shows exactly why universities do the entire software engineering profession a disservice by providing CS degrees. &nbsp;Most programmers would be aided immensely by studying software engineering instead of computer science. &nbsp;I&#8217;m with Spolsky on this one. &nbsp;The guy who wrote this code was probably a low-to-middle of the class CS graduate. &nbsp;Knows big-O, when to use a list vs. a hash vs. an array, understands recursion at a basic level&#8230;but clearly can&#8217;t write quality code in a real-life environment. &nbsp;</p>
<p>===================</p>
<p>Please don&#8217;t confuse a CS graduate with a CS dropout. &nbsp;Raymond&#8217;s example is far more likely the work of the latter.</p>
<p>(And FYI, there *are* software engineering courses at my school&#8217;s CS department.)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-804153">
				<div id="div-comment-804153" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Crescens2k</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100120-00/?p=15213#comment-804153">
			January 20, 2010 at 1:54 pm</a>		</div>

		<p>Well, I can say this for a fact. As a CS graduate I have never ever thought about using code like this.</p>
<p>If I need to know the size of a buffer then I pass the size along with the pointer. I&#8217;m not a lazy programmer so I always put the extra effort into making sure that the code is usable, readable and as safe as I possibly can make it.</p>
<p>For figuring out the size of a buffer using HeapSize etc, with the way the windows Heap functions work at least is that only the address returned which is at the start of the block is the valid value for any of the Heap functions.</p>
<p>What this means is that if you try the following code.</p>
<p>void* mymem;</p>
<p>void* mymem2;</p>
<p>int memsize = 21, retsize;</p>
<p>mymem = HeapAlloc(GetProcessHeap(), 0, memsize);</p>
<p>mymem2 = (void*)((char*)mymem+1);</p>
<p>retsize = HeapSize(GetProcessHeap(), 0, mymem2);</p>
<p>HeapFree(GetProcessHeap(), 0, mymem);</p>
<p>retsize will be -1 after sending a debug breakpoint to a debugger. So really using these functions also only work if they have the same memory address as the start of the block, but it will then return the size of the allocated block not the possible buffer size.</p>
<p>Really, the only sensible way to tell any code the size of a buffer is to give the size along with the buffer. Of course there is bound to be someone out there who could probably mess even that up.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-804333">
				<div id="div-comment-804333" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">porter</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100120-00/?p=15213#comment-804333">
			January 21, 2010 at 12:15 am</a>		</div>

		<p>I thought all CS departments used Java and C# these days&#8230;..</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-804343">
				<div id="div-comment-804343" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Cheong</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100120-00/?p=15213#comment-804343">
			January 21, 2010 at 12:21 am</a>		</div>

		<p>@steveg: I&#8217;d say&#8230; Do it. Then &quot;discard the change and remake it when you have time&quot;&#8230; which usually means never. :P</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-804253">
				<div id="div-comment-804253" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">xiaoguo ge</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100120-00/?p=15213#comment-804253">
			January 20, 2010 at 5:05 pm</a>		</div>

		<p>One of the major concern with the IsBad**Ptr function is that it eats the guard page exception and clears the PAGE_GUARD flag of the tested memory range. But what if this function resets the PAGE_GUARD property of the tested range upon catching the guard page exception? Is it still be a bad idear to use IsBad**Ptr functions?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-804273">
				<div id="div-comment-804273" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Mihai</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100120-00/?p=15213#comment-804273">
			January 20, 2010 at 5:19 pm</a>		</div>

		<p>@steveg</p>
<p>I would ask: &quot;where&#8217;s the money going to come from, though, to do it wrong?&quot;</p>
<p>If you don&#8217;t have money for code reviews, good QE, etc., then you *MUST* take the time to think and do it right.</p>
<p>Does the company have the money to afford 2 days with the software not working? Or a lawsuit? Or a leak of private info that will drive all customers away?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-804353">
				<div id="div-comment-804353" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">M&#233;dinoc</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100120-00/?p=15213#comment-804353">
			January 21, 2010 at 1:58 am</a>		</div>

		<p>This is terrible. They should have used IsBadWritePtr() instead! ;-)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-804303">
				<div id="div-comment-804303" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Cheong</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100120-00/?p=15213#comment-804303">
			January 20, 2010 at 6:16 pm</a>		</div>

		<p>Rather than arguing whether CS or SE subject is doing a disservice, I&#8217;d say that it&#8217;s the &quot;people&quot; who do disservice to the profession.</p>
<p>Perheps universities should consider NEVER allow professors/teaching staffs *who never did get a job and produce any production code for long enough period before* teaching programming courses.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-804363">
				<div id="div-comment-804363" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">fsdg</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100120-00/?p=15213#comment-804363">
			January 21, 2010 at 5:16 am</a>		</div>

		<p>For all the people suggesting the use of _msize and friends, do note that it&#8217;s very possible for memory allocations to be rounded up (i.e. malloc(1) returning a 12-byte sized buffer) so it&#8217;s almost certainly a bad idea to do it.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-804323">
				<div id="div-comment-804323" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">steveg</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100120-00/?p=15213#comment-804323">
			January 20, 2010 at 10:16 pm</a>		</div>

		<p>@Mihai: If you don&#8217;t have money for code reviews, good QE, etc., then you *MUST* take the time to think and do it right.</p>
<p>I hear you, buddy, but reality is a harsh mistress. This is the first time i&#8217;ve worked in a business where I&#8217;m not part of a development team delivering a project (the great consulting adventure).</p>
<p>Here&#8217;s a story. Imagine a fancy new feature on the website that Marketing has been planning for months. And they only tell IT (eg me) a few weeks before they want it to go live.</p>
<p>You say &quot;No.&quot;</p>
<p>They say &quot;But we&#8217;ve already spent $250,000 on advertising and printing etc&quot;</p>
<p>You say &quot;No, I need 2 more days to review the code to reduce the risk of mess up.&quot;</p>
<p>They say &quot;We accept that risk. Do it.&quot;</p>
<p>You say ?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-804373">
				<div id="div-comment-804373" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Tony Cox [MSFT]</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100120-00/?p=15213#comment-804373">
			January 21, 2010 at 6:32 am</a>		</div>

		<p>@steveg</p>
<p>Your example is I&#8217;m sure familiar to many people. Ultimately, business decision makers need to take business decisions, weighing all sorts of competing factors. Is it worse to ship with bug 891, or slip by a month and burn a million dollar marketing campaign? Who knows? It depends on what &#8216;bug 891&#8217; is. Is it &quot;ugly comma splice in third paragraph of readme&quot;, or &quot;electrocutes kittens&quot;?</p>
<p>Good software engineering process isn&#8217;t about guaranteeing perfect software (no software is ever perfect). It&#8217;s about maximizing quality and predictability of development. And, crucially, it&#8217;s about making sure business leaders have information to make good decisions.</p>
<p>If you have sloppy process, you might not even know that bug 891 exists. If you have good process, you hopefully know that it exists (or know that there&#8217;s a risk it exists), and you can make a business decision accordingly.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-804713">
				<div id="div-comment-804713" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Anonymous Coward</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100120-00/?p=15213#comment-804713">
			January 21, 2010 at 3:49 pm</a>		</div>

		<p>Thanks Raymond, this is hilarious. Way better than what I&#8217;ve seen on the DailyWTF recently.</p>
<p>By the way, this article is #1 if you Google for ‘accurate way to determine the size of a buffer’.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-804803">
				<div id="div-comment-804803" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Worf</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100120-00/?p=15213#comment-804803">
			January 21, 2010 at 10:20 pm</a>		</div>

		<p>Actually, I think both CS and SE graduates would benefit from two courses &#8211; assembly language and operating systems. The first answers the &quot;how the machine works&quot; question, and everyone should be able to hand-compile a simple program, and learn what those magic keywords actually do.</p>
<p>The second teaches that the OS is not a diety, and things work in certain ways, and why that malloc() may not do what you expect. Or what page faulting and exception handling actually do internally.</p>
<p>I can&#8217;t tell where that code was written &#8211; be it a trade school, or degree program. It is, however, absolutely horrible and belongs on sites like thedailywtf.com. Hell, that can be rentacoder code.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-804943">
				<div id="div-comment-804943" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Anonymous</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100120-00/?p=15213#comment-804943">
			January 22, 2010 at 10:36 am</a>		</div>

		<p>@Tony Cox [MSFT]</p>
<blockquote><p>
  Junior developers do dumb things. That doesn&#8217;t necessarily make them stupid or bad people, it just makes them junior. I&#8217;ve seen all sorts of similarly misguided code from junior developers who simply didn&#8217;t know any better. The key is whether you have a process in place that (a) prevents stuff like this from shipping, and (b) trains developers so that they don&#8217;t make this kind of mistake in future.
</p></blockquote>
<p>It&#8217;s also an even worse problem for SDETs/QA developers because there isn&#8217;t any mentoring or other corrective forces at work that exist with developers. &nbsp;I&#8217;ve seen many, many atrocities committed in QA code. &nbsp;Senior SDETs are people who were successful at finding bugs, not writing good code.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-805003">
				<div id="div-comment-805003" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Nick</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100120-00/?p=15213#comment-805003">
			January 22, 2010 at 1:04 pm</a>		</div>

		<p>This sounds like the basis for a good game. &nbsp;After Raymond posts a blog entry, the first person to find a generic, non-quoted Google query that returns the new post as the first result wins!</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-805113">
				<div id="div-comment-805113" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">BC</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100120-00/?p=15213#comment-805113">
			January 22, 2010 at 8:15 pm</a>		</div>

		<blockquote><p>
  If they were trying to modify a string in-place, wouldn&#8217;t they have used IsBadWritePtr? Or maybe that&#8217;s the secret joke: Not only did they do it the wrong way, the used the wrong function to do it!
</p></blockquote>
<p>Probably the architecture required that all buffers coming out of any module be writable, so using IsReadPtr is sufficient &#8211; maybe it was thought to be faster. &nbsp;</p>
<p>Probably it was a security thing&#8230; adding a long series of random digits to the GET string, and rather than redefine the module interface to include the buffer-size, it was easier to rewrite the module to in-place overwrite the buffer &#8211; once it was realized that making a copy of each buffer bogged down the server.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-805173">
				<div id="div-comment-805173" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joseph Koss</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100120-00/?p=15213#comment-805173">
			January 23, 2010 at 9:37 am</a>		</div>

		<p>Could it be that the programmer was simply making the best of a bad situation?</p>
<p>If its not their pointer, and buffer overflow had become a mission-critical downtime issue at some point, then this might have been a quick fix to get back to full uptime so that they could go back to working on a full replacement for the entire service?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-805213">
				<div id="div-comment-805213" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Danny</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100120-00/?p=15213#comment-805213">
			January 24, 2010 at 9:00 am</a>		</div>

		<p>Graduate and dropout are words. And only that!!. Bill Gates is a dropout from Harvard, do I need to say more?</p>
<p>So don&#8217;t generalize from that, because both dropouts and graduates can be bad or good programmers.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-805273">
				<div id="div-comment-805273" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Gabe</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100120-00/?p=15213#comment-805273">
			January 24, 2010 at 10:55 pm</a>		</div>

		<p>Joseph Koss: If a programmer was smart, but in a hurry and trying to quickly hack around some buffer overflow causing a fault, they would have started from 0 (as I facetiously suggested in my first comment).</p>
<p>Starting from the end is not only slower (causing potentially thousands of exceptions), but is also liable to give incorrect answers. If buffer[16384] is readable, the bad algorithm will return 16384 as the size, even if the buffer is only 1 byte followed by an unallocated page. If their algorithm started from 0, they would quickly identify the unallocated page and see that the buffer can&#8217;t be more than 1 byte long.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-805283">
				<div id="div-comment-805283" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Nele</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100120-00/?p=15213#comment-805283">
			January 25, 2010 at 6:38 am</a>		</div>

		<p>If you think this company is bad, what about one that wrote IsBadReadPtr in the first place?</p>
<div class=post>[<i><a href="http://blogs.msdn.com/oldnewthing/archive/2009/12/10/9934911.aspx" rel="nofollow">No matter what you do, someone will call you an idiot</a>. First, Windows was idiotic for <u>not</u> having a way to validate pointers, now it&#8217;s idiotic for having a way. (Note that the function was not idiotic when it was first written back in the days of co-operative multi-tasking.) Mind you, having a non-idiotic function doesn&#8217;t prevent people from using it in idiotic ways like this. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>