<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (23)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-337913">
				<div id="div-comment-337913" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">KiwiBlue</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060116-10/?p=32653#comment-337913">
			January 16, 2006 at 10:04 am</a>		</div>

		<p>Is there an IScaryMovie interface?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-337953">
				<div id="div-comment-337953" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.doogal.co.uk' rel='external nofollow' class='url'>Doogal</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060116-10/?p=32653#comment-337953">
			January 16, 2006 at 10:45 am</a>		</div>

		<p>So couldn&#8217;t IMediaPlayer inherit from IDispatch and get_MediaPlayer return an IMediaPlayer interface? Presumably the scripting engine could cope with that and everybody would be happy?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-337973">
				<div id="div-comment-337973" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://erbo@electricminds.org' rel='external nofollow' class='url'>Erbo</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060116-10/?p=32653#comment-337973">
			January 16, 2006 at 11:05 am</a>		</div>

		<p>Doogal: Certainly it could; such interfaces are called &quot;dual interfaces.&quot;  (I can&#8217;t find much info on IMediaPlayer in particular, but it looks like it is NOT a dual interface.)</p>
<p>However, even if you&#8217;re dealing with dual interfaces, you can&#8217;t be sure that any random IDispatch is an instance of your desired dual interface; you have to QueryInterface it and find out.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-337993">
				<div id="div-comment-337993" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Sebastian Redl</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060116-10/?p=32653#comment-337993">
			January 16, 2006 at 11:22 am</a>		</div>

		<p>A search for IActiveMovie3 in MSDN online turns up nothing. How can I find more information on this interface? (Such as its nature: COM interface, Dual interface, pure Dispatch interface.)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-338013">
				<div id="div-comment-338013" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Lewis Jones</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060116-10/?p=32653#comment-338013">
			January 16, 2006 at 12:16 pm</a>		</div>

		<p>Re: Sebastian Redl</p>
<p>Looking in OLE/COM object Viewer (my favorite way to hack into COM objects), it does appear that IActiveMovie3 is a dispinterface (although it&#8217;s attributes marks it as dual, so I would think you should be able to use it via vtable IUnknown access).</p>
<p>It&#8217;s on the ActiveMovie Type Library 2.0:<br />
<br />amcompat.tlb</p>
<p>It will list the methods available there.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-338023">
				<div id="div-comment-338023" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Lewis Jones</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060116-10/?p=32653#comment-338023">
			January 16, 2006 at 12:21 pm</a>		</div>

		<p>Another thing is that by having it return an IDispatch object, that means that if something &quot;better&quot; comes out that implements IActiveMovie3, it isn&#8217;t locked into returning an object that implements IMediaPlayer&#8230;</p>
<p>That is why using TypeName() (in &quot;classic&quot; VB terms) is useful &#8211; to make sure the object you are getting is the one you think you are getting.</p>
<p>Pity that getting the type name of an IDispatch object in C++ is such a @!#$#!@ pain (Watch, someone will just post a 1-line Win32 API call that I missed&#8230; I hope&#8230;)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-338033">
				<div id="div-comment-338033" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">wpoust</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060116-10/?p=32653#comment-338033">
			January 16, 2006 at 1:34 pm</a>		</div>

		<p>&quot;and if you want to play at this level, you&#8217;re going to have to know how to use a screwdriver.&quot;</p>
<p>Screwdriver?  I don&#8217;t think so.  A plastic spork (spoon/fork) seems more like a better analogy for IDispatch.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-patriotb odd alt thread-odd thread-alt depth-1" id="comment-338053">
				<div id="div-comment-338053" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">PatriotB</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060116-10/?p=32653#comment-338053">
			January 16, 2006 at 1:50 pm</a>		</div>

		<p>A blog entry, in 2006, involving ActiveMovie?? Only on Raymond&#8217;s blog. (Or, I could see Larry blogging about this too.)  Keep it up! :)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-338063">
				<div id="div-comment-338063" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">kbiel</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060116-10/?p=32653#comment-338063">
			January 16, 2006 at 2:13 pm</a>		</div>

		<blockquote><p>
  &gt;You&#8217;re operating with the nuts and bolts of OLE automation, and if you want to play at this level, you&#8217;re going to have to know how to use a screwdriver.</p>
<p>And how does one use a screwdriver with nuts and bolts?
</p></blockquote>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-338073">
				<div id="div-comment-338073" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Starfish</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060116-10/?p=32653#comment-338073">
			January 16, 2006 at 2:35 pm</a>		</div>

		<blockquote><p>
  &gt;And how does one use a screwdriver with nuts and bolts?</p>
<p>If it is a bolt with a drive, insert the screwdriver and turn.
</p></blockquote>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-338083">
				<div id="div-comment-338083" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Anonymous Coward</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060116-10/?p=32653#comment-338083">
			January 16, 2006 at 2:57 pm</a>		</div>

		<p>If a new version of IActiveMovie3 has a get_MediaPlayer that returns anything other than an IMediaPlayer, then all client code that expects the IDispatch to actually be an IMediaPlayer will break horribly. It will get the interface, see if it&#8217;s the IMediaPlayer it expected, and if not then the code won&#8217;t know what to do with the object it actually got, and then won&#8217;t work.</p>
<p>A more likely option is for either IActiveMovie4 to have a get_IMediaPlayerNewVersion or for IActiveMovie3 to get a new get_IShinyNewThing method. (The latter would worry me a bit, though.)<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-338093">
				<div id="div-comment-338093" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">rodrigostrauss</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060116-10/?p=32653#comment-338093">
			January 16, 2006 at 3:02 pm</a>		</div>

		<p>Classic Visual Basic (unless Classic Visual Basic == VBScript) is not a dynamic typed language. Visual Basic is a strong typed language (using Option Explicit) and you can use Object the same way you can use Object in VB8/C#.</p>
<p>VB6 complains at compile time about wrong functions names, since it imports the TLB metadata and knows the object in advance. And it accesses the objects using custom interfaces via vtable, not using IDispacth.</p>
<p>Are we talking about the same VB?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-338113">
				<div id="div-comment-338113" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">BryanK</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060116-10/?p=32653#comment-338113">
			January 16, 2006 at 3:30 pm</a>		</div>

		<p>But VB6&#8217;s &quot;Object&quot; type is exactly equivalent to an IDispatch.  VB6 can&#8217;t consume IUnknowns, the &quot;return&quot; type of everything has to be either IDispatch or in a TLB so it can check it out at compile time.</p>
<p>VBScript, however, is much like JavaScript in that it&#8217;s weakly typed (everything&#8217;s an IDispatch).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-338133">
				<div id="div-comment-338133" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Bill</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060116-10/?p=32653#comment-338133">
			January 16, 2006 at 4:02 pm</a>		</div>

		<p>&quot;You&#8217;re operating with the nuts and bolts of OLE automation, and if you want to play at this level, you&#8217;re going to have to know how to use a screwdriver.&quot;</p>
<p>Reminded me of:</p>
<p>&quot;If we hit that bullseye, the rest of the dominos will fall like a house of cards. Checkmate.&quot;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-338143">
				<div id="div-comment-338143" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">grg</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060116-10/?p=32653#comment-338143">
			January 16, 2006 at 4:40 pm</a>		</div>

		<blockquote><p>
  Classic Visual Basic (unless Classic Visual Basic == VBScript) is not a dynamic typed language. Visual Basic is a strong typed language (using Option Explicit) and you can use Object the same way you can use Object in VB8/C#.</p>
<p>I think VB doesn’t try to optimize the code even with option explicit. He is still dynamic internally. That&#8217;s only a little syntactic sugar for the programmer.
</p></blockquote>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-338153">
				<div id="div-comment-338153" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Cooney</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060116-10/?p=32653#comment-338153">
			January 16, 2006 at 5:00 pm</a>		</div>

		<blockquote><p>
  Screwdriver? I don&#8217;t think so. A plastic spork (spoon/fork) seems more like a better analogy for IDispatch.</p>
<p>No, a driver really is the best analogy &#8211; you have a generic handle that you can attach things to: phillips head, 3/8&quot; socket, chainsaw&#8230;
</p></blockquote>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-338173">
				<div id="div-comment-338173" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Jamie Anderson</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060116-10/?p=32653#comment-338173">
			January 16, 2006 at 5:51 pm</a>		</div>

		<p>From memory, the VB6 &quot;Object&quot; type is actually a variant, and may hold an IDispatch item.</p>
<p>Option Explicit simply turned on checks to make sure that variables were declared before using them. Otherwise, if you typo&#8217;d a variable name, the code would compile just fine.</p>
<p>VB6 did allow you to specify explicit types, such as &quot;this is a string&quot;. However, it did so much implicit conversion that you could quite easily assign most variable types to most other types.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-338233">
				<div id="div-comment-338233" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">rodrigostrauss</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060116-10/?p=32653#comment-338233">
			January 16, 2006 at 8:53 pm</a>		</div>

		<p>Hey guys, like you all I&#8217;m a C++ programmer, but I&#8217;ve programmed VB before (looks like you don&#8217;t). I&#8217;m not sure it&#8217;s a quality, but&#8230; :-) </p>
<p>Object is a VARIANT, not an IDispatch. When you use early binding (adding a TLB reference to VB) all calls are vtable based (no IDispatch), just like a pObj-&gt;Method();. A very short WinDbg session can show you this. It&#8217;s good to remember that the MFC ActiveX wrapper is IDispatch based &#8211; thus slower than VB.</p>
<p>You can&#8217;t use a raw IUnknown pointer in VB6 because it&#8217;s not a valid automation type. But you can make your interface dual, VB6 can use a custom interface if it&#8217;s automation compatible.</p>
<p>VB6 is not dynamic internally. If you look at the VB6 folder you will found C2.EXE, the Visual C++ backend. I don&#8217;t know if it&#8217;s exactly the same backed used by VC6, but you can get some weird logs with Visual C++ messages compiling VB6 programs.</p>
<p>The get_MediaPlayer return IDispatch to be used by script languages (VB6 is not among them) like VBS and JS.</p>
<p>All VB do is calling a VariantChangeType if you try to assign variables from different types. It sucks, but doesn&#8217;t make VB6 dynamic typed.<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-patriotb even thread-even depth-1" id="comment-338193">
				<div id="div-comment-338193" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">PatriotB</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060116-10/?p=32653#comment-338193">
			January 16, 2006 at 7:12 pm</a>		</div>

		<p>After thinking about this a bit more, I&#8217;ve thought of what I&#8217;d wager is the *real* reason why that property returns an IDispatch instead of an IMediaPlayer: to prevent type library pollution (terminology i just made up).</p>
<p>Think of it this way.  If the property explicitly was defined as an IMediaPlayer, that means that the IMediaPlayer interface would have to be referenced by the ActiveMovie type library.  And by extension, every interface/enum/etc. that IMediaPlayer referred to.  Which would probably be the equivalent of the entire MediaPlayer type library.</p>
<p>So if you added a reference to the ActiveMovie type library to your VB6 project, you&#8217;d have all the MediaPlayer interfaces pulled in as well, whether or not you ever intended to use the get_MediaPlayer property.</p>
<p>Defining it as a dispatch not ony makes it &quot;future-safe&quot; but makes it easier to draw lines between the two type libraries.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-338273">
				<div id="div-comment-338273" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">BryanK</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060116-10/?p=32653#comment-338273">
			January 17, 2006 at 9:29 am</a>		</div>

		<p>No, the Object type is not the VARIANT type.  Try to run this code in VB6:</p>
<p>Dim x as Object</p>
<p>x = 1</p>
<p>MsgBox x</p>
<p>and you&#8217;ll get an error on the &quot;x = 1&quot; line, saying &quot;object variable or With block variable not set&quot;.  This is because VB6 is trying to get the default property of the x object, but x is Nothing, so it can&#8217;t.  If you change the code to:</p>
<p>Dim x as Object</p>
<p>Set x = 1</p>
<p>MsgBox x</p>
<p>then you&#8217;ll get a &quot;Type Mismatch&quot; error on the &quot;Set x = 1&quot; line at runtime.</p>
<p>Changing the Dim to &quot;Dim x as Variant&quot; works fine (in the &quot;x = 1&quot; case, not the &quot;Set&quot; case).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-338283">
				<div id="div-comment-338283" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">BryanK</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060116-10/?p=32653#comment-338283">
			January 17, 2006 at 9:30 am</a>		</div>

		<p>Oops, the &quot;Type Mismatch&quot; error on the &quot;Set x = 1&quot; line occurs at compile time, not runtime.</p>
<p>Still, Objects are not VARIANTs.</p>
<p>(Note, however, that a VARIANT (in C++, or a Variant in VB6) can hold an Object (IDispatch).  But the reverse is not true.)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-338313">
				<div id="div-comment-338313" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">rodrigostrauss</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060116-10/?p=32653#comment-338313">
			January 17, 2006 at 11:29 am</a>		</div>

		<p>You&#8217;re right, I missed the point, Object is IDispatch. But when you declare a variable without type (the way you MUST do in VBScript), it&#8217;s a VARIANT and not Object.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-338323">
				<div id="div-comment-338323" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">BryanK</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060116-10/?p=32653#comment-338323">
			January 17, 2006 at 11:48 am</a>		</div>

		<p>Yes, that&#8217;s true, &quot;Dim x&quot; creates a Variant-type variable.  (Probably because a C++ VARIANT can contain anything: byte, short, long, BSTR, float, double, IUnknown, etc., so &quot;Dim x&quot; gives x the most general type available.)</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>