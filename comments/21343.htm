<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (12)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment byuser comment-author-maurits even thread-even depth-1" id="comment-654453">
				<div id="div-comment-654453" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Maurits+%5BMSFT%5D' rel='external nofollow' class='url'>Maurits [MSFT]</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080806-01/?p=21343#comment-654453">
			August 6, 2008 at 1:04 pm</a>		</div>

		<p>I use this ^</p>
<p>&nbsp; &nbsp;all ^</p>
<p>&nbsp; &nbsp;the ^</p>
<p>&nbsp; &nbsp;time.</p>
<p>Of course, I have to deal with batch scripts that call binaries with huge numbers of arguments (I&#8217;m looking at you, wttcl.exe)</p>
<p>Wish list: allow a blank line to terminate the chain (putting a caret on the last of the command allows for easy copy/paste/add/delete arguments; much like allowing a comma after the last element of an array in C.)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-654463">
				<div id="div-comment-654463" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://rootshell.be/~grawity/' rel='external nofollow' class='url'>Mantas</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080806-01/?p=21343#comment-654463">
			August 6, 2008 at 1:15 pm</a>		</div>

		<p>kewl! I kinda hoped cmd.exe would have something like that.</p>
<p>Now if only there was a way to use a variable as a name for another variable&#8230; If I enable delayedexpansion, !foo_%bar%! works, but then if I do &quot;echo Error!&quot;, it only prints &quot;Error&quot;&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-654593">
				<div id="div-comment-654593" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.bytehead.org/blog/' rel='external nofollow' class='url'>Bryan Price</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080806-01/?p=21343#comment-654593">
			August 6, 2008 at 2:55 pm</a>		</div>

		<p>And I didn&#8217;t think there was much you could really teach me in the vagaries of batch. &nbsp;That certainly is a new one on me.</p>
<p>Thanks!</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-654653">
				<div id="div-comment-654653" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Nick</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080806-01/?p=21343#comment-654653">
			August 6, 2008 at 5:12 pm</a>		</div>

		<p>Bryan:</p>
<p>I&#8217;ve always viewed Batch as a language that no one man can ever fully understand. There will always be some quirk, some parser exploit-become-feature, or some trick that creates a whole new way of doing things.</p>
<p>Much like the universe, if anyone ever <em>does</em> fully come to understand Batch then the language will instantly be replaced by an infinitely weirder and more complex version of itself. This has obviously happened at least once before ;)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-654693">
				<div id="div-comment-654693" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://lambert.geek.nz/' rel='external nofollow' class='url'>Miral</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080806-01/?p=21343#comment-654693">
			August 6, 2008 at 8:20 pm</a>		</div>

		<p>At least twice before. &nbsp;First there was Command Extensions. &nbsp;Now there is PowerShell. &nbsp;:) &nbsp;(Quibblers might include WSH in there too.)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-654703">
				<div id="div-comment-654703" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Roger</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080806-01/?p=21343#comment-654703">
			August 6, 2008 at 8:24 pm</a>		</div>

		<p>It is remarkable what the choice of the forward slash for switches in CP/M-80 has caused!</p>
<p>Because of that, MS-DOS used backslashes in pathnames.</p>
<p>Then because of that, backslashes can&#8217;t be used for continuations in batch files.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-654843">
				<div id="div-comment-654843" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.seasip.demon.co.uk/Cpm/optchar.html' rel='external nofollow' class='url'>John Elliott</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080806-01/?p=21343#comment-654843">
			August 7, 2008 at 6:57 am</a>		</div>

		<p>@Roger: The &quot;/&quot; wasn&#8217;t used as an option character by CP/M or the programs supplied with it. It <em>was</em> used by Microsoft&#8217;s programming languages for CP/M, but I don&#8217;t know where they got the idea.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-654873">
				<div id="div-comment-654873" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">640k</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080806-01/?p=21343#comment-654873">
			August 7, 2008 at 11:00 am</a>		</div>

		<p>Maybe from &quot;CPforward slashM&quot;.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-654883">
				<div id="div-comment-654883" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Peter</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080806-01/?p=21343#comment-654883">
			August 7, 2008 at 11:30 am</a>		</div>

		<p>@Roger:</p>
<p>Batch files predate directory hierarchies. &nbsp;</p>
<p>Thanks to Google Books, I find <em>Operating Systems</em> by William Stalling. &nbsp;Page 80 says:</p>
<p>&quot;&#8230;Microsoft developed DOS 2.0, released in 1983. &nbsp;It contained support for the hard disk and provided for hierarchical directories. &nbsp;Heretofore, a disk could contain only one directory of files, supporting a maximum of 64 files.&quot;</p>
<p>DEC lines of computers tended to have &quot;/&quot; as the switch character. &nbsp;Directories were described (roughly) as DISK:[DIR.SUBDIR]FILE.EXE with appropriate defaults to make like simple. &nbsp;The first BASIC that Gates wrote was on a DEC machine, so he may have already had a fondness for / as a switch character.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-654933">
				<div id="div-comment-654933" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Michael</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080806-01/?p=21343#comment-654933">
			August 7, 2008 at 12:16 pm</a>		</div>

		<p>@Peter:</p>
<blockquote><p>
  DEC lines of computers tended to have &quot;/&quot; as the switch character.
</p></blockquote>
<p>DCL (<a rel="nofollow" target="_new" href="http://en.wikipedia.org/wiki/DIGITAL_Command_Language" rel="nofollow">http://en.wikipedia.org/wiki/DIGITAL_Command_Language</a>) also allowed (required? I forget) you to omit a space between a command and its slash-delimited options. &nbsp;Hence &quot;CREATE&quot; created a regular file, while &quot;CREATE/DIRECTORY&quot; created a directory. &nbsp;I suspect that was the inspiration for the similar feature of DOS built-in commands, wherein &quot;dir /w&quot; and &quot;dir/w&quot; are equivalent.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-654943">
				<div id="div-comment-654943" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Daev</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080806-01/?p=21343#comment-654943">
			August 7, 2008 at 12:26 pm</a>		</div>

		<p>The reason so many microcomputer operating systems used DEC syntax was that DEC was the most successful and respected maker of minicomputer operating systems. &nbsp;In the late 70s and early 80s, TOPS and VMS set the standard that everyone else copied. &nbsp;It wasn&#8217;t just Bill Gates &#8212; OS designers who&#8217;d never used a Digital machine kept copies of the TOPS manuals on hand to provide guidance.</p>
<p>Whenever discussions of Microsoft&#8217;s design choices come up nowadays, there&#8217;s often this implicit assumption that Unix ruled the world and those micro weirdos flagrantly disregarded the &quot;standard&quot; use of backslash, signals, newlines, etc. &nbsp;Not true &#8212; instead, Unix was considered a bizarre niche product. &nbsp;Hard to use, easy to port (if you didn&#8217;t care about the details), quick to crash, and promising amazing power to those willing to grok its low-level mysteries: in short, Unix was FORTH.</p>
<p>It&#8217;s only because C and shell scripting included so many Unix-specific assumptions (&quot;n denotes the end-of-line character,&quot; etc.), and they spawned so many modern programming languages from Java to Perl, that people have come to imagine that these things are so ubiquitous they must be eternal computer science principles.</p>
<p>So that&#8217;s why I really like articles about the batch file language. &nbsp;Cryptic and crippled it may be, but it reflects a true parallel stream of evolution that never copied from Unix. &nbsp;Powershell is great, but it sure looks like it&#8217;s picked up on the Unix assumptions for everything from environment variables to option syntax. &nbsp;Unlike Kildall and Gates, Powershell&#8217;s authors weren&#8217;t running to the DEC Command Language to settle design issues.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-655363">
				<div id="div-comment-655363" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://dmoisan.spaces.live.com/' rel='external nofollow' class='url'>David Moisan</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080806-01/?p=21343#comment-655363">
			August 8, 2008 at 2:20 pm</a>		</div>

		<p>Daev,</p>
<p>Jeffrey Snover has cited VMS DCL as an inspiration for PowerShell; &nbsp;PS owes more to it than to any Unix shell.</p>
<p>I&#8217;m 45 and have been in IT since IBM was the &quot;evil empire&quot; and it is hard if not impossible to overstate Digital&#8217;s influence on the computer world. &nbsp;That&#8217;s something the average twentysomething Linux bigot will never realize.</p>
<p>Also remember that MS *did* hire Dave Cutler.</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>