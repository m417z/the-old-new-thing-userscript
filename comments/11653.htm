<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (12)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-891153">
				<div id="div-comment-891153" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Billy O'Neal</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110127-00/?p=11653#comment-891153">
			January 27, 2011 at 8:36 am</a>		</div>

		<p>Quick link to save Goog^H^H^H^H Bing queries -&gt; <a rel="nofollow" target="_new" href="http://msdn.microsoft.com/en-us/library/bb762179.aspx" rel="nofollow">msdn.microsoft.com/&#8230;/bb762179.aspx</a></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-891163">
				<div id="div-comment-891163" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Crescens2k</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110127-00/?p=11653#comment-891163">
			January 27, 2011 at 8:40 am</a>		</div>

		<p>Drew:</p>
<p>This kind of thing is common. What is usually expected is that you read everything in the documentation before you start using it. This way you would know there is a type HIMAGELIST and see the handle to the system image list and think, oh, there is a perfect type to describe that, HIMAGELIST. But this is usually because it is written by people who know the functions pretty well and don&#39;t realse that maybe not everyone knows that a particular type exists. In general though, when it says handle, always assume Hxxxxx or HANDLE and look to see if there is a more specific type available, otherwise use HANDLE.</p>
<p>There are pleanty of cases in any documentation where it doesn&#39;t give exactly everything but it does give enough information for you to work it out yourself. If you think the content is inadiquate then instead of randomly complaining on a blog entry, instead do something like add community content, complain on the connect website or something. To get the documentation useful for everyone, Microsoft need feedback, so give feedback in a very constructive way.</p>
<div class="post">[<i>I think part of the problem is that people tend to ignore the Overview and Using and Guide topics and go straight for the raw function documentation. You need to build an overall understanding before you dig into the minutiae. It&#39;s like learning to drive a car by studying traffic regulations. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-891173">
				<div id="div-comment-891173" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Abso</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110127-00/?p=11653#comment-891173">
			January 27, 2011 at 8:43 am</a>		</div>

		<p>For the exercise: it looks like the shortcut overlay predates the SHGFI_ADDÂ­OVERLAYS flag, since that flag requires version 5.0 of Shell32.dll and the SHGFI_LINKOVERLAY flag doesn&#39;t.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-891193">
				<div id="div-comment-891193" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110127-00/?p=11653#comment-891193">
			January 27, 2011 at 8:56 am</a>		</div>

		<p>Well, if you&#39;re running on Windows this sure beats parsing the file format. Nasty file format that one.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-891143">
				<div id="div-comment-891143" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Drew</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110127-00/?p=11653#comment-891143">
			January 27, 2011 at 8:11 am</a>		</div>

		<p>This is what&#39;s so frustrating about Windows programming &#8211; the documentation does not explain or reference the difference between the system image list icon (SHGFI_SYSICONINDEX) and icon (SHGFI_ICON). &nbsp;It looks like the same functionality can be achieved by using SHGFI_ICONLOCATION, and then using SHGFI_ICON.</p>
<p>Also, how does a programmer who has never done this before know that A &#8211; it returns a HIMAGELIST (documentation says it returns a handle to the system image list, doesn&#39;t explicitly say HIMAGELIST), and B &#8211; that the ideal way to retrieve an icon from a HIMAGELIST is to use the ImageList_* functions.</p>
<p>Note &#8211; I used the VS2008 documentation for reference.</p>
<div class="post">[<i>The connection between &quot;image list&quot; and &quot;HIMAGELIST&quot; could be made clearer. But I think it&#39;s self-evident that if you have an HIMAGELIST then you call the ImageList_* functions to access it. (If you do an MSDN search for HIMAGELIST it shows up in the &quot;Image Lists&quot; chapter, which is probably a clue.) It&#39;s like saying &quot;This function returns an HACCEL. How am I expected to know that I can use this with the Accelerator functions?&quot; -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-891233">
				<div id="div-comment-891233" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Vaibhav Garg</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110127-00/?p=11653#comment-891233">
			January 27, 2011 at 6:34 pm</a>		</div>

		<p>&quot;though you&#39;ll have to apply some logic to the sitaution&quot;</p>
<p>The &#39;situation&#39; had me stumped for a while!!</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-891243">
				<div id="div-comment-891243" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Worf</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110127-00/?p=11653#comment-891243">
			January 27, 2011 at 11:12 pm</a>		</div>

		<p>Blind guess to the exercise &#8211; the reason shortcuts are special is because their icon isn;t overlaid &#8211; when you create the shortcut or change its icon, Windows creates the icon for the LNK file with overlay, and saves it inside the LNK file. So requesting an ucon without overlay is fruitless as Windows says the icon doesn&#39;t have the overlay to begin with. Add the overlay option, and Windows draws the overlay on top of the flattened overlaid icon, so nothing changes.</p>
<p>Given overlays were for Windows 95, this would seem a reasonable optimization and save RAM&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-891223">
				<div id="div-comment-891223" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Miral</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110127-00/?p=11653#comment-891223">
			January 27, 2011 at 3:43 pm</a>		</div>

		<p>I haven&#39;t tried SHGetFileInfo myself, but the thing I find surprising about this explanation is that I would have assumed that the system image list would have already contained the icon-with-shortcut-overlay, since you can&#39;t make SHGFI_ICON not give you that one.</p>
<p>(And maybe I&#39;m just dense, but I can&#39;t see anything on the MSDN page which seems like it would suggest either behaviour described here. &nbsp;The only thing that seems even partially suggestive is that you need to DestroyIcon the resulting icon, but that could just mean that the function copies the icon instead of copying+compositing it.)</p>
<p>&quot;I think part of the problem is that people tend to ignore the Overview and Using and Guide topics and go straight for the raw function documentation.&quot;</p>
<p>On the MSDN website, at least, you can&#39;t *get* to the Overview and Using docs from the function documentation &#8212; at least not without jumping through quite a few navigational hoops and possibly losing your place.</p>
<p>I did, however, notice the link to FileIconInit &#8212; which I just find disturbing. &nbsp;The docs basically say &quot;you must call this function when X and Y happen&quot; but it&#39;s not even a public exported API.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-891253">
				<div id="div-comment-891253" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Neil</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110127-00/?p=11653#comment-891253">
			January 28, 2011 at 2:42 am</a>		</div>

		<p>Presumably this is better than simply reading the icon location out of the link, since it works on all files, not just links?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-891263">
				<div id="div-comment-891263" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">WndSks</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110127-00/?p=11653#comment-891263">
			January 28, 2011 at 3:50 am</a>		</div>

		<p>@Miral: FileIconInit gives you THE system image list, this is normally not required, just use SHGetFileInfo to get the imagelist and every time you call SHGetFileInfo to get the index of a icon, windows will make sure that your copy of the system image list has that icon. You only really need FileIconInit if you want to create an app that displays every icon in the system image list. (There are probably performance benefits to using the real system image list also, I assume that&#39;s why explorer uses it)</p>
<p>@Worf: When you change a .lnk&#39;s icon, only the path is stored. (The .lnk binary format is documented and there is no datablock to store a HICON or any other kind of image)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-891273">
				<div id="div-comment-891273" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Gabe</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110127-00/?p=11653#comment-891273">
			January 28, 2011 at 7:25 am</a>		</div>

		<p>It&#39;s not that people ignore the Overview and Using and Guide topics &#8212; it&#39;s that the search engine doesn&#39;t return them. When I need to learn how to use function XXXX(), I put XXXX into a search engine and read one of the first few links. Those first few links are rarely the sort of overview topics that would tell me all I need to know about how to use the function, nor do those pages link to such topics.</p>
<p>The problem is that MSDN is not designed to be accessed from an Internet search engine.</p>
<p>And you can easily imagine that, were there not a requirement to have a license before being allowed to drive, plenty of people would drive around not even knowing basic things like what turn signals are because they learned to drive from watching TV and people on TV never use turn signals.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-891413">
				<div id="div-comment-891413" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Drizzt</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110127-00/?p=11653#comment-891413">
			January 29, 2011 at 12:53 am</a>		</div>

		<p>OT side, I really loved the old MSDN, the one that existed when VS5 and VS6 were around, it really was like reading a book, you could start from the overview and after reaching the end of the chapter you had a solid understanding of the argument. Current MSDN (for C# and WPF, that&#39;s what I&#39;m on in these days) to me is totally useless, and most of all is really poor, often it seems an auto-generated page, typical is: method bool A(int b, bool c), explanation &quot;it does A, take an integer B and a boolean C, output a boolean&quot;. Now, I CAN read a method declaration, no need for an MSDN for this&#8230;and worst of all for inherited method or events, where you are sent to method&#39;s/event&#39;s base class explanation about it&#8230;even if the thing has been ovverided in the new class and act differently (many WPF classes expose events because they have inherited them from class X, swallow the event firing because they feel it&#39;s not right for this event to be fired from this class, but their help still send you to class X for explanation about the event&#8230;so you spend an entire day or two trying to puzzle out why a perfectly supported, exposed, simple, documented event doesn&#39;t fire at all.</p>
<p>Old MSDN was really good for those case, everything was well documented, current MSDN is&#8230;well, current MSDN for me is Google, &#39;cause M$ one is really useless.</p>
<p>Going back IT, instead:</p>
<p>Shouldn&#39;t it be that the shortcut file icon is the shortcut file icon, and the original file icon is the original file icon? I mean, those are two different things, if I want the original file icon I should go back to the file itseslf, the shortcut icon is a different thing and a different view for the user. If the user has an icon on his desktop that is, let&#39;s say, a ball with the overlay of an arrow, the icon I&#39;m going to show in my application is the one of a ball and an arrow. Or, if the user ask for it, it&#39;s the original icon picked up from the original file.</p>
<p>Or not?</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>