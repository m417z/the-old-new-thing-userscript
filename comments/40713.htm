<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (19)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-141633">
				<div id="div-comment-141633" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">R</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040209-00/?p=40713#comment-141633">
			February 9, 2004 at 7:24 am</a>		</div>

		<p>&#8216;Casting a function pointer can change its size!&#8217;</p>
<p> Bu..bu.. bu &#8230; my head hurts.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-141653">
				<div id="div-comment-141653" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Lonnie McCullough</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040209-00/?p=40713#comment-141653">
			February 9, 2004 at 7:44 am</a>		</div>

		<p>I was just wondering about this very subject and was going to post a comment asking you to discuss it.  Wow!  Thanks again, I always wondered why my pointers to member functions had a sizeof() == 8 sometimes and 4 other times.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-141663">
				<div id="div-comment-141663" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.whirlingdervishes.com' rel='external nofollow' class='url'>Henk Devos</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040209-00/?p=40713#comment-141663">
			February 9, 2004 at 8:02 am</a>		</div>

		<p>Long ago, when trying to cast a member function pointer to a DWORD, i couldn&#8217;t believe that the compiler gave me a size mismatch pointer&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-141673">
				<div id="div-comment-141673" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.amotif.com' rel='external nofollow' class='url'>Curt</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040209-00/?p=40713#comment-141673">
			February 9, 2004 at 8:15 am</a>		</div>

		<blockquote><p>
  The size of a pointer-to-member-function can change depending on the class!</p>
<p>As if Mondays aren&#8217;t hard enough!  I&#8217;m going back to bed. :)<br />
  
</p></blockquote>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-141683">
				<div id="div-comment-141683" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Jonathan O'Connor</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040209-00/?p=40713#comment-141683">
			February 9, 2004 at 8:55 am</a>		</div>

		<p>My friend and former colleague, Martin O&#8217;Riordain came up with the idea of using thunks for ptr-to-member-fn about 1990. He wouldn&#8217;t tell us about them then, because he wanted to use this for his interview with Microsoft. Its funny to see that they aren&#8217;t used anymore. But then I guess, C++ has moved on a bit since then.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-141693">
				<div id="div-comment-141693" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ben Hutchings</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040209-00/?p=40713#comment-141693">
			February 9, 2004 at 10:22 am</a>		</div>

		<p>The size of a pointer-to-member should not vary as you describe. The C++ standard says it&#8217;s OK to cast a pointer-to-member-of-derived to pointer-to-member-of-base (though it must be a non-virtual base) so long as you only use the result with pointers-to-base that really point to instances of the derived class. So the &quot;optimisation&quot; of dropping the adjustment field where it&#8217;s apparently not necessary is actually a bug. The compiler admits:<br />
<br />&quot;warning C4407: cast between different pointer to member representations, compiler may generate incorrect code&quot;. Thankfully there is an option that fixes this: &quot;/vmg&quot;. However, the documentation for C4407 and for &quot;/vmg&quot; fails to acknowledge that this behaviour is a bug and basically blames the programmer for finding the edge cases where this &quot;optimisation&quot; doesn&#8217;t work.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-141703">
				<div id="div-comment-141703" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://weblogs.asp.net/oldnewthing/' rel='external nofollow' class='url'>Raymond Chen</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040209-00/?p=40713#comment-141703">
			February 9, 2004 at 1:58 pm</a>		</div>

		<p>Actually, Ben, if you&#8217;re referring to 4.11.2 (pointer to member conversions) the standard actually says the opposite. You can convert pointer-to-base-member into pointer-to-derived-member without loss of fidelity. And that&#8217;s what we&#8217;re doing here.</p>
<p>I can&#8217;t find a place in the standard where it says that you can safely cast pointer-to-derived-member to pointer-to-base-member.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-141723">
				<div id="div-comment-141723" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Woon Kiat</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040209-00/?p=40713#comment-141723">
			February 9, 2004 at 4:44 pm</a>		</div>

		<p>Hi Raymond, this is a very interesting topic. Is there any book or material you would recommend for further understanding on this topic?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-141733">
				<div id="div-comment-141733" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://weblogs.asp.net/oldnewthing/' rel='external nofollow' class='url'>Raymond Chen</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040209-00/?p=40713#comment-141733">
			February 9, 2004 at 4:53 pm</a>		</div>

		<p>This is all undocumented implementation details, so I doubt there&#8217;d be a book on it. You can read Ellis/Stroustrup &quot;The Annotated C++ Reference Manual&quot; to see the design of a completely different way of doing pointers to functions.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-141743">
				<div id="div-comment-141743" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Woon Kiat</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040209-00/?p=40713#comment-141743">
			February 9, 2004 at 5:42 pm</a>		</div>

		<p>What about reference on multiple inheritance? Is there any book you would recommend? Most books just touch the surface and never go deep into it. The concept of MI always confuse me when it comes to the vtable layout and implementation. And the architect of C# decide not to have MI in C#. Do you think MI is a good topic to blog on?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-141753">
				<div id="div-comment-141753" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://weblogs.asp.net/oldnewthing/' rel='external nofollow' class='url'>Raymond Chen</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040209-00/?p=40713#comment-141753">
			February 9, 2004 at 6:20 pm</a>		</div>

		<p>I&#8217;m not sure what there is to write about on the subject of multiple inheritance. It&#8217;s a language feature. The language specification leaves a lot of the details to the implementation, so you shouldn&#8217;t expect to find a book that details implementation since that&#8217;s all undocumented and subject to change at any time.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-141793">
				<div id="div-comment-141793" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Stefan</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040209-00/?p=40713#comment-141793">
			February 9, 2004 at 10:35 pm</a>		</div>

		<p>There is an article in MSDN about this:</p>
<p>&quot;C++: Under the Hood&quot;, Jan Gray, March 1994</p>
<p><a target="_new" href="http://msdn.microsoft.com/archive/default.asp?url=/archive/en-us/dnarvc/html/jangrayhood.asp" rel="nofollow">http://msdn.microsoft.com/archive/default.asp?url=/archive/en-us/dnarvc/html/jangrayhood.asp</a></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-141843">
				<div id="div-comment-141843" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://weblogs.asp.net/oldnewthing/archive/2004/02/10/70638.aspx' rel='external nofollow' class='url'>The Old New Thing</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040209-00/?p=40713#comment-141843">
			February 10, 2004 at 10:00 am</a>		</div>

		
		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-141963">
				<div id="div-comment-141963" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ben Hutchings</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040209-00/?p=40713#comment-141963">
			February 10, 2004 at 1:51 pm</a>		</div>

		<p>Raymond, I&#8217;m talking about explicit conversions (aka casts) which are specified in 5.4/7. 4.11/2 is about standard conversions which can be done implicitly (because they&#8217;re generally safe).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-142013">
				<div id="div-comment-142013" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://weblogs.asp.net/oldnewthing/' rel='external nofollow' class='url'>Raymond Chen</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040209-00/?p=40713#comment-142013">
			February 10, 2004 at 4:20 pm</a>		</div>

		<p>Ben: Okay I read 5.4/7 and I think you&#8217;re right. Then again, I&#8217;m not a real language lawyer; I just play one on the Internet.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-144643">
				<div id="div-comment-144643" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Giovanni Bajo</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040209-00/?p=40713#comment-144643">
			February 16, 2004 at 12:52 pm</a>		</div>

		<p>Why anybody should care about Rich Hickey&#8217;s ten-years-old techniques when we have boost::bind and boost::function which works wonderfully as generalized binders and callbacks?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-267123">
				<div id="div-comment-267123" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blogs.msdn.com/oldnewthing/archive/2005/03/24/401490.aspx' rel='external nofollow' class='url'>The Old New Thing</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040209-00/?p=40713#comment-267123">
			March 24, 2005 at 9:03 am</a>		</div>

		<p>Two confusing features that explode when you combine them.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-449463">
				<div id="div-comment-449463" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.qooiii.com/blog/?p=27' rel='external nofollow' class='url'>Qooiii.com blog &raquo; Blog Archive &raquo; Hardly Anybody</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040209-00/?p=40713#comment-449463">
			December 5, 2006 at 11:31 pm</a>		</div>

		<p>PingBack from <a rel="nofollow" target="_new" href="http://www.qooiii.com/blog/?p=27" rel="nofollow">http://www.qooiii.com/blog/?p=27</a></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-650163">
				<div id="div-comment-650163" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.peousware.com/?p=11' rel='external nofollow' class='url'>PeousWare - At last, sharing ! &raquo; Blog Archive &raquo; Member function pointer size in Visual C++</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040209-00/?p=40713#comment-650163">
			July 28, 2008 at 7:33 pm</a>		</div>

		<p>PingBack from <a rel="nofollow" target="_new" href="http://www.peousware.com/?p=11" rel="nofollow">http://www.peousware.com/?p=11</a></p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>