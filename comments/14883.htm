<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (20)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-813203">
				<div id="div-comment-813203" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Alexander Grigoriev</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100219-00/?p=14883#comment-813203">
			February 19, 2010 at 7:12 am</a>		</div>

		<p>This works:</p>
<p>sprintf(szDeletePath, &quot;%s%c&quot;, file_to_delete, 0);</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-813243">
				<div id="div-comment-813243" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Marquess</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100219-00/?p=14883#comment-813243">
			February 19, 2010 at 7:28 am</a>		</div>

		<p>I tell ya, null-terminated strings are the works of the devil! double-null-terminated string doubly so (naturally).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-813263">
				<div id="div-comment-813263" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joe</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100219-00/?p=14883#comment-813263">
			February 19, 2010 at 7:37 am</a>		</div>

		<p>Given the choice between pascal strings with a max length of 256 and null-terminated strings, I&#8217;d pick null-terminated. Overall, I&#8217;m very glad those are no longer the only options.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-813283">
				<div id="div-comment-813283" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Voo</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100219-00/?p=14883#comment-813283">
			February 19, 2010 at 7:52 am</a>		</div>

		<p>@Joe: Given the number of errors made with C and pascal strings I think I&#8217;d probably take pascal strings in 9 of 10 cases.</p>
<p>Though you&#8217;re right, both of them are far from perfect..</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-813293">
				<div id="div-comment-813293" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">ton</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100219-00/?p=14883#comment-813293">
			February 19, 2010 at 7:56 am</a>		</div>

		<p>These last couple of posts have demonstrated one thing very clearly for a fact and that is &nbsp;these early API designs were truly horrific and should be discarded as soon as possible. This is what is so positive about the virtual mode in Windows 7 it makes it possible to leave some of the worst kludges in the past where they belong. Yessssssssss!!!!!!!!</p>
<div>[<i>Good thing SHFileOperation was superseded by IFileOperation years ago, so people can stop using the old API designed for a different era. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-813343">
				<div id="div-comment-813343" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">njkayaker</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100219-00/?p=14883#comment-813343">
			February 19, 2010 at 9:19 am</a>		</div>

		<p>I&#8217;d guess that the programmer who wrote the example is quite capable of making other non-string related mistakes!</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-813473">
				<div id="div-comment-813473" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Mircea</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100219-00/?p=14883#comment-813473">
			February 19, 2010 at 12:37 pm</a>		</div>

		<p>A Delphi string is ideal IMO. It is O(1) and how often will you need a string bigger than 4 GB? Now don&#8217;t forgot to lobby the ISO C and C++ committees to add a new string type. I&#8217;m sure they will.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-813503">
				<div id="div-comment-813503" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Peter da Silva</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100219-00/?p=14883#comment-813503">
			February 19, 2010 at 1:29 pm</a>		</div>

		<p>Bah, you need buffer-gap strings. buffer length, string length, gap offset. Insert anywhere, delete anywhere, efficient serial inserts and deletes.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-813513">
				<div id="div-comment-813513" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">W</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100219-00/?p=14883#comment-813513">
			February 19, 2010 at 1:57 pm</a>		</div>

		<p>Delphi strings have their own share of problems. Most of them related to copy-on-write and ref-counting.</p>
<p>And passing them from one runtime to another leads to problems too.</p>
<p>And when casting them to PChar(=char*) you need exactly to know what you are doing, or you cause subtle bugs.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-813553">
				<div id="div-comment-813553" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://jdanielsmith.spaces.live.com' rel='external nofollow' class='url'>J. Daniel Smith</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100219-00/?p=14883#comment-813553">
			February 19, 2010 at 2:48 pm</a>		</div>

		<p>It is my hope that Windows 7 will be a kind of watershed release in regards to backwards compatibility. &nbsp;With XP mode providing a reasonable option, Microsoft can now be aggressive about doing new stuff completely in .NET, and thus rendering double-NULL-terminated strings a thing of the (distant) past.</p>
<div class=post>[<i>That&#8217;s great for new stuff, but what about old stuff? Are you saying the old stuff should be deprecated and eventually purged from Windows? (What&#8217;s going to happen to all the programs that still use SHFileOperation?) -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-813583">
				<div id="div-comment-813583" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Anonymous Coward</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100219-00/?p=14883#comment-813583">
			February 19, 2010 at 4:00 pm</a>		</div>

		<p>The Windows kernel uses counted strings internally, and OLE uses BSTRs. If Microsoft could make a choice, make all functions use those and implement the old functions with some kind of backward-compatibility layer, we would suffer a lot less string handling issues.</p>
<div class=post>[<i>That sounds backwards. Shouldn&#8217;t it be &#8220;Write wrappers around the existing functions which take BSTRs?&#8221; Or are you saying that we we should reimplement all functions to use BSTRs internally? Won&#8217;t that introduce new bugs? -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-813613">
				<div id="div-comment-813613" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Billy O'Neal</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100219-00/?p=14883#comment-813613">
			February 19, 2010 at 4:37 pm</a>		</div>

		<p>@Mircea: What do you possibly mean by a Delphi string begin O(1)? What operation are you referring to? Things like appending to an existing string must take at least O(min(m,n)) amortized time to copy the string data around, even in a perfect string implementation (O(m+n) in the worst case that a new buffer needs allocated for both strings).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-813403">
				<div id="div-comment-813403" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Marquess</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100219-00/?p=14883#comment-813403">
			February 19, 2010 at 10:33 am</a>		</div>

		<p>@Joe:</p>
<p>Because these were the only string types ever invented. Even Windows uses two, although rarely the twain meet. There&#8217;s the well known null-terminated string (TCHAR*, LPSTR, lpsz) and the UNICODE_STRING of the Native API. Outside Windows we have Delphi strings (32-bit length counter, i.e. the same as for char* on IA32), Ada&#8217;s String, Bounded_String and Unbounded_String (with different trade-offs for flexibility and speed) and quite a lot others (linked lists?). Abstraction is the keyword here. (Again, .NET is doing well in that regard)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-813643">
				<div id="div-comment-813643" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Gabe</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100219-00/?p=14883#comment-813643">
			February 19, 2010 at 6:40 pm</a>		</div>

		<p>Raymond, I believe that J. Daniel Smith was trying to say that old programs would run in XP mode. The implication is that in order to run in &#8220;Win7 native&#8221; mode, old software would need to be rewritten to eliminate deprecated APIs.</p>
<div class=post>[<i>But this still entails reimplementing all functions which previously used null-terminated strings to use the new string format. Rewriting working code is not something undertaken purely for aesthetic reasons. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-813663">
				<div id="div-comment-813663" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Gabe</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100219-00/?p=14883#comment-813663">
			February 19, 2010 at 10:30 pm</a>		</div>

		<p>&#8220;[But this still entails reimplementing all functions which previously used null-terminated strings to use the new string format. Rewriting working code is not something undertaken purely for aesthetic reasons. -Raymond]&#8221;</p>
<p>The post I was refering to seemed to only be trying to get rid of double-NULL-terminated-strings. Granted, others do seem to think that all null-terminated strings should be eliminated.</p>
<p>As for rewriting working code, I think Steve Jobs would disagree that it shouldn&#8217;t be undertaken for purely aesthetic reasons. Mac application developers probably have to rewrite working code every few years. I recall when it was announced that planned 64-bit support for the backwards-compatible API (Carbon) would be dropped, meaning that anybody who wanted to release a 64-bit version of their app would have to rewrite the whole UI to use a different API (Cocoa). Surprisingly, lots of people were upset that some software vendors would have to delay 64-bit releases of major apps because they had spent the previous seven years merely adding features and fixing bugs, rather than rewriting millions of lines of code to use a shiny new API.</p>
<div class=post>[<i>Reimplementation means you replace all the bugs you know with new unknown bugs. Sometimes it&#8217;s the right thing to do, but it&#8217;s not a decision to be made lightly, and I believe that doing it just for aesthetics is not a strong enough reason. That&#8217;s why I don&#8217;t run Apple Computer. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-yuhong-bao odd alt thread-odd thread-alt depth-1" id="comment-813683">
				<div id="div-comment-813683" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Yuhong+Bao' rel='external nofollow' class='url'>Yuhong Bao</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100219-00/?p=14883#comment-813683">
			February 20, 2010 at 12:20 am</a>		</div>

		<p>&quot;I recall when it was announced that planned 64-bit support for the backwards-compatible API (Carbon) would be dropped, meaning that anybody who wanted to release a 64-bit version of their app would have to rewrite the whole UI to use a different API (Cocoa). &quot;</p>
<p>MS did some of it too when moving to 64-bit:</p>
<p><a rel="nofollow" target="_new" href="http://blogs.msdn.com/larryosterman/archive/2005/04/22/playing-audio-cds-part-3-mci.aspx#411024" rel="nofollow">http://blogs.msdn.com/larryosterman/archive/2005/04/22/playing-audio-cds-part-3-mci.aspx#411024</a></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-813713">
				<div id="div-comment-813713" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">640k</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100219-00/?p=14883#comment-813713">
			February 20, 2010 at 10:32 am</a>		</div>

		<p>4 GB strings are enough for everyone. Case closed.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-813723">
				<div id="div-comment-813723" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Marquess</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100219-00/?p=14883#comment-813723">
			February 20, 2010 at 12:22 pm</a>		</div>

		<p>Well, these days, strings can actually be 16 exabytes. But strings are probably the wrong type for anything even remotely close to 4 GB.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-813793">
				<div id="div-comment-813793" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Kilo</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100219-00/?p=14883#comment-813793">
			February 21, 2010 at 1:33 am</a>		</div>

		<p>Everything is a string.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-813813">
				<div id="div-comment-813813" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Cheong</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100219-00/?p=14883#comment-813813">
			February 21, 2010 at 5:27 pm</a>		</div>

		<blockquote><p>
  With XP mode providing a reasonable option,&#8230;
</p></blockquote>
<p>Is it?</p>
<p>That line basically translates to [those who bought &quot;Home&quot; editions of Windows should dump any old programs when upgrading to Windows 7]&#8230;&#8230; Doesn&#8217;t sound to convincing to me&#8230;</p>
<p>You know, my brother still using AutoCAD 2000 at home, because it&#8217;s simply too expensive to buy a new verion to justify it&#8217;s cost. He&#8217;ll probably be upset if he upgraded and see his program doesn&#8217;t work, and fall back to WinXP again&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>