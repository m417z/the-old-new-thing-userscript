<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (28)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-472813">
				<div id="div-comment-472813" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://cornbreadshome.spaces.live.com/' rel='external nofollow' class='url'>Andy</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070216-03/?p=27983#comment-472813">
			February 16, 2007 at 10:32 am</a>		</div>

		<p>I would think that most folks who read your blog realize that the style of your code here and your not using class libraries is to reach the widest possible audience with high quality examples that get right to the point with no mucking around. I don&#8217;t think 99% of your readership cares how you code it just so long as you show the how and the why of it being done. From there we take and wrap it into whatever we need to use it in.</p>
<p>Sort of like learning to program in Lisp. I wouldn&#8217;t use it in production code but it is great for teaching certain concepts.</p>
<p>I&#8217;m pretty sure from reading the comments on your blog that most of your readers understand this and just hope you keep writing such good work.</p>
<p>I could be wrong though and there could be a vocal majority of code police out there that are pestering you to code differently, but if there are please ignore them and keep on doing exactly what you are doing.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-472833">
				<div id="div-comment-472833" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">William C Bonner</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070216-03/?p=27983#comment-472833">
			February 16, 2007 at 10:38 am</a>		</div>

		<p>Thank you for posting your information in the base API. &nbsp;I hadn&#8217;t even noticed that, as I learned the API way back when.</p>
<p>I rarely use the API directly anymore, but I can always translate an API call into MFC, which is what I use predominantly these days, while translating the other direction is sometimes hard.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-472913">
				<div id="div-comment-472913" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Steve</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070216-03/?p=27983#comment-472913">
			February 16, 2007 at 11:32 am</a>		</div>

		<p>It&#8217;s unfortunate you are compelled to use your blog time to explain this stuff. I understand why, it&#8217;s still unfortunate.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-472933">
				<div id="div-comment-472933" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Luciano</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070216-03/?p=27983#comment-472933">
			February 16, 2007 at 11:36 am</a>		</div>

		<p>It&#8217;s a pleasure to read some clean, &quot;bare to the metal&quot; code still coming from Microsoft.</p>
<p>Good work!</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-473003">
				<div id="div-comment-473003" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://3dnature.com' rel='external nofollow' class='url'>Chris Hanson</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070216-03/?p=27983#comment-473003">
			February 16, 2007 at 1:09 pm</a>		</div>

		<p>Thanks for everything, Raymond. This web site is a breath of reason and sanity in a world of CWhiffyWidget and System.Net.Bibllebabble. I learned Win32 when MFC was still struggling to prove itself and programmers feared it. I may be a masochist, but I&#8217;d reather deal directly with the API so I know what <em>really</em> is happening. Lord knows your class library is doing &quot;for&quot; you inside the thin wrapper &#8212; sometimes you can go read the source, sometimes you can&#8217;t.</p>
<p>I appreciate the clarity and universal adaptability of your teachings. I&#8217;ve recently &quot;done time&quot; trying to get Windows to draw a set of properly sized, positioned and themed minimize-style buttons in the Caption bar. Wow, what an adventure &#8212; the few existing examples are all very MFC-centric.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-473023">
				<div id="div-comment-473023" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joe Butler</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070216-03/?p=27983#comment-473023">
			February 16, 2007 at 1:43 pm</a>		</div>

		<p>Please don&#8217;t loose the Win32 stuff in favour of the current big thing.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-473043">
				<div id="div-comment-473043" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blog.sc.tri-bit.com/' rel='external nofollow' class='url'>StoneCypher</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070216-03/?p=27983#comment-473043">
			February 16, 2007 at 1:56 pm</a>		</div>

		<p>Well, it&#8217;s worth noting that all four of boost&#8217;s smart pointers have been adopted into C++ TR1, which most compilers &#8211; in MSVS starting with 2k5 &#8211; implement. &nbsp;Granted, it&#8217;s a little annoying that Microsoft has deployed them in stdext:: instead of std::, but you can get around the resultant maintenance headache by collapsing the namespace for the smart pointers explicitly (normally a god-awfully badbear thing to do, but hey, it&#8217;ll prevent bugs here, so do it.)</p>
<p>One of the advantages of the approach Boost and now C++ take is that, beyond being portable and near-zero overhead, they give you the option of selecting between behaviors &#8211; strong pointers, weak pointers and so on &#8211; rather than condemning you to a standard. &nbsp;Those subtle incompatibilities you mention are the result of other approaches just picking one for you and sticking you to it. &nbsp;C++ doesn&#8217;t dance to that groove.</p>
<p>There&#8217;s a standard behavior now. &nbsp;You&#8217;re wise enough to not use MFC when an API approach would reach a broader audience. &nbsp;What of using pure C++ approaches? &nbsp;Here, it&#8217;s (only very recently) a clear option. &nbsp;Basically every major compiler implements at least that part of TR1, given that there&#8217;s such an available reference implementation.</p>
<p>The new smart pointers only want to love you. &nbsp;Won&#8217;t you love them back?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-473053">
				<div id="div-comment-473053" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Jim Kueneman</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070216-03/?p=27983#comment-473053">
			February 16, 2007 at 2:01 pm</a>		</div>

		<p>I also thank you as some of us don&#8217;t use</p>
<p>C at all and by not making your examples</p>
<p>more obscure by forcing us to decode C++,</p>
<p>ATL, MFC, etc is greatly appreciated.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-473063">
				<div id="div-comment-473063" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">C Gomez</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070216-03/?p=27983#comment-473063">
			February 16, 2007 at 2:39 pm</a>		</div>

		<p>First part&#8230; nice explanation&#8230; second part that reads like a disclaimer&#8230; duh.</p>
<p>Unfortunate it comes to explaining everything you say to exhaustion. &nbsp;I hope you find you don&#8217;t have to do that much longer.</p>
<p>In any case, I appreciate that you teach us how things work down at the barest metal and under the darkest hood.</p>
<p>It means when I go back to work, I have an understanding of what&#8217;s happening deeper that my work surface, and it&#8217;s easier to figure out problems.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-473093">
				<div id="div-comment-473093" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Igor Delovski</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070216-03/?p=27983#comment-473093">
			February 16, 2007 at 2:57 pm</a>		</div>

		<p>It&#8217;s easy to understand why you need to explain your moves. I mean, two months ago you wrote about publishers and their ideas about what kind of books are beeing sold these days. Some of them told you that &quot;nobody buys Win32 books any more.&quot;</p>
<p>Well, today I spend some tima at Amazon and I&#8217;ve noticed that your book has reached Sales Rank of 8,632. Is that good? Or is it bad? How bad? So, I compared you to some rather established author: Charles Petzold. He has this book in three versions: api, C# and VB.Net. As much as I know, all of them cover very similar topics with very similar examples in three different languages.</p>
<p>So, these are the numbers &#8211; Amazon Sales Rank:</p>
<p>#17,960 &#8211; Programming Windows, Fifth Edition,</p>
<p>#94,473 &#8211; Programming Windows with C#</p>
<p>#515,469 &#8211; Programming Microsoft Windows with Microsoft Visual Basic .NET</p>
<p>Then I decided to compare languages and few books by language designers:</p>
<p>#1,062 &#8211; The C Programming Language, by K&amp;R</p>
<p>#248,286 &#8211; The C# Programming Language, by Anders Hejlsberg</p>
<p>(BTW, sales ranks at Amazon seem to vary almost every minute but not enough to change my point here&#8230;)</p>
<p>Anyone can draw all kinds of conclusions from these numbers, but I can see here that rumors about death of Win32 API development in C have been greatly exaggerated!</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-473133">
				<div id="div-comment-473133" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Cooney</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070216-03/?p=27983#comment-473133">
			February 16, 2007 at 3:32 pm</a>		</div>

		<blockquote><p>
  I&#8217;ve noticed that your book has reached Sales Rank of 8,632. Is that good? Or is it bad?
</p></blockquote>
<p>Is that within a particular category or across the US? Either way, it&#8217;s pretty nice &#8211; amazon sells a lot of books.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-473203">
				<div id="div-comment-473203" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Mihai</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070216-03/?p=27983#comment-473203">
			February 16, 2007 at 5:57 pm</a>		</div>

		<p>I like your code as it is. If I want ATL or MFC I can convert it to that.</p>
<p>Some of the smart pointers might be standard (and I think stdext:: is the correct namespace for now :-), but why use them?</p>
<p>You are trying to show how Windows works &quot;in the belly,&quot; why things are the way they are.</p>
<p>I think using just enough code to make the point is the right thing.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-473253">
				<div id="div-comment-473253" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://ramblings.aaronballman.com' rel='external nofollow' class='url'>Aaron Ballman</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070216-03/?p=27983#comment-473253">
			February 16, 2007 at 6:59 pm</a>		</div>

		<p>I&#8217;m going to chime in here and let you know that I really appreciate the Win32 perspective on things as well. &nbsp;Keep up the awesome work!</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-473283">
				<div id="div-comment-473283" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://mikie.iki.fi/' rel='external nofollow' class='url'>Mika Raento</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070216-03/?p=27983#comment-473283">
			February 17, 2007 at 4:21 am</a>		</div>

		<p>I think it&#8217;s also a matter of accepting the Win32 abstraction model.</p>
<p>Win32 <em>is</em> a class library, especially when it comes to UI code. You derive from the basic window by handling the messages, and adding new custom messages. Window classes let you use the class you have defined as a black box.</p>
<p>I admit to implementing my own abstraction layers on top of the operating systems ones as often as the next guy. Sometimes it might be &#8216;objectively&#8217; better, but often I think it is because I&#8217;ve never really internalized the operating system&#8217;s model.</p>
<p>Whereas Raymon <em>has</em> internalized the Win32 abstractions and can use them to structure his programs, rather than something else. I assume it&#8217;s in no small part due to the fact that they are actually his abstractions, not somebody else&#8217;s.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-473303">
				<div id="div-comment-473303" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Doug</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070216-03/?p=27983#comment-473303">
			February 17, 2007 at 10:22 am</a>		</div>

		<p>I PREFER to use the direct API for certain types of code. &nbsp;That comes from too many experiences with &quot;library changed&quot;, &quot;library no longer supported&quot;, &#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-473353">
				<div id="div-comment-473353" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Stu</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070216-03/?p=27983#comment-473353">
			February 17, 2007 at 6:54 pm</a>		</div>

		<p>@Igor Delovski: Of course it could just be that you *need* a book to learn the Win32 API, whereas the newer APIs are easier to learn.</p>
<p>I&#8217;m not saying that&#8217;s true or even my opinion, just putting forward another interpretation of your statistics.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-473403">
				<div id="div-comment-473403" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.levicki.net/' rel='external nofollow' class='url'>Igor</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070216-03/?p=27983#comment-473403">
			February 18, 2007 at 8:48 am</a>		</div>

		<p>&quot;This web site is a breath of reason and sanity in a world of CWhiffyWidget and System.Net.Bibllebabble.&quot;</p>
<p>Quoted for truth.</p>
<p>I must admit that I am embarrased because I do not speak latest and greatest developer jargon. I mean, wtf are smart pointers, weak pointers, strong pointers?!?</p>
<p>If someone takes time to explain, please do it via example which shows their real world usage. Statistics of how often those features are needed would be most welcome too.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-473453">
				<div id="div-comment-473453" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Miral</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070216-03/?p=27983#comment-473453">
			February 18, 2007 at 6:34 pm</a>		</div>

		<p>I&#8217;m not going to provide in-depth examples, but basically:</p>
<p>Smart pointers are essentially just a class that holds a single pointer and will delete it in the destructor. &nbsp;The point being that whenever you allocate some memory on the heap you immediately wrap a smart pointer object around it and then it will automatically be deleted when that object goes out of scope, regardless of whether that was through normal exit or throwing an exception. &nbsp;Basically just a generic way to use RAII on arbitrary blocks of memory.</p>
<p>Weak pointers are basically references to another smart pointer, with the property that they will not prevent the smart pointer being destroyed &#8212; they simply null out when that happens. &nbsp;They&#8217;re handy for putting into lookup tables &amp; caches etc where you don&#8217;t want to extend the lifetime of an object but you still need to avoid accessing an invalid pointer, since something else is controlling the lifetime of the object being pointed to.</p>
<p>A strong pointer is the opposite of a weak pointer. &nbsp;Most types of smart pointer are actually strong pointers. &nbsp;A more useful type of strong pointer is a shared pointer, where multiple smart pointers can refer to the same block of memory, and the memory will only get deleted when the last shared pointer pointing to that block is destroyed. &nbsp;Handy when the lifecycle of a piece of memory doesn&#8217;t match a given method or class, so you can&#8217;t scope it more simply.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-473493">
				<div id="div-comment-473493" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://jdanielsmith.spaces.live.com' rel='external nofollow' class='url'>J. Daniel Smith</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070216-03/?p=27983#comment-473493">
			February 19, 2007 at 12:42 am</a>		</div>

		<p>I think now that various C++ smart pointers are standardized, you should seriously consider using them in your code samples&#8211;assuming the sample isn&#8217;t about memory management. &nbsp;Using raw pointers means you&#8217;re cluttering sample code with &quot;irrelevant&quot; details.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-473473">
				<div id="div-comment-473473" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Craig Ringer</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070216-03/?p=27983#comment-473473">
			February 18, 2007 at 10:20 pm</a>		</div>

		<p>As a primarily *nix developer who also targets Windows as a port platform, your weblog is really useful _because_ it focuses on the low level details and makes the content comprehensible for people not used to all the Windows arcana.</p>
<p>For me, keeping track of the Windows API typedefs is quite hard enough (*especially* the ones that obscure pointers &#8211; those are _nasty_) I&#8217;m very glad you&#8217;re not also using a class library.</p>
<p>Personally, I use Qt for almost all my Windows GUI development &#8211; because it has a clean API and is cross platform. But I wouldn&#8217;t expect you to know it, or write about it &#8211; and because your examples are general they&#8217;re informative whether the reader uses MFC, Qt, or makes Windows API calls directly in x86 assembler.</p>
<p>So &#8211; personally I like things just like they are.</p>
<p>I find your articles on platform-wide details like Windows DLLs &amp; dynamic linking incredibly useful, and would personally love to see more in that vein. The discussion of calling conventions used in win32 was also extremely handy.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-473733">
				<div id="div-comment-473733" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://deadnode.org/sw/' rel='external nofollow' class='url'>James</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070216-03/?p=27983#comment-473733">
			February 19, 2007 at 5:08 pm</a>		</div>

		<p>I&#8217;m with Sergio on this: an example using plain old malloc/free (or equivalent) will still make sense to someone who uses smart pointers: they just know to use their &#8216;smart&#8217; counterpart, and that some of the free calls won&#8217;t be necessary thanks to that &#8216;smartness&#8217;. The other way round, however, would be harder: if Raymond posted an example which had a free call missing, is it because the memory gets freed by the OS later? Does it get freed by &#8216;smartness&#8217;, so if you&#8217;re using regular pointers you need to insert a call of your own? Is it just a mistake? Is it safe to free a buffer after the last reference you see, or does it need to be kept around until some later point the &#8216;smart&#8217; compiler knows about but we don&#8217;t?</p>
<p>If Raymond keeps this stuff explicit, we can all follow it easily &#8211; start relying on some optional external understanding, you&#8217;ve added an unnecessary and potentially harmful dependency to the mix.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-473593">
				<div id="div-comment-473593" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">sergio</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070216-03/?p=27983#comment-473593">
			February 19, 2007 at 10:37 am</a>		</div>

		<p>I sincerely vote against any smart pointers, boosts and other stuff of the kind. To paraphrase one popular statement: </p>
<p>&#8216;If a guy doesn&#8217;t know how to program, he has one problem. If he says &quot;I know I&#8217;ll use smart pointers&quot; now he has two problems.&#8217;</p>
<p>(Instead of &quot;smart pointers&quot; any hype-of-the-day can be inserted.) Just because something comes in some new standard it doesn&#8217;t mean it should be *always* used.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-474203">
				<div id="div-comment-474203" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">John Hensley</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070216-03/?p=27983#comment-474203">
			February 20, 2007 at 5:26 pm</a>		</div>

		<p>In my experience, using smart wrappers in sample code or documenting them apart from their source code just invites people to misuse them.</p>
<p>My (least) favorite example is the comment on CComPtrBase::operator&amp;. &quot;The assert usually indicates a bug.&quot; What kind of bug? Ha ha, we won&#8217;t tell you. So people inevitably use the workaround and leak memory anyway.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-474303">
				<div id="div-comment-474303" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://en.wikipedia.org/wiki/Bare_metal' rel='external nofollow' class='url'>bare metal</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070216-03/?p=27983#comment-474303">
			February 21, 2007 at 7:47 am</a>		</div>

		<p>I like you to use ansic &amp; winapi. Please continue to do so.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-475253">
				<div id="div-comment-475253" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://sarathc.wordpress.com' rel='external nofollow' class='url'>Sarath</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070216-03/?p=27983#comment-475253">
			February 22, 2007 at 7:40 pm</a>		</div>

		<p>I fear for how long we will be able to program in Native APIs in Windows because M.S Products gradually becomes .NET oriented.</p>
<p>Suppose I wanna write a windows gadget, it will be more easier (I don&#8217;t the native way) if we use .NET framework and the programming style changing a lot.</p>
<p>But it&#8217;s really nice to know some internals and power of the native code. I&#8217;d like you to write sample code using Win32 APIs. For those who knows the basics of MFC, the code is really easy to convert.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-475963">
				<div id="div-comment-475963" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://deadnode.org/' rel='external nofollow' class='url'>James</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070216-03/?p=27983#comment-475963">
			February 24, 2007 at 6:41 am</a>		</div>

		<p>Sarath: Most Windows programmers have probably never touched the Native API, only the Win32 one layered on top of it. Programming the Native API has always been fairly difficult, thanks to a shortage of documentation and compiler/linker support, although aspects of that have improved in recent years.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-476203">
				<div id="div-comment-476203" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">f00f</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070216-03/?p=27983#comment-476203">
			February 26, 2007 at 6:06 am</a>		</div>

		<p>&gt; In fact, I *almost* expect you to do it.</p>
<p>(emphasis mine)</p>
<p>Good, because I don&#8217;t =)</p>
<p>Bare Metal: AFAIK any C source file that includes &lt;windows.h&gt; does not compile with pedantic ansi errors turned on.</p>
<p>(I use win32 in C without a CRT lib)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-631223">
				<div id="div-comment-631223" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.stevetrefethen.com/blog/AGenericWindowsApplicationWrittenInObjectPascal.aspx' rel='external nofollow' class='url'>A generic Windows application written in Object Pascal</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070216-03/?p=27983#comment-631223">
			May 20, 2008 at 3:00 am</a>		</div>

		<p>PingBack from <a rel="nofollow" target="_new" href="http://www.stevetrefethen.com/blog/AGenericWindowsApplicationWrittenInObjectPascal.aspx" rel="nofollow">http://www.stevetrefethen.com/blog/AGenericWindowsApplicationWrittenInObjectPascal.aspx</a></p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>