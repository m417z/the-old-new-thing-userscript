<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (13)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-1110053">
				<div id="div-comment-1110053" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">John</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140303-00/?p=1623#comment-1110053">
			March 3, 2014 at 8:52 am</a>		</div>

		<p>Is one of those &quot;sanity checks&quot; that is left as an exercise to the reader dealing with the possible race condition between launching the process and when UI Automation registers itself as an event handler? (Is this even an issue?). Consider the possibility of a program that just blows chow right out of the gate.</p>
<p>I enjoy these UIAutomation Posts keep them coming!</p>
<div class="post">[<em>Yes, there is a small race window if the program blows chunks before Process.Start returns. -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-bboorman odd alt thread-odd thread-alt depth-1" id="comment-1110073">
				<div id="div-comment-1110073" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Brian_EE' rel='external nofollow' class='url'>Brian_EE</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140303-00/?p=1623#comment-1110073">
			March 3, 2014 at 9:02 am</a>		</div>

		<p>@John, No&#8230; because the program waits on the resultReady, which will only fire when all the conditions (including processId check) have been met.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1110123">
				<div id="div-comment-1110123" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140303-00/?p=1623#comment-1110123">
			March 3, 2014 at 10:51 am</a>		</div>

		<p>This is what WaitForMultipleObjects was made for.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-hikari odd alt thread-odd thread-alt depth-1" id="comment-1110153">
				<div id="div-comment-1110153" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Chris+Crowther' rel='external nofollow' class='url'>Chris Crowther</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140303-00/?p=1623#comment-1110153">
			March 3, 2014 at 11:21 am</a>		</div>

		<p>At work this situation usually results in me having to make a change so the workflow tool doesn&#39;t display the dialog, or makes it auto-close after some amount of time.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1110163">
				<div id="div-comment-1110163" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Anon</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140303-00/?p=1623#comment-1110163">
			March 3, 2014 at 12:20 pm</a>		</div>

		<p>@Chris Crowther</p>
<p>90% of the time these popups are utterly useless UNLESS there&#39;s a failure, so you should get rid of them regardless.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1110183">
				<div id="div-comment-1110183" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">JJJ</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140303-00/?p=1623#comment-1110183">
			March 3, 2014 at 3:49 pm</a>		</div>

		<p>Ugh, we have internal utilities at my workplace that launch &quot;Done!&quot; message boxes. &nbsp;The worst is that at least 2 of these utilities are used during software builds. &nbsp;Apparently nobody in the last 15 years thought it was unusual to have to click OK twice during a build (along with about 5 other manual steps).</p>
<p>Add a &quot;Done!&quot; message box if you want to broadcast to the world, &quot;Wow, I can&#39;t believe I wrote software that works!&quot;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1110203">
				<div id="div-comment-1110203" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Matt</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140303-00/?p=1623#comment-1110203">
			March 3, 2014 at 5:09 pm</a>		</div>

		<p>For the record, if you care about the race-condition, the correct approach is to start the process suspended, and then resume the process (or rather the initial thread of the process) once you&#39;ve captured the process id.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1110213">
				<div id="div-comment-1110213" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Random User 943579123</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140303-00/?p=1623#comment-1110213">
			March 3, 2014 at 5:11 pm</a>		</div>

		<p>JJJ: Or, if the target audience explicitly requests it because, &quot;how else are we supposed to tell that it&#39;s done?&quot; :-/</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-cheong even thread-even depth-1" id="comment-1110223">
				<div id="div-comment-1110223" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/cheong00' rel='external nofollow' class='url'>cheong00</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140303-00/?p=1623#comment-1110223">
			March 3, 2014 at 5:25 pm</a>		</div>

		<p>@JJJ: Yup, alert users only on unexpected conditions.</p>
<p>By launching &quot;Done!&quot; you&#39;re effectively telling the user the &quot;success&quot; is unexpected.</p>
<p>@Random User 943579123: Event logs and ordinary log files have a purpose. By the application&#39;s nature it can silently goes away like most Windows&#39; builtin scheduled tasks too.</p>
<div class="post">[<em>Obviously, if there is a /silent flag or some other way to suppress the message on success, you would use it. But if there isn&#39;t, this article shows how to automate the dialog box. Because that generalizes to other cases where, say, you want to automate a confirmation dialog or a dialog to start the activity. -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1110243">
				<div id="div-comment-1110243" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">ChristianSauer</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140303-00/?p=1623#comment-1110243">
			March 3, 2014 at 11:47 pm</a>		</div>

		<p>I wrote a Software which displays &quot;done&quot; &#8211; simply because it&#39;s writing the results to files and there is no visual clue if the operation finished or not. The &quot;done&quot; message simply tells the user &quot;ok, the next step can be taken&quot; &#8211; which is fine when the target of your program is an actual person.</p>
<p>Mostly, programmers forgot that there are epeople who might use their tools in an automated fashion where an &quot;Done&quot; message is utterly annoying. </p>
<p>So, for me, the solution is to use a simple configuration setting &quot;unattended&quot; which supresses all message windows.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1110283">
				<div id="div-comment-1110283" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Anon</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140303-00/?p=1623#comment-1110283">
			March 4, 2014 at 7:17 am</a>		</div>

		<p>@ChristianSauer</p>
<p>The correct UX for that scenario is a &quot;Done!&quot; or &quot;Operation Completed Successfully&quot; line in the status bar, or presented somewhere else on the application; requiring additional button-/key-presses is always negative.</p>
<p>(If only MS had learned this lesson with Win8/8.1&#8230;)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1110373">
				<div id="div-comment-1110373" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">John</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140303-00/?p=1623#comment-1110373">
			March 4, 2014 at 11:06 am</a>		</div>

		<p>@Matt Thanks! I&#39;m off to read about CreateProcess() (doesn&#39;t look like the CREATE_SUSPENDED was exposed in the .NET Framework&#39;s Process Class)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1110273">
				<div id="div-comment-1110273" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Jonathan</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140303-00/?p=1623#comment-1110273">
			March 4, 2014 at 7:13 am</a>		</div>

		<p>Minor programming quip &#8211; Rather than:</p>
<p>***** var invokePattern = okButton.GetCurrentPattern(InvokePattern.Pattern) as InvokePattern;</p>
<p>I prefer:</p>
<p>***** var invokePattern = (InvokePattern)okButton.GetCurrentPattern(InvokePattern.Pattern);</p>
<p>Why? Because if the result can&#39;t be cast, the former will silently produce a null, and later you&#39;ll get an unexplained NullReferenceException. The latter will immediately through a much clearer InvalidCastException with &quot;Unable to cast object of type &#39;x&#39; to type &#39;y&#39;&quot;.</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>