<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (43)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment byuser comment-author-anonymouscommenter even thread-even depth-1" id="comment-1238076">
				<div id="div-comment-1238076" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">anonymouscommenter</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150709-00/?p=45181#comment-1238076">
			July 9, 2015 at 7:08 am</a>		</div>

		<p>Even without being large-address aware you still get the extra set of registers and PC-relative addressing modes by compiling for x64. &nbsp;That alone makes a big difference to the performance of some software. &nbsp;Register spillage was the bane of x86.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1238066">
				<div id="div-comment-1238066" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Kirillenseer</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150709-00/?p=45181#comment-1238066">
			July 9, 2015 at 7:11 am</a>		</div>

		<p>Assuming pointers to be 32b is stupid. Plain stupid.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1238056">
				<div id="div-comment-1238056" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Dan Bugglin</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150709-00/?p=45181#comment-1238056">
			July 9, 2015 at 7:12 am</a>		</div>

		<p>The sad part is the customer probably disabled ASLR on their application as the &quot;solution&quot;.</p>
<p>@cuavas yeah with compiler optimizations it&#39;s my understanding some functions may fit all their variables in registers when they couldn&#39;t in 32-bit mode, which can really speed things up in the right cases.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1238046">
				<div id="div-comment-1238046" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">cSharpFanboy</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150709-00/?p=45181#comment-1238046">
			July 9, 2015 at 7:29 am</a>		</div>

		<p>This is nice to know. It makes it easier to find accidental pointer truncation errors on 64 bit builds: Just run on windows 8 and should crash right away. One of our customers found a (7 year old) pointer truncation for us about 6 months ago. We never noticed during testing, as we go out of my way to use as little memory as possible. </p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-anonymouscommenter even thread-even depth-1" id="comment-1238036">
				<div id="div-comment-1238036" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">anonymouscommenter</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150709-00/?p=45181#comment-1238036">
			July 9, 2015 at 7:38 am</a>		</div>

		<p>You should have answered with &quot;Why wouldn&#39;t it?&quot;</p>
<p>Might just as well have asked why it returns addresses over 1MB. You have a 64bit address space, so your addresses need 64 bits. End of story.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-anonymouscommenter odd alt thread-odd thread-alt depth-1" id="comment-1238026">
				<div id="div-comment-1238026" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">anonymouscommenter</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150709-00/?p=45181#comment-1238026">
			July 9, 2015 at 7:53 am</a>		</div>

		<p>@Andre: Yup. My response would have been &quot;Because it can.&quot;</p>
<p>As for &quot;why are they truncating?&quot;, my guess would be that they&#39;re round-tripping their pointers through an int, rather than a (u)intptr_t.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-anonymouscommenter even thread-even depth-1" id="comment-1238016">
				<div id="div-comment-1238016" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">anonymouscommenter</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150709-00/?p=45181#comment-1238016">
			July 9, 2015 at 8:02 am</a>		</div>

		<p>&gt; my guess would be that they&#39;re round-tripping their pointers through an int, rather than a (u)intptr_t.</p>
<p>Or a long, which would work on most 64-bit platforms but not Windows.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-davebacher odd alt thread-odd thread-alt depth-1" id="comment-1238006">
				<div id="div-comment-1238006" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Dave+Bacher' rel='external nofollow' class='url'>Dave Bacher</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150709-00/?p=45181#comment-1238006">
			July 9, 2015 at 8:02 am</a>		</div>

		<p>If you&#39;re loading 64bit components and DLLS, and you&#39;re compiled to a 2GB address space, isn&#39;t that likely to &#8212; you know, crash horribly because they&#39;re expecting a larger address space? &nbsp;I mean, they might work, but how many of them are routinely tested in a 64bit process running in a 2gb address space? &nbsp;Probably pretty close to zero &#8212; they really need to fix the bug.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-anonymouscommenter even thread-even depth-1" id="comment-1237996">
				<div id="div-comment-1237996" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">anonymouscommenter</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150709-00/?p=45181#comment-1237996">
			July 9, 2015 at 8:18 am</a>		</div>

		<p>&gt; Or a long, which would work on most 64-bit platforms but not Windows.</p>
<p>Indeed. Took me awhile to find out why it was crashing. sizeof(char *) &gt; sizeof(long) &#8211; ugh!</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-fredericmagnyf odd alt thread-odd thread-alt depth-1" id="comment-1237986">
				<div id="div-comment-1237986" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Medinoc' rel='external nofollow' class='url'>Medinoc</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150709-00/?p=45181#comment-1237986">
			July 9, 2015 at 8:20 am</a>		</div>

		<p>Note: I may be mistaken, but from my experience (ETA: And the very link on the article), simply omitting /LARGEADDRESSAWARE isn&#39;t enough for a 64-bit program because it&#39;s set by default: One has to explicitly clear it with /LARGEADDRESSAWARE:NO.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-anonymouscommenter even thread-even depth-1" id="comment-1237966">
				<div id="div-comment-1237966" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">anonymouscommenter</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150709-00/?p=45181#comment-1237966">
			July 9, 2015 at 8:42 am</a>		</div>

		<p>Couldn&#39;t they just compile their program as a 32 bits program ? It should solve all their problems !</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-zlynx odd alt thread-odd thread-alt depth-1" id="comment-1237956">
				<div id="div-comment-1237956" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Zan+Lynx%27' rel='external nofollow' class='url'>Zan Lynx'</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150709-00/?p=45181#comment-1237956">
			July 9, 2015 at 9:37 am</a>		</div>

		<p>They might not be able to Peter. Some 3rd party libraries are showing up now with 64 bit only builds, the opposite problem that developers used to have.</p>
<p>I feel absolutely no sympathy for them however. I love not needing to worry about getting a 1 GB memory map. Linux works, BSD works and 64 bit Windows works. 32 bit Windows can get stuffed now.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-anonymouscommenter even thread-even depth-1" id="comment-1237946">
				<div id="div-comment-1237946" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">anonymouscommenter</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150709-00/?p=45181#comment-1237946">
			July 9, 2015 at 10:12 am</a>		</div>

		<p>&gt; (Of course, if you&#39;re going to do that, then you probably should just compile the program as a 32-bit program, since you&#39;re not really gaining much from being a 64-bit program any more.) </p>
<p>You will gain more registers without having to allocate extra space for pointers, I didn&#39;t know this switch existed, I had been using a base address and indexes to avoid pointer bloat, note, however, the base+index can address far more than 2GB.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-anonymouscommenter odd alt thread-odd thread-alt depth-1" id="comment-1237916">
				<div id="div-comment-1237916" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">anonymouscommenter</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150709-00/?p=45181#comment-1237916">
			July 9, 2015 at 12:05 pm</a>		</div>

		<p>@Evan: Or just use intptr_t and co &#8211; because those are actually guaranteed to work and while optional are incredibly widely implemented.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-anonymouscommenter even thread-even depth-1" id="comment-1237906">
				<div id="div-comment-1237906" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">anonymouscommenter</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150709-00/?p=45181#comment-1237906">
			July 9, 2015 at 2:19 pm</a>		</div>

		<p>I started out doing Assembler on S/360. &nbsp;The very thought of truncating a pointer is analogous with hitting oneself in the face with a hammer and then wondering why in the world it hurts. &nbsp;Are there really developers out there who do things like truncate pointers?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-aadsso-1live-com000340019af3cc36 odd alt thread-odd thread-alt depth-1" id="comment-1237896">
				<div id="div-comment-1237896" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Richard+T+Russell' rel='external nofollow' class='url'>Richard T Russell</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150709-00/?p=45181#comment-1237896">
			July 9, 2015 at 3:48 pm</a>		</div>

		<p>Wanting to have some &#39;32-bit compatible&#39; pointers in a 64-bit process is not necessarily stupid. &nbsp;For example the application may access legacy data structures (perhaps stored in existing files or the registry) that have space for only 32-bits. &nbsp;If it inherently never needs to access more than 4 Gbytes of memory, leaving those structures unchanged may be far easier than any other solution.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-anonymouscommenter even thread-even depth-1" id="comment-1237886">
				<div id="div-comment-1237886" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">anonymouscommenter</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150709-00/?p=45181#comment-1237886">
			July 9, 2015 at 11:24 pm</a>		</div>

		<p>@Evan &#8211; Yes, that&#39;s probably it.</p>
<p>Part of my brain knows that Windows uses LLP64, but for some reason it just never sinks in intuitively, and it just keeps suprising me every time I &quot;realise&quot; the fact anew.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-anonymouscommenter odd alt thread-odd thread-alt depth-1" id="comment-1237876">
				<div id="div-comment-1237876" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">anonymouscommenter</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150709-00/?p=45181#comment-1237876">
			July 10, 2015 at 3:57 am</a>		</div>

		<p>Why was the first 4GB of LAA 64-bit app address space not reserved so people find this out very quickly?</p>
<div class="post">[<em>It would be the /LARGEADDRESSAWARE problem in reverse. People will write code on the assumption that pointers are always greater than 4GB. In other words, if your problem is that people don&#39;t support blue widgets, and you solve it by changing the system so that all anybody gets are blue widgets, then nobody will support red widgets! -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-anonymouscommenter even thread-even depth-1" id="comment-1237866">
				<div id="div-comment-1237866" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">anonymouscommenter</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150709-00/?p=45181#comment-1237866">
			July 10, 2015 at 6:55 am</a>		</div>

		<p>@12BitSlab: Win32 encouraged casting between ptr and DWORD. Guess what happens on conversion to 64 bit.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-anonymouscommenter odd alt thread-odd thread-alt depth-1" id="comment-1237846">
				<div id="div-comment-1237846" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">anonymouscommenter</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150709-00/?p=45181#comment-1237846">
			July 10, 2015 at 7:09 am</a>		</div>

		<p>@ Joshua &#8212; I do realize that. &nbsp;Bad advice leads to bad code. &nbsp;Most &#8212; not all &#8212; ASM programmers would have realized the advice was wrong right away and did their own thing.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-anonymouscommenter even thread-even depth-1" id="comment-1237836">
				<div id="div-comment-1237836" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">anonymouscommenter</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150709-00/?p=45181#comment-1237836">
			July 10, 2015 at 7:14 am</a>		</div>

		<p>@12bitslab</p>
<p>I&#39;d say truncating pointers and referencing the truncated pointer is more akin to cutting off your arm at the elbow and wondering why you can&#39;t pick anything up.</p>
<p>@Richard T Russell</p>
<p>As Raymond mentioned, if they want to intentionally not be LAA-aware, they should never have said they were LAA-aware in the first place.</p>
<p>@Joshua</p>
<p>In 1932, Chevrolet used 6v batteries on their pickup trucks. Guess what happens when you jump-start it with a 2015 Denali.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-anonymouscommenter odd alt thread-odd thread-alt depth-1" id="comment-1237826">
				<div id="div-comment-1237826" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">anonymouscommenter</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150709-00/?p=45181#comment-1237826">
			July 10, 2015 at 7:20 am</a>		</div>

		<p>@12BitSlab</p>
<p>pointer&lt;-&gt;DWORD wasn&#39;t bad advice, because a 32-bit pointer fits into a 32-bit DWORD.</p>
<p>Since that advice was released, however, we&#39;ve added pointer_64 and DWORD64.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-anonymouscommenter even thread-even depth-1" id="comment-1237816">
				<div id="div-comment-1237816" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">anonymouscommenter</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150709-00/?p=45181#comment-1237816">
			July 10, 2015 at 8:04 am</a>		</div>

		<p>@Anon LAA is the default, but I&#39;m sure if you asked them they&#39;d say &quot;but we ARE aware of large addresses, we just truncate them&quot;. I&#39;d file this under &quot;people who shouldn&#39;t be allowed to use pointers&quot;.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-alegrigoriev odd alt thread-odd thread-alt depth-1" id="comment-1237786">
				<div id="div-comment-1237786" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/alegr1' rel='external nofollow' class='url'>alegr1</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150709-00/?p=45181#comment-1237786">
			July 10, 2015 at 8:59 am</a>		</div>

		<p>Warning for using DWORD instead of DWORD_PTR has been there for 10 years already. Get with the program, people.</p>
<p>@Richard T Russel:</p>
<p>Nobody stores virtual addresses in registry. That would be extremely stupid.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-anonymouscommenter even thread-even depth-1" id="comment-1237776">
				<div id="div-comment-1237776" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">anonymouscommenter</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150709-00/?p=45181#comment-1237776">
			July 10, 2015 at 9:08 am</a>		</div>

		<p>@Richard Russell</p>
<p>The code loading the data should be able to convert 32-bit pointers into 64-bit ones for a new version of a structure during the deserialization process.</p>
<p>You can even reverse it when storing data into the registry for backwards compatibility.</p>
<p>The pointer value is going to be pointless, anyway, since whatever it pointed to will likely change the next time the program runs.</p>
<p>Just have the 64-bit version of the program parse the data structure and copy it to one with the pointers replaced with 64-bit ones.</p>
<p>When saving, do the opposite: copy it all to a data structure with 32-bit pointers, with the pointers set to NULL.</p>
<p>Not sure why you&#39;d be serializing something that has pointer values, anyway.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-anonymouscommenter odd alt thread-odd thread-alt depth-1" id="comment-1237756">
				<div id="div-comment-1237756" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">anonymouscommenter</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150709-00/?p=45181#comment-1237756">
			July 10, 2015 at 9:13 am</a>		</div>

		<p>&gt; In 1932, Chevrolet used 6v batteries on their pickup trucks. Guess what happens when you jump-start it with a 2015 Denali.</p>
<p>It starts. Having a great uncle with such a truck and having heard his maintenance stories on it, I happen to know the circuits can take 12v for a couple of minutes.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-anonymouscommenter even thread-even depth-1" id="comment-1237736">
				<div id="div-comment-1237736" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">anonymouscommenter</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150709-00/?p=45181#comment-1237736">
			July 10, 2015 at 10:54 am</a>		</div>

		<p>Correct.</p>
<p>Every 64-bit &quot;portable executable&quot; has lots of 32-bit RVAs in its headers.-P</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1222001">
				<div id="div-comment-1222001" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">@12BitSlab</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150709-00/?p=45181#comment-1222001">
			July 10, 2015 at 10:58 am</a>		</div>

		<p>The original S/360 &quot;Load Address&quot; instruction cleared the MSB of the result, i.e. worked modulo 2**24. The LA of S/370-XA cleared only the MSBit&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-mngoldeneagle even thread-even depth-1" id="comment-1237716">
				<div id="div-comment-1237716" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/MNGoldenEagle' rel='external nofollow' class='url'>MNGoldenEagle</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150709-00/?p=45181#comment-1237716">
			July 10, 2015 at 12:03 pm</a>		</div>

		<p>@@: To whomever is setting their name field to @&lt;someone who previously posted&gt;&#8230; how are we supposed to address you in our replies? &nbsp;@@12BitSlab? &nbsp;@@? &nbsp;I&#39;m just going to call you At now.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-anonymouscommenter odd alt thread-odd thread-alt depth-1" id="comment-1237696">
				<div id="div-comment-1237696" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">anonymouscommenter</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150709-00/?p=45181#comment-1237696">
			July 10, 2015 at 3:21 pm</a>		</div>

		<p>@Neil:</p>
<p>&gt; Why was the first 4GB of LAA 64-bit app address space not reserved so people find this out very quickly?</p>
<p>because a number of critical 64bit DLLs load into 32bit processes also so at the very least these would have to load at the same address in both 32 and 64bit processes.</p>
<p>And then the 64bit code needs to share data with the thunking layer between 32 and 64 bits so this would mean that 32 bit code would need to be able to get data from 64 bit addresses.</p>
<p>This was probably the right design decision although it would have been nice to have a &quot;pure64&quot; variant of the OS from day 1 that didn&#39;t map the first 4gb but basically it would have run explorer.exe and notepad.exe, not that useful.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-aadsso-1live-com000340019af3cc36 even thread-even depth-1" id="comment-1221991">
				<div id="div-comment-1221991" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Richard+T+Russell' rel='external nofollow' class='url'>Richard T Russell</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150709-00/?p=45181#comment-1221991">
			July 10, 2015 at 3:24 pm</a>		</div>

		<p>@Chris Iverson:</p>
<p>The specific (real) example I had in mind is an interpreted programming language in which all pointers are *defined* to be 32 bits. &nbsp;This creates issues for a 64-bit interpreter of that language, and your suggestions don&#39;t help in this case.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-anonymouscommenter odd alt thread-odd thread-alt depth-1" id="comment-1237686">
				<div id="div-comment-1237686" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">anonymouscommenter</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150709-00/?p=45181#comment-1237686">
			July 10, 2015 at 5:20 pm</a>		</div>

		<p>(32bit RVA) well who in their right mind would make a &gt;2/4gb .exe file&#8230;me! Giant DVD bound conditional SFX. Thankfully my custom resource format is outside the image. No points for guessing why I don&#39;t sign such an .exe.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-anonymouscommenter even thread-even depth-1" id="comment-1237636">
				<div id="div-comment-1237636" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">anonymouscommenter</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150709-00/?p=45181#comment-1237636">
			July 11, 2015 at 12:31 am</a>		</div>

		<p>@Richard T Russell Reserve 4gb of address space in your 64bit version and add your 32 bit pointers to the base pointer. </p>
<p><a rel="nofollow" target="_new" href="https://msdn.microsoft.com/en-us/library/windows/desktop/aa366887(v=vs.85).aspx">msdn.microsoft.com/&#8230;/aa366887(v=vs.85).aspx</a></p>
<p>p.s. I used BBCBASIC x86 for years :-)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-anonymouscommenter odd alt thread-odd thread-alt depth-1" id="comment-1237626">
				<div id="div-comment-1237626" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">anonymouscommenter</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150709-00/?p=45181#comment-1237626">
			July 11, 2015 at 7:38 am</a>		</div>

		<p>Once upon a time, I was porting some code to a new 32-bit target system. The new system routinely returned pointers greater than 2^31-1, even for small allocations.</p>
<p>But there were a lot of places in the code that truncated 32-bit pointers to just 31 bits, and used the highest bit as an error flag. (by casting the pointer to signed int and checking for &gt;0)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-anonymouscommenter even thread-even depth-1" id="comment-1237616">
				<div id="div-comment-1237616" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">anonymouscommenter</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150709-00/?p=45181#comment-1237616">
			July 11, 2015 at 10:34 am</a>		</div>

		<p>Is windows even reliable enough to where this matters ? I mean, the lack of quality and the whole spyware debacle that has plagued the windows franchise (but the company hasn&#39;t solved) kind of makes technical questions irrelevant. </p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-anonymouscommenter odd alt thread-odd thread-alt depth-1" id="comment-1237606">
				<div id="div-comment-1237606" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">anonymouscommenter</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150709-00/?p=45181#comment-1237606">
			July 11, 2015 at 2:42 pm</a>		</div>

		<p>@Mike No operating system can solve the problem of malicious software, you should either be more careful or use a minority OS (I assume you picked the later). I&#39;m sure Microsoft would love to get the easy ride that Linux etc get. Boring troll is boring.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-anonymouscommenter even thread-even depth-1" id="comment-1237586">
				<div id="div-comment-1237586" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">anonymouscommenter</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150709-00/?p=45181#comment-1237586">
			July 11, 2015 at 3:10 pm</a>		</div>

		<p>The truncating pointers to 32-bits is actually pretty common, it used to be endemic throughout the microsoft code bases because for so many years sizeof(DWORD) == sizeof(DWORD*) which ended up in a lot of code that used the two interchangeably. It&#39;s bad form and not something you were supposed to be doing, but it happened a lot and IIRC it at least initially resulted in some oddities in what you&#39;d expect for sizeof(T) on some types that you would&#39;ve expected to be 64-bit that were 32-bit specifically because it was so common (although i admit at present im drawing a blank on what the type was exactly; maybe just &#39;int&#39;? id have to check).</p>
<p>tl;dr: ASLR is right, and its really important in a lot of server side processes. Linux et al are woefully behind at present.</p>
<p>The addresses &gt;4GB is because this is really important to ASLR; services are long-running and handle multiple users and often do so in the context of threads and lots and lots of virtual mappings/heaps; which means an attacker could essentially fixate memory allocations so that they need not be able to guess an arbitrary address but rather could predict within 80% or more where a given allocation would occur. There are and were issues with allocation biases as well, for instance in 7 thread stack allocations would bias towards lower addresses and start filling in the gaps and the TEB was generally at a predictable address. It&#39;s been a while since I&#39;ve looked at it, so precisely what the biases were is probably slightly off; Microsoft was aware of these issues along with issues relating to the system call interface in early 2009 and elected to do nothing for years until it started being actively exploited.</p>
<p>tl;dr: Windows ASLR is light years ahead of Linux; (also I sincerely hate everyone who compiles windows applications with gcc and not MSVC.)</p>
<p>In re Linux; at present, if you can either leak or blindly operate on a single mmap() address and known a bit about the target application, specifically have had access to a compiled version of the same application (i.e. you&#39;ve looked at the same RPM or .deb etc), then you can actually calculate with static offsets the base addresses of all loaded modules. Linux needs to introduce more entropy into allocations akin to how the openbsd allocator utilizes arc4, and it needs to randomize the load order of modules. Furthermore, it needs to remove the bias where small mmap&#39;s will always occur in order at the bottom of the address space and larger ones will always start immediately after the first section of ld.so (IIRC) towards the top of the address space. In short, Linux ASLR sucks, and with a lot of common c++ constructs (vptrs) you should be able to essentially blindly bypass ASLR if you can control a few offsets used (you need to take the vptr and turn it back into the base address of the mapping and then perform either a single subtraction or addition whose value you control).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-anonymouscommenter odd alt thread-odd thread-alt depth-1" id="comment-1237576">
				<div id="div-comment-1237576" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">anonymouscommenter</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150709-00/?p=45181#comment-1237576">
			July 11, 2015 at 9:55 pm</a>		</div>

		<p>Imagine what would Linus Torvalds say if somebody would ask him, &quot;Could you please limit the heap address space to 2GB because our large customer truncates pointers to 32-bit?&quot;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-anonymouscommenter even thread-even depth-1" id="comment-1237516">
				<div id="div-comment-1237516" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">anonymouscommenter</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150709-00/?p=45181#comment-1237516">
			July 13, 2015 at 8:37 am</a>		</div>

		<p>Probably along the lines of &quot;please write your own malloc()&quot;.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-anonymouscommenter odd alt thread-odd thread-alt depth-1" id="comment-1237506">
				<div id="div-comment-1237506" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">anonymouscommenter</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150709-00/?p=45181#comment-1237506">
			July 13, 2015 at 10:58 am</a>		</div>

		<p>I wish that Windows had an &quot;x32&quot; target like Linux. &nbsp;For those who don&#39;t know, Linux&#39;s &quot;x32&quot; is x86-64 except that the size of pointers is 32-bit. &nbsp;This gets you some advantages of 64-bit, such as 64-bit registers and more of them, but without the penalty of doubling your pointer size. &nbsp;It&#39;s a great target for many applications that simply don&#39;t need a 64-bit address space, yet don&#39;t need to be backward-compatible, either.</p>
<p>In Windows, you can always link a 64-bit application with /LARGEADDRESSAWARE:NO to get a 2 GB address space in an x86-64 program, and thus could use x32 with a modified C compiler, but you&#39;d be on your own when it came to the runtime library and Win32. &nbsp;Win32 would expect all structures to be their full 64-bit form. &nbsp;Also, you&#39;d only get 2 GB, not 4 GB.</p>
<p>Unfortunately, true x32 support in Windows would require a full set of runtime, Win32 and NT libraries, which are far larger in Windows than the equivalents in Linux.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-anonymouscommenter even thread-even depth-1" id="comment-1237466">
				<div id="div-comment-1237466" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">anonymouscommenter</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150709-00/?p=45181#comment-1237466">
			July 13, 2015 at 12:22 pm</a>		</div>

		<p>@Myria: If you want 64-bit registers but only 32-bit pointers, why not (in Linux anyways) just choose the appropriate -march setting (lots of games did something similar in DOS after the 386 came out)? It seems silly to say &quot;I want to be a 64-bit program but restrict myself to the first 4GB of virtual memory&quot;, particularly when ASLR exists. You may have to be more careful about saving registers during calls, but at least you don&#39;t have to potentially have 3 copies of each system library installed!</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-mngoldeneagle odd alt thread-odd thread-alt depth-1" id="comment-1237456">
				<div id="div-comment-1237456" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/MNGoldenEagle' rel='external nofollow' class='url'>MNGoldenEagle</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150709-00/?p=45181#comment-1237456">
			July 13, 2015 at 2:57 pm</a>		</div>

		<p>@Myria: The only strictly valid penalty for doubling your pointer size that I can think of is the increased overhead that brings to your application. &nbsp;And considering that memory is cheap and there are a ton of workarounds around this, I don&#39;t think the cost justification really works out for making that kind of feature. &nbsp;And as ErikF points out, without 64-bit pointers you get weak ASLR, which Microsoft definitely doesn&#39;t want.</p>
<p>Now if only I could force all applications to use ASLR&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1237446">
				<div id="div-comment-1237446" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">jonwil</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150709-00/?p=45181#comment-1237446">
			July 13, 2015 at 4:43 pm</a>		</div>

		<p>In regards to storing pointers in disk files, I work on code enhancement mods for an older game title and that game stores pointers in its disk files and has some special logic to say &quot;when this structure was written to disk, it was at address xyz, now its at address xyz&quot; then some other logic to say &quot;when this structure was written to disk this field pointed to a structure at xyz, please replace it with the new address of that structure&quot;</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>