<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (17)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-292943">
				<div id="div-comment-292943" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">jwf</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050727-16/?p=34793#comment-292943">
			July 27, 2005 at 10:41 am</a>		</div>

		<p>Why can&#8217;t DestroyWindow assert in this recursive case to give the developer more clues?<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-292953">
				<div id="div-comment-292953" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">binaryc</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050727-16/?p=34793#comment-292953">
			July 27, 2005 at 10:45 am</a>		</div>

		<p>I&#8217;ve seen so many people call DestroyWindow in WM_DESTROY.  It really makes me wonder where they are getting the idea that this is the right thing to do.  MSDN has some incorrect information, but I really doubt it suggests doing that.</p>
<p>Maybe people think WM_DESTROY means &quot;please destroy your window&quot; rather than &quot;your window is being destroyed&quot;<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-292993">
				<div id="div-comment-292993" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Crash Cash</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050727-16/?p=34793#comment-292993">
			July 27, 2005 at 1:01 pm</a>		</div>

		<blockquote><p>
  Maybe people think WM_DESTROY means &quot;please destroy your window&quot; rather than &quot;your window is being destroyed&quot; </p>
<p>It could be they&#8217;re coming from X Windows, where that&#8217;s exactly the case. Still doesn&#8217;t give them an excuse though.
</p></blockquote>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-293023">
				<div id="div-comment-293023" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://yaapi.blogspot.com' rel='external nofollow' class='url'>Fox Cutter</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050727-16/?p=34793#comment-293023">
			July 27, 2005 at 1:49 pm</a>		</div>

		<p>In a perfect world it would be nice if windows would see that&#8217;s already in the destroy window phase and just ignore the command, but I have the suspicion that such a thing might break things for some applications. </p>
<p>Still it&#8217;s interesting to know, it&#8217;s something I&#8217;ve done inadvertently done before. I didn&#8217;t understand it at the time, but this does explains a lot.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-293033">
				<div id="div-comment-293033" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.accidentalscientist.com' rel='external nofollow' class='url'>Simon Cooke</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050727-16/?p=34793#comment-293033">
			July 27, 2005 at 3:40 pm</a>		</div>

		<p>: Maybe people think WM_DESTROY means &quot;please<br />
<br />: destroy your window&quot; rather than &quot;your<br />
<br />: window is being destroyed&quot;</p>
<p>That would be silly, because WM_CLOSE means that. ;-)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-293073">
				<div id="div-comment-293073" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Jack Mathews</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050727-16/?p=34793#comment-293073">
			July 27, 2005 at 6:59 pm</a>		</div>

		<p>Well, the old old Windows messages don&#8217;t have a distinction between notification messages and window messages.</p>
<p>Looking at WM_DESTROY and WM_CLOSE, and thinking of a &quot;message&quot; being a command, both are telling a window to close or destroy.  They&#8217;re pretty much synonymous on the surface.  Now if WM_DESTROY were named WN_DESTROYING, then that would be a lot easier to see it as &quot;oh, I&#8217;m being notified that I&#8217;m being destroyed.&quot;</p>
<p>I guess I&#8217;m just saying it&#8217;s just unfortunate all around and not terribly clear.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-293103">
				<div id="div-comment-293103" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Tim Smith</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050727-16/?p=34793#comment-293103">
			July 27, 2005 at 8:09 pm</a>		</div>

		<p>I agree with Jack.  I am sure I have done this myself.  With general window messages, it can be hard to tell which are active/request messages and which are notifications.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-293113">
				<div id="div-comment-293113" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.accidentalscientist.com' rel='external nofollow' class='url'>Simon Cooke</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050727-16/?p=34793#comment-293113">
			July 27, 2005 at 8:31 pm</a>		</div>

		<p>Jack wrote:<br />
<br />: Looking at WM_DESTROY and WM_CLOSE, and<br />
<br />: thinking of a &quot;message&quot; being a command,<br />
<br />: both are telling a window to close or<br />
<br />: destroy. They&#8217;re pretty much synonymous on<br />
<br />: the surface. Now if WM_DESTROY were named<br />
<br />: WN_DESTROYING, then that would be a lot<br />
<br />: easier to see it as &quot;oh, I&#8217;m being notified<br />
<br />: that I&#8217;m being destroyed.&quot; </p>
<p>Well, WM_CLOSE is a command telling you to get rid of that window. WM_DESTROY is a command telling you that the window is being destroyed, kill the resources it owns.</p>
<p>That&#8217;s the problem; you can view it as both&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-293133">
				<div id="div-comment-293133" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Norman Diamond</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050727-16/?p=34793#comment-293133">
			July 27, 2005 at 10:22 pm</a>		</div>

		<p>These two surprise me:</p>
<p>&gt; WM_NCDESTROY received &#8211; window still exists<br />
<br />&gt; WM_NCDESTROY recursing &#8211; window still exists</p>
<p>I thought that WM_NCCREATE came before the window existed (even if it&#8217;s not the first message) and WM_NCDESTROY came after the window stopped existing?  Sure the recursion is due to the program&#8217;s bug, but why was the window still in existence either of these times?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-293143">
				<div id="div-comment-293143" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://spaces.msn.com/members/sluttery/' rel='external nofollow' class='url'>Everest</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050727-16/?p=34793#comment-293143">
			July 28, 2005 at 12:44 am</a>		</div>

		<p>Indeed, the whole thing will be more complex if the WH_CBT hook was installed. Who is the very first message the window received depends upon the hook procedures.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-293153">
				<div id="div-comment-293153" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ben Hutchings</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050727-16/?p=34793#comment-293153">
			July 28, 2005 at 7:16 am</a>		</div>

		<p>Isn&#8217;t any use of IsWindow highly problematic? I mean, just because a window handle is valid now, doesn&#8217;t mean (a) it will be valid in a moment&#8217;s time, or (b) it refers to the window it used to a while ago.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-293163">
				<div id="div-comment-293163" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">carlso</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050727-16/?p=34793#comment-293163">
			July 28, 2005 at 9:01 am</a>		</div>

		<p>I&#8217;ve seen a lot of WM_DESTROY handling code which goes through considerable amount of trouble to call DestroyWindow() for each child window of the window being destroyed.</p>
<p>This is, of course, unnecessary as Windows will automatically delete the child windows for you.  But it looks like Windows recognizes this case and doesn&#8217;t call DestroyWindow() on a child window if you have already done so (i.e., I only see one WM_DESTROY message on a child window).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-293183">
				<div id="div-comment-293183" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">binaryc</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050727-16/?p=34793#comment-293183">
			July 28, 2005 at 10:38 am</a>		</div>

		<p>I suppose it&#8217;s not terribly clear if you never bother to read the documentation.  From MSDN:</p>
<p>&quot;The WM_DESTROY message is sent when a window is being destroyed.&quot;</p>
<p>&quot;The WM_CLOSE message is sent as a signal that a window or an application should terminate.&quot;</p>
<p>&quot;By default, the DefWindowProc function [for WM_CLOSE] calls the DestroyWindow function to destroy the window.&quot;</p>
<p>&quot;The function [DestroyWindow] sends WM_DESTROY and WM_NCDESTROY messages to the window&quot;</p>
<p>&quot;DestroyWindow automatically destroys the associated child or owned windows when it destroys the parent or owner window.&quot;</p>
<p>Seems pretty clear to me.  The sentence about DestroyWindow sending WM_DESTROY is particularly helpful, as it implies that it would be silly to call DestroyWindow inside a WM_DESTROY.<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-293243">
				<div id="div-comment-293243" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Stewart Tootill</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050727-16/?p=34793#comment-293243">
			July 28, 2005 at 12:36 pm</a>		</div>

		<blockquote><p>
  Isn&#8217;t any use of IsWindow highly problematic?<br />
  <br />&gt; I mean, just because a window handle is valid<br />
  <br />&gt; now, doesn&#8217;t mean (a) it will be valid in a<br />
  <br />&gt; moment&#8217;s time, or (b) it refers to the window<br />
  <br />&gt; it used to a while ago. </p>
<p>I don&#8217;t think this is a problem. It would only be a problem if you were on another thread, but since this example is checking on the thread that created the window, the window exists up until the first complete call to destroy window (which is them most deeply nested one) returns, so it is perfectly safe.</p>
<p>I don&#8217;t even think you can call DestroyWindow for a window that was created on another thread (well, that is to say you can, but it won&#8217;t work)
</p></blockquote>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-293433">
				<div id="div-comment-293433" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">carlso</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050727-16/?p=34793#comment-293433">
			July 29, 2005 at 7:58 am</a>		</div>

		<blockquote><p>
  &quot;I suppose it&#8217;s not terribly clear if you never bother to read the documentation.&quot;</p>
<p>Yes, it is clearly documented now.  The MSDN documentation has really improved over the years (I believe Raymond deserves thanks for this).  But the early documentation wasn&#8217;t as clear and there&#8217;s been a lot of code written whose authors didn&#8217;t have a full understanding of what was going on.  And, as such, often times you&#8217;re left scratching your head while looking at old code wondering what the heck they were thinking ;-)
</p></blockquote>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-295063">
				<div id="div-comment-295063" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">anonymous</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050727-16/?p=34793#comment-295063">
			August 6, 2005 at 2:05 am</a>		</div>

		<p>It seems like hwnd is only valid in the GUI thread that created that hwnd.  Any other thread cannot safely use that hwnd.  So what is the correct way to send information to a window in a GUI thread that may or may not exist?<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-596673">
				<div id="div-comment-596673" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blog.csdn.net/fengzi_shen/archive/2008/02/01/2076591.aspx' rel='external nofollow' class='url'>fengzi_shen</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050727-16/?p=34793#comment-596673">
			January 31, 2008 at 10:28 pm</a>		</div>

		<p>WM_DESTROY 和 WM_NCDESTROY 消息之间有什么区别?</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>