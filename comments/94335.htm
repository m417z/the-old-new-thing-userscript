<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (21)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment byuser comment-author-archangelpip even thread-even depth-1" id="comment-1265155">
				<div id="div-comment-1265155" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Darran+Rowe' rel='external nofollow' class='url'>Darran Rowe</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160919-00/?p=94335#comment-1265155">
			September 19, 2016 at 7:02 am</a>		</div>

		<p>But that&#8217;s the way the cookie crumbles, right?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1 parent" id="comment-1265165">
				<div id="div-comment-1265165" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Mc</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160919-00/?p=94335#comment-1265165">
			September 19, 2016 at 7:54 am</a>		</div>

		<p>Would the return value be false in the incorrect case?   So would proper error handling flag the error when it was tested?</p>

		
				</div>
		<ol class="children">
		<li class="comment even depth-2 parent" id="comment-1265195">
				<div id="div-comment-1265195" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160919-00/?p=94335#comment-1265195">
			September 19, 2016 at 9:26 am</a>		</div>

		<p>Yeah, but why would you check the failure code here?</p>

		
				</div>
		<ol class="children">
		<li class="comment odd alt depth-3 parent" id="comment-1265245">
				<div id="div-comment-1265245" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Roman</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160919-00/?p=94335#comment-1265245">
			September 19, 2016 at 2:32 pm</a>		</div>

		<p>To catch errors like this, naturally.</p>

		
				</div>
		<ol class="children">
		<li class="comment even depth-4 parent" id="comment-1265295">
				<div id="div-comment-1265295" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">ZLB</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160919-00/?p=94335#comment-1265295">
			September 20, 2016 at 4:35 am</a>		</div>

		<p>In practice though, people don&#8217;t tend to bother with the return value from calls like these unless they are debugging a problem in the neighborhood. I mean what are you going to do if it fails? Call it again in a loop until it works?</p>

		
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-archangelpip odd alt depth-5" id="comment-1265615">
				<div id="div-comment-1265615" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Darran+Rowe' rel='external nofollow' class='url'>Darran Rowe</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160919-00/?p=94335#comment-1265615">
			September 21, 2016 at 6:12 pm</a>		</div>

		<p>I would say that this depends really. In all my debug and fully logged builds, I always check the return of close functions.<br />
While it is true that the close functions are normally call once and forget, and if it fails, then you mustn&#8217;t do anything else, there is one important thing you can get from that failure, the fact that it failed.<br />
If you are not completely in the world of RAII, then a failure of a close function could seriously indicate a resource handling problem. So while granted, this is still debugging, keeping track of the return is always useful since it can surprisingly show an error is lurking inside your application without you realising it.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even depth-5" id="comment-1266535">
				<div id="div-comment-1266535" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160919-00/?p=94335#comment-1266535">
			September 29, 2016 at 8:31 am</a>		</div>

		<p>@Darren Rowe: Ah, but in the UNIX world you must handle close() returning -1 with errno = EIO. It&#8217;s not really all that recoverable (either flushing buffer to server failed which means you lost your disk, or you ran out of disk) but you need to abort whatever you were working on to avoid further data corruption.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment odd alt thread-even depth-1" id="comment-1265175">
				<div id="div-comment-1265175" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">jeffrey cassar</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160919-00/?p=94335#comment-1265175">
			September 19, 2016 at 8:42 am</a>		</div>

		<p>Wow64DisableWow64FsRedirection stores an address in the void* you gave it. Wow64RevertWow64FsRedirection takes a void*, so that it can have that value back. who would randomly give Wow64RevertWow64FsRedirection the address of a void* when it explicitly doesn&#8217;t expect that? this being the windows api is irrelevant. this is a language issue here. I definitely agree.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-odd thread-alt depth-1" id="comment-1265185">
				<div id="div-comment-1265185" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">jeffrey cassar</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160919-00/?p=94335#comment-1265185">
			September 19, 2016 at 8:44 am</a>		</div>

		<p>it definitely makes sense, and I&#8217;m shocked, that there wasn&#8217;t a DECLARE_HANDLE(HCOOKIE) etc. like you mentioned, though.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-davebacher odd alt thread-even depth-1 parent" id="comment-1265205">
				<div id="div-comment-1265205" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Dave+Bacher' rel='external nofollow' class='url'>Dave Bacher</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160919-00/?p=94335#comment-1265205">
			September 19, 2016 at 9:32 am</a>		</div>

		<p>Theoretically, it would not be too late to fix this one.</p>
<p>If you added a defined type behind #if STRICT, that wouldn&#8217;t break binary compatibility.  If it breaks someone compiling something, they can always (100%) work around it.  I wouldn&#8217;t see it as a big deal to fix it, since it would be a compile time only problem and you&#8217;re talking a minor change in limited places to impacted code.  Compare it, for example, to the move from System.Security.Cryptography to Windows.Cryptography, that often requires significant code changes in Windows Phone apps being up-ported to UWP.</p>

		
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-koldude even depth-2" id="comment-1265226">
				<div id="div-comment-1265226" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/kantos' rel='external nofollow' class='url'>kantos</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160919-00/?p=94335#comment-1265226">
			September 19, 2016 at 12:54 pm</a>		</div>

		<p>I know that some may disagree with me on this but if this was the ONLY API breaking change between SDK versions then I&#8217;d be fine doing it without guarding it behind <code>STRICT</code> on the basis that fixing it takes all of a few seconds and the use case for this function is&#8230;. minimal so the list of affected vendors should be short. What I would do in the immediate future is update the sample on MSDN to use an <code>ifndef</code> guard so that code that needs to fall back to <code>void**</code> can.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1 parent" id="comment-1265216">
				<div id="div-comment-1265216" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Piotr Si√≥dmak</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160919-00/?p=94335#comment-1265216">
			September 19, 2016 at 12:08 pm</a>		</div>

		<p>// remember: don&#8217;t use this<br />
// this is a sample code! don&#8217;t do that this way<br />
// this is intentionally wrong, don&#8217;t do this!</p>
<p>yeah, right, like that ever stopped anyone from copy-pasting samples from MSDN</p>

		
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-mngoldeneagle even depth-2" id="comment-1265265">
				<div id="div-comment-1265265" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/MNGoldenEagle' rel='external nofollow' class='url'>MNGoldenEagle</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160919-00/?p=94335#comment-1265265">
			September 19, 2016 at 2:57 pm</a>		</div>

		<p>If you&#8217;re going to intentionally copy code that advertises itself as broken and use it that way, then you&#8217;re kind of asking for it.  If you&#8217;re copying a working example to get your prototype running quickly, that&#8217;s what they&#8217;re generally there for.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment odd alt thread-even depth-1 parent" id="comment-1265235">
				<div id="div-comment-1265235" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Killer{R}</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160919-00/?p=94335#comment-1265235">
			September 19, 2016 at 1:38 pm</a>		</div>

		<p>Why not to return that cookie instead of redundant BOOL? NULL &#8211; error, not NULL &#8211;  success and cookie in the hands. And greatly reduced risk of this copy-paste-induced error.. And only one drawback &#8211; is reduced amount of possible cookie values by one. But what is 1 in comparing with 2 ^ ( sizeof(void *) * 8 )&#8230;</p>

		
				</div>
		<ol class="children">
		<li class="comment even depth-2 parent" id="comment-1265255">
				<div id="div-comment-1265255" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Dmitry</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160919-00/?p=94335#comment-1265255">
			September 19, 2016 at 2:41 pm</a>		</div>

		<p>I guess that because the main point of the function it to try to disable redirection, not to create a cookie. The cookie is provided to you as a convenient way to re-enable redirection if you would like to. In Windows API you can generally pass NULL pointer to say that you are not interested in a value. But if Windows gave you some handle you are obliged to keep care of it.</p>

		
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-gregm odd alt depth-3 parent" id="comment-1265275">
				<div id="div-comment-1265275" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/GregM' rel='external nofollow' class='url'>GregM</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160919-00/?p=94335#comment-1265275">
			September 19, 2016 at 6:38 pm</a>		</div>

		<p>&#8220;I guess that because the main point of the function it to try to disable redirection, not to create a cookie. The cookie is provided to you as a convenient way to re-enable redirection if you would like to.  In Windows API you can generally pass NULL pointer to say that you are not interested in a value.&#8221;</p>
<p>Nope, not here:</p>
<p><a href="https://msdn.microsoft.com/en-us/library/windows/desktop/aa365743(v=vs.85)" rel="nofollow">https://msdn.microsoft.com/en-us/library/windows/desktop/aa365743(v=vs.85)</a>.aspx<br />
&#8220;Every successful call to the Wow64DisableWow64FsRedirection function must have a matching call to the Wow64RevertWow64FsRedirection function. This will ensure redirection is re-enabled and frees associated system resources.&#8221;</p>
<p>There&#8217;s more information at that link about exactly why that is, and how this must be used over an extremely small region.</p>

		
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-samuel-bronson even depth-4 parent" id="comment-1265385">
				<div id="div-comment-1265385" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Samuel+Bronson' rel='external nofollow' class='url'>Samuel Bronson</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160919-00/?p=94335#comment-1265385">
			September 20, 2016 at 10:58 pm</a>		</div>

		<p>So, what, if you just exit, the kernel leaks memory? Not bloody likely. (Though I do take your point that reverting should be the common case.)</p>

		
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-wndsks odd alt depth-5" id="comment-1265565">
				<div id="div-comment-1265565" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/skSdnW' rel='external nofollow' class='url'>skSdnW</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160919-00/?p=94335#comment-1265565">
			September 21, 2016 at 1:00 pm</a>		</div>

		<p>No, the issue is that you cannot call LoadLibrary with redirection disabled (because it might try to load a 64-bit .dll and fail). Any API above Kernel32 might call LoadLibrary inside its functions. Shell32 for example has a bunch of delay-loaded function calls.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment even depth-3" id="comment-1265585">
				<div id="div-comment-1265585" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Killer{R}</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160919-00/?p=94335#comment-1265585">
			September 21, 2016 at 2:43 pm</a>		</div>

		<p>First, as GregM said if you leave thread to live without reverting redirection &#8211; you just started great disaster, so you always should save the cookie and revert redirection state with it as soon as posisble.<br />
Second, Wow64RevertWow64FsRedirection pointer-to-cookie arg is not optional. So anyway you always should care about cookie. Furthermore, having cookie in return value instead would often allow you to save one line of code.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment odd alt depth-2" id="comment-1266005">
				<div id="div-comment-1266005" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/jeff%20cassar/' rel='external nofollow' class='url'>jeffrey cassar</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160919-00/?p=94335#comment-1266005">
			September 26, 2016 at 6:59 am</a>		</div>

		<p>that&#8217;s actually a really great idea man. I totally agree. whenever I write a function that returns a pointer, I return it. null for failure non-null for success. instead of taking in a pointer to that pointer. it just makes more sense. the only downfall to this, is it doesn&#8217;t really help the possible carelessness of Wow64RevertWow64FsRedirection at all. someone could still mistakenly pass the address of that to Wow64RevertWow64FsRedirection. the root problem is the untyped parameter. the ultimate solution would be to combine what both you and Raymond said. e.g. HWOW64COOKIE Wow64DisableWow64FsRedirection(); &#8230;&#8230; HWOW64COOKIE cookie = Wow64DisableWow64FsRedirection();  &#8230; yatta yatta .. Wow64RevertWow64FsRedirection(cookie);</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment even thread-odd thread-alt depth-1" id="comment-1265276">
				<div id="div-comment-1265276" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Sander Weerdenburg</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160919-00/?p=94335#comment-1265276">
			September 19, 2016 at 9:25 pm</a>		</div>

		<p>I like how the code comment is in italics too :)</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>