<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (31)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-566233">
				<div id="div-comment-566233" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Jon</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071109-00/?p=24553#comment-566233">
			November 9, 2007 at 10:41 am</a>		</div>

		<p>&quot;Should they have their function return one of three values (Exists, Doesn&#8217;t Exist, and Is In Funky Delete State) instead of a boolean?&quot;</p>
<p>Everybody knows its:</p>
<p>enum Bool</p>
<p>{</p>
<p>&nbsp; &nbsp;True,</p>
<p>&nbsp; &nbsp;False,</p>
<p>&nbsp; &nbsp;FileNotFound</p>
<p>};</p>
<p>Source: <a rel="nofollow" target="_new" href="http://worsethanfailure.com/Articles/What_Is_Truth_0x3f_.aspx" rel="nofollow">http://worsethanfailure.com/Articles/What_Is_Truth_0x3f_.aspx</a></p>
<p>I guess that is slightly better than how UNIX lets you delete files in use. Those disappear from the directory listing but still exist on the disk until the last person closes it. So you can have a 10 GB file that isn&#8217;t part of any directory but it is taking up space. Although that has the advantage of allowing me to recreate it immediately while the old file is still open.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-566243">
				<div id="div-comment-566243" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.starkeith.net/coredump/' rel='external nofollow' class='url'>Keithius</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071109-00/?p=24553#comment-566243">
			November 9, 2007 at 10:43 am</a>		</div>

		<p>Heh. Very amusing. (I can understand why the compiler folks got a chuckle out of that one.)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-566253">
				<div id="div-comment-566253" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Bryan</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071109-00/?p=24553#comment-566253">
			November 9, 2007 at 10:49 am</a>		</div>

		<p>I got a good laugh out of this one.</p>
<p>Another one I say &#8216;hear hear!&#8217;.</p>
<p>People always want to take control over the whole system instead of just admitting that there are, sometimes, some situations for which they just can&#8217;t account.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-566263">
				<div id="div-comment-566263" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Greg D</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071109-00/?p=24553#comment-566263">
			November 9, 2007 at 11:00 am</a>		</div>

		<p>Almost every time I&#8217;ve tried to write something and caught myself running into some bizarro-world corner case, I&#8217;ve realized (sooner or later) that the WTF wasn&#8217;t in the corner case. &nbsp;Rather, it was in the new software&#8217;s underlying assumptions.</p>
<p>It can sometimes be a real challenge to take a deep breath, step back, re-evaluate assumptions, and correct them after I&#8217;ve been committed to a course of action. &nbsp;My boss&#8217; boss really doesn&#8217;t like it. &nbsp;Heh.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-566273">
				<div id="div-comment-566273" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Neil</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071109-00/?p=24553#comment-566273">
			November 9, 2007 at 11:09 am</a>		</div>

		<p>If you read worsethanfailure.com more carefully you&#8217;ll find that the solution to the compiler team optimising the condition is of course simply to nest your ifs i.e.</p>
<p>if (g_fReady) { if (g_fReady) { if (g_fReady) { return g_Value; } } }</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-566283">
				<div id="div-comment-566283" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Dan</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071109-00/?p=24553#comment-566283">
			November 9, 2007 at 11:16 am</a>		</div>

		<p>No, clearly the solution is:</p>
<p>while (g_fReady) {</p>
<p>&nbsp;Sleep(0);</p>
<p>}</p>
<p>// Aha! &nbsp;Caught you, you sneak!</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-566293">
				<div id="div-comment-566293" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Dave</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071109-00/?p=24553#comment-566293">
			November 9, 2007 at 12:06 pm</a>		</div>

		<p>Of course the compiler guys laughed at you, that code will never work! You have to declare g_fReady as volatile. :-)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-566303">
				<div id="div-comment-566303" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ben Cooke</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071109-00/?p=24553#comment-566303">
			November 9, 2007 at 12:36 pm</a>		</div>

		<p>Presumably the succinct answer is: Don&#8217;t check to see if the file exists before you open it, just open it and see if you succeed!</p>
<p>(Of course, if you&#8217;ve asked a user to select a file and that file goes away between the user selecting it and you opening it, then there&#8217;s little you can do aside from telling the user &quot;I couldn&#8217;t open the file. Sorry.&quot;. However, list a bunch of files onscreen for selection is slightly different to just checking if a file exists, and has a lot more places where the filesystem can change out from under you and cause confusion.)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-566313">
				<div id="div-comment-566313" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Steve Loughran</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071109-00/?p=24553#comment-566313">
			November 9, 2007 at 12:51 pm</a>		</div>

		<p>If the g_fReady was marked as volatile then yes, the if() shouldnt be optimised, and it shouldnt be pulled in to a register. That&#8217;s part of the C++ specs, I recall vaguely.</p>
<p>otherwise, they could put it a register, flatten the loop, or even re-order the accesses. So the second g_fReady check could take place before the first&#8230; &nbsp;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-566323">
				<div id="div-comment-566323" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">JM</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071109-00/?p=24553#comment-566323">
			November 9, 2007 at 1:45 pm</a>		</div>

		<p>Of course, you could stick all the qualifiers you&#8217;d want on that variable and it still wouldn&#8217;t do anything to prevent the race condition. That&#8217;s what makes the compiler joke so sweet.</p>
<p>When you&#8217;re trying to solve the wrong problem, it doesn&#8217;t matter how intricate your solution is.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-566343">
				<div id="div-comment-566343" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">DrkMatter</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071109-00/?p=24553#comment-566343">
			November 9, 2007 at 3:31 pm</a>		</div>

		<p>&quot;otherwise, they could put it a register, flatten the loop, or even re-order the accesses.&quot;</p>
<p>The C++ standard guarantees the order of evaluation of successive &quot;&amp;&amp;&quot; so that if the first one evaluates to false, it never evaluates the second one.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-566393">
				<div id="div-comment-566393" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.asvguy.com' rel='external nofollow' class='url'>Burak KALAYCI</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071109-00/?p=24553#comment-566393">
			November 9, 2007 at 5:54 pm</a>		</div>

		<blockquote><p>
  Don&#8217;t check to see if the file exists before you open it, just open it and see if you succeed!
</p></blockquote>
<p>And if you are to display a list, simply open all files first (deny sharing). After the user selects the file, close others :)</p>
<p>Seriously, I bumped into a case where GetFileAttributes said a file did not exist, and it was wrong, opening the file would not fail (because the file was there). I traced it to invalid file date/time.</p>
<p>I say &#8216;Just open it&#8217;, there&#8217;s no need for a DoesFileExist function in a library if files are to be accessed&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-566403">
				<div id="div-comment-566403" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Gene</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071109-00/?p=24553#comment-566403">
			November 9, 2007 at 5:58 pm</a>		</div>

		<blockquote><p>
  When you&#8217;re trying to solve the wrong problem, it doesn&#8217;t matter how intricate your solution is.
</p></blockquote>
<p>Man&#8230; sounds like something I&#8217;d see on a despair.com poster&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-566423">
				<div id="div-comment-566423" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Yuhong Bao</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071109-00/?p=24553#comment-566423">
			November 9, 2007 at 7:50 pm</a>		</div>

		<p>And that is exactly why IsBad*Ptr is almost useless. You are better off using SEH to catch exceptions that result from the memory access instead.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-566433">
				<div id="div-comment-566433" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">pete</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071109-00/?p=24553#comment-566433">
			November 9, 2007 at 10:56 pm</a>		</div>

		<p>This kind of thing usually happens when somebody is using the file system as something other than a file system. They really should be using a named semaphore or something, but instead they&#8217;re using the existence of a file. It would be less sad if portability were in the picture, but based on RC&#8217;s description, it&#8217;s not.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-566443">
				<div id="div-comment-566443" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">pete</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071109-00/?p=24553#comment-566443">
			November 9, 2007 at 11:03 pm</a>		</div>

		<p>Meanwhile, the real reason I came down here to fill in this form is to tell a story about compiler optimization. I once wrote code something like this:</p>
<p>&nbsp; &nbsp;Thing * GetThing (void);</p>
<p>&nbsp; &nbsp;bool gotThing (!!GetThing ( ));</p>
<p>gotThing would occasionally be false because the compiler &quot;optimized away&quot; the !! and assigned the least significant bits of the pointer to the bool. The compiler&#8217;s tech support department assured me this was by design. Happily, I persuaded them to run their answer past an actual compiler engineer, who promptly flogged them with a wet noodle.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-566503">
				<div id="div-comment-566503" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">tcliu</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071109-00/?p=24553#comment-566503">
			November 10, 2007 at 7:00 pm</a>		</div>

		<p>Would transactional NTFS enable one to do something like what this person is trying? That is, if we began a transaction at the start, checked whether the file existed and found that yes it did, we would be sure that it would keep existing until the xa was committed or aborted?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-566523">
				<div id="div-comment-566523" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">foxyshadis</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071109-00/?p=24553#comment-566523">
			November 10, 2007 at 10:19 pm</a>		</div>

		<p>tcliu, that&#8217;s much too low-level, when all you really need is to open a file to make the kernel be the gatekeeper, not the filesystem driver &#8211; if someone else has incompatible flags it&#8217;ll let you know right away that it can&#8217;t enforce your preference. Once you&#8217;ve opened it, other programs that try to mess with it will be unable to do so, the only thing you have to watch out for is your own threads in that case.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-566553">
				<div id="div-comment-566553" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Aaargh!</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071109-00/?p=24553#comment-566553">
			November 11, 2007 at 2:41 pm</a>		</div>

		<p>&#8220;I guess that is slightly better than how UNIX lets you delete files in use.&#8221;</p>
<p>The Unix way has one really big advantage, you can do updates while the system is running. Replacing libc on a running system is no problem, just reload all daemons after the update and you&#8217;re off, no reboots needed. </p>
<p>And of course, in Unix you don&#8217;t delete the file as such, you unlink the file. The directory entry and the actual file are not one entity, there could be multiple directory entries pointing to the same file. </p>
<p>Not being able to delete an open file is one of the things that really annoys me about Win32. Especially since Win32 severely lacks proper tools by default. On Unix a simple lsof | grep &lt;file&gt; will tell you the process that has a file open, on windows standard tools like these are missing, requiring you to get some nonstandard tool from the web somewhere. </p>
<div class=post>[<i><a href="http://technet.microsoft.com/en-us/magazine/2008.11.windowsconfidential.aspx" rel="nofollow">Windows can replace files that are in use, it just chooses not to because doing so creates other problems</a>. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-566593">
				<div id="div-comment-566593" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://w2k.fz.se/blog' rel='external nofollow' class='url'>Wilhelm Svenselius</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071109-00/?p=24553#comment-566593">
			November 12, 2007 at 1:24 am</a>		</div>

		<p>Aaargh!: The standard tool on Windows is called &lt;a href=&quot;<a rel="nofollow" target="_new" href="http://www.microsoft.com/technet/sysinternals/utilities/processexplorer.mspx&quot;&gt;Process" rel="nofollow">http://www.microsoft.com/technet/sysinternals/utilities/processexplorer.mspx&quot;&gt;Process</a> Explorer&lt;/a&gt;. As many other useful admin/poweruser tools, it is not shipped with any version of Windows I know of. But it does exist and has existed for quite some time.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-566603">
				<div id="div-comment-566603" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://w2k.fz.se/blog' rel='external nofollow' class='url'>Wilhelm Svenselius</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071109-00/?p=24553#comment-566603">
			November 12, 2007 at 1:32 am</a>		</div>

		<p>Hopefully working link: <a rel="nofollow" target="_new" href="http://www.microsoft.com/technet/sysinternals/utilities/processexplorer.mspx" rel="nofollow">http://www.microsoft.com/technet/sysinternals/utilities/processexplorer.mspx</a></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-566613">
				<div id="div-comment-566613" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Aaargh!</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071109-00/?p=24553#comment-566613">
			November 12, 2007 at 4:42 am</a>		</div>

		<p>&quot;As many other useful admin/poweruser tools, it is not shipped with any version of Windows I know of. But it does exist and has existed for quite some time.&quot;</p>
<p>I know, I use that regularly.</p>
<p>But processexplorer is a GUI tool, so you can&#8217;t script it, and since it&#8217;s not installed by default you can&#8217;t assume it&#8217;s on the system.</p>
<p>These kinds of tools should be standard if Microsoft ever wants Windows to be seen as a serious OS instead of just a toy.</p>
<p>Why doesn&#8217;t MS just supply bash and the standard Unix tools with Windows ? It won&#8217;t cost them a penny and prevent a lot of annoyance from users who expect these tools to be available on a machine. Even Apple includes them with their OS.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-566623">
				<div id="div-comment-566623" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ian</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071109-00/?p=24553#comment-566623">
			November 12, 2007 at 6:12 am</a>		</div>

		<blockquote><p>
  No, clearly the solution is:
</p></blockquote>
<p>></p>
<blockquote><p>
  while (g_fReady) {</p>
<p>  &nbsp; Sleep(0);</p>
<p>  }
</p></blockquote>
<p>I know this was a joke, but just in case anyone thinks this is a good idea, note that Sleep(0) won&#8217;t let a lower-priority thread run. Apparently, SwitchToThread() is the correct function to call if you want to give up the rest of your timeslice. But this won&#8217;t necessarily work on a hyperthreading CPU, where you should use YieldProcessor() instead.</p>
<p>At least, that&#8217;s what I heard.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-566633">
				<div id="div-comment-566633" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Goran</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071109-00/?p=24553#comment-566633">
			November 12, 2007 at 7:43 am</a>		</div>

		<p>Aaaargh! :</p>
<p>&quot;But processexplorer is a GUI tool, so you can&#8217;t script it&quot;</p>
<p>Well&#8230; The latter does not follow the former.</p>
<p>If you need something done from the command line, you need command-line switches. If you need some output from it, Automation is the key (PE would need to support it, though). I am saying that because redirecting and parsing stdout is crap compared to programmatic access.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-566643">
				<div id="div-comment-566643" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Aaargh!</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071109-00/?p=24553#comment-566643">
			November 12, 2007 at 8:41 am</a>		</div>

		<p>&quot;I am saying that because redirecting and parsing stdout is crap compared to programmatic access.&quot;</p>
<p>Only because windows lacks proper tooling. Usually it&#8217;s way easier and quicker to just create a small shellscript. Plus, sysadmins can edit shellscripts, sysadmins can not directly edit compiled binaries.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-566673">
				<div id="div-comment-566673" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">adam</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071109-00/?p=24553#comment-566673">
			November 12, 2007 at 11:30 am</a>		</div>

		<p>I actually ran across code like that once. &nbsp;I couldn&#8217;t figure out what the hell they were trying to do and ended up asking the author. &nbsp;Three months later I was out of that place&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-566693">
				<div id="div-comment-566693" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">SirPavlova</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071109-00/?p=24553#comment-566693">
			November 12, 2007 at 2:00 pm</a>		</div>

		<p>Process Explorer is a recent Microsoft acquisition as part of Sysinternals, not a standard Windows tool. I rather expected it to become a standard tool with Vista, but strangely enough it didn&#8217;t.</p>
<p>Besides, if the tool doesn&#8217;t ship with the system, it&#8217;s not really standard. The whole idea of a standard tool is that it&#8217;s there when you need it. If you have to get it from microsoft.com, you might as well be downloading any third party program (a group which basically includes Process Explorer &#8211; it hasn&#8217;t changed much since they were bought).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-566773">
				<div id="div-comment-566773" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Evan</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071109-00/?p=24553#comment-566773">
			November 12, 2007 at 6:31 pm</a>		</div>

		<p>There is a paper, A methodology for implementing highly concurrent data objects, from TOPLAS 1993 that includes the following to try to stop a race condition:</p>
<p>while ((*Q)–&gt;responses[P].toggle != new_toggle</p>
<p> &nbsp; &nbsp;|| (*Q)-&gt;responses[P].toggle != new_toggle) </p>
<p>{ &#8230; }</p>
<p>I haven&#8217;t proven that it doesn&#8217;t help, but boy am I suspicious at it&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-566923">
				<div id="div-comment-566923" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">movl</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071109-00/?p=24553#comment-566923">
			November 13, 2007 at 7:09 pm</a>		</div>

		<p>But wait a second, doesn&#8217;t windows already provide ways to prevent race conditions? I think they were mutexes and events. If one such object has the &#8230;_SYNCRONIZE or so access right then the thread can wait for it. The real problem would then be a deadlock. You might be able to catch that by using a &#8220;controller&#8221; thread, which is required if you do your own (userland) threads implementation.</p>
<p>Just thinking out loud here.</p>
<div class=post>[<i>In the future, please complete your thoughts before posting them. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-567203">
				<div id="div-comment-567203" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">movl</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071109-00/?p=24553#comment-567203">
			November 14, 2007 at 4:00 pm</a>		</div>

		<p>Only to be removed for going too far off-topic? No thanks :p</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-720583">
				<div id="div-comment-720583" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blogs.msdn.com/oldnewthing/archive/2009/03/26/9508968.aspx' rel='external nofollow' class='url'>The Old New Thing</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071109-00/?p=24553#comment-720583">
			March 26, 2009 at 3:50 pm</a>		</div>

		<p>You have to accept that the registry will change.</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>