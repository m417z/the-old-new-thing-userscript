<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (8)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment byuser comment-author-wndsks even thread-even depth-1" id="comment-1242546">
				<div id="div-comment-1242546" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/skSdnW' rel='external nofollow' class='url'>skSdnW</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150608-00/?p=45431#comment-1242546">
			June 8, 2015 at 7:12 am</a>		</div>

		<p>MSDN does not say anything about 0 being a invalid cookie value. Is &quot;if (g_cookie)&quot; really safe? What if the cookie is just an array index in Win vNext?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-anonymouscommenter odd alt thread-odd thread-alt depth-1" id="comment-1242526">
				<div id="div-comment-1242526" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">anonymouscommenter</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150608-00/?p=45431#comment-1242526">
			June 8, 2015 at 8:58 am</a>		</div>

		<p>MSDN on IConnectionPoint::Advise says about pdwCookie:</p>
<p>If the connection was not successfully established, this value is zero.</p>
<p>So yes, 0 is not a valid cookie value.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-anonymouscommenter even thread-even depth-1" id="comment-1242516">
				<div id="div-comment-1242516" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">anonymouscommenter</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150608-00/?p=45431#comment-1242516">
			June 8, 2015 at 3:06 pm</a>		</div>

		<p>@Andre, IFrameworkInputPane does not inherit from IConnectionPoint, they&#39;re totally unrelated. &nbsp;So, there&#39;s no point in your argument, you can have 0 cookie.</p>
<div class="post">[<em>It&#39;s a general rule for the Advise pattern, in the same way that returning S_FALSE from Next is a general rule for the IEnumXxx pattern. -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-anonymouscommenter odd alt thread-odd thread-alt depth-1" id="comment-1242496">
				<div id="div-comment-1242496" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">anonymouscommenter</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150608-00/?p=45431#comment-1242496">
			June 8, 2015 at 10:54 pm</a>		</div>

		<p>The COM interface is nice, but isn&#39;t there a Win32 plain &quot;C&quot; API?</p>
<p>If so, could you please point me into the right direction?</p>
<p>Thanks!</p>
<div class="post">[<em>From C, call <code>CoCreateInstance</code>, and then use the <code>lpVtbl</code>, e.g. <code>g_frameworkInputPane-&gt;lpVtbl-&gt;AdviseWithHWND(g_frameworkInputPane, hwnd, handler, &amp;g_cookie);</code>. You can build the handler out of a vtable also. -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-anonymouscommenter even thread-even depth-1" id="comment-1242466">
				<div id="div-comment-1242466" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">anonymouscommenter</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150608-00/?p=45431#comment-1242466">
			June 9, 2015 at 7:34 am</a>		</div>

		<p>This looks like cross-process COM so probably not.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-anonymouscommenter odd alt thread-odd thread-alt depth-1" id="comment-1242366">
				<div id="div-comment-1242366" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">anonymouscommenter</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150608-00/?p=45431#comment-1242366">
			June 9, 2015 at 6:02 pm</a>		</div>

		<p>Is there actually a set of documents for how to do COM in C or is it just tribal knowledge? I never find myself wanting any COM API where C++ is in use, but only .NET or some degenerate C context where no stdlibs are available.</p>
<div class="post">[<em>You just do manually what C++ does natively. It&#39;s like asking for documents on how to write a <code>for</code> loop in assembly. Um, you just do in assembly what the C compiler does natively. -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-anonymouscommenter even thread-even depth-1" id="comment-1242356">
				<div id="div-comment-1242356" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">anonymouscommenter</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150608-00/?p=45431#comment-1242356">
			June 9, 2015 at 6:28 pm</a>		</div>

		<p>I think you missed the point. C++ ABI does not normally work across compilers but suddenly does when its a COM class. There&#39;s no C++ ABI document. Yet somehow COM spans Compiler vendors. This was arranged to happen somehow. &quot;Do what the compiler does&quot; is asking for a non-true assumption that has held so far but suddenly won&#39;t in Windows next.</p>
<div class="post">[<em>I described the vtable layout <a href="http://blogs.msdn.com/b/oldnewthing/archive/2004/02/05/68017.aspx">earlier</a>. You can also see this layout if you look at the header file spit out by MIDL. -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-anonymouscommenter odd alt thread-odd thread-alt depth-1" id="comment-1241766">
				<div id="div-comment-1241766" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">anonymouscommenter</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150608-00/?p=45431#comment-1241766">
			June 13, 2015 at 3:35 am</a>		</div>

		<p>I had the misfortune to use a PC that had been preinstalled to work with a gamepad rather than the mouse and keyboard that I had attached to it. Not only did it keep on opening the OSK over whichever control it was that I wanted to click next, but it wouldn&#39;t let me permanently dismiss it (at least, not without discovering the option buried in the Control Panel, or via the correct solution, which was to reinstall Windows from scratch as I didn&#39;t want that installation anyway).</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>