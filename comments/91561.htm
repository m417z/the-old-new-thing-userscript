<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (30)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-1203381">
				<div id="div-comment-1203381" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Jimmy Queue</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150918-00/?p=91561#comment-1203381">
			September 18, 2015 at 7:33 am</a>		</div>

		<p>Pining for the fjords&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1203371">
				<div id="div-comment-1203371" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Nathan_works</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150918-00/?p=91561#comment-1203371">
			September 18, 2015 at 8:39 am</a>		</div>

		<p>Why do I get the feeling a whole lot of customer issues end up closed because &quot;[the] decided we weren&#39;t beling helpful enough and decided to stop talking to us. &quot; mainly because the customer had a whole lot invested already in their VERY wrong approach ?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1203361">
				<div id="div-comment-1203361" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">David Crowell</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150918-00/?p=91561#comment-1203361">
			September 18, 2015 at 8:56 am</a>		</div>

		<p>Could CreateRemoteThread bring the process back to life? &nbsp;Not that you should&#8230;.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1203351">
				<div id="div-comment-1203351" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150918-00/?p=91561#comment-1203351">
			September 18, 2015 at 9:02 am</a>		</div>

		<p>@David Crowell: I&#39;ve been planning to mock up a test case just to find out, but I agree you *should* not.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1203331">
				<div id="div-comment-1203331" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Darran Rowe</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150918-00/?p=91561#comment-1203331">
			September 18, 2015 at 9:29 am</a>		</div>

		<p>Looking at the information provided, what I can see happening is something like a service is running an executable to do some work, and then it exits. The thing that also strikes me as important is that the executable only seems to run for around 2 seconds.</p>
<p>So what I wonder is, could this be a service that runs a program to do stuff on behalf of a user, rather than using impersonation?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1203321">
				<div id="div-comment-1203321" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Gabe</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150918-00/?p=91561#comment-1203321">
			September 18, 2015 at 9:46 am</a>		</div>

		<p>It&#39;s interesting to see that the corpse isn&#39;t completely rotted away. Does anybody know what those 5 pages in the process working set are for?</p>
<p>Darran Rowe: The process uses 2 seconds of CPU time, but that doesn&#39;t mean it only ran for 2 seconds. It could have run for a whole day, mostly waiting and doing I/O, and still only have 2 seconds of CPU time accumulated.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-alegrigoriev even thread-even depth-1" id="comment-1203311">
				<div id="div-comment-1203311" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/alegr1' rel='external nofollow' class='url'>alegr1</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150918-00/?p=91561#comment-1203311">
			September 18, 2015 at 9:58 am</a>		</div>

		<p>That&#39;s what one version of Visual Studio did (2008 or later) when it started builds.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1203301">
				<div id="div-comment-1203301" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Evan</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150918-00/?p=91561#comment-1203301">
			September 18, 2015 at 10:21 am</a>		</div>

		<p>&gt; Pining for the fjords&#8230;</p>
<p>Pining for the fjords?! What kind of talk is that? Look, I took the liberty of examining that thread, and I discovered that the only reason it appeared in the runlist in the first place was because it had been hard-coded there!</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-mrp270hotmail-com even thread-even depth-1" id="comment-1203291">
				<div id="div-comment-1203291" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/SamYeager' rel='external nofollow' class='url'>SamYeager</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150918-00/?p=91561#comment-1203291">
			September 18, 2015 at 10:54 am</a>		</div>

		<p>&quot;Pining for the fjords?! What kind of talk is that?&quot;</p>
<p>I suggest a &nbsp;search for &#39;Monty Python&#39; &amp; &#39;dead parrot&#39;. :)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1203281">
				<div id="div-comment-1203281" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Myria</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150918-00/?p=91561#comment-1203281">
			September 18, 2015 at 11:27 am</a>		</div>

		<p>Windows NT&#39;s process system is *so* much better than UNIX&#39;s in this regard. &nbsp;In Linux, for example, it is not possible for you to wait for a process that you did not fork()/posix_spawn() yourself to finish. &nbsp;It makes process management really painful in Linux.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1203271">
				<div id="div-comment-1203271" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Timothy Byrd (ETAP)</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150918-00/?p=91561#comment-1203271">
			September 18, 2015 at 11:29 am</a>		</div>

		<p>@SamYeager:</p>
<p>I suggest replacing &quot;because it had been hard-coded there&quot; with &quot;because it had been nailed there&quot;, and etc.</p>
<p>He doesn&#39;t need to search :)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-aegis03 odd alt thread-odd thread-alt depth-1" id="comment-1203261">
				<div id="div-comment-1203261" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/dmex' rel='external nofollow' class='url'>dmex</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150918-00/?p=91561#comment-1203261">
			September 18, 2015 at 12:00 pm</a>		</div>

		<p>&quot;No active threads&quot;</p>
<p>That&#39;s not limited to leaked thread handles or driver references&#8230;</p>
<p>When a process crashes on Windows 8.1 and Windows 10 &#8211; Windows Error Reporting will create a &#39;reflected&#39; process with absolutely zero threads; If you open a process handle to that &#39;zero thread process&#39; and call the TerminateProcess function; You&#39;ll get a Blue Screen of Death.</p>
<p>Hopefully that customers &quot;complicated system where they create and kill processes&quot; doesn&#39;t attempt to terminate those type of processes.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1203241">
				<div id="div-comment-1203241" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Darran Rowe</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150918-00/?p=91561#comment-1203241">
			September 18, 2015 at 3:17 pm</a>		</div>

		<p>@Gabe: This was one of the cases where I was trying to use context to my advantage. Since UserTime and KernelTime are the times when any threads of that process were being executed, I used that to be lazy and write less. I apologise for any confusion that I may have caused you.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-alegrigoriev odd alt thread-odd thread-alt depth-1" id="comment-1203231">
				<div id="div-comment-1203231" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/alegr1' rel='external nofollow' class='url'>alegr1</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150918-00/?p=91561#comment-1203231">
			September 18, 2015 at 3:38 pm</a>		</div>

		<p>dmex &#8211; a bug needs to be filed with MS, if it really happens.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1203221">
				<div id="div-comment-1203221" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Dango</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150918-00/?p=91561#comment-1203221">
			September 18, 2015 at 3:45 pm</a>		</div>

		<p>So how can one test if a given PID corresponds to a zombie process or a still running process? A second OpenProcess() on such a zombie process will succeed! One could try to WaitForSingleObject() on the given HANDLE, but it will return with WAIT_FAILED and GetLastError() == ERROR_ACCESS_DENIED =&gt; this doesn&#39;t seem to be conclusive and could happen for a regular process, too, maybe if we&#39;re lacking access rights.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1203211">
				<div id="div-comment-1203211" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150918-00/?p=91561#comment-1203211">
			September 18, 2015 at 4:23 pm</a>		</div>

		<p>@Dango: It&#39;s specific to Zombie Process if you opened the handle with the right access bits. Access is only checked in the OpenProcess() call.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-hikari even thread-even depth-1" id="comment-1203191">
				<div id="div-comment-1203191" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Chris+Crowther' rel='external nofollow' class='url'>Chris Crowther</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150918-00/?p=91561#comment-1203191">
			September 19, 2015 at 2:01 am</a>		</div>

		<p>I am now adopting the terms &quot;corpse thread&quot; and &quot;corpse process&quot;.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1203181">
				<div id="div-comment-1203181" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Gabe</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150918-00/?p=91561#comment-1203181">
			September 19, 2015 at 6:57 am</a>		</div>

		<p>Darran Rowe: If you really meant CPU time, why is it important that the process only used 2 seconds of CPU? The computer I&#39;m sitting at claims an up time of over 10 days and about half of the 100-or-so processes show a CPU time of 2 seconds or less.</p>
<p>Those processes include the likes of csrss, smss, wininit, winlogon, and the print spooler; so I don&#39;t see what is implied by having used only 2 seconds of CPU.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1203171">
				<div id="div-comment-1203171" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Darran Rowe</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150918-00/?p=91561#comment-1203171">
			September 19, 2015 at 8:43 am</a>		</div>

		<p>@Gabe:</p>
<p>OK, I will explain everything in detail. But the entire thing was just hypothesising over the scraps of information, it isn&#39;t any kind of remarkable life changing idea. One possible thought on what things with processes they could be doing to get to this state.</p>
<p>First there is the fact that it is not just the process with 2 seconds of CPU time, but there are hundreds of them in this near death state with two seconds of CPU time.</p>
<p>Second, the process is in session 0, this is the session that services live in. If a service executes a process, then I&#39;m certain that it also runs in session 0 unless the token is modified to run in another session. (Assuming post XP and 2k3, but since it is a 64 bit system, and the popularity of 64 bit server versions of Windows have increased over time, I don&#39;t think that is too bad of an assumption).</p>
<p>Third, with the fact that there are so many processes with leaked handles, this hints more at the processes being short lived worker processes. If they were long lived, then you wouldn&#39;t end up with hundreds of them.</p>
<p>With those bits of information, the thought was instead of using impersonation in the service, maybe because of threading reasons, they spin up a new process with CreateProcessAsUser. If you already have the work you want done in an existing application, it would be easier to just execute this instead of creating a new thread to do the work on. Depending on how good the developers are, it may have just been easier to write this work into a new application instead of dealing with the threading issues anyway.</p>
<p>So that was more of the thought process which lead to that huge waste of time.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1203151">
				<div id="div-comment-1203151" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ken Hagan</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150918-00/?p=91561#comment-1203151">
			September 20, 2015 at 6:09 am</a>		</div>

		<p>&quot;So how can one test if a given PID corresponds to a zombie process or a still running process?&quot;</p>
<p>Off the top of my head, I think you can ask for the process&#39;s exit code. If it is still running, you&#39;ll get an error to say there&#39;s no exit code yet.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1203141">
				<div id="div-comment-1203141" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Alois Kraus</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150918-00/?p=91561#comment-1203141">
			September 20, 2015 at 10:57 am</a>		</div>

		<p>As far as I recall a zombie process has a thread count of zero. If you find a process with zero threads you can be sure that it is a zombie process. If you want to detect a crashed or zombified process you need also to check if it has all threads suspended except for one thread which is right now dumping the process. Things become more complicated if the process beeing checked is a managed process where you need to differntiate between a garbage collection and a memory dump operation.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1203121">
				<div id="div-comment-1203121" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Killer{R}</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150918-00/?p=91561#comment-1203121">
			September 20, 2015 at 4:33 pm</a>		</div>

		<p>/*Myria: Windows NT&#39;s process system is *so* much better than UNIX&#39;s in this regard.*/</p>
<p>Windows NT kernel is much better than most of UNIXes at all &#8211; its much more logical and even aesthetically beautiful.. However the biggest problem with everything beautiful is that when some its part become corrupted the whole thing becomes ugly. But when entropy&#39;s corruption touches system that is not initally designed by strict rules from bottom to top &#8211; almost nothing visually changes&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-cheong even thread-even depth-1" id="comment-1203111">
				<div id="div-comment-1203111" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/cheong00' rel='external nofollow' class='url'>cheong00</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150918-00/?p=91561#comment-1203111">
			September 20, 2015 at 7:07 pm</a>		</div>

		<p>I think the conventional term for this kind of process is &quot;defunct&quot; process. It&#39;s been more verbose in the *nix world because the &quot;ps&quot; command will mark these process that has been exited but still exist solely because the parent process is monitoring it with &quot;&lt;defunct&gt;&quot;.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1203101">
				<div id="div-comment-1203101" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">GWO</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150918-00/?p=91561#comment-1203101">
			September 21, 2015 at 2:06 am</a>		</div>

		<p>@cheong00 : Note that the &#39;ps&#39; manual page (at least on this Debian based system says: </p>
<p>&quot;Processes marked &lt;defunct&gt; are dead processes (so-called &quot;zombies&quot;) that remain because their parent has not destroyed them properly.&quot;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1203001">
				<div id="div-comment-1203001" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Gabe</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150918-00/?p=91561#comment-1203001">
			September 21, 2015 at 8:39 am</a>		</div>

		<p>I would think that the term &quot;zombie&quot; would apply to David Crowell&#39;s hypothetical process that has exited, but where somebody called CreateRemoteThread on it to bring it back to life.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1202941">
				<div id="div-comment-1202941" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Killer{R}</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150918-00/?p=91561#comment-1202941">
			September 21, 2015 at 1:17 pm</a>		</div>

		<p>IMHO windows developers took care to avoid zombie apocalypse. Such attempt likely will fail with STATUS_PROCESS_IS_TERMINATING. </p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1202851">
				<div id="div-comment-1202851" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Andrei</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150918-00/?p=91561#comment-1202851">
			September 22, 2015 at 5:41 am</a>		</div>

		<p>Stupid question: Is this statement &quot;via their customer liaison&quot; of any importance? After so long following your blog, it looks like you always offer all the required information for the post, but rarely something useless. So, what&#39;s the story behind it? I&#39;ve noticed it for some time now.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-fleet-command odd alt thread-odd thread-alt depth-1" id="comment-1202751">
				<div id="div-comment-1202751" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Fleet+Command' rel='external nofollow' class='url'>Fleet Command</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150918-00/?p=91561#comment-1202751">
			September 22, 2015 at 9:33 am</a>		</div>

		<p>&mdash; &quot;It also calls into question whether they need this complicated system at all. Maybe their complicated system exists to work around some other problem, and we should be trying to solve that other problem.&quot;</p>
<p>Tell that to the Internet Explorer team. They do it. Oh, wait. Internet Explorer is dead. Okay, you can tell that to the Google Chrome team. Or the Firefox team.</p>
<div class="post">[<em>I don&#39;t think the system used by browsers is all that complicated, and my guess is that they don&#39;t TerminateProcess as the primary lifetime management mechanism. Also, I did say &quot;maybe&quot;. -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-gregm even thread-even depth-1" id="comment-1202281">
				<div id="div-comment-1202281" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/GregM' rel='external nofollow' class='url'>GregM</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150918-00/?p=91561#comment-1202281">
			September 23, 2015 at 7:25 am</a>		</div>

		<p>&#39;Is this statement &quot;via their customer liaison&quot; of any importance?&#39;</p>
<p>Yes, it means that Raymond didn&#39;t have direct contact with the customer, all information from and back to the customer was being filtered by someone.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1202201">
				<div id="div-comment-1202201" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">John Doe</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150918-00/?p=91561#comment-1202201">
			September 23, 2015 at 9:07 am</a>		</div>

		<p>@GregM: and just as important, vice-versa.</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>