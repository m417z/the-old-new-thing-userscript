<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (14)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment byuser comment-author-alegrigoriev even thread-even depth-1" id="comment-1084643">
				<div id="div-comment-1084643" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/alegr1' rel='external nofollow' class='url'>alegr1</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20131024-00/?p=2843#comment-1084643">
			October 24, 2013 at 7:21 am</a>		</div>

		<p>You&#39;re suffering of premature optimization here. Unless the buffer is VERY BIG, and contains a thousand entries, it might be worth to just always use LARGE_FETCH.</p>
<p>And please, anybody fix the painfully slow Explorer directory loading in \tsclient. And also stop using ethemeral IDs in the back history in Explorer for \tsclient. All these kernel optimizations with large fetch ain&#39;t worth nothing when the application is negating the performance gains.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-matteo odd alt thread-odd thread-alt depth-1" id="comment-1084653">
				<div id="div-comment-1084653" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Matteo+Italia' rel='external nofollow' class='url'>Matteo Italia</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20131024-00/?p=2843#comment-1084653">
			October 24, 2013 at 8:16 am</a>		</div>

		<p>Preemptive rant: AAH! M$DN SUX EVEN RAYMOND SAYS IT1!!!!11ONE1FRIST</p>
<div class="post">[<em>Note that I didn&#39;t say it was good or bad. I just said that it was classic normative documentation. The classic MSDN style is for reference material to be normative and to put the non-normative content in Overviews. -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1084663">
				<div id="div-comment-1084663" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20131024-00/?p=2843#comment-1084663">
			October 24, 2013 at 8:20 am</a>		</div>

		<p>To fix \tsclient, stop opening files to determine their icons.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1084673">
				<div id="div-comment-1084673" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Paul Z</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20131024-00/?p=2843#comment-1084673">
			October 24, 2013 at 9:36 am</a>		</div>

		<p>+ massive bonus points for the Eliza link :D</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-cheong even thread-even depth-1" id="comment-1084733">
				<div id="div-comment-1084733" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/cheong00' rel='external nofollow' class='url'>cheong00</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20131024-00/?p=2843#comment-1084733">
			October 24, 2013 at 8:50 pm</a>		</div>

		<p>For a record, Eliza can&#39;t give advice on when to use FIND_FIRST_EX_LARGE_FETCH.</p>
<p>I suspect the her log maintainer will see unsuspected increase in appearence of this keyword. :P</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1084743">
				<div id="div-comment-1084743" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Anonymous</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20131024-00/?p=2843#comment-1084743">
			October 25, 2013 at 12:21 am</a>		</div>

		<p>Does a larger buffer really mean fewer round trips? I always assumed this parameter was just to avoid syscall overhead. I don&#39;t know how SMB works but I could imagine a world in which the driver always queried the whole result, and this buffer mechanism is just the way to get it into user mode. (Fun fact: the buffer in question here is a parameter to NtQueryDirectoryFile. I am pretty sure this flag just gives that function a bigger buffer.)</p>
<div class="post">[<em>The requested buffer size goes out to the I/O manager, which dumps the request on the wire. See MaxDataCount. -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1084773">
				<div id="div-comment-1084773" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">MRDucks</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20131024-00/?p=2843#comment-1084773">
			October 25, 2013 at 7:25 am</a>		</div>

		<p>I&#39;ve done a fair amount of testing (on Windows 8 dev machine) with FIND_FIRST_EX_LARGE_FETCH and simply cannot discern any performance improvement when using it. For example, a recursive directory walk against a wireless NAS seems to perform identically whether or not FIND_FIRST_EX_LARGE_FETCH is used. Same result for local file systems, remote NTFS shares, etc.</p>
<p>Can&#39;t imagine what I might be missing here. Have tried rebooting between each test (to clear any potential caching being done), and completely isolating the network paths involved (e.g. there is no traffic contention, etc.) to improve consistency of the results.</p>
<p>Nothing I try seems to result in a measurable performance difference. What am I missing?</p>
<div class="post">[<em>Move your NAS to another continent. -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1084823">
				<div id="div-comment-1084823" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">RaceProUK</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20131024-00/?p=2843#comment-1084823">
			October 25, 2013 at 7:49 am</a>		</div>

		<p>@MRDucks: This is pure speculation, but it&#39;s plausible Win8 can silently apply FIND_FIRST_EX_LARGE_FETCH when its asked to query a NAS.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-matteo even thread-even depth-1" id="comment-1085053">
				<div id="div-comment-1085053" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Matteo+Italia' rel='external nofollow' class='url'>Matteo Italia</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20131024-00/?p=2843#comment-1085053">
			October 25, 2013 at 2:21 pm</a>		</div>

		<p>[Move your NAS to another continent. -Raymond]</p>
<p>These benchmarks are starting to get horribly expensive! :-/</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1085083">
				<div id="div-comment-1085083" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">640k</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20131024-00/?p=2843#comment-1085083">
			October 26, 2013 at 2:09 am</a>		</div>

		<p>Leaky abstractions at its best.</p>
<p><a rel="nofollow" target="_new" href="http://en.wikipedia.org/wiki/Leaky_abstraction">en.wikipedia.org/&#8230;/Leaky_abstraction</a></p>
<p>&quot;Although network file systems like NFS and SMB let one treat files on remote machines as if they were local, the connection to the remote machine may slow down or break, and the file stops acting as if it was local.&quot;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1085143">
				<div id="div-comment-1085143" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Legolas</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20131024-00/?p=2843#comment-1085143">
			October 27, 2013 at 7:25 am</a>		</div>

		<p>Whenever I encounter a new flag to an existing call, I always wonder how I should treat the version before it was implemented. If I pass this flag on XP, what happens? Should I set up code to pass it only from windows 7 on (that&#39;s what I end up doing out of precaution)?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1085203">
				<div id="div-comment-1085203" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Csaboka</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20131024-00/?p=2843#comment-1085203">
			October 28, 2013 at 5:04 am</a>		</div>

		<p>The only safe solution is not to pass the flag for OS versions that don&#39;t know what it means. If the API function you are calling is written defensively, it will reject the unknown flag (i.e. return with an invalid parameter error). You cannot rely on how a given function happens to be implemented, as it may change between OS versions, or when a new patch is installed.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1085213">
				<div id="div-comment-1085213" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">mmarkwitzz</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20131024-00/?p=2843#comment-1085213">
			October 28, 2013 at 6:31 am</a>		</div>

		<p>I can confirm the flag does make a difference. I had an application which read the whole disk tree and read some props on each file. It runs much faster with a large buffer.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1085503">
				<div id="div-comment-1085503" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">MRDucks</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20131024-00/?p=2843#comment-1085503">
			October 28, 2013 at 9:04 pm</a>		</div>

		<p>@mmarkwitzz Would love to hear more details about your tests. Was this a local or network file system? Did you reboot between tests to avoid caching? What time differences did you encounter?</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>