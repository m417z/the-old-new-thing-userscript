<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (27)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-1176313">
				<div id="div-comment-1176313" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150218-00/?p=44643#comment-1176313">
			February 18, 2015 at 7:05 am</a>		</div>

		<p>Well in our case, Program R doesn&#39;t count like that at all (yay distributed source control).</p>
<div class="post">[<em>Program Q isn&#39;t source control. It&#39;s a database. Even if you use distributed source control, you might still have a system where everybody must fill out paperwork before submitting a pull request. That paperwork is recorded in program Q. From that paperwork you can determine exactly which set of source code was used to produce that build. And since record numbers are monotonic increasing, you satisfy the version number requirements. -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1176323">
				<div id="div-comment-1176323" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">SenneVL</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150218-00/?p=44643#comment-1176323">
			February 18, 2015 at 7:16 am</a>		</div>

		<p>Application lifecycle management should not stop at the deployment stage. It&#39;s a common mistake to not calculate the impact of a component going end-of-life.</p>
<p>I&#39;ve seen new solution entirely built around deprecated technologies. No wonder upgrading from 2003 seems hard for a lot of companies out there</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1176333">
				<div id="div-comment-1176333" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Anon</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150218-00/?p=44643#comment-1176333">
			February 18, 2015 at 7:18 am</a>		</div>

		<p>&quot;Before the century is up, you probably won&#39;t be using Program Q&quot;</p>
<p>People are still using CP/M.</p>
<p>People are still using VAXes.</p>
<p>People are still using 16-bit applications.</p>
<p>People are still using Visual Basic.</p>
<p>People are still using webapps that only work in IE5.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1176343">
				<div id="div-comment-1176343" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">steven</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150218-00/?p=44643#comment-1176343">
			February 18, 2015 at 7:25 am</a>		</div>

		<p>@Anon Yes, but the end of the 21st century is a lot farther away than the end of the 20th century was to the creation of the technologies you mention. Also: before the century is up, you probably won&#39;t be alive to use Program Q.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1176353">
				<div id="div-comment-1176353" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Kevin</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150218-00/?p=44643#comment-1176353">
			February 18, 2015 at 7:29 am</a>		</div>

		<p>@Anon:</p>
<p>&gt;People are still using 16-bit applications.</p>
<p>The enterprise world doesn&#39;t count as &quot;people.&quot;</p>
<p>&gt;People are still using Visual Basic.</p>
<p>[flamage voluntarily redacted]</p>
<p>&gt;People are still using webapps that only work in IE5.</p>
<p>Again, this is basically limited to the enterprise world.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1176363">
				<div id="div-comment-1176363" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">meh</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150218-00/?p=44643#comment-1176363">
			February 18, 2015 at 7:50 am</a>		</div>

		<p>400 large ought to be enough for everyone.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1176383">
				<div id="div-comment-1176383" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150218-00/?p=44643#comment-1176383">
			February 18, 2015 at 8:31 am</a>		</div>

		<p>@Kevin: Got a replacement for GAX? It does polynomial curve fit.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1176393">
				<div id="div-comment-1176393" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Scott Brickey</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150218-00/?p=44643#comment-1176393">
			February 18, 2015 at 10:32 am</a>		</div>

		<p>so they&#39;re wanting to go from a standard versioning format of 4 numbers, to a non-standard format of 5 numbers?</p>
<p>I know this is similar to TFS (which by default appends an incrementing number to each build within a day)</p>
<p>But none the less, let&#39;s call the approach &quot;bad design&quot;&#8230; instead, blend hotfix and record into the standard &quot;build number&quot;, and call it a day.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1176403">
				<div id="div-comment-1176403" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ken in NH</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150218-00/?p=44643#comment-1176403">
			February 18, 2015 at 11:17 am</a>		</div>

		<p>@Anon</p>
<p>People are still riding horses and some even use buggies. That&#39;s not a useful argument against building roads with an eye open to future developments in automobile technology. It would be ridiculous to say, &quot;we thought of painting lines with infrared reflective material for autonomous cars to use in the future, but some people in Pennsylvania still drive a horse and buggy, so decided against it.&quot;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1176413">
				<div id="div-comment-1176413" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Guest</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150218-00/?p=44643#comment-1176413">
			February 18, 2015 at 12:22 pm</a>		</div>

		<p>@Anon</p>
<p>&quot;The theoretical maximum number of records per table is 2³²−1. &#8230;that gives you over a century of record numbers.&quot; &quot;Before the century is up, you probably won&#39;t be using Program Q&quot;</p>
<p>People weren&#39;t using CP/M, VAXs, 16bit applications, VB, or webapps that only work in IE5 back in 1915.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1176443">
				<div id="div-comment-1176443" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Paul Coddington</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150218-00/?p=44643#comment-1176443">
			February 18, 2015 at 6:24 pm</a>		</div>

		<p>Um&#8230; &quot;Before the century is up, you probably won&#39;t be using Program Q&quot; in the context of the article actually means &quot;before the application has been in use for a hundred years&quot;.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1176463">
				<div id="div-comment-1176463" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Benjamin</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150218-00/?p=44643#comment-1176463">
			February 18, 2015 at 7:29 pm</a>		</div>

		<p>I just wanted to say, I had pie for lunch so I appreciated the record number chosen in this example. &nbsp;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1176473">
				<div id="div-comment-1176473" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Anonymous Coward</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150218-00/?p=44643#comment-1176473">
			February 18, 2015 at 11:35 pm</a>		</div>

		<p>@Anon:</p>
<p>A few days ago I had to write a program that would looks for any unread emails with &quot;!!! AUTO-FORWARD:&quot; on the first line, then forward them (removing the first line and forwarded message header) to the addresses listed on the rest of the first line. In VBA.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1176483">
				<div id="div-comment-1176483" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">rioki</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150218-00/?p=44643#comment-1176483">
			February 19, 2015 at 12:39 am</a>		</div>

		<p>@Scott Brickey </p>
<p>I don&#39;t know about you but, major.minor.servicepack.hotfix.buildnumber it not such an exotic version string. It is normally not user visible but, build numbers make sense. But then again, build numbers are reset when going to the next version.</p>
<p>Speaking of odd version numbers, I work in a company that uses the version stings as follows:</p>
<p>major.minor.servicepack.hotfix_devcycle.iteration.build.buildatempt</p>
<p>Under normal circumstances devcycle=01 and buildatempt=01, but it this scheme incorporates the odd case that you attempt multiple times at developing a version and that build failure are a normal operation mode.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1176493">
				<div id="div-comment-1176493" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Boris</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150218-00/?p=44643#comment-1176493">
			February 19, 2015 at 1:17 am</a>		</div>

		<p>Wait a minute, could it be that Anon didn&#39;t realize Raymond was discussing source control? Even if some people are still using Visual Basic, it&#39;s not like VB6 itself is being developed any further, meaning no more record numbers for it.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1176503">
				<div id="div-comment-1176503" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">JW</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150218-00/?p=44643#comment-1176503">
			February 19, 2015 at 1:24 am</a>		</div>

		<p>I&#39;m confused. OurApp creates records in a table used by Program Q. Said records have a number. Now the plan is to have the version-string of OurApp have a recordnumber attached to it? Does OurApp only ever deal with a single record in Program Q for that specific release of the OurApp software? If not, how do we deal with multiple records? How about multiple deployments?</p>
<p>Somehow, I feel like I am completely misunderstanding. Is the Program Q version number something that applies to the db schema Program Q uses?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1176513">
				<div id="div-comment-1176513" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Boris</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150218-00/?p=44643#comment-1176513">
			February 19, 2015 at 1:58 am</a>		</div>

		<p>@JW: you develop and check in BlogMaker 1.0.1.1.235 (Version 1.0, Service Pack 1, Hotfix 1). </p>
<p>Testing finds bugs, you check in 1.0.1.1.236. </p>
<p>Testing finds more bugs, you check in 1.0.1.1.237.</p>
<p>Testing passes, you release 1.0.1.1.237.</p>
<p>In a separate branch, you develop and check in BlogMaker 2.0.0.0.238 (Version 2.0).</p>
<p>Testing finds errors, you check in 2.0.0.0.239. </p>
<p>Testing finds errors, you check in 2.0.0.0.240.</p>
<p>Testing passes, you release 2.0.0.0.240.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1176523">
				<div id="div-comment-1176523" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Dennis</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150218-00/?p=44643#comment-1176523">
			February 19, 2015 at 2:42 am</a>		</div>

		<p>The other bigger picture could also be totally different. Maybe the Major.Minor.ServicePack.HotFix is part of the file-version. Like in C# we do with: </p>
<p>[assembly: AssemblyVersion(&quot;1.0.0.0&quot;)]</p>
<p>Then you already have a problem much sooner, because the revision-part can&#39;t go above 65635. (Yes, found out the &#39;hard&#39; way).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-bboorman even thread-even depth-1" id="comment-1176563">
				<div id="div-comment-1176563" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Brian_EE' rel='external nofollow' class='url'>Brian_EE</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150218-00/?p=44643#comment-1176563">
			February 19, 2015 at 7:08 am</a>		</div>

		<p>&quot;In this case, it&#39;s probably not that complicated. Suppose that at the time Program Q is retired and replaced with Program R, the highest record number is 314159. You could just say that the version number in the binary is the Program R record number plus 400000.&quot;</p>
<p>Or, if it&#39;s an SQL database, you could create the Program R table so that the record number column starts at 400000 (I would hope a record number field is auto-incementing and unique).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1176593">
				<div id="div-comment-1176593" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">DWalker</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150218-00/?p=44643#comment-1176593">
			February 19, 2015 at 7:27 am</a>		</div>

		<p>&quot;People are still using Visual Basic.&quot;. &nbsp;Yes, Visual Basic .NET 2013 (as created by Visual Studio 2013 and other programs) is still being used, even for new development. &nbsp;Some people find it easier to read than programs that have curly braces sprinkled around&#8230; VB.NET has just about everything that C# has (I ran across lambda expressions a couple of days ago, and they work fine in VB.NET 2013.)</p>
<p>Or did you mean some older version of Visual Basic?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1176603">
				<div id="div-comment-1176603" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Bob</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150218-00/?p=44643#comment-1176603">
			February 19, 2015 at 8:06 am</a>		</div>

		<p>@Anon: &nbsp; On the other hand, computing history is littered with well meaning attempts to replace functioning systems with completely new systems which drained financial resources and which ultimately had to be abandoned. </p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1176633">
				<div id="div-comment-1176633" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Anon</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150218-00/?p=44643#comment-1176633">
			February 19, 2015 at 10:41 am</a>		</div>

		<p>@DWalker</p>
<p>&quot;Visual Basic&quot;, as in pre-.NET</p>
<p>VB.NET is basically a different language. It is still terrible, but it is terrible for reasons that can mostly be ignored.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1176653">
				<div id="div-comment-1176653" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">DWalker</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150218-00/?p=44643#comment-1176653">
			February 19, 2015 at 1:25 pm</a>		</div>

		<p>@Anon: &nbsp;VB.NET has the capabilities of C#, with a different user syntax. &nbsp;Everyone has preferences; obviously you don&#39;t like VB.Net&#8230; and that&#39;s fine.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1176543">
				<div id="div-comment-1176543" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Anon</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150218-00/?p=44643#comment-1176543">
			February 19, 2015 at 6:52 am</a>		</div>

		<p>I&#39;m pointing out that developers *EXPECT* their applications not to be in use for decades, or centuries, when in fact, we have entire enterprises planning (and dependent) on using the same software they&#39;ve been using since the 1970s until the end of time.</p>
<p>We rarely run into problems where people CAN&#39;T transition to a new application.</p>
<p>What we run into are problems where people *REFUSE* to transition to a new application, causing disasters like the billions (trillions?) spent refactoring 20/30/+-year old code to avoid Y2K issues. (that same 20/30-year-old code is quickly becoming 40/50-year-old code, that we rely upon for critical infrastructure, that very few people can maintain)</p>
<p>So the limiting factor for Program Q is, indeed, more likely to be reaching the maximum record number than it will be transitioning to a new application.</p>
<p>(I would also bet on Dennis there, or that they use this number in some other application which has a different limit that they&#39;re going to reach first.)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1176843">
				<div id="div-comment-1176843" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Engywuck</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150218-00/?p=44643#comment-1176843">
			February 23, 2015 at 12:54 am</a>		</div>

		<p>even the Windows 10 Technical Preview still contains VB6 support (at least msvbvm60.dll is still in %windir%SysWOW64), so Microsoft will probably support this ageing codebase indefinitely. So why change? ;-) </p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1176863">
				<div id="div-comment-1176863" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Boris</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150218-00/?p=44643#comment-1176863">
			February 23, 2015 at 3:25 am</a>		</div>

		<p>@Engywuck: supported != competitive</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1176963">
				<div id="div-comment-1176963" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">12BitSlab</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150218-00/?p=44643#comment-1176963">
			February 23, 2015 at 12:26 pm</a>		</div>

		<p>One of the most used programs ever and is still executed many millions of times per day was written in the 1960&#39;s &#8212; IEFBR14. &nbsp;Code can, and does stay in production for a VERY long time.</p>
<p>With that said, Raymond is correct in saying that one must plan for long term use of data. &nbsp;Regardless of whether a particular program/system will meet one&#39;s long term needs, very often there are regulatory issues surrounding the retention of records. </p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>