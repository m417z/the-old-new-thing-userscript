<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (10)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment byuser comment-author-fleet-command even thread-even depth-1 parent" id="comment-1326025">
				<div id="div-comment-1326025" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Fleet+Command' rel='external nofollow' class='url'>Fleet Command</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180221-00/?p=98065#comment-1326025">
			February 21, 2018 at 1:07 pm</a>		</div>

		<p>What&#8217;s with the _ before function names? Couldn&#8217;t Microsoft just call them &#8220;OpenOSFileHandle&#8221;, &#8220;Dup2&#8221;, &#8220;FileNo&#8221;, and &#8220;Close&#8221;?</p>

		
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-koldude odd alt depth-2 parent" id="comment-1326045">
				<div id="div-comment-1326045" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/kantos' rel='external nofollow' class='url'>kantos</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180221-00/?p=98065#comment-1326045">
			February 21, 2018 at 1:26 pm</a>		</div>

		<p>No, they are extensions provided by the CRT. They are not encouraged for use by any stretch or meaning of the term. That includes the POSIX functions which MS only provides for compatibility with people too lazy to use the standard functions. These are not Operating System functions and don&#8217;t follow WIN32 conventions, because they are not windows maintained.</p>

		
				</div>
		<ol class="children">
		<li class="comment even depth-3" id="comment-1326095">
				<div id="div-comment-1326095" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">David-T</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180221-00/?p=98065#comment-1326095">
			February 22, 2018 at 7:05 am</a>		</div>

		<p>Erm, standards compatibility is not about laziness.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment odd alt depth-2" id="comment-1326065">
				<div id="div-comment-1326065" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">M Hotchin</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180221-00/?p=98065#comment-1326065">
			February 21, 2018 at 6:45 pm</a>		</div>

		<p>In particular the C and C++ standards reserve all identifiers beginning with an underscore to the implementation.</p>
<p>So, starting with &#8216;_&#8217; means they will not conflict with any other properly named identifier.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even depth-2" id="comment-1326066">
				<div id="div-comment-1326066" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Harry Johnston</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180221-00/?p=98065#comment-1326066">
			February 21, 2018 at 6:49 pm</a>		</div>

		<p>There&#8217;s a footnote in the ISO C standard which reads &#8220;This  implies  that  a  conforming  implementation  reserves  no  identifiers  other  than  those  explicitly reserved in this International Standard&#8221;.  I&#8217;m not sure that was intended to apply when the program explicitly includes a non-standard header file, though.  I generally leave that sort of thing to the language lawyers.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt depth-2" id="comment-1326085">
				<div id="div-comment-1326085" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">hyperman</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180221-00/?p=98065#comment-1326085">
			February 22, 2018 at 6:00 am</a>		</div>

		<p>AFAIK, C has a rule in their standard:  Names starting with an underscore are reserved for internal use by the OS/standard library.  You are not allowed to create functions/variables/&#8230; starting with an underscore.  OTOH, the standard library should only provide either the  functions defined by the standard AND functions starting with an underscore.  This allows you, the programmer, to define functions without having a name clash with your OS vendor.</p>
<p>Both standard library providers and users have an tendency to ignore this rule.  You might argue these things are the only names defined by the windows OS that are actually correct usage of C ;-)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even depth-2" id="comment-1326105">
				<div id="div-comment-1326105" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Jon</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180221-00/?p=98065#comment-1326105">
			February 22, 2018 at 7:16 am</a>		</div>

		<p>Since &#8220;dup2&#8221; isn&#8217;t a &#8220;reserved&#8221; name in the C standard, a legal C program can define a global function with that name.  If the C runtime defined a global function with the same name, things would go horribly wrong.  So the C runtime uses &#8220;_dup2&#8221; instead.  That is a &#8220;reserved&#8221; name, since it starts with an underscore, so a legal C program cannot define a global function with that name.</p>
<p>(In practice all compilers will let you define functions with most names starting with an underscore, since the same compiler is used to compile the C runtime.  But that&#8217;s technically a compiler-specific extension to the C standard.  And choosing certain names will break things.  Exactly which names and what breaks is not documented and may change between compiler releases.  And if it breaks that&#8217;s your fault and not a compiler bug).</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1 parent" id="comment-1326075">
				<div id="div-comment-1326075" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">The_Assimilator</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180221-00/?p=98065#comment-1326075">
			February 21, 2018 at 10:03 pm</a>		</div>

		<p>Reference for the lazy, or until the next time Microsoft decides to break its docs site: <a href="https://docs.microsoft.com/en-za/cpp/c-runtime-library/reference/dup-dup2" rel="nofollow">https://docs.microsoft.com/en-za/cpp/c-runtime-library/reference/dup-dup2</a></p>

		
				</div>
		<ol class="children">
		<li class="comment even depth-2" id="comment-1326235">
				<div id="div-comment-1326235" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://nbtparse.org' rel='external nofollow' class='url'>Kevin</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180221-00/?p=98065#comment-1326235">
			February 22, 2018 at 7:17 pm</a>		</div>

		<p>Since _dup2 is mostly or entirely conformant to POSIX, you can also just look up dup2(2) in any Unix manual (including the ones which various kind people have published on the internet) and it should be approximately correct.  The description published by The Open Group is (intended to be) authoritative, but is a tad harder to read because of all the &#8220;shall&#8221; verbiage.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment odd alt thread-even depth-1" id="comment-1326525">
				<div id="div-comment-1326525" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Tanveer Badar</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180221-00/?p=98065#comment-1326525">
			February 25, 2018 at 7:13 pm</a>		</div>

		<p>What is wrong with fprintf() or similar? And since it is C++ (in the example at least, your support link is broken), why couldn&#8217;t their functions take an basic_ostream&amp;, and be done with it?</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>