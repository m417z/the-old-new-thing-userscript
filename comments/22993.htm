<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (25)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-612803">
				<div id="div-comment-612803" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://coleman.jandasoft.biz' rel='external nofollow' class='url'>Coleman</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080326-00/?p=22993#comment-612803">
			March 26, 2008 at 10:06 am</a>		</div>

		<p>Raymond,</p>
<p>I always thought this had more to do with name mangling in C++ than C namespaces. &nbsp;</p>
<p>Thanks for teaching me something new!</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-612823">
				<div id="div-comment-612823" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Nathan_works</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080326-00/?p=22993#comment-612823">
			March 26, 2008 at 10:14 am</a>		</div>

		<p>This may sound like a dumb question, and the answer probably exists on the web, though I don&#8217;t know the right way to phrase it as such..</p>
<p>Which came first, windows or MSVC (or whatever the first microsoft compiler was that contained all the windows libraries and headers) ?</p>
<p>I&#8217;m wondering if MS had a C compiler on hand to develop windows, or if an alternate compiler was used to develop and compile windows, and later MS developed their own compiler.</p>
<p>I recall that win95 and MSVC 6 were released in roughly the same time frame (as in, I had a &quot;wow, neat, a windows 95 box!&quot; and MSVC 6 in the same first job&#8230; )</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-612843">
				<div id="div-comment-612843" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.differentpla.net/' rel='external nofollow' class='url'>roger@differentpla.net</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080326-00/?p=22993#comment-612843">
			March 26, 2008 at 10:42 am</a>		</div>

		<p>@Nathan_works: In the past, Microsoft didn&#8217;t have a compiler that was hosted on Windows. Quick C for Windows and Visual C++ 1.0 were the first.</p>
<p>Before that, you could use Microsoft C 6.0 to target DOS, Windows or OS/2, if I recall correctly.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-612893">
				<div id="div-comment-612893" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Luciano</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080326-00/?p=22993#comment-612893">
			March 26, 2008 at 10:53 am</a>		</div>

		<p>If i remember correctly (it was many years ago) the first C compiler from microsoft was produced by Lattice&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-612903">
				<div id="div-comment-612903" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://mooism.livejournal.com' rel='external nofollow' class='url'>Dave</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080326-00/?p=22993#comment-612903">
			March 26, 2008 at 10:56 am</a>		</div>

		<p>&lt;blockquote&gt;Next time, why you also don&#8217;t see the pattern typedef struct { &#8230; } XYZ very much either.&lt;/blockquote&gt;</p>
<p>Iâ€™m guessing this has to do with compiler error messages.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-612923">
				<div id="div-comment-612923" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://barefootbum.blogspot.com' rel='external nofollow' class='url'>The Barefoot Bum</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080326-00/?p=22993#comment-612923">
			March 26, 2008 at 11:05 am</a>		</div>

		<p>&lt;i&gt;Next time, why you also don&#8217;t see the pattern typedef struct { &#8230; } XYZ very much either.&lt;/i&gt;</p>
<p>That seems trivial: you can&#8217;t then have pointers to the same type of struct within the struct.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-612973">
				<div id="div-comment-612973" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">ScottD</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080326-00/?p=22993#comment-612973">
			March 26, 2008 at 11:22 am</a>		</div>

		<p>&quot;Next time, why you also don&#8217;t see the pattern typedef struct { &#8230; } XYZ very much either.&quot;</p>
<p>My guess is because you can&#8217;t forward-declare a struct which has been defined that way. IIRC, it&#8217;s technically a typedef to an unnamed struct.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-612993">
				<div id="div-comment-612993" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.honestillusion.com' rel='external nofollow' class='url'>James Curran</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080326-00/?p=22993#comment-612993">
			March 26, 2008 at 11:56 am</a>		</div>

		<p>Next time, why you also don&#8217;t see the pattern typedef struct { &#8230; } XYZ very much either.&quot;</p>
<p>Mostly, because I don&#8217;t believe anonomous struct have ever been legal C syntax (like a widely implemented compiler extension)</p>
<p>The more basic question is &quot;why do we need the pattern typedef struct XYX { &#8230; } XYZ; at all&quot; (Answer, so we can refer to &quot;struct XYZ&quot; as just &quot;XYZ&quot; is a C program &#8212; The designers of C++ wisely put that ability right into the language without needing the typedef&quot;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-613003">
				<div id="div-comment-613003" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">dave</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080326-00/?p=22993#comment-613003">
			March 26, 2008 at 12:07 pm</a>		</div>

		<p>&quot;Mostly, because I don&#8217;t believe anonomous struct have ever been legal C syntax (like a widely implemented compiler extension)&quot;</p>
<p>Anonymous struct types (structs without a tag naming them: `struct {int a, double b} foo={42,3.14};&#8217;) have been legal since at least 1989 when ANSI standardized the language; I don&#8217;t have a K&amp;R1 handy to check, but I suspect it goes even farther back than that.</p>
<p>You may be thinking of anonymous struct members of another struct: &#8216;struct foo { struct {int a; double b;}; char *c;};&#8217;. &nbsp;The common extension is to allow access to the members of the anonymous inner struct as &#8216;x.a&#8217; (instead of x.inner.a), but the construct isn&#8217;t legal C.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-613013">
				<div id="div-comment-613013" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">pingpong</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080326-00/?p=22993#comment-613013">
			March 26, 2008 at 12:14 pm</a>		</div>

		<p>@Nathan_works:</p>
<p>The compiler released around Win95 timeframe was Microsoft Visual C++ 4.0. It was followed by versions 4.1, 4.2, 5.0 and finally 6.0 in 1998.</p>
<p>There was no MSVC++ 3.0 AFAIR.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-613023">
				<div id="div-comment-613023" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://jbazuzi.blogspot.com' rel='external nofollow' class='url'>Jay Bazuzi</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080326-00/?p=22993#comment-613023">
			March 26, 2008 at 12:32 pm</a>		</div>

		<p>One of the annoyances with this use of typedefs is that VC++ debugger doesn&#8217;t know whether to use a type&#8217;s real name (&#8220;tagXYZ&#8221;) or the typedef&#8217;d name (&#8220;XYZ&#8221;). &nbsp;Since a type can be typedef&#8217;d to multiple names, it makes sense for it to pick the canonical name, but as a user, that&#8217;s not what you usually want to see.</p>
<p>So, why bother typdef&#8217;ing at all? &nbsp;Why not just name the struct XYZ?</p>
<div class=post>[<i>Most people would have quickly tired of typing &#8220;struct&#8221; all the time. After about the tenth time of typing <code>struct DRAWITEMSTRUCT *pdis = (struct DRAWITEMSTRUCT)lParam;</code> you&#8217;re going to say &#8220;Why can&#8217;t we create a typedef for this structure?&#8221; -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-613033">
				<div id="div-comment-613033" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">VisualC++ x.0</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080326-00/?p=22993#comment-613033">
			March 26, 2008 at 12:37 pm</a>		</div>

		<blockquote><p>
  &gt; The compiler released around Win95 timeframe was Microsoft Visual C++ 4.0.
</p></blockquote>
<p>IIRC, Win95 was published at the same time of Visual C++ 2.0 &#8211; the first true 32bit version after the hybrid 1.5. 4.0 came shortly after.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-613043">
				<div id="div-comment-613043" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://VisualC++2.0releasedate' rel='external nofollow' class='url'>pingpong</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080326-00/?p=22993#comment-613043">
			March 26, 2008 at 1:01 pm</a>		</div>

		<p>According to <a rel="nofollow" target="_new" href="http://www.emsps.com/oldtools/mscppv.htm" rel="nofollow">http://www.emsps.com/oldtools/mscppv.htm</a>, the MSVC 2.0 folders are dated 9/20/94 2:55am &#8211; that&#8217;s almost a year before Win95 release.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-613083">
				<div id="div-comment-613083" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Nathan_works</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080326-00/?p=22993#comment-613083">
			March 26, 2008 at 1:48 pm</a>		</div>

		<p>Thanks for the correction on which version of MSVC was released at/around win95 time &#8212; I certainly don&#8217;t have the install media around to check ;)</p>
<p>It was 32bit, as the guys before me had just ported it over. I was too green to deal with thunks and other 16 bit issues &#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-613183">
				<div id="div-comment-613183" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://nikitadanilov.blogspot.com' rel='external nofollow' class='url'>nikita</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080326-00/?p=22993#comment-613183">
			March 26, 2008 at 4:20 pm</a>		</div>

		<p>Struct and union field names used to live in the same global name-space too, and this is where tradition to prepend a unique prefix to struct fields is from. As a byproduct, fields weren&#8217;t bound to any particular struct type:</p>
<p>&lt;pre&gt;</p>
<pre><code>register *rp;

rp = p;

if(rp-&amp;gt;i_count == 1) {
</code></pre>
<p>&lt;/pre&gt;</p>
<p>(v6root/usr/sys/ken/iget.c:iput())</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-613203">
				<div id="div-comment-613203" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">ERock</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080326-00/?p=22993#comment-613203">
			March 26, 2008 at 4:54 pm</a>		</div>

		<p>This is the first time on Raymond&#8217;s blog I&#8217;ve read a technical post and have known the answer before I read it.</p>
<p>I feel so smart.</p>
<p>Day after tomorrow, though, I will stop knowing the answers and will feel dumb again.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-613223">
				<div id="div-comment-613223" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ulric</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080326-00/?p=22993#comment-613223">
			March 26, 2008 at 6:41 pm</a>		</div>

		<blockquote><p>
  so this workaround is no longer necessary, but</p>
<p>  it doesn&#8217;t hurt either.
</p></blockquote>
<p>It&#8217;s an annoyance, actually, because in C++ you can&#8217;t derive a class from the the typedef you&#8217;re used to see.</p>
<p>In other words, you have to derive a c++ class from &#8216;tagPOINT&#8217; instead of from &quot;POINT&quot;.</p>
<p>I absolutely hate the &#8216;tag&#8217; stuff in Windows header, because programmers have copied it into their code in many companies I&#8217;ve been at, without knowing why. &nbsp;Just like the &quot;LP&quot; typedefs for pointers, or capital VOID.</p>
<p>The reason why there are typedef at all was that in &quot;C&quot; we had to write &quot;struct POINT pt;&quot; &nbsp;when defining a variable. &nbsp;The typedef saves us from having to type the word &#8216;struct&#8217;. &nbsp;In C++, this isn&#8217;t necessary, and would be totally transparent for us if it wasn&#8217;t for that &#8216;tag&#8217; prefix, which forces us to be aware that there is a type and a typedef.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-613263">
				<div id="div-comment-613263" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">steveg</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080326-00/?p=22993#comment-613263">
			March 26, 2008 at 8:04 pm</a>		</div>

		<p>Here&#8217;s a gem of an article about running Windows 1.0 under Virtual PC by Charles Petzold, which might make some oldies smile.</p>
<p><a rel="nofollow" target="_new" href="http://www.charlespetzold.com/etc/Windows1/index.html" rel="nofollow">http://www.charlespetzold.com/etc/Windows1/index.html</a></p>
<p>I was looking around for a circa Win2.0 Windows.h file to look at structs there&#8230; stupid internet, it&#8217;s like the world didn&#8217;t exist before 2000.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-613303">
				<div id="div-comment-613303" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Gabe</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080326-00/?p=22993#comment-613303">
			March 27, 2008 at 12:44 am</a>		</div>

		<p>The Win1.0 SDK came with Microsoft C 3.0, which predates Microsoft VisualC by many years.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-613283">
				<div id="div-comment-613283" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">IgorD</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080326-00/?p=22993#comment-613283">
			March 26, 2008 at 10:05 pm</a>		</div>

		<p>Some compilers alow me to do this:</p>
<p>typedef struct _a &nbsp;{</p>
<p> &nbsp; &nbsp;int (*some_func_ptr)(struct _b *);</p>
<p>} AType;</p>
<p>typedef struct _b &nbsp;{</p>
<p>&#8230;</p>
<p>} BType;</p>
<p>other compilers require this declaration up front before everything else:</p>
<p>struct _b;</p>
<p>typedef struct _a &nbsp;{</p>
<p> &nbsp; &nbsp;int (*some_func_ptr)(struct _b *);</p>
<p>} AType;</p>
<p>typedef struct _b &nbsp;{</p>
<p>&#8230;</p>
<p>} BType;</p>
<p>I have no idea what is &quot;more&quot; legal.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-613333">
				<div id="div-comment-613333" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">SuperKoko</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080326-00/?p=22993#comment-613333">
			March 27, 2008 at 9:27 am</a>		</div>

		<p>&quot;</p>
<p>Next time, why you also don&#8217;t see the pattern typedef struct { &#8230; } XYZ very much either.</p>
<p>&quot;</p>
<p>Short answer: Anonymous structures don&#8217;t benefit from good error/warning/debug information.</p>
<p>Side note:</p>
<p>I remember that Borland C supports something like typedef struct XYZ { &#8230; }; as a special syntax for typedef struct XYZ { &#8230; } XYZ;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-613503">
				<div id="div-comment-613503" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://hendrik.pooq.com' rel='external nofollow' class='url'>Hendrik Boom</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080326-00/?p=22993#comment-613503">
			March 27, 2008 at 1:04 pm</a>		</div>

		<p>C had one namespace for struct and union tags, but typedefs were in the same namespace as variables. &nbsp;C did not automatically define a typedef name when you defined a struct. &nbsp;It was C++ that introduced the implicit definition of a typedef name.</p>
<p>So in C people would write</p>
<p>&nbsp;typedef struct foo { &#8230; } foo;</p>
<p>and then they sould refer to the type without mentioning struct.</p>
<p>But when they tried compiling this in C++, the mention of &quot;struct foo&quot; would define the typedef name &#8216;foo&#8217;, and when the compiler got around to the &#8216;foo&#8217; after then &#8216;}&#8217;, it would complain that &#8216;foo&#8217; had already been defined.</p>
<p>So to use anything like this in C++ you had to change the structure tag.</p>
<p>I speak from memory &#8211; I was a C user in the 70&#8217;s, and a C++ implementer in the early nineties. &nbsp;C++ may hae chenged then, of course. &nbsp;I haven&#8217;t been tracking it since then.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-613653">
				<div id="div-comment-613653" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ian Johns</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080326-00/?p=22993#comment-613653">
			March 27, 2008 at 11:28 pm</a>		</div>

		<p>I really should have added this here :</p>
<p><a rel="nofollow" target="_new" href="http://www.embedded.com/columns/programmingpointers/9900748" rel="nofollow">http://www.embedded.com/columns/programmingpointers/9900748</a></p>
<p>instead of here :</p>
<p><a rel="nofollow" target="_new" href="http://blogs.msdn.com/oldnewthing/archive/2008/03/27/8338530.aspx#8340834" rel="nofollow">http://blogs.msdn.com/oldnewthing/archive/2008/03/27/8338530.aspx#8340834</a></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-613663">
				<div id="div-comment-613663" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Yuhong Bao</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080326-00/?p=22993#comment-613663">
			March 27, 2008 at 11:58 pm</a>		</div>

		<p>I think the Windows 1.0 SDK came around the time of MS C 4.0, and the Windows 2.0 SDK came around the time of MS C 5.0. Visual C++ 2.0 was released around the time of NT 3.5 (I wonder how many people believed Win95 was the first version of Windows to run Win32 apps natively). Visual C++ 4.0 was released around the release of Win95. Visual C++ 4.2 was released around the release of NT 4.0 and contained the beta of several SDKs, including the ActiveX SDK. 4.2c was released to patch them up to released versions. Visual C++ 6.0 was released around the release of Win98, but still contained the NT 4.0 headers and libraries.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-614443">
				<div id="div-comment-614443" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Alexandre Grigoriev</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080326-00/?p=22993#comment-614443">
			April 1, 2008 at 12:23 pm</a>		</div>

		<p>IgorD:</p>
<p>A scope for a structure/class name implicitly declared in the function declaration argument list is limited to the function declaration. It&#8217;s not propagated up to the enclosing scope. </p>
<p>void a(class b *c); // not in the global scope</p>
<p>class b;</p>
<p>void a(class b *c); // same as in the global scope</p>
<p>On the other hand, a scope for a structure/class name implicitly declared in a member declaration is propagated to the enclosing scope.</p>
<p>class d</p>
<p>{</p>
<p>class a *b;</p>
<p>};</p>
<p>Here &#8216;class a&#8217; belongs to the global scope, as if it were declared before class d declaration.</p>
<p>But if you do like this:</p>
<p>class d</p>
<p>{</p>
<p>class a;</p>
<p>class a *b;</p>
<p>};</p>
<p>Then it&#8217;s class d::class a.</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>