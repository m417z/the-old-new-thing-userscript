<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (6)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment byuser comment-author-practicalvb even thread-even depth-1 parent" id="comment-1370695">
				<div id="div-comment-1370695" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Rising' rel='external nofollow' class='url'>Rising</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20181114-00/?p=100215#comment-1370695">
			November 14, 2018 at 7:38 am</a>		</div>

		<p>Raymond, in the statement<br />
MsgWaitForMultipleObjects(0, NULL, FALSE, time, QS_ALLINPUT);<br />
did you mean to pass TRUE instead of FALSE for the fWaitAll argument?</p>

		
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-yuffa8 odd alt depth-2" id="comment-1370745">
				<div id="div-comment-1370745" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/uffa8' rel='external nofollow' class='url'>uffa8</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20181114-00/?p=100215#comment-1370745">
			November 14, 2018 at 2:40 pm</a>		</div>

		<p>in this call no difference between TRUE (WaitAll) and FALSE(WaitAny), because in this case internally called `KeWaitForMultipleObjects` with single event (related to thread input). when object count (in call `KeWaitForMultipleObjects` ) is 1 &#8211; WaitAll == WaitAny by sense</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment byuser comment-author-dpb even thread-odd thread-alt depth-1 parent" id="comment-1370715">
				<div id="div-comment-1370715" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/SpecLad' rel='external nofollow' class='url'>SpecLad</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20181114-00/?p=100215#comment-1370715">
			November 14, 2018 at 11:05 am</a>		</div>

		<p>I wish there was a way to get this hidden input event handle directly. It seems very inelegant to have to use a separate function when you want to wait for both objects and window messages.</p>

		
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-parkrrrr odd alt depth-2" id="comment-1370755">
				<div id="div-comment-1370755" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/RP+%28MSFT%29' rel='external nofollow' class='url'>RP (MSFT)</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20181114-00/?p=100215#comment-1370755">
			November 14, 2018 at 4:48 pm</a>		</div>

		<p>Without any special knowledge of the internals, I&#8217;d guess that the event doesn&#8217;t even exist &#8211; or if it does exist, it&#8217;s never signaled &#8211; except when MsgWaitForMultipleObjects is executing. The specific conditions that would cause it to be signaled are unknown until you specify them in the arguments to that function.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment byuser comment-author-henke even thread-even depth-1" id="comment-1370725">
				<div id="div-comment-1370725" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Henke37' rel='external nofollow' class='url'>Henke37</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20181114-00/?p=100215#comment-1370725">
			November 14, 2018 at 12:35 pm</a>		</div>

		<p>I take it that the special internal handle is for an object that is not part of the documented api and is subject to change at will.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-geelaw odd alt thread-odd thread-alt depth-1" id="comment-1370765">
				<div id="div-comment-1370765" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Gee+Law' rel='external nofollow' class='url'>Gee Law</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20181114-00/?p=100215#comment-1370765">
			November 14, 2018 at 6:02 pm</a>		</div>

		<p>I don’t really understand why people will have problem understanding the <code>bWaitAll</code> argument in <code>MsgWaitForMultipleObjects</code> (as suggested by Larry Osterman’s post). The docs clearly say true = all and input, false = one or input. The only quirk for people unfamiliar with mathematical logic would be the empty set case, where all means none (automatically qualified) and one is never satisfied, in which case the effect of passing true/false will be the same — wait for the input event.</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>