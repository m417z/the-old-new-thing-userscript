<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (4)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1 parent" id="comment-1356975">
				<div id="div-comment-1356975" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Wyatt</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180821-00/?p=99535#comment-1356975">
			August 21, 2018 at 8:02 am</a>		</div>

		<p>Shouldn&#8217;t the line &#8220;cror eq,4*cr6+eq,4*cr7+eq&#8221; be &#8220;cror 4*cr7+eq,4*cr6+eq,4*cr7+eq&#8221;?  Admittedly, I only marginally understand this, but I would think as written, &#8220;eq&#8221; would store the bit in the equality bit of cr0, which is not what you use in your beq instruction.</p>

		
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-oldnewthing bypostauthor odd alt depth-2" id="comment-1356995">
				<div id="div-comment-1356995" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Raymond+Chen+-+MSFT' rel='external nofollow' class='url'>Raymond Chen - MSFT</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180821-00/?p=99535#comment-1356995">
			August 21, 2018 at 9:49 am</a>		</div>

		<p>Derp, you&#8217;re right.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment even thread-odd thread-alt depth-1" id="comment-1357015">
				<div id="div-comment-1357015" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180821-00/?p=99535#comment-1357015">
			August 21, 2018 at 12:21 pm</a>		</div>

		<p>I must be reading this wrong. The assembly appears to be exploring another global symbol &#8220;loop&#8221;.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-even depth-1" id="comment-1357035">
				<div id="div-comment-1357035" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Dave</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180821-00/?p=99535#comment-1357035">
			August 21, 2018 at 6:35 pm</a>		</div>

		<p>&gt;For some reason, the Microsoft compiler likes to use cr6 and cr7 as the targets for its comparison instructions.<br />
&gt;It probably wants to stay far away from cr0 and cr1, which are implicitly updated by some instructions. </p>
<p>&#8220;OK guys, we don&#8217;t want to go anywhere near cr0 and cr1.  cr2 and cr3 are probably out too, they&#8217;re right next door.  cr4 is married to cr1&#8217;s cousin so that&#8217;s out, and then cr5 plays golf with cr0 every other Saturday, so that leaves us with cr6 and cr7&#8221;.</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>