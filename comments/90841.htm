<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (39)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment byuser comment-author-anonymouscommenter even thread-even depth-1" id="comment-1235906">
				<div id="div-comment-1235906" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">anonymouscommenter</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150723-00/?p=90841#comment-1235906">
			July 23, 2015 at 7:11 am</a>		</div>

		<p>&quot;At the end of the day, the worst you can do with this crash is annoy somebody.&quot;</p>
<p>Are you sure? &nbsp;I read a while back that the Firefox team considers any instance in which input can cause an unexpected exception to be raised to be a full pwned-the-system vulnerability, because the exception unwinding can leave the program in an unexpected state which can then be exploited. &nbsp;(Apparently it&#39;s happened a number of times already.)</p>
<p>Granted, the fact that in this particular case the exception is unhandled and it ends up crashing the whole program makes that appear much less likely, but even so&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-anonymouscommenter odd alt thread-odd thread-alt depth-1" id="comment-1235886">
				<div id="div-comment-1235886" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">anonymouscommenter</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150723-00/?p=90841#comment-1235886">
			July 23, 2015 at 7:19 am</a>		</div>

		<p>Well, there might be data-loss iff that application can have multiple files open at the same time.</p>
<p>Seems not to be the case here though&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-anonymouscommenter even thread-even depth-1" id="comment-1235876">
				<div id="div-comment-1235876" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">anonymouscommenter</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150723-00/?p=90841#comment-1235876">
			July 23, 2015 at 7:22 am</a>		</div>

		<p>If it were Word I&#39;d be complaining about a DoS bug because it brought down all 8 or so open documents when it crashed.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-anonymouscommenter odd alt thread-odd thread-alt depth-1" id="comment-1235866">
				<div id="div-comment-1235866" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">anonymouscommenter</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150723-00/?p=90841#comment-1235866">
			July 23, 2015 at 7:27 am</a>		</div>

		<p>&quot;unexpected exception&quot;</p>
<p>I&#39;m struggling with the concept of an expected exception.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-mngoldeneagle even thread-even depth-1" id="comment-1235856">
				<div id="div-comment-1235856" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/MNGoldenEagle' rel='external nofollow' class='url'>MNGoldenEagle</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150723-00/?p=90841#comment-1235856">
			July 23, 2015 at 7:28 am</a>		</div>

		<p>@Mason Wheeler: This is true if the exception is caught somewhere and the application decides to just keep going, sure. &nbsp;Something went wrong and unless you can guarantee your internal structures are still valid, you should terminate. &nbsp;In this case, the application terminates because it elected not to catch the exception, so there&#39;s no chance for this to be exploited.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-anonymouscommenter odd alt thread-odd thread-alt depth-1" id="comment-1235846">
				<div id="div-comment-1235846" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">anonymouscommenter</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150723-00/?p=90841#comment-1235846">
			July 23, 2015 at 7:32 am</a>		</div>

		<p>If exception unwinding leaves the program in an unexpected state, that means the called functions don&#39;t even provide the basic guarantee. In that case, Firefox shouldn&#39;t be using exceptions in the first place.</p>
<p>Also, I feel that exceptions in C++ are a whole different beast than exceptions in managed code, anyway.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-anonymouscommenter even thread-even depth-1" id="comment-1235836">
				<div id="div-comment-1235836" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">anonymouscommenter</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150723-00/?p=90841#comment-1235836">
			July 23, 2015 at 7:34 am</a>		</div>

		<p>@Mason Wheeler: Firefox is written in C++, which is a significantly scarier language than C#. &nbsp;If something unexpected happens, there&#39;s a good chance you&#39;ve invoked UB at some point, and if you&#39;re invoking UB, it is entirely possible the system really is pwned. &nbsp;This is less true of C#.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-anonymouscommenter odd alt thread-odd thread-alt depth-1" id="comment-1235826">
				<div id="div-comment-1235826" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">anonymouscommenter</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150723-00/?p=90841#comment-1235826">
			July 23, 2015 at 7:35 am</a>		</div>

		<p>@Craig: Expected exceptions happen all the time. &nbsp;For example, a File Not Found (or its network equivalent, the failure to resolve a server from DNS) might easily raise an exception that your code is prepared to deal with.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-anonymouscommenter even thread-even depth-1" id="comment-1235816">
				<div id="div-comment-1235816" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">anonymouscommenter</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150723-00/?p=90841#comment-1235816">
			July 23, 2015 at 7:46 am</a>		</div>

		<p>@Craig &amp; @Mason Wheeler</p>
<p>Agree with Mason. &nbsp;When doing any sort of database operation, one truly must expect exceptions (e.g., field has a NULL value even though it is supposed to always have a value).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-anonymouscommenter odd alt thread-odd thread-alt depth-1" id="comment-1235806">
				<div id="div-comment-1235806" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">anonymouscommenter</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150723-00/?p=90841#comment-1235806">
			July 23, 2015 at 7:54 am</a>		</div>

		<p>@12BitSlab: But then such an exception is nothing more than a glorified error code.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-anonymouscommenter even thread-even depth-1" id="comment-1235786">
				<div id="div-comment-1235786" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">anonymouscommenter</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150723-00/?p=90841#comment-1235786">
			July 23, 2015 at 8:00 am</a>		</div>

		<p>@ creaothceann &nbsp; &nbsp;</p>
<p>Regardless of terminology, exceptions happen often when dealing with database. &nbsp;If one is not prepared to deal with them, one will not be developing code for very long.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-anonymouscommenter odd alt thread-odd thread-alt depth-1" id="comment-1235776">
				<div id="div-comment-1235776" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">anonymouscommenter</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150723-00/?p=90841#comment-1235776">
			July 23, 2015 at 8:08 am</a>		</div>

		<p>Back on topic, I don&#39;t see this as a security problem. &nbsp;Even if it was a MDI type of application that can handle multiple documents as a time, the worst thing that could happen is to have some data loss. &nbsp;There is zero possibility (or at least near zero since we do not know which application it is) of data being exfiltrated or installing code on the host or privilege escalation.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-anonymouscommenter even thread-even depth-1" id="comment-1235766">
				<div id="div-comment-1235766" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">anonymouscommenter</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150723-00/?p=90841#comment-1235766">
			July 23, 2015 at 8:11 am</a>		</div>

		<p>Well, when you&#39;re sending out notifications of &quot;vulnerabilities&quot; for a &quot;nominal subscription fee&quot;, the validity of the so-called vulnerabilities don&#39;t matter as much as how many you report and how scary they sound. After all, most people likely to fall for that probably don&#39;t have the expertise to properly evaluate the issue, and they&#39;ve got to generate plenty of scary-sounding reports to make people feel like they&#39;re getting their money&#39;s worth from that scam!</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-anonymouscommenter odd alt thread-odd thread-alt depth-1" id="comment-1235756">
				<div id="div-comment-1235756" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">anonymouscommenter</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150723-00/?p=90841#comment-1235756">
			July 23, 2015 at 8:14 am</a>		</div>

		<p>&quot;Here&#39;s another way you can annoy somebody: Send them a copy of &nbsp;onestop.mid.&quot;</p>
<p>There&#39;s no need, since, you know, everybody running Windows has a copy already. Just the path is enough.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-davebacher even thread-even depth-1" id="comment-1235746">
				<div id="div-comment-1235746" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Dave+Bacher' rel='external nofollow' class='url'>Dave Bacher</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150723-00/?p=90841#comment-1235746">
			July 23, 2015 at 8:32 am</a>		</div>

		<p>That looks like C# to me (or another CLR language), since it&#39;s reporting a System.OverflowException on a CLR type.</p>
<p>Is the app designed to fail secure or to fail open?</p>
<p>For example &#8212; pretend there&#39;s an email client, and it spools all messages to disk and tags them neutral by default. &nbsp;As each message is received, it spawns a thread that does a DKIM, S/MIME and/or PGP/GPG verification of the message, and then it marks the messages as untrusted if that fails.</p>
<p>That is a &quot;fail open&quot; scenario &#8212; so pretend this Overflow happens while parsing the security information; the message won&#39;t be flagged &quot;untrusted,&quot; and the program will termiante. &nbsp;When the program is restarted, the message will appear in the list &#8212; and won&#39;t be (correctly) marked untrusted due to the issue.</p>
<p>Another typical issue is tombstoning &#8212; the app spools the corrupt file it&#39;s been handed to isolated storage, so that it can restore after a tombstone. &nbsp;The crash happens, and you restart the app &#8212; and it tries to be a good citizen and put you back where you were. &nbsp;And then crashes again.</p>
<p>Data loss? &nbsp;Assume the app is MDI &#8212; and the user has another document open, and you just crashed it. &nbsp;What happens to the user&#39;s data? &nbsp;Absolutely it could be data loss as well &#8212; ideally you want there to be as few user-initiated actions that can cause a problem</p>
<p>Anyway &#8212; this &quot;could&quot; be a security issue, it depends on the app&#39;s design, implementation and purpose.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-anonymouscommenter odd alt thread-odd thread-alt depth-1" id="comment-1235736">
				<div id="div-comment-1235736" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">anonymouscommenter</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150723-00/?p=90841#comment-1235736">
			July 23, 2015 at 9:10 am</a>		</div>

		<p>@Dave Bacher: Replace all the instances of &quot;application crashed&quot; with &quot;power failed&quot;. Does this change any of these scenarios? If not, then it&#39;s not a vulnerability in the crash itself.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-anonymouscommenter even thread-even depth-1" id="comment-1235726">
				<div id="div-comment-1235726" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">anonymouscommenter</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150723-00/?p=90841#comment-1235726">
			July 23, 2015 at 9:14 am</a>		</div>

		<p>@Mkie Caron: If somebody could trigger my machine to lose power over the internet I&#39;d be complaining about that too, because there&#39;s no good reason for such a thing to exist.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-anonymouscommenter odd alt thread-odd thread-alt depth-1" id="comment-1235706">
				<div id="div-comment-1235706" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">anonymouscommenter</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150723-00/?p=90841#comment-1235706">
			July 23, 2015 at 9:54 am</a>		</div>

		<p>Even if it doesn&#39;t cause a C-style arbitrary code execution, there is still potential for a security fault here.</p>
<p>The fact that there&#39;s an OverflowException tells me that there&#39;s some value that&#39;s probably not validated against a range &#8212; that is, odds are that the valid range for this integer is probably not exactly 32,767. Let&#39;s say the actual valid range is 0-100. That means any value between 101 and 32,767 can cause unintended behavior, which may include something like taking document text and executing it as a macro even if macro execution is disabled &#8212; the implication being that a macro may do something like load a web browser with a malicious web site or send a spam email on your behalf.</p>
<p>In a situation like I just described, the overflow itself is not a security fault, but is evidence that there might be one.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-anonymouscommenter even thread-even depth-1" id="comment-1235696">
				<div id="div-comment-1235696" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">anonymouscommenter</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150723-00/?p=90841#comment-1235696">
			July 23, 2015 at 10:11 am</a>		</div>

		<p>Joshua &#8212; the point isn&#39;t about what triggers the power loss. The point is that if an unexpected power loss can leave the application data in an unsecure state, then the application has a security flaw, and the fact that you may be able to force the app to crash isn&#39;t itself the security flaw. It&#39;s one more route to expose users to the security flaw, but the security flaw exists even if you fix the crash, ergo the crash is not in itself a security hole.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-hankhein odd alt thread-odd thread-alt depth-1" id="comment-1235686">
				<div id="div-comment-1235686" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Henri+Hein' rel='external nofollow' class='url'>Henri Hein</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150723-00/?p=90841#comment-1235686">
			July 23, 2015 at 10:59 am</a>		</div>

		<p>I think Craig&#39;s point is: if an exception is expected executing a statement, why run the statement in the first place? &nbsp;Take your database example. &nbsp;If you expect an exception opening the database, why even try opening it? &nbsp;You open it, expecting it to succeed. &nbsp;Yes, you should be prepared for failures, and for failures to sometimes throw exceptions, and you should be prepared to handle them. &nbsp;That&#39;s preparing for contingencies, not expecting failure.</p>
<div class="post">[<em>I think you&#39;re saying the same thing. It&#39;s just confusion over what &quot;expected exception&quot; means. One definition is &quot;we assume that it will almost always happen&quot;; another is &quot;we are prepared for it (though it may not happen all the time)&quot;. We are talking about the latter, which perhaps more precisely should be called a &quot;Not unexpected exception&quot;. -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-anonymouscommenter even thread-even depth-1" id="comment-1235676">
				<div id="div-comment-1235676" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">anonymouscommenter</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150723-00/?p=90841#comment-1235676">
			July 23, 2015 at 11:58 am</a>		</div>

		<p>@Craig: In one of our company&#39;s products, there&#39;s even a class called ExpectedException :) It is a specialized GUI framework with deeply nested modal dialogs for industrial use, we throw one subclass of it when the Home button is pressed and catch it at the home screen (of course all dialogs inbetween are disposed of properly).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-anonymouscommenter odd alt thread-odd thread-alt depth-1" id="comment-1235666">
				<div id="div-comment-1235666" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">anonymouscommenter</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150723-00/?p=90841#comment-1235666">
			July 23, 2015 at 12:41 pm</a>		</div>

		<p>@alv: We have something like that. We call it LongjumpException.</p>
<p>Raymond&#39;s case happens. See IOException.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1222132">
				<div id="div-comment-1222132" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Simon</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150723-00/?p=90841#comment-1222132">
			July 23, 2015 at 3:33 pm</a>		</div>

		<p>It might be more helpful to talk of &quot;anticipated exceptions&quot;, rather than &quot;expected&quot;&#8230; the latter kind of has the implication that *not* having an exception is unexpected.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-anonymouscommenter odd alt thread-odd thread-alt depth-1" id="comment-1235656">
				<div id="div-comment-1235656" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">anonymouscommenter</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150723-00/?p=90841#comment-1235656">
			July 23, 2015 at 4:08 pm</a>		</div>

		<p>@Gabe &#8211; possibly, although the fact this is appearing during document load would make me first check if it was being thrown during base derserialization, before actual bounds checking or clamping. &nbsp;Or it&#39;s part of some other &quot;good enough&quot;/&quot;nobody should need&quot; limit (page count, say).</p>
<p>From a reporting standpoint, out-of-designated-bounds behavior would be more interesting, but that&#39;s not the &#39;vulnerability&#39; they reported. &nbsp;Probably something that should be verified as part of this, though.</p>
<p>@alv, @Joshua &#8211; &#8230;you guys know you&#39;re not supposed to use exceptions for normal flow control, right? &nbsp;For one thing, it makes it too easy to forget to clean stuff up in nested dialogs, or even simply not have a handle to some piece of data.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-anonymouscommenter even thread-even depth-1" id="comment-1235646">
				<div id="div-comment-1235646" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">anonymouscommenter</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150723-00/?p=90841#comment-1235646">
			July 23, 2015 at 4:41 pm</a>		</div>

		<p>@Clockwork-Muse</p>
<p>Programmers are supposed to use whatever works well for them.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-cheong odd alt thread-odd thread-alt depth-1" id="comment-1235636">
				<div id="div-comment-1235636" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/cheong00' rel='external nofollow' class='url'>cheong00</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150723-00/?p=90841#comment-1235636">
			July 23, 2015 at 6:27 pm</a>		</div>

		<p>I remembered that in earlier time of Linux, crashing the shell is considered common technique to gain root access. They have to modify kernel behaviour to fix it.</p>
<p>But then again this is an application not a shell, and Windows does not use 0 as LocalSystem / Build-in administrator SID.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-anonymouscommenter even thread-even depth-1" id="comment-1235626">
				<div id="div-comment-1235626" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">anonymouscommenter</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150723-00/?p=90841#comment-1235626">
			July 24, 2015 at 12:36 am</a>		</div>

		<p>@Mason Wheeler re Firefox and exceptions</p>
<p>You failed to make a distinction between language exceptions (of which an OverflowException would be an example) and OS exceptions (such as GPF/SIGSEGV). The latter are an indication that something has broken inside the application machinery, and such breakage can sometimes be exploitable, so there is a valid reason to treat all such exceptions as potential security vulnerabilities (I&#39;m sure MS has a similar policy). The former, on the other hand, are quite safe.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-fleet-command odd alt thread-odd thread-alt depth-1" id="comment-1235606">
				<div id="div-comment-1235606" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Fleet+Command' rel='external nofollow' class='url'>Fleet Command</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150723-00/?p=90841#comment-1235606">
			July 24, 2015 at 1:34 am</a>		</div>

		<p>&quot;All you got was a denial of service against the XYZ application&quot;.</p>
<p>Yes. This is a security vulnerability. Such DoS vulnerabilities are classified as security vulnerability.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-anonymouscommenter even thread-even depth-1" id="comment-1235596">
				<div id="div-comment-1235596" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">anonymouscommenter</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150723-00/?p=90841#comment-1235596">
			July 24, 2015 at 3:35 am</a>		</div>

		<p>@Clockwork-Muse: we don&#39;t use exceptions for normal flow control, but to break out of normal flow. The cleanup code must be there in case an &#39;unexpected&#39; exception happens, otherwise we&#39;re in serious trouble (there are lots of shared resources and misbehaving third-party stuff), therefore it&#39;s an additional bonus that cleanup is a bit more exposed :)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-anonymouscommenter odd alt thread-odd thread-alt depth-1" id="comment-1235586">
				<div id="div-comment-1235586" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">anonymouscommenter</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150723-00/?p=90841#comment-1235586">
			July 24, 2015 at 4:44 am</a>		</div>

		<p>@FleetCommand In a pedantic sense, yes it&#39;s a vulnerability because all DoSses are vulnerabilities. It&#39;s also an extremely weak vulnerability, so weak that in a less pedantic sense it might as well not be one.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-anonymouscommenter even thread-even depth-1" id="comment-1235566">
				<div id="div-comment-1235566" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">anonymouscommenter</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150723-00/?p=90841#comment-1235566">
			July 24, 2015 at 11:46 am</a>		</div>

		<p>I have a proposal. I think we should start calling expected exceptions &quot;expections&quot;. :-)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-joshuaganes odd alt thread-odd thread-alt depth-1" id="comment-1222122">
				<div id="div-comment-1222122" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Joshua+Ganes' rel='external nofollow' class='url'>Joshua Ganes</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150723-00/?p=90841#comment-1222122">
			July 24, 2015 at 1:14 pm</a>		</div>

		<p>&quot;Not unexpected exception&quot; *Ugh!*</p>
<p>I think I prefer the terms anticipated and unanticipated to describe this. Not to mention that expect and except are very similar both visually and phonically.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1235546">
				<div id="div-comment-1235546" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Monochrome Wench</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150723-00/?p=90841#comment-1235546">
			July 24, 2015 at 9:50 pm</a>		</div>

		<p>Really need more details to say for sure if it&#39;s a security problem or not, but it&#39;s managed code so it&#39;s probably ok. </p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-anonymouscommenter odd alt thread-odd thread-alt depth-1" id="comment-1235536">
				<div id="div-comment-1235536" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">anonymouscommenter</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150723-00/?p=90841#comment-1235536">
			July 24, 2015 at 11:19 pm</a>		</div>

		<p>I believe Eric Lippert would call exceptions that you are &quot;expecting&quot; either exogenous or vexing, depending on whether they&#39;re avoidable.</p>
<p>Exogenous exceptions are raised by factors beyond your control (like IOException), while vexing exceptions are those that you could avoid having to catch by using a different design (like using TryParse instead of Parse).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-anonymouscommenter even thread-even depth-1" id="comment-1235526">
				<div id="div-comment-1235526" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">anonymouscommenter</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150723-00/?p=90841#comment-1235526">
			July 25, 2015 at 3:21 pm</a>		</div>

		<p>Clearly, not enough people here subscribe to the pythonic philosophy.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-anonymouscommenter odd alt thread-odd thread-alt depth-1" id="comment-1235516">
				<div id="div-comment-1235516" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">anonymouscommenter</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150723-00/?p=90841#comment-1235516">
			July 26, 2015 at 2:58 pm</a>		</div>

		<p>@Gabe: Most examples of vexing exceptions are things that can&#39;t throw in the context they are called from, even though some other context they could.</p>
<p>Example: closing a readonly stream can throw IOException (and in Java is declared as such). Exception can only be thrown from a writable stream (under some conditions, writing to a stream is defered to a close() call. This can always be avoided by calling fsync() but that may be overkill).</p>
<p>Example: constructing a URL from a string constant. Declared to throw MalformedURLException (or is it URI &#8212; don&#39;t matter) but cannot throw because it is a constant. This one is particularly egregariuos because almost all the time there&#39;s nothing sane that can be done from the parse error.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-anonymouscommenter even thread-even depth-1" id="comment-1235506">
				<div id="div-comment-1235506" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">anonymouscommenter</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150723-00/?p=90841#comment-1235506">
			July 26, 2015 at 3:57 pm</a>		</div>

		<p>@Anonymous Cow Herd: &nbsp;If you don&#39;t actually care about using a computer to do things.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-anonymouscommenter odd alt thread-odd thread-alt depth-1" id="comment-1235496">
				<div id="div-comment-1235496" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">anonymouscommenter</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150723-00/?p=90841#comment-1235496">
			July 27, 2015 at 2:27 am</a>		</div>

		<p>creaothceann: &quot;But then such an exception is nothing more than a glorified error code.&quot;</p>
<p>You say that as if its a bad thing. &nbsp;Functions returning error codes, rather than throwing exceptions on error, are an anti-pattern. &nbsp;They&#39;re the single greatest reason for The Fundamental Failure-Mode Theorem. An unhandled error-code causes your code to run in a state of wrongness. &nbsp;An unhandled exception causes your code to die immediately.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-anonymouscommenter even thread-even depth-1" id="comment-1235136">
				<div id="div-comment-1235136" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">anonymouscommenter</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150723-00/?p=90841#comment-1235136">
			July 27, 2015 at 1:00 pm</a>		</div>

		<p>Joshua: The examples you gave, of having to handle exceptions that you know the callee can never throw, is not what Eric Lippert had in mind when he described vexing exceptions. I&#39;d argue that it&#39;s a fifth kind of exception that is specific to Java.</p>
<p>In the case of MalformedURLException, it&#39;s vexing if you can&#39;t find out if a URL is malformed by any means other than catching that exception.</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>