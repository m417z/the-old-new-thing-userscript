<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (22)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-986203">
				<div id="div-comment-986203" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">laonianren</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120521-00/?p=7573#comment-986203">
			May 21, 2012 at 7:17 am</a>		</div>

		<p>regedit is in Windows For Workgroups 3.11. &nbsp;Run &quot;regedit /v&quot; to see the &quot;advanced&quot; interface. &nbsp;The structure of file extensions mapping to types and types containing &quot;shellopencommand&quot; subkeys was the same then as it is now.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-986213">
				<div id="div-comment-986213" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Random832</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120521-00/?p=7573#comment-986213">
			May 21, 2012 at 7:34 am</a>		</div>

		<p>There&#39;s no-one called &quot;Niels&quot; in the comments for that other post, so I can&#39;t find the claim that it&#39;s not in a vanilla installation of 3.1.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-986223">
				<div id="div-comment-986223" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Dan Bugglin</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120521-00/?p=7573#comment-986223">
			May 21, 2012 at 7:41 am</a>		</div>

		<p>I can confirm @laonianren&#39;s comment, last time I fooled around with WfW 3.11 regedit.exe was in there. &nbsp;Didn&#39;t know about the /v switch though, I&#39;ll have to try that&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-986233">
				<div id="div-comment-986233" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blogs.msdn.com/johnstonj_4000_inn_2D00_soft.com/ProfileUrlRedirect.ashx' rel='external nofollow' class='url'>johnstonj@inn-soft.com</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120521-00/?p=7573#comment-986233">
			May 21, 2012 at 8:05 am</a>		</div>

		<p>So&#8230;. I don&#39;t remember&#8230; if file associations are for sure stored in WIN.INI, and maybe in the registry for newer programs&#8230; &nbsp;how do file associations work? &nbsp;What takes precedence? &nbsp;I assume Win16 used both WIN.INI and the registry?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-986243">
				<div id="div-comment-986243" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120521-00/?p=7573#comment-986243">
			May 21, 2012 at 8:05 am</a>		</div>

		<p>It was there. Incidentally, Win 3.1&#39;s regedit.exe worked on Win95 (well for some definition of worked).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-986263">
				<div id="div-comment-986263" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blogs.msdn.com/jiifurusu_4000_gmail.com/ProfileUrlRedirect.ashx' rel='external nofollow' class='url'>jiifurusu@gmail.com</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120521-00/?p=7573#comment-986263">
			May 21, 2012 at 9:41 am</a>		</div>

		<p>I suspect the registry was introduced with OLE 2.0/COM, which was only introduced after Windows 3.10, but before Windows 3.11.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-986273">
				<div id="div-comment-986273" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120521-00/?p=7573#comment-986273">
			May 21, 2012 at 10:02 am</a>		</div>

		<p>@Niels: That would explain it. My Win3.1 install has OLE2 (it was a redistributable component). It is also a prerequisite for Win32s, which I have.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-986313">
				<div id="div-comment-986313" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Doug</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120521-00/?p=7573#comment-986313">
			May 21, 2012 at 8:26 pm</a>		</div>

		<p>I kinda wish they hadn&#39;t added &quot;values&quot; to the registry. Keys should just have one value (plus any number of child keys). Just &quot;key&quot;, &quot;key&#39;s value&quot;, and &quot;subkeys&quot;. It&#39;s confusing to keep track of &quot;Key&quot;, &quot;subkeys&quot;, &quot;default value&quot;, &quot;default value&#39;s value&quot;, &quot;named value&quot;, and &quot;named value&#39;s value&quot;.</p>
<p>The idea of &quot;values&quot; seems to have been implementation detail leakage. Keys were more expensive to track than name-value pairs, since keys have ACLs and an arbitrary number of subkeys. The solution of optimizing a special-case (no ACLs, no subkeys) is just fine, but there was no need to make this solution visible at the API layer. The optimization could have simply been done for any key that had no special ACLs and no subkeys.</p>
<p>Oh well, no good crying over spilt milk.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-986323">
				<div id="div-comment-986323" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Anonymous Coward</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120521-00/?p=7573#comment-986323">
			May 21, 2012 at 8:44 pm</a>		</div>

		<p>Doug, I agree. The key + values model introduces a lot of complexity that isn&#39;t really inherent in the fundamental structure.</p>
<p>I also think that the registry keys (and values) should be normal files in the file system. I can see that would be impractical in the FAT days, but there are downsides to having a sub-file-system that cannot be browsed easily by Explorer or most backup utilities, and in the present I think it would be better to make NTFS support an optimization for tiny files and use the registry sub-file-system only when it must for some reason be stored on a FAT volume.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-986333">
				<div id="div-comment-986333" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Gabe</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120521-00/?p=7573#comment-986333">
			May 21, 2012 at 10:15 pm</a>		</div>

		<p>Doug, I&#39;m going to guess that the whole point of keys having multiple values isn&#39;t a filesystem optimization, but rather a runtime optimization. For every key, you have to make a minimum of 3 system calls: call CreateKey (which creates a handle, performs an SD check, etc.), QueryValueKey, and then CloseHandle.</p>
<p>The way it is now you just have to perform a single system call for each value, skipping any need to create objects, create handles, or perform security checks. It probably doesn&#39;t even have to allocate any memory or hit the disk. This may seem trivial, but recall that the registry is an integral part of system start-up, and back in 1993 the average system was a 25MHz 386 with 8MB of RAM.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-986343">
				<div id="div-comment-986343" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">hagenp</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120521-00/?p=7573#comment-986343">
			May 22, 2012 at 2:10 am</a>		</div>

		<p>@niels: That also explains why I&#39;ve seen it first used by MS Office 4.3</p>
<p>[Ca. 1993, we tried to clone PC installations for faster install, and found we had to update &nbsp;not only INF files but also this new &quot;registry&quot; thing. ;-) ]</p>
<p>Funny detail: that old regedit would happily export a 120kB text file, but after some &#39;interesting&#39; tests we found it would only import 64k at a time.</p>
<p>So we had to split the reg files into two before importing on a new machine.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-xpclientgmail-com odd alt thread-odd thread-alt depth-1" id="comment-986353">
				<div id="div-comment-986353" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/xpclient' rel='external nofollow' class='url'>xpclient</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120521-00/?p=7573#comment-986353">
			May 22, 2012 at 4:44 am</a>		</div>

		<p>I like the keys+values model but just wish I could set permissions on values too, not just on keys. Because there can be many values in a key and I may want only one value to not be modified.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-986363">
				<div id="div-comment-986363" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Englebart</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120521-00/?p=7573#comment-986363">
			May 22, 2012 at 5:19 am</a>		</div>

		<p>Don&#39;t forget Windows NT. &nbsp;I am 99% sure that NT 3.1 had a similar registry system to what you see in Windows 7 today.</p>
<p><a rel="nofollow" target="_new" href="http://windows.microsoft.com/en-us/windows/history" rel="nofollow">windows.microsoft.com/&#8230;/history</a></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-986383">
				<div id="div-comment-986383" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Raphael</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120521-00/?p=7573#comment-986383">
			May 22, 2012 at 5:59 am</a>		</div>

		<p>@xpclient: We&#39;ve talked about this: <a rel="nofollow" target="_new" href="http://blogs.msdn.com/b/oldnewthing/archive/2009/01/23/9371831.aspx" rel="nofollow">blogs.msdn.com/&#8230;/9371831.aspx</a></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-986573">
				<div id="div-comment-986573" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Horst Kiehl</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120521-00/?p=7573#comment-986573">
			May 22, 2012 at 10:48 am</a>		</div>

		<p>Random832: You might have found it already: Niels&#39; comment is number 10040370 in Suggestion Box 4: <a rel="nofollow" target="_new" href="http://blogs.msdn.com/b/oldnewthing/archive/2010/07/20/10040074.aspx#10040370" rel="nofollow">blogs.msdn.com/&#8230;/10040074.aspx</a></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-fredericmagnyf odd alt thread-odd thread-alt depth-1" id="comment-986373">
				<div id="div-comment-986373" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Medinoc' rel='external nofollow' class='url'>Medinoc</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120521-00/?p=7573#comment-986373">
			May 22, 2012 at 5:23 am</a>		</div>

		<p>The &quot;registration database&quot; name is still plaguing us French users, because we can never decide on the right name:</p>
<p>* &quot;Le Registre&quot; is probably the most accurate translation of &quot;The Registry&quot; (and the official one since circa Win98se), but it&#39;s also the French word for &quot;the register&quot;, which sounds ambiguous to developers.</p>
<p>* &quot;La Base de Registre(s)&quot; is unambiguous, but it&#39;s the old name.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-xpclientgmail-com even thread-even depth-1" id="comment-986613">
				<div id="div-comment-986613" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/xpclient' rel='external nofollow' class='url'>xpclient</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120521-00/?p=7573#comment-986613">
			May 22, 2012 at 12:24 pm</a>		</div>

		<p>@Raphael, I know that :) but that&#39;s the technical explanation. It will give more flexibility if common sense is given some thought. One key can hold multiple values and it is not always desirable to set permissions on all of them.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-986673">
				<div id="div-comment-986673" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Doug</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120521-00/?p=7573#comment-986673">
			May 22, 2012 at 3:25 pm</a>		</div>

		<p>If you want to fix the API, then fix the API. Add a &quot;ReadKeyValue&quot; API that gets the subkey value without the extra 2 API calls. That&#39;s easier than adding a whole new multi-value scheme.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-986683">
				<div id="div-comment-986683" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Killer{R}</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120521-00/?p=7573#comment-986683">
			May 22, 2012 at 4:02 pm</a>		</div>

		<p>2Doug RegQueryValue was such an API. But problem here is that when you access key &#8211; OS need to perform security check against DACL of key (and may also generate audit events etc) ad such check is <em>always</em> much slower than one bitwise AND that peformed by value-access operations when they using already opened handle and no way to make it same fast.</p>
<p>Another performance issue is a parsing. Parsing string (gived key path) is also <em>always</em> slower than do not parsing it (and choosing from 10 value strings always faster than from 10k path elements).</p>
<p>And if you think that nowadays systems much faster and we can forget about such performance issues &#8211; try to do whole registry search in regedit.</p>
<p>So is same reason why we have to do CreateFile()/ReadFile()/CloseHandle() instead of single ReadFileByNameAndOffset() or even ReadFileByteByNameAndOffset()</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-986753">
				<div id="div-comment-986753" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Anonymous Coward</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120521-00/?p=7573#comment-986753">
			May 23, 2012 at 1:21 am</a>		</div>

		<p>The string parsing bit can be alleviated by allowing the paths to be relative to open keys (pseudo code alert, using dots for indent):</p>
<p>]with Registry.openKey(pathToApplicationSettings)</p>
<p>]. . with .openKey(&quot;window&quot;)</p>
<p>]. . . . MainWindow.Move .readKey(&quot;left&quot;, 0), .readKey(&quot;top&quot;, 0)</p>
<p>]. . end with</p>
<p>]. . with .openKey(&quot;display&quot;)</p>
<p>]. . . . Editor.Font.Name = .readKey(&quot;font&quot;, &quot;Tahoma&quot;)</p>
<p>]. . . . Editor.TabIndent = .readKey(&quot;indent&quot;, 4)</p>
<p>]. . end with</p>
<p>]end with</p>
<p>(Note that adding complicated branches in case a key doesn&#39;t exist or permission isn&#39;t granted is cumbersome, in most cases covering only a remote contigency, and potentially bug prone, so most applications simply use a default value. I think this is a sensible default, hence no need for error checking in the above code.)</p>
<p>The performance issues of an ACL test for former &lsquo;values&rsquo; could be avoided by making the ACL optional. If you have a parent key open and the key you request has no ACL, no test. Avoiding hitting the disk on every key read/write is also an optimisation that shouldn&#39;t affect the API.</p>
<div class="post">[<i>Um, the registry already supports relative keys. And there is no such thing as an object with an optional ACL. You can give a key an ACL of &quot;everybody has free and total access&quot; but that&#39;s still an ACL. (And you still have to check if an ACL is there.) -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-986803">
				<div id="div-comment-986803" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ben Voigt</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120521-00/?p=7573#comment-986803">
			May 23, 2012 at 6:37 am</a>		</div>

		<p>Raymond, I&#39;m pretty sure what AC meant by &quot;has no ACL&quot; was an ACL with an empty set of rules but the &quot;inherit from parent&quot; bit set. &nbsp;In contrast to &quot;NULL ACL&quot;, which gives unrestricted access to everyone, or &quot;empty ACL&quot;, which gives permission to no-one.</p>
<div class="post">[<i>But that doesn&#39;t save you an access check. You&#39;re still checking against the ACL of the parent. (Remember, directory traversal bypass lets you access a child object directly despite not having access on the parent.) -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-987783">
				<div id="div-comment-987783" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">yksoft1</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120521-00/?p=7573#comment-987783">
			May 27, 2012 at 11:00 am</a>		</div>

		<p>Internet Explorer 4.x and 5.x for Windows 3.1 added another registry to Windows 3.1. Any words about that?</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>