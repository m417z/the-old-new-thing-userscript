<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (20)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-910123">
				<div id="div-comment-910123" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Henke37</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110502-00/?p=10783#comment-910123">
			May 2, 2011 at 7:10 am</a>		</div>

		<p>Was this before or after it was possible to load an executable as a dll?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-910133">
				<div id="div-comment-910133" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Dan Bugglin</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110502-00/?p=10783#comment-910133">
			May 2, 2011 at 7:24 am</a>		</div>

		<p>You could always do that, but the executable has to expect to be loaded as a DLL, and have the proper exports etc.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-910143">
				<div id="div-comment-910143" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Skyborne</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110502-00/?p=10783#comment-910143">
			May 2, 2011 at 7:24 am</a>		</div>

		<p>I note that the suggestion was from &quot;smug linux user&quot;, who lives in a world where you call exec() and it replaces your process <em>without exiting</em>, which avoids many problems. &nbsp;AFAICT, the only one left is that if the real notepad is missing, the stub has to exit itself with some sensible error code, which may not exist.</p>
<p>Providing an exec-like call on Windows would also be a horrible &quot;solution&quot; because that breaks the semantics of process handles as a process&#39;s identity.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-910163">
				<div id="div-comment-910163" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">dave</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110502-00/?p=10783#comment-910163">
			May 2, 2011 at 7:49 am</a>		</div>

		<blockquote><p>
  Providing an exec-like call on Windows would also be a horrible &quot;solution&quot; because that</p>
<p>  breaks the semantics of process handles as a process&#39;s identity
</p></blockquote>
<p>I don&#39;t see how. &nbsp;If the process does a &#39;exec-like&#39; call, then it&#39;s still the same process and therefore the existing process handle still refers to the same process. &nbsp;If it were a different process, then we could scarcely refer to the hypothetical operation as an &#39;exec-like&#39; call.</p>
<p>I think you&#39;re confusing &#39;process&#39; and &#39;program&#39;. &nbsp;(The same confusion that thinks &#39;notepad.exe&#39; can be considered as the name of a process).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-brunopitrus even thread-even depth-1" id="comment-910183">
				<div id="div-comment-910183" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/kinokijuf' rel='external nofollow' class='url'>kinokijuf</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110502-00/?p=10783#comment-910183">
			May 2, 2011 at 8:08 am</a>		</div>

		<p>@Skyborne: There&#39;s no such thing as nonexistent notepad.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-910193">
				<div id="div-comment-910193" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Alex Grigoriev</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110502-00/?p=10783#comment-910193">
			May 2, 2011 at 9:43 am</a>		</div>

		<p>Compared to the hoops that Microsoft had to jump through to make legacy 16-bit InstallShield executables to work on 64 Windows, this Notepad issue is a piece of cake. I wonder if there is a good writeup for that.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-910203">
				<div id="div-comment-910203" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Alex Grigoriev</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110502-00/?p=10783#comment-910203">
			May 2, 2011 at 9:46 am</a>		</div>

		<p>@The mazzter:</p>
<p>No, an EXE can&#39;t be loaded as an executable DLL. It can be loaded to access its resources, but its relocations will be ignored, and imports not resolved. In other words, it&#39;s a cold piece of data.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-910213">
				<div id="div-comment-910213" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110502-00/?p=10783#comment-910213">
			May 2, 2011 at 10:15 am</a>		</div>

		<p>In this particular case, hardlink!</p>
<p>But yeah, the general case is messy.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-910233">
				<div id="div-comment-910233" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Anonymous Coward</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110502-00/?p=10783#comment-910233">
			May 2, 2011 at 11:15 am</a>		</div>

		<p>I ran into exactly this problem once. I ended up giving the stub a weird base address and loading the executable as a DLL, and then it turned out that one of the DLLs it needed was located somewhere else under a different name, so I had to do my own imports too. But I got it to work all the same.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-910253">
				<div id="div-comment-910253" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Cesar</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110502-00/?p=10783#comment-910253">
			May 2, 2011 at 12:52 pm</a>		</div>

		<p>I just did the same thing: a stub program which launches another program. In my case, the very small stub program (it does not even link to the C library) runs from the Startup folder, checks if the &quot;run automatically on startup&quot; option for my program is set on the registry, and if it is set does a CreateProcessW() for the main program (passing it the STARTUPINFOW it received). It does not wait for the main program to exit.</p>
<p>I did it that way to be polite and use the minimum possible amount of resources if the &quot;run automatically on startup&quot; option is not set. I do not think the code in Explorer which runs the Startup menu entries waits for the launched program to exit or has any dependency on its return code (the main program is a system tray icon, so there is no main window). And yes, if this were Unix, I would have used exec() (I am a Linux user too &#8211; perhaps the line of thinking which leads to these stub executables comes from being used to having exec() available?).</p>
<p>I am now wondering if I should modify my stub to wait for the main process (ending up using a little more resources if the &quot;run automatically on startup&quot; option is set).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-910263">
				<div id="div-comment-910263" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Stuart</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110502-00/?p=10783#comment-910263">
			May 2, 2011 at 1:43 pm</a>		</div>

		<p>I actually had a problem with this with Visual Studio. Our company were using Visual Studio .NET 2003 and I&#39;d written a tool which, for various reasons (actually, to hack around other limitations of what I was able to figure out how to do programmatically with the SourceSafe of the day) would open up visual studio to a particular solution with instructions to the user to perform a particular operation manually, then exit.</p>
<p>My wrapper script would launch (with shell exec) the .sln file, then wait for the process to exit and then continue.</p>
<p>That worked fine until VS2005 came out and .sln became associated with &quot;Visual Studio Version Selector&quot;, a stub exe that looks in the sln file for the appropriate visual studio version and then launches it &#8211; and immediately exits. So now my program would attempt to continue immediately without giving the user time to do what they&#39;d been asked to do&#8230;</p>
<p>I was very glad that I was able to replace that hacky script with a pure .NET executable when Team Foundation Server came out!</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-910273">
				<div id="div-comment-910273" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Copi</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110502-00/?p=10783#comment-910273">
			May 2, 2011 at 1:49 pm</a>		</div>

		<p>copy notepad.exe from 32-bit windows and use it. It&#39;s only 70kb.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-910303">
				<div id="div-comment-910303" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Neil</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110502-00/?p=10783#comment-910303">
			May 3, 2011 at 5:32 am</a>		</div>

		<p>@Cesar: Or you could just make the &quot;automatically run on startup&quot; option in your program add or remove the link in the Startup folder. (Or forget about links and just write the HKCU&#8230;Run registry key.)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-910443">
				<div id="div-comment-910443" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Cesar</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110502-00/?p=10783#comment-910443">
			May 3, 2011 at 7:47 am</a>		</div>

		<p>@Neil: the problem is that it runs on startup by default, and the installer for the obvious reasons can only write to either the All Users or the HKLM key.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-mike-dimmick even thread-even depth-1" id="comment-910283">
				<div id="div-comment-910283" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Mike+Dimmick' rel='external nofollow' class='url'>Mike Dimmick</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110502-00/?p=10783#comment-910283">
			May 3, 2011 at 3:56 am</a>		</div>

		<p>@Alex Grigoriev: It&#39;s been a while, but as far as I recall it *is* possible to load an EXE with LoadLibrary{Ex}, if the relocations remain in the EXE. The default setting for the linker is to strip the relocations when building an .EXE though.</p>
<p>Windows will not load any PE file &#8211; EXE or DLL &#8211; with relocations stripped if it can&#39;t load at its default address. The LOAD_LIBRARY_AS_DATAFILE flag is there to tell Windows that it&#39;s OK to ignore the absence of the relocation information, because you&#39;re only going to look at the image.</p>
<p>It&#39;s possible that if the EXE has an atypical base address, it could still be loaded even if the relocations are stripped &#8211; if it doesn&#39;t clash with the initial image.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-911213">
				<div id="div-comment-911213" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Crescens2k</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110502-00/?p=10783#comment-911213">
			May 4, 2011 at 8:34 pm</a>		</div>

		<p>@Copi:</p>
<p>Then you have to deal with the hidden compatability constraints of just taking notepad from Windows. That may work for earlier versions, but if you forget to take the localised mui file from newer versions then it will fail. One compatability restraint being replaced by another. o/</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-911273">
				<div id="div-comment-911273" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Cesar</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110502-00/?p=10783#comment-911273">
			May 5, 2011 at 6:03 am</a>		</div>

		<p>After thinking for a while, we decided to change the program to add and remove itself from the HKCU&#8230;Run key, launch it after setup (if requested by the user) with a parameter to add itself to the HKCU&#8230;Run key (for the current user only), and removed the stub.</p>
<p>Now the &quot;run automatically on startup&quot; flag is the presence of the entry on the HKCU&#8230;Run key, the whole process became much simpler and cleaner, and it still runs on startup by default (for the current user only, and only if the user did not uncheck the checkbox in the last page of the installer). And now if &quot;run automatically on startup&quot; is unset, it uses even less resources than before.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-yuhong-bao odd alt thread-odd thread-alt depth-1" id="comment-911493">
				<div id="div-comment-911493" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Yuhong+Bao' rel='external nofollow' class='url'>Yuhong Bao</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110502-00/?p=10783#comment-911493">
			May 5, 2011 at 10:14 pm</a>		</div>

		<p>BTW, forcing a program to launch using a debugger via IFEO would have the same problems, as it works in a similar way.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-911643">
				<div id="div-comment-911643" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Dogfood</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110502-00/?p=10783#comment-911643">
			May 6, 2011 at 9:26 am</a>		</div>

		<p>Would a lnk file suffice? On this blog I&#39;ve repeatedly been told lnk files are better than real (soft/hard) links. I think the reason was that lnk files can be emailed.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-911783">
				<div id="div-comment-911783" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blogs.msdn.com/James-Sutherland/ProfileUrlRedirect.ashx' rel='external nofollow' class='url'>james@deadnode.org</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110502-00/?p=10783#comment-911783">
			May 8, 2011 at 8:53 am</a>		</div>

		<p>Clearly, the neat answer would be for Notepad to be a DLL, with notepad.exe being a stub which just loads that and calls NotepadMain from the DLL. Of course, as a performance enhancement, the next version will be static-linked to that library instead of using it as a DLL&#8230;</p>
<p>(That brought to mind a discussion a few years ago, which started with &quot;this recursive function is putting too much on the stack, I&#39;m changing it to allocate this structure on the heap instead&quot;, which made someone ask about performance impact, bringing the reply &quot;instead of the heap, we can use alloca, that&#39;s faster&quot;&#8230;)</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>