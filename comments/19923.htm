<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (48)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-690463">
				<div id="div-comment-690463" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Karellen</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20081208-00/?p=19923#comment-690463">
			December 8, 2008 at 10:07 am</a>		</div>

		<p>When I encounter such a failure of logic, I find it useful to quote Charles Babbage[0] and reply:</p>
<p>&quot;I am not able rightly to apprehend the kind of confusion of ideas that could provoke such a question.&quot;</p>
<p>[0] <a rel="nofollow" target="_new" href="http://en.wikiquote.org/wiki/Charles_Babbage" rel="nofollow">http://en.wikiquote.org/wiki/Charles_Babbage</a></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-690473">
				<div id="div-comment-690473" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Adam</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20081208-00/?p=19923#comment-690473">
			December 8, 2008 at 10:08 am</a>		</div>

		<p>&#8220;For example, C:PROGRA~1 and C:Programs and Settings are two possible names for the same directory thanks to short names.&#8221;</p>
<p>I&#8217;m assuming that&#8217;s a typo? &nbsp;Or did Vista decide to merge &#8220;Documents and Settings&#8221; and &#8220;Program Files&#8221; (and &#8220;Program Files (x86)&#8221; for 64-bit)?</p>
<div class="post">[<i>I meant Program Files, but the statement is still correct as written: C:PROGRA~1 and C:Programs and Settings are two possible names for the same directory. Perhaps I shouldn&#8217;t have tried to use a real-life example. &#8220;C:AWESOM~1 and C:Awesome Videos&#8221; for example. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-690493">
				<div id="div-comment-690493" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Gabe</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20081208-00/?p=19923#comment-690493">
			December 8, 2008 at 10:22 am</a>		</div>

		<p>You can use POSIX (or just FILE_FLAG_POSIX_SEMANTICS) to effectively create two files with the same name (like FOO.BAR and foo.bar). Then only one of them will be accessible to regular Win32 programs.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-690503">
				<div id="div-comment-690503" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">SRS</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20081208-00/?p=19923#comment-690503">
			December 8, 2008 at 10:30 am</a>		</div>

		<p>Disclaimer: I am not James.</p>
<p>I think what James might mean is:</p>
<p>1. Create file &#8220;foo.barbaz&#8221;. It gets assigned the short name &#8220;foo.bar&#8221; by the system. </p>
<p>2. Write a special implementation of GetLongPathName() (say MyGetLongPathName() that uses FindFirstFile() (A or W &#8211; I don&#8217;t know).</p>
<p>3. Call MyGetLongPathName(&#8220;foo.bar&#8221;).</p>
<p>4. Should the result be &#8220;foo.bar&#8221; or &#8220;foo.barbaz&#8221;?</p>
<p>I think James wants the result to be &#8220;foo.bar&#8221;, not &#8220;foo.barbaz&#8221;, as &#8220;foo.bar&#8221; is an exact match for the input.</p>
<div class="post">[<i>That can&#8217;t be the original question, because if FindFirstFile behaved that way, you couldn&#8217;t use it to write MyGetLongPathName: whatever you passed in would come right back out; you&#8217;d never get the long version. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-690513">
				<div id="div-comment-690513" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Mark (The other Mark)</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20081208-00/?p=19923#comment-690513">
			December 8, 2008 at 10:39 am</a>		</div>

		<p>He&#8217;s asking if a directory contains Foo.bar and Foo.barbaz, if FindFirstFile(&quot;Foo.Bar&quot;) will always return information about Foo.bar.</p>
<p>He&#8217;s probably basing this on &quot;The FindFirstFile function opens a search handle and returns information about the first file that the file system finds with a name that matches the specified pattern. This may or may not be the first file or directory that appears in a directory-listing application (such as the dir command) when given the same file name string pattern.&quot;</p>
<p>If you consider (&quot;Foo.Bar&quot;) as an implied (&quot;Foo.Bar*&quot;), his question makes sense. Kindof.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-690533">
				<div id="div-comment-690533" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">JCR</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20081208-00/?p=19923#comment-690533">
			December 8, 2008 at 10:44 am</a>		</div>

		<p>Raymond:</p>
<p>In the first scenario, doesn&#8217;t foo.barbaz get assigned a short name of FOO~1.BAR. &nbsp;At least that is the result on Win XP.</p>
<div class="post">[<i>Try a non-Microsoft filesystem. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-690543">
				<div id="div-comment-690543" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Michael</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20081208-00/?p=19923#comment-690543">
			December 8, 2008 at 11:17 am</a>		</div>

		<p>In Unix there are no short names, so foo.bar and foo.barbaz can both exist without the ~1 short name convention. &nbsp;Now, what happens if a Windows client is connected to a Samba share from a Unix machine, and the remote share has foo.bar and foo.barbaz? &nbsp;What will FindFirstFile(&quot;foo.bar&quot;) do in this case? &nbsp;Does Windows assign short names to these files for its own use when the share is accessed?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-690553">
				<div id="div-comment-690553" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Steve Thresher</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20081208-00/?p=19923#comment-690553">
			December 8, 2008 at 11:33 am</a>		</div>

		<p>Slightly off topic but can anyone tell me why you cannot create a file with a name that starts with one of the reserved filenames? eg. c:tempcom2.txt</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-690563">
				<div id="div-comment-690563" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.pretentiousname.com' rel='external nofollow' class='url'>Leo Davidson</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20081208-00/?p=19923#comment-690563">
			December 8, 2008 at 11:39 am</a>		</div>

		<p>Michael: I think that&#8217;s up to Samba rather than Windows. I&#8217;m not sure what Samba actually does in this case but Samba presents itself to Windows as an SMB network share with Win32 semantics and Windows won&#8217;t do anything special for it.</p>
<p>Strange things can and do happen as a result of Samba having to pretend that the Unix filesystem it is exposing is really a Win32 filesystem. It&#8217;s unavoidable.</p>
<p>I encountered a performance problem with one Samba share where creating files took several seconds per file. It turned out that (that version and configuration of) Samba was re-reading the directory for each file creation request, checking any file names conflicted, ignoring case. Creating a file is usually logarithmic time (with respect to the number of files in the directory) but this made it linear time. You can imagine the performance and scaling problems that resulted.</p>
<p>Not really the fault of Samba or Windows (and I believe Samba has options to make the problem less painful); just one of those things. Stuff that we normally take for granted can behave very differently when something tries to emulate another quite different thing.</p>
<p>(NTFS can have case-sensitive volumes and/or volumes with short names switched off&#8230; It&#8217;ll confuse a lot of Win32 software, though.)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-690573">
				<div id="div-comment-690573" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.pretentiousname.com' rel='external nofollow' class='url'>Leo Davidson</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20081208-00/?p=19923#comment-690573">
			December 8, 2008 at 11:41 am</a>		</div>

		<p>Steve Thresher: Raymond talked about that in a previous post. Here you go:</p>
<p><a rel="nofollow" target="_new" href="http://blogs.msdn.com/oldnewthing/archive/2003/10/22/55388.aspx" rel="nofollow">http://blogs.msdn.com/oldnewthing/archive/2003/10/22/55388.aspx</a></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-690583">
				<div id="div-comment-690583" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Alexandre Grigoriev</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20081208-00/?p=19923#comment-690583">
			December 8, 2008 at 12:14 pm</a>		</div>

		<p>Gabe &amp; Leo Davidson,</p>
<p>Win32 is ignoring FILE_FLAG_POSIX_SEMANTICS. It doesn&#8217;t matter if you pass it to CreateFile.</p>
<p>Steve Thresher:</p>
<p>try:</p>
<p>copy a.txt \?c:tempcom2.txt</p>
<p>These special legacy mappings are ignored if you use CreateFileW (as cmd.exe does) and the name is prepended with \?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-690603">
				<div id="div-comment-690603" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Yuhong Bao</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20081208-00/?p=19923#comment-690603">
			December 8, 2008 at 12:23 pm</a>		</div>

		<p>&quot;Win32 is ignoring FILE_FLAG_POSIX_SEMANTICS. It doesn&#8217;t matter if you pass it to CreateFile.&quot;</p>
<p>Have you heard of the ObCaseInsensitive registry key?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-690613">
				<div id="div-comment-690613" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Gabe</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20081208-00/?p=19923#comment-690613">
			December 8, 2008 at 12:32 pm</a>		</div>

		<p>Alexandre Grigoriev: I&#8217;m pretty sure that Win32 doesn&#8217;t do anything to strip the POSIX flag, otherwise why would it be in the documentation? The kernel itself will ignore any case-sensitivity if HKEY_LOCAL_MACHINESYSTEMCurrentControlSetControlSession Managerkernelobcaseinsensitive set to 1, however.</p>
<p>You probably have that set, as it is now the default &nbsp;probably for security reasons. Allowing case-sensitivity allows malware to create files that the user can&#8217;t access or delete, so it is now opt-in instead of opt-out.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-690633">
				<div id="div-comment-690633" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Neil</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20081208-00/?p=19923#comment-690633">
			December 8, 2008 at 12:46 pm</a>		</div>

		<p>On Netware 4 the default short name was simply 8.3 truncation, so &quot;foo.barbaz&quot; would have a short name of &quot;foo.bar&quot;, although of course that isn&#8217;t relevant to the FindFirstFile question. I did see a problem related to this though, which is less likely on systems with better short path name generation:</p>
<ol>
<li>Create a file foo~1.bar (or whatever the default short filename is for foo.barbaz on your target filesystem)</li>
<li>
<p>Create a file foo.barbaz (which now gets a short filename of foo~2.bar)</p>
</li>
<li>
<p>Try to copy both files to a new folder.</p>
</li>
</ol>
<p>Depending on the application, it could copy foo.barbaz first, giving it a short filename of foo~1.bar, then wonder what to do with foo~1.bar &#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-690653">
				<div id="div-comment-690653" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Kristofer</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20081208-00/?p=19923#comment-690653">
			December 8, 2008 at 1:38 pm</a>		</div>

		<p>I think the original asker may have assumed it would be making a substring search rather than an exact search. It&#8217;s not necessarily the case that they thought two files could have the same name, and they may not have even been thinking about short names at all.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-690693">
				<div id="div-comment-690693" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Yuhong Bao</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20081208-00/?p=19923#comment-690693">
			December 8, 2008 at 3:06 pm</a>		</div>

		<p>&quot;On Netware 4 the default short name was simply 8.3 truncation.&quot;</p>
<p>This, BTW, came from HPFS. You see, LONG.NAM was originally called OS2.NAM. When Novell created the client for 32-bit Windows, they decide to just use the OS/2 namespace for their long file names.</p>
<p>BTW, I wonder if this was related to the fact that before the MS-IBM JDA broke up in 1991, Windows NT was called NT OS/2 and was supposed to be based on OS/2 instead of Windows?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-690713">
				<div id="div-comment-690713" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Roger</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20081208-00/?p=19923#comment-690713">
			December 8, 2008 at 7:51 pm</a>		</div>

		<p>I have also implemented a SMB server on Unix just like Samba. &nbsp;The directory routines are by far the most complex part. &nbsp;I ended up rewriting the code four times!</p>
<p>The single most difficult thing is proving a file does not exist since any of the files could map to another filename in the case insensitive or shorter name forms. &nbsp;And short names can change in the presence of other names.</p>
<p>Since the server runs in user space and there is no desire to add a database to each directory including alternate names, you pretty much have to brute force check things. &nbsp;Generally servers implementing Apple file sharing did end up with additional files on the server to track what was going on and be consistent.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-690643">
				<div id="div-comment-690643" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua Muskovitz</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20081208-00/?p=19923#comment-690643">
			December 8, 2008 at 12:54 pm</a>		</div>

		<p>This was also covered (somewhat) in <a rel="nofollow" target="_new" href="http://blogs.msdn.com/oldnewthing/archive/2005/07/20/440918.aspx" rel="nofollow">http://blogs.msdn.com/oldnewthing/archive/2005/07/20/440918.aspx</a>.</p>
<p>We recently encountered a bug in our app (ok, a bug in all of this backward compatibility hell, but we were caught in the line of fire) where a file with a long name of &quot;20080331-BOST.Csv&quot; was found with the wildcard &quot;2007*.Csv&quot;. Needless to say, this caused a lot of head scratching until it occurred to us to dir /x it:</p>
<p>dir /x</p>
<p>10/02/2008 &nbsp;12:09 PM &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;56 200709~1.CSV 20080331-BOST.Csv</p>
<p>The really freaky part of it was that this evil file was shipped to us in a single zip, along with many other files which behaved properly. But the problem only occurred if you unzipped the *entire* archive. If you just grabbed the &quot;bad&quot; files, they worked fine.</p>
<p>Some quick reverse entineering determined that the algorithm Windows uses to generate the non-colliding short filename starts by using the first six characters of the long name + tilde + a digit, but when that namespace runs out (after only ~4? huh?), it moves on to an even more esoteric algorithm, namely the first two characters + a four-digit hex hash of the long filename + tilde + a digit. (We never determined what happens when *that* namespace fills up.)</p>
<p>In our case, it was because the earlier unzipped files filled the namespace, forcing the hex hash method, and the hash happened to be 0x0709 for this particular filename.</p>
<p>We opted not to attempt to &quot;fix&quot; this problem.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-690733">
				<div id="div-comment-690733" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Duke of New York</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20081208-00/?p=19923#comment-690733">
			December 8, 2008 at 9:43 pm</a>		</div>

		<p>It&#8217;s quite amazing how many people don&#8217;t &quot;get&quot; the concept of legacy compatibility.</p>
<p>(CP/M? What&#8217;s that?)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-690743">
				<div id="div-comment-690743" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Terry Denham</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20081208-00/?p=19923#comment-690743">
			December 8, 2008 at 11:51 pm</a>		</div>

		<p>Unless the person was trying to describe &quot;foo.bar&quot; and &quot;foo.barbaz.&quot; (second has no extension.</p>
<p>copy con foo.bar</p>
<p>^z</p>
<p>copy con foo.barbaz.</p>
<p>^z</p>
<p>c:dir /b foo.bar*</p>
<p>foo.bar</p>
<p>foo.barbaz</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-690703">
				<div id="div-comment-690703" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">cbloom</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20081208-00/?p=19923#comment-690703">
			December 8, 2008 at 3:56 pm</a>		</div>

		<p>If you get into Unicode there are definitely ways that two files can have &quot;the same&quot; name.</p>
<p>1. If you&#8217;re using the &quot;A&quot; file routines you can have multiple unicode file names which map to the same &quot;A&quot; code page string.</p>
<p>2. You can even have file names which display exactly the same *always*, by making one name with combined-accents and one with decomposed-accent characters. &nbsp;For all purposes these files are impossible to differentiate, except that they both exist on disk. &nbsp;And in fact depending on which program you use to open them, you may get one or the other.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-larryosterman odd alt thread-odd thread-alt depth-1" id="comment-690753">
				<div id="div-comment-690753" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Larry+Osterman+%5BMSFT%5D' rel='external nofollow' class='url'>Larry Osterman [MSFT]</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20081208-00/?p=19923#comment-690753">
			December 9, 2008 at 1:05 am</a>		</div>

		<p>&quot;BTW, I wonder if this was related to the fact that before the MS-IBM JDA broke up in 1991, Windows NT was called NT OS/2 and was supposed to be based on OS/2 instead of Windows?&quot;</p>
<p>Yuhong, we&#8217;ve been through this before. &nbsp;Windows NT was never &quot;based&quot; on any operating system. &nbsp;It was (and is) a totally standalone operating system. &nbsp;It supported multiple &quot;personalities&quot; (subsystems) that allowed emulation of other operating system semantics on top of NT &#8211; operating systems like Posix and OS/2. &nbsp;After the IBM/MSFT breakup, the OS/2 emulation layer was scrapped (or rather was no longer the default) and replaced with the Win32 based emulation layer that is still there today.</p>
<p>Read Mark Russinovitch&#8217;s &quot;Windows NT Internals&quot; and G. Paschal Zachary&#8217;s &quot;Showstopper!&quot; for more details.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-690763">
				<div id="div-comment-690763" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">SuperKoko</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20081208-00/?p=19923#comment-690763">
			December 9, 2008 at 2:44 am</a>		</div>

		<p>I&#8217;ve seen two files with names differeing on the case only, on a CD-ROM. Windows seem to handle these files pretty well. If an exact match is passed to CreateFile, it&#8217;s properly open. I don&#8217;t know if it works for FindFirstFile.</p>
<p>If there&#8217;re Foo.bar and FoO.bar</p>
<p>Does FindFirstFile(&quot;FoO.bar&quot;) first returns FoO.bar or Foo.bar ? Maybe it cannot return more than one&#8230; But which one?</p>
<p>I would expect it to find files in no particular order.</p>
<p>Maybe these CD-ROMs aren&#8217;t conforming to standards.</p>
<p>On an NTFS system, there&#8217;re three namespaces (POSIX, Win32 and MS-DOS). I guess it means that, for FindFirstFile/CreateFile &amp; any Win32 function, two names will always differ by more than case.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-690723">
				<div id="div-comment-690723" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">someone else</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20081208-00/?p=19923#comment-690723">
			December 8, 2008 at 9:20 pm</a>		</div>

		<p>What&#8217;s this short file name thingy you talk about there?</p>
<p>Well, seriously, I usually disable 8.3 name creation ASAP and indeed tend to kick programs which don&#8217;t like that, unless I *really* need them (in which case fsutil comes in handy).</p>
<p>It&#8217;s quite amazing how many programmers haven&#8217;t accepted the concept of long file names after over 15 years. Yes, Microsoft, I am looking at you.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-690773">
				<div id="div-comment-690773" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Thomas</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20081208-00/?p=19923#comment-690773">
			December 9, 2008 at 7:17 am</a>		</div>

		<p>You can use a diskeditor to directly edit the directory entries on disk. So you can even have three files with the same name.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-690803">
				<div id="div-comment-690803" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Liam</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20081208-00/?p=19923#comment-690803">
			December 9, 2008 at 8:54 am</a>		</div>

		<p>Yes all files are in G:17_may_desktopdesktop_codefoobar not G:foobar I was just trying to make the entry more confined.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-690813">
				<div id="div-comment-690813" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">SuperKoko</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20081208-00/?p=19923#comment-690813">
			December 9, 2008 at 9:03 am</a>		</div>

		<p>&quot;Now the cause may well have been a problem with Ubuntu&#8217;s hacked implementation of the proprietary NTFS file system&quot;</p>
<p>dd is a dumb byte-to-byte copy, it doesn&#8217;t do such thing. If you&#8217;ve used NTFS-3G to recreate your partition, and used cp to copy data on it, then, the file system driver is responsible.</p>
<p>I guess this is a namespace issue. NTFS-3G uses the case-sensitive POSIX namespace which may include special characters (: ? etc.). Ideally, the file should be given three names, in the three (POSIX, Win32, MS-DOS) namespaces. AFAIK NTFS-3G writes in the POSIX namespace only.</p>
<p>I guess these files should be removed by a program using the POSIX NT API or the native NT API.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-690823">
				<div id="div-comment-690823" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">someone else</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20081208-00/?p=19923#comment-690823">
			December 9, 2008 at 9:32 am</a>		</div>

		<p>“It&#8217;s quite amazing how many people don&#8217;t &#8220;get&#8221; the concept of legacy compatibility.”</p>
<p>Why should 64-bit Windows try to be compatible with a 16-bit OS?</p>
<div class="post">[<i>Because it&#8217;s s compatible with a 32-bit OS which is compatible with a 16-bit OS. It&#8217;s like asking, &#8220;<a href="http://www.straightdope.com/columns/read/2538/was-standard-railroad-gauge-48-determined-by-roman-chariot-ruts" rel="nofollow">Why should modern railroads try to be compatible with Roman chariots</a>?&#8221; (I don&#8217;t  care whether it&#8217;s actually true; I&#8217;m just recalling the principle.) -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-690873">
				<div id="div-comment-690873" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Grant</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20081208-00/?p=19923#comment-690873">
			December 9, 2008 at 11:47 am</a>		</div>

		<p>Regarding Micheal&#8217;s SAMBA scenario&#8230;</p>
<p>In that case you would have two different files with two different names. &nbsp;So you&#8217;ll get the right file.</p>
<p>The original scenario is like trying to create a file foo.bar and foo.barbaz, and then making a symlink that points foo.bar to foo.barbaz. &nbsp;And expecting both foo.bars to exist somehow.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-690783">
				<div id="div-comment-690783" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Andrew</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20081208-00/?p=19923#comment-690783">
			December 9, 2008 at 7:37 am</a>		</div>

		<p>That \?c:tempcom2.txt trick to create a file with an otherwise restricted name (that btw cannot be deleted under Windows normally) reminded me of a huge problem I faced just recently.</p>
<p>My primary HDD crashed and I had saved as much data as possible using dd from a Ubuntu LiveCD to a external USB NTFS drive. On accessing the files later under Windows XP, I found that quotes/apostrophes in certain filenames had somehow been replaced by the &quot;?&quot; character of all things!</p>
<p>Now Windows as usual bugged out big-time and NOTHING I did worked to delete those files. Believe me, I tried *everything*, including downloading all sorts of tools and using esoteric commands I&#8217;d never heard of. I also spent hours with MS Tech Support and they weren&#8217;t able to help me either. Now the cause may well have been a problem with Ubuntu&#8217;s hacked implementation of the proprietary NTFS file system, but for the life of me I cannot understand why in blazes XP cannot even delete a file like that? IMO, if a file&#8217;s there on the HDD, exists in the OS&#8217; proprietary FS and is also visible in the OS, then it darn well should also be accessible by the OS for all operations. For me, these files were just taking up space on the disk and I couldn&#8217;t even touch them.</p>
<p>The only thing that worked finally was to boot back into Ubuntu using the LiveCD and getting rid of the offending files. Whew! Frankly, I was disappointed to say the least in MS Support and also in the devs in charge of NTFS development. Will this problem ever be attended to, possibly in Windows 7? or is that too much to ask? (No Raymond, I&#8217;m not asking you personally.)</p>
<p>&lt;/rant&gt; :)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-jamescurran even thread-even depth-1" id="comment-690923">
				<div id="div-comment-690923" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Garry Trinder</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20081208-00/?p=19923#comment-690923">
			December 9, 2008 at 3:43 pm</a>		</div>

		<p>ya&#8217;know, many year ago (when Win95 was still new) I too tried to enlighten the masses on such things:</p>
<p><a rel="nofollow" target="_new" href="http://groups.google.com/group/alt.folklore.computers/browse_thread/thread/2911b01a28124dd3#d9a0a1f7c7cf2f51" rel="nofollow">http://groups.google.com/group/alt.folklore.computers/browse_thread/thread/2911b01a28124dd3#d9a0a1f7c7cf2f51</a></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-690793">
				<div id="div-comment-690793" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Liam</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20081208-00/?p=19923#comment-690793">
			December 9, 2008 at 8:51 am</a>		</div>

		<p>Unless I am missing something I do not see this behaviour, yet have two files.</p>
<p>G:foobar&gt;echo barbaz &gt;&gt;foo.barbaz</p>
<p>G:foobar&gt;echo bar &gt;&gt;foo.bar</p>
<p>G:17_may_desktopdesktop_codefoobar&gt;dir /x</p>
<p> Volume in drive G has no label.</p>
<p> Volume Serial Number is FCB5-FFD4</p>
<p> Directory of G:foobar</p>
<p>09/12/2008 &nbsp;13:49 &nbsp; &nbsp;&lt;DIR&gt; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; .</p>
<p>09/12/2008 &nbsp;13:49 &nbsp; &nbsp;&lt;DIR&gt; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ..</p>
<p>09/12/2008 &nbsp;13:49 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 6 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;foo.bar</p>
<p>09/12/2008 &nbsp;13:49 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 9 FOO~1.BAR &nbsp; &nbsp;foo.barbaz</p>
<p> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 2 File(s) &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 15 bytes</p>
<p> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 2 Dir(s) &nbsp;322,474,455,040 bytes free</p>
<p>G:foobar&gt;fc foo.bar foo.barbaz</p>
<p>Comparing files foo.bar and FOO.BARBAZ</p>
<p>***** foo.bar</p>
<p>bar</p>
<p>***** FOO.BARBAZ</p>
<p>barbaz</p>
<p>*****</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-690963">
				<div id="div-comment-690963" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Alexandre Grigoriev</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20081208-00/?p=19923#comment-690963">
			December 9, 2008 at 8:07 pm</a>		</div>

		<p>&#8220;Why should 64-bit Windows try to be compatible with a 16-bit OS?&#8221;</p>
<p>[Because it&#8217;s s compatible with a 32-bit OS which is compatible with a 16-bit OS.]</p>
<p>16-bit programs don&#8217;t run in x64 Windows anymore.</p>
<div class=post>[<i>And Roman chariots don&#8217;t run on modern train tracks. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-690973">
				<div id="div-comment-690973" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Alexandre Grigoriev</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20081208-00/?p=19923#comment-690973">
			December 9, 2008 at 8:11 pm</a>		</div>

		<p>Andrew,</p>
<p>command window:</p>
<p>del \?c:tempcom2.txt</p>
<p>Those files with screwed up names: double quotes are not allowed in the name. Single quotes are allowed in Win32, but supposedly Ubuntu barfs on them and converts them to a bogus character. I&#8217;m curious what the actual character was. You could paste it into an UNICODE file and then check in a hex editor.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-691003">
				<div id="div-comment-691003" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Andrew</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20081208-00/?p=19923#comment-691003">
			December 10, 2008 at 12:32 am</a>		</div>

		<p>SuperKoko &#8211; &quot;I guess these files should be removed by a program using the POSIX NT API or the native NT API.&quot;</p>
<p>It&#8217;s Google time I guess, but I don&#8217;t suppose you have any recommendations, do you? Even MS Support wasn&#8217;t able to recommend any utilities that worked.</p>
<p>Alexandre Grigoriev &#8211; &quot;Those files with screwed up names: double quotes are not allowed in the name. Single quotes are allowed in Win32, but supposedly Ubuntu barfs on them and converts them to a bogus character. I&#8217;m curious what the actual character was. You could paste it into an UNICODE file and then check in a hex editor.&quot;</p>
<p>Well, as I said, they&#8217;ve mercifully been deleted now. But I guess it ought to be easy enough to check. Just create a file with an apostrophe under Windows, then pop in a Ubuntu LiveCD and copy the same to an NTFS partition. (BTW, I used dd to copy from a FAT32 to an NTFS partition. Would copying from NTFS to NTFS have made any difference?) Voila! You should have an untouchable file under Windows with a ? character in place of the apostrophe.</p>
<p>BTW Alexandre, how would I paste the character into a Unicode file? Copy the name under Explorer and paste? Redirect the output of Dir?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-691013">
				<div id="div-comment-691013" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">SuperKoko</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20081208-00/?p=19923#comment-691013">
			December 10, 2008 at 7:34 am</a>		</div>

		<p>&quot;</p>
<p>BTW, I used dd to copy from a FAT32 to an NTFS partition. Would copying from NTFS to NTFS have made any difference?</p>
<p>&quot;</p>
<p>I&#8217;m not sure to understand the exact sequence of operation you performed. dd makes a dumb copy and doesn&#8217;t deal with file names.</p>
<p>cp, tar &amp; other file utilities deal with names.</p>
<p>Assuming you mount&#8217;ed the partition and called cp to copy back the data, the file name corruption happened there.</p>
<p>&quot;but I don&#8217;t suppose you have any recommendations, do you?&quot;</p>
<p>Not really. I mean: I have never dealt with this issue. If I had to try something, I would write a small application calling NtDeleteFile.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-691023">
				<div id="div-comment-691023" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">ender</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20081208-00/?p=19923#comment-691023">
			December 10, 2008 at 7:42 am</a>		</div>

		<p>This reminded me of a bug I encountered in <font color="red">Product&nbsp;X</font> that caused Windows to BSOD. When <font color="red">Product&nbsp;X</font> created files (I was doing some screenshots), it just truncated the filename to create short names, which caused several files to have the same short name on disk. When you accessing such (corrupted) filesystem from Windows, it would cause a BSOD when you tried to open the second or 3rd file (which reminds me, I need to test if this still happens on Vista). chkdsk fixed the problem.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-691043">
				<div id="div-comment-691043" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Steven Edwards</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20081208-00/?p=19923#comment-691043">
			December 10, 2008 at 9:06 am</a>		</div>

		<p>[Because it&#8217;s s compatible with a 32-bit OS which is compatible with a 16-bit OS&#8230;.</p>
<p>Raymond, this is getting a little off topic but while I can agree with this logic for things like reserved device names but for the life of me I cannot figure out why you guys carried over some of the old Win16 API that had been ported to Win32 and now exists in Win64. Case in point like WinExec and friends. I don&#8217;t understand why you did not just have the compiler throw an error and force the developer to switch to a pure Win32/64 function and kill/remove the old Win16 apis that had been ported.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-691163">
				<div id="div-comment-691163" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">someone else</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20081208-00/?p=19923#comment-691163">
			December 10, 2008 at 11:44 am</a>		</div>

		<p>&gt;&gt;16-bit programs don&#8217;t run in x64 Windows anymore.</p>
<p>&gt;[And Roman chariots don&#8217;t run on modern train tracks. -Raymond]</p>
<p>Isn&#8217;t that a sufficient condition for “incompatible”?</p>
<div class="post">[<i>And yet we continue to use chariot-compatible railroad gauge. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-691363">
				<div id="div-comment-691363" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Duke of New York</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20081208-00/?p=19923#comment-691363">
			December 10, 2008 at 1:32 pm</a>		</div>

		<p>&quot;I don&#8217;t understand why you did not just have the compiler throw an error and force the developer to switch to a pure Win32/64 function and kill/remove the old Win16 apis that had been ported&quot;</p>
<ol>
<li>
<p>What the heck is this &quot;compiler&quot; thing you&#8217;re talking about? I just want my old program to work when I run it!</p>
</li>
<li>
<p>Have fun porting a program that you can&#8217;t even compile or run as-is.</p>
</li>
</ol>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-691433">
				<div id="div-comment-691433" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Yuhong Bao</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20081208-00/?p=19923#comment-691433">
			December 10, 2008 at 3:06 pm</a>		</div>

		<p>LarryOsterman: I know and that is beside my point. Actually I don&#8217;t think it is really related.</p>
<p>BTW, I talked with Larry Osterman about providing a Subsystem SDK. I cited Interix as an example and pointed out that the third party that created the subsystem had to get NT source code from MS to do so, and that this should not be needed.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-691473">
				<div id="div-comment-691473" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://K.Hagan@thermoteknix.com' rel='external nofollow' class='url'>Ken Hagan</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20081208-00/?p=19923#comment-691473">
			December 10, 2008 at 4:38 pm</a>		</div>

		<p>&quot;Well, seriously, I usually disable 8.3 name creation ASAP and indeed tend to kick programs which don&#8217;t like that, unless I *really* need them (in which case fsutil comes in handy).&quot;</p>
<p>That&#8217;s not an option open to a software developer who doesn&#8217;t have administrative control over all their customers&#8217; systems.</p>
<p>Having said that, I&#8217;m astonished that you can actually find any such programs to kick. I first started disabling 8.3 names about 15 years ago and have never knowingly broken anything. It is (to me) astonishing that Windows still defaults to creating such names.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-691573">
				<div id="div-comment-691573" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">someone else</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20081208-00/?p=19923#comment-691573">
			December 10, 2008 at 8:56 pm</a>		</div>

		<p>&gt;&gt; &quot;Well, seriously, I usually disable 8.3 name creation ASAP and indeed tend to kick programs which don&#8217;t like that, unless I *really* need them (in which case fsutil comes in handy).&quot;</p>
<p>&gt; That&#8217;s not an option open to a software developer who doesn&#8217;t have administrative control over all their customers&#8217; systems.</p>
<p>Those systems will have their own 8.3 related setting. And since I develop without 8.3 names, my programs stand an excellent chance to actually work on systems where short name creation is disabled, too.</p>
<p>&gt; Having said that, I&#8217;m astonished that you can actually find any such programs to kick.</p>
<p>So am I. Microsoft Keyboard Layout Creator, for example. Several programs don&#8217;t like spaces in filenames either (how old is Windows NT again?), but that&#8217;s a different story.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-691643">
				<div id="div-comment-691643" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Igor Levicki</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20081208-00/?p=19923#comment-691643">
			December 11, 2008 at 7:00 am</a>		</div>

		<p>First of all, you can have two identically named yoghurt packages in your fridge or a dozen eggs (all called &#8220;eggs&#8221;). You can also have two identical books on your bookshelf.</p>
<p>Going by that logic, the inability of a computer to discern two objects with the same name is completely unnatural.</p>
<p>The main flaw is in every filesystem design &#8212; they are all using a name as a unique key instead of using a GUID and allowing duplicate names.</p>
<p>Of course, many will now dispute the usefullness of having two files with the same name and bring up the issue of chosing which file to open when the user asks the application to open a file by name. Yes, it may complicate things a bit but it is solvable.</p>
<p>For example if you have a file named &#8220;Raymond&#8221; which is a Word document, another file named &#8220;Raymond&#8221; which is a photo, and a third one named &#8220;Raymond&#8221; which is a video then Word should open the document, Picture Viewer should open the photo, and Windows Media Player the video. If there is an application which supports all three file types it should offer a preview dialog so the user can pick the right file.</p>
<p>File extensions would then be unneeded because files would be tagged by their mime type which could be specified in CreateFile() call and if not specified it would bring the preview/chooser dialog I mentioned above.</p>
<p>In my opinion that would make the computer usage much more natural than it is for the last 40 years or so.</p>
<p>When we are at filesystems, the concept of strong hierarchy should be replaced by the concept of views and tagging so that the same item can show up in multiple places/contexts.</p>
<p>This is one of those computing areas which have been neglected for far too long.</p>
<div class=post>[<i>All you did was change the terminology: Under your model, the thing you pass to CreateFile is a name and type. It doesn&#8217;t change the underlying question: &#8220;Can you have two files with the same name and type?&#8221; -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-691733">
				<div id="div-comment-691733" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://K.Hagan@thermoteknix.com' rel='external nofollow' class='url'>Ken Hagan</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20081208-00/?p=19923#comment-691733">
			December 11, 2008 at 12:33 pm</a>		</div>

		<p>&quot;The main flaw is in every filesystem design &#8212; they are all using a name as a unique key instead of using a GUID and allowing duplicate names.&quot;</p>
<p>For me, the &quot;name&quot; is defined by &quot;what you need to specify to uniquely identify the file&quot;. Most OS APIs take the same view (so its an OS issue, not a filesystem one). Historically, those who devised the URL spec, or the run-time libraries of most computer languages, have taken the view that this should be a string of printable characters comprehensible to the end-user. If you choose to deviate from this tradition then you may find that no-one writes apps for your OS.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-692033">
				<div id="div-comment-692033" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Igor Levicki</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20081208-00/?p=19923#comment-692033">
			December 12, 2008 at 8:10 am</a>		</div>

		<blockquote><p>
  &gt;It doesn&#8217;t change the underlying question: &quot;Can you have two files with the same name and type?&quot;&lt;&lt;
</p></blockquote>
<p>That is not the same question you asked in your article, you have just rephrased it now.</p>
<p>In my opinion, you <em>should</em> be able to have two files with the same name and type. In that case the only relevant way to determine which one to open is by the content.</p>
<blockquote><p>
  &gt;For me, the &quot;name&quot; is defined by &quot;what you need to specify to uniquely identify the file&quot;&lt;&lt;
</p></blockquote>
<p>Right, but the only way to uniquely identify the file is by examining its content and here is why:</p>
<blockquote><p>
  &gt;Historically, those who devised the URL spec, or the run-time libraries of most computer languages, have taken the view that this should be a string of printable characters comprehensible to the end-user.&lt;&lt;
</p></blockquote>
<p>Is that why filenames such as &quot;xsdfgpo8df,7uyv908_34c&#8217;s.jpg&quot; are allowed?</p>
<p>Those are all printable characters, aren&#8217;t they?</p>
<p>And for sure the name is unique. But is it comprehensible? Not without opening the file and examining its contents.</p>
<p>Furthermore, what seems to be a comprehensible string of printable characters to a Chinese person isn&#8217;t comprehensible to me, not to mention that the Unicode characters (which are now allowed in file names) are not part of the printable ASCII character set.</p>
<p>So my question is &#8212; what is the point of having unique file names if they still don&#8217;t uniquely identify the content to the user?</p>
<p>For example:</p>
<ul>
<li>&quot;Raymond001.jpg&quot;</li>
<li>
<p>&quot;Raymond002.jpg&quot;</p>
</li>
</ul>
<p>Why is that any better and more identifying than:</p>
<ul>
<li>&quot;Raymond&quot;</li>
</ul>
<li>
<p>&quot;Raymond&quot;</p>
</li>
<p>?</p>
<p>Once you answer those questions, you will hopefully see that the current scheme is broken and those who designed it won&#8217;t look that smart and authoritative anymore. After all they couldn&#8217;t see this far into the future and predict all the ways we could use our computers much less predict what power will be available to do those things in a better, more intuitive way.</p>
<p>Rationale is that such things should not be designed by developers/programmers/coders in the future. By their numerous mistakes in UI design made so far they have shown us that they are completely incapable of user-centric intuitive problem solving.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-692233">
				<div id="div-comment-692233" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">SuperKoko</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20081208-00/?p=19923#comment-692233">
			December 12, 2008 at 5:58 pm</a>		</div>

		<p>@Igor Levicky:</p>
<p>I don&#8217;t think the file system API is broken at all.</p>
<p>Somehow, data has to be indexed by unique keys in a namespace.</p>
<p>The current UNIX/Windows scheme is to provide user-readable (unless you volountary make them unreadable) character strings as keys, organized in a hierarchy.</p>
<p>GUID could have been used as keys, yes.</p>
<p>In both cases, it&#8217;s trivial to hide these unique keys from user&#8217;s view. Just write a file explorer that shows icons &amp; names based on the file contents, rather than on the file name/GUID.</p>
<p>Tagged file formats may contain things like author name, title &amp; other useful info. With extended attributes, some file systems provide this info for every type of file. Some media or file explorer show this information, and it&#8217;s easy to hide the file name.</p>
<p>I don&#8217;t see why GUID would be better than names. IMO, names are much more in the spirit of UNIX where users are administrators and programmers. Hiding things is ok as long as you use a computer to do basic stuff, but when interoperability comes, when you&#8217;ve to back up or copy files between different platforms, the raw file names help.</p>
<p>I feel Windows Explorer is enough criticized about being opaque and hiding too many things to the user.</p>
<p>The other thing about current UNIX/Windows file systems is their hierarchical organization which might not be ideal, because not everything is really organized hierarchically. However, this organization is very standard and is very useful for interoperability with pretty any platform in the world.</p>
<p>Basically, what you want is WinFS. I think that WinFS failed (more than 15 years of development and not yet released). Maybe because the interoperability loss it too heavy. Maybe because it would require redevelopping too many tools. Maybe because the benefits are dubious.</p>
<p>BTW, Raymond001.jpg is not a good name but having too Raymond names is even more confusing. Our brain creates indexes too? I can remember that Raymond001.jpg is, e.g. a photo of Raymond and with his brother and Raymond002.jpg is a photo of Raymond with his father, but if both have the same name, I&#8217;ll have to open both to see them&#8230; or use thumbnail preview. In that case, I don&#8217;t need names anymore. Again, that&#8217;s an EXPLORER issue, not a low-level OS issue.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-692313">
				<div id="div-comment-692313" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Friday</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20081208-00/?p=19923#comment-692313">
			December 13, 2008 at 7:46 pm</a>		</div>

		<p>Why wasn&#8217;t UAC mentioned in this article?</p>
<p>Here, let me fix that for you.</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>