<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (10)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment byuser comment-author-koldude even thread-even depth-1 parent" id="comment-1300775">
				<div id="div-comment-1300775" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/kantos' rel='external nofollow' class='url'>kantos</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170627-00/?p=96475#comment-1300775">
			June 27, 2017 at 1:20 pm</a>		</div>

		<p>I would really hope that WinJS would support <code>async</code> and <code>await</code> which would make this a lot more readable, but I&#8217;m not sure if it tracks the same version of chakra that Edge uses.</p>

		
				</div>
		<ol class="children">
		<li class="comment odd alt depth-2" id="comment-1300795">
				<div id="div-comment-1300795" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ian Yates</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170627-00/?p=96475#comment-1300795">
			June 27, 2017 at 4:00 pm</a>		</div>

		<p>You could transpire with typescript?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even depth-2 parent" id="comment-1300816">
				<div id="div-comment-1300816" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Neil</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170627-00/?p=96475#comment-1300816">
			June 28, 2017 at 3:20 am</a>		</div>

		<p>The async-less version of chained Promises are particularly annoying due to the awkward way of storing intermediate results.</p>
<p>I&#8217;m not sure why Raymond used `transaction &amp;&amp; transaction.close()` but not `outfile &amp;&amp; outfile.openTransactedWriteAsync()` (either with `return` or using implicit expression return).</p>

		
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-oldnewthing bypostauthor odd alt depth-3" id="comment-1300825">
				<div id="div-comment-1300825" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Raymond+Chen+-+MSFT' rel='external nofollow' class='url'>Raymond Chen - MSFT</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170627-00/?p=96475#comment-1300825">
			June 28, 2017 at 6:44 am</a>		</div>

		<p>The &#8220;transaction &#038;&#038;&#8221; was introduced as part of the chain flattening. The &#8220;if (outfile)&#8221; was part of the original code. If I had changed the &#8220;if (outfile)&#8221; then that would&#8217;ve confused the issue, since it was not related to the stated transformation.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment even depth-2" id="comment-1301236">
				<div id="div-comment-1301236" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">contextfree</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170627-00/?p=96475#comment-1301236">
			July 3, 2017 at 9:37 am</a>		</div>

		<p>WinJS is a JavaScript library, it&#8217;s not a general term for the WinRT support for JavaScript</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1 parent" id="comment-1300815">
				<div id="div-comment-1300815" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Someone</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170627-00/?p=96475#comment-1300815">
			June 28, 2017 at 12:55 am</a>		</div>

		<p>Where / how could this JavaScript script be executed, if not in a browser?</p>

		
				</div>
		<ol class="children">
		<li class="comment even depth-2 parent" id="comment-1300845">
				<div id="div-comment-1300845" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Dmitry Onoshko</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170627-00/?p=96475#comment-1300845">
			June 28, 2017 at 7:31 am</a>		</div>

		<p>2 Someone<br />
Not sure I understood your question correctly, but from what I can tell, those UWP applications are yet another terribly (un?)documented piece of ZIPped manifests plus a tiny amount of useful stuff which can optionally be written in JavaScript and can call some APIs by (usually) using the WinJS library.</p>
<p>I gave up trying to build such a thing manually quite soon, since the documentation was contradicting itself and split into multiple pieces. (I didn&#8217;t want to use the multi-gigabyte Visual Studio just to write a tiny useful app of a few kilobytes.)</p>

		
				</div>
		<ol class="children">
		<li class="comment odd alt depth-3" id="comment-1300925">
				<div id="div-comment-1300925" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Someone</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170627-00/?p=96475#comment-1300925">
			June 29, 2017 at 3:45 am</a>		</div>

		<p>I didn&#8217;t get where one could execute this code. (For example, I would expect that JavaScript in a browser is sandboxed so this code snippet would not be able to save files at some custom folder at all.)</p>
<p>&gt;&gt;those UWP applications&lt;&lt;</p>
<p>Applications in JavaScript sounds very strange to me.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1 parent" id="comment-1300875">
				<div id="div-comment-1300875" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Osxpert</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170627-00/?p=96475#comment-1300875">
			June 28, 2017 at 11:26 am</a>		</div>

		<p>The first JS example is a lot more readable than async await (dont like them)</p>

		
				</div>
		<ol class="children">
		<li class="comment odd alt depth-2" id="comment-1300935">
				<div id="div-comment-1300935" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Voo</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170627-00/?p=96475#comment-1300935">
			June 29, 2017 at 4:37 am</a>		</div>

		<p>New things take a bit to get used to, but async/await are great tools to simplify asynchronous code. The main advantages:<br />
&#8211; the logic is kept linear instead of being wrapped in callbacks which gets confusing very quickly when you are four levels nested<br />
&#8211; exception handling can be done in the standard way of the language instead of needing different callbacks </p>
<p>Yes you&#8217;ll have to use some new technology, but it&#8217;s pretty simple, particularly for the standard use cases.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>