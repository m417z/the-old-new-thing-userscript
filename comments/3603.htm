<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (21)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-1071023">
				<div id="div-comment-1071023" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Programmerman</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130806-00/?p=3603#comment-1071023">
			August 6, 2013 at 8:12 am</a>		</div>

		<p>You can also box the object array:</p>
<p>public static void Main() {</p>
<p> Sample((object)(new object[] {&quot;hello&quot;, &quot;there&quot;}));</p>
<p>}</p>
<p>The parameter passed is now of type System.Object instead of System.Object[]. It can&#39;t be implicitly converted back to System.Object[], it can only be explicitly converted. Still extra typing, but less extra typing.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1071043">
				<div id="div-comment-1071043" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Lindo</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130806-00/?p=3603#comment-1071043">
			August 6, 2013 at 8:52 am</a>		</div>

		<p>Or you could just.. Not do that. Using &#39;params&#39; on plain Objects is rather bad form, and probably doesn&#39;t make sense unless ones application design has already gone off the rails..</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1071053">
				<div id="div-comment-1071053" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Brad</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130806-00/?p=3603#comment-1071053">
			August 6, 2013 at 9:08 am</a>		</div>

		<p>@Lindo &#8211; actually I can think of a few use cases where params object[] is quite useful, most especially for things like string.Format and Console.WriteLine. However I agree its best to avoid when at all possible.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1071083">
				<div id="div-comment-1071083" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Csaboka</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130806-00/?p=3603#comment-1071083">
			August 6, 2013 at 9:48 am</a>		</div>

		<p>Java has the exact same way of using varargs (but with different syntax, of course[1]), with the exact same caveats.</p>
<p>There is another case, though, that doesn&#39;t require T to be Object: specifying null as the last parameter. Null can implicitly be converted to any reference type, so this may mean sending null instead of an actual array instance, or sending an array instance with exactly one null element in it. Just like with Raymond&#39;s example, the normal form is preferred, with a warning about ambiguity.</p>
<p>[1] It always amazes me that the two languages are so close in spirit, but still make every effort to have different syntax for matching features&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1071113">
				<div id="div-comment-1071113" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Danny</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130806-00/?p=3603#comment-1071113">
			August 6, 2013 at 10:06 am</a>		</div>

		<p>@Csaboka &#8211; why? Given the fact that Java was written with intent to have a C/C++ portable everywhere with WORE (something way ahead of it&#39;s time, Microsoft did .NET eons after Sun) and that C# creator was coming from Delphi you have your answer. C# aimed to have RAD programming as best as Delphi hence the difference in syntax.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1071143">
				<div id="div-comment-1071143" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">John Doe</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130806-00/?p=3603#comment-1071143">
			August 6, 2013 at 11:42 am</a>		</div>

		<p>@Danny, please justify how the syntax of C# is similar to that of Delphi. And I mean closely similar, not remotely similar.</p>
<p>Also, please justify how the syntax of C# is so different than that of Java for good reasons.</p>
<p>Note that the person who brought the Delphi-style things to Microsoft products used to work in Visual J and J# before.</p>
<p>Really, there are products that unify both languages (heck, they even load the compiled byte-code of one in the other) under the same environment, just because the languages and the VMs and memory models are so similar.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1071183">
				<div id="div-comment-1071183" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Csaboka</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130806-00/?p=3603#comment-1071183">
			August 6, 2013 at 12:55 pm</a>		</div>

		<p>To be fair, Sun/Oracle is just as &quot;guilty&quot; in the different syntaxes as Microsoft is. Every time when Java implemented some feature C# already had, they made damn sure to make it at least cosmetically different.</p>
<p>When Java got foreach, they made it use the regular &quot;for&quot; keyword.</p>
<p>When it got &quot;using&quot; blocks, they changed the syntax of &quot;try&quot; blocks instead of calling it &quot;using&quot;.</p>
<p>And of course, what .NET calls IDisposable is called AutoCloseable in Java-land, and instead of Dispose()-ing it, you close() it.</p>
<p>Oh, and when Java finally gets lambda expressions, of course it will use -&gt; for it instead of =&gt;, just to be different: <a rel="nofollow" target="_new" href="http://docs.oracle.com/javase/tutorial/java/javaOO/lambdaexpressions.html#syntax">docs.oracle.com/&#8230;/lambdaexpressions.html</a></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1071193">
				<div id="div-comment-1071193" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Nick</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130806-00/?p=3603#comment-1071193">
			August 6, 2013 at 1:43 pm</a>		</div>

		<p>&gt; Oh, and when Java finally gets lambda expressions, of course it will use -&gt; for it instead of =&gt;, just to be different</p>
<p>I actually laughed out loud when I first read over the Java lambda documentation and saw that. &nbsp;To be fair, there /might/ be some argument that -&gt; is easier to type than =&gt;, but that might be reaching (ha ha) a bit.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1071213">
				<div id="div-comment-1071213" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Daniel Neely</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130806-00/?p=3603#comment-1071213">
			August 6, 2013 at 3:50 pm</a>		</div>

		<p>@John Doe</p>
<p>RE your last point, James Iry&#39;s history of the two languages is so funny because it&#39;s completely true.</p>
<p><a rel="nofollow" target="_new" href="http://james-iry.blogspot.com/2009/05/brief-incomplete-and-mostly-wrong.html">james-iry.blogspot.com/&#8230;/brief-incomplete-and-mostly-wrong.html</a></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1071233">
				<div id="div-comment-1071233" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Vince</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130806-00/?p=3603#comment-1071233">
			August 6, 2013 at 8:46 pm</a>		</div>

		<p>Don&#39;t let your design get to that stage.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1071243">
				<div id="div-comment-1071243" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blogs.msdn.com/wswiktor_4000_poczta.fm/ProfileUrlRedirect.ashx' rel='external nofollow' class='url'>wswiktor@poczta.fm</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130806-00/?p=3603#comment-1071243">
			August 7, 2013 at 1:53 am</a>		</div>

		<p>@Nick: one can argue that =&gt; looks too much like &lt;= or &gt;=, completely different creatures. Also, C++ uses -&gt;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1071253">
				<div id="div-comment-1071253" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ooh</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130806-00/?p=3603#comment-1071253">
			August 7, 2013 at 2:39 am</a>		</div>

		<p>@Programmerman: Just for completeness and correctness, that&#39;s not boxing as you&#39;re transforming a reference type to another reference type. That&#39;s called casting. (Boxing would be the correct terminology if the transformation would go from value type to reference type.)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1071473">
				<div id="div-comment-1071473" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Mason Wheeler</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130806-00/?p=3603#comment-1071473">
			August 7, 2013 at 10:02 am</a>		</div>

		<p>@John Doe: Sure, the *syntax* looks like Java, but the libraries and the language style, especially in the early .NET releases, are pure Delphi. &nbsp;It&#39;s almost like Microsoft hired Delphi engineers and told them &quot;let&#39;s rewrite Delphi to look like Java.&quot;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1071673">
				<div id="div-comment-1071673" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">John Doe</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130806-00/?p=3603#comment-1071673">
			August 8, 2013 at 11:28 am</a>		</div>

		<p>@Mason Wheeler, for UpperCamelCase, properties and delegates, sure, C# smells like Delphi.</p>
<p>Yet, I&#39;m still expecting for proof of more similarity between C# and Delphi than C# and Java.</p>
<p>Note that Delphi was on-par with C++ (minus macros and templates) back when C#/.NET was introduced. It compiled to machine code instead of byte code, it didn&#39;t have garbage collection, etc. If anything, Visual J++ was the spiritual ancestor of C#/.NET before Sun sued Microsoft for infringement by extending Java without consent.</p>
<p>Or rather, C#/.NET was the response to that (this is just my opinion).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1071763">
				<div id="div-comment-1071763" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Danny</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130806-00/?p=3603#comment-1071763">
			August 8, 2013 at 6:52 pm</a>		</div>

		<p>@Mason Wheeler &#8211; &lt;It&#39;s almost like Microsoft hired Delphi engineers and told them &quot;let&#39;s rewrite Delphi to look like Java.&quot;&gt;</p>
<p>Actually Microsoft did exactly that! As in word for word. There is no &quot;almost&quot;!!</p>
<p>&quot;Anders Hejlsberg (born December 1960) is a prominent Danish software engineer who co-designed several popular and commercially successful programming languages and development tools. He was the original author of Turbo Pascal and the chief architect of Delphi. He currently works for Microsoft as the lead architect of C# and core developer on TypeScript.&quot; Source wikipedia :</p>
<p><a rel="nofollow" target="_new" href="http://en.wikipedia.org/wiki/Anders_Hejlsberg">en.wikipedia.org/&#8230;/Anders_Hejlsberg</a></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1071783">
				<div id="div-comment-1071783" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">john</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130806-00/?p=3603#comment-1071783">
			August 8, 2013 at 11:47 pm</a>		</div>

		<p>Oh, nice article! That explains the weird wrap around &quot;object[]&quot; we need to do to call MemberInfo.Invoke(&#8230;, parameters) !</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1071903">
				<div id="div-comment-1071903" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Moneka</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130806-00/?p=3603#comment-1071903">
			August 9, 2013 at 8:50 am</a>		</div>

		<p>Nice article!</p>
<p>I love the comparisons between Microsoft .Net and Java! So true!</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1071923">
				<div id="div-comment-1071923" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">John Doe</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130806-00/?p=3603#comment-1071923">
			August 9, 2013 at 9:00 am</a>		</div>

		<p>@Danny, it was the other way around, &quot;let&#39;s make Java a bit more like Delphi&quot;. Hence the litigation with Sun.</p>
<p>Since we&#39;re quoting Wikipedia here:</p>
<p> &#8230; build a new language at the time called Cool, which stood for &quot;C-like Object Oriented Language&quot;.</p>
<p> &#8230; the originator of Java, called C# an &quot;imitation&quot; of Java;</p>
<p> &#8230; (authors of a C++ streams book) stated in a blog post that &quot;Java and C# are almost identical programming languages</p>
<p> &#8230; C# borrowed a lot from Java &#8211; and vice versa. Now that C# supports boxing and unboxing, we&#39;ll have a very similar feature in Java.</p>
<p> &#8230; Anders Hejlsberg has argued that C# is &quot;not a Java clone&quot; and is &quot;much closer to C++&quot; in its design.</p>
<p>in <a rel="nofollow" target="_new" href="http://en.wikipedia.org/wiki/C_Sharp_(programming_language)">en.wikipedia.org/&#8230;/C_Sharp_(programming_language)</a> (references included)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1072293">
				<div id="div-comment-1072293" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Danny</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130806-00/?p=3603#comment-1072293">
			August 11, 2013 at 3:11 am</a>		</div>

		<p>@John Doe &lt;&#8230;&quot;let&#39;s make Java a bit more like Delphi&quot;&#8230;&gt;</p>
<p>Java &#8211; source : <a rel="nofollow" target="_new" href="http://en.wikipedia.org/wiki/Java_(programming_language)">en.wikipedia.org/&#8230;/Java_(programming_language)</a></p>
<p> &#8211; James Gosling, Mike Sheridan, and Patrick Naughton initiated the Java language project in June 1991</p>
<p> &#8211; Sun Microsystems released the first public implementation as Java 1.0 in 1995</p>
<p>Delphi &#8211; source : <a rel="nofollow" target="_new" href="http://en.wikipedia.org/wiki/Embarcadero_Delphi">en.wikipedia.org/&#8230;/Embarcadero_Delphi</a></p>
<p> &#8211; Delphi (later known as Delphi 1) was released in 1995 for the 16-bit Windows 3.1</p>
<p>This sounds to me that Java was developed in parallel with Delphi, not that Java is a Delphi clone for cross-platform. And my point was that C# is a cow-helicopter of Delphi/Java. It has the RAD of Delphi (or can give milk like a cow) and the cross-platform (within Windows world) achievement (because is a .NET technology) (or can fly like a helicopter). It&#39;s a monster? Definitely! It&#39;s good? Hell yeah. Now these days Delphi is playing catch-up with cross platform trying to beat Java at it by making native code. 2 More steps (Android and Linux) and will be there.</p>
<p>Let&#39;s take an example of Delphi RAD. Make a clone of Notepad. In Delphi can be achieved in maximum one hour. Dump 2 visual controls (Menu and Memo), create the menu entries, write the handlers. Before C# was any of the .NET programming languages able to do that? VB.NET could but was a hell lot more time then in Delphi (C++.NET was a miss from start). Don&#39;t believe me? Create a youtube movie with you doing exactly that in VB.NET (or C++.NET) and then I&#39;ll show you mine doing it in Delphi. Do same in Java? I&#39;ll pity you.</p>
<p>What I am trying to say is that in land of RAD Delphi is the king, while in the land of cross-platform Java is the king. C#, in it&#39;s cross-platform Windows world, tries to combine a cow with a helicopter. Hats off, it&#39;s there. Of course is not perfect. And that Delphi road-map shows cross-platform on the major ones is 2 steps away which will make Java obsolete (or only web applications relevant). C# will never be a true cross-platform because Microsoft is like Spanish Inquisition regarding worlds outside of Windows, and to those who chant &quot;Mono!&quot; I say &quot;Get serious!&quot;.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1072343">
				<div id="div-comment-1072343" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Gabe</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130806-00/?p=3603#comment-1072343">
			August 11, 2013 at 10:11 pm</a>		</div>

		<p>Danny: I would posit that C# exists for the primary reason that, as you observed, it is so difficult to make a RAD environment with Java. MS wanted to make a RAD Java environment that would be as easy to use as VB, so they added a few things to Java (most notably delegates) and called it J++. Sun called foul and sued, forcing MS to abandon Java.</p>
<p>As a result, MS had to create their own language to provide a RAD environment for C/C++ programmers. Hence, we have C# today.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-memikerobin-com even thread-even depth-1" id="comment-1072333">
				<div id="div-comment-1072333" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/thelazydogsback' rel='external nofollow' class='url'>thelazydogsback</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130806-00/?p=3603#comment-1072333">
			August 11, 2013 at 9:52 pm</a>		</div>

		<p>&gt;&#8230; the originator of Java, called C# an &quot;imitation&quot; of Java;</p>
<p>As someone who has spent who knows how many hours with both (as I&#39;m sure you all have), they are different enough that (to me anyway) C# is *much* more productive. As other&#39;s have said, Java is not so much an object-orientated language, as it is a class-orientated language &#8211; in Java the answer to everything is a new class &#8211; whether it be outer, inner (ick), static inner, or anonymous &#8211; &nbsp;Long-time C# features such as delegates/events, lambdas, LINQ, using, iterators, decent initialization syntax, partial class, anonymous types and type inference, namespaces as a separate concept from file organization (no Nazi regimentation of single-class forced into directories) &nbsp;&#8211; all add up to a much more natural transformation from idea to code.</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>