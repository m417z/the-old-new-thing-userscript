<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (53)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-938953">
				<div id="div-comment-938953" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Vilx-</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20111006-00/?p=9453#comment-938953">
			October 6, 2011 at 7:13 am</a>		</div>

		<p>So, uhmm&#8230; I might be the naive guy here, but what&#39;s wrong with soft links?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-938963">
				<div id="div-comment-938963" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Mathieu Garstecki</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20111006-00/?p=9453#comment-938963">
			October 6, 2011 at 7:26 am</a>		</div>

		<p>@Vilx: soft links don&#39;t act the same as hard links (which are essentially normal files anyway, what we call a &quot;file&quot; is a disk area with one hard link pointing to it), and might confuse programs that expect normal files.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-938973">
				<div id="div-comment-938973" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Cesar</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20111006-00/?p=9453#comment-938973">
			October 6, 2011 at 7:27 am</a>		</div>

		<p>Couldn&#39;t &quot;D:Program FilesWindows NT&quot; be a reparse point to &quot;C:Program FilesWindows NT&quot; (or perhaps &quot;C:WindowsProgram FilesWindows NT&quot; to make things the same when not redirected)? Then only the MS Windows part of Program Files would go to C: (with hardlinks and transactions and all that stuff), and the rest (which is what I believe people want to move Program Files for) could go to D:.</p>
<div class="post">[<i>The <code>Windows NT</code> directory was an example, not a comprehensive list. And some affected directories are not created by a default install. And I don&#39;t think you can create a hard link through a soft link, anyway. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-938983">
				<div id="div-comment-938983" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Cesar</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20111006-00/?p=9453#comment-938983">
			October 6, 2011 at 7:43 am</a>		</div>

		<p>@Raymond: Oh well, it would not work then. But I still think that the problem is that &quot;Program Files&quot; mixes Windows components and third-party components, and that what people want to redirect is third-party components (including things MS Office and the compiler/SDK as &quot;third-party&quot; here).</p>
<div class="post">[<i>I suspect that Office and Visual Studio require you to install into the system volume <a href="http://en.wikipedia.org/wiki/Windows_Update#Microsoft_Update" rel="nofollow">for the same reason</a>. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-938993">
				<div id="div-comment-938993" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Powerlord</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20111006-00/?p=9453#comment-938993">
			October 6, 2011 at 7:44 am</a>		</div>

		<p>@Vilx:</p>
<p>Deleting the original file when you have a soft link causes the soft link to stop working as the file is gone. &nbsp;Deleting the original file when you have a hard link doesn&#39;t make a difference, as it&#39;s just one of two or more pointers to the file&#39;s contents.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-939003">
				<div id="div-comment-939003" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">ipoverscsi</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20111006-00/?p=9453#comment-939003">
			October 6, 2011 at 8:13 am</a>		</div>

		<p>One of the things I like about the UN*X world is that you can mount filesystems in virtually any folder. &nbsp;In some cases files in the mountee folder are hidden completely by the root of the mounting file system but in other cases it is not. &nbsp;The latter is effectively a &quot;unioned&quot; filesystem. &nbsp;Some VM Appliances like SLAX take advantage of &quot;unioned filesystems&quot; to serve as a software packaging and installation solution. &nbsp;The package comes as an ISO-like image that is mounted via the loopback device and then overlayed onto the root filesystem. &nbsp;This makes software package installation and de-installation a no-brainer!</p>
<p>Is such a capability available in Windows? &nbsp;If so, you could store the packages for software applications on other volumes and just union-mount them into the C:Program Files folder.</p>
<div class="post">[<i>I guess you could mount a VHD into a junction. But this assumes everything the package needs is in a single directory. So good-bye C runtime library! (Since that goes into C:WindowsWinSXS.) -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-939013">
				<div id="div-comment-939013" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20111006-00/?p=9453#comment-939013">
			October 6, 2011 at 8:20 am</a>		</div>

		<p>[I suspect that Office and Visual Studio require you to install into the system volume for the same reason. -Raymond]</p>
<p>It turns out they do not.</p>
<p>Anyway, it turns out to be a low risk operation to change the location of Program Files via regedit after install. The few components directly affected by Windows servicing are already installed to the system volume. Any program that assumes all programs are in Program Files is already broken.</p>
<p>What breaks is UAC&#39;s folder redirection, which I believe only redirects the original program files. Since any time you&#39;re doing something fancy you have to turn UAC off anyway, I just can&#39;t care about it.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-alegrigoriev odd alt thread-odd thread-alt depth-1" id="comment-939023">
				<div id="div-comment-939023" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/alegr1' rel='external nofollow' class='url'>alegr1</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20111006-00/?p=9453#comment-939023">
			October 6, 2011 at 8:44 am</a>		</div>

		<p>@ipowerscsi:</p>
<p>reparse point.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-brunopitrus even thread-even depth-1" id="comment-939033">
				<div id="div-comment-939033" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/kinokijuf' rel='external nofollow' class='url'>kinokijuf</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20111006-00/?p=9453#comment-939033">
			October 6, 2011 at 9:04 am</a>		</div>

		<p>So why can&#39;t you rename it elsewhere on the system volume?</p>
<div class="post">[<i>&quot;Hey, let&#39;s add a feature that nobody will care about!&quot; -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-939043">
				<div id="div-comment-939043" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20111006-00/?p=9453#comment-939043">
			October 6, 2011 at 9:24 am</a>		</div>

		<p>[&quot;Hey, let&#39;s add a feature that nobody will care about!&quot; -Raymond]</p>
<p>I&#39;d care. I have had to have two copies of XP on the same volume before (see the old MSDN article How and When to do a Parallel Install of NT). Maybe I&#39;ll have to do that on some version of Windows again.</p>
<div class="post">[<i>Yay, two different OS&#39;s both trying to manage the System Volume Information directory! What could possibly go wrong? -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-brunopitrus even thread-even depth-1" id="comment-939053">
				<div id="div-comment-939053" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/kinokijuf' rel='external nofollow' class='url'>kinokijuf</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20111006-00/?p=9453#comment-939053">
			October 6, 2011 at 9:26 am</a>		</div>

		<p>Can you rename the Windows directory?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-939063">
				<div id="div-comment-939063" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">@Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20111006-00/?p=9453#comment-939063">
			October 6, 2011 at 9:34 am</a>		</div>

		<p>You seem to be into doing some risky business with Windows for no other reason than &#39;the heck of it&#39;. We once had a guy like you working in our IS Department, he didn&#39;t last too long. I&#39;ve always wondered what happened to him, probably landed a job at a smaller company who didn&#39;t know any better; what fun they will have when someone who isn&#39;t as risky takes a look at their setup!</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-939073">
				<div id="div-comment-939073" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20111006-00/?p=9453#comment-939073">
			October 6, 2011 at 9:59 am</a>		</div>

		<p>I&#39;ll just have to remember that doesn&#39;t work anymore. It probably didn&#39;t really work on XP and my second install didn&#39;t live long enough to find out.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-939083">
				<div id="div-comment-939083" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Midnight</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20111006-00/?p=9453#comment-939083">
			October 6, 2011 at 10:34 am</a>		</div>

		<p>ah, &quot;frankenstein configuration&quot; brings back memories from when language pack installation failed on my winxp, so the system was partially english and partially slovak :-D</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-939093">
				<div id="div-comment-939093" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">ipoverscsi</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20111006-00/?p=9453#comment-939093">
			October 6, 2011 at 10:51 am</a>		</div>

		<p>@Raymond: Thanks for the tip! &nbsp;I didn&#39;t know what a VHD was (Virtual Hard Disk) and in my search I stumbled across the Microsoft Support page <a rel="nofollow" target="_new" href="http://support.microsoft.com/?kbid=205524" rel="nofollow">support.microsoft.com</a> that explained Mountvol.exe. &nbsp;It appears that using that tool you could mount a volume on top of another folder without having to give the volume a drive letter first. &nbsp;New toys to play with! &nbsp;I&#39;m going to try it out in my VM.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-939103">
				<div id="div-comment-939103" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Matt</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20111006-00/?p=9453#comment-939103">
			October 6, 2011 at 11:04 am</a>		</div>

		<p>Gee&#8230; Thanks. &nbsp;Now I&#39;ll spend the rest of the afternoon playing Pinball.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-939113">
				<div id="div-comment-939113" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">xpclient</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20111006-00/?p=9453#comment-939113">
			October 6, 2011 at 1:00 pm</a>		</div>

		<p>Don&#39;t know if it has been asked before but why was the longer name &quot;Program Files&quot; chosen? Why not 8.3 compatible &quot;Programs&quot;? Was it because the Start Menu had to include a program group called &quot;Programs&quot; and people would get confused between the two?</p>
<p>Offtopic but because it&#39;s covered in this post briefly: Although in theory Windows Update in designed to take advantage of transactions, most often on NT 6.x systems that I have serviced, if sommething does go wrong while updates are being installed like a hang, crash or BSOD, most systems (especially Vista systems) will get stuck in an unusable state as &quot;Please wait while Windows configures updates&#8230;stage x of 3). With Windows 7, the situation seems to have improved slightly and I see less such issues (but not zero) and I can use DISM to revert pending servicing operations.</p>
<div class="post">[<i>&quot;Programs&quot; are not &quot;Program Files&quot;. MSOHEV.DLL is a program file. It is not a program. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-939123">
				<div id="div-comment-939123" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">xpclient</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20111006-00/?p=9453#comment-939123">
			October 6, 2011 at 1:02 pm</a>		</div>

		<p>Oh and I forgot to mention, the servicing stack in NT6 is a disaster IMHO and leaves much to be desired. But that is for a different day when it would be the topic.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-aadsso-1live-com000300008195987d even thread-even depth-1" id="comment-939133">
				<div id="div-comment-939133" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Spire' rel='external nofollow' class='url'>Spire</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20111006-00/?p=9453#comment-939133">
			October 6, 2011 at 1:48 pm</a>		</div>

		<p>Raymond wrote:</p>
<blockquote><p>
  &quot;Programs&quot; are not &quot;Program Files&quot;.
</p></blockquote>
<p>And &quot;Documents&quot; are not &quot;Document Files&quot;, &quot;Settings&quot; are not &quot;Settings Files&quot;, and &quot;Users&quot; are not &quot;User Files&quot;. Yet we used to have &quot;Documents and Settings&quot; instead of &quot;Document and Settings Files&quot;, and these days we have &quot;Users&quot; instead of &quot;User Files&quot;.</p>
<p>It helps to just not think about too much.</p>
<p>FWIW, I think putting &quot;Files&quot; in any folder name is redundant, since from the user&#39;s point of view, all folders contain nothing but files (and possibly subfolders). But my best guess on why &quot;Program Files&quot; was named so was to force developers to support long filenames everywhere &#8212; including installers.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-939153">
				<div id="div-comment-939153" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Alex Grigoriev</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20111006-00/?p=9453#comment-939153">
			October 6, 2011 at 2:14 pm</a>		</div>

		<p>@xpclient:</p>
<p>&quot;if sommething does go wrong while updates are being installed like a hang, crash or BSOD&quot;</p>
<p>Uninstall third party antiviruses. Seriously.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-939163">
				<div id="div-comment-939163" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ben Voigt</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20111006-00/?p=9453#comment-939163">
			October 6, 2011 at 2:20 pm</a>		</div>

		<p>&quot;I still think that the problem is that &quot;Program Files&quot; mixes Windows components and third-party components -Cesar&quot;</p>
<p>&quot;[I suspect that Office and Visual Studio require you to install into the system volume for the same reason. -Raymond]&quot;</p>
<p>Then the solution is to build a culture of keeping OS components separate from application components. &nbsp;We live in an age of 30GB system SSDs with 2TB secondary storage. &nbsp;Requiring a 10GB Visual Studio install to go on the OS drive is not a good thing. &nbsp;(Yes, Visual Studio lets you choose an install directory, but most of the components ignore that. &nbsp;Check the space needed on system vs install drive.)</p>
<p>As a benefit, all the work needed to support servicing of &quot;Microsoft components which are not part of the OS&quot; installed on a secondary drive could easily enable WIM-based servicing of third-party applications.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-939173">
				<div id="div-comment-939173" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Developer</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20111006-00/?p=9453#comment-939173">
			October 6, 2011 at 2:29 pm</a>		</div>

		<p>Yet again, we see that Windows is years and years behind any modern Unix system. No self-respecting Unix OS would force programs to be installed on the &quot;system volume&quot;. Raymond&#39;s apologetics notwithstanding, Windows has become increasingly brittle over the years.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-939183">
				<div id="div-comment-939183" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Michael Grier [MSFT]</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20111006-00/?p=9453#comment-939183">
			October 6, 2011 at 2:56 pm</a>		</div>

		<p>Let&#39;s separate this discussion into parts.</p>
<p>Microsoft needs to service Windows and any parts of Windows. &nbsp;Sharing what seem like &quot;common files&quot; between various Windows installations was a non-starter since then these files could change out of band (certainly at a reboot boundary where the user booted to an alternate OS but also since the brighter folks out there may want to point things to network drives or perhaps a separate volume where you revert to a snapshot, not coordinated with the patch level of the OS). &nbsp;Software installation was lengthy and fragile and authoring updates like patches was also error prone since the patch had to account for all the possible ways that the software was (legally; not in the legal sense) configured on the target. &nbsp;It often involved custom code written just for the patch which therefore didn&#39;t get broad testing.</p>
<p>For Vista we decided that this had to be fixed and so we moved to a system where we maintain a model of how the system is supposed to look and then compute the actual changes by evaluating changes to the model.</p>
<p>At this point in the conversation, the only real requirement imposed is that the Windows owned files are on the boot volume. &nbsp;Unfortunately since all the namespace references traverse through Program Files, we were kind of stuck with mandating that Program Files stay on the boot volume. &nbsp;(Actually it&#39;s a little weaker, we only require that the Program Files is unique to the Windows instance.)</p>
<p>Next was that with this spiffy new faster more reliable servicing engine, we wanted to avoid reinventing the wheel w.r.t. rollback and error handling so we took the dependency on the transactional filesystem feature. &nbsp;This mandates NTFS over FAT.</p>
<p>For Vista SP1 (a/k/a Server 2008), we addressed deficiencies associated with the user profiles being on a different (but still dedicated) volume. &nbsp;This required for terminal server scalability scenarios.</p>
<p>That&#39;s the end of that part of the discussion. &nbsp;The technology is almost there.</p>
<p>But now we&#39;re at Raymond&#39;s classic &quot;every feature starts with -100 points&quot; point. &nbsp;Someone would have to code relocating the program files directories (two of them on amd64) during setup and/or later and people would have to test it. &nbsp;Disk space usage would increase unless we had a file repository on both the boot drive as well as the program files drive.</p>
<p>Shockingly, the end result is that because there are limited resources and limited amount of risk that a given Windows release can absorb and this feature hasn&#39;t made the bar thus far.</p>
<p>Raymond&#39;s points are correct and are advantages of the system but aren&#39;t necessarily the justification for it. &nbsp;(Apologies to the community for not reviewing this blog entry before it was posted but I don&#39;t think there&#39;s anything far off center here&#8230;) &nbsp;Really this feature didn&#39;t happen because of the -100 point rule. &nbsp;(since it would have expanded the test matrix for Vista, it started at more like -1,000 or -1,000,000 points.)</p>
<p>w.r.t. winsxs, application containment:</p>
<p>Well actually the intention is for applications to carry the components with them and the winsxs mechanism is only intended to be used for either (a) components which must be installed system-wide due to configuration beyond the set of files contained within the component or (b) security patches for shared components where rogue applications are forcibly brought up to minimal version conformance if trying to launch with a privately carried buggy version of some shared components. &nbsp;In the end, there was a certain level of distrust that the versioning / binding system was trustworthy to deploy security patches and thus instead a policy of keeping files in well known locations where they could be centrally updated was adopted. &nbsp;You can see this in how CLR assemblies are updated without changing their assembly versions. &nbsp;We managed to defend against this for the versioning platform in Windows but it doesn&#39;t help that the vast majority of Windows components require configuration beyond their files and so at least we were able to use the same binding and versioning concepts to build a versioning model for components in Windows. &nbsp;so there&#39;s no technical reason that the CRT has/had to be in the WinSxS directory but too many people were nervous about what it meant to have copies laying around in application directories if in fact there was a security fix. &nbsp;People may recall the firedrill around another component which was distributed in the application directory and where the original version had a security defect.</p>
<p>w.r.t. patch reliability:</p>
<p>I&#39;m not saying that things are perfect but they are literally orders of magnitude better than they were in the past (XP and prior) and for the first time, uninstall (of other than the most recently installed patch) works. &nbsp;Really, uninstall hasn&#39;t worked in most installation systems previously. &nbsp;Now it works reliably enough that uninstall can be part of the manufacturing process.</p>
<p>Mike</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-939193">
				<div id="div-comment-939193" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">David Walker</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20111006-00/?p=9453#comment-939193">
			October 6, 2011 at 3:24 pm</a>		</div>

		<p>@Michael Grier: &nbsp;Thanks for that comprehensive explanation. &nbsp;It&#39;s useful to hear the reasoning behind things like this. &nbsp;Raymond does a lot of that too, and it&#39;s useful to hear another voice. &nbsp;Thanks.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-939203">
				<div id="div-comment-939203" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Danny</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20111006-00/?p=9453#comment-939203">
			October 6, 2011 at 3:42 pm</a>		</div>

		<p>Maybe you meant %SystemDrive%:Program Files ? Because I can very well have C: drive as something and install Windows to D: drive, in which case the program files folder resides on D: drive. Or I am missing something?</p>
<div class="post">[<i>Welcome to the Nitpicker&#39;s Corner. Population: You. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-939213">
				<div id="div-comment-939213" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blogs.msdn.com/oliver_4000_g7.org/ProfileUrlRedirect.ashx' rel='external nofollow' class='url'>oliver@g7.org</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20111006-00/?p=9453#comment-939213">
			October 6, 2011 at 5:37 pm</a>		</div>

		<blockquote><p>
  A large percentage of the files installed by Windows are hard-linked to</p>
<p>  copies in the C:WindowsWinSxS directory for reasons I do not understand
</p></blockquote>
<p>I am often astonished by the number of technologies Raymond has his head around. &nbsp;It&#39;s a relief to know that understanding SxS does not come naturally to him either; I don&#39;t feel quite so stupid having to read up on it every 12 months when it comes knocking!</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-alegrigoriev even thread-even depth-1" id="comment-939223">
				<div id="div-comment-939223" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/alegr1' rel='external nofollow' class='url'>alegr1</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20111006-00/?p=9453#comment-939223">
			October 6, 2011 at 7:50 pm</a>		</div>

		<p>@Danny:</p>
<p>Yes. Unless it&#39;s an upgrade of an existing install, Vista+ will make whatever disk you install on, C:.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-939233">
				<div id="div-comment-939233" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">NB</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20111006-00/?p=9453#comment-939233">
			October 7, 2011 at 12:10 am</a>		</div>

		<p>@Ben Voight: I&#39;d say we currently live in an age of 100+ (and rising) GB system SSD:s, so this problem will go away on on its own very soon.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-939253">
				<div id="div-comment-939253" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Neil</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20111006-00/?p=9453#comment-939253">
			October 7, 2011 at 4:07 am</a>		</div>

		<p>[Yay, two different OS&#39;s both trying to manage the System Volume Information directory! What could possibly go wrong? -Raymond]</p>
<p>Presumably when you&#39;re installing OS&#39;s on multiple partitions they avoid conflicting with each other&#39;s System Volume Information directories, although you might want to be able to share them in some cases, such as volume shadow copies.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-939263">
				<div id="div-comment-939263" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">ender</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20111006-00/?p=9453#comment-939263">
			October 7, 2011 at 5:26 am</a>		</div>

		<p>@NB: not necessarily upgrade &#8211; as long as you start the installer from existing Windows installation (even if it&#39;s not an upgrade), the drive letter assignments will be kept (thus my Vista install is on V: and Windows 7 is on W: &#8211; and neither was an upgrade).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-939353">
				<div id="div-comment-939353" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Stefan Kanthak</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20111006-00/?p=9453#comment-939353">
			October 7, 2011 at 2:06 pm</a>		</div>

		<p>[I guess you could mount a VHD into a junction. But this assumes everything the package needs is in a single directory. So good-bye C runtime library! (Since that goes into C:WindowsWinSXS.) -Raymond]</p>
<p>No, this assumption doesn&#39;t hold: a package needs the OS and the system DLLs. Other packages like the CRT should never be incorporated/included in a package (so: good-bye MSM, and good-bye outdated and unfixed &quot;local&quot; DLLs), but instead a dependency declared/defined. NT6.x is already broken down into many independent packages which all reside in %SystemRoot%WinSxS. The missing piece is but a package manager.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-939363">
				<div id="div-comment-939363" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Crescens2k</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20111006-00/?p=9453#comment-939363">
			October 7, 2011 at 10:59 pm</a>		</div>

		<p>RE Windows setup always installing on the C: drive. This is another changable setting in the Windows unattended setup. So a fresh install with no other Windows installs and not starting Windows setup from another install can be installed on any drive letter (probably not including A: or B: for compatability reasons).</p>
<p>In testing this out I did naturally end up with Windows on M: and since it was a VM with no other virtual hard disks, that was the only lettered hard drive partition.</p>
<p>Stefan Kanthak:</p>
<p>And what happens if a situation which has arisen in the past actually strikes an application on the system. An updated version of the CRT gets released and all of a sudden, an application which once worked no longer works. Doing what you say will not give a chance for this application to be fixed easily, it would end up having to be tested for the bugs, patched and then a new version of the executable distributed again, but this could be a program that the source is no longer available, or the developer doesn&#39;t care about anymore. So focing the CRT to be global would thus force either Windows never to update the CRT or just break the application. Allowing the CRT to be local means that all you have to do is copy the appropriate msvcrx.dll file to the application&#39;s directory and that fixes it.</p>
<p>I think the biggest thing to remember is that the CRT on Windows is not treated specially, it isn&#39;t really counted as a system DLL. The only reason why msvcrt.dll exists as it does is because it is what the Windows applications themselves use and so it is protected just for Windows stability. If your view of how the CRT should be comes from the lunix side, then you should just forget about it. Windows&#39; compilation environment just treats them as dependencies.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-939373">
				<div id="div-comment-939373" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Jon Wiswall [MSFT]</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20111006-00/?p=9453#comment-939373">
			October 7, 2011 at 11:33 pm</a>		</div>

		<p>Re the &quot;linked into&quot; comment:</p>
<p>The image-layout technology during setup (WIM, imagex) is responsible for extracting blocks of bytes to names and linking them as necessary. The names and links were discovered during WIM creation time then modified during manufacturing, re-capture, and many other steps between build-creation and hitting your physical disk. The entry saying &quot;these 50kb are c:pffoo.dll and c:windowswinsxsfoo.dll&quot; is identical to &quot;these 50kb are c:windowsfoo.dll and c:pffoo.dll&quot;, so no effort is put into keeping it always windows =&gt; pf. &nbsp;You&#39;re /likely/ to get pf =&gt; windows in images, just based on the order the original image was traversed.</p>
<p>During updates, however, the order is often &quot;place new-version file into c:windowswinsxs, then link from there to where it&#39;s going.&quot; So once a file has gone through an update cycle GFIBHEx is more likely to return &quot;c:windowswinsxsfoo.dll&quot; as the &quot;primary&quot; name than &quot;c:pffoo.dll&quot;. (Note the number of weasel-words; don&#39;t take a dependency on that.)</p>
<p>Curiously, we ran across some parts of the system using GetFileInformationByHandleEx and FileNameInfo to do things like &quot;where are related files for this file?&quot; GFIBHEx uses filesystem data to retrieve that information, not the name used to open the handle you passed it. (That&#39;s long gone.) There was nonzero effort requried to keep those technologies working.</p>
<p>You can always use FindFirstFileName (<a rel="nofollow" target="_new" href="http://msdn.microsoft.com/en-us/library/aa364421(VS.85).aspx" rel="nofollow">msdn.microsoft.com/&#8230;/aa364421(VS.85).aspx</a>) to iterate through the alternate names for a file path.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-939383">
				<div id="div-comment-939383" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Stefan Kanthak</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20111006-00/?p=9453#comment-939383">
			October 8, 2011 at 5:21 pm</a>		</div>

		<p>| An updated version of the CRT gets released and all of a sudden, an application which</p>
<p>| once worked no longer works. Doing what you say will not give a chance for this</p>
<p>| application to be fixed easily, &#8230;</p>
<p>Wrong!</p>
<p>All supported versions of the CRT are installed side-by-side in WinSxS.</p>
<ol>
<li>If an application needs a certain version of the CRT, then tell Windows about it in the applications .MANIFEST</li>
<li>
<p>If this certain version of the CRT is but updated or replaced due to vulnerability fixes: do you REALLY want to use this application any longer? ITS INSECURE!</p>
</li>
<li>
<p>If an application has no .MANIFEST then it was buggy from it&#39;s creation and NEVER should have passed QA.</p>
</li>
<li>
<p>If an administrator but still wants to support such buggy or even insecure applications he can still place DLLs &quot;applocal&quot; and create the necessary *.exe.local.</p>
</li>
</ol>
<p>In short: an application MUST NOT be distributed with any foreign components/packages, but reference them (from WinSxS, &#8230;), because these foreign, &quot;applocal&quot; installed components/packages need (security) updates too. BETTER BE SAFE THAN SORRY.</p>
<p>JFTR: How many developers/companies ship updated versions of their products when a vulnerability is found in a static linked or &quot;applocal&quot; installed component? And how long does it take if they do? How long do they put us, their customers at risk? Knowingly!</p>
<p>navigare necesse est^W^W^Wit&#39;s REALLY time for serious software engineering!</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-939413">
				<div id="div-comment-939413" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Crescens2k</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20111006-00/?p=9453#comment-939413">
			October 9, 2011 at 2:09 pm</a>		</div>

		<p>@Stefan Kanthak</p>
<p>Not all supported versions of the CRT are installed in WinSxS. They reverted back to the old method in VC2010, so the latest version is just in System32, as you would guess, it is also no longer refered to in the application manifest either. So go ahead and apply what you said to that.</p>
<p>Also if there is a vulnerability in a critical business application and you can no longer fix it because the developer is either no longer in business or the business lost the source. Are you seriously saying that you would just stop using the critical business application?</p>
<p>Unfortunately, what you are saying sounds good on paper and in a controlled environment, but this is the real world, there exists things known as idiots. Unfortunately, these entities known as idiots have managed to produce software that entire businesses rely on. The last place I worked relied on a web application which was a clusterf&#8230; of badness. In the time I worked there, I reported seventeen vulnerabilities and well over a hundred bugs, and non of them were fixed, in fact, they introduced more, and they still kept using it. So instead of preaching what must be done here, because really, none of us would disagree, start preaching to the managers and the businesses who supply the money. Who want things done last week even if it means skipping all sorts of tests and are, erm, idiots.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-939423">
				<div id="div-comment-939423" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Gechurch</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20111006-00/?p=9453#comment-939423">
			October 9, 2011 at 9:51 pm</a>		</div>

		<p>Stefan: &quot;That software doesn&#39;t have a manifest. It&#39;s buggy and you should stop using it.&quot;</p>
<p>Other Guy: &quot;But we rely on it for our business to function. And it was written ten years ago&#8230; manifests didn&#39;t even exist back then.&quot;</p>
<p>Stefan: &quot;But it&#39;s INSECURE! Either get an updated version, or find a better program.&quot;</p>
<p>Other Guy: &quot;The software cost us $40,000. I can&#39;t justify that to the powers that be when the current software performs every function we want it to. Heck, I&#39;m not even sure the company that wrote it is still updating it.&quot;</p>
<p>Stefan: &quot;Well it&#39;s outdated and insecure. You should stop using it immediately and switch to something that is secure.&quot;</p>
<p>Other Guy: &quot;We know the other products in this market &#8211; none of them fit our needs as well as the existing product. Besides, we&#39;ve got 200 users that use this software daily, we&#39;ve got internal manuals we&#39;ve written about the software, we have custom-written software that interfaces between it and our finance package etc etc. It would cost $40,000 to replace, would require updated servers to run it, would need hundreds of man-hours rewriting the finance link software, tens of hours rewriting manuals, hundreds of hours plus aggravation retraining staff, it&#39;s a critical system so we&#39;d need to plan months in advance, then pay the IT guys double-time to install it out of hours. Then we&#39;d spend the next few months dealing with teething issues and working around whatever problems we find. Hopefully none of them put our data at risk, or create customer-facing problems.&quot;</p>
<p>Stefan: ???</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-939433">
				<div id="div-comment-939433" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Klimax</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20111006-00/?p=9453#comment-939433">
			October 9, 2011 at 10:21 pm</a>		</div>

		<p>@Crescens2k: Sounds like some articles at TDWTF&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-939453">
				<div id="div-comment-939453" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Cesar</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20111006-00/?p=9453#comment-939453">
			October 10, 2011 at 3:29 am</a>		</div>

		<p>@Stefan Kanthak: &quot;If this certain version of the CRT is but updated or replaced due to vulnerability fixes: do you REALLY want to use this application any longer? ITS INSECURE!&quot;</p>
<p>What if the vulnerability was in a function in the CRT that application does not use? The CRT has hundreds of functions, no application will use all of them.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-939463">
				<div id="div-comment-939463" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Danny</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20111006-00/?p=9453#comment-939463">
			October 10, 2011 at 7:00 am</a>		</div>

		<p>@alegr1</p>
<p>For how much money we talk about?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-939613">
				<div id="div-comment-939613" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Stefan Kanthak</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20111006-00/?p=9453#comment-939613">
			October 10, 2011 at 5:41 pm</a>		</div>

		<p>| Other Guy: &quot;But we rely on it for our business to function.</p>
<p>If your business relies on it, then you sure have a service contract with the manufacturer/programmer!</p>
<blockquote><p>
  And it was written ten years ago&#8230; manifests didn&#39;t even exist back then.&quot;
</p></blockquote>
<ol>
<li>Wrong. Windows XP was released ten years ago and introduced manifests.</li>
<li>
<p>The MSCRT (for example) that installed into WinSxS and needed manifests was released in 2004/2005 and 2007/2008.</p>
</li>
</ol>
<p>Yoou should have done your homework!</p>
<p>| Other Guy: &quot;The software cost us $40,000. I can&#39;t justify that to the powers that be when the current software performs every function we want it to. Heck, I&#39;m not even sure the company that wrote it is still updating it.&quot;</p>
<p>That&#39;s why you resp. the powers that be made a contract with that company to ensure maintenance and updates! You spent $40,000 but forgot the service contract?</p>
<p>| Other Guy: &#8230; It would cost $40,000 to &#8230; (and more weaseling around &#8230;)</p>
<p>It might cost you WELL more than just $40,000 if someone exploits this insecure software and gets access to your crown jewels (or even destroys them) or just sabotages its function. Then you have a REAL problem. If you process personal data you&#39;ll have to inform the authorities after a breach. And might be faced with legal action. You KNEW that your software was insecure. It was your task to ensure safe and secure operation. But you did nothing to fix that insecurity.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-939623">
				<div id="div-comment-939623" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Stefan Kanthak</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20111006-00/?p=9453#comment-939623">
			October 10, 2011 at 5:49 pm</a>		</div>

		<p>| What if the vulnerability was in a function in the CRT that application does not use?</p>
<p>| The CRT has hundreds of functions, no application will use all of them.</p>
<p>If only ONE of the installed applications uses the vulnerable function you&#39;ll have to act: either update/remove the vulnerable CRT OR remove that (vulnerable) application.</p>
<p>If not (but how do you know? Do you have the source?), you can carry on. But don&#39;t forget: every time you install or update one of your applications you&#39;ll have to check again.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-939643">
				<div id="div-comment-939643" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Stefan Kanthak</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20111006-00/?p=9453#comment-939643">
			October 10, 2011 at 6:16 pm</a>		</div>

		<p>| They reverted back to the old method in VC2010.</p>
<p>Right, I forgot about that.</p>
<p>But since you know that: you evaluated that business critical software you use which relies on VC2010 and made service contracts with both its vendor and the vendor of the components it uses (Microsoft)?</p>
<p>| Are you seriously saying that you would just stop using the critical business application?</p>
<p>If I can no longer operate that business critical application in a safe and secure way I&#39;ll shut it down. Remember: its business critical, so it has to be safe and secure!</p>
<div class="post">[<i>You&#39;re not even talking about a security vulnerability that can be proved to exist. You&#39;re shutting down the company based on a triple hypothetical! &quot;Maybe this program uses a function that has a vulnerability, and maybe this vulnerability is exploitable, and maybe the exploit can be triggered from outside the company.&quot; I hope all the employees you just fired will understand that this was the only safe option. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-939663">
				<div id="div-comment-939663" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Crescens2k</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20111006-00/?p=9453#comment-939663">
			October 10, 2011 at 7:11 pm</a>		</div>

		<p>&quot;But since you know that: you evaluated that business critical software you use which relies on VC2010 and made service contracts with both its vendor and the vendor of the components it uses (Microsoft)?&quot;</p>
<p>Alas, this is another place where idiots come in. You can never put it past some people to use the managers nephew to write the business critical software. Or use an employee to do the writing and they go and move jobs, 10 years later the critical business application suddenly starts showing interesting issues, but nobody knows where the person who wrote the application is anymore and they either took the source with them or it is so bad nobody can understand it.</p>
<p>This is real life, you don&#39;t always have support contracts or means to do proper bug testing. If you go to The Daily WTF you will read all sorts of stories about this. Just to emphasise, THIS IS REAL LIFE.</p>
<p>As for shutting down the business critical application, you really are talking like you have never worked in a real world environment with idiots. Do you think a manager would be happy you shut down the business critical application just because it is insecure? You are more likely to get a warning or get fired. If you are a manager yourself, then you will have to explain to all of your employees why they now have to do everything the hard way, or even why they can no longer do some things. You have to explain to your customers why you can no longer provide the services, and watch them go elsewhere and then you start losing lots of money. Or if you are a not for profit organisation, then you can watch as your funding gets taken away as someone else who is much more capable at doing the service which you are no longer capable of doing comes along. Remember: it is business critical, so a good part of your operations depends on it, so by shutting it down, you are effectively crippling your business.</p>
<p>Would you be happy as a customer if you went to a supermarket and they refused your service after spending lots of time getting your shopping because they shut down all of their servers because of an issue? My supermarket doesn&#39;t do that, there is still one major issue with the self service checkouts that if you really know what you are doing you can easily get free items, and this is one issue in a series of other major issues which the supermarket never stopped using the self service checkouts for. Also, another store near me recently was forced to shut for half a day recently due to major problems (the stock control server died pretty badly), when I passed it that day, you could hear a few people being really annoyed, some even were throwing around a few insults. So it annoyed the customers, how much in profits did that store also lose in the afternoon? Quite a bit I&#39;d imagine, so now what would be the stock holders reaction to the loss in profit if you shut down the entire chain because there was a security vulnerability found in the systems and you decided to shut them all down? I would think you would see some rather annoyed people.</p>
<p>So unfortunately, what you say really does make a lot of sense, but applying it to real life doesn&#39;t work. Operating a money making business means you just can&#39;t stop because there is a vulnerability in something since you will lose money, lose too much and you go under. Operating a business which provides a service to people also can&#39;t just stop because there is a vulnerability because people rely on you and they will go elsewhere, meaning you go under. Also just shutting down the software because of a vulnerabulity doesn&#39;t mean that you can get it back any time soon, in your scenario, it would have to be triaged, tested, fixed, QAd and then deployed. How long would this take? From what I can tell, it takes Microsoft months to go through this process for Windows vulnerabilities, so would you shut down the business for months because of a vulnerability? If not then would you rush it? If you rush it what steps would you skip?</p>
<p>I&#39;m not entirely sure, but isn&#39;t one of the most important parts of running a business actually staying in business? If you shut down your entire business because the critical software developed issues, then you are just asking for your company to go under.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-939703">
				<div id="div-comment-939703" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Stefan Kanthak</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20111006-00/?p=9453#comment-939703">
			October 11, 2011 at 6:24 am</a>		</div>

		<p>[You&#39;re not even talking about a security vulnerability that can be proved to exist. You&#39;re shutting down the company based on a triple hypothetical! &quot;Maybe this program uses a function that has a vulnerability, and maybe this vulnerability is exploitable, and maybe the exploit can be triggered from outside the company.&quot; I hope all the employees you just fired will understand that this was the only safe option. -Raymond]</p>
<p>Of course I do!</p>
<p>&quot;If I can no longer operate that business critical application safe and secure&quot; means:</p>
<p>&#8211; it&#39;s definitely vulnerable</p>
<p>&#8211; it&#39;s definitely exploitable</p>
<p>&#8211; there is a non-neglectable risk that some bad guy (which may come from outside, but can already be with the company) can run the exploit.</p>
<p>Cf. diginotar.nl: they WERE shut down!</p>
<div class="post">[<i>&quot;Safe and secure&quot; is rarely an absolute. You seem to treat it as a boolean. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-939713">
				<div id="div-comment-939713" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Stefan Kanthak</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20111006-00/?p=9453#comment-939713">
			October 11, 2011 at 6:40 am</a>		</div>

		<p>&quot;Operating a money making business means you just can&#39;t stop because there is a vulnerability in something since you will lose money, lose too much and you go under. Operating a business which provides a service to people also can&#39;t just stop because there is a vulnerability because people rely on you and they will go elsewhere, meaning you go under. Also just shutting down the software because of a vulnerabulity doesn&#39;t mean that you can get it back any time soon, in your scenario, it would have to be triaged, tested, fixed, QAd and then deployed. How long would this take?&quot;</p>
<p>Welcome to real life!</p>
<p>Or as Charles Darwin put it: &quot;survival of the fittest&quot;.</p>
<p>You&#39;ll lose money (your money, or your customers money?) when you stop your business, and you&#39;ll lose money (your money, or your customers money?) if you continue your business and someone exploits the vulnerability. You&#39;ll have to evaluate both the risk and the possible loss(es).</p>
<p>And yes, creating reliable, safe and secure software takes quite some time: until it&#39;s done, properly done.</p>
<p>That&#39;s what software engineering is all about!</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-939923">
				<div id="div-comment-939923" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Crescens2k</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20111006-00/?p=9453#comment-939923">
			October 11, 2011 at 2:02 pm</a>		</div>

		<p>&quot;Or as Charles Darwin put it: &quot;survival of the fittest&quot;.&quot;</p>
<p>And that alone means that unless it is a vulnerability which is easy to trigger with 100% success, you don&#39;t shut down the business critical software. Customers are selfish, they will go elsewhere because of the slightest things. If this kind of vulnerability is found, but only a handful of trustworthy people find it, then you keep going regardless with the vulnerability still present, because customers are much more important to survival. If the vulnerability is externally exploitable, then you usually do your best to minimise the damage and carry on, rushing fixes and then dealing with the fallout later.</p>
<p>&quot;And yes, creating reliable, safe and secure software takes quite some time: until it&#39;s done, properly done.&quot;</p>
<p>The software is written by humans, so is it really reliable, safe and secure? As Raymond rightly said &quot;&quot;Safe and secure&quot; is rarely an absolute&quot;. Just because you haven&#39;t found any problems in the software, doesn&#39;t mean that no problems exist. It is the problems that you don&#39;t know exists which will always be the biggest issues, someone else could find it and start exploiting it and it will take you some time to figure it out. So this means that just running software is enough to introduce the uncertenty of bugs into the environment, and would you just not run the business critical software because of the potential of bugs? But at the same time, assuming that a piece of software with no known bugs is safe and secure is also extremely foolish. The only applications that you can guarantee is safe and secure are the trivial ones, like hello world, even if you mathematically prove the safety and security of the algorithms used, you can&#39;t prove the implementations are bug free, and no matter how much you test you will always miss corner cases which could be where the bug is residing. So is any complex software really safe and secure?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-940043">
				<div id="div-comment-940043" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Stefan Kanthak</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20111006-00/?p=9453#comment-940043">
			October 11, 2011 at 5:43 pm</a>		</div>

		<p>[&quot;Safe and secure&quot; is rarely an absolute. You seem to treat it as a boolean. -Raymond]</p>
<p>I dont, even if it seems so.</p>
<p>One of the very simple metrics is: if an attack gains more than it costs the attacked system is insecure.</p>
<p>Now you&#39;ll have to evaluate gains and costs&#8230;</p>
<p>OTOH: your company fixes vulnerabilities even if there are no known exploits yet. The fixes but can be analyzed then and exploits built. What is your advice for a customer whose business critical software needs this fix, but breaks if the fix is installed?</p>
<div class="post">[<i>Customers already know what to do: Complain to Microsoft that <a href="http://blogs.msdn.com/b/oldnewthing/archive/2007/05/04/2402028.aspx" rel="nofollow">the security fix broke a program</a>, and ask for a revised fix that preserves compatibility. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-940063">
				<div id="div-comment-940063" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Stefan Kanthak</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20111006-00/?p=9453#comment-940063">
			October 11, 2011 at 5:56 pm</a>		</div>

		<p>| And that alone means that unless it is a vulnerability which is easy to trigger with 100% success, you don&#39;t shut down the business critical software.</p>
<p>How do you measure 100% success? Just like 100% security?</p>
<p>| That&#39;s what software engineering is all about!</p>
<p>Please inform yourself about software engineering. Or engineering.</p>
<p>This is about &quot;how to build (complex) systems which meet their specs&quot;. And about &quot;how to write specs&quot; to define your goals/requirements, like reliability, safety, security, integrity. And the test cases.</p>
<p>If properly done, even complex software meets their specs and is then &quot;safe, secure, &#8230;&quot; according to the requirements.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-940073">
				<div id="div-comment-940073" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Stefan Kanthak</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20111006-00/?p=9453#comment-940073">
			October 11, 2011 at 6:22 pm</a>		</div>

		<p>| would you just not run the business critical software because of the potential of bugs?</p>
<p>That was NOT the prerequisite!</p>
<p>You came up with &quot;An updated version of the CRT gets released and all of a sudden, an application which once worked no longer works.&quot;</p>
<p>My assumptions are:</p>
<ol>
<li>this update fixes a vulnerability (which almost all updates of the CRT do);</li>
<li>
<p>the business critical software uses the vulnerable subroutines of the CRT.</p>
</li>
</ol>
<p>So you have an ACTUAL vulnerability here, not just a potential one.</p>
<p>JFTR: there are some thousand potential (really silly, therefore easy to fix) bugs/vulnerabilities in the Windows registry alone (from 2000 to 7).</p>
<p>If you want to have some real vulnerabilities of this kind just install .NET Framework 2.0, then uninstall it.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-940153">
				<div id="div-comment-940153" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">ender</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20111006-00/?p=9453#comment-940153">
			October 12, 2011 at 2:44 am</a>		</div>

		<p>I wish I lived in the same world that Stefan does, instead of having to maintain customer networks that still run business-critical programs written in Clipper (then again, maybe I don&#39;t &#8211; I&#39;d probably have less work to do).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-940253">
				<div id="div-comment-940253" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">640k</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20111006-00/?p=9453#comment-940253">
			October 12, 2011 at 8:47 am</a>		</div>

		<p>@Butch: And like GetProfilesDirectory(), %ProgramFiles% cannot refer to multiple directories and whould break if you try to adress programs in different directories, thus all batchfiles which use this variable to refer to programs would break.</p>
<p>Then use %ProgramFiles(x86)%</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-940283">
				<div id="div-comment-940283" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Stefan Kanthak</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20111006-00/?p=9453#comment-940283">
			October 12, 2011 at 9:12 am</a>		</div>

		<p>| Customers are selfish, they will go elsewhere because of the slightest things.</p>
<p>Right. If customers come to know sloppy a company works with their personal data, how bad their personal data is protected there or how vulnerable their IT systems are, they&#39;ll most probably run.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-940403">
				<div id="div-comment-940403" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Deduplicator</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20111006-00/?p=9453#comment-940403">
			October 12, 2011 at 4:28 pm</a>		</div>

		<p>@Kanthak:</p>
<p>Where do they run?</p>
<p>Please explain the success of:</p>
<ul>
<li>Apples IPad (Did store where you (and it) was)</li>
<li>
<p>Facebook/StudiVZ/&#8230; (Default: everything shared, and always adding new ways to expose your data you have to disable, and won&#39;t ever delete your profile)</p>
</li>
<li>
<p>What about SWIFT / PNRs and other personal information submitted by the EU to the USA where it is stored forever and available to any official willing to peek)</p>
</li>
<li>
<p>What about all the <em>security</em> laws trying to protect you against your personal freedom and freedom against government harassment (Applebaum anyone?)</p>
</li>
</ul>
<p>(This is a small non-representative sample, which could be expanded for many pages.)</p>
<p>BTW: That&#39;s all going a bit far afield&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>