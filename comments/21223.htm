<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (28)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-657753">
				<div id="div-comment-657753" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">AndyB</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080815-00/?p=21223#comment-657753">
			August 15, 2008 at 10:19 am</a>		</div>

		<p>Something I think we can all agree on: Pingbacks suck.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-nathan_works odd alt thread-odd thread-alt depth-1" id="comment-657763">
				<div id="div-comment-657763" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/nathan_works' rel='external nofollow' class='url'>nathan_works</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080815-00/?p=21223#comment-657763">
			August 15, 2008 at 10:32 am</a>		</div>

		<p>Now this adds something much more interesting to why we&#8217;d use an iterator discussion from earlier. I like the state machine idea.. Though I don&#8217;t know if I could apply it regularly in my work (nor iterators for that matter, which is why I didn&#8217;t grasp their use easily..)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-657773">
				<div id="div-comment-657773" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Josh</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080815-00/?p=21223#comment-657773">
			August 15, 2008 at 10:34 am</a>		</div>

		<p>All I want to know is what is up with the Chinese and their funny wallpaper&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-657793">
				<div id="div-comment-657793" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">John</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080815-00/?p=21223#comment-657793">
			August 15, 2008 at 12:06 pm</a>		</div>

		<p>Maybe somebody wrote a pingback iterator in C# and forgot to include an exit condition.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-657803">
				<div id="div-comment-657803" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Programmerman</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080815-00/?p=21223#comment-657803">
			August 15, 2008 at 12:57 pm</a>		</div>

		<p>I already miss CLR week. &nbsp;I look forward to next time.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-ericlippert odd alt thread-odd thread-alt depth-1" id="comment-657813">
				<div id="div-comment-657813" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Eric+Lippert' rel='external nofollow' class='url'>Eric Lippert</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080815-00/?p=21223#comment-657813">
			August 15, 2008 at 1:18 pm</a>		</div>

		<p>A plea from the compiler team:</p>
<p>Though it is assuredly the case that you CAN use iterators to implement state machines, poor-mans coroutines, and so on, I wish people would not do so.</p>
<p>Please use tools for the purposes for which they were intended. If you want to write state machines, write yourself a library that is designed specifically to solve that general problem and then use it. &nbsp;</p>
<p>Using tools for purposes other than what they were intended for is &quot;clever&quot;, and clever is bad; clever is hard for maintenance programemrs to understand, clever is hard to extend, clever is hard to reason about, clever makes people think &quot;out of the box&quot;; there&#8217;s good stuff in that box.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-657843">
				<div id="div-comment-657843" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://fff' rel='external nofollow' class='url'>fff</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080815-00/?p=21223#comment-657843">
			August 15, 2008 at 1:53 pm</a>		</div>

		<p>Dear Americans! I write to you from Russia, because of bad knowledge of English I write through the electronic dictionary. Your Government deceives you, there are no forces already to look at it. Open at last eyes! Not Russia has attacked South Ossetia! Georgia has begun on August, 8th bombardment of Tskhinvali in the morning! Was lost more than 2 thousand civilians!!!!! The Georgian military men shot at the Russian peacemakers!!!! President of Georgia is a project of your government, created against Russia!!!! The instructions of the beginning of military operations have given the Government of the USA!!! If you really wish to know the truth, I urge you to take English &#8211; the Russian dictionary and to look the information on the Russian sites with news! Do not allow to your government to launch new war!!!! Consequences can be catastrophic!!!! We do not want war!!!!!!!! If to arise questions, write to me <a href="mailto:voron_sergey@mail.ru">voron_sergey@mail.ru</a></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-657853">
				<div id="div-comment-657853" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">fffff</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080815-00/?p=21223#comment-657853">
			August 15, 2008 at 2:16 pm</a>		</div>

		<p>Dear Russians, I write to you from America. Stay on topic.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-657863">
				<div id="div-comment-657863" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Daniel Colascione</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080815-00/?p=21223#comment-657863">
			August 15, 2008 at 2:16 pm</a>		</div>

		<p>Eric, at least in Python, iterators come in handy for all sorts of tasks other than iterating over containers, and using them doesn&#8217;t lead to maintainability problems. What&#8217;s the problem if the feature works as intended?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-657873">
				<div id="div-comment-657873" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://marksowul.com' rel='external nofollow' class='url'>Mark Sowul</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080815-00/?p=21223#comment-657873">
			August 15, 2008 at 3:20 pm</a>		</div>

		<p>Eric&#8217;s point is that cleverness leads to maintainability problems. &nbsp;See also: just about every post on this blog explaining why something is strange in Win32.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-657883">
				<div id="div-comment-657883" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Moderation Required</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080815-00/?p=21223#comment-657883">
			August 15, 2008 at 3:41 pm</a>		</div>

		<p>Our national nightmare may be over. The nightmare of pingback spam and off-topic postings is just beginning.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-jamesnt odd alt thread-odd thread-alt depth-1" id="comment-657893">
				<div id="div-comment-657893" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/JamesNT' rel='external nofollow' class='url'>JamesNT</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080815-00/?p=21223#comment-657893">
			August 15, 2008 at 4:00 pm</a>		</div>

		<p>Lord Chen,</p>
<p>Thank you, sir, for the excellent series on Iterators in C#. &nbsp;This will actually help me solve some problems.</p>
<p>I must say, though, that I will consider my life complete if you ever make a blog series using Visual Basic as the language.</p>
<p>JamesNT</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-657903">
				<div id="div-comment-657903" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">ton</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080815-00/?p=21223#comment-657903">
			August 15, 2008 at 4:42 pm</a>		</div>

		<p>Raymond you really must start doing more .NET &nbsp;articles. Your technical insights are some of the better ones I&#8217;ve read. The fact is most developers don&#8217;t work anymore with Application Binary interfaces and assembly oops I mean</p>
<p>Win 32 and C. Oh well if you&#8217;re only interested in history do the best history you can&#8230; :-)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-657933">
				<div id="div-comment-657933" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Worf</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080815-00/?p=21223#comment-657933">
			August 16, 2008 at 2:09 am</a>		</div>

		<p>@Eric: unfortunately, Raymond has already posted several million examples of people doing just that here, except in Win32. Your attempt at stopping developers will fail, unfortunately, and you&#8217;ll have compiler legacy patches that&#8217;ll rival Raymond and the Shell team :-). Welcome to the club.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-657943">
				<div id="div-comment-657943" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Alan</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080815-00/?p=21223#comment-657943">
			August 16, 2008 at 2:54 am</a>		</div>

		<p>Raymond, please do post more .NET articles. These were a joy to read and who knows how much more treasures you may have up your sleeve. You could even have a C# Month next time rather than just a CLR Week ;)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-657963">
				<div id="div-comment-657963" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Merus</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080815-00/?p=21223#comment-657963">
			August 16, 2008 at 7:19 am</a>		</div>

		<p>Thank you for the .Net discussion, Eric. Ignore the haters.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-657983">
				<div id="div-comment-657983" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blog.henning.makholm.net/' rel='external nofollow' class='url'>Henning Makholm</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080815-00/?p=21223#comment-657983">
			August 16, 2008 at 1:12 pm</a>		</div>

		<p>This does look ingenious, at first.</p>
<p>However, typically if your design leads you to think &quot;state machine&quot;, the state diagram you have in mind will not be one that corresponds to the control flow of a structured procedure. For example, if the state diagram happens to contain a multiple-entry loop &#8212; not unusual for protocol state machines &#8212; it cannot be coded with structured control primitives at all.</p>
<p>Trying to shoehorn your intended state machine into an iterator body is likely to lead you to either indiscriminate use of goto, or to explicit state variables that interact with with the apparent control-flow structure. In either case you&#8217;ll be better off coding the state machine honestly and explicitly.</p>
<p>The real trap is if the state machine initially is nice enough to be coded as an iterator body, but later in the lifetime of the application grows warts for some reason. If the rest of the application is coded to view the state machine as if it was an iterator, you&#8217;re going to end up with a hard-to-understand design for no good reason.</p>
<p>So if you do use the iterator trick, at the very least encapsulate it with a class such that its iterator-ness is not visible from the outside.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-657993">
				<div id="div-comment-657993" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">divil5000@hotmail.com</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080815-00/?p=21223#comment-657993">
			August 17, 2008 at 6:55 am</a>		</div>

		<p>I wish there were more .net content on here. Whether it&#8217;s a CLR month, or (preferably) more than one CLR week per year.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-658003">
				<div id="div-comment-658003" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Michael J</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080815-00/?p=21223#comment-658003">
			August 17, 2008 at 10:09 am</a>		</div>

		<p>Pardon my ignorance as a humble C++ hacker, with approximately zero C# experience, but the C# iterator code looks like pure spaghetti!</p>
<p>I&#8217;ve never heard of &#8220;yield return&#8221;, but can guess what it does from the context. &nbsp;As a language construct, it seems like a recipe for trouble.</p>
<p>The &#8220;case 0: goto resume$0;&#8221; construct causes flashing red lights in my head. &nbsp;Jumping into a for loop seems beyond scary.</p>
<p>I remember code like this in the Fortran IV days and with old versions of BASIC (before BASIC morphed into a variant of Pascal). &nbsp;I also remember the long hours trying to unravel the intent of an old programmer who created the code.</p>
<p>That is why we adopted &#8220;Structured Coding&#8221; and other such niceties.</p>
<p>Now I&#8217;m not suggesting that the designers of C# were fools &#8212; I&#8217;m sure they had some rationale for this stuff, but from my humble vantage I am completely unable to see it.</p>
<p>Michael J</p>
<div class="post">[<i>If you look at the code the C++ compiler generates for exceptions, that looks like spaghetti too. (A &#8220;goto&#8221; into the middle of another function!?) Does that mean exceptions violate the principles of structured programming? Heck, if you look at the implementation of &#8220;for&#8221; it&#8217;s full of goto&#8217;s too! -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-658013">
				<div id="div-comment-658013" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Anon (Writing on topic from Great Britain)</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080815-00/?p=21223#comment-658013">
			August 17, 2008 at 10:20 am</a>		</div>

		<p>@ Eric Lippert</p>
<p>I&#8217;m really glad you said that. I&#8217;ve done a fair bit in VHDL, where the &quot;synchronous state machine&quot; is bread and butter.</p>
<p>This stuff with iterators makes me nervous. In VHDL there are some &quot;little things&quot; which are extremely useful, but if you&#8217;re lax you get a nightmare. Do do that with whole machines seems scary.</p>
<p>IME State machines that are explicit are good. By the time you have the pipeline involved, the last thing you want doubts about is what exactly the machine is doing, you&#8217;re much more worried about when it&#8217;s doing it.</p>
<p>Coming from the position of a very conservative C/C++ perspective, I was reading the article of Stuart Leeks and thinking that these people doing C# are just violating all the general rules of systematic thinking and it&#8217;s seen as acceptable.</p>
<p>To hear that the compiler team frown upon this gives me great confidence that the world is not going mad, and calling good sense bad.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-658023">
				<div id="div-comment-658023" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Erzengel</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080815-00/?p=21223#comment-658023">
			August 17, 2008 at 10:29 am</a>		</div>

		<p>divil said &quot;more than one CLR week per year&quot;</p>
<p>I totally agree with this. As much as I like C++/Win32 and use it, I also write a lot of tools in C#. Raymond has great insight into both of these arenas.</p>
<p>Michael J: You should see some of the stuff I see and have to do in C++.</p>
<p>The thing that makes it not scary is that you don&#8217;t actually have to do that. With yield return, everything is abstracted away. Similarly to how the actual implementation of virtual functions might be a bit scary (a pointer to a table with pointers to functions. With a lot of other goop necessary for the variations on polymorphism such as multiple bases, deadly diamonds, etc), but it isn&#8217;t for us C++ users because the compiler does all the work.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-658053">
				<div id="div-comment-658053" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://lambert.geek.nz/' rel='external nofollow' class='url'>Miral</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080815-00/?p=21223#comment-658053">
			August 17, 2008 at 8:53 pm</a>		</div>

		<p>I wish it was a .NET fortnight. &nbsp;Or month, even :) &nbsp;Or, yeah, more than one week per year. &nbsp;This is all fascinating stuff.</p>
<p>Encore!</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-658123">
				<div id="div-comment-658123" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://visualstudiohacks.com/blog/visual-studio-links-66/' rel='external nofollow' class='url'>Visual Studio Hacks</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080815-00/?p=21223#comment-658123">
			August 18, 2008 at 7:55 am</a>		</div>

		<p>My latest in a series of the weekly, or more often, summary of interesting links I come across related to Visual Studio. Greg Duncan posted a link to the release announcement for Task Board for Team System Beta 2 . Raymond Chen discussed the implementation</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-658133">
				<div id="div-comment-658133" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://marksowul.com' rel='external nofollow' class='url'>Mark Sowul</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080815-00/?p=21223#comment-658133">
			August 18, 2008 at 9:35 am</a>		</div>

		<p>+1 to ignoring C# haters and more frequent .NET content.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-jamescurran even thread-even depth-1" id="comment-658213">
				<div id="div-comment-658213" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Garry Trinder</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080815-00/?p=21223#comment-658213">
			August 18, 2008 at 11:36 am</a>		</div>

		<p>Hmm&#8230; natural now the CLR week is over, it finally occurs to me that this would have been the perfect time pose a question that has puzzled me for some time:</p>
<p>In .Net languages, reference types are stored in one place in memory, while value type are stored in another. &nbsp;These places are generally referred to, respectively, as &quot;The Heap&quot; and &quot;The Stack&quot;, mainly because, &nbsp;there closest analogs back in C coding of the 1980&#8217;s were implemented using, respectively, a heap data structure, and a stack data structure.</p>
<p>So, my question is, In the current CLR implementation, is the Heap still a heap? and is the Stack still a stack?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-658473">
				<div id="div-comment-658473" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://http:://myfirstrealcsharproject.blogspot.com' rel='external nofollow' class='url'>peterchen</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080815-00/?p=21223#comment-658473">
			August 19, 2008 at 8:55 am</a>		</div>

		<p>Like anythging great, .NET week was good and to short.</p>
<blockquote><p>
  &gt; In the current CLR implementation, is the Heap still a heap? and is the Stack still a stack?
</p></blockquote>
<p>I don&#8217;t know implementation details, but as I understand yes.</p>
<p>The heap has evovled &#8211; objects are relocatable and garbage collected and kept in different pools depending on size and age, but in the sense of &quot;a heap of available memory from which dynamic memory allocations are taken&quot;, yes.</p>
<p>IL itself is stack-based, so I guess that&#8217;s where the value type are, too.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-ericlippert even thread-even depth-1" id="comment-659273">
				<div id="div-comment-659273" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Eric+Lippert' rel='external nofollow' class='url'>Eric Lippert</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080815-00/?p=21223#comment-659273">
			August 19, 2008 at 4:25 pm</a>		</div>

		<p>The idea that &quot;value types are on the stack&quot; is a myth. &nbsp;Value types are frequently not on &quot;the stack&quot; &#8212; when they are fields of reference types, for example, or locals hoisted into a closure by an iterator or anonymous function.</p>
<p>But even given that, &quot;the stack&quot; and &quot;the heap&quot; are implementation details. The CLR gives you a memory model where you do not have to care about how the underlying implementation is managing storage.</p>
<p>And besides, the original point of &quot;the stack&quot; vs &quot;the heap&quot; was that stack was cheap, heap was expensive. Anders jokes sometimes that &quot;the heap is the new stack&quot;, and though it&#8217;s a joke, it&#8217;s also serious. &nbsp;Heap allocation in the CLR is pretty cheap and the cost of collection is also pretty cheap when amortized over the runtime of the program.</p>
<p>So don&#8217;t worry; love the heap.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-660693">
				<div id="div-comment-660693" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blogs.dirteam.com/blogs/mjohnson/archive/2008/08/21/interesting-links-8-21-2008.aspx' rel='external nofollow' class='url'>Matt Johnson's Technical Adventures</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080815-00/?p=21223#comment-660693">
			August 21, 2008 at 3:21 pm</a>		</div>

		<p>The Old New Thing : The implementation of iterators in C# and its consequences (part 3) Notes from a</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>