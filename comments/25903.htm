<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (42)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment byuser comment-author-rosyna even thread-even depth-1" id="comment-528993">
				<div id="div-comment-528993" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Rosyna</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070723-00/?p=25903#comment-528993">
			July 23, 2007 at 10:58 am</a>		</div>

		<p>I wouldn&#8217;t consider good error checking to be backwards compatibility hacks.</p>
<p>But, how different would Windows be if it didn&#8217;t have to take backwards compatibility for undocumented behaviour into consideration when improving features? Well, I guess it&#8217;d partially be Windows x64 which could have tossed most backwards compatibility hacks if the app was 64-bit since obviously those apps don&#8217;t need backwards compatibility with anything.</p>
<div class=post>[<i>In other words, you want to make it harder for people to port their programs to 64-bit Windows. &#8220;I have this program that works just fine on 32-bit Windows, but it crashes randomly on 64-bit Windows. 64-bit Windows is so buggy.&#8221; -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-529003">
				<div id="div-comment-529003" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">CGomez</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070723-00/?p=25903#comment-529003">
			July 23, 2007 at 11:10 am</a>		</div>

		<p>So what is it exactly about Vista that is making life harder for people?</p>
<p>Let&#8217;s ignore for the moment that people just might not get it. &nbsp;You&#8217;ve said many times, when people have problems, they blame the OS.</p>
<p>My basic theory is that since Vista pushes the &quot;standard user&quot; login, many applications that are still writing to Program Files and HKLM are broken, and were always broken (people just ran as admin) and it&#8217;s easy to just blame Vista. &nbsp;Games are notorious for &quot;requiring Admin privileges&quot; to cover up for lazy developers. &nbsp;You can even see this requirement on the box of some of the top-selling games of all time.</p>
<p>Is this just that particular competitors made enough funny but inaccurate commercials? &nbsp;After all, I made zero upgrades, haven&#8217;t seen a UAC prompt for ages, and still use all of my peripherals but one from a nasty vendor who has simply decided to drop support.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-529013">
				<div id="div-comment-529013" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Adrian</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070723-00/?p=25903#comment-529013">
			July 23, 2007 at 11:18 am</a>		</div>

		<p>Another cost of the backward compatibility hacks is that they hide bugs, making it much harder to find them. &nbsp;Defensive code is great, but not in your debug builds.</p>
<p>If my QueryInterface is messed up, it may be because of a deeper problem. &nbsp;Fixing up the HRESULT may mask the problem, reducing the chance it&#8217;ll get noticed it or extending the time it would take to diagnose it.</p>
<p>Are there debug versions of core system DLLs (kernel, user, gdi, etc.) that developers can use while debugging? &nbsp;It would be cool if you could enable something assertion-like that would notify developers every time a compatibility hack saved their butts.</p>
<div class=code>[<i>Debug versions of Windows have been included with the SDK since Windows 1.0. Just goes to show that even if you make it available, nobody will use it. And then they&#8217;ll complain that you didn&#8217;t make it available. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-rosyna odd alt thread-odd thread-alt depth-1" id="comment-529033">
				<div id="div-comment-529033" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Rosyna</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070723-00/?p=25903#comment-529033">
			July 23, 2007 at 11:47 am</a>		</div>

		<p>Raymond, no, it&#8217;s about enforcing the documentation. The app developer is going to have to recompile their application for x64 anywho, why not take the opportunity to make it bet? I mean, I thought the SDL features were also about making things more secure, which may mean old hacks didn&#8217;t work.</p>
<p>And I&#8217;m not sure I understand, if you go x64 on windows, a lot of features are automatically enabled by default (especially security ones). They&#8217;re disabled by default (like DEP in IE7) on 32-bit due to backwards compatibility issues.</p>
<div class=post>[<i>Engineering is all about trade-offs. Sometimes it tips one way, sometimes it tips the other way. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-mike-dimmick even thread-even depth-1" id="comment-529043">
				<div id="div-comment-529043" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Mike+Dimmick' rel='external nofollow' class='url'>Mike Dimmick</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070723-00/?p=25903#comment-529043">
			July 23, 2007 at 12:17 pm</a>		</div>

		<p>@CGomez: If Windows Vista&#8217;s UAC is enabled, and an application is run which doesn&#8217;t have a requiredExecutionLevel in its manifest (or no manifest at all), file system and registry redirection kick in. These redirect writes to some per-machine areas of the file system (e.g. Program Files, Windows) and the registry (e.g. HKLMSoftware) to separate per-user stores. In Windows Explorer, you get a Show Compatibility Files button if there&#8217;s a corresponding redirect folder for the current folder.</p>
<p>If UAC is disabled the ACLs are processed and an Access Denied error may be generated.</p>
<p>If a UAC-compatible manifest is present which sets a requiredExecutionLevel (asInvoker, highestAvailable, requireAdministrator) then, if the user allows the program to run (if highestAvailable or requireAdministrator), the redirects do not occur &#8211; you are expected to have fixed your program. As such you&#8217;ll get Access Denied if you try to write to privileged locations (and you&#8217;ve not change the default ACLs).</p>
<p>UAC isn&#8217;t actually that hard to understand for a developer.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-529063">
				<div id="div-comment-529063" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">markus</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070723-00/?p=25903#comment-529063">
			July 23, 2007 at 12:28 pm</a>		</div>

		<p>Don&#8217;t forget the cost to any newcomer when learning the API, since old API concepts, and calls/argument types/result types still linger around a long after after they are obsolete. To understand such an &quot;organically grown&quot; API, you effectively have to understand many of the preceding versions, even if they are totally irrelevant today.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-mike-dimmick even thread-even depth-1" id="comment-529073">
				<div id="div-comment-529073" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Mike+Dimmick' rel='external nofollow' class='url'>Mike Dimmick</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070723-00/?p=25903#comment-529073">
			July 23, 2007 at 12:30 pm</a>		</div>

		<p>Oh, and the technical reason is that the colour part of the NTSC signal only carries so-called &#8216;chroma&#8217; information. The black-and-white &#8216;luma&#8217; signal is used as the actual value for one of the colours (green, IIRC) and the chrominance subcarrier (which is filtered out by a black-and-white TV&#8217;s tuning circuits) contains only the differences between the levels of the other colours and the luminance level. This has the useful additional effect of generally reducing the bandwidth required for the chroma signal.</p>
<p>PAL works much the same except that the phase of the chroma signal is inverted for each line compared to the previous one (hence Phase Alternating Line) to reduce the effect of noise. The French SECAM system has a compatible mono signal but encodes the colour differently, so UK receivers, if able to pick up a signal, could traditionally only see a monochrome picture (nowadays European receivers are multistandard and can decode and display PAL-60 and SECAM on their analogue tuners).</p>
<p>Similarly in FM stereo radio, the compatible mono signal is treated as Left + Right, while the &#8216;stereo&#8217; subcarrier carries the differences between left and right (Left &#8211; Right). To get &#8216;left&#8217; you sum the two signals (L+R + L-R = 2L), while to get &#8216;right&#8217; you invert the stereo signal and sum (L+R + -(L-R) = L+R + -L + R = 2R).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-529083">
				<div id="div-comment-529083" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">DEngh</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070723-00/?p=25903#comment-529083">
			July 23, 2007 at 12:33 pm</a>		</div>

		<p>&lt;OT&gt;One would think that a person who &quot;specializes in the development of low-level software for mission-cricial &#8230; systems&quot; and a student of education could spell- and grammar-check their web presence before getting persnickety with others. &nbsp;Sorry, this adds nothing but I couldn&#8217;t help myself.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-529093">
				<div id="div-comment-529093" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Gabe</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070723-00/?p=25903#comment-529093">
			July 23, 2007 at 12:40 pm</a>		</div>

		<p>The kind of compatibility hacks that can be removed in Win64 include a few major categories:</p>
<ol>
<li>
<p>Things that were required for 16-bit; since 16-bit apps cannot run on a CPU in 64-bit mode, anything required strictly for 16-bit apps can be removed.</p>
</li>
<li>
<p>Things that require code to be rewritten; for example anything that generates code will need a 64-bit code generator, so obviously disabling DEP on the generated code can be part of it, thus DEP can be enabled by default. There are many 32-bit programs that generate code (JITters) or have self-modifying code which would break if DEP were on by default.</p>
</li>
<li>
<p>Things that require a recompile; for example it&#8217;s impossible to make a 32-bit driver work on Win64, so at the very least it will have to be recompiled. As long as it can be recompiled, it can be signed, so signed drivers can be made a requirement on Win64.</p>
</li>
</ol>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-529163">
				<div id="div-comment-529163" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Illuminator</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070723-00/?p=25903#comment-529163">
			July 23, 2007 at 1:02 pm</a>		</div>

		<p>Once upon a time while debugging a nasty localization bug, my coworker and I had to look at the source for the Windows edit control. &nbsp;I wear that emotional scar to this day.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-wndpteam even thread-even depth-1" id="comment-529183">
				<div id="div-comment-529183" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">wndpteam</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070723-00/?p=25903#comment-529183">
			July 23, 2007 at 1:51 pm</a>		</div>

		<p>In addition to the Debug Builds of various Windows binaries, there is a nice tool called the application verifier (<a rel="nofollow" target="_new" href="http://msdn2.microsoft.com/en-us/library/Aa480483.aspx" rel="nofollow">http://msdn2.microsoft.com/en-us/library/Aa480483.aspx</a>). Some of us (in networking at least) are thinking of adding more rules to that for pointing out to developers that they are using an API incorrectly, but taking advantage of the existing set of warnings it generates is a good thing.</p>
<p>&nbsp;&#8212; Ari</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-529203">
				<div id="div-comment-529203" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Wolf Logan</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070723-00/?p=25903#comment-529203">
			July 23, 2007 at 2:10 pm</a>		</div>

		<p>Nitpicking the comments now&#8230;I&#8217;ve sunk to a new low&#8230;</p>
<p>&quot;The black-and-white &#8216;luma&#8217; signal is used as the actual value for one of the colours (green, IIRC) and the chrominance subcarrier (which is filtered out by a black-and-white TV&#8217;s tuning circuits) contains only the differences between the levels of the other colours and the luminance level.&quot;</p>
<p>Sorry, this isn&#8217;t correct (and assuming there&#8217;s anyone reading who really wanted to know the scoop on NTSC and its backwards compatability&#8230;)</p>
<p>The original broadcast TV signal in the US was a simple DC voltage level, with some special timing characteristics. The level was used to drive the intensity of the (one) electron gun in early TVs, producing the fabled black-and-white TV signal.</p>
<p>When color TV was introduced, the NTSC wanted to be able to transmit color TV signals that would still work on older B&amp;W TVs. That meant that any changes to the signal format to include color information had to be designed such that an older TV would produce a reasonable B&amp;W picture. Introducing a &quot;breaking change&quot; to the signal would have cut out about 95% of the TV market.</p>
<p>They came up with a remarkably clever scheme. They divided the color signal into three parts: the &quot;Luma&quot; (luminosity, the brightness of the picture), the &quot;Chroma Hue&quot; (the particular color of the picture) and the &quot;Chroma Saturation&quot; (how intense the color was). The Luma signal was the same as the old broadcast signal, so older TVs would see this as their entire picture. The Chroma Hue was encoded as a high-frequency &quot;rider&quot; on the Luma, with its frequency fixed (at 3.58MHz) and its amplitude encoding the Chroma Saturation. The Chroma signal frequency was synchronized (in the days before PLLs and highly-accurate oscillators) to a &quot;color burst&quot; repeated regularly in the signal.</p>
<p>I&#8217;m an old hand at NTSC signals, and I still think the engineering solution was stunningly elegant for its time. For more information (than you ever wanted), check Wikipedia [<a rel="nofollow" target="_new" href="http://en.wikipedia.org/wiki/NTSC" rel="nofollow">http://en.wikipedia.org/wiki/NTSC</a>].</p>
<p>And now there&#8217;s a &quot;breaking change&quot;: the ATSC broadcast standard, which is a digital encoding, provides multiple aspect ratios, resolutions, and compression parameters&#8230;and is hardly used at all.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-529223">
				<div id="div-comment-529223" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">CGomez</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070723-00/?p=25903#comment-529223">
			July 23, 2007 at 2:30 pm</a>		</div>

		<p>@Mike Dimmick;</p>
<p>I never thought UAC was difficult for a developer. &nbsp;I&#8217;m just positing why there is all this negative press on Vista not being compatible with anything. &nbsp;Every review or &quot;reputable&quot; magazine out there says &quot;Make sure all your hardware and software works, and be prepared to buy new.&quot;</p>
<p>This is said every time there is an OS release, but for some reason this time it seems to really be resonating. &nbsp;Reasonable developers that I know are saying &quot;Oh, Vista is crap&#8230; just a pretty interface over XP.&quot;</p>
<p>Back to the point. &nbsp;With everything Raymond espouses about MSFT taking great pains to ensure backward compatibility, why is there such a negative view of Vista? &nbsp;I mean, assuming that many people at MSFT share the view that breaking changes just make users grumpy, there shouldn&#8217;t be many problems?</p>
<p>And I shared my example to show just how few problems I&#8217;ve had. &nbsp;One to be exact&#8230; vendor&#8217;s fault.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-529233">
				<div id="div-comment-529233" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">James Risto</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070723-00/?p=25903#comment-529233">
			July 23, 2007 at 2:40 pm</a>		</div>

		<p>Perhaps what people need to understand better is that a major Windows design point is backwards compatibility. Pretend that the MS developers are told that this is job #1. Easy to understand decisions now &#8230; and since performance is a close #2, it is great that it performs as well as it does, and I am glad that my kids crappy games still run. Saves me $$ &#8230; so WINDOWS SAVES ME MONEY.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-529273">
				<div id="div-comment-529273" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Rich Shealer</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070723-00/?p=25903#comment-529273">
			July 23, 2007 at 4:36 pm</a>		</div>

		<p>The backwards compatibility entries remind me of DOS and 16-bit Windows applications that would work fine in Windows &#8217;95, but would fail in NT and OS/2.</p>
<p>The operating system was simply enforcing boundaries the application was crossing. But it the blame was squarely placed on the platform.</p>
<p>I also remember the old Parity Check error screen, sort of a Blue Screen of Death in those good old DOS days. The memory system was preventing use with a known hardware problem that would eventually corrupt data. Many folks flipped the non-parity switch to &quot;avoid&quot; the issue. Yes it was rotten when you lost that spreadsheet, but it was worse when hard disk FAT became scrambled.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-529283">
				<div id="div-comment-529283" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.semack.net' rel='external nofollow' class='url'>Myron A. Semack</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070723-00/?p=25903#comment-529283">
			July 23, 2007 at 5:25 pm</a>		</div>

		<p>Raymond,</p>
<p>For what it&#8217;s worth, I honestly wasn&#8217;t trying to nag you. &nbsp;I’m sorry if it came across that way.</p>
<p>Post #1: I asked the question in a blog comment. &nbsp;I had forgotten that your blog has a Suggestion Box. &nbsp;I screwed up.</p>
<p>Post #2: I said to myself, &quot;Oops, I should have put the question in the Suggestion Box&quot;. &nbsp;So, I re-posted it there. &nbsp;I figured that if I didn&#8217;t post the question in the Suggestion Box, it wouldn&#8217;t get answered. &nbsp;I was trying to fix my mistake.</p>
<p>Post #3: I was actually responding to one of the other people who were posting comments. &nbsp;I was trying to explain my question and the reasoning behind it. &nbsp;Post #3 wasn&#8217;t directed at you.</p>
<p>So, actually, I only asked you the question twice, not three times. :-) &nbsp;And I only asked it twice because I made a mistake about where I posted it the first time.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-529303">
				<div id="div-comment-529303" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">John Dempsey</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070723-00/?p=25903#comment-529303">
			July 23, 2007 at 7:49 pm</a>		</div>

		<p>Coming at it from further out, NT was an upgrade, Win95 was a compatability hack. As was Win98, and Millineum. Not entirely true, but not entirely false, as fleets of 3.1 application took liberties with the underlying 16-bit USER.EXE architecture. Win95 programs were slowed by this, as lots of core calls were serialized. For clean-and-fast, run NT!</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-529323">
				<div id="div-comment-529323" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Alan</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070723-00/?p=25903#comment-529323">
			July 23, 2007 at 8:16 pm</a>		</div>

		<p>In my opinion backwards compatibility is a non-issue. Suppose an application is designed and tested for Windows 2000. When Windows XP or Vista came out, it should not be assumed to work for those platforms. Rather, appropriate porting and testing needs to be done first.</p>
<p>When .Net 1.0 initially came out, it appeared that the versioning features would actually work like this. So if a n application targeting .Net version 1.0 was developed, it would execute under 1.0 even if 1.1, 2.0, 3.0 etc co-existed. This gave me so much hope that .Net could make a clean break from backward compatibility and actually fix the real problems instead of just supplementing them.</p>
<p>However, in reality nothing has changed. People want their old code to work unported and untested on new platforms and new versions. So old broken code remains and new, fixed functions are added.</p>
<p>As a developer, it&#8217;s a little depressing sometimes.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-529333">
				<div id="div-comment-529333" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">J</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070723-00/?p=25903#comment-529333">
			July 23, 2007 at 8:25 pm</a>		</div>

		<p>&quot;As a developer, it&#8217;s a little depressing sometimes.&quot;</p>
<p>As a developer, I love it. &nbsp;I hate being called back to work on old projects to port them to new systems. &nbsp;BORING.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-529343">
				<div id="div-comment-529343" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Craig Williams</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070723-00/?p=25903#comment-529343">
			July 23, 2007 at 9:03 pm</a>		</div>

		<p>J,</p>
<p>That is a rather irresponsible attitude. Even with assumed backward compatibility, you need to at least verify that you application still functions appropriately on a new version and platform. Depending on the results, some porting may be necessary.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-529353">
				<div id="div-comment-529353" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Andrew R</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070723-00/?p=25903#comment-529353">
			July 23, 2007 at 10:46 pm</a>		</div>

		<p>I don&#8217;t think NTSC is a good exmaple of cheap compatibility; it wasn&#8217;t (and isn&#8217;t) cheap at all; the compatibility &#8220;circuit&#8221; is everything involved in YUV.</p>
<p>The only reason the YUV colour-space exists at all is because original B&amp;W is roughly what we now consider the &#8220;luminance value&#8221;. &nbsp;Every CRT/LCD television can display only 3 colours; Red, Green and Blue. &nbsp;YUV doesn&#8217;t map into that colour-space except by a massive loss of precision (RGB555 usually goes to 11.5 bits). &nbsp;</p>
<p>It requires special conversion circuits and sometimes multiple conversion passes. &nbsp;There is utter madness going on inside MPEG-2/4 set-top-boxes because of this compatibility.</p>
<p>BTW; PAL has the same problem.</p>
<div class="post">[<i>I didn&#8217;t say it was an example of cheap compatibility. On the contrary, it&#8217;s an example of how compatibility is intertwined with design. Oh, right, here&#8217;s where I said it: &#8220;The backward compatibility is in the design of the NTSC color signal. It&#8217;s not a circuit board (or, to be more historically accurate, a set of vacuum tubes) that you can pull out. You can&#8217;t &#8220;take out&#8221; the compatibility stuff from your television set. The compatibility is fundamentally part of the way the NTSC color signal works.&#8221; -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-529383">
				<div id="div-comment-529383" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Raptor</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070723-00/?p=25903#comment-529383">
			July 24, 2007 at 12:56 am</a>		</div>

		<p>Well Raymond you&#8217;ve pointed out that compatibility hacks don&#8217;t put such high penalty on performance since backwards compatibility costs are, and I quote &#8220;Real cost of compatibility is in the design&#8221;</p>
<p>So logically the question should be rephrased as: how much &#8220;better designed&#8221; Windows would be if you took out the backward compatibility stuff?</p>
<p>And the answer is?</p>
<p>Raptor</p>
<div class="post">[<i>I don&#8217;t know what designs were scrapped for compatibility reasons or how good they were. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-dean-harding even thread-even depth-1" id="comment-529393">
				<div id="div-comment-529393" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Dean+Harding' rel='external nofollow' class='url'>Dean Harding</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070723-00/?p=25903#comment-529393">
			July 24, 2007 at 1:07 am</a>		</div>

		<blockquote><p>
  And the answer is?
</p></blockquote>
<p>The answer is totally irrelvent because nobody would be using it. You can have the most elegant design in the world, but what&#8217;s the point if nobody wants to use it?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-529403">
				<div id="div-comment-529403" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Worf</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070723-00/?p=25903#comment-529403">
			July 24, 2007 at 1:13 am</a>		</div>

		<p>&lt;BLOCKQUOTE&gt;And now there&#8217;s a &quot;breaking change&quot;: the ATSC broadcast standard, which is a digital encoding, provides multiple aspect ratios, resolutions, and compression parameters&#8230;and is hardly used at all.&lt;/blockquote&gt;</p>
<p>Maybe you meant not used as much, considering TVs that have ATSC decoders only tend to be a few years old, and stations broadcasting in ATSC really came online the past few years?</p>
<p>Fact is, people have noticed that their cable and satellite TV of local channels looks worse than their ATSC counterparts. Cable and satellite compress the heck out of their HDTV signals, while ATSC tends to have few others sharing subchannnels, thus leaving plenty of bandwidth for the signal. One regular channel on cable can easily host 4-16 channels using digital cable &#8211; 64-128 channels for music. If your TV supports QAM, do a channel scan &#8211; even encrypted channels will cause it to lock, but it won&#8217;t decode.</p>
<p>The recent resurgence in the humble UHF loop antenna is proof &#8211; this time, people who want the best picture and sound ditch their cable/satellite locals, and use the OTA versions. Which is why satellite receivers and the Series3 TiVo have not only their regular cable/satellite input, but also ATSC.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-529413">
				<div id="div-comment-529413" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Craig Williams</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070723-00/?p=25903#comment-529413">
			July 24, 2007 at 1:32 am</a>		</div>

		<p>Dean Harding,</p>
<p>Please speak for yourself. I for one would use it and welcome it. I am tired of all of the &#8220;compatibility hacks&#8221;. As a developer I spend more time reading documentation for all of the technical limitations, workarounds, and &#8220;gotchas&#8221; to poorly designed functions than actually writing code. .Net 1.0 was a huge improvement. However, with future versions it&#8217;s just a repeat performance.</p>
<p>Backward compatibility is not necessary and only gives developers a false sense of security. Assuming that a product developed for a specific platform and version will automatically work untested and unmodified on a future unknown platform and version is irresponsible and unrealistic. Even with the current backward compatibility, a certain level of testing is still required and some changes are occasionally needed.</p>
<div class="post">[<i>There&#8217;s a great operating system for you; it&#8217;s called OS/2. Designed by the same people who designed Windows, but without the compatibility. The function names and parameters are more consistent, the interfaces more uniform, check it out. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-dean-harding odd alt thread-odd thread-alt depth-1" id="comment-529423">
				<div id="div-comment-529423" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Dean+Harding' rel='external nofollow' class='url'>Dean Harding</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070723-00/?p=25903#comment-529423">
			July 24, 2007 at 3:11 am</a>		</div>

		<p>Craig: I&#8217;m sure TV manufacturers bemoan the fact that NTSC had to be backwards compatible with B&amp;W, too&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-529453">
				<div id="div-comment-529453" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ben Cooke</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070723-00/?p=25903#comment-529453">
			July 24, 2007 at 3:44 am</a>		</div>

		<p>I wonder if lessons learned with past APIs cause Microsoft platform developers to write their API functions a lot more defensively than those of the early days?</p>
<p>I&#8217;ve been burned by similar things (on a much smaller scale!) myself, and I&#8217;ve learned that callers will take any liberty they can get away with, so it&#8217;s best to make them crash and burn rather than silently fixing their stuff. Obviously old functions can&#8217;t crash and burn like this, but new functions can.</p>
<p>I wonder if the .NET Framework wasn&#8217;t intended in part to solve this problem. &quot;Managed code&quot; is by definition a lot more rigid and &quot;un-abusable&quot; than the native code functions of the Windows API.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-529473">
				<div id="div-comment-529473" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Jon</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070723-00/?p=25903#comment-529473">
			July 24, 2007 at 5:30 am</a>		</div>

		<p>Nobody correctly nitpicked the NTSC example:</p>
<p>The color frame rate of NTSC is 29.97 fps (interlaced) due to a very complicated choice of color carrier frequencies in order to prevent distortion to black and white TVs (the luma carrier in general). It involved several years of work by the Rand corporation and has prime numbers and common denominators.</p>
<p>The fact that the frame rate was dropped .03 fps meant the power supply could no longer be synchronized to AC power. This greatly complicates the high voltage power supply design of CRT televisions to this day.</p>
<p>PAL is 25 FPS even, but due to the large number of countries and their compatibility issues there&#8217;s an amazing number of variants (PAL-A thru N + K&#8217;)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-529483">
				<div id="div-comment-529483" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.johntopley.com/' rel='external nofollow' class='url'>John Topley</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070723-00/?p=25903#comment-529483">
			July 24, 2007 at 5:32 am</a>		</div>

		<p>&quot;Backward compatibility is not necessary and only gives developers a false sense of security.&quot;</p>
<p>Backward compatibility is necessary for Microsoft&#8217;s bottom line!</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-529493">
				<div id="div-comment-529493" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Triangle</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070723-00/?p=25903#comment-529493">
			July 24, 2007 at 6:32 am</a>		</div>

		<p>Since the hacks are so small, why is the AppPatch directory on Windows XP almost 5 MB ?</p>
<div class="post">[<i>Those are a different category &#8211; application-specific compatibility hacks. Most general-purpose hacks are small. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-529503">
				<div id="div-comment-529503" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">mikey</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070723-00/?p=25903#comment-529503">
			July 24, 2007 at 7:03 am</a>		</div>

		<p>i think godwin&#8217;s law is going to need to be supplemented with &#8216;mikeys law of windows&#8217; which says: &#8216;As an online discussion grows longer, the probability of a comparison involving UAC approaches one.&#8217;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-529513">
				<div id="div-comment-529513" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">mikey</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070723-00/?p=25903#comment-529513">
			July 24, 2007 at 7:18 am</a>		</div>

		<p>@ craig. you are pretty cute and naive. it will be nice to see you on the other side of the &#8216;newbie to commercial compatibility&#8217; phase.</p>
<p>basically, you need to realise that ms is satisfying corporate need here. they don&#8217;t neccessarily write the programs they are using. but they want them on the new os anyway. if it doesn&#8217;t work, they won&#8217;t upgrade. and ms does not earn money. the simple answer? make them work. if it takes compat hacks, then so be it. at least the windows continues to be commercially viable, and while it&#8217;s viable we can add NEW things and GOOD things, while keeping the big paying customers on board.</p>
<p>the blog would be a much quieter place if people understood this, and similar, concepts :)</p>
<p>i, as a developer, am very happy and often impressed with ms&#8217; compat implementations and stories.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-529723">
				<div id="div-comment-529723" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">J</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070723-00/?p=25903#comment-529723">
			July 24, 2007 at 1:59 pm</a>		</div>

		<p>&quot;That is a rather irresponsible attitude. Even with assumed backward compatibility, you need to at least verify that you application still functions appropriately on a new version and platform.&quot;</p>
<p>No I don&#8217;t. &nbsp;That&#8217;s what we pay our testers for. &nbsp;If no issues appear, then I don&#8217;t do anything.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-529983">
				<div id="div-comment-529983" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Craig Williams</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070723-00/?p=25903#comment-529983">
			July 24, 2007 at 7:48 pm</a>		</div>

		<p>mikey,</p>
<p>With over 30 years of experience in software development, I am hardly a &quot;newbie&quot; anymore.</p>
<p>I fully realize why backward compatibility exists. However, developers constantly abuse it: assuming that their application targeting a specific platform and version will magically work on future versions without any testing (and needed porting). I have seen countless applications fail due to this.</p>
<p>J,</p>
<p>If you&#8217;re at a large enough company there will often be testers. However, at many smaller places, developers are the testers. And developers usually do not want to test (not talking about unit tests).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-530003">
				<div id="div-comment-530003" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Julian</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070723-00/?p=25903#comment-530003">
			July 24, 2007 at 9:07 pm</a>		</div>

		<p>I agree with Alan and Craig.</p>
<p>Each new release of the API and framework gets uglier, dirtier, and complicated. The broken functions and types are fairly fixed (backward compatibility) while new ones are made to replace them.</p>
<p>I was much more productive with older versions of the Windows API than I am now. Perhaps the most productive I have ever been was with the initial version of the .Net Framework. However, since 1.1 and especially 2.0, it is taking more time to sift through the compatibility &quot;trash&quot;.</p>
<p>While I would like to always write perfect code, I do make mistakes. When this happens, I would hope that my application would fail so that I can fix it. However, all too often internal hacks hide the problem.</p>
<p>That is not to say that I do not appreciate the newer functionality. However, I would like the trash that it replaces to be removed. It will not break my app because when I developed it it was for a specific version which will not change.</p>
<p>The trash continues to grow, but no one is willing to take it out.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-530043">
				<div id="div-comment-530043" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Triangle</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070723-00/?p=25903#comment-530043">
			July 24, 2007 at 10:28 pm</a>		</div>

		<p>One persons trash is another persons treasure.</p>
<p>You can bet that there are multi-billion-dollar corporations with internal tools that relies heavily on that trash.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-530063">
				<div id="div-comment-530063" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Cheong</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070723-00/?p=25903#comment-530063">
			July 25, 2007 at 12:03 am</a>		</div>

		<p>[quote user=&quot;Craig Williams&quot;]</p>
<p>Backward compatibility is not necessary and only gives developers a false sense of security. Assuming that a product developed for a specific platform and version will automatically work untested and unmodified on a future unknown platform and version is irresponsible and unrealistic. Even with the current backward compatibility, a certain level of testing is still required and some changes are occasionally needed.</p>
<p>[/quote]</p>
<p>As a customer, I&#8217;ll be sad if the manufactorier no longer maintance the codes.</p>
<p>Consider CompanyA&#8217;s multi-port modem boards. It includes drivers for Win2k but the driver software does not work on WinXP or above. The company later has brought by CompanyB and they refuse to provide free software updates for original CompanyA customers. Additional HKD$5000 must be paid for the new driver software bundle. That&#8217;s the exact reason why we still have one Win2k server not be upgraded to Win2003.</p>
<p>It&#8217;s sad that both CompanyA and CompanyB are large and famous ones.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-530083">
				<div id="div-comment-530083" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Craig Williams</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070723-00/?p=25903#comment-530083">
			July 25, 2007 at 12:53 am</a>		</div>

		<p>Cheong,</p>
<p>Sounds to me like the customer got what they paid for: drivers desired and tested for Windows 2000. Why would you expect it to magically work on another platform? Even _if_ it did work on Windows XP or 2003, that is only by chance and is not something that you can rely on without proper testing and verification. Same with other versions. There are a great many applications (especially games) designed for XP that will not run properly under Vista. Backward compatibility did not help as much as thought.</p>
<div class="post">[<i>Thank you. Next time a magazine article says &#8220;Windows (k+1) sucks because of crappy hardware support&#8221;, please write them a letter explaining that they shouldn&#8217;t expect Windows (k+1) to support Windows (k) drivers in the first place. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-530123">
				<div id="div-comment-530123" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Neil</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070723-00/?p=25903#comment-530123">
			July 25, 2007 at 6:18 am</a>		</div>

		<p>[In other words, you want to make it harder for people to port their<br />
programs to 64-bit Windows. &#8220;I have this program that works just fine<br />
on 32-bit Windows, but it crashes randomly on 64-bit Windows. 64-bit<br />
Windows is so buggy.&#8221; -Raymond]</p>
<p>So, all the 16-bit hacks were faithfully reproduced in 32-bit and now in 64-bit?</p>
<div class="post">[<i>Not sure what you mean by a &#8220;16-bit hack&#8221;. 64-bit<br />
Windows doesn&#8217;t support 16-bit applications, so all of the &#8220;If this is<br />
a 16-bit program then do X differently&#8221; hacks, even if present, never<br />
fire. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-530173">
				<div id="div-comment-530173" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://codeka.com/blogs/' rel='external nofollow' class='url'>Dean Harding</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070723-00/?p=25903#comment-530173">
			July 25, 2007 at 9:35 am</a>		</div>

		<blockquote><p>
  So, all the 16-bit hacks were faithfully reproduced in 32-bit and now in 64-bit?
</p></blockquote>
<p>Wow, you&#8217;re so smart for showing up Raymond like that! Please give your full name and address and I&#8217;ll send you a medal.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-531633">
				<div id="div-comment-531633" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Zagor</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070723-00/?p=25903#comment-531633">
			July 29, 2007 at 3:47 am</a>		</div>

		<p>So each time new Windows (k + n) version comes out we should buy all our peripherals over and over again?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-531643">
				<div id="div-comment-531643" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">rolfhub</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070723-00/?p=25903#comment-531643">
			July 29, 2007 at 9:35 am</a>		</div>

		<blockquote><p>
  So each time new Windows (k + n) version comes out we should buy all our peripherals over and over again?
</p></blockquote>
<p>No, clearly not, but we should keep in mind that it isn&#8217;t only Microsofts responsibility to make sure that the hardware still works flawlessly, in a perfect world, the hardware companies would provide driver updates to every piece of hardware that is still in use by the customers. Same goes for software that relies on the APIs provided by Microsoft.</p>
<p>Clearly, the real world isn&#8217;t perfect, so Microsoft adds enough hacks so that most of the old hard- and software works with newer OS versions, because otherwise, nobody (=not enough people to make it a success) would use the new OS.</p>
<p>So basically, MS has not much of a choice, so it would be a bit unfair if we would blame developers like Raymond for slowing down the OS due to compability hacks, OK?</p>
<p>Also, I think, the application and hardware developers also don&#8217;t always have much of a choice, because I wrote &quot;&#8230; the hardware companies would provide driver updates to every piece of hardware that is still in use by the customers &#8230;&quot; &#8211; and that can be a long time. Sometimes, hard- and software is still in use that hasn&#8217;t been sold any more more years. So it would be damn expensive to still provide updates.</p>
<p>And the customers also don&#8217;t have that much of a choice, because buying a completely new system every few years can be just to expensive, so old hard- and software is sometimes used as long as possible.</p>
<p>Seems as if nobody really has much of a choice &#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>