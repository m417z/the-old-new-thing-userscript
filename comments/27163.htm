<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (14)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-495913">
				<div id="div-comment-495913" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Greg D</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070423-00/?p=27163#comment-495913">
			April 23, 2007 at 11:56 am</a>		</div>

		<p>Interesting point! &nbsp;As a relatively junior dev, with only about 2 years of industry experience after 2 years in grad school, I find myself falling into this overanalysis trap more often than I should. &nbsp;</p>
<p>Perhaps it doesn&#8217;t help that, in so doing, I&#8217;ve also discovered a few lower-level bugs (slow handle leaks, e.g.). &nbsp;The minor nature of those bugs doesn&#8217;t really justify the amount of time I&#8217;d spent spelunking that code, though.</p>
<p>I may partially blame the grad school experience too, as I often had to drill down deeply through definitions, etc to understand and complete my work.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-495933">
				<div id="div-comment-495933" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.avid.com/exchange/blogs/andrew_kimpton/archive/2007/04/23/226812.aspx' rel='external nofollow' class='url'>Andrew Kimpton</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070423-00/?p=27163#comment-495933">
			April 23, 2007 at 12:15 pm</a>		</div>

		<p>Raymond Chen wrote an article in his long running series &amp;lsquo;Psychic Debugging&amp;rsquo; today which&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-495993">
				<div id="div-comment-495993" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Skip</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070423-00/?p=27163#comment-495993">
			April 23, 2007 at 1:52 pm</a>		</div>

		<p>As a counterpoint to this, while you should assume that the code is mostly correct, you should not assume that the comments around the code bear any relationship to the code itself. &nbsp; Programmers are lazy, and many times when a piece of code is updated, the comments won&#8217;t be.</p>
<p>When I&#8217;m diving into someone else&#8217;s code it&#8217;s usually a good idea to use an editor that parses the code into different color objects, and for me to set the comments color to be light grey on white. &nbsp;That way I can read them if I try to, but when I&#8217;m scanning the code quickly it doesn&#8217;t interfere with my comprehension.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-496033">
				<div id="div-comment-496033" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">nksingh</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070423-00/?p=27163#comment-496033">
			April 23, 2007 at 3:55 pm</a>		</div>

		<p>Are there some better tools for this task than grep? &nbsp;</p>
<p>I tend to prefer Visual Studio or something like Source Insight which create a database of symbol definitions. &nbsp;I&#8217;m just wondering if there are any good tools to examine debug info to automatically get to definitions from callsites. &nbsp;</p>
<p>I&#8217;m curious about how experienced folks find stuff, and hoping it doesn&#8217;t come down to a bunch of grepping.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-496083">
				<div id="div-comment-496083" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://redefine.dyndns.org/~radoshi/blog' rel='external nofollow' class='url'>Rushabh Doshi</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070423-00/?p=27163#comment-496083">
			April 23, 2007 at 4:45 pm</a>		</div>

		<p>This is <em>exactly</em> the idea behind one of the checkers in the Stanford Metacompilation project. The paper&#8217;s title is &quot;Bugs as Deviant Behaviour&quot; and can be found here:</p>
<p><a rel="nofollow" target="_new" href="http://metacomp.stanford.edu/derive.ps.gz" rel="nofollow">http://metacomp.stanford.edu/derive.ps.gz</a></p>
<p>In short, you assume that <em>most</em> of the code is correct and infer a belief about the library being used. When this belief is violated, its probably a bug.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-496103">
				<div id="div-comment-496103" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">BryanK</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070423-00/?p=27163#comment-496103">
			April 23, 2007 at 4:49 pm</a>		</div>

		<p>nksingh &#8212; ctags / etags can do that on *nix, I think. &nbsp;And one or the other of those can usually be used from your editor of choice (depends on the editor though). &nbsp;Not sure about &quot;tags&quot; files in Windows in general, though I&#8217;d suspect the functionality exists somewhere.</p>
<p>I know that VS6, VS2003, and VS2005 all have &quot;go to definition&quot; options on the right-click menu for most identifiers. &nbsp;It didn&#8217;t work all that well on C++ code (in my experience: I haven&#8217;t tried it in VS2005), but it works great in C# in 2003/2005, and VB in v6/2003/2005.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-496113">
				<div id="div-comment-496113" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://redefine.dyndns.org/~radoshi/blog' rel='external nofollow' class='url'>Rushabh Doshi</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070423-00/?p=27163#comment-496113">
			April 23, 2007 at 4:49 pm</a>		</div>

		<p>This is <em>exactly</em> the idea behind one of the checkers in the Stanford Metacompilation project. The paper&#8217;s title is &quot;Bugs as Deviant Behaviour&quot; and can be found here:</p>
<p><a rel="nofollow" target="_new" href="http://metacomp.stanford.edu/derive.ps.gz" rel="nofollow">http://metacomp.stanford.edu/derive.ps.gz</a></p>
<p>In short, you assume that <em>most</em> of the code is correct and infer a belief about the library being used. When this belief is violated, its probably a bug.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-496163">
				<div id="div-comment-496163" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.michael-puff.de' rel='external nofollow' class='url'>Michael Puff</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070423-00/?p=27163#comment-496163">
			April 23, 2007 at 7:46 pm</a>		</div>

		<p>But sometimes the obvious is overlooked just because it is obvious. Once a colleauge asked me for help because he got an access violation everytime he would run a particular code. At first glance the code was OK. And the code was OK. But we kept gettimg those odd access violations. In the end it turned out that he was using an object he hadn&#8217;t created yet.</p>
<p>That taught me two things:</p>
<ol>
<li>
<p>Don&#8217;t start looking at the code from the middle.</p>
</li>
<li>
<p>First check the most simply failour reasons. ;)</p>
</li>
</ol>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-496173">
				<div id="div-comment-496173" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Norman Diamond</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070423-00/?p=27163#comment-496173">
			April 23, 2007 at 9:54 pm</a>		</div>

		<blockquote><p>
  The theory behind this heuristic is that</p>
<p>  whoever wrote this code has a better</p>
<p>  understanding of how it works than you do.</p>
<p>  (This is a pretty safe bet since your</p>
<p>  knowledge of this code is approximately zero.)
</p></blockquote>
<p>thedailywtf.com knows better (even if they don&#8217;t know why their original name was better ^_^) &nbsp;I envy people who can work in an environment where your heuristic works.</p>
<p>Monday, April 23, 2007 3:55 PM by nksingh</p>
<blockquote><p>
  Are there some better tools for this task than</p>
<p>  grep?
</p></blockquote>
<p>findstr? &nbsp;^_^</p>
<p>Monday, April 23, 2007 4:49 PM by BryanK</p>
<blockquote><p>
  I know that VS6, VS2003, and VS2005 all</p>
<p>  have &quot;go to definition&quot; options on the right-</p>
<p>  click menu for most identifiers. &nbsp;It didn&#8217;t</p>
<p>  work all that well on C++ code (in my</p>
<p>  experience: I haven&#8217;t tried it in VS2005),
</p></blockquote>
<p>You&#8217;re not missing much. &nbsp;It works &quot;sometimes&quot; in VS2005 too, including SP1. &nbsp;Browsing all references works sometimes too, and it really is useful when it works.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-496043">
				<div id="div-comment-496043" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">cmov</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070423-00/?p=27163#comment-496043">
			April 23, 2007 at 4:18 pm</a>		</div>

		<p>@Skip: That&#8217;s why I tend to use *no* comments when I write something. Good code documents itself. And if that makes it hard to read, well, it was hard to write too&#8230;</p>
<p>I *do* comment the places where I&#8217;m not certain about the functionality, and put in the comments what it should do and why the attempt to achieve something was written the way it was written.</p>
<p>If I&#8217;m in a &quot;comment mood&quot; and add comments to places where I&#8217;m certain it works OK (for others to read when they feel like it), I *never* put in comments what can be found in man pages or on MSDN, etc. Standards can change over time anyway.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-496213">
				<div id="div-comment-496213" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Tom M</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070423-00/?p=27163#comment-496213">
			April 24, 2007 at 3:33 am</a>		</div>

		<p>nksingh, have you tried Visual Assist X from <a rel="nofollow" target="_new" href="http://www.wholetomato.com/" rel="nofollow">http://www.wholetomato.com/</a>, because it has some really good goto definition functionality, amongst other things.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-496273">
				<div id="div-comment-496273" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">andy</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070423-00/?p=27163#comment-496273">
			April 24, 2007 at 11:12 am</a>		</div>

		<p>nksingh: you&#8217;ve also got head, tail, less/more at your disposal :)</p>
<p>Once you&#8217;ve found a couple of interesting files use e.g., less which allows you to search inside the file (&#8216;/&#8217; is the command..)</p>
<p>Visual Studio has a nice &quot;Find in files&quot; function btw. Believe Eclipse has a similar feature.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-496293">
				<div id="div-comment-496293" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">MGR</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070423-00/?p=27163#comment-496293">
			April 24, 2007 at 11:17 am</a>		</div>

		<p>Usually I ask the developer to show me the portion of code were he/she believes the bug can be. Then go thru that code roughly asking my doubts to them. Then I go for those area&#8217;s where they have NEVER thought even to look for the bug. In most of the cases the bug occurs, were they say, there is no chance of finding one!!!</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-496353">
				<div id="div-comment-496353" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blogs.msdn.com/oldnewthing/archive/2007/04/24/2252261.aspx' rel='external nofollow' class='url'>The Old New Thing</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070423-00/?p=27163#comment-496353">
			April 24, 2007 at 12:12 pm</a>		</div>

		<p>Use the vtable.</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>