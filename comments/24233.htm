<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (25)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-576093">
				<div id="div-comment-576093" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">SET BLASTER</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071210-00/?p=24233#comment-576093">
			December 10, 2007 at 10:23 am</a>		</div>

		<p>SET BLASTER=A220 I5 D1 H5 P330 T6</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-576103">
				<div id="div-comment-576103" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Medinoc</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071210-00/?p=24233#comment-576103">
			December 10, 2007 at 10:35 am</a>		</div>

		<p>Actually, UNIX shell scripts seem to cumulate both philosophies: There is one command to execute a script in a new shell process (the default), and another to parse a script in the current shell process, usually to set environment variables.</p>
<p>I have not tested, but it is possible that the second command not work if the caller has execute permission but not read permission on the script.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-576123">
				<div id="div-comment-576123" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">bd_</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071210-00/?p=24233#comment-576123">
			December 10, 2007 at 11:12 am</a>		</div>

		<p>@Mendinoc,</p>
<p>There&#8217;s nothing particularly magical about shell scripts &#8211; the kernel just reads the shebang line, and passes the /filename/ to the interpreter listed. Thus, you always need read access to a shell script (unlike a bona fide executable).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-576133">
				<div id="div-comment-576133" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://barrkel.blogspot.com/' rel='external nofollow' class='url'>Barry Kelly</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071210-00/?p=24233#comment-576133">
			December 10, 2007 at 11:28 am</a>		</div>

		<p>@bd_,</p>
<p>The second command Mendinoc is talking about is known as &#8216;.&#8217; or &#8216;source&#8217; in bash &#8211; and it doesn&#8217;t require a #! at the start of the file.</p>
<p>Both read and execute permissions are required to execute a file using OS mechanisms, but only read permission is required for &#8216;.&#8217; (aka &#8216;source&#8217;), since that&#8217;s a function of the interpreter, not the OS.</p>
<p>&#8212; Barry</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-576153">
				<div id="div-comment-576153" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">John</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071210-00/?p=24233#comment-576153">
			December 10, 2007 at 12:54 pm</a>		</div>

		<p>@Zathrus:</p>
<p>Visual Studio 2005 lets you change the environment. &nbsp;It&#8217;s probably been around in previous versions, but I don&#8217;t have them in front of me to verify that.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-576163">
				<div id="div-comment-576163" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Jonathan</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071210-00/?p=24233#comment-576163">
			December 10, 2007 at 2:32 pm</a>		</div>

		<p>If you don&#8217;t want your batch file to change the env, use SetLocal.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-576173">
				<div id="div-comment-576173" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://url.net' rel='external nofollow' class='url'>required</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071210-00/?p=24233#comment-576173">
			December 10, 2007 at 2:46 pm</a>		</div>

		<p>I never understood the lack of functions in batch files (well, you could manage to use the call keyword instead, but you know, it is considered harmful). Maybe a function keyword could have been added as syntactic sugar around the call keyword.</p>
<p>As result, lots of potential programmers were brain-damaged.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-576183">
				<div id="div-comment-576183" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://gaia.iamcode.net/' rel='external nofollow' class='url'>Matt Lewandowsky</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071210-00/?p=24233#comment-576183">
			December 10, 2007 at 3:36 pm</a>		</div>

		<p>Between call, variables, and labels, batch files were (and still are) extremely powerful.</p>
<p>And for those who think that the 16KB was a typo: A popular contemporary computer was the Commodore VIC-20. It shipped with a full 5KB RAM (you only had access to 3.5KB, however). And, if you maxed out the RAM on a VIC-20, you had a whopping 21KB! :D (And people wonder where the &quot;famous&quot; 640KB quote came from! It was a massive amount of RAM back then! No one envisioned an IBM-compatible PC with &gt; 4GB RAM back then!)</p>
<p>Considering the memory &quot;constraints&quot;, computers were far more efficient back then&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-576193">
				<div id="div-comment-576193" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">ERock</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071210-00/?p=24233#comment-576193">
			December 10, 2007 at 4:08 pm</a>		</div>

		<p>It&#8217;s really not fair, either, to say &quot;Unix does it!&quot; since, at the time, Unix systems were administered by very smart people who gave the users specific instructions on how to just get their work done. The Personal Computer was intended to be used by mere mortals.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-576203">
				<div id="div-comment-576203" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Cooney</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071210-00/?p=24233#comment-576203">
			December 10, 2007 at 4:24 pm</a>		</div>

		<blockquote><p>
  Besides, if batch files couldn&#8217;t modify the environment of the command interpreter, the AUTOEXEC.BAT file would be pretty useless.
</p></blockquote>
<p>Nah, it&#8217;d just be called profile. of course, Unix tends to split machine specific stuff like &#8216;SET BLASTER&#8217; from path manipulation that shells use.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-576243">
				<div id="div-comment-576243" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">DriverDude</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071210-00/?p=24233#comment-576243">
			December 10, 2007 at 6:40 pm</a>		</div>

		<p>Ahhh, forget about Win32 compatibility, or Win16, or DOS&#8230; we need to do it the way CP/M did.</p>
<p>Even on Win64. :=)</p>
<p>By the way, anyone know if CP/M runs in Virtual PC? (Does it need special PC/XT hardware?) I can&#8217;t find my copy now&#8230;</p>
<p>&quot;The Personal Computer was intended to be used by mere mortals.&quot;</p>
<p>The PC was also affordable by mere mortals.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-576113">
				<div id="div-comment-576113" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.starkeith.net/coredump/' rel='external nofollow' class='url'>Keithius</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071210-00/?p=24233#comment-576113">
			December 10, 2007 at 11:01 am</a>		</div>

		<p>@SET BLASTER:</p>
<p>Oh geez, those were the days&#8230; ;-)</p>
<p>*smiling fondly with nostalgia, sort of*</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-576263">
				<div id="div-comment-576263" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Cooney</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071210-00/?p=24233#comment-576263">
			December 10, 2007 at 7:16 pm</a>		</div>

		<blockquote><p>
  Ahhh, forget about Win32 compatibility, or Win16, or DOS&#8230; we need to do it the way CP/M did.
</p></blockquote>
<p>Or we could sideline the cmd.exe stuff and restart with a bash style interpreter. nothing gets broken and we get saner operation.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-576143">
				<div id="div-comment-576143" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Zathrus</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071210-00/?p=24233#comment-576143">
			December 10, 2007 at 11:33 am</a>		</div>

		<p>@bd_,</p>
<p>Not quite. If you just invoke the script (e.g. &#8212; ./foo &nbsp;or foo if it&#8217;s in your path) then it does use the shebang to figure out the proper interpreter.</p>
<p>If, however, you ask it to source the script (. ./foo) then it will use your CURRENT shell to interpret the script &#8212; which may be a problem if the script was written for bash and you&#8217;re running ksh, etc. (or it&#8217;s not even shell, but perl, etc)</p>
<p>Yes, MS has been stuck with the &quot;source by default&quot; for ages now because of how DOS 1.0 was implemented. But, to get back to the previous issue, you can certainly make Monad/PowerShell get environment changes from a shell, although it takes some hackery to do so (and I&#8217;ve seen this done in Perl to get env changes from a shell script) &#8212; you basically take the current environment, run the shell script, and then print out the shell&#8217;s environment prior to exiting. You can then parse the output and either just set your environment directly, diff the two, or do various other hacks. Yes, it&#8217;s ugly &#8212; but there&#8217;s no clean solution to this *IF* the script you&#8217;re executing is being handled by a different interpreter!</p>
<p>The only other option to the above would be to violate child process memory protection and let you peek at their environment prior to killing the process. That&#8217;s a really bad idea in my opinion, since it violates all kinds of explicit security checks. Which is why Unix doesn&#8217;t do it either (see the first two paragraphs).</p>
<p>As for other environment idiocy &#8212; why does Visual Studio *still* not let you change the environment for processes you&#8217;re going to debug? Why do I have to quit VS, change the environment (at command-line or via System Properties) and relaunch for such a simple thing?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-576273">
				<div id="div-comment-576273" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">MS</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071210-00/?p=24233#comment-576273">
			December 10, 2007 at 7:42 pm</a>		</div>

		<p>&quot;Or we could sideline the cmd.exe stuff and restart with a bash style interpreter. nothing gets broken and we get saner operation.&quot;</p>
<p>You mean something like PowerShell? &nbsp;If you really want, you can get SUA and then you get all sorts of shells.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-jamesnt odd alt thread-odd thread-alt depth-1" id="comment-576283">
				<div id="div-comment-576283" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/JamesNT' rel='external nofollow' class='url'>JamesNT</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071210-00/?p=24233#comment-576283">
			December 10, 2007 at 9:10 pm</a>		</div>

		<p>SET BLASTER&#8230;.</p>
<p>Good lord. &nbsp;Why is it the first thing that came to my mind was configuring my AUTOEXEC.BAT so I could play 7th Guest?</p>
<p>JamesNT</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-576293">
				<div id="div-comment-576293" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Zathrus</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071210-00/?p=24233#comment-576293">
			December 10, 2007 at 10:41 pm</a>		</div>

		<p>@John (and @ERock later):</p>
<p>So after searching for some time on both Google and MSDN, it appears that VS2k5 can set environment variables, by using User Defined Macros on a Property Sheet (c.f. &#8211; <a rel="nofollow" target="_new" href="http://forums.microsoft.com/MSDN/ShowPost.aspx?PostID=149399&amp;SiteID=1" rel="nofollow">http://forums.microsoft.com/MSDN/ShowPost.aspx?PostID=149399&#038;SiteID=1</a> and <a rel="nofollow" target="_new" href="http://msdn2.microsoft.com/en-us/library/a2zdt10t" rel="nofollow">http://msdn2.microsoft.com/en-us/library/a2zdt10t</a>(VS.80).aspx ).</p>
<p>Great. Except that in a basic Win32 Console Application I cannot figure out how to do it. Nor is it an option in the real projects I have, but since those are Windows Mobile apps, I&#8217;m not really surprised (or concerned; my previous position was cross-platform across Windows and 4 different flavors of Unix/Linux; it was a considerably larger issue then).</p>
<p>&quot;The Personal Computer was intended to be used by mere mortals.&quot;</p>
<p>And you&#8217;re actually going to try to use this as a defense of Windows&#8217; (and DOS&#8217;s) convoluted command-line/batch processing? Certainly some design decisions are forgivable (such as the one mentioned in the original post), but FOR&#8217;s weirdness?</p>
<p>I&#8217;m deeply familiar with both Unix and Windows, and both have their advantages, but batch processing and automation has never been one of Windows&#8217; strengths.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-576323">
				<div id="div-comment-576323" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Gazpacho</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071210-00/?p=24233#comment-576323">
			December 11, 2007 at 3:00 am</a>		</div>

		<p>I would guess that batch files didn&#8217;t support functions because Microsoft expected that anyone doing something that sophisticated would use BASIC or one of their other fine programming language products.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-576333">
				<div id="div-comment-576333" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Chris Oldwood</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071210-00/?p=24233#comment-576333">
			December 11, 2007 at 3:38 am</a>		</div>

		<p>Zathrus,</p>
<p>Why don&#8217;t you launch Visual Studio with the correct environment in the first place, using teh /useenv switch on devenv.</p>
<p>In a batch file, setup your PATH, INCLUDE, LIB etc (we use STLport, so it makes life easier) to create your &quot;sandbox&quot; and then start devenv like this,</p>
<p>start devenv.exe /useenv solution.sln</p>
<p>We rely on this to ensure that every developer is using the correct compiler, libraries etc.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-madq42 odd alt thread-odd thread-alt depth-1" id="comment-576343">
				<div id="div-comment-576343" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/MadQ1' rel='external nofollow' class='url'>MadQ1</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071210-00/?p=24233#comment-576343">
			December 11, 2007 at 3:51 am</a>		</div>

		<p>@Zathrus: In the project properties you can set environment variables under Debugging/Environment, and you can also choose to merge the debugee&#8217;s environment with the current one. It&#8217;s been there since like, forever.</p>
<p>But even if that weren&#8217;t possible&#8230; to quote Raymond: &quot;Don&#8217;t be helpless.&quot; Are you a programmer or what? VS add-ins run in-process. Add a command to set environment variables. The debugee inherits VS&#8217;s environment (unless you have Merge Environment set to No.) I can think of at least three other ways off the top of my head on how to set environment variables for a debugee.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-576353">
				<div id="div-comment-576353" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">John Elliott</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071210-00/?p=24233#comment-576353">
			December 11, 2007 at 4:28 am</a>		</div>

		<p>@DriverDude:</p>
<p>According to Ben Armstrong&#8217;s blog, you can run CP/M-86 under Virtual PC:</p>
<p><a rel="nofollow" target="_new" href="http://blogs.msdn.com/virtual_pc_guy/archive/2004/10/16/243262.aspx" rel="nofollow">http://blogs.msdn.com/virtual_pc_guy/archive/2004/10/16/243262.aspx</a></p>
<p>The original CP/M was for the 8080 processor and if you want to run that under Windows you&#8217;ll need an emulator like MYZ80.</p>
<p>Oh, and CP/M doesn&#8217;t have environment variables at all.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-576313">
				<div id="div-comment-576313" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://greasemonkey.nonlogic.org' rel='external nofollow' class='url'>GreaseMonkey</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071210-00/?p=24233#comment-576313">
			December 11, 2007 at 2:40 am</a>		</div>

		<p>Did the 5150 manage to run 8088 corruption with 16KB of RAM? The executable is 9.7KB, although I think the sound buffer is, basically, as large as it can be on a system. I&#8217;m assuming that DOS is in ROM, amirite?</p>
<p>Oh, and by the way, the 8088 *DID* support multitasking. It wasn&#8217;t built into the CPU hardware, but it supported it through software.</p>
<p>Hmm&#8230; checksum hacks&#8230; that would be fun&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-576683">
				<div id="div-comment-576683" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Anon</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071210-00/?p=24233#comment-576683">
			December 12, 2007 at 4:54 am</a>		</div>

		<p>&quot;I never understood the lack of functions in batch files (well, you could manage to use the call keyword instead, but you know, it is considered harmful). Maybe a function keyword could have been added as syntactic sugar around the call keyword.&quot;</p>
<p>I always implemented functions using recursion. IIRC something like this &#8211;</p>
<p>@echo off</p>
<p>if &quot;%1&quot;==&quot;/function1_name&quot; goto function1_name</p>
<p>if &quot;%1&quot;==&quot;/function2_name&quot; goto function2_name</p>
<p>call thisbatchfile.bat /function1_name arg1 arg2</p>
<p>call thisbatchfile.bat /function2_name arg1 arg2</p>
<p>goto exit</p>
<p>:function1_name</p>
<p>; params are in %2, %3 etc</p>
<p>goto exit</p>
<p>:function2_name</p>
<p>; params are in %2, %3 etc</p>
<p>goto exit</p>
<p>:exit</p>
<p>&quot;As result, lots of potential programmers were brain-damaged.&quot;</p>
<p>I don&#8217;t really understand this idea at all. It seems to be that if you&#8217;re using anything simpler than C on Unix there&#8217;s no hope for you.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-576843">
				<div id="div-comment-576843" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">BryanK</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071210-00/?p=24233#comment-576843">
			December 12, 2007 at 2:48 pm</a>		</div>

		<p>Yeah, it was completely impractical then, given the hardware that DOS had to run on. &nbsp;Unix at the time was working on much, much better (&#8230;and more expensive) machines.</p>
<p>That doesn&#8217;t mean it was the wrong way to do it, though &#8212; just that the right way was impractical, and Microsoft wasn&#8217;t interested in doing it right as much as they were interested in actually selling copies of the OS.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-577233">
				<div id="div-comment-577233" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.makomk.com/' rel='external nofollow' class='url'>Aidan Thornton</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071210-00/?p=24233#comment-577233">
			December 13, 2007 at 3:26 pm</a>		</div>

		<p>By the way, surely there&#8217;s a fairly easy solution to the original problem &#8211; just get cmd.exe to run the .bat file followed by a program that dumps the environment to a file.</p>
<p>(I believe the Gentoo Linux package management system, Portage, does something like this. It&#8217;s written in an odd mixture of Python and bash shell script, and is a general mess.)</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>