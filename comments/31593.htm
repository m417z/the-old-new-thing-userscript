<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (35)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment byuser comment-author-rosyna even thread-even depth-1" id="comment-368203">
				<div id="div-comment-368203" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Rosyna</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060410-14/?p=31593#comment-368203">
			April 10, 2006 at 10:05 am</a>		</div>

		<p>Isn&#8217;t this what unexpected error handlers are for?</p>
<p>Is every single error case that windows returns documented well and only one level deep? (As in a function will never return an error returned by a function it calls?)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-368223">
				<div id="div-comment-368223" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">e.thermal</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060410-14/?p=31593#comment-368223">
			April 10, 2006 at 10:26 am</a>		</div>

		<p>consider me dumb, but i&#8217;m just curious how this might effect me or the programs I support. &nbsp;For example if a program is written that uses built-in .net runtime direcoty and file enumerating functions, aside from the odd exception would this be visible? &nbsp;Or are these programs/problems for people who are writing lower level functions? &nbsp; On another do the built-in functions even change how they operate when operating over a network? &nbsp;Is there a broker that kicks in and translates local style requests into bandwidth/latency friendly remote calls?<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-368233">
				<div id="div-comment-368233" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Adam Gates</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060410-14/?p=31593#comment-368233">
			April 10, 2006 at 10:32 am</a>		</div>

		<p>Blah why not just have the error point to an online archive of your blog?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-368263">
				<div id="div-comment-368263" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Toma Bussarov</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060410-14/?p=31593#comment-368263">
			April 10, 2006 at 10:45 am</a>		</div>

		<p>Yes, I fully understand your point of view, Raymond and my opinion is the same. Many people just don&#8217;t think enough before they end up with solution. </p>
<p>That&#8217;s why my solution to the network compatibility is different:<br />
<br /><a rel="nofollow" target="_new" href="http://blogs.msdn.com/oldnewthing/archive/2006/03/31/565878.aspx#567123" rel="nofollow">http://blogs.msdn.com/oldnewthing/archive/2006/03/31/565878.aspx#567123</a><br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-patriotb even thread-even depth-1" id="comment-368273">
				<div id="div-comment-368273" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">PatriotB</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060410-14/?p=31593#comment-368273">
			April 10, 2006 at 11:06 am</a>		</div>

		<p>&quot;Most [programs] were written to Windows XP&#8217;s rules.&quot;</p>
<p>I&#8217;d say that statement is a bit optimistic. &nbsp;The huge mass of programs that fail under limited users all were designed for 95&#8217;s rules; even NT and 2000&#8217;s rules would have had them working under LUA.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-oldnewthing bypostauthor odd alt thread-odd thread-alt depth-1" id="comment-368283">
				<div id="div-comment-368283" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Raymond+Chen+-+MSFT' rel='external nofollow' class='url'>Raymond Chen - MSFT</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060410-14/?p=31593#comment-368283">
			April 10, 2006 at 11:08 am</a>		</div>

		<p>Toma: In other words, you want to make a driver workaround contractual. I discussed this last week.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-368323">
				<div id="div-comment-368323" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">gher5</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060410-14/?p=31593#comment-368323">
			April 10, 2006 at 11:56 am</a>		</div>

		<p>&quot;At this point, the usual suspects come to the surface: How will users get updated programs that conform to the new rules? The original program&#8217;s author may no longer be alive. The source code may have been lost. Or the knowledge necessary to understand the source code may have been lost. (&quot;This program was written by an outside contractor five years ago. We have the source code but nobody here can make heads nor tails of it.&quot;) Or the program&#8217;s author may simply not consider updating that program to Windows Vista to be a priority. (After all, why bother updating version 1.0 of a program when version 2.0 is available?)&quot;</p>
<p>This isn&#8217;t a problem with Free software. &nbsp;The user can just edit the source code and recompile!</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-368343">
				<div id="div-comment-368343" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Vorn</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060410-14/?p=31593#comment-368343">
			April 10, 2006 at 12:06 pm</a>		</div>

		<p>You forgot one in your list, and it&#8217;s the one that this problem we&#8217;ve been talking about all week has:</p>
<p>The program cannot be patched at all (despite a fix being available) because it is burned into something that cannot be changed.</p>
<p>Every version of every program that has ever come out on CD or on write-protected floppies, as must every program ever burned into a device Windows might have to talk to. &nbsp;It sucks, yes, and it means that improving Windows is approximately the hardest programming job on the face of the earth.</p>
<p>Vorn</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-368353">
				<div id="div-comment-368353" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">sfb</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060410-14/?p=31593#comment-368353">
			April 10, 2006 at 12:08 pm</a>		</div>

		<p>&quot;&quot;&quot;consider me dumb, but i&#8217;m just curious how this might effect me or the programs I support. &nbsp;For example if a program is written that uses built-in .net runtime direcoty and file enumerating functions, aside from the odd exception would this be visible?&quot;&quot;&quot;</p>
<p>If the call returned a new error, such as &quot;Error_Oldnewthing_Bug_Found&quot;, and the .Net runtime turned it into a new exception, and you were running a program that was not written to handle unexpected errors, you would get this kind of popup:</p>
<p><a rel="nofollow" target="_new" href="http://www.devcity.net/net/files/articles/practical_oop_1_5.jpg" rel="nofollow">http://www.devcity.net/net/files/articles/practical_oop_1_5.jpg</a></p>
<p>and the program would just close.</p>
<p>Good programs would be written to catch unexpected errors, and either close down cleanly or prompt you to retry whatever you were doing. This could just be annoying.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-368363">
				<div id="div-comment-368363" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Gabe</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060410-14/?p=31593#comment-368363">
			April 10, 2006 at 12:14 pm</a>		</div>

		<p>&quot;PURPLE_LILACS&quot;? That sounds like something a girl would write. Raymond, I&#8217;m afraid you xyz like a girl.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-368403">
				<div id="div-comment-368403" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">BryanK</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060410-14/?p=31593#comment-368403">
			April 10, 2006 at 1:23 pm</a>		</div>

		<p>sfb: The popup would be sort of similar to that, but it wouldn&#8217;t be exactly the same. &nbsp;That&#8217;s the popup that you get when debugging the program under VS.net 2003 at least; end-users get one of two other dialogs, depending on what caught the exception.</p>
<p>If the exception gets caught by some code somewhere &quot;down&quot; in the call stack from the Application.Run(Form) method (but &quot;up&quot; in the stack from your form&#8217;s WndProc, if you override that), then the user gets a dialog with buttons for &quot;Quit&quot; (which terminates the process), &quot;Continue&quot; (which restarts the window loop from the beginning, ignoring anything you were doing at the time of the exception), and &quot;Details&quot;, which shows the type and stack backtrace of the exception. &nbsp;(This is a ThreadExceptionDialog, I think.)</p>
<p>If the exception got all the way back to the WinMain of the runtime (because it happened outside the event loop or because it happened in the &quot;Application.ThreadException&quot; handler that you can register), then the user gets a dialog saying only something about &quot;an unhandled exception has occurred&quot; with an OK and Cancel buttons. &nbsp;(Cancel tries (and fails) to launch a debugger, OK exits the process.)</p>
<p>Yes, the user gets a dialog. &nbsp;But it isn&#8217;t that one. &nbsp;;-)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-368433">
				<div id="div-comment-368433" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Nawak</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060410-14/?p=31593#comment-368433">
			April 10, 2006 at 1:40 pm</a>		</div>

		<p>@gher5</p>
<p>Yes, let&#8217;s tell users to recompile and flash a new firmware for their network attached storages.</p>
<p>Their Vista Install experiences will be great and they will tell all their friends how great it is!<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-368443">
				<div id="div-comment-368443" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">orcmid</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060410-14/?p=31593#comment-368443">
			April 10, 2006 at 1:44 pm</a>		</div>

		<p>It&#8217;s even more exciting when the breaking change is against something like Microsoft Office (and WordPerfect and &#8230;) by a group that didn&#8217;t vet their downlevel compatibility when making a level 2.0 interface that monkeyed with some of the level 1.0 APIs: <a rel="nofollow" target="_new" href="http://ODMA.info/faq/2000/07/Q000702c.htm" rel="nofollow">http://ODMA.info/faq/2000/07/Q000702c.htm</a> was produced because I just found a case of this in production software.</p>
<p>Unfortunately, treating every unexpected result code as a hard failure is particularly messy when some of the new codes are simple warnings or advisories of other kinds. &nbsp;Also, some software in the case I&#8217;m dealing with apparently treats unexpected results as silently-obeyed &quot;cancels&quot; so the end-user sees nothing and has no idea why something like &quot;File | Open &#8230;&quot; quit working. &nbsp;So users will think that it is that @#(? Office software that is broken.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-368473">
				<div id="div-comment-368473" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Jules</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060410-14/?p=31593#comment-368473">
			April 10, 2006 at 5:37 pm</a>		</div>

		<p>I still think this is the best option. &nbsp;Return an error code; existing applications should display an error message (or do something else useful) when they see it; it must have always been possible for an IO error to occur at this point (what if the network went down in the middle of a slow mode enumeration?), so they should have been written to account for this. &nbsp;Update all the apps included in Windows to recognise this error and start the enumeration again.</p>
<p>Include a registry entry to switch off fast mode. &nbsp;Document it in the MSDN entries for FindFirstFile/FindNextFile and a knowledge base article. &nbsp;Have explorer record an event the first time in each session it encounters the problem so that alert admins can spot it; the message should give brief details and a reference to the KB article. (Actually, I guess it should be possible for the SMB FS driver to record the event; this might be better, as explorer isn&#8217;t necessarily going to encounter the area.)<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-368523">
				<div id="div-comment-368523" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Cooney</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060410-14/?p=31593#comment-368523">
			April 10, 2006 at 7:25 pm</a>		</div>

		<p>Given the new information that raymond has provided, I don&#8217;t really care if embedded SAMBA is stuck in slow mode, as the primary use case is small office environments. Default to slow mode &#8211; if a server has more than 100 files in a dir, then test it for fast compatibility and act accordingly. </p>
<p>Error messages are the wrong solution, because they are, as raymond says, changing the rules after the game ends. SAMBA worked fine with the old interface &#8211; you have no business breaking them. If you&#8217;re interested in future compatibility, then publish the specs and preannounce changes like this.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-368533">
				<div id="div-comment-368533" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">memodude</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060410-14/?p=31593#comment-368533">
			April 10, 2006 at 7:27 pm</a>		</div>

		<p>How about restarting automatically in slowmode when ERROR_INVALID_LEVEL is received unless a flag disabling that functionality is specified in the call to FindNextFile?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-368553">
				<div id="div-comment-368553" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">memodude</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060410-14/?p=31593#comment-368553">
			April 10, 2006 at 7:51 pm</a>		</div>

		<p>What I mean in my previous post is:</p>
<p>FindFirst &lt;&#8211; 128 results are returned in fastmode<br />
<br />FindNext &lt;&#8211; fails, retries in slow mode, ignores the first 128 answers, and returns the second 128<br />
<br />FindNext &lt;&#8211; fastmode was blacklisted in the previous FindNext call and therefore it requests the next 128 files in slowmode</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-368413">
				<div id="div-comment-368413" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Nawak</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060410-14/?p=31593#comment-368413">
			April 10, 2006 at 1:33 pm</a>		</div>

		<p>I wrongly supposed that EAGAIN was a possible (and already existing) return code, then.</p>
<p>Now that I think about it, the occasion on which I had to retry on EAGAIN (and it was *normal*) were not that numerous&#8230; It is strange this errno stuck in my mind&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-368563">
				<div id="div-comment-368563" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Random Reader</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060410-14/?p=31593#comment-368563">
			April 10, 2006 at 9:32 pm</a>		</div>

		<p>Re &quot;unexpected error&quot; handlers: wtf?</p>
<p>The only <em>safe</em> thing a program can do on an unexpected error is quit. &nbsp;If the creator wasn&#8217;t expecting an error, he can&#8217;t possibly know how to handle it. &nbsp;And um, quitting is just as fatal as crashing.</p>
<p>How does this help anyone?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-368573">
				<div id="div-comment-368573" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">AC</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060410-14/?p=31593#comment-368573">
			April 10, 2006 at 11:50 pm</a>		</div>

		<p>&quot;This isn&#8217;t a problem with Free software. &nbsp;The user can just edit the source code and recompile!&quot;</p>
<p>See point #2: &quot; Or the knowledge necessary to understand the source code may have been lost.&quot; &#8211; I don&#8217;t see it as being any less appliccable to OSS</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-368583">
				<div id="div-comment-368583" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://steveg' rel='external nofollow' class='url'>steveg</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060410-14/?p=31593#comment-368583">
			April 10, 2006 at 11:58 pm</a>		</div>

		<p>&quot;This isn&#8217;t a problem with Free software. &nbsp;The user can just edit the source code and recompile! &quot;</p>
<p>Free doesn&#8217;t mean &#8216;source-code included&#8217;, nor does it mean &#8216;compiler included&#8217;. &nbsp;eg: i can run Win3.1 apps on XP, but I can&#8217;t compile &#8217;em in Visual Studio 2003. So even if I had the source code to Tetris.exe or Reversi.exe (3.1 apps I still use) it wouldn&#8217;t do me any good. Same applies to other free apps in other o/s.</p>
<p>(I can&#8217;t even load the 3.1 SDK anymore because I&#8217;ve not longer got a 3.5&quot; floppy drive).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-368623">
				<div id="div-comment-368623" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Toma Bussarov</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060410-14/?p=31593#comment-368623">
			April 11, 2006 at 3:20 am</a>		</div>

		<p>In reply to Raymond&#8217;s post:</p>
<p>I agree with you. &#8216;Fast mode 2&#8217; would become contractual problem if it is exposed as flag in the API. I didn&#8217;t mean that because it will be &#8216;change of the rules&#8217; in some way. </p>
<p>&#8216;Fast mode 2&#8217; must be managed by the redirector (at SMB level) and not by the application itself. This way the change will be transparent to the apps.</p>
<p>Such change might harm apps that already use &#8216;Fast mode&#8217; because they would not get it until server is upgraded.But if there are such apps they already experience the Samba bug.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-368633">
				<div id="div-comment-368633" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Aaargh!</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060410-14/?p=31593#comment-368633">
			April 11, 2006 at 4:30 am</a>		</div>

		<p>Returning an error is obviously wrong, applications shouldn&#8217;t know anything about SMB or the errors it can create, that&#8217;s the responsibility of the filesystem abstraction layer (I suppose windows has one of those). That&#8217;s where the problem should be fixed. </p>
<p>You can either retry the request in slow mode after failure and then continue giving the calling application the correct data or test if fast mode is available when accessing a server. It doesn&#8217;t really matter as long as it is hidden from the application, that&#8217;s the whole point of having a FS abstraction layer.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-368643">
				<div id="div-comment-368643" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Adam</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060410-14/?p=31593#comment-368643">
			April 11, 2006 at 7:22 am</a>		</div>

		<p>Steve: You should read <a rel="nofollow" target="_new" href="http://en.wikipedia.org/wiki/Free_Software" rel="nofollow">http://en.wikipedia.org/wiki/Free_Software</a><br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-368743">
				<div id="div-comment-368743" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.meikel.com' rel='external nofollow' class='url'>Meikel</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060410-14/?p=31593#comment-368743">
			April 11, 2006 at 12:43 pm</a>		</div>

		<blockquote><p>
  &#8216;Fast mode 2&#8217; must be managed by the<br />
  <br />&gt; redirector (at SMB level) and not by the<br />
  <br />&gt; application itself. This way the change will<br />
  <br />&gt; be transparent to the apps. </p>
<p>Just as transparent as it goes from &quot;Slow Mode&quot; to &quot;Fast Mode&quot; with Vista&#8217;s current implementation. As I understood that problem, the API in question has no problem on XP as it&#8217;s not using &quot;Fast Mode&quot; internally.</p>
<p>You create a new feature, you find it&#8217;s broken (even if it&#8217;s not your fault), you might need to implement it again.
</p></blockquote>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-368833">
				<div id="div-comment-368833" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Dean Earley</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060410-14/?p=31593#comment-368833">
			April 11, 2006 at 3:10 pm</a>		</div>

		<p>&quot;Restart over&quot; may also (however unlikely) cause potential infinite loops:<br />
<br />1) enumerate 100 files<br />
<br />2) next file causes &quot;restart&quot; error, goto 1</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-368873">
				<div id="div-comment-368873" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Adam</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060410-14/?p=31593#comment-368873">
			April 11, 2006 at 5:05 pm</a>		</div>

		<p>BrianK: Offline I&#8217;ll say &quot;Open Source&quot;. Online I tend to point people at the list of software freedoms as defined by a certain foundation, and try to explain the difference between Free Software and freeware.</p>
<p>Being vague to avoid the mod-bot,</p>
<p>Adam</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-368763">
				<div id="div-comment-368763" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">BryanK</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060410-14/?p=31593#comment-368763">
			April 11, 2006 at 1:12 pm</a>		</div>

		<p>Adam and gher5: This is why I&#8217;ve stopped referring to the software I use every day as &quot;free&quot;. &nbsp;It is free, in both senses of the word, but because there *are* two senses, too many people get confused when I say &quot;free&quot;.</p>
<p>The term &quot;open source&quot; does not have this issue, and that&#8217;s pretty much the only reason I use that term.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-368973">
				<div id="div-comment-368973" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Norman Diamond</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060410-14/?p=31593#comment-368973">
			April 12, 2006 at 1:11 am</a>		</div>

		<p>I wonder about changing the rules after the game has ended. &nbsp;These are different games played by Windows APIs but do metarules allow applying the same rules to these games.</p>
<p>As is almost well known, GetMessage returns a BOOL whose value can be TRUE, FALSE, or OTHER. &nbsp;The maker of Visual Studio 2005 deliberately decided to continue promoting bugs involving OTHER, but sufficiently informed users can alter the generated code to handle it. &nbsp;It looks to me like old rules only had TRUE or FALSE, and after the typesetting game was over, rules were changed to add OTHER.</p>
<p>EnumProcesses returns a BOOL whose value can be TRUE or FALSE. &nbsp;But the fact is there&#8217;s an OTHER possibility too. &nbsp;MSDN recommends this:</p>
<p>&gt; There is no indication given when the buffer<br />
<br />&gt; is too small to store all process<br />
<br />&gt; identifiers. Therefore, if pBytesReturned<br />
<br />&gt; equals cb, consider retrying the call with a<br />
<br />&gt; larger array.</p>
<p>Are there any possible values of TRUE that haven&#8217;t been used yet? &nbsp;For example if -1 hasn&#8217;t been used yet, then it could be used now for OTHER. &nbsp;Old apps would still work right because they would detect this nonzero value and interpret it as success, but if *pBytesReturned equals cb then they will take a slow fallback route whether it&#8217;s necessary or not, growing the array and retrying. &nbsp;New apps would check for this particular value of OTHER and would know that in this case they have to grow the array and retry, but for other successful returns they would not have to grow and retry even if *pBytesReturned equals cb.</p>
<p>&#8216;course if they do have to grow then there&#8217;s still no way to avoid a loop. &nbsp;If the API would store a value larger than cb into *pBytesReturned, in an attempt to say how big the array has to grow, then some old apps might be corrupted by it. &nbsp;(Under the old rules they could just use that returned value because it couldn&#8217;t ever be larger than cb.)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-369823">
				<div id="div-comment-369823" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">GregM</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060410-14/?p=31593#comment-369823">
			April 13, 2006 at 4:45 pm</a>		</div>

		<blockquote><p>
  For example if -1 hasn&#8217;t been used yet,<br />
  <br />&gt;then it could be used now for OTHER. &nbsp;Old<br />
  <br />&gt;apps would still work right because they<br />
  <br />&gt;would detect this nonzero value and<br />
  <br />&gt;interpret it as success,</p>
<p>Only if they did</p>
<p>if(FALSE == nResult)<br />
  <br /> &nbsp; &nbsp;handle_failure();</p>
<p>and not</p>
<p>if(TRUE == nResult)<br />
  <br /> &nbsp; &nbsp;handle_success();<br />
  
</p></blockquote>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-369873">
				<div id="div-comment-369873" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Norman Diamond</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060410-14/?p=31593#comment-369873">
			April 13, 2006 at 11:43 pm</a>		</div>

		<p>Thursday, April 13, 2006 4:45 PM by GregM<br />
<br />&gt; Only if they did<br />
<br />&gt; if(FALSE == nResult)<br />
<br />&gt; &nbsp; &nbsp;handle_failure();<br />
<br />&gt; and not<br />
<br />&gt; if(TRUE == nResult)<br />
<br />&gt; &nbsp; &nbsp;handle_success();</p>
<p>They had to. &nbsp;If an application used BOOLs as integers then it sure did have to compare nResult to FALSE rather than comparing it to TRUE, because any non-zero value meant TRUE. &nbsp;C defined Boolean operations that way on integers (and other types) and 99% of the time Microsoft has preserved it that way with BOOLs. &nbsp;Look at MSDN pages that mention a zero return vs. a nonzero return.</p>
<p>If an application used BOOLs as Booleans then the syntax would be more like this:<br />
<br /> &nbsp;if (!Result) {<br />
<br /> &nbsp; &nbsp;handle_failure();<br />
<br /> &nbsp;}<br />
<br />or:<br />
<br /> &nbsp;if (Result) {<br />
<br /> &nbsp; &nbsp;handle_success();<br />
<br /> &nbsp;}</p>
<p>By the way here&#8217;s another rule change I encountered today. &nbsp;Trying to save a page from CodeGuru, Internet Explorer saved a bunch of files and then failed on one. &nbsp;In order to change the rules consistently, it deleted everything it had saved up to that point and displayed an error message saying it couldn&#8217;t save the page. &nbsp;(By the way a meta-bytheway: &nbsp;a workaround for this problem starts by surfing while Administrator&#8230;)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-369973">
				<div id="div-comment-369973" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">GregM</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060410-14/?p=31593#comment-369973">
			April 14, 2006 at 11:28 am</a>		</div>

		<p>Normal, remember the subject matter. &nbsp;&quot;had to&quot; != &quot;did&quot;, and if the API only ever returned FALSE or TRUE, then the program worked. &nbsp;Adding a new return value, even if it is &quot;allowed&quot; by the docs, doesn&#8217;t mean that it&#8217;s not going to break anything.</p>
<p>I keep finding</p>
<p>if(TRUE == &#8230;) </p>
<p>or</p>
<p>if(true == &#8230;)</p>
<p>in the code I work on, and it makes me cringe every time. &nbsp;It works as long as the function only returns 0 or 1, but blows up when other values are returned.<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-370143">
				<div id="div-comment-370143" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Norman Diamond</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060410-14/?p=31593#comment-370143">
			April 16, 2006 at 11:36 pm</a>		</div>

		<p>Friday, April 14, 2006 11:28 AM by GregM<br />
<br />&gt; I keep finding<br />
<br />&gt; &nbsp;if(TRUE == &#8230;)<br />
<br />&gt; or<br />
<br />&gt; &nbsp;if(true == &#8230;)<br />
<br />&gt; in the code I work on, and it makes me<br />
<br />&gt; cringe every time.</p>
<p>Gads. &nbsp;I&#8217;ve seen stuff like that, but I didn&#8217;t know it was so widespread. &nbsp;Now wondering how long it will be until I get fired or censured by some employer for trying to fix that kind of code&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-371323">
				<div id="div-comment-371323" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blogs.msdn.com/oldnewthing/archive/2006/04/19/578991.aspx' rel='external nofollow' class='url'>The Old New Thing</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060410-14/?p=31593#comment-371323">
			April 19, 2006 at 10:00 am</a>		</div>

		<p>Another example of changing the rules after the game is over.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-426293">
				<div id="div-comment-426293" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://haacked.com/archive/2006/10/01/Is_Backward_Compatibility_Holding_Microsoft_Back.aspx' rel='external nofollow' class='url'>you've been HAACKED</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060410-14/?p=31593#comment-426293">
			October 1, 2006 at 9:51 pm</a>		</div>

		<p>Is Backward Compatibility Holding Microsoft Back</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>