<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (7)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment byuser comment-author-wndsks even thread-even depth-1 parent" id="comment-1324225">
				<div id="div-comment-1324225" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/skSdnW' rel='external nofollow' class='url'>skSdnW</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180207-00/?p=97985#comment-1324225">
			February 7, 2018 at 7:06 am</a>		</div>

		<p>&#8220;This is what most of Windows does&#8221; parts of kernel32 and shell32 are weird, they export A and W functions but also a non-suffixed version that is the same as the A version. GetProcAddress compatibility for ported 16-bit apps?</p>

		
				</div>
		<ol class="children">
		<li class="comment odd alt depth-2" id="comment-1324245">
				<div id="div-comment-1324245" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">ErikF</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180207-00/?p=97985#comment-1324245">
			February 7, 2018 at 8:03 am</a>		</div>

		<p><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070103-15/?p=28523">Discussed by Raymond.</a></p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment even thread-odd thread-alt depth-1 parent" id="comment-1324235">
				<div id="div-comment-1324235" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Brian</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180207-00/?p=97985#comment-1324235">
			February 7, 2018 at 7:17 am</a>		</div>

		<p>Ah, you didn&#8217;t mention UNICOWS (aka &#8220;Microsoft Layer for Unicode&#8221; or MSLU).  A great solution to a problem that had mostly gone away by the time it shipped (it was released about the time that WinXP put a nail through the heart of Win9x).</p>

		
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-alegrigoriev odd alt depth-2" id="comment-1324255">
				<div id="div-comment-1324255" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/alegr1' rel='external nofollow' class='url'>alegr1</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180207-00/?p=97985#comment-1324255">
			February 7, 2018 at 10:05 am</a>		</div>

		<p>Yes! This!</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1 parent" id="comment-1324275">
				<div id="div-comment-1324275" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Antonio Rodríguez</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180207-00/?p=97985#comment-1324275">
			February 7, 2018 at 4:05 pm</a>		</div>

		<p>Joel, of Joel on Software, wrote back in 2003 (15 years ago!) an article titled &#8220;The Absolute Minimum Every Developer Must Know About Character Sets&#8221; ( <a href="https://www.joelonsoftware.com/2003/10/08/the-absolute-minimum-every-software-developer-absolutely-positively-must-know-about-unicode-and-character-sets-no-excuses/" rel="nofollow">https://www.joelonsoftware.com/2003/10/08/the-absolute-minimum-every-software-developer-absolutely-positively-must-know-about-unicode-and-character-sets-no-excuses/</a> ).</p>
<p>I completely agree with him. But would like to add one point: every developer *should* be able to recognize, at least, the most common types of mojibake (UTF-8 to/from ANSI, Unicode [UTF-16] to/from ANSI, and ANSI to/from OEM). Each one of the first four is very characteristic, and it would help your psychic powers tell in what part of the code the bug lies. The last two, involving the OEM sets/codepages, are a bit more difficult to spot, but are useful if you need to deal with the command line or console applications.</p>

		
				</div>
		<ol class="children">
		<li class="comment odd alt depth-2 parent" id="comment-1324285">
				<div id="div-comment-1324285" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">French Guy</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180207-00/?p=97985#comment-1324285">
			February 8, 2018 at 7:37 am</a>		</div>

		<p>ANSI isn&#8217;t a single character, but multiple 8-bit character sets with significant overlap. Treating any other encoding as UTF-8 is overwhelmingly likely to produce invalid data. Treating UTF-8 as an ANSI encoding (or OEM, which is also an ASCII superset) will garble non-ASCII characters into sequences of non-ASCII characters, making the result harder to read (with how much harder depending on the language). Treating UTF-16 as UTF-8 will clip the string to 0 or 1 character (depending on endiannes and assuming NUL as the string terminator) if the string only uses ASCII (otherwise, it won&#8217;t be valid). Treating UTF-8 as UTF-16 will produce completely unrelated characters (usually Chinese). And using the wrong 8-bit ASCII superset will substitute non-ASCII characters for others.</p>

		
				</div>
		<ol class="children">
		<li class="comment even depth-3" id="comment-1324315">
				<div id="div-comment-1324315" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Antonio Rodríguez</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180207-00/?p=97985#comment-1324315">
			February 8, 2018 at 11:39 am</a>		</div>

		<p>By definition, treating a string with encoding X as encoding Y is incorrect, no matter what X and Y are, and thus, a bug. It doesn&#8217;t help to say &#8220;ANSI treated as UTF-8 will likely produce illegal bytes sequences&#8221;. When that happens, code is buggy or something has gone horribly wrong, and it&#8217;s of no use saying &#8220;it&#8217;s illegal&#8221;.</p>
<p>About the confusion on ANSI: right, technically there isn&#8217;t such thing as an &#8220;ANSI encoding&#8221;. But in informal talk, &#8220;ANSI&#8221; refers almost always to Windows-1252, itself a superset of ISO 8859-1 (a.k.a. Latin-1). In much the same way, &#8220;OEM&#8221; usually refers to DOS codepage 437 (or one of its variations, such as 850, if you are outside the USA).</p>
<p>The nearest thing to &#8220;ANSI encoding&#8221; are the ISO 8859-x encodings, and the Windows-125x code pages, which are themselves related (but not equivalent) to several ISO-8859-x encodings. But if there are several Windows codepages, why is ANSI synonym of Windows-1252? I can only speculate, but Windows-1252 was used from the first version of Windows (1985), while eastern variations were introduced in the 90s, when Windows NT was about to bring Unicode support, a better solution to the problem. So those variants didn&#8217;t get as popular as Windows-1252.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>