<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (6)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-1274505">
				<div id="div-comment-1274505" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Drak</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20161118-00/?p=94745#comment-1274505">
			November 20, 2016 at 10:15 pm</a>		</div>

		<p>For a second I was wondering why you wouldn&#8217;t just use hwndTarget for your window operations, and then you mentioned test automation.</p>
<p>Interesting article!</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1 parent" id="comment-1274516">
				<div id="div-comment-1274516" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Frerich Raabe</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20161118-00/?p=94745#comment-1274516">
			November 21, 2016 at 2:35 am</a>		</div>

		<p>Interesting article!</p>
<p>Not being aware of the idea to use a `WM_NULL` message to verify that the target window processed any window messages which the `SetForegroundWindow` call may have sent, I resorted to polling `GetForegroundWindow()` in the past (e.g. every 50 ms).</p>
<p>Does this proposed solution remove the need to poll? I wonder whether it&#8217;s possible that some application handles the request to bring a window to the foreground in funny ways, by delaying the handling a bit &#8211; i.e. the fact that `WM_NULL` was processed does not mean that the window finished whatever work it may do to bring a window to the foreground. So you&#8217;d still end up having to poll? Or is this rather a pathological scenario?</p>

		
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-archangelpip even depth-2" id="comment-1274535">
				<div id="div-comment-1274535" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Darran+Rowe' rel='external nofollow' class='url'>Darran Rowe</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20161118-00/?p=94745#comment-1274535">
			November 21, 2016 at 6:21 pm</a>		</div>

		<p>This should get rid of the need for a poll.<br />
The messages that go to the window should all be documented to be sent, and not posted. So there are some guarantees you can make from that. The messages that SetForegroundWindow send to the window procedure are in the message queue, so they will be processed in order. This means if you then send another message to that same message queue, then it will be processed after all the previous sent messages. This should mean that if the WM_NULL message is processed, then all previous sent messages by SetForegroundWindow would have been processed and thus the given window should now be the foreground window, assuming no errors occur.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-archangelpip odd alt depth-2" id="comment-1274545">
				<div id="div-comment-1274545" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Darran+Rowe' rel='external nofollow' class='url'>Darran Rowe</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20161118-00/?p=94745#comment-1274545">
			November 21, 2016 at 6:28 pm</a>		</div>

		<p>Also, by delaying any system sent messages would mean the window itself is at fault.<br />
When you process a message, you must notify if the message has been handled. By delaying the processing but lying to Windows by returning 0 or true, and also not calling the DefWindowProc function, then you are generally breaking a contract. Plus there are generally no good places to do the required processing at a later time.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment byuser comment-author-r-baeriswyl even thread-even depth-1 parent" id="comment-1274525">
				<div id="div-comment-1274525" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Roemeeeer' rel='external nofollow' class='url'>Roemeeeer</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20161118-00/?p=94745#comment-1274525">
			November 21, 2016 at 5:08 am</a>		</div>

		<p>Interesting post. I tried using that approach to wait for keyboard input (using SendInput) until it is processed. Unfortunately the SendMessageTimeout returns too early, before the input is processed.</p>

		
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-oldnewthing bypostauthor odd alt depth-2" id="comment-1274526">
				<div id="div-comment-1274526" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Raymond+Chen+-+MSFT' rel='external nofollow' class='url'>Raymond Chen - MSFT</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20161118-00/?p=94745#comment-1274526">
			November 21, 2016 at 10:42 am</a>		</div>

		<p>I discussed this <a href="https://blogs.msdn.microsoft.com/oldnewthing/20140213-00/?p=1773">earlier</a>. The trick works here because the nudge is sent in the style of a SendMessage, not as a queued message.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>