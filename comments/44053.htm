<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (34)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-1151413">
				<div id="div-comment-1151413" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Spike</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140917-00/?p=44053#comment-1151413">
			September 17, 2014 at 7:09 am</a>		</div>

		<p>Or, something I learnt from Reddit yesterday. &nbsp;Inserting a URL into C++ code?</p>
<p> {</p>
<p> &nbsp; int i = 0;</p>
<p> &nbsp; <a rel="nofollow" target="_new" href="http://www.microsoft.com">http://www.microsoft.com</a></p>
<p> &nbsp; i += 1;</p>
<p> }</p>
<p>This is perfectly legal. &nbsp;The compiler parses it as a label followed by a comment.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1151443">
				<div id="div-comment-1151443" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Rick C</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140917-00/?p=44053#comment-1151443">
			September 17, 2014 at 7:31 am</a>		</div>

		<p>Yes, but you can only do that once per&#8230;compilation unit, I&#39;d assume. &nbsp;Otherwise you get &quot;label redefined&quot; errors.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1151453">
				<div id="div-comment-1151453" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Rick C</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140917-00/?p=44053#comment-1151453">
			September 17, 2014 at 7:31 am</a>		</div>

		<p>&quot;Expires 2001/12/31&quot; spotted in a couple places.</p>
<p>Wow, Raymond&#39;s article queue&#39;s gotten REALLY deep.</p>
<div class="post">[<em>Nope, that was just an Easter egg. I wouldn&#39;t be surprised if comments like that were present in production. -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-wndsks odd alt thread-odd thread-alt depth-1" id="comment-1151473">
				<div id="div-comment-1151473" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/skSdnW' rel='external nofollow' class='url'>skSdnW</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140917-00/?p=44053#comment-1151473">
			September 17, 2014 at 7:38 am</a>		</div>

		<p>I assume ;comments in .ini files and ::labels in batch files started life as hacks that are now de facto standards and &quot;supported&quot;.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1151483">
				<div id="div-comment-1151483" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Adam Rosenfield</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140917-00/?p=44053#comment-1151483">
			September 17, 2014 at 7:49 am</a>		</div>

		<p>@Rick C: You can do that once per function, not once per translation unit.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1151543">
				<div id="div-comment-1151543" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">tialaramex</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140917-00/?p=44053#comment-1151543">
			September 17, 2014 at 8:43 am</a>		</div>

		<p>Please don&#39;t use either the C or C++ preprocessors as a &quot;poor man&#39;s macro facility&quot;.</p>
<p>These pre-processors are very carefully defined to work correctly on C (or C++ as the case may be) and have a surprising number of weird corner cases that you or the maintenance programmer will end up cursing when they interact with your non-C language inputs in a surprising way.</p>
<p>Choose a general purpose macro pre-processor. m4 is a perfectly nice choice if you have a POSIX system, but many of the readers of this blog don&#39;t, so maybe choose something else.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1151553">
				<div id="div-comment-1151553" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Gabe</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140917-00/?p=44053#comment-1151553">
			September 17, 2014 at 9:00 am</a>		</div>

		<p>I first saw the headline and thought this was going to be about the origin of DOS&#39;s REM command: DOS originally had no way to denote comments, so people used to writing BASIC defaulted to using REM at the beginning of comment lines.</p>
<p>Of course DOS didn&#39;t know what to do with REM, so it would look for a REM command and fail, effectively making the comment line a no-op. After a few years of this, Microsoft codified the behavior by making a REM command that simply does nothing, allowing you to write comments that start with REM.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1151573">
				<div id="div-comment-1151573" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140917-00/?p=44053#comment-1151573">
			September 17, 2014 at 9:39 am</a>		</div>

		<p>When using the C preprecessor on non-C code, should use the traditional preprocessor rather than the ANSI one as the ANSI one barfs something that can&#39;t get by the C lexer. The option for gcc is -traditional-cpp; not sure what it is for MSVC.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-robrobpaveza-net even thread-even depth-1" id="comment-1151593">
				<div id="div-comment-1151593" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Rob+Paveza+%5Bmsft%5D' rel='external nofollow' class='url'>Rob Paveza [msft]</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140917-00/?p=44053#comment-1151593">
			September 17, 2014 at 9:53 am</a>		</div>

		<p>The problem with this approach is that it relies on the traditional notion of &quot;being liberal with what we accept and conservative in what we produce.&quot; &nbsp;If the ACL is being parsed as a list of commands, for example, or it uses a regular expression to parse users, and the resolution of users is done each time a line is read, then the program may fail to load, or may fail to parse the ACL altogether, leaving it in some indeterminate state.</p>
<p>The preprocessed file situation greatly improves the problem from the editing side, but introduces other brittleness.</p>
<div class="post">[<em>That&#39;s why you have to be careful to structure your comments as things that are syntactically legal (but have no effect). -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1151603">
				<div id="div-comment-1151603" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Lev</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140917-00/?p=44053#comment-1151603">
			September 17, 2014 at 9:53 am</a>		</div>

		<p>Is it so hard to add a syntax for comment lines?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-robrobpaveza-net even thread-even depth-1" id="comment-1151613">
				<div id="div-comment-1151613" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Rob+Paveza+%5Bmsft%5D' rel='external nofollow' class='url'>Rob Paveza [msft]</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140917-00/?p=44053#comment-1151613">
			September 17, 2014 at 9:55 am</a>		</div>

		<p>@Lev: Particularly if you don&#39;t have source code access to the original program, yes.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-hikari odd alt thread-odd thread-alt depth-1" id="comment-1151643">
				<div id="div-comment-1151643" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Chris+Crowther' rel='external nofollow' class='url'>Chris Crowther</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140917-00/?p=44053#comment-1151643">
			September 17, 2014 at 10:50 am</a>		</div>

		<p>And that happens rather a lot in commercial environments. &nbsp;That and it&#39;s maintained by a third party and getting comments added would be a billable feature request which will never get approved by people who have to sign off on it, not when you can produce a work around for (as far as they&#39;re concerned) free.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1151653">
				<div id="div-comment-1151653" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Dan Bugglin</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140917-00/?p=44053#comment-1151653">
			September 17, 2014 at 11:27 am</a>		</div>

		<p>@Gabe Interesting, I thought at least QBASIC used &#39; for line comments. &nbsp;But maybe I am just thinking of VB, haven&#39;t used QBASIC in a while. &nbsp;Plus you are probably talking about an older BASIC variant.</p>
<p>Every DOS I&#39;ve used displayed an error for commands it couldn&#39;t find. &nbsp;And while nowadays in NT you can use 2&gt;nul to hide the error, you couldn&#39;t redirect stderr back in the DOS days. &nbsp;So I&#39;m a bit confused how that actually worked.</p>
<p>In the spirit of this discussion, you don&#39;t have to use REM for batch file comments:</p>
<p>::Copyright 2014 Initech, all rights reserved.</p>
<p>@echo off</p>
<p>: denotes labels. &nbsp;A bonus is that labels are never echoed to the console, even with &quot;echo on&quot;. &nbsp;Putting :: is a good way to make a label you won&#39;t accidentally reference later.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1151673">
				<div id="div-comment-1151673" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Christian Vogel</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140917-00/?p=44053#comment-1151673">
			September 17, 2014 at 11:58 am</a>		</div>

		<p>This first suggestion is just revolting, seriously. Please, no one ever do this.</p>
<p>The second one is fine as long as you are careful with the switches to your c-preprocessor. It might add some &quot;#pragma&quot;, &quot;#file&quot; or other things to its output file which are useful for good error reporting in the c-compiler, but will confuse any program that dumb like the example Raymond presented/made up.</p>
<p>If you ever have to deal with such idiocy, do yourself a favor and write a small perl-script (windows-guys probably will choose vbs, powershell, or similar): This script then can also do additional sanitation of the input, prevent &quot;allow all&quot; conditions, (in this example:) check that users actually exist, &#8230; Again, program that dumb as in the example (and those exist in the wild, I know&#8230;) will need any help they can get.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1151683">
				<div id="div-comment-1151683" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Rick C</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140917-00/?p=44053#comment-1151683">
			September 17, 2014 at 12:02 pm</a>		</div>

		<p>@Adam Rosenfield, I didn&#39;t try to make an exhaustive test. &nbsp;The &#8230; was supposed to indicate that. &nbsp;In any event, generally a feature you can only use once isn&#39;t all that good.</p>
<p>@tialaramex, I think (a port of) m4 is available for Dos/Windows. &nbsp;Maybe via DJGPP? &nbsp;I thought I saw it at some point years ago.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1151713">
				<div id="div-comment-1151713" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">mikeb</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140917-00/?p=44053#comment-1151713">
			September 17, 2014 at 12:09 pm</a>		</div>

		<p>&gt;&gt; m4 is a perfectly nice choice if you have a POSIX system, but many of the readers of this blog don&#39;t, so maybe choose something else. &lt;&lt;</p>
<p>And therein lies the problem. &nbsp;You&#39;ve run into the reason why people on Windows still use the cmd batch processor far, far more often than modern scripting languages like Powershell or Python.</p>
<p>The C preprocessor might have weird corner cases, but it&#39;ll handle simple stuff (like include these lines but not those lines) pretty nicely. &nbsp;And it&#39;s available (often by default, but easily otherwise) on pretty much every system. &nbsp;And it&#39;s widely understood how to use it &#8211; at least for the simple stuff.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1151723">
				<div id="div-comment-1151723" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">mikeb</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140917-00/?p=44053#comment-1151723">
			September 17, 2014 at 12:16 pm</a>		</div>

		<p>Douglas Crockford removed comment support from JSON so they wouldn&#39;t be used for metadata/directives &#8211; <a rel="nofollow" target="_new" href="https://plus.google.com/+DouglasCrockfordEsq/posts/RK8qyGVaGSr">plus.google.com/&#8230;/RK8qyGVaGSr</a> . When I&#39;ve wanted to have comments in JSON files, I&#39;ve used Raymond&#39;s suggestion of adding an otherwise ignored data item (named something like &quot;__comment&quot;) to hold a comment string.</p>
<p>Crockford suggests just using javascript comment syntax and run the file through the JSMin processor to strip them out before parsing the JSON file, similar to Raymond&#39;s suggestion of using the C preprocessor..</p>
<p>I&#39;d rather that JSON simply support a comment syntax, but there it is.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-fleet-command odd alt thread-odd thread-alt depth-1" id="comment-1151733">
				<div id="div-comment-1151733" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Fleet+Command' rel='external nofollow' class='url'>Fleet Command</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140917-00/?p=44053#comment-1151733">
			September 17, 2014 at 12:29 pm</a>		</div>

		<p>Depending on the application and its sensitivity, I&#39;ve seen two other forms of remarks:</p>
<p>1. Add &quot;REMARK Alice doesn&#39;t need access to this database&quot;, when the interpreter of the config file ignores unknown instructions like REMARK.</p>
<p>2. Add &quot;deny alice // Alice doesn&#39;t need access to this database&quot; when the interpreter only interprets the first token after &quot;allow&quot; or &quot;deny&quot;.</p>
<p>I myself never do this. These are hacks by definition and can break. I wrote a program called Compile that takes a file in the form of &quot;Filename.ext.uncompiled&quot; and writes out &quot;filename.ext&quot;, removing all lines that begin with the comment sequence. (Two 0xFF characters)</p>
<p>And I hate _ character.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1151753">
				<div id="div-comment-1151753" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">laonianren</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140917-00/?p=44053#comment-1151753">
			September 17, 2014 at 1:31 pm</a>		</div>

		<p>This is one of those things that, after years of programming, becomes second nature: if you&#39;re defining the format of a textual data file you include syntax for comments.</p>
<p>Similarly, all binary formats get a version number.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1151773">
				<div id="div-comment-1151773" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Azarien</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140917-00/?p=44053#comment-1151773">
			September 17, 2014 at 1:43 pm</a>		</div>

		<p>@Gabe: except that &quot;rem /?&quot; does SOMETHING, so your comment cannot start with &quot;/?&quot; ;-)</p>
<p>and &quot;rem /? &gt; some_existing_file&quot; may be even dangerous.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1151803">
				<div id="div-comment-1151803" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Anonymous</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140917-00/?p=44053#comment-1151803">
			September 17, 2014 at 2:24 pm</a>		</div>

		<p>FIND /V &quot;;&quot; original &gt; preprocessed</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1151823">
				<div id="div-comment-1151823" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">John Elliott</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140917-00/?p=44053#comment-1151823">
			September 17, 2014 at 3:33 pm</a>		</div>

		<p>@The MAZZTer: &#39; is accepted as a comment in Cassette BASIC on an IBM 5150, and in BASIC-80 5.2 under CP/M.</p>
<p>The CP/M command processor treats &quot;;&quot; as a comment character. In CP/M 2 it ignores input beginning with any character that isn&#39;t a valid first character for a filename ( = _ . : ; &lt; &gt; ) but in CP/M 3 it explicitly checks for &quot;;&quot;. I&#39;m guessing this behaviour didn&#39;t make its way into PCDOS 1, hence the need for REM and/or :: </p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1151853">
				<div id="div-comment-1151853" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Jordan</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140917-00/?p=44053#comment-1151853">
			September 17, 2014 at 5:11 pm</a>		</div>

		<p>As someone who works on a C++ compiler, I would advise you /not/ to use a C++ compiler to preprocess random files, because it still has to tokenize as valid C++. No unbalanced apostrophes, for example. Use m4 or something instead.</p>
<p>Also get off my lawn.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1151893">
				<div id="div-comment-1151893" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Gabe</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140917-00/?p=44053#comment-1151893">
			September 17, 2014 at 9:25 pm</a>		</div>

		<p>When I want comments in my JSON file, I just use eval to parse it instead of a JSON parser.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1151903">
				<div id="div-comment-1151903" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Klimax</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140917-00/?p=44053#comment-1151903">
			September 17, 2014 at 11:11 pm</a>		</div>

		<p>@Rick C:</p>
<p>MingW, Cygwin also native version</p>
<p><a rel="nofollow" target="_new" href="http://gnuwin32.sourceforge.net/packages/m4.htm">gnuwin32.sourceforge.net/&#8230;/m4.htm</a></p>
<p>(IIRC)DJGPP is DOS only and won&#39;t run in x64 Windows.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1151913">
				<div id="div-comment-1151913" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Lev</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140917-00/?p=44053#comment-1151913">
			September 17, 2014 at 11:44 pm</a>		</div>

		<p>@Gabe</p>
<p>But you have to make sure the file comes from a trusted source, otherwise an attacker can insert code with side effects.</p>
<p>Btw, in Matlab, str2num has precisely this problem: It calls eval.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1151943">
				<div id="div-comment-1151943" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Neil</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140917-00/?p=44053#comment-1151943">
			September 18, 2014 at 3:18 am</a>		</div>

		<p>Preprocessed XML, anyone?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-amroamroamro odd alt thread-odd thread-alt depth-1" id="comment-1151963">
				<div id="div-comment-1151963" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/amroamroamro' rel='external nofollow' class='url'>amroamroamro</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140917-00/?p=44053#comment-1151963">
			September 18, 2014 at 6:35 am</a>		</div>

		<p>@Lev:</p>
<p>which is why you should use str2double instead in MATLAB</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1151993">
				<div id="div-comment-1151993" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">@Klimax</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140917-00/?p=44053#comment-1151993">
			September 18, 2014 at 7:42 am</a>		</div>

		<p>I knew there was a version, and I was (sort of) even right, since both DJGPP and Mingw are ports of GCC. :)</p>
<p>You&#39;re right about djgpp&#8211;it&#39;s 16-bit so won&#39;t run. &nbsp;Fortunately that doesn&#39;t matter, what with m4 coming from elsewhere.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1152003">
				<div id="div-comment-1152003" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Gabe</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140917-00/?p=44053#comment-1152003">
			September 18, 2014 at 7:51 am</a>		</div>

		<p>Lev: Configuration files generally come from the correct side of the airtight hatchway, making eval a legitimate way to parse them. Here&#39;s a sample usage:</p>
<p>&quot;passwordPolicy&quot;: {</p>
<p> &nbsp; &nbsp;// expiration is in ms</p>
<p> &nbsp; &nbsp;&quot;expiresAfter&quot;: 90 /* days */ * 24 /* hours */ * 60 /* min */ * 60 /* sec */ * 1000, /* ms */</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1152103">
				<div id="div-comment-1152103" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Not Norman Diamond</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140917-00/?p=44053#comment-1152103">
			September 19, 2014 at 12:28 am</a>		</div>

		<p>@Jordan: Raymond didn&#39;t suggest using the C++ compiler, he suggested using the C++ pre-processor. </p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-bboorman odd alt thread-odd thread-alt depth-1" id="comment-1152143">
				<div id="div-comment-1152143" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Brian_EE' rel='external nofollow' class='url'>Brian_EE</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140917-00/?p=44053#comment-1152143">
			September 19, 2014 at 7:35 am</a>		</div>

		<p>I think that all of you who are discussing the various ways of pre-processing the file are missing a point. What if the person who is responsible for adding/deleting/changing the permissions (in this example Raymond gave) is a non-technical person? By layering on a whole bunch of steps/tools you add more probability of error into the process.</p>
<p>Consider this example (Boss, Jim, to secretary, Kathy, who adds people to the file)</p>
<p>Jim: &quot;Kathy, Can you add David to the database access?&quot;</p>
<p>Kathy: Adds David, saves file, forgets to pre-process</p>
<p>David: &quot;Jim, I can&#39;t access the database&quot;</p>
<p>Jim: &quot;Kathy, did you add David to the database&quot;</p>
<p>Kathy: &quot;Yes. I don&#39;t know why it&#39;s not working&quot;</p>
<p>Programmers often think like programmers and don&#39;t think like non-technical users of their products.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1152203">
				<div id="div-comment-1152203" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">!see_service_request_31415</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140917-00/?p=44053#comment-1152203">
			September 19, 2014 at 6:04 pm</a>		</div>

		<p>Why does Bob get access, but not me?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1152213">
				<div id="div-comment-1152213" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Gabe</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140917-00/?p=44053#comment-1152213">
			September 19, 2014 at 10:04 pm</a>		</div>

		<p>Brian_EE: Even technical people get multistep processes wrong. When I had to manage sendmail once upon a time, I would have to edit the /etc/aliases file once every few months. Of course sendmail never knew about that file; it just knew about /etc/mail/aliases.db.</p>
<p>So about half the time I changed an alias I would forget to run &quot;newaliases&quot; (to turn the aliases text file into the aliases.db binary file), and I would get a call about why the change didn&#39;t work.</p>
<p>Now whenever I make a system that requires a preprocessing step, I make the system recognize the the source file has changed and automatically run the preprocessor.</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>