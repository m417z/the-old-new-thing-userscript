<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (15)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-901923">
				<div id="div-comment-901923" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">ToddLa</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110317-00/?p=11193#comment-901923">
			March 17, 2011 at 8:11 am</a>		</div>

		<p>I don&#39;t think l is for long, it is for LARGE, as in LARGE pointer or model</p>
<div class="post">[<i>If you look at the Hungarian Notation documents, you&#39;ll see that &quot;lp&quot; officially stands for &quot;long pointer&quot;, not &quot;large pointer&quot;. Not that it really matters. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-901933">
				<div id="div-comment-901933" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">E. Luten</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110317-00/?p=11193#comment-901933">
			March 17, 2011 at 8:19 am</a>		</div>

		<p>@ToddLa: You mean LONG_PTR? There&#39;s no such thing as &quot;LARGE&quot; in the Win32 API AFAIK.</p>
<div class="post">[<i>Todd is going back to the <a href="http://en.wikipedia.org/wiki/Intel_Memory_Model" rel="nofollow">Intel memory models</a> which every 16-bit programmer had memorized. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-901973">
				<div id="div-comment-901973" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110317-00/?p=11193#comment-901973">
			March 17, 2011 at 11:18 am</a>		</div>

		<p>It is mildly amusing that I&#39;m used to llseek taking a 64 bit offset and returning a 64 bit position. Accidental name collision.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-902003">
				<div id="div-comment-902003" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">JonPotter</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110317-00/?p=11193#comment-902003">
			March 17, 2011 at 1:20 pm</a>		</div>

		<p>So it&#39;s a courtesy now to export functions for applications to use? Funny, I thought that was kinda the whole point of an OS.</p>
<div class="post">[<i>Strange, the linux kernel doesn&#39;t provide strcmp. They leave that to the C runtime. <a href="http://blogs.msdn.com/b/oldnewthing/archive/2007/11/23/6475511.aspx" rel="nofollow">Courtesy functions have a tendency to become support burdens</a>. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-901913">
				<div id="div-comment-901913" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Adam Rosenfield</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110317-00/?p=11193#comment-901913">
			March 17, 2011 at 7:41 am</a>		</div>

		<p>Not to be confused with the _l suffix which appears on some functions (such as the *printf_l/*scanf_l families of functions), where the l stands for locale.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-902023">
				<div id="div-comment-902023" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Jolyon Smith</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110317-00/?p=11193#comment-902023">
			March 17, 2011 at 5:31 pm</a>		</div>

		<p>&#8230; or &quot;Why did they build Windsor Castle so close to the motorway?&quot;</p>
<p>(my favourite overheard quote from an American tourist)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-901993">
				<div id="div-comment-901993" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Tom</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110317-00/?p=11193#comment-901993">
			March 17, 2011 at 11:50 am</a>		</div>

		<p>Here I was thinking that the lstrcmp() was just a locale-sensitive version of strcmp() &#8212; which it appears to be, according to the documentation. &nbsp;I never looked at strcoll().</p>
<p>Of course, one of the positive things about the lstrcmp() function is that it is exported from KERNEL32.DLL. &nbsp;If you&#39;re making a program that, for some reason (*sheepish grin*), doesn&#39;t make use of the C Runtime Library, you can still have a strcmp() function without rolling your own. :)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-902073">
				<div id="div-comment-902073" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">free as in freeway</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110317-00/?p=11193#comment-902073">
			March 18, 2011 at 5:42 am</a>		</div>

		<p>Unlikely, motorways are called freeways in US.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-902083">
				<div id="div-comment-902083" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Tihiy</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110317-00/?p=11193#comment-902083">
			March 18, 2011 at 5:53 am</a>		</div>

		<p>Those functions are nice, you can avoid C runtime and have SEH too.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-902113">
				<div id="div-comment-902113" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Kevin Eshbach</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110317-00/?p=11193#comment-902113">
			March 18, 2011 at 6:43 am</a>		</div>

		<p>Time to fire up your time machine again Raymond. &nbsp;(Can I borrow it after your done with it?)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-902263">
				<div id="div-comment-902263" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Michael</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110317-00/?p=11193#comment-902263">
			March 18, 2011 at 10:28 am</a>		</div>

		<p>You could probably borrow it before he&#39;s done with it. You humans and your silly one-directional way of thinking about time &#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-902313">
				<div id="div-comment-902313" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110317-00/?p=11193#comment-902313">
			March 18, 2011 at 7:47 pm</a>		</div>

		<p>[Strange, the linux kernel doesn&#39;t provide strcmp. They leave that to the C runtime. Courtesy functions have a tendency to become support burdens. -Raymond]</p>
<p>Normally true. In this case, it&#39;s cheap to export stdlib library functions from kernel32.dll that kernel32.dll needs anyway. Linux knerel doesn&#39;t do the same as crossing a memory barrier to get to it makes it not worth it. kernel32 is userspace.</p>
<p>Note that I&#39;m saying that really only the l&#8230; and h&#8230; functions that already exist and wsprintf had any business being exported. Yes, lstrcmp and wsprintf are a little bit clunky, but wsprintf still has its uses even today. Had there been a few more that do exactly what the C standard says I&#39;d have argued for them as well. The only ones I know of are RtlCopyMemory and RtlMoveMemory in ntdll that should have been where memcpy and memmove were redirected to but were not. (If you try to call them without doing something funky you end up in memcpy and memmove thanks to a #define in windows.h).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-902323">
				<div id="div-comment-902323" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">NativeCoder</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110317-00/?p=11193#comment-902323">
			March 19, 2011 at 2:49 am</a>		</div>

		<p>@Tihiy</p>
<p>&gt;&gt;&gt; Those functions are nice, you can avoid C runtime and have SEH too.</p>
<p>What is the advantage of not using the CRT?</p>
<p>I also noted that Raymond tends to use these l-functions (e.g. lstrcpyn) often in the code presented in this blog. What is the reason? Should we use these l-functions instead of ordinary CRT functions in our Windows apps written in native C/C++ code?</p>
<p>Thanks.</p>
<div class="post">[<i>My samples are written for brevity, and using the l-functions saves me a #include. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-902333">
				<div id="div-comment-902333" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Danny</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110317-00/?p=11193#comment-902333">
			March 20, 2011 at 11:18 am</a>		</div>

		<p>And there you go, the main reason other programming languages were invented outside Micro$oft backyard (like Pascal, Java, etc), to avoid the &quot;lame&quot; functions which only adds to the normal headache any serious application is generating.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-902343">
				<div id="div-comment-902343" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">sonnycheah</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110317-00/?p=11193#comment-902343">
			March 21, 2011 at 12:04 am</a>		</div>

		<p>I used to think they were &quot;High&quot; and &quot;Low&quot; as in most significant and least significant..</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>