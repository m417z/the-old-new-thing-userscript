<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (20)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-1143313">
				<div id="div-comment-1143313" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Kevin</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140807-00/?p=313#comment-1143313">
			August 7, 2014 at 7:06 am</a>		</div>

		<p>Presumably, this applies equally well to the disposal pattern (known as IDisposable/using in C# and various other names in other languages). &nbsp;The Dispose() method generally shouldn&#39;t fail.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1143323">
				<div id="div-comment-1143323" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">David Crowell</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140807-00/?p=313#comment-1143323">
			August 7, 2014 at 7:32 am</a>		</div>

		<p>If the VB world, this would be the one valid case for On Error Resume Next</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1143333">
				<div id="div-comment-1143333" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140807-00/?p=313#comment-1143333">
			August 7, 2014 at 8:15 am</a>		</div>

		<p>Ah yes and the real fun one. CloseHandle can return IO errors, but the handle is closed anyway.</p>
<p>This leads to the thing in Java that leads to most people cursing checked exceptions. Closing an InputStreamReader by static definition can throw IOException but it really can&#39;t as the underlying problem only happens when flushing.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1143363">
				<div id="div-comment-1143363" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Jim Lyon</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140807-00/?p=313#comment-1143363">
			August 7, 2014 at 9:32 am</a>		</div>

		<p>&quot;Cleanup functions can&#39;t fail&quot;: Right.</p>
<p>&quot;you have to soldier on&quot;: Wrong.</p>
<p>When your cleanup function fails for unknown reasons, your program no longer has any idea of what&#39;s going on. It should die. If its execution was important, somebody will restart it.</p>
<p>Of course, when you designed your program, you did plan for sudden, abrupt death, right? After all, you might suffer an I/O error during paging, the cat might trip over the power cord, or any of hundreds of other unfortunate events may occur. One of your design goals should be to ensure that sudden death of your program is an inconvenience, not a disaster.</p>
<div class="post">[<em>I agree with you. If it&#39;s a failure for an unknown reason, you should die immediately, because your state has been corrupted. But if it&#39;s a failure like &quot;Could not close the connection to the server because the server crashed&quot;, well, that&#39;s okay because the server crashed so the connection is already closed. -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1143373">
				<div id="div-comment-1143373" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Jim Lyon</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140807-00/?p=313#comment-1143373">
			August 7, 2014 at 9:50 am</a>		</div>

		<p>@Joshua: This isn&#39;t true. In Windows, CloseHandle either succeeds or returns ERROR_INVALID_HANDLE. No other error is possible. CloseHandle makes no attempt to flush cached I/O, or any other such thing.</p>
<p>If you ever get an error from CloseHandle, you should die immediately. Why?</p>
<p>Usually, this means that you tried to close a handle twice. If you do this, 999 times out of 1000, it&#39;s perfectly innocuous. But that thousandth time, the handle value has been reused, and you&#39;re randomly closing a handle that belongs to another component in your process. This leads to chaos, and an eventual bug filed against a component that is merely an innocent victim of your bug.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-mike-dimmick odd alt thread-odd thread-alt depth-1" id="comment-1143383">
				<div id="div-comment-1143383" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Mike+Dimmick' rel='external nofollow' class='url'>Mike Dimmick</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140807-00/?p=313#comment-1143383">
			August 7, 2014 at 10:44 am</a>		</div>

		<p>@David Crowell: There is no valid use for On Error Resume Next. Ever.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1143433">
				<div id="div-comment-1143433" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">mh</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140807-00/?p=313#comment-1143433">
			August 7, 2014 at 12:44 pm</a>		</div>

		<p>This probably shouldn&#39;t have had to be said, but maybe anyone reading this should append an invisible &quot;&#8230;unless the alternative is worse&quot;.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1143463">
				<div id="div-comment-1143463" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140807-00/?p=313#comment-1143463">
			August 7, 2014 at 1:18 pm</a>		</div>

		<p>@Jim Lyon: I had a test case that forced it (using a named pipe).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1143473">
				<div id="div-comment-1143473" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">avakar86</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140807-00/?p=313#comment-1143473">
			August 7, 2014 at 2:30 pm</a>		</div>

		<p>@Joshua: source code or it didn&#39;t happen. I am convinced that NtClose can only return STATUS_SUCCESS, STATUS_INVALID_HANDLE or STATUS_HANDLE_NOT_CLOSABLE and CloseHandle will likely only return their win32 equivalents.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-maurits odd alt thread-odd thread-alt depth-1" id="comment-1143483">
				<div id="div-comment-1143483" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Maurits+%5BMSFT%5D' rel='external nofollow' class='url'>Maurits [MSFT]</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140807-00/?p=313#comment-1143483">
			August 7, 2014 at 2:36 pm</a>		</div>

		<p>I would go further and say that Widget::Close should return void, not HRESULT.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1143493">
				<div id="div-comment-1143493" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Gabe</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140807-00/?p=313#comment-1143493">
			August 7, 2014 at 3:10 pm</a>		</div>

		<p>Maurits: If Widget::Close returns void, how would you signal an error like &quot;widget already closed&quot;, &quot;invalid widget&quot;, or &quot;widget not opened yet&quot;? Do you throw exceptions in exception-unsafe code? Do you assume it will never happen? Do you prevent the opportunity to debug double-close bugs?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-cheong odd alt thread-odd thread-alt depth-1" id="comment-1143563">
				<div id="div-comment-1143563" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/cheong00' rel='external nofollow' class='url'>cheong00</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140807-00/?p=313#comment-1143563">
			August 8, 2014 at 12:12 am</a>		</div>

		<p>@Gabe: For the most time, .Close() should be made to be safe to be called repetitively in .NET world. And by calling .Close() you&#39;ve indicated you no longer need it.</p>
<p>That&#39;s why you should make it returns void. You may provide a property to check the widget&#39;s status if you want, but for most of the time the status only have meaning if you attach a debugger to it or trying to reuse the object (by opening it again). In such case you can just let it fail at reopen.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1143573">
				<div id="div-comment-1143573" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Dave</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140807-00/?p=313#comment-1143573">
			August 8, 2014 at 12:54 am</a>		</div>

		<p>@Mike Dimmick: If the scope is strictly limited, it&#39;s a very useful construct. Suppose you&#39;re in an Excel app and you want to clear a range if it exists (your app will create it under some circumstances and not others) to return the sheet to a known state. What&#39;s wrong with:</p>
<p>On Error Resume Next</p>
<p>shWork.Range(&quot;InterestingRange&quot;).Clear</p>
<p>On Error Goto UsualErrorHandler</p>
<p>as opposed to trying to figure out if the name exists, then trying to ascertain if it corresponds to a range, etc, before finally clearing it? Please explain what you don&#39;t like about this.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-fredericmagnyf odd alt thread-odd thread-alt depth-1" id="comment-1143613">
				<div id="div-comment-1143613" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Medinoc' rel='external nofollow' class='url'>Medinoc</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140807-00/?p=313#comment-1143613">
			August 8, 2014 at 7:43 am</a>		</div>

		<p>&gt;The Dispose() method generally shouldn&#39;t fail.</p>
<p>This, very much. And especially not by throwing a CommunicationObjectFaultedException.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-maurits even thread-even depth-1" id="comment-1143633">
				<div id="div-comment-1143633" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Maurits+%5BMSFT%5D' rel='external nofollow' class='url'>Maurits [MSFT]</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140807-00/?p=313#comment-1143633">
			August 8, 2014 at 8:34 am</a>		</div>

		<p>&gt; how would you signal an error like &quot;widget already closed&quot;, &quot;invalid widget&quot;, or &quot;widget not opened yet&quot;</p>
<p>Closing an already-closed widget may not be an error at all, if you adopt the convention that closing is an idempotent operation.</p>
<p>You could signal the other errors by asserting or throwing an exception, if you were so inclined.</p>
<p>I have noticed, though, that cleanup routines which return HRESULTs are usually called by clients that just drop the return value on the floor.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-alegrigoriev odd alt thread-odd thread-alt depth-1" id="comment-1143643">
				<div id="div-comment-1143643" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/alegr1' rel='external nofollow' class='url'>alegr1</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140807-00/?p=313#comment-1143643">
			August 8, 2014 at 9:58 am</a>		</div>

		<p>@Joshua:</p>
<p>FlushFileBuffers</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1143703">
				<div id="div-comment-1143703" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">John Doe</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140807-00/?p=313#comment-1143703">
			August 8, 2014 at 3:57 pm</a>		</div>

		<p>@Dave, that&#39;s a recipe for unmaintainable and unreliable code. &nbsp;It&#39;s prettier and tidier, but I much prefer to (actually, I just do) either let the errors pop or check the arguments myself to do optional stuff like that.</p>
<p>Think about it, that&#39;s just try { &#8230; } catch (Exception e) {}. &nbsp;I never, ever want that, specially for an expression with two dots, a complex indexed property access and a method call.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1143763">
				<div id="div-comment-1143763" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">immibis</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140807-00/?p=313#comment-1143763">
			August 9, 2014 at 7:28 pm</a>		</div>

		<p>@Dave: There are other errors that could occur. What if the worksheet is protected? If you had explicit checks, you&#39;d crash if the worksheet is protected (as intended) but without them you continue as if the range didn&#39;t exist. (Result: Protecting a worksheet can corrupts data)</p>
<p>But it&#39;s a tradeoff between development speed and reliability. VBA heavily favours the former.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1143773">
				<div id="div-comment-1143773" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">DaveK</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140807-00/?p=313#comment-1143773">
			August 10, 2014 at 4:06 am</a>		</div>

		<p>&gt;&quot;Yes, I know that you can avoid this problem by wrapping the Doodad and Gadget handles inside a class which disconnects/destroys on destruction. That&#39;s not my point.&quot;</p>
<p>It kind of is, actually, isn&#39;t it? I mean, your point is that you should structure your code so that everything gets cleaned up even in the face of failures during earlier clean-ups, and that would be one way of doing so. Did you perhaps mean something like &quot;Discussing the merits or otherwise of specific ways of avoiding this problem is not my point&quot;?</p>
<div class="post">[<em>I&#39;m discussing the more general issue, particularly if the language you&#39;re using doesn&#39;t support destructors (for example, if you&#39;re designing a C API) or if the lifetimes of the Doodad and Gadget objects are not function-scope. (For example, you might have &quot;Connect&quot; and &quot;Disconnect&quot; methods.) -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-cheong odd alt thread-odd thread-alt depth-1" id="comment-1143793">
				<div id="div-comment-1143793" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/cheong00' rel='external nofollow' class='url'>cheong00</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140807-00/?p=313#comment-1143793">
			August 10, 2014 at 6:57 pm</a>		</div>

		<p>&gt; I have noticed, though, that cleanup routines which return HRESULTs are usually called by clients that just drop the return value on the floor.</p>
<p>Btw, I&#39;ve seen people drops return values that should never be dropping on the floor like ReadFile() on a file transfer routine.</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>