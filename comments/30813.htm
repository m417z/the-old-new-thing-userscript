<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (35)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-393433">
				<div id="div-comment-393433" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">BryanK</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060620-13/?p=30813#comment-393433">
			June 20, 2006 at 12:39 pm</a>		</div>

		<p>And for people wondering how to set up an ACL on the named mutex, see this sample code page on MSDN (at least, I assume it works; I&#8217;ve never actually used it yet):</p>
<p><a rel="nofollow" target="_new" href="http://msdn.microsoft.com/library/default.asp?url=/library/en-us/secbp/security/creating_a_dacl.asp" rel="nofollow">http://msdn.microsoft.com/library/default.asp?url=/library/en-us/secbp/security/creating_a_dacl.asp</a></p>
<p>That function takes a pointer to the SECURITY_ATTRIBUTES structure that you later pass to CreateMutex (or OpenMutex, but the Create version is probably preferred for single instance detection).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-393453">
				<div id="div-comment-393453" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.csc.calpoly.edu/~bfriesen/' rel='external nofollow' class='url'>Brian Friesen</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060620-13/?p=30813#comment-393453">
			June 20, 2006 at 12:49 pm</a>		</div>

		<p>Interesting. &nbsp;I&#8217;ve written single-instance programs in the past, and the thought never entered my mind that someone might intentionally use my mutex handle to prevent my program from running. &nbsp;I guess my mind isn&#8217;t malicious enough to think of things like this. &nbsp;I&#8217;ll have to keep this in mind the next time I consider a single-instance program.<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-393463">
				<div id="div-comment-393463" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Mike</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060620-13/?p=30813#comment-393463">
			June 20, 2006 at 12:52 pm</a>		</div>

		<p>This is an interesting dilemma. I have myself a program that needs to be the single instance per winsta. It registers a few kbdhooks, and performs a system-wide well defined and most certainly useful function (ok, it&#8217;s a volume control). This way it works for all desktops I create too. I use a global atom as the named object.</p>
<p>As I obviously also cannot safeguard against the mentioned scenario (nothing can, not even things like e.g. Task Manager, that I suspect must use a desktop-local object, as even that you can not bring up another instance of it on &nbsp;another desktop using the kbd shortcut, you can get another instance starting if you run taskmgr.exe from e.g. a command prompt on another desktop &#8211; or is this a sign of things started by winlogon having named object created in another &quot;instance of something&quot; and therefore is not checked when checking for such a named object from another desktop?), is a global atom the best option for this scenario? I mean, let&#8217;s say two or more clients are connected to a terminal server^2-running machine, would the installed hooks and the named object I check for be confined to the same scope (namespace lookup and hooking behaviour)? Would a NULL/non-null security context make a difference, should I switch to (mis-)using a mutex instead?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-393483">
				<div id="div-comment-393483" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Gabe</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060620-13/?p=30813#comment-393483">
			June 20, 2006 at 1:24 pm</a>		</div>

		<p>I believe most programs single-instance themselves by just looking for their window class. If they see a window with that class already in existence, they bring it to the foreground and exit, otherwise they open their own window. This makes the instance per-desktop.</p>
<p>Mac OS (prior to version X, at least) had a much different way of single-instancing all programs. It would look at the file, and if that file was already running, it would just switch to the running version instead of launching it. This meant that you could run multiple instances of an app just by copying the main executable.</p>
<p>That brings up an interesting point. Instead of naming your mutex/atom/window class/whatever a constant that any attacker can compile into their program, you can use your EXE&#8217;s path. That means any attacker would have to somehow determine at runtime what your shared &quot;secret&quot; is, which would be almost impossible when you consider your program could run from the network. This method also allows the user to override your single-instancing by creating a copy of the EXE and running that.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-393493">
				<div id="div-comment-393493" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Teis Johansen</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060620-13/?p=30813#comment-393493">
			June 20, 2006 at 1:45 pm</a>		</div>

		<p>One particular problem I have come across with the global mutex approach is when running as a low-privilege user and an administrator, or more generally when there are multiple users logged in. If you use a global mutex in to ensure a single instance, your application will seem to fail (ie. never launch) for the second user to launch it. I have come across this behavior even in expensive commercial applications (yes, I run as a low-privilege user and yes, even when writing software)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-393503">
				<div id="div-comment-393503" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.werkema.com' rel='external nofollow' class='url'>Sean W.</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060620-13/?p=30813#comment-393503">
			June 20, 2006 at 2:41 pm</a>		</div>

		<p>I&#8217;ve thought for a while now that the whole notion of a single-instance program was an inherently bad one, and even though I&#8217;ve installed thousands of programs over the years, I&#8217;ve yet to find one where single-instance behavior would be better than multiple-instance behavior from a usability perspective. &nbsp;Denial of service indeed: &nbsp;Single-instance software does little more than deny the user his right to use his software how he wants. &nbsp;I think the easiest way around this &quot;security hole&quot; is to just design your software to allow multiple instances.</p>
<p>(Oh, and Raymond, you have a minor thinko in one of your sentences: &nbsp;&quot;Consequently, you cannot protect AGAINST yourself perfectly against a denial of service&#8230;&quot;)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-393513">
				<div id="div-comment-393513" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Boris Zakharin</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060620-13/?p=30813#comment-393513">
			June 20, 2006 at 4:00 pm</a>		</div>

		<p>I disagree. What if you are an installer? Or an audio player or a CD burning software? What if you are a Windows shell or the display properties control panel?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-393523">
				<div id="div-comment-393523" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://webathome.org/' rel='external nofollow' class='url'>Pieter van Ginkel</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060620-13/?p=30813#comment-393523">
			June 20, 2006 at 4:39 pm</a>		</div>

		<p>I was wondering. You can create DLL&#8217;s with shared memory using following statement in the DEF file: </p>
<p>SECTIONS .SECTIONNAME READ WRITE SHARED </p>
<p>If you use that block of memory to e.g. keep a reference count; wouldn&#8217;t that be a fail safe way of implementing this feature? This cannot be hijacked if you, e.g., check the path of the modules that increase or decrease the ref count. </p>
<p>Am I missing something?</p>
<div CLASS=post>[<i>You&#8217;re replacing one security hole with an even bigger security hole. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-393533">
				<div id="div-comment-393533" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.werkema.com' rel='external nofollow' class='url'>Sean W.</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060620-13/?p=30813#comment-393533">
			June 20, 2006 at 4:40 pm</a>		</div>

		<p>Boris: &nbsp;Explain to me why any of those should be prohibited from having multiple instances. &nbsp;I can come up with legitimate reasons for each one you named to have multiple instances:</p>
<p>Installer: You want multiple installations to different directories for different users, and to save time, you want to run the installations in parallel (this kind of time saving is especially significant in corporate and university environments).</p>
<p>Audio player or CD burner: &nbsp;What if the user has multiple CD-ROM drives or audio systems? &nbsp;I have a friend in the recording business who has three audio cards in his computer, and sometimes uses all three at once. &nbsp;He often uses special audio software solely to get around the single-instance limitations that many audio/video programs have.</p>
<p>Shell: &nbsp;The user wants to compare different settings on the shell to see their effects, so she runs two copies, one as the &quot;control&quot; and one as the &quot;experiment&quot;.</p>
<p>Display properties: &nbsp;I have three monitors on this very computer. &nbsp;The fact that I&#8217;m only allowed one Display Properties dialog is often irritating to me, as I often want to change properties of the monitors separately &#8212; but can&#8217;t.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-393553">
				<div id="div-comment-393553" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.guyswithtowels.com' rel='external nofollow' class='url'>Tim</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060620-13/?p=30813#comment-393553">
			June 20, 2006 at 5:07 pm</a>		</div>

		<p>I&#8217;ve written a program that lets you keep notes on the desktop &#8211; it automatically saves periodically to a file in the user&#8217;s My Documents folder.</p>
<p>I prevent multiple instances (by the same user), because otherwise data corruption could (i.e. would) occur.</p>
<p>I could change the app so you can configure where to save the data, but that would make it more complicated (one of the points of the program is its simplicity), and hardly any one would use the feature. &nbsp;Lots of people would be confused by it. &nbsp;The user interface would be pointlessly split between multiple instances too. &nbsp;There would be multiple icons in the notification area, too. &nbsp;Cats and dogs living together, etc.</p>
<p>I think people who can&#8217;t think of any examples of where single-instance programs are a good idea aren&#8217;t thinking all that hard. &nbsp;There aren&#8217;t many, but they certainly exist.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-393563">
				<div id="div-comment-393563" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.agilent.com/find/infiniium' rel='external nofollow' class='url'>Chris Grove</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060620-13/?p=30813#comment-393563">
			June 20, 2006 at 5:15 pm</a>		</div>

		<p>Sean W,</p>
<p>Kiosk and other &quot;embedded&quot; applications are usually single-instance programs. It makes very little sense that multiple instances are available in closed or limited systems. </p>
<p>In our embedded Windows system (running under Windows XP), there is a strong coupling between our hardware configuration and the user application state. There would be very little gain to allow the user an additional instance as it would have to configured identically to the original.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-393573">
				<div id="div-comment-393573" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Adam</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060620-13/?p=30813#comment-393573">
			June 20, 2006 at 5:43 pm</a>		</div>

		<p>Sean: You mention a focus on usability. Do you intend your comments to also hold for system level services/daemons? e.g. the system logger, the RPC daemon, the SMB service, a threaded webserver, a database server, etc&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-393593">
				<div id="div-comment-393593" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Brian</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060620-13/?p=30813#comment-393593">
			June 20, 2006 at 6:26 pm</a>		</div>

		<p>Things that run full screen (ie: video games) are almost always single instanced because triple-clicking the icon would launch two full-screen versions of the game and they&#8217;d both run super slow. &nbsp;The user wouldn&#8217;t know what&#8217;s going on and think the game is just slow and buggy.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-393603">
				<div id="div-comment-393603" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://cs.usu.edu.ru/home/skrobov/' rel='external nofollow' class='url'>A. Skrobov</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060620-13/?p=30813#comment-393603">
			June 20, 2006 at 6:26 pm</a>		</div>

		<blockquote><p>
  Task Manager, that I suspect must use a<br />
  <br />&gt; desktop-local object, as even that you can<br />
  <br />&gt; not bring up another instance of it on<br />
  <br />&gt; another desktop using the kbd shortcut, you<br />
  <br />&gt; can get another instance starting if you run<br />
  <br />&gt; taskmgr.exe from e.g. a command prompt on<br />
  <br />&gt; another desktop<br />
  <br />Task Manager must be broadcasting a secret message to all windows (on current desktop), and waiting for a response within certain time.<br />
  <br />When the machine is loaded too high (creating a hundred top-level windows is usually enough), you can launch any number of taskmgr&#8217;s with the keyboard shortcut.
</p></blockquote>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-393423">
				<div id="div-comment-393423" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Adam</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060620-13/?p=30813#comment-393423">
			June 20, 2006 at 12:07 pm</a>		</div>

		<p>One of the many ways that you hinted at that sprang to my mind here was &quot;listening on a specific network port&quot;, as a webserver does. Only one process can listen for connections on port 80 for a given IP address. If someone else is already doing it, you don&#8217;t get to.</p>
<p>Consequently, if one instance of your program has wedged, you can&#8217;t just start another one and expect it to start listening. You have to kill the old one first.</p>
<p>The security priveliges that can be used in this case is to only allow specific users/executables to listen to certain ports. I know that most unix-style systems require a process to be running as root to bind to ports &lt; 1024; ISTR something along the lines that Windows systems *can* administered to require an ACL to be set for an executable that will allow it to bind to a specific port?<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-393623">
				<div id="div-comment-393623" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Coderjoe</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060620-13/?p=30813#comment-393623">
			June 20, 2006 at 8:28 pm</a>		</div>

		<p>One big reason for a program being single-instance is when it uses some limited hardware resource, such as a framegrabber in a system doing manufacturing process control system. You can&#8217;t really have two programs trying to access the same card at the same time. If you tried, they would usually interfere, if the drivers even allowed you to do so.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-393633">
				<div id="div-comment-393633" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Miral</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060620-13/?p=30813#comment-393633">
			June 20, 2006 at 8:58 pm</a>		</div>

		<p>Even so, the program itself shouldn&#8217;t single-instance, it should just protect the single-instance nature of the resource.</p>
<p>In your example, you should be able to launch multiple instances of the process control software, provided that each one is talking to a different framegrabber.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-393643">
				<div id="div-comment-393643" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Coderjoe</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060620-13/?p=30813#comment-393643">
			June 20, 2006 at 9:09 pm</a>		</div>

		<p>This process control software generally runs similar to a kiosk. It needs to start up and start running pretty much without any user intervention whatsoever, even if humans will be looking at the screen to see if there is a problem or not.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-393543">
				<div id="div-comment-393543" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">David Walker</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060620-13/?p=30813#comment-393543">
			June 20, 2006 at 5:04 pm</a>		</div>

		<p>Some applications that bring up modal windows for things that IMHO should not be modal &#8212; such as SQL Server 2000&#8217;s Enterprise Manager &#8212; force me to bring up two or three copies of the application.</p>
<p>When I&#8217;m editing a stored procedure in Enterprise Manager, it uses a modal window to let me edit the procedure. &nbsp;I often need to glance at another procedure, or look at the definition of a table, or even add a field to a table, while I&#8217;m editing the stored proc.</p>
<p>It irritates me to no end that E.M. uses a modal window for something that shouldn&#8217;t be modal. </p>
<p>I would be *really* annoyed if Enterprise Manager limited itself to one running copy on my system; thankfully, it doesn&#8217;t.</p>
<p>(As an aside, the SQL 2005 tools are much better than the 2000 ones.)</p>
<p>David<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-393683">
				<div id="div-comment-393683" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">steveg</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060620-13/?p=30813#comment-393683">
			June 21, 2006 at 1:32 am</a>		</div>

		<p>Is this something that could (or should have) be[en] added to the OS? Add a flag against an EXE. Single-instance executables are such a common thing to do.</p>
<p>Hmmmm&#8230; it could probably be done to a &quot;mostly good enuf&quot; level.</p>
<p>The sort of thing that needs to be avoided is an app impersonating your virus scanner or firewall.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-393693">
				<div id="div-comment-393693" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Mark Steward</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060620-13/?p=30813#comment-393693">
			June 21, 2006 at 2:11 am</a>		</div>

		<p>Norman: It&#8217;s actually the Properties page that&#8217;s modal for some obscure reason. &nbsp;Try pressing Ctrl+F3.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-393673">
				<div id="div-comment-393673" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Norman Diamond</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060620-13/?p=30813#comment-393673">
			June 20, 2006 at 9:21 pm</a>		</div>

		<p>&gt; A single-instance program is its own denial<br />
<br />&gt; of service! [&#8230;] Your program requirements<br />
<br />&gt; are themselves a security vulnerability.</p>
<p>True and mostly false, respectively. &nbsp;If the denial of service is a security vulnerability then the program requirements are a security vulnerability, but maybe that just means you have to find another way to avoid the security vulnerability.</p>
<p>If your program is going to run on a Windows Mobile Smartphone or Pocket PC, then the program requirements include this denial of service. &nbsp;Even though you Mr. Chen didn&#8217;t set this requirement, ordinary programmers didn&#8217;t set it either. &nbsp;Your company lets you and us contend with this requirement.</p>
<p>Tuesday, June 20, 2006 5:04 PM by David Walker<br />
<br />&gt; It irritates me to no end that E.M. uses a<br />
<br />&gt; modal window for something that shouldn&#8217;t be<br />
<br />&gt; modal. [&#8230;] I would be *really* annoyed if<br />
<br />&gt; Enterprise Manager limited itself to one<br />
<br />&gt; running copy on my system;</p>
<p>Try Outlook Express. &nbsp;When you open a Message Source window it&#8217;s modal, so you have to open another running copy of Outlook Express in order to create a new mail message and switch back and forth between the Message Source of one and the text of the other, except that Outlook Express doesn&#8217;t let you open another running copy.</p>
<p>Tuesday, June 20, 2006 6:26 PM by A. Skrobov<br />
<br />&gt; When the machine is loaded too high (creating<br />
<br />&gt; a hundred top-level windows is usually<br />
<br />&gt; enough), you can launch any number of<br />
<br />&gt; taskmgr&#8217;s with the keyboard shortcut.</p>
<p>I didn&#8217;t need a hundres top-level windows. &nbsp;Windows 2000 frequently hanged for no visible reason with only about 10 windows open but idle. &nbsp;Taskmgr wouldn&#8217;t respond. &nbsp;Ctrl-Alt-Delete could create another taskmgr. &nbsp;After opening around 20 taskmgr windows, *those* saturated the CPU for a while, but the underlying problem didn&#8217;t go away and was still unknown.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-393713">
				<div id="div-comment-393713" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Francois Boucher</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060620-13/?p=30813#comment-393713">
			June 21, 2006 at 7:40 am</a>		</div>

		<p>We use a named mutex with the name of the EXE and also use the psapi.dll to check if the exe is really started using the full path. </p>
<p>Trusting a mutex only is dangerous.</p>
<div CLASS=post>[<i>PSAPI doesn&#8217;t give you the path to mutex owner. How do you know that the mutex owner is another copy of yourself? -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-393723">
				<div id="div-comment-393723" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Pascal</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060620-13/?p=30813#comment-393723">
			June 21, 2006 at 7:41 am</a>		</div>

		<p>Pieter:<br />
<br />Raymond discussed why .shared sections are a security hole here: <a rel="nofollow" target="_new" href="http://blogs.msdn.com/oldnewthing/archive/2004/08/04/208003.aspx" rel="nofollow">http://blogs.msdn.com/oldnewthing/archive/2004/08/04/208003.aspx</a></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-393743">
				<div id="div-comment-393743" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://webathome.org' rel='external nofollow' class='url'>pvginkel</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060620-13/?p=30813#comment-393743">
			June 21, 2006 at 8:26 am</a>		</div>

		<p>Pascal:<br />
<br />Thank you. I was wondering why Raymond didn&#8217;t approve :).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-393833">
				<div id="div-comment-393833" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Dan McCarty</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060620-13/?p=30813#comment-393833">
			June 21, 2006 at 5:00 pm</a>		</div>

		<p>Raymond said: <br />&#8220;Your program requirements are themselves a security vulnerability.&#8221; </p>
<p>So then why does the Windows shell single-instance itself?</p>
<div CLASS=post>[<i>Engineering is about trade-offs. In exchange for the benefits of single-instance, you become susceptible to a name squatting attack from a same-privileged user. The benefit outweighs the cost, seeing as a same-privilege user can just TerminateProcess explorer if it wants to. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-393943">
				<div id="div-comment-393943" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">IanA</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060620-13/?p=30813#comment-393943">
			June 22, 2006 at 4:01 am</a>		</div>

		<p>Apologies, not directly a &#8216;A single-instance program is its own denial of service&#8217; question, but sort of related. What Mutex namespace do applications running as Scheduled Tasks use? From experience it does not seem to be the same as Desktop Apps.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-393983">
				<div id="div-comment-393983" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Jules</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060620-13/?p=30813#comment-393983">
			June 22, 2006 at 5:24 am</a>		</div>

		<p>One of my many security mantras is &quot;you can&#8217;t protect yourself from malware running with your own priveleges&quot;. &nbsp; That applies to this situation, and to a number of others.</p>
<p>For example, I never really understood the point of outbound connection filtering on a software firewall, yet I so frequently see people saying that the Windows firewall is useless because it doesn&#8217;t do it. &nbsp;Err.. no, it&#8217;s not useless. &nbsp;The feature&#8217;s useless, because it is trivial for any application to circumvent it if you have the privelege to use your own network connection. &nbsp;Which I assume you do.</p>
<p>So quit worrying about malware running in your own context. &nbsp;There&#8217;s nothing you can do about it other than prevent it from getting there.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-393993">
				<div id="div-comment-393993" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Aaargh!</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060620-13/?p=30813#comment-393993">
			June 22, 2006 at 5:59 am</a>		</div>

		<p>&quot;For example, I never really understood the point of outbound connection filtering on a software firewall&quot;</p>
<p>That&#8217;s easy. the point is to increase the visibility of the firewall software. If you sell a firewall that installs and then is never heard from again, people feel like they spent money on something that doesn&#8217;t do anything. If, however, the firewall pops up every few hours users get the impression that it&#8217;s doing a really good job protecting them.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-394013">
				<div id="div-comment-394013" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://webathome.org/' rel='external nofollow' class='url'>pvginkel</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060620-13/?p=30813#comment-394013">
			June 22, 2006 at 7:24 am</a>		</div>

		<p>A different reason of course is to disallow browser helper objects and zombie processes to connect to their respective servers or send their SPAM. Of course, having a computer that has these processes running is fully (brain) dead. But then again, whom are these firewalls targeted at?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-394023">
				<div id="div-comment-394023" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Mike</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060620-13/?p=30813#comment-394023">
			June 22, 2006 at 7:31 am</a>		</div>

		<p>Aaargh! wrote about outbound filtering:<br />
<br />&quot;That&#8217;s easy. the point is to increase the visibility of the firewall software.&quot;</p>
<p>If you say so.</p>
<p>In more security concious circles it&#8217;s however used to block traffic (-attempts) that otherwise could reach unintended or outright unwanted destinations (such as the internet), where it doesn&#8217;t belong. For examples of such traffic, one could mention both src and dst ports 135-139 and 445.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-394593">
				<div id="div-comment-394593" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Norman Diamond</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060620-13/?p=30813#comment-394593">
			June 22, 2006 at 8:23 pm</a>		</div>

		<p>Incoming spams in Outlook Express used to persuade Outlook Express to call home to spam servers, informing spammers of which e-mail addresses were working and increasing the amounts of spam sent to those addresses. &nbsp;Outbound filtering in firewalls stopped Outlook Express from download graphics and stopped Outlook Express from sending HTTP requests to servers other than the mail servers allowed by the users, so a lot of that feedback stopped. &nbsp;XP SP2 helped stop some of this without the need for outbound firewalls any more, except where XP SP2 didn&#8217;t stop it, and except for W2K and W98 etc.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-395253">
				<div id="div-comment-395253" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.morganalley.com' rel='external nofollow' class='url'>Dewi Morgan</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060620-13/?p=30813#comment-395253">
			June 24, 2006 at 5:56 am</a>		</div>

		<p>The reason that outbound firewalls work at the moment (and are a very, very good thing to have) is that they are in the minority: very few users have them, and there are several available. That means it&#8217;s not worth writing malware to dodge them: you&#8217;d be writing malware for a tiny target market.</p>
<p>Once Vista brings outbound filtering in, malware will need to find a way to dodge it because EVERYONE will have it. Dodging outbound filtering would have become the norm instead of the exception. So, if I understand right, the Vista outbound filtering required some core changes to how services are identified, giving each one an allegedly-unspoofable unique ID.</p>
<p>Of course that&#8217;s still fairly trivial to get around for the malware, but if MS hadn&#8217;t raised the bar at least a little, then there would have been absolutely no point at all in putting outbound filtering into Vista.</p>
<p>Far be it from me to point out that, with their FW doing outbound filtering, and being the only FW that protects the system at bootup, MS are looking to push the other FW producers out the market&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-395373">
				<div id="div-comment-395373" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">name that is required</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060620-13/?p=30813#comment-395373">
			June 25, 2006 at 1:06 pm</a>		</div>

		<p>ghm&#8230; I&#8217;m always using volatile keys under HKCU/Software instead of mutexes. Just for reason above.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-485473">
				<div id="div-comment-485473" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blog.iridescence.no/Posts/CreatingaSingleInstanceApplicationinC.aspx' rel='external nofollow' class='url'>blog.iridescence.no</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060620-13/?p=30813#comment-485473">
			March 24, 2007 at 6:47 am</a>		</div>

		<p>PingBack from <a rel="nofollow" target="_new" href="http://blog.iridescence.no/Posts/CreatingaSingleInstanceApplicationinC.aspx" rel="nofollow">http://blog.iridescence.no/Posts/CreatingaSingleInstanceApplicationinC.aspx</a></p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>