<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (31)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-207703">
				<div id="div-comment-207703" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://weblogs.asp.net/larryosterman' rel='external nofollow' class='url'>Larry Osterman</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040903-00/?p=37973#comment-207703">
			September 3, 2004 at 7:18 am</a>		</div>

		<p>Don&#8217;t forget that on an MP system, while in physics, things can happen with a great deal more simultaneity than they can on a UP system.</p>
<p>The same is true for HT machines (which aren&#8217;t REALLY MP machines, but behave as if they were for most intents and purposes).</p>
<p>On the other hand, the NT scheduler&#8217;s pretty good at context switching code at the worst possible time, even on UP systems.  I&#8217;ve been amazed at how often the NT scheduler has shown even tiny race conditions in my code.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-207723">
				<div id="div-comment-207723" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.kernelmustard.com' rel='external nofollow' class='url'>Steve Dispensa</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040903-00/?p=37973#comment-207723">
			September 3, 2004 at 8:15 am</a>		</div>

		<p>There was just a thread on NTDEV the other day discussing synchronizing work items with DPCs.  The poster didn&#8217;t realize that you have no idea what the relative ordering of execution of DPCs and threads will be, and therefore you have to use synchronization mechanisms to keep things straight.</p>
<p>I can&#8217;t find the link at the moment but it should be indexed by OSR soon.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-207733">
				<div id="div-comment-207733" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Paul C.</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040903-00/?p=37973#comment-207733">
			September 3, 2004 at 8:17 am</a>		</div>

		<p>I&#8217;m not sure that I&#8217;d use the physics thing to explain it.  Rather, I&#8217;d tell him that &lt;b&gt;nothing&lt;/b&gt; on a computer ever happens simultaneously.  Moreover, unless you take steps to guarantee the order in which something happens, you cannot know which thread is going to execute first.  Therefore, you can assume that half of the time, X will happen first, and half of the time, Y will happen first.  So in the case of closing a file handle and using it &quot;simultaneously&quot;, if having their code fail half of the time is acceptable for their program, then by all means they can write their code in that manner.  Or, if I was being harsh that day, I&#8217;d just tell them it&#8217;s a silly question and that they should make their code to be safe in the first place, rather than spend their time wondering about what laziness they can get away with.  But that&#8217;s just me.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-207743">
				<div id="div-comment-207743" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">DCD</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040903-00/?p=37973#comment-207743">
			September 3, 2004 at 8:17 am</a>		</div>

		<p>Not to be anal, but relativity doesn&#8217;t break causality &#8211; that is if x occurs before y then it will always be true for all frame of references.  If John shoots Abe, there are no frame of refrences where Abe shoots John.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-207753">
				<div id="div-comment-207753" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://weblogs.asp.net/oldnewthing/' rel='external nofollow' class='url'>Raymond Chen</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040903-00/?p=37973#comment-207753">
			September 3, 2004 at 8:24 am</a>		</div>

		<p>True, if X and Y are timelike separated then X will always occur before Y. My point was that if X and Y are simultaneous in the rest frame (therefore: spacelike separation), then you can always find a moving observer which will see X before Y and another who will see Y before X.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-207773">
				<div id="div-comment-207773" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ben Hutchings</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040903-00/?p=37973#comment-207773">
			September 3, 2004 at 9:24 am</a>		</div>

		<p>Merle: I think the handle functions are atomic (in fact they probably have to be to maintain the integrity of the OS) so that isn&#8217;t an issue, though it would be something to consider in user-written code.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-207783">
				<div id="div-comment-207783" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ben Hutchings</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040903-00/?p=37973#comment-207783">
			September 3, 2004 at 9:26 am</a>		</div>

		<p>&quot;Simultaneously&quot; really just means &quot;between two consecutive points at which the two threads are synchronised&quot; here, right?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-207813">
				<div id="div-comment-207813" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.valhallalegends.com/skywing' rel='external nofollow' class='url'>Skywing</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040903-00/?p=37973#comment-207813">
			September 3, 2004 at 9:43 am</a>		</div>

		<p>Functions that use a handle will reference it and turn it into an object pointer &#8212; it&#8217;s at this point where either the function will fail because the handle went away (or refers to the wrong type of object, grants the wrong type of access, etc), or the object&#8217;s reference count is incremented so that closing the handle will not make the object go away.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-207823">
				<div id="div-comment-207823" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Doug</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040903-00/?p=37973#comment-207823">
			September 3, 2004 at 11:54 am</a>		</div>

		<p>What makes me shiver is thought of the environment has brought Raymond to be so forceful in explaining basic computer science concepts.</p>
<p>I&#8217;m surprised he&#8217;s not in jail for murder.  I suspect I would be&#8230;.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-207833">
				<div id="div-comment-207833" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Keith Moore [exmsft]</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040903-00/?p=37973#comment-207833">
			September 3, 2004 at 1:37 pm</a>		</div>

		<p>Just throwing this out for general amusement&#8230;</p>
<p>There is an even more annoying race that can be caused by two threads closing the same handle. This race involves three threads. Consider:</p>
<p>1. Thread A closes handle H.<br />
<br />2. Thread B also closes handle H.</p>
<p>In between sneaks Thread C:</p>
<p>1.5. Thread C calls some API that creates a handle, and the system happens to return handle H.</p>
<p>So now, Thread C thinks it has created a handle (to a file or whatever), but Thread B has closed it &quot;behind Thread C&#8217;s back&quot;.</p>
<p>Kaboom.<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-207843">
				<div id="div-comment-207843" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://weblogs.asp.net/robdelacruz' rel='external nofollow' class='url'>robdelacruz</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040903-00/?p=37973#comment-207843">
			September 3, 2004 at 1:48 pm</a>		</div>

		<p>Interesting post. However I believe absolute simultaneity is valid given the same point in spacetime. In your example, X = close handle A; Y = use handle A. A would be a single point in 4D spacetime, so it can be measured absolutely.</p>
<p>What doesn&#8217;t work is when you try to compare two different points in spacetime. Ex: X = close handle B; Y = use handle C. B and C are two different points, therefore with special relativity, B and C could occur earlier than the other depending on your frame of reference, but the order is irrelevant. In computer terms, it wouldn&#8217;t matter whether X closed handle B before Y used handle C. It is irrelevant.</p>
<p>To get the laws of physics on your side, you would delegate all handle creation functions to a separate process or service. That way the handle creation would always be occuring on &#8216;local time&#8217; (the frame of the process or service) which would be a single point of reference.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-207853">
				<div id="div-comment-207853" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://weblogs.asp.net/oldnewthing' rel='external nofollow' class='url'>Raymond Chen</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040903-00/?p=37973#comment-207853">
			September 3, 2004 at 1:55 pm</a>		</div>

		<p>I guess I don&#8217;t follow.  &quot;Handle A&quot; is not an event. Only events have 4D coordinates.</p>
<p>Even if you moved the handle operations into a separate process, all that does is move the racing operations from &quot;close handle A&quot; to &quot;issue request to close handle A&quot;. The same argument applies.</p>
<p>(I&#8217;m assuming that the two processors occupy different locations in 3space.)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-207713">
				<div id="div-comment-207713" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Stuart</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040903-00/?p=37973#comment-207713">
			September 3, 2004 at 7:28 am</a>		</div>

		<p>Perhaps it would be worthwhile to note that although you can guarantee certain combinations to be *illegal* this way, you can&#8217;t use this logic to guarantee that they&#8217;re *legal*.</p>
<p>Just because a function can legally be called twice (many Close() and Dispose() methods have this property in .NET &#8211; I think it&#8217;s called idempotence) successively doesn&#8217;t necessarily mean that it&#8217;s threadsafe and will be able to handle having its internal operations interleaved between two threads executing it simultaneously.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-207863">
				<div id="div-comment-207863" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://weblogs.asp.net/robdelacruz' rel='external nofollow' class='url'>robdelacruz</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040903-00/?p=37973#comment-207863">
			September 3, 2004 at 2:30 pm</a>		</div>

		<p>Ah.. right, 4D spacetime is not the right word to use. What was I thinking?</p>
<p>When two cars bump into each other in an intersection, it is the same event occuring in the same 4D coordinate. Therefore from all points of reference, it occurs &#8216;simultaneously&#8217;. For &#8216;close handle A&#8217; and &#8216;use handle A&#8217; events, handle A is the intersection where the cars collide.</p>
<p>re: Putting handle operations on a separate process &#8211; it&#8217;s now possible to have a mechanism to use the same thread (single point of reference) for all the &#8216;use handle&#8217;, &#8216;close handle&#8217; operations, rather than the previous multiple-thread scenario.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-207873">
				<div id="div-comment-207873" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://weblogs.asp.net/oldnewthing' rel='external nofollow' class='url'>Raymond Chen</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040903-00/?p=37973#comment-207873">
			September 3, 2004 at 2:34 pm</a>		</div>

		<p>In the original formulation, the two events are</p>
<p>X = &quot;close handle A on thread 1&quot;<br />
<br />Y = &quot;use handle A on thread 2&quot;</p>
<p>They are two events with two different coordinates (if you assume that the two processors occupy different points in space).</p>
<p>In your new model &#8211; sure consolidating onto one thread makes that the close and use are serialized. But all you did was push the conflict out another level. The new conflict is</p>
<p>X = &quot;issue close handle A request from thread 1&quot;<br />
<br />Y = &quot;issue use handle A request from thread 2&quot;</p>
<p>You have the same problem &#8211; X and Y can occur in different orders in different frames.<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-207883">
				<div id="div-comment-207883" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Konstantin Surkov</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040903-00/?p=37973#comment-207883">
			September 3, 2004 at 3:25 pm</a>		</div>

		<p>First of all, just thought you would be happy to know that general relativity, as latest experiments show, may be wrong, see <a target="_new" href="http://www.economist.com/science/displayStory.cfm?story_id=3104321" rel="nofollow">http://www.economist.com/science/displayStory.cfm?story_id=3104321</a></p>
<p>Secondly, I wanted to point out that simultaneity is relative only if events are separated spatially, otherwise it is absolute, but after reading comments found that robdelacruz has already did.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-207763">
				<div id="div-comment-207763" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Merle</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040903-00/?p=37973#comment-207763">
			September 3, 2004 at 9:01 am</a>		</div>

		<p>The physics references are interesting, but probably not quite to the point.  Generally one can say &quot;X before Y, or Y before X, depending on frame of reference&quot;.  But it depends on how atomic X and Y are.  And, of course, the frame of reference.</p>
<p>The computer is one frame of reference.  There really isn&#8217;t any other, except for a virtual frame in the mind of the coder, where normal laws of physics do not necessarily apply (otherwise they would not ask those questions?).  There is no moving frame of reference in the computer.  It does not matter &quot;if you walk past the computer in the correct direction&quot; or not.  X happened first, or Y did, but a predetermined one and only one of them did &#8212; and, contrary to some quantum physics, you can observe with accuracy which one happened (with properly coded X and Y).</p>
<p>You do mention atomicity.  That, to me, is a bigger issue in synchronicity (and simultaneity) than &quot;can I do these two things at the same time&quot;.</p>
<p>Clearly you cannot unregister the same event twice; I would hope the second attempt would throw an exception.  Just as clearly, you cannot use a handle after closing it (or while, really).  Those aren&#8217;t related to physics in my mind.  People might ask &quot;can I do these things simultaneously&quot; in the same sense a five-year-old might ask &quot;can I stay up until 3am&quot;.  They (should) know the answer.  You just don&#8217;t *do* things like that.</p>
<p>The bigger problem is that X is &quot;Merle eats a sandwich&quot;, and Y is &quot;Raymond eats a sandwich&quot;.  I might take a half hour break between bites.  Worse yet, there might only be *one* sandwich.  You might stick dreaded bell peppers into mine half way through, causing a (verbal) exception.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-207793">
				<div id="div-comment-207793" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ben Hutchings</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040903-00/?p=37973#comment-207793">
			September 3, 2004 at 9:29 am</a>		</div>

		<p>Merle: Another thought occurs to me. Perhaps the people asking the question are vainly *trying* to cause race conditions, with some strange idea in their minds of what the result would be&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-207803">
				<div id="div-comment-207803" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Merle</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040903-00/?p=37973#comment-207803">
			September 3, 2004 at 9:37 am</a>		</div>

		<p>Ben: That&#8217;s true, I would *hope* handle functions would be flagged as atomic.  But there&#8217;s atomic, and there&#8217;s synchronous.</p>
<p>Perhaps I&#8217;m using the word &quot;synchronous&quot; incorrectly, from early Java days.  What I mean is &quot;no other method in this class can execute while this one is&quot;.  In which case I would make sure write() was synchronous (definitely with itself!), but close() is just setting a flag, and releasing the OS pointer.  It might not be.</p>
<p>I don&#8217;t know if they&#8217;re necessarily trying to cause race conditions, but they&#8217;re definitely trying to push the boundaries.  Even if you *could* do such things, I would actively speak against it&#8230; just as being Wrong.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-207903">
				<div id="div-comment-207903" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Jon Potter</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040903-00/?p=37973#comment-207903">
			September 3, 2004 at 5:36 pm</a>		</div>

		<p>Am I the only one who doesn&#8217;t know what UnregisterWaitForSingleObject() is?<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-207923">
				<div id="div-comment-207923" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://weblogs.asp.net/larryosterman' rel='external nofollow' class='url'>Larry Osterman</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040903-00/?p=37973#comment-207923">
			September 4, 2004 at 12:45 am</a>		</div>

		<p>It&#8217;s one of the thread pool APIs &#8211; RegisterWaitForSingleObject and UnregisterWaitForSingleObject are symetrical.<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-207933">
				<div id="div-comment-207933" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Tom Guinther</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040903-00/?p=37973#comment-207933">
			September 4, 2004 at 4:32 am</a>		</div>

		<p>Although Larry Osterman already made this point:<br />
<br /> &quot;Don&#8217;t forget that on an MP system, while in physics, things can happen with a great deal more simultaneity than they can on a UP system&quot;</p>
<p>I just wanted to add that while adding Symmetric Multi-Processor support to Soft-ICE the frequency of simultaneity for various low-level code was quite high. Of course I am taling about interrupt level logic, but the same principle should apply. Maybe this effect is more of a Quantum Mechanics effect that gets lost at the higher level abstraction of your everyday ring-3 thread which is more newtonian in nature?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-207943">
				<div id="div-comment-207943" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.bigbeardy.co.uk' rel='external nofollow' class='url'>Mat Hall</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040903-00/?p=37973#comment-207943">
			September 4, 2004 at 6:46 am</a>		</div>

		<p>It also occurs to me that if &quot;X before Y&quot; and &quot;Y before X&quot; occurred in CPUs depending on which way you were moving relative to it, we&#8217;d all have to stand very still or run the risk of instructions being executed in a random order&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-207973">
				<div id="div-comment-207973" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">David Heffernan</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040903-00/?p=37973#comment-207973">
			September 4, 2004 at 2:48 pm</a>		</div>

		<p>Actually the APIs are UnregisterWait and UnregisterWaitEx.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-207983">
				<div id="div-comment-207983" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Jon Potter</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040903-00/?p=37973#comment-207983">
			September 4, 2004 at 3:07 pm</a>		</div>

		<p>These functions seem to be missing from my copy of the SDK :)<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-207993">
				<div id="div-comment-207993" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Chris Walker</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040903-00/?p=37973#comment-207993">
			September 5, 2004 at 8:28 am</a>		</div>

		<p>Double closes of handles (or double frees) don&#8217;t require multithreading to show themselves.  A single thread with weak handle ownership often has these problems. If handle were never re-issued (read: guid or luid) there would be no problem (other than performance).</p>
<p>At one point in time Windows (NT) delayed as much as possible recycling kernel handles.  This doesn&#8217;t make the problem go away, but does improve the probability that it won&#8217;t cause any problems. (note that this assume the program is already in error)</p>
<p>The App verifier has an option to raise exceptions if a program attempts to close an invalid handle which is handy to use during testing.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-208223">
				<div id="div-comment-208223" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Mike Swaim</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040903-00/?p=37973#comment-208223">
			September 7, 2004 at 11:18 am</a>		</div>

		<blockquote><p>
  What makes me shiver is thought of the<br />
  <br />&gt; environment has brought Raymond to be so<br />
  <br />&gt; forceful in explaining basic computer<br />
  <br />&gt; science concepts.</p>
<p>  I&#8217;ve seen worse. I once saw a programmer get upset when I told him that computers executed programs deterministically.
</p></blockquote>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-213533">
				<div id="div-comment-213533" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Fei Liu</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040903-00/?p=37973#comment-213533">
			September 22, 2004 at 4:12 pm</a>		</div>

		<p>Special relativity theory is only practically applicable under certain situation, i.e. near light speed motion, or<br />
<br />sub-microscopic world such as electrons (which move at light speed), etc.</p>
<p>When you are talking about car collsion, the simultaneity is not equal to the concept of simultaneity under near light speed situation. Simultaneity for things moving near light speed is a relative concept due to the use of reference frame. For one, the events are simultaneous, but for the other, they ain&#8217;t.</p>
<p>Simultaneity of execution of instructions on a single CPU is of course impossible because of sequence principle. On SMP system, two CPUs can execute two instructions simultaneously as long as the two CPUS are not moving near light speed seen by one another (do we have such kind of motherboard yet? :) and stay motionless relative to each other.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-213543">
				<div id="div-comment-213543" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://weblogs.asp.net/oldnewthing' rel='external nofollow' class='url'>Raymond Chen</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040903-00/?p=37973#comment-213543">
			September 22, 2004 at 4:19 pm</a>		</div>

		<p>Even if the two CPUs are motionless relative to each other, an observer can see one or the other instruction execute first (whichever CPU is closer will appear to have executed the instruction first since the light has less distance to travel).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-213653">
				<div id="div-comment-213653" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Fei Liu</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040903-00/?p=37973#comment-213653">
			September 23, 2004 at 9:29 am</a>		</div>

		<p>To the observer at the point between the two cpus, it&#8217;s simultaneous.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-213913">
				<div id="div-comment-213913" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://weblogs.asp.net/oldnewthing/' rel='external nofollow' class='url'>Raymond Chen</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040903-00/?p=37973#comment-213913">
			September 24, 2004 at 10:00 pm</a>		</div>

		<p>Exactly my point. What is simultaneous to one is not simultaneous to another.</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>