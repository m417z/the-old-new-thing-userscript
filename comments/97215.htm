<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (10)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment byuser comment-author-koldude even thread-even depth-1" id="comment-1312146">
				<div id="div-comment-1312146" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/kantos' rel='external nofollow' class='url'>kantos</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20171012-00/?p=97215#comment-1312146">
			October 12, 2017 at 7:24 am</a>		</div>

		<p>Honestly it&#8217;s undefined behavior as you don&#8217;t know that the calling code is exception safe, anyone who wants to try is already playing with nasal demons. If anything I&#8217;d be tempted to ask the windows SDK team to add a preprocessor flag that marks all callbacks from the OS as <code>noexcept</code> in C++. This would break existing code if you opt in but it would allow you to also tell the compiler that your callbacks should never throw and if they do to just terminate.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1 parent" id="comment-1312155">
				<div id="div-comment-1312155" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">xcomcmdr</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20171012-00/?p=97215#comment-1312155">
			October 12, 2017 at 8:14 am</a>		</div>

		<p>Exceptions used for flow control, that&#8217;s asking for trouble.</p>

		
				</div>
		<ol class="children">
		<li class="comment even depth-2 parent" id="comment-1312176">
				<div id="div-comment-1312176" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20171012-00/?p=97215#comment-1312176">
			October 12, 2017 at 10:19 am</a>		</div>

		<p>But I really do have to write try { var fs = new FileStream(pathname, &#8230;); /* &#8230; */ } catch (FileNotFoundException) { /* code for file doesn&#8217;t exist */ }</p>

		
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-cheong odd alt depth-3 parent" id="comment-1312185">
				<div id="div-comment-1312185" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/cheong00' rel='external nofollow' class='url'>cheong00</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20171012-00/?p=97215#comment-1312185">
			October 12, 2017 at 7:40 pm</a>		</div>

		<p>File.Exists() exists for a reason. I&#8217;d rather reserve the use of FileNotFoundException for situations less obvious, such as when loading DLLs (where you can load from multiple places).</p>

		
				</div>
		<ol class="children">
		<li class="comment even depth-4 parent" id="comment-1312195">
				<div id="div-comment-1312195" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20171012-00/?p=97215#comment-1312195">
			October 12, 2017 at 8:30 pm</a>		</div>

		<p>if (File.Exists(pathanme) { var fs = new FileStream(pathname, â€¦); } is slower and can still throw FileNotFoundException. See <a href="https://blogs.msdn.microsoft.com/oldnewthing/20071109-00/?p=24553" rel="nofollow">https://blogs.msdn.microsoft.com/oldnewthing/20071109-00/?p=24553</a> for why checking if a file exists before opening it is pointless.</p>

		
				</div>
		<ol class="children">
		<li class="comment odd alt depth-5" id="comment-1312365">
				<div id="div-comment-1312365" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Fred</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20171012-00/?p=97215#comment-1312365">
			October 13, 2017 at 10:52 am</a>		</div>

		<p>But a file disappearing between the check and the open() *is* an exceptional condition, for which the exception is legitimate. The File.Exists() check is merely to avoid cluttering the debugger with the cases where one *expects* the file to be missing (like, say, a DLL whose generation at compile-time is optional&#8230;)</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment even depth-2" id="comment-1312205">
				<div id="div-comment-1312205" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">xcomcmdr</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20171012-00/?p=97215#comment-1312205">
			October 13, 2017 at 12:30 am</a>		</div>

		<p>I meant, a thread that terminates is hardly an exceptional situation.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment odd alt thread-even depth-1" id="comment-1312175">
				<div id="div-comment-1312175" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Goran</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20171012-00/?p=97215#comment-1312175">
			October 12, 2017 at 9:24 am</a>		</div>

		<p>@kantos: forget exception safety. Calling code is most likely C, so it&#8217;s100% oblivious to exceptions. Even if it was C++, it would need to use the same exception implementation as me, which is not a given. And imagine doing it from some other language&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-odd thread-alt depth-1" id="comment-1312177">
				<div id="div-comment-1312177" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">640k</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20171012-00/?p=97215#comment-1312177">
			October 12, 2017 at 2:49 pm</a>		</div>

		<p>If the callback code calls any library, all bets are off (there&#8217;s no checked exceptions in c++, no guarantees are given). Most, if not all, file system accesses, or even most things dealing with handles, are no-no. And forget logging! The allowed set of language features allowed in these cases is a very small subset of c++, not really c++ or even c. More similar to what&#8217;s allowed in DllMain.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-even depth-1" id="comment-1312215">
				<div id="div-comment-1312215" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Neil</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20171012-00/?p=97215#comment-1312215">
			October 13, 2017 at 3:26 am</a>		</div>

		<p>Well, it could have been worse, they could have deliberately dereferenced a null pointer in their APC hoping to catch it with SEH&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>