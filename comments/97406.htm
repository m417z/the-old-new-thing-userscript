<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (12)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1 parent" id="comment-1315946">
				<div id="div-comment-1315946" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Koro</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20171116-00/?p=97406#comment-1315946">
			November 16, 2017 at 7:42 am</a>		</div>

		<p>The only obvious use for such complex machinery would be for hot-patching code, which is not recommended anyway.</p>

		
				</div>
		<ol class="children">
		<li class="comment odd alt depth-2 parent" id="comment-1315955">
				<div id="div-comment-1315955" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">ZLB</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20171116-00/?p=97406#comment-1315955">
			November 16, 2017 at 9:18 am</a>		</div>

		<p>AFAIK, there is no safe way to patch code in a running process from user mode anyway, so you still have other issues.</p>

		
				</div>
		<ol class="children">
		<li class="comment even depth-3 parent" id="comment-1315995">
				<div id="div-comment-1315995" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Neil</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20171116-00/?p=97406#comment-1315995">
			November 17, 2017 at 2:19 am</a>		</div>

		<p>Why would the code be running? (I assume here you would want to act like a debugger.)</p>

		
				</div>
		<ol class="children">
		<li class="comment odd alt depth-4" id="comment-1316035">
				<div id="div-comment-1316035" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Zak Larue-Buckley</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20171116-00/?p=97406#comment-1316035">
			November 17, 2017 at 6:48 am</a>		</div>

		<p>If no code is running in the process then you can fiddle with page protections as you wish because you know nobody else is.</p>
<p>You can use VirtualQuery to get the current protection, then restore the page protection after you are done. The whole discussion is moot.</p>
<p>The scenario I was thinking of was an injected dll detouring functions on the fly.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment even thread-odd thread-alt depth-1 parent" id="comment-1315975">
				<div id="div-comment-1315975" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://nbtparse.org' rel='external nofollow' class='url'>Kevin</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20171116-00/?p=97406#comment-1315975">
			November 16, 2017 at 4:48 pm</a>		</div>

		<p>In the old days&#8230;</p>
<p>Well, in the old days, there was no memory protection, and if you wrote to the wrong address, the computer crashed.  But in the semi-old days, you allocated the memory, then you set the protection on it (if desired), then you used it, then you deallocated it.  At no point did you need to fiddle with protection from multiple threads, mess with anyone else&#8217;s memory, or do any other &#8220;clever&#8221; stuff that would require atomically adding or removing permissions.</p>
<p>I am rather curious about what has changed since then.</p>

		
				</div>
		<ol class="children">
		<li class="comment odd alt depth-2 parent" id="comment-1315985">
				<div id="div-comment-1315985" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20171116-00/?p=97406#comment-1315985">
			November 16, 2017 at 5:09 pm</a>		</div>

		<p>ASLR</p>

		
				</div>
		<ol class="children">
		<li class="comment even depth-3 parent" id="comment-1315986">
				<div id="div-comment-1315986" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Someone</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20171116-00/?p=97406#comment-1315986">
			November 16, 2017 at 11:53 pm</a>		</div>

		<p>and?</p>

		
				</div>
		<ol class="children">
		<li class="comment odd alt depth-4" id="comment-1316275">
				<div id="div-comment-1316275" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20171116-00/?p=97406#comment-1316275">
			November 17, 2017 at 6:00 pm</a>		</div>

		<p>And I remember having to set dynamic library load addresses at compile time so there weren&#8217;t any fixups.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment even depth-2 parent" id="comment-1316055">
				<div id="div-comment-1316055" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Voo</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20171116-00/?p=97406#comment-1316055">
			November 17, 2017 at 7:23 am</a>		</div>

		<p>Any kind of dynamic compilation will want to use read-write while generating code and then set it to read-execute.</p>
<p>Why you&#8217;d want multiple threads to fight over the correct setting is anyone&#8217;s guess though</p>

		
				</div>
		<ol class="children">
		<li class="comment odd alt depth-3" id="comment-1316225">
				<div id="div-comment-1316225" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">henke37</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20171116-00/?p=97406#comment-1316225">
			November 17, 2017 at 12:55 pm</a>		</div>

		<p>Of course, less careful implementations just ask for RWE pages and don&#8217;t bother changing the permissions after generating the code. It works but&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment even depth-2" id="comment-1316315">
				<div id="div-comment-1316315" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.silverbacknetworks.tech' rel='external nofollow' class='url'>Joshua Bowman</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20171116-00/?p=97406#comment-1316315">
			November 18, 2017 at 5:55 am</a>		</div>

		<p>You might have heard of a little thing called the Java runtime. Hotspot allocates pages as read-write, then has to mark pages read-execute afterward.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment odd alt thread-even depth-1" id="comment-1316065">
				<div id="div-comment-1316065" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">florian</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20171116-00/?p=97406#comment-1316065">
			November 17, 2017 at 7:37 am</a>		</div>

		<p>So co-Ã¶r-or-dinate is the new microspeak to perform a bitwise-inclusive-OR operation that keeps blocking until undone?</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>