<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (6)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1 parent" id="comment-1264535">
				<div id="div-comment-1264535" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">DWalker07</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160909-00/?p=94285#comment-1264535">
			September 9, 2016 at 7:22 am</a>		</div>

		<p>The article title doesn&#8217;t seem to match the first paragraph.</p>
<p>The customer wanted bigger chunks read in?  Yet they noticed that 32KB is being read when the doc says 4KB will be read?</p>
<p>32KB is bigger than 4KB.  Unless they are wanting chunks BIGGER than 32KB.  In the third sentence, the antecendent of &#8220;bigger&#8221; is not clear&#8230;.</p>

		
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-oldnewthing bypostauthor odd alt depth-2 parent" id="comment-1264555">
				<div id="div-comment-1264555" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Raymond+Chen+-+MSFT' rel='external nofollow' class='url'>Raymond Chen - MSFT</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160909-00/?p=94285#comment-1264555">
			September 9, 2016 at 7:47 am</a>		</div>

		<p>They wanted even bigger than 32KB. Math says that they wanted 100 x 4KB = 400KB.</p>

		
				</div>
		<ol class="children">
		<li class="comment even depth-3" id="comment-1264556">
				<div id="div-comment-1264556" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">DWalker07</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160909-00/?p=94285#comment-1264556">
			September 9, 2016 at 11:31 am</a>		</div>

		<p>I didn&#8217;t know they wanted 100 4K records; all I knew was that they wanted 100 small records.  Small could have meant ten bytes for all I knew!</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment byuser comment-author-alegrigoriev odd alt thread-odd thread-alt depth-1 parent" id="comment-1264636">
				<div id="div-comment-1264636" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/alegr1' rel='external nofollow' class='url'>alegr1</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160909-00/?p=94285#comment-1264636">
			September 12, 2016 at 6:04 am</a>		</div>

		<p>The customer didn&#8217;t know what they&#8217;re doing.<br />
If you want your data in memory, just allocate the 400K and read data into it.<br />
If you want to write the modified data back, just write those 400K back.</p>

		
				</div>
		<ol class="children">
		<li class="comment even depth-2 parent" id="comment-1264715">
				<div id="div-comment-1264715" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ben Voigt (Visual Studio and Development Technologies MVP with C++ focus)</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160909-00/?p=94285#comment-1264715">
			September 12, 2016 at 8:24 am</a>		</div>

		<p>Memory-mapped I/O is much more useful than you suggest.  Among other things, the coherence between multiple views on the same machine makes it possible to do things that explicit I/O never can.  For another, memory usage is reduced because you don&#8217;t have two copies of the same page, one in the disk cache, one in your application.<br />
These advantages are balanced by the drawback that torn updates and intermediate states are visible, and maybe even persistent if your process crashes.  (With synchronous I/O, partial writes are only a concern if the whole OS goes down, not just your app).</p>

		
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-alegrigoriev odd alt depth-3" id="comment-1264765">
				<div id="div-comment-1264765" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/alegr1' rel='external nofollow' class='url'>alegr1</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160909-00/?p=94285#comment-1264765">
			September 13, 2016 at 4:41 am</a>		</div>

		<p>From the description, the application was just reading the file. And 400 K is not the size to worry about memory usage.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>