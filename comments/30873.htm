<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (41)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-391433">
				<div id="div-comment-391433" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Adam</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060614-00/?p=30873#comment-391433">
			June 14, 2006 at 10:18 am</a>		</div>

		<p>Sorry for the off-topic, but:</p>
<p>&#8220;I have no idea why people claim that there is no thread-safe way<br />
to enable ClearType on an individual basis. We&#8217;re doing it just fine<br />
here.&#8221;</p>
<p>According to the linked post, the person was not making the<br />
non-thread-safe claim himself, but was instead claiming that the MSDN<br />
docs authoritatively stated it was not thread-safe (although there is<br />
no link to the alleged page).</p>
<p>In any case, how is saying &#8220;We&#8217;re doing it just fine here&#8221; any<br />
different from yesterday&#8217;s post when one person&#8217;s way of doing<br />
something (in this case, changing the monitor power settings) happened<br />
to work for him, no matter what the documentation might have happened<br />
to say broadcasting random messages all over the place?</p>
<p>_Especially_ for code that might have threading issues?!? Of all<br />
the places where &#8220;it seems to work fine at the moment&#8221; can <em>never</em> be<br />
an indicator of <em>anything</em>, multithreaded code is surely it.</p>
<div CLASS=post>[<i>It&#8217;s just fine here because I didn&#8217;t just make up random parameters to see what happened. I followed <a HREF="http://msdn.microsoft.com/library/en-us/gdi/fontext_8fp0.asp" rel="nofollow">the documentation</a>. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-391443">
				<div id="div-comment-391443" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.benryves.com/' rel='external nofollow' class='url'>Ben Ryves</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060614-00/?p=30873#comment-391443">
			June 14, 2006 at 10:43 am</a>		</div>

		<p>The Windows Media Player 11 beta suffers pretty badly from this problem. Here&#8217;s hoping that the developers read your blog :)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-391453">
				<div id="div-comment-391453" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Eden</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060614-00/?p=30873#comment-391453">
			June 14, 2006 at 11:16 am</a>		</div>

		<p>OFF TOPIC:<br />
<br />Raymond, please do a write-up covering this:<br />
<br /><a rel="nofollow" target="_new" href="http://www.wincustomize.com/articles.aspx?aid=117870&amp;c=1" rel="nofollow">http://www.wincustomize.com/articles.aspx?aid=117870&#038;c=1</a></p>
<p>Just tried it and it works. &nbsp;Any idea what the back story is?</p>
<div CLASS=post>[<i>I&#8217;m going to say it again: To suggest a topic, use the suggestion box. (Besides, I already covered this topic. I&#8217;ll leave it as an exercise for you to find it.) -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-391463">
				<div id="div-comment-391463" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">xix</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060614-00/?p=30873#comment-391463">
			June 14, 2006 at 11:26 am</a>		</div>

		<p>@eden</p>
<p>I get some sort of asian looking script (Chinese, Japanese, not sure). &nbsp;Looks like notepad has a hard time working out what kind of encoding to use with that series of bytes. &nbsp;Michael Kaplan&#8217;s blog had something about this (not this specific case) once if I recall correctly.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-391473">
				<div id="div-comment-391473" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Malcolm</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060614-00/?p=30873#comment-391473">
			June 14, 2006 at 11:31 am</a>		</div>

		<p>@Eden</p>
<p>I would guess that notepad is using IsTextUnicode to determine the encoding of the file in question, which is &nbsp; getting it wrong because there isn&#8217;t enough data to perform a reliable statistical analysis (it seems to think it&#8217;s UTF16 rather than ANSI).</p>
<p>If you load notepad, choose File-&gt;Open and select ANSI encoding before loading the file, it will display correctly.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-391493">
				<div id="div-comment-391493" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Dirk</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060614-00/?p=30873#comment-391493">
			June 14, 2006 at 11:53 am</a>		</div>

		<p>An interesting question is how &nbsp;LVM_CREATEDRAGIMAGE does the text drawing for anti-aliased fonts (for ClearType it does not draw any text). Do they translate the colour blending to alpha blending?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-391503">
				<div id="div-comment-391503" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">BradC</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060614-00/?p=30873#comment-391503">
			June 14, 2006 at 11:59 am</a>		</div>

		<p>For the search-impaired, here&#8217;s the article Raymond alluded to:</p>
<p><a rel="nofollow" target="_new" href="http://blogs.msdn.com/oldnewthing/archive/2004/03/24/95235.aspx" rel="nofollow">http://blogs.msdn.com/oldnewthing/archive/2004/03/24/95235.aspx</a></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-kjkhyperion odd alt thread-odd thread-alt depth-1" id="comment-391513">
				<div id="div-comment-391513" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">KJK::Hyperion</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060614-00/?p=30873#comment-391513">
			June 14, 2006 at 12:01 pm</a>		</div>

		<p>Adam: &quot;not thread safe&quot; refers to the dubious practice of enabling/disabling the global ClearType setting (using SystemParametersInfo) for the duration of the painting operation, which is a criminally lazy way to enforce ClearType without changing your CreateFont calls that use DEFAULT_QUALITY. I find it hard to believe Internet Explorer 7 does this</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-391533">
				<div id="div-comment-391533" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">BryanK</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060614-00/?p=30873#comment-391533">
			June 14, 2006 at 12:05 pm</a>		</div>

		<blockquote><p>
  It&#8217;s just fine here because I didn&#8217;t just make up random parameters to see what happened. </p>
<p>I think the confusion is related to the difference between creating a ClearType-capable font, and enabling/disabling ClearType on the entire system. &nbsp;I would guess that if ClearType is disabled, the call you made with CLEARTYPE_QUALITY would return a non-ClearType HFONT, right? &nbsp;(Or would it fail?) </p>
<p>Either way, you&#8217;re not enabling/disabling system ClearType support for your program, you&#8217;re just creating an HFONT that either asks for it or doesn&#8217;t. </p>
<p>If &#8220;disabling ClearType support in your program&#8221; is implemented by &#8220;disabling ClearType for the entire system for a short period of time&#8221;, then yes, I can see where there&#8217;d be horrible race conditions there. &nbsp;But that&#8217;s not what you&#8217;re doing in this code, either.</p>
<div CLASS=post>[<i>&#8220;If neither ANTIALIASED_QUALITY nor NONANTIALIASED_QUALITY is selected (in CreateFont), the font is antialiased only if the user chooses &#8216;smooth screen fonts&#8217; in Control Panel.&#8221; Feel free to confirm whether the documentation is correct by writing a test program. -Raymond</i>]</div>
</blockquote>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-391553">
				<div id="div-comment-391553" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Koro</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060614-00/?p=30873#comment-391553">
			June 14, 2006 at 12:12 pm</a>		</div>

		<p>The wireless connection dialog is guilty of this too (at least when using Windows Classic), look at the links on the left, some of them become darker with time, but revert back to normal when hovered.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-391593">
				<div id="div-comment-391593" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.morganalley.com' rel='external nofollow' class='url'>Dewi Morgan</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060614-00/?p=30873#comment-391593">
			June 14, 2006 at 1:53 pm</a>		</div>

		<p>&#8220;(I have no idea why people claim that there is no thread-safe way to enable ClearType on an individual basis. We&#8217;re doing it just fine here.)&#8221; </p>
<p>My guess? They claim it because there is no thread-safe way to enable ClearType on an individual basis. </p>
<p>That there is a thread-safe way to USE cleartype, once it is enabled, was never in dispute. </p>
<p>But I dunno, maybe that&#8217;s not the rigth page. MSDN is an impenetrable mess in which I can never find what I want since it has no sensible index or navigable tree. I can&#8217;t prove the nonexistence of a solution in there any more than I can prove the nonexistence of an invisible pink unicorn. </p>
<p>This is why people try posting messages to every window they can find: because finding the Right Way in MSDN is not feasible. </p>
<div CLASS=post>[<i>??? I just did it. The documentation says that if you pass CLEARTYPE_QUALITY then yuo get ClearType (assuming the font supports it). The control panel setting is used if you pass DEFAULT_QUALITY. The docs say that too. I just turned off ClearType in the control panel and ran my app &#8211; the ClearType font was still ClearType. What am I missing? I must be misunderstanding what people are saying because I&#8217;ve already pointed to the documentation saying how it works, written a program demonstrating that it works, and people still say it doesn&#8217;t work. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-391623">
				<div id="div-comment-391623" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Cooney</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060614-00/?p=30873#comment-391623">
			June 14, 2006 at 2:43 pm</a>		</div>

		<p>From reading this, I can see why Apple went with Quartz. Should be interesting to see if the Vista stuff fixes these problems.</p>
<div CLASS=post>[<i>How can the operating system &#8220;fix&#8221; this problem? -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-391643">
				<div id="div-comment-391643" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Mike Capp</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060614-00/?p=30873#comment-391643">
			June 14, 2006 at 3:07 pm</a>		</div>

		<p>Raymond, I&#8217;m not disputing what you&#8217;re seeing, or what the docs say, but for some people it really doesn&#8217;t work. I spent a fair amount of time trying to get this to work the way it&#8217;s supposed to, and it consistently didn&#8217;t. Quality always seems to be the lower of the global setting and the CreateFont param; I&#8217;ve just reconfirmed this now. My plaintive query (unanswered, alas) on the topic is here with more details: </p>
<p><a href="http://groups.google.com/group/microsoft.public.win32.programmer.gdi/msg/c70a073ac358a708" target=_new rel=nofollow rel="nofollow">http://groups.google.com/group/microsoft.public.win32.programmer.gdi/msg/c70a073ac358a708</a> </p>
<p>Maybe a daft question, but are you definitely seeing non-smoothed fonts elsewhere after turning off ClearType? It doesn&#8217;t take effect until you OK the whole Display Properties dialog, not just the Effects popup. Otherwise, I give up. SDK bug that was fixed in a later version? Driver bug?</p>
<div class=post>[<i>When I disabled ClearType in the control panel and hit Übernehmen, my fonts went ugly. Then I ran the test app and it still used the smoothed fonts (since it overrode the default). -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-391673">
				<div id="div-comment-391673" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Cooney</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060614-00/?p=30873#comment-391673">
			June 14, 2006 at 3:38 pm</a>		</div>

		<p>[How can the operating system &#8220;fix&#8221; this problem? -Raymond] </p>
<p>Simple &#8211; offer better primitives and handle window compositing in the GUI rather than expect apps to do so. It also helps that Quartz is firly well designed, and the GDI is kind of awful (comes from supporting 15 years of legacy, I suppose).</p>
<div CLASS=post>[<i>Window composition won&#8217;t do anything here, since it&#8217;s all happening inside a single window. A single window is being asked to paint, and it does so via overprinting. Or would the new primitives somehow disallow overprinting? -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-391703">
				<div id="div-comment-391703" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">BryanK</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060614-00/?p=30873#comment-391703">
			June 14, 2006 at 4:52 pm</a>		</div>

		<blockquote><p>
  I just turned off ClearType in the control panel and ran my app &#8211; the ClearType font was still ClearType. What am I missing?</p>
<p>I&#8217;m not positive exactly what people are talking about with this issue, but it seems to me that they&#8217;re trying to find a way to (1) have ClearType turned on in the control panel, but still (2) get an HFONT that has ClearType disabled. &nbsp;(Since that&#8217;s one thing that an app-specific setting would require.)</p>
<p>Someone named Xepol, in an IE blog comment, has asserted that &quot;according to the MSDN site&quot;, the only way to get that font is by disabling the global ClearType setting, calling CreateFont (with DEFAULT_QUALITY, probably), and re-enabling the setting. &nbsp;But according to you and the docs, you can get one by passing NONANTIALIASED_QUALITY to CreateFont, or possibly also ANTIALIASED_QUALITY (I don&#8217;t know if there&#8217;s a difference between an AA&#8217;ed font and a ClearType font).</p>
<p>(If I were writing a Win32 program, I&#8217;d just pass DEFAULT_QUALITY, and use the system ClearType setting&#8230; &nbsp;but that&#8217;s a separate issue.)</p>
<p>(Basically, I&#8217;m agreeing with the parenthetical in your post here; it sounds like there is a way to thread-safely disable ClearType, although you might also have to disable all AA for your font in the process. &nbsp;The post that was linked to by the suggestion-box post you linked to, though, was just someone claiming that &quot;MSDN says&quot; you can&#8217;t do that. &nbsp;I doubt that claim is correct, though I don&#8217;t know for sure.)
</p></blockquote>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-391713">
				<div id="div-comment-391713" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Cooney</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060614-00/?p=30873#comment-391713">
			June 14, 2006 at 4:53 pm</a>		</div>

		<p>My mistake &#8211; I thought this was an interaction between AA fonts and transparent windows.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-391723">
				<div id="div-comment-391723" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Mike Capp</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060614-00/?p=30873#comment-391723">
			June 14, 2006 at 5:26 pm</a>		</div>

		<p>BryanK &#8211; no, the issue is exactly the opposite of what you describe. We&#8217;re trying to get a ClearType-enabled HFONT when ClearType is disabled in the control panel.</p>
<div class=post>[<i>And I tested that scenario as I remarked earlier. This is all clearly documented: The control panel setting is used only if you ask for DEFAULT_QUALITY. If you specify an explicit quality then you get that quality (assuming the font supports it). -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-391753">
				<div id="div-comment-391753" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Knowbody Nos</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060614-00/?p=30873#comment-391753">
			June 14, 2006 at 6:03 pm</a>		</div>

		<p>Make sure you&#8217;re running this on XP as I believe ClearType is not supported on 2K.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-391763">
				<div id="div-comment-391763" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Gabe</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060614-00/?p=30873#comment-391763">
			June 14, 2006 at 6:08 pm</a>		</div>

		<p>As far as I can tell, WPF would allow you to create this annoying effect, but since it handles all painting it would prevent this from happening by accident. The new window manager may even prevent it from happening by accident with GDI apps.</p>
<div class=post>[<i>True, switching to a declarative model instead of a procedural one would avoid this problem since the app doesn&#8217;t actually control the painting any more. But that&#8217;s not &#8220;offering better primitives&#8221;; that&#8217;s radically changing the painting model. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-391773">
				<div id="div-comment-391773" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Mike Capp</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060614-00/?p=30873#comment-391773">
			June 14, 2006 at 6:33 pm</a>		</div>

		<p>Knowbody Nos: Yes, this is XP. </p>
<p>Raymond: I know it sounds that way, but this honestly isn&#8217;t a reading comprehension issue :-) </p>
<p>Some more info though: I tried your test app and it works as advertised. I tried vanilla TextOut to the window DC in my own paint handler (not something I normally do), and that&#8217;s fine too. What was not fine, and still isn&#8217;t fine even with the exact same CreateFont call, is TextOut to a memory DC created via CreateCompatibleDC, even though ClearType is manifestly possible on this DC because it works when enabled globally. </p>
<p>Ah well. Something new for me to chew on, at any rate. </p>
<div CLASS=post>[<i>Aha, so that&#8217;s the difference. I have no idea why memory DCs behave strangely. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-391783">
				<div id="div-comment-391783" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Andy &quot;Down&quot;</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060614-00/?p=30873#comment-391783">
			June 14, 2006 at 7:01 pm</a>		</div>

		<p>Btw, I love your new yellow inline comments, Raymond. Thanks for being so patient with us!</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-391823">
				<div id="div-comment-391823" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">rsclient</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060614-00/?p=30873#comment-391823">
			June 14, 2006 at 8:53 pm</a>		</div>

		<p>Raymond, </p>
<p>The documentation is not a model of clarity. &nbsp; </p>
<p>DOCUMENTATION: &#8220;If neither ANTIALIASED_QUALITY nor NONANTIALIASED_QUALITY is selected, the font is antialiased only if the user chooses &#8220;smooth screen fonts&#8221; in Control Panel. &#8221; [in CreateFont] </p>
<p>REALITY: if CLEARTYPE_QUALITY is chosen, the font will be antialised (if possible) despite the control panel. </p>
<p>WHY: because the documentation was not properly updated when XP came out. &nbsp;Cleartype is a type of antialiasing, but it still isn&#8217;t fully integrated into the documentation. </p>
<p>(also, the control panel doesn&#8217;t say &#8220;smooth screen fonts&#8221; &#8212; at least, not any more. &nbsp;It says, &#8220;smooth edges of screen fonts&#8221; and gives the choice of nothing, Standard, or ClearType.) </p>
<div CLASS=post>[<i>Aha, my eyes saw what should have been there. I&#8217;ll submit a correction to the MSDN folks. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-391833">
				<div id="div-comment-391833" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">rsclient</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060614-00/?p=30873#comment-391833">
			June 14, 2006 at 9:00 pm</a>		</div>

		<p>Raymond, </p>
<p>The model that Windows uses for drawing on the screen is not universally used by all windows system. &nbsp;The VAX windowing system, for example, had the very handy feature that once you drew on the screen once, you didn&#8217;t have to redraw it &#8212; ever. &nbsp; If you wanted to change the screen, you just changed it. </p>
<p>It&#8217;s not a change of primitives; it&#8217;s a change in who &#8220;owns&#8221; the job of handling overlapping wndows. &nbsp;Some systems decided that it was a job that could be done by the window system; others decided that it was too hard, and gave it back to the individual programs. </p>
<p>The VAX system, BTW, had a neat feature: if you had a mostly-bare window, it would remember all of the drawing commands you used to make it; as the screen got more complicated, the window system would automatically start saving your window as a bitmap instead. </p>
<p>IMHO, the VAX windowing model was better. &nbsp;In many Microsoft Windows programs, a lot of time is spent &#8216;remembering&#8217; just what&#8217;s on the screen &#8212; thus, a basic cycle is to calculate a certain amount about what should happen, and store it in a unique-per-application structure. &nbsp;When the application gets a &#8216;paint&#8217; message, it must then paw through that structure and paint it. </p>
<p>To me, it&#8217;s a pain. &nbsp;It means I have to chop up every action into two pieces, and keep around a bunch of context just to make things happen. &nbsp;The context, in turn, has to be managed. &nbsp;It&#8217;s a lot easier to &#8216;just draw something&#8217; and move on. </p>
<p>Peter</p>
<div CLASS=post>[<i>Even with the VAX model, overprinting text would have the same problems we&#8217;re seeing here. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-391843">
				<div id="div-comment-391843" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Norman Diamond</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060614-00/?p=30873#comment-391843">
			June 14, 2006 at 9:37 pm</a>		</div>

		<blockquote><p>
  [Aha, so that&#8217;s the difference. I have no<br />
  <br />&gt; idea why memory DCs behave strangely.<br />
  <br />&gt; -Raymond]</p>
<p>Here&#8217;s a guess. &nbsp;Some internal function is retrieving pixels from screen&#8217;s DC, or maybe assuming a value of zero or some other default, instead of retrieving pixels from the memory DC. &nbsp;Then it computes results based on the incorrectly assumed initial values.</p>
<p>Wednesday, June 14, 2006 9:00 PM by rsclient<br />
  <br />&gt; IMHO, the VAX windowing model was better.</p>
<p>Yes, because it didn&#8217;t have to maintain compatibility with Windows 3.1, i.e. didn&#8217;t have to maintain compatibility with a system that could run in 2MB of RAM (and which by the way didn&#8217;t exist yet at the time the VAX windowing model was designed ^_^).
</p></blockquote>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-391603">
				<div id="div-comment-391603" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">ping and pong</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060614-00/?p=30873#comment-391603">
			June 14, 2006 at 2:37 pm</a>		</div>

		<p>@Dewi Morgan: you claim the following at your website:</p>
<p>&quot;MorganAlley&#8217;s people bring decades of experience with websites and the Internet&quot;</p>
<p>Decades is plural, making it no less than 20 years. You *really* designed websites back in 1986?</p>
<p>J</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-larryosterman odd alt thread-odd thread-alt depth-1" id="comment-391853">
				<div id="div-comment-391853" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Larry+Osterman+%5BMSFT%5D' rel='external nofollow' class='url'>Larry Osterman [MSFT]</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060614-00/?p=30873#comment-391853">
			June 14, 2006 at 10:00 pm</a>		</div>

		<p>Eden, you&#8217;re reading the wrong blog. &nbsp;<a rel="nofollow" target="_new" href="http://blogs.msdn.com/michkap/archive/2006/06/14/631016.aspx" rel="nofollow">http://blogs.msdn.com/michkap/archive/2006/06/14/631016.aspx</a></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-391873">
				<div id="div-comment-391873" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://sarathc.blogspot.com' rel='external nofollow' class='url'>Sarath</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060614-00/?p=30873#comment-391873">
			June 15, 2006 at 3:45 am</a>		</div>

		<p>Hi,<br />
<br />Is there any way to prevent this?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-391883">
				<div id="div-comment-391883" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://sarathc.blogspot.com' rel='external nofollow' class='url'>Sarath</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060614-00/?p=30873#comment-391883">
			June 15, 2006 at 3:45 am</a>		</div>

		<p>Hi,<br />
<br />Is there any way to prevent this?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-391893">
				<div id="div-comment-391893" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Dave Harris</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060614-00/?p=30873#comment-391893">
			June 15, 2006 at 7:45 am</a>		</div>

		<p>BryanK: &quot;(If I were writing a Win32 program, I&#8217;d just pass DEFAULT_QUALITY, and use the system ClearType setting&#8230; &nbsp;but that&#8217;s a separate issue.)&quot;</p>
<p>It depends on why you are drawing. I have some library code which draws to a bitmap, and sometimes that bitmap goes directly onto the window (it is a back-buffer) and sometimes it gets exported as a .BMP file. In the latter case I don&#8217;t want ClearType. ClearType uses sub-pixel positioning on an LCD screen. The .BMP may end up on a CRT screen or a printer, and ClearType looks poor there.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-391903">
				<div id="div-comment-391903" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Dave Van den Eynde</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060614-00/?p=30873#comment-391903">
			June 15, 2006 at 7:48 am</a>		</div>

		<p>Of course you don&#8217;t get anti-aliasing this way, because you&#8217;re doing all the rasterization yourself. Perhaps you need a bit of Anti Grain Geometry (<a rel="nofollow" target="_new" href="http://www.antigrain.com" rel="nofollow">http://www.antigrain.com</a>).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-392143">
				<div id="div-comment-392143" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Mike Capp</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060614-00/?p=30873#comment-392143">
			June 15, 2006 at 6:54 pm</a>		</div>

		<p>Not sure if anybody still reads these comments a day later, but for the benefit of any future Googlers I tracked down the problem described earlier. And hey, it&#8217;s not as if the Microsoft blogging community has anything else to talk about this evening. </p>
<p>The problem turned out to be an (arguably) undocumented precondition of GetTextMetrics. When you call this function with a memory DC, you MUST have already selected a bitmap into that DC. Otherwise, antialiasing for the selected font is forced down to the worse of the font and global settings. Thus, with ClearType disabled globally, a memory HDC and a ClearType-enabled HFONT: </p>
<p>&nbsp; SelectObject(hdc, hfont); <br />&nbsp; SelectObject(hdc, hbitmap); <br />&nbsp; GetTextMetrics(hdc, &amp;tm); </p>
<p>gives you ClearType text, and </p>
<p>&nbsp; SelectObject(hdc, hfont); <br />&nbsp; GetTextMetrics(hdc, &amp;tm); <br />&nbsp; SelectObject(hdc, hbitmap); </p>
<p>doesn&#8217;t. </p>
<p>Quite why this should be, I&#8217;ve no idea. The CreateCompatibleDC docs talk about needing a bitmap for drawing ops, but GetTextMetrics is hardly a drawing op. The same docs mention that the default drawing surface is monochrome, but if that were the deciding factor I&#8217;d expect ClearType to be disabled regardless of the global setting, and it isn&#8217;t. </p>
<p>In any case, it&#8217;s trivial to work around. Mildly annoying, since I was using the results of GetTextMetrics to calculate the size of bitmap needed, but recreating and reselecting the font before drawing works fine. A dummy bitmap would probably also do the trick. </p>
<div class=post>[<i>It is documented, though not in so many words. A fresh DC comes with a bitmap pre-selected: a 1&#215;1 monochrome bitmap. And of course you can&#8217;t do anti-aliasing with a monochrome bitmap. I knew that this would happen but assumed that you wouldn&#8217;t have been so crazy to have selected a monochrome bitmap and then expected anti-aliasing to work&#8230; It hadn&#8217;t occurred to me that the problem was that you forgot to select your bitmap at all. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-392153">
				<div id="div-comment-392153" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Mike Capp</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060614-00/?p=30873#comment-392153">
			June 15, 2006 at 7:42 pm</a>		</div>

		<p>Raymond: </p>
<p>I think you misread my post. The problem was with GetTextMetrics, not TextOut. Obviously, I was selecting a bitmap before doing any drawing, or I wouldn&#8217;t have seen any text, antialiased or otherwise. </p>
<p>The questions are: </p>
<p>1) Why does GetTextMetrics care whether I have a bitmap selected? Heck, from the description it should be possible to fill a TEXTMETRIC from just an HFONT, without even an HDC. </p>
<p>2) Even if it does care, why is a &#8220;getter&#8221; function like GetTextMetrics &nbsp;actively changing the state of a font? Reselecting the same HFONT afterwards did not correct the issue; it took another call to CreateFont. </p>
<div CLASS=post>[<i>It&#8217;s not GetTextMetrics that cares. It&#8217;s the SelectObject(&#8230;, hfont). <a HREF="http://msdn.microsoft.com/library/en-us/dngdi/html/msdn_objects.asp" rel="nofollow">Selecting an object into a DC causes it to become realized based on the attributes of the DC</a>. And when you selected the font, the DC was monochrome. (I&#8217;ll let you guess why reselecting the font doesn&#8217;t have any effect. But you don&#8217;t need to destroy the font and re-create it. You just have to force the font to re-realize.) -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-392173">
				<div id="div-comment-392173" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Mike Capp</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060614-00/?p=30873#comment-392173">
			June 15, 2006 at 7:58 pm</a>		</div>

		<p>Ah, OK. Scratch question 1. </p>
<p>&#8220;All sizes are specified in logical units; that is, they depend on the current mapping mode of the display context.&#8221; (TEXTMETRIC docs)</p>
<div CLASS=post>[<i>I thought I already answered question 2. GetTextMetrics doesn&#8217;t change the state of the font. SelectObject does. (Except when it doesn&#8217;t, which I left as an exercise.) -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-392183">
				<div id="div-comment-392183" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Mike Capp</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060614-00/?p=30873#comment-392183">
			June 15, 2006 at 8:39 pm</a>		</div>

		<p>No, that doesn&#8217;t fit. If that were the root cause, then the first sequence above wouldn&#8217;t have worked &#8211; select font, select bitmap, call GetTextMetrics &#8211; because the bitmap is still monochrome when the font is selected. And it does work; I&#8217;ve just checked, twice. </p>
<p>And recall that I was getting ClearType when it was enabled globally, even when selecting the bitmap after BOTH selecting the font and calling GetTextMetrics. </p>
<p>The page you linked was interesting; I hadn&#8217;t seen that material before. However, UnrealizeObject/SelectObject does not restore ClearType rendering. CreateFont/SelectObject does. There&#8217;s definitely something fishy going on. </p>
<div class=post>[<i>Rats. Then i&#8217;m as baffled as you. Note that UnrealizeObject works only for palettes and brushes. I would try selecting a different font, then selecting the original back in. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-392193">
				<div id="div-comment-392193" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Mike Capp</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060614-00/?p=30873#comment-392193">
			June 15, 2006 at 9:00 pm</a>		</div>

		<p>(Clarification, since I think server lag is confusing matters. My &quot;scratch question 1&quot; comment was a followup to my 7:42 post, not a reply to your comment on it.)</p>
<p>Responding to your comment on my 8:39 post&#8230;</p>
<p>The page you linked includes the following passage: </p>
<p>&quot;When an application changes the logical device mapping of a DC (by changing the mapping mode or the window or viewport definition), the system re-realizes the currently selected pen and font before they are used the next time.&quot;</p>
<p>If selecting a bitmap into a memory DC counts as changing the logical device mapping, this would explain why I could get ClearType even though the DC was monochrome when the font was originally selected.</p>
<p>I was already selecting a different font before trying UnrealizeObject/SelectObject, just to be on the safe side. Made no difference.</p>
<p>Probably not much else to be said here; it really does look as though there is something rotten in the state of GetTextMetrics. Might justify a note in the MSDN docs. In any case, many thanks: I wouldn&#8217;t have discovered the specific problem and the workaround without the encouraging knowledge that this stuff was working for somebody somewhere.<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-392233">
				<div id="div-comment-392233" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">nksingh</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060614-00/?p=30873#comment-392233">
			June 16, 2006 at 1:03 am</a>		</div>

		<p>Avalon will generally fix this problem for new app developers who use it and I&#8217;m glad for that. </p>
<p>I really wish it had an unmanaged interface. &nbsp;Is there a good chance the shell will start using it in Vista++ (Vienna?)?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-392243">
				<div id="div-comment-392243" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Gabe</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060614-00/?p=30873#comment-392243">
			June 16, 2006 at 1:43 am</a>		</div>

		<p>BTW, one reason that GetTextMetrics would care about the bitmap is that it may return different results if ClearType is on. The antialiasing allows it to space letters more precisely, so a run of text may not be the same length on a monochrome bitmap as on a device bitmap.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-392553">
				<div id="div-comment-392553" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ulric</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060614-00/?p=30873#comment-392553">
			June 16, 2006 at 6:27 pm</a>		</div>

		<p>I had a lot of trouble getting Clear Type to work on my menu class, which draws to a memory DC. I remember searching thoroughly combing the documentation and not understanding why my ANTIALIASED did not work. &nbsp;Since system menus where properly antialiased, and my tear off menus were not, they stood out.</p>
<p>Now I look back at the file diff and I seems all I ended up doing was use PROOF_QUALITY for the antialiasing flag in the LOGFONT structure &#8212; instead of ANTIALIASED_QUALITY. &nbsp;</p>
<p>LOGFONT g_lfNormal ={   -11, 0, 0, 0, FW_NORMAL,FALSE, FALSE, FALSE,DEFAULT_CHARSET,<br />
<br />OUT_STROKE_PRECIS,CLIP_DEFAULT_PRECIS,PROOF_QUALITY,DEFAULT_PITCH|FF_DONTCARE,  _T(&quot;Tahoma&quot;)};</p>
<p>With regards to extracting antialiasing font bitmaps with GetGlyphOutline, I have done this as well. &nbsp;I needed this to generate a font bitmap to use in OpenGL. &nbsp;But I am doing this &#8216;offline&#8217; and generating a bitmap file, a mosaic of all ASCII character I need, which I ship with the app. &nbsp;I didn&#8217;t need to go through that trouble, but I investigated using that.</p>
<p>Using the bitmaps out of GetGlyphOutline is too much work guys, certainly don&#8217;t use use this if you want to draw on screen with it at runtime.</p>
<p>If you want do to something forced antialiasing offscreen like this, I suggest using GDI to draw whatever you need at twice the size, and sizing down the bitmap with a good filter. &nbsp;It will end up being a lot less image processing code than to apply that 64-shades-of-gray image onto your background. &nbsp;</p>
<p>Because once a filter is running and optimized, it runs fast and it scales well, no matter the complexity of the graphics elements or text you want to anti-alias.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-392533">
				<div id="div-comment-392533" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.morganalley.com' rel='external nofollow' class='url'>Dewi Morgan</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060614-00/?p=30873#comment-392533">
			June 16, 2006 at 5:21 pm</a>		</div>

		<p>@ping and pong</p>
<p>You write: &quot;Decades is plural[&#8230;] You *really* designed websites back in 1986?&quot;</p>
<p>Thanks, I&#8217;ll pass your comment to our copy-writer: I suspect he counted &quot;man-decades&quot;. Both directors began webdev work in &#8217;93, and 1.3 &quot;decades&quot; each isn&#8217;t really &quot;decades&quot;, even to href=&quot;&quot;&gt;one significant figure&lt;/a&gt; (except in the gramatical sense that pluralises any fraction).</p>
<p>Back on topic:<br />
<br />Raymond is clearly correct, and I clearly wrong (I should have tested his code before speaking!).</p>
<p>Thank you for this post, Raymond: I&#8217;m writing a &quot;transparent Java1.1 rich-text no-Swing textarea&quot; at the moment (pointless, yes: so sue me!), and if Java respects the system ClearType settings, this &quot;darkening&quot; effect is definitely something I shall have to bear in mind.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-393203">
				<div id="div-comment-393203" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">stories</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060614-00/?p=30873#comment-393203">
			June 19, 2006 at 8:20 pm</a>		</div>

		<p>Your article is prety nice. It&#8217;s a pity that i didn&#8217;t see it more later.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-393613">
				<div id="div-comment-393613" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">GregM</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060614-00/?p=30873#comment-393613">
			June 20, 2006 at 7:01 pm</a>		</div>

		<p>Wow, I&#8217;m absolutely astonished. &nbsp;One of the first things I do after installing Windows is turn off all the effects that just use up more CPU time and make it slower for the information I use &nbsp;to appear. &nbsp;Well, I turned on Clear Type today on my notebook (XP Pro SP2). &nbsp;WOW!!! &nbsp;I never realized how poorly the fonts looked before. &nbsp;The letters are nice and crisp. &nbsp;I was starting to have to squint at the letters, and was considering increasing my font size. &nbsp;There&#8217;s no need for that now. &nbsp;Even if this does take up some CPU time, I&#8217;m keeping it. &nbsp;Raymond, thank you so much for bringing up this topic.<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>