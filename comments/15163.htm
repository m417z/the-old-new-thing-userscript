<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (64)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-805873">
				<div id="div-comment-805873" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Paul</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100127-00/?p=15163#comment-805873">
			January 27, 2010 at 7:35 am</a>		</div>

		<p>Surely you need a compatibility shim to make d:foobarblaz.exe appear to exist?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-805883">
				<div id="div-comment-805883" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Not Raymond</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100127-00/?p=15163#comment-805883">
			January 27, 2010 at 7:56 am</a>		</div>

		<p>Remember when we were talking about how people don&#8217;t look up error codes? That was cool.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-805893">
				<div id="div-comment-805893" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Michael</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100127-00/?p=15163#comment-805893">
			January 27, 2010 at 8:13 am</a>		</div>

		<p>&#8220;I didn&#8217;t realize I would have to remember the fine details of this support incident three years later.&#8221;</p>
<p>My goodness. Relax, Raymond, you&#8217;re among (mostly) friends.</p>
<div class=post>[<i>I know. But it&#8217;s the 10% non-friends that cause the trouble. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-805903">
				<div id="div-comment-805903" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joseph Koss</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100127-00/?p=15163#comment-805903">
			January 27, 2010 at 8:22 am</a>		</div>

		<p>Maybe its time that all log viewers put a link next to all errors codes that will open a browser and perform a google/bing/msdn search for said error code.</p>
<p>Just saying&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-805913">
				<div id="div-comment-805913" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Billy O'Neal</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100127-00/?p=15163#comment-805913">
			January 27, 2010 at 8:30 am</a>		</div>

		<p>@ Joseph Koss</p>
<p>Maybe you&#8217;re assuming the log isn&#8217;t dumped to a plain text file&#8230;.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-805923">
				<div id="div-comment-805923" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">kog999</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100127-00/?p=15163#comment-805923">
			January 27, 2010 at 8:37 am</a>		</div>

		<p>@Joseph Koss</p>
<p>Or the error log could hae just said Error 2:FILE_NOT_FOUND</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-805933">
				<div id="div-comment-805933" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">fahadsadah</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100127-00/?p=15163#comment-805933">
			January 27, 2010 at 8:39 am</a>		</div>

		<p>The error recorded is the return value.</p>
<p>Would you rather have a function that returns 2, or one that returns &quot;Error 2:FILE_NOT_FOUND&quot;?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-805943">
				<div id="div-comment-805943" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Eric</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100127-00/?p=15163#comment-805943">
			January 27, 2010 at 8:44 am</a>		</div>

		<p>So what&#8217;s the story behind the malware-serving Tailspin Toys site (as referenced in Bob Smith&#8217;s signature)?</p>
<div class=post>[<i>Look at the big red text at the top. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-805963">
				<div id="div-comment-805963" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">JS</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100127-00/?p=15163#comment-805963">
			January 27, 2010 at 8:51 am</a>		</div>

		<p>tip: &nbsp;you can translate error message on the command line with net helpmsg, e.g.</p>
<p>C:&gt;net helpmsg 2</p>
<p>The system cannot find the file specified.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-805973">
				<div id="div-comment-805973" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Peter</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100127-00/?p=15163#comment-805973">
			January 27, 2010 at 8:55 am</a>		</div>

		<p>Don&#8217;t you think you&#8217;re being a little unfair, Raymond? &nbsp;Where is a non-programmer supposed to look up these error codes anyway? &nbsp;Where I work, our logs files are intended for programmer consumption, so we don&#8217;t get bent out of shape when QA or customers ask us to interpret them.</p>
<div class=post>[<i>The person asking the question was a technical person. I expect technical people to know their error codes (or at least know where to look them up). And even if he didn&#8217;t recognize the error code, once its meaning was explained, he should have been able to say something like &#8220;Oh, yeah, I uninstalled Foo last week, that may be the problem&#8221; instead of an unhelpful &#8220;No the file isn&#8217;t there.&#8221; -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-805983">
				<div id="div-comment-805983" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Jim</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100127-00/?p=15163#comment-805983">
			January 27, 2010 at 9:36 am</a>		</div>

		<p>The story is not new, everybody has a mind of being taken care of or babysitting by someone alse. The atitude is annoying but this is the trend in the physch of the people, the higher the title the worse the symptom.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-805993">
				<div id="div-comment-805993" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Kujo</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100127-00/?p=15163#comment-805993">
			January 27, 2010 at 10:11 am</a>		</div>

		<p>I&#8217;ve encountered this behavior from testers before, and some of these are smart people. &nbsp;I wonder what it is about tester environments that tends to foster such helplessness and lack of initiative.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-806003">
				<div id="div-comment-806003" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Someone You Know</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100127-00/?p=15163#comment-806003">
			January 27, 2010 at 10:13 am</a>		</div>

		<p>@Jim</p>
<p>This does seem to be very common, especially in the United States.</p>
<p>But Raymond&#8217;s always talking about how in the past, it was assumed that programmers knew what the hell they&#8217;re doing. Presumably, enough of them actually did that such an assumption was useful. Now it seems to have gone the other way, at least on the programmers&#8217; side. When did this transition happen? And why?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-806013">
				<div id="div-comment-806013" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Marquess</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100127-00/?p=15163#comment-806013">
			January 27, 2010 at 10:32 am</a>		</div>

		<p>At least .Net learned to throw exceptions, which are much better at being converted to English. Although the explanation for FileNotFoundException (“The PATH environment variable has a string containing quotes”) is &#8230; creative. That&#8217;s totally gotta help.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-806023">
				<div id="div-comment-806023" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Peter</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100127-00/?p=15163#comment-806023">
			January 27, 2010 at 10:34 am</a>		</div>

		<p>Well, our QA team consists of &quot;technical&quot; people, but I still wouldn&#8217;t expect them to know what Win32 error codes mean. &nbsp;(Or even that CreateProcess is a Win32 API call for that matter.) &nbsp;I would take Bob&#8217;s first answer to mean &quot;Blaz.exe is not there. &nbsp;I have no idea what it is. &nbsp;Do you expect it to be there?&quot; &nbsp;Anyway, I have no comment on Bob&#8217;s competence (or lack there-of). &nbsp;I just think a little sympathy is in order. ;)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-806033">
				<div id="div-comment-806033" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.nerdhappens.com' rel='external nofollow' class='url'>Brian Morton</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100127-00/?p=15163#comment-806033">
			January 27, 2010 at 10:47 am</a>		</div>

		<p>Those are some very nice images! &nbsp;Where did they come from? &nbsp;They don&#8217;t seem to contain any EXIF data.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-806043">
				<div id="div-comment-806043" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Igor</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100127-00/?p=15163#comment-806043">
			January 27, 2010 at 10:58 am</a>		</div>

		<p>I assume tailspin tracks number of downloads to see if people read the message. Posting a link here will completely screw up their numbers :) All the geeks will want to know what&#8217;s in the download.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-806063">
				<div id="div-comment-806063" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Bryan</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100127-00/?p=15163#comment-806063">
			January 27, 2010 at 11:04 am</a>		</div>

		<p>@Peter: It might depend some on your tech support level, but I would be frustrated by your QA/Support team. While they don&#8217;t need to know the first thing about what a &quot;Win32 API&quot; really is, I would definitely expect them to know how to look up generic error codes. Even if they don&#8217;t know about net helpmsg x just having the error lookup tool would suffice.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-806073">
				<div id="div-comment-806073" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">pbrown</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100127-00/?p=15163#comment-806073">
			January 27, 2010 at 11:21 am</a>		</div>

		<p>| C:&gt;net helpmsg 2</p>
<p>| The system cannot find the file specified.</p>
<p>Wow! &nbsp;&quot;net helpmsg&quot; is broken, too! &nbsp;Can&#8217;t Windows do anything right? &nbsp;:-)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-806083">
				<div id="div-comment-806083" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Anonymous</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100127-00/?p=15163#comment-806083">
			January 27, 2010 at 11:24 am</a>		</div>

		<p>Of course, even if it had been a friendly error string, I&#8217;ve frequently had the experience that people can&#8217;t be bothered to read those.</p>
<p>For example, in this case, let&#8217;s say the message had said, &quot;The file was not found. &nbsp;Please verify that D:foobarblaz.exe exists, or suitably adjust your input.&quot; &nbsp;With a lot of people, chances are they&#8217;ll still expect to discover what they did wrong and introduce a code change to accomodate their circumstance.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-806093">
				<div id="div-comment-806093" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">John</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100127-00/?p=15163#comment-806093">
			January 27, 2010 at 11:27 am</a>		</div>

		<p>fprintf(log, &#8220;error %d: %sn&#8221;, dwResult, GetFormattedErrorMessage(dwResult));</p>
<div class=post>[<i>Ooh, a memory leak (nobody freed the formatted error message), or maybe a thread-safety bug (static buffer), or additional TLS data management (the formatted error is a per-thread variable) and then a memory leak when the DLL is dynamically unloaded. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-806113">
				<div id="div-comment-806113" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Orisit</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100127-00/?p=15163#comment-806113">
			January 27, 2010 at 12:30 pm</a>		</div>

		<p>&quot;tip: &nbsp;you can translate error message on the command line with net helpmsg, e.g.</p>
<p>C:&gt;net helpmsg 2</p>
<p>The system cannot find the file specified.&quot;</p>
<p>Actually, that is an error message from the NET program, because it can not find the file &quot;helpmsg&quot;.</p>
<p>Or, is it???</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-806123">
				<div id="div-comment-806123" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Mark T. Tomczak</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100127-00/?p=15163#comment-806123">
			January 27, 2010 at 12:55 pm</a>		</div>

		<p>While I agree that people introspecting logs are technical people and can deal with an error code, my irritation at the answer &quot;People should know how to look up error codes&quot; comes from two places:</p>
<p>1) Technical people are busy people, and converting an integer code to a string is a task the computer can easily do for the developer. Yes, it&#8217;s more code to do it properly; that&#8217;s why I usually recommend to people who are starting on big projects that they start with the error management system.</p>
<p>2) Is the code a POSIX code? Win32 code? A custom number coming from some third-party module? Error code numbers, if not cautiously handled, can easily cross namespaces and become useless or, worse, misleading. It&#8217;s harder for a descriptive string to suffer such semantic mismatches.</p>
<p>The second issue doesn&#8217;t apply in Bob&#8217;s case (though the first issue does&#8230; Even knowing CreateProcess is a win32 function, I had to page through four or so bits of MSDN&#8217;s documentation to find the &quot;System Error Codes&quot; page). But in general, a lot of headaches can be saved by having the error logging system provide a user-readable string. Execution logs are usually for humans to consume, and humans (even software engineers) don&#8217;t think in number codes.</p>
<p>That having been said, the overarching point of &quot;Don&#8217;t shut off your brain&quot; is a good point. But after spending months wrestling with a program designed with the philosophy that such terse error reporting is acceptable, a person can get tired and snippy when they ask for help.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-806133">
				<div id="div-comment-806133" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">patros</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100127-00/?p=15163#comment-806133">
			January 27, 2010 at 1:00 pm</a>		</div>

		<p>&quot;Actually, that is an error message from the NET program, because it can not find the file &quot;helpmsg&quot;.</p>
<p>Or, is it???&quot;</p>
<p>Try &quot;net helpmsg 7&quot;. Not the same message, mystery solved.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-806143">
				<div id="div-comment-806143" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://ivan.blogs.chimerical.com.au/' rel='external nofollow' class='url'>ivanjh</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100127-00/?p=15163#comment-806143">
			January 27, 2010 at 1:08 pm</a>		</div>

		<p>I think it&#8217;s from an IE8 demo of the &quot;SmartScreen Filter&quot;</p>
<p><a rel="nofollow" target="_new" href="http://www.ie8demos.com/smartscreen/tailspin/" rel="nofollow">http://www.ie8demos.com/smartscreen/tailspin/</a></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-806153">
				<div id="div-comment-806153" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">John</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100127-00/?p=15163#comment-806153">
			January 27, 2010 at 2:04 pm</a>		</div>

		<p>GetFormattedErrorMessage() returns a CString.</p>
<div class=post>[<i>Try explaining to the architecture team why your system service has a dependency on MFC. (Oh, and now you have to convert it from C to C++.) -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-806163">
				<div id="div-comment-806163" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Mr Willows</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100127-00/?p=15163#comment-806163">
			January 27, 2010 at 2:06 pm</a>		</div>

		<p>The system won&#8217;t find my program (myprogram.exe). &nbsp;I&#8217;ve not yet compiled (or actually written) the program yet, but can you tell me why Windows is not working correctly.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-806173">
				<div id="div-comment-806173" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">John</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100127-00/?p=15163#comment-806173">
			January 27, 2010 at 2:44 pm</a>		</div>

		<p>Well, gosh. &nbsp;I guess if it can&#8217;t be done in 5 lines of code or less then it isn&#8217;t worth doing. &nbsp;The point is that it&#8217;s not so much extra work that it&#8217;s not worth doing, though I suspect most of us don&#8217;t bother.</p>
<p>char msg[512];</p>
<p>fprintf(log, &#8220;error %d: %sn&#8221;, dwResult, GetFormattedErrorMessage(dwResult, msg, 512));</p>
<div class=post>[<i>Most people wouldn&#8217;t bother. It&#8217;s just a log file. The information is still there; it&#8217;s just terse. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-806183">
				<div id="div-comment-806183" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">porter</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100127-00/?p=15163#comment-806183">
			January 27, 2010 at 3:26 pm</a>		</div>

		<p>Problem: Tester raises bug, &quot;Log file too terse&quot;</p>
<p>Solution: Developer removes log file capability because it was never an agreed requirement.</p>
<p>See, everybody happy.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-806203">
				<div id="div-comment-806203" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Olivier</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100127-00/?p=15163#comment-806203">
			January 27, 2010 at 4:40 pm</a>		</div>

		<p>Why do we get crypted error like : &#8220;[07/17/2005:18:31:19] CreateProcess failed with error 2&#8221; instead of something clear like : &#8220;there was an error with CreateProcess, stupid you, please check if the file D:Foobarblaz.exe exists.&#8221;</p>
<p>@Eric : in the malware files, there are just random pr0n pics (hehe, now many people will download it ;) ).</p>
<p>@Jim : &#8220;the higher the title the worse the symptom&#8221;, yes, because stupid people can&#8217;t do real work, so they get high titles to feel important. The problems start when those people want to do something&#8230;</p>
<div class=post>[<i>This is a log file, not an error message to be displayed to the end user. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-805953">
				<div id="div-comment-805953" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Sean</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100127-00/?p=15163#comment-805953">
			January 27, 2010 at 8:46 am</a>		</div>

		<p>And that is why we use strerror or equivalent</p>
<div class=post>[<i>This is a log file, not a message in a dialog box shown to the user. Log files assume that the reader is a technical person. Given the choice between writing fprintf(log, &#8220;error %dn&#8221;), GetLastError()) /* look it up in winerror.h if you don&#8217;t recognize it */ and DWORD dwError = GetLastError(); LPTSTR pszError; DWORD dwResult = FormatMessage(FORMAT_MESSAGE_FROM_SYSTEM | FORMAT_MESSAGE_ALLOCATE_BUFFER, NULL, dwError, 0, (LPTSTR)&amp;pszError, 0, NULL); fprintf(log, &#8220;error %d: %sn&#8221;, dwResult ? pszError : &#8220;(error retrieving error text)&#8221;); if (dwError) LocalFree(pszError); which one would you write in a quick logging function? -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-806223">
				<div id="div-comment-806223" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Cheong</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100127-00/?p=15163#comment-806223">
			January 27, 2010 at 5:17 pm</a>		</div>

		<p>While being completely brainless when asking for help is annoying, I found that being too proactively suggesting &quot;maybe&quot; cause at your side when asking for help to be yet another kind of annoying manner.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-806233">
				<div id="div-comment-806233" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Cheong</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100127-00/?p=15163#comment-806233">
			January 27, 2010 at 5:30 pm</a>		</div>

		<p>[This is a log file, not an error message to be displayed to the end user. -Raymond]</p>
<p>Apparently there&#8217;s some steadly users exist on forums/newsgroup that, after a few tries to ask for logs when asking questions about their problem, supply the logs by default when they ask questions. Eventally (or will it?) they&#8217;ll find out for most of the time, the most related information about their problem is on the last few lines of the log.</p>
<p>You can&#8217;t just assume they know something when they refer to something in the log file.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-806243">
				<div id="div-comment-806243" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ciggy</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100127-00/?p=15163#comment-806243">
			January 27, 2010 at 5:36 pm</a>		</div>

		<p>So that&#8217;s what happened to Microsoft Bob&#8230; He went on to write code. :)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-806253">
				<div id="div-comment-806253" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">porter</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100127-00/?p=15163#comment-806253">
			January 27, 2010 at 5:44 pm</a>		</div>

		<p>While writing code I got in the habit of setting HRESULT to E_UNEXPECTED until I truely had some status to return.</p>
<p>MSVC 4 says it&#8217;s &quot;Unexpected failure&quot;, alas some wag has now changed it in XP to &quot;Catastrophic failure&quot;, which made for some interesting responses from testers!</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-806263">
				<div id="div-comment-806263" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Gabe</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100127-00/?p=15163#comment-806263">
			January 27, 2010 at 6:24 pm</a>		</div>

		<p>I don&#8217;t understand why the Senior Test Engineer asked you [MS] instead of some developer who wrote the code that generated the error</p>
<div class=post>[<i>&#8220;The trace log was generated by an operating system component&#8230;&#8221; The developer who wrote the code that generated the error worked at MS. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-806053">
				<div id="div-comment-806053" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">dave</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100127-00/?p=15163#comment-806053">
			January 27, 2010 at 11:02 am</a>		</div>

		<p>&gt;The PATH environment variable has a string containing quotes.</p>
<p>By crikey, that *is* my problem!</p>
<p>C:&gt; path</p>
<p>PATH=C:Windowssystem32;<a rel="nofollow" target="_new" href="http://www.bartleby.com/100" rel="nofollow">http://www.bartleby.com/100</a></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-806273">
				<div id="div-comment-806273" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">CGomez</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100127-00/?p=15163#comment-806273">
			January 27, 2010 at 7:11 pm</a>		</div>

		<p>The crap I deal with is:</p>
<p>&quot;We got this error in our logs&#8230; it&#8217;s (rattles off some HRESULT). &nbsp;We looked it up and it says, &#8216;blah&#8217;, but you know MSFT error codes aren&#8217;t really that helpful. &nbsp;Half the time that&#8217;s not the real problem.&quot;</p>
<p>1) Why is an HRESULT a &quot;MSFT error&quot;? &nbsp;Are they they only ones who write and install COM components?</p>
<p>2) Not the real problem?</p>
<p>I deal with this all the time&#8230; debugging by voodoo. It&#8217;s out there and it&#8217;s common.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-806103">
				<div id="div-comment-806103" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Gaspar</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100127-00/?p=15163#comment-806103">
			January 27, 2010 at 12:06 pm</a>		</div>

		<p>@pbrown</p>
<p>That was my gut reaction, followed a second latter by, &quot;oh duh&quot; *facepalm* &nbsp;=P</p>
<p>&#8212;&#8212;</p>
<p>I am pretty amazed by the responses in the comments on this one. &nbsp;This sounds like a classic case of an incompetent person out of his league or maybe just someone having a REALLY bad day (we&#8217;ve all had those).</p>
<p>First he seems to have failed in looking up an error code. &nbsp;This should be step number one. &nbsp;Next when told the message is file-not-found, he scratches his head. &nbsp;I can&#8217;t think of an error that is more self explanatory.</p>
<p>Maybe out-of-batter&#8230;. *blank screen*</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-806283">
				<div id="div-comment-806283" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Pax</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100127-00/?p=15163#comment-806283">
			January 27, 2010 at 9:36 pm</a>		</div>

		<p>Can I suggest one thing? When you write messages to your log files, don&#8217;t use the word &quot;error&quot;. We had one customer ringing up complaining that they were getting a lot of error #0 messages in the log files and wanting to know what the errors were. They wouldn&#8217;t listen when we said the log file was for us, not them and that, as long as the software was working, they shouldn&#8217;t even look in there. Solution: &quot;s/error/status/g&quot; in the next patch and they stopped complaining.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-806293">
				<div id="div-comment-806293" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Drak</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100127-00/?p=15163#comment-806293">
			January 27, 2010 at 10:39 pm</a>		</div>

		<p>I love all these people here who say &#8216;The tested doesn&#8217;t know it&#8217;s win32 API&#8217; and &#8216;The tester doesn&#8217;t need to know error codes&#8217;.</p>
<p>I hope your testers are smart enough to use google? Google for &#8216;createprocess error 2&#8217; and you&#8217;ll find all kind of nice hits. Et voila in the first one someone is asking &#8216;What is error 2&#8217; and another poster explains &#8216;It&#8217;s FILE_NOT_FOUND&#8217;. Is that too much to expect from a SENIOR tester? I hope not.</p>
<p>I admit the internet is probably fuller of forums today than it was a couple of years ago, but even back then &#8216;googling it&#8217; was always step 1.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-806193">
				<div id="div-comment-806193" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">ChrisR</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100127-00/?p=15163#comment-806193">
			January 27, 2010 at 4:11 pm</a>		</div>

		<p>As someone else mentions, logging and such are an integral part of what we do when we start a new project, if it has to be started from scratch. &nbsp;Otherwise it&#8217;s already there in the infrastructure.</p>
<p>Then it&#8217;s almost hard to *not* bother with writing out the error string.</p>
<p>LogWin32Error( &quot;Something bad happened&quot; )</p>
<p>int LogWin32Error( char * message, DWORD code )</p>
<p>{</p>
<p> &nbsp;// GetWin32ErrorMessage can return CString or std::string or fill in a char*, as needed by project. &nbsp;Make sure to fix the printf if GetWin32ErrorMessage returns an object though, since it won&#8217;t call any conversion operators (or c_str) for you.</p>
<p> &nbsp;printf( &quot;%s: %d (%s)&quot;, message, code, &nbsp;GetWin32ErrorString( code ) );</p>
<p>}</p>
<p>But Raymond, I do agree that most people won&#8217;t bother and in a lot of other projects I don&#8217;t bother either.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-806313">
				<div id="div-comment-806313" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ooh</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100127-00/?p=15163#comment-806313">
			January 28, 2010 at 1:08 am</a>		</div>

		<p>Goran, MFC CString was explicitly designed to support exactly that scenario &#8211; CString should be a convenient wrapper that you can still pass in to all those other C-style functions without having to worry about it. So yes, you can use the explicit cast, but there&#8217;s absolutely no need to.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-806213">
				<div id="div-comment-806213" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Imaperson</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100127-00/?p=15163#comment-806213">
			January 27, 2010 at 5:11 pm</a>		</div>

		<p>IME there&#8217;s an issue with providing verbose error strings to a user (granted in this case we&#8217;re not talking about a user). More often than not they will provide their &quot;interpretation&quot; of the message rather than the message verbatim, e.g. &quot;It said something about XYZ&quot;, whereas if you give them a number they will provide *the number* which can then be (assuming they&#8217;re sanely assigned) quickly looked up in code/documentation.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-806323">
				<div id="div-comment-806323" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">anon</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100127-00/?p=15163#comment-806323">
			January 28, 2010 at 2:38 am</a>		</div>

		<p>Who the hell &quot;memorizes&quot; these error codes? You look them up when you need to, and only because the goddamn programmer decided to show the &quot;error code&quot; instead of text of the error message. Programmers suck.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-806333">
				<div id="div-comment-806333" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Neil</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100127-00/?p=15163#comment-806333">
			January 28, 2010 at 2:45 am</a>		</div>

		<p>@JS</p>
<p>net helpmsg doesn&#8217;t work for messages with insertions, instead it just spits out &quot;%d is not a valid Windows network message number.&quot;</p>
<p>I&#8217;m not sure how to tell whether that message has a message number, since it has an insertion&#8230;</p>
<p>@Marquess</p>
<p>PATH=Proverbs12:24</p>
<p>Oh wait, not that sort of quote&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-806343">
				<div id="div-comment-806343" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Wound</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100127-00/?p=15163#comment-806343">
			January 28, 2010 at 5:22 am</a>		</div>

		<p>@dave Nicely played sir!</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-806353">
				<div id="div-comment-806353" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Z</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100127-00/?p=15163#comment-806353">
			January 28, 2010 at 6:11 am</a>		</div>

		<p>i am willing to bet that even if the log file had said &quot;file not found&quot; in plain text, Bob would have bugged you anyway!</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-806363">
				<div id="div-comment-806363" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Teo</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100127-00/?p=15163#comment-806363">
			January 28, 2010 at 6:22 am</a>		</div>

		<p>Hello, the log file is the ui for its end-user, which is the QA guy/gal :-)</p>
<p>CString is Atl since idk, maybe 2003? Surely Atl is in almost 95% of Win32 code, usually because it&#8217;s a very convinient com wrapper, and basically every win32 program larger than 10 lines of code needs com.</p>
<p>Raymond, as with most MS technologies FormatMessage looks like it&#8217;s convenient and easy to use while in practise fails miserably.</p>
<p>So your example that is implicitly says &#8220;gee, see how easy is to use FormatMessage&#8221; is flawed.</p>
<div class=post>[<i>I thought my example was saying &#8220;Look how cumbersome it is to use FormatMessage.&#8221; Oh, and according to Windows Internals, &#8220;The vast majority of Windows is written in C.&#8221; You&#8217;d be surprised how much of Windows doesn&#8217;t use COM. (For example, um, everything written at a lower level than COM.) -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-806383">
				<div id="div-comment-806383" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">mmyers</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100127-00/?p=15163#comment-806383">
			January 28, 2010 at 7:53 am</a>		</div>

		<p>@dave: Please don&#8217;t make me laugh out loud like that in the middle of the office!</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-806303">
				<div id="div-comment-806303" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Goran</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100127-00/?p=15163#comment-806303">
			January 28, 2010 at 12:14 am</a>		</div>

		<p>@John (mildly useful nitpick):</p>
<p>CString GetFormattedErrorMessage(DWORD dwResult);</p>
<p>fprintf(log, &quot;error %d: %sn&quot;, dwResult, GetFormattedErrorMessage(dwResult));</p>
<p>A smart guy pointed out to me that this works by accident. It probably always will, because MFC team can&#8217;t now change implicit assumption that makes this possible, but still.</p>
<p>You see, %s in fprintf thinks it has a (probably const) char* as a second parameter (that&#8217;s actually TCHAR* in MSVCRT, which is I think not standards-compliant, but it&#8217;s better that it isn&#8217;t).</p>
<p>But you are passing CString. You may think that you are passing LPCTSTR, probably because CString has (effectively) operator LPCTSTR(). But in fact, you are just passing a &quot;this&quot; of a CString (look at dissasembly for proof ;-)). Because, you see, compiler doesn&#8217;t know that second parameter should be TCHAR* and that it should look for it. So it passes what it has, a CString.</p>
<p>And the accident is that &quot;this&quot; in CString points to the first character of the underlying string (but actual CString data is CStringData*).</p>
<p>I guess that was a neat optimization that makes CString::operator PCXSTR (used to be operator LPCTSTR, and effectively is still that) as fast as possible.</p>
<p>So&#8230; Your code works, but it does not hurt to be wary of the above and always write e.g.</p>
<p>fprintf(log, &quot;error %d: %sn&quot;, dwResult, LPCTSTR(GetFormattedErrorMessage(dwResult)));</p>
<p>(note the explicit cast to LPCTSTR).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-806413">
				<div id="div-comment-806413" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">njkayaker</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100127-00/?p=15163#comment-806413">
			January 28, 2010 at 8:29 am</a>		</div>

		<p>[Most people wouldn&#8217;t bother. It&#8217;s just a log file. The information is still there; it&#8217;s just terse. -Raymond]</p>
<p>It&#8217;s easy to write a function to report the GetFormattedErrorMessage() result. And it&#8217;s (relatively) easy to use the function. That is, it isn&#8217;t much of a bother. While Bob shouldn&#8217;t be helpless, the programmer should not be so lazy.</p>
<p>Being less terse in things like logs increases (ever so slightly!) the likelihood that the problem will be understood earlier.</p>
<div class=post>[<i>Perhaps so, but it didn&#8217;t help in Bob&#8217;s case&#8230; -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-806453">
				<div id="div-comment-806453" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Random User 43791</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100127-00/?p=15163#comment-806453">
			January 28, 2010 at 9:09 am</a>		</div>

		<p>Pros and cons of logging/showing error codes aside &#8211; if you are going to use error codes, be careful how you show them. Make sure the context strongly implies or explicitly states it is an error code, lest users interpret the code &quot;creatively&quot;.</p>
<p>This is particularly true if you are in the US, and use error codes that end up being represented by 10 decimal digits. On more than one occasion, this has resulted in the user calling support to report that, &quot;I called the phone number in the error, but it was [disconnected/unhelpful/embarrassing/etc.].&quot;</p>
<p>Note that this effect may apply to any sequence of digits that a user might interpret as a phone number, even if it means ignoring a leading hyphen or using dial-by-letter. And by any means, avoid preceding the code with a word along the lines of &quot;call&quot;, such as in &quot;&#8230;result of procedure call: -2146827859 [ActiveX component can&#8217;t create object]&quot;.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-806473">
				<div id="div-comment-806473" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Boris</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100127-00/?p=15163#comment-806473">
			January 28, 2010 at 9:38 am</a>		</div>

		<p>MSFT error messages <em>are</em> often wrong especially when the error is a result of a bug. I&#8217;ve seen &quot;the handle is invalid&quot; reported many times when the real error has nothing to do with handles (and there are no file operations going on) and &quot;this stored procedure expects a parameter that was not supplied&quot; when this is clearly false. So, if a return code might be misinterpreted, it might be a good idea not to convert it to a string.</p>
<p>And I never noticed before that errors might be misinterpreted as phone numbers. I guess I underestimate the idiocy of some users. Use hex. 800A01AD is much harder to misinterpret as a phone number (The 800 might be suggestive, but 5 digits following it are not)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-806483">
				<div id="div-comment-806483" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Random User 43791</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100127-00/?p=15163#comment-806483">
			January 28, 2010 at 10:54 am</a>		</div>

		<p>The key take-away I intended was the first paragraph. All it takes is to make sure they understand it is an error code.</p>
<p>Once user&#8217;s brains enter the creativity arena, it matters little what base it&#8217;s in, or anything else. They will find a way to make it meaningful to them, even if it seems insane to you.</p>
<p>Another example (contrived but plausible this time): So you decide error messages will have a text description, followed by the error code in parentheses. A user gets the error message, &quot;Error processing date or time record. (31011974)&quot;. They then call you up, asking why the error message has their birthday in it (January 31, 1974), when it should be processing yesterday&#8217;s stock quotes.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-806513">
				<div id="div-comment-806513" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Neil (SM)</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100127-00/?p=15163#comment-806513">
			January 28, 2010 at 11:27 am</a>		</div>

		<p>LOL! &nbsp;It&#8217;s like playing &quot;Who&#8217;s on First&quot; with the command window:</p>
<p>C:Usersme&gt;net helpmsg 2</p>
<p>The system cannot find the file specified.</p>
<p>C:Usersme&gt;net helpmsg 3</p>
<p>The system cannot find the path specified.</p>
<p>C:Usersme&gt;net helpmsg 4</p>
<p>The system cannot open the file.</p>
<p>C:Usersme&gt;net helpmsg 5</p>
<p>Access is denied.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-806563">
				<div id="div-comment-806563" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Olivier</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100127-00/?p=15163#comment-806563">
			January 28, 2010 at 11:48 am</a>		</div>

		<p>&quot;[This is a log file, not an error message to be displayed to the end user. -Raymond]&quot;</p>
<p>Sure, but it looks like that some &quot;technical&quot; persons (Senior Test Engineer in your post) have to be babysitted like a end user to understand what is the problem.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-806673">
				<div id="div-comment-806673" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Alexandre Grigoriev</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100127-00/?p=15163#comment-806673">
			January 28, 2010 at 1:31 pm</a>		</div>

		<p>@Goran</p>
<blockquote><p>
  But in fact, you are just passing a &quot;this&quot; of a CString (look at dissasembly for proof ;-)).
</p></blockquote>
<p>No. It&#8217;s passing a plain (not &quot;deep&quot;, as with a copy contructor) copy of CString object, which happens to be pointer-sized, and contain a pointer to its contained string. Thus it becomes an equivalent of LPCTSTR operator.</p>
<p>Note that C++ standard doesn&#8217;t allow passing non-POD types to variadic functions; and MSVC documentation now explicitly says to use an explicit LPCTSTR operator in this case.</p>
<p>For better results, use CStringA with (f/s)printf.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-806723">
				<div id="div-comment-806723" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">njkayaker</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100127-00/?p=15163#comment-806723">
			January 28, 2010 at 1:59 pm</a>		</div>

		<p>[Perhaps so, but it didn&#8217;t help in Bob&#8217;s case&#8230; -Raymond]</p>
<p>Agreed!</p>
<p>As it turns out, I did a lot of work to improve the error reporting of programs at my company. Even with the better messages, people don&#8217;t actually read them!</p>
<p>At this point, all I ask people to do is forward the actual message to me (which also appears to be beyond people&#8217;s capabilities).</p>
<p>Anyway, the minor extra effort it takes to produce better log output, in my experience, is well worth it. Especially, if one has to support many programs in different environments at any time of day.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-806713">
				<div id="div-comment-806713" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">John B</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100127-00/?p=15163#comment-806713">
			January 28, 2010 at 1:49 pm</a>		</div>

		<p>/*</p>
<p>tip: &nbsp;you can translate error message on the command line with net helpmsg, e.g.</p>
<p>C:&gt;net helpmsg 2</p>
<p>The system cannot find the file specified.</p>
<p>*/</p>
<p>That gives me an error (The system cannot find the file specified.) :D</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-806853">
				<div id="div-comment-806853" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Goran</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100127-00/?p=15163#comment-806853">
			January 29, 2010 at 2:34 am</a>		</div>

		<p>@Alexander Grigoriev:</p>
<p>Ah, yes. My bad.</p>
<p>@Ooh:</p>
<p>CString is indeed designed to support a LPCTSTR scenario, e.g.</p>
<p>void f(LPCTSTR);</p>
<p>CString s;</p>
<p>f(s); // CString::operator LPCTSTR() const invoked here.</p>
<p>But! In fprintf(&quot;%s&quot;, s), compiler has <strong>no idea</strong> that it should call said operator.</p>
<p>The thing works by accident. And Raymond&#8217;s complaints on this code are all quite valid &#8211; to an unsuspecting eye, that just shouldn&#8217;t work the way it&#8217;s written.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-806963">
				<div id="div-comment-806963" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">njkayaker</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100127-00/?p=15163#comment-806963">
			January 29, 2010 at 10:07 am</a>		</div>

		<p>@Goran &nbsp;&quot;But! In fprintf(&quot;%s&quot;, s), compiler has <strong>no idea</strong> that it should call said operator&quot;</p>
<p>Functions like fprintf have that sorts of problems with many other types of arguments.</p>
<p>If you really wanted to make fprintf &quot;robust&quot;, you&#8217;d cast the arguments to the types indicated in the string. That way, code changes would not break it.</p>
<p>fprint(stdout, &quot;%d %ld %f&quot;, (int)a, (long)b, (double)c);</p>
<p>(Newer compilers are smart enough to do some checking of the argument types against the format string, but these only work for known/standard functons.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-807223">
				<div id="div-comment-807223" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Jonathan</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100127-00/?p=15163#comment-807223">
			February 1, 2010 at 2:28 am</a>		</div>

		<p>Pros of numeric error codes:</p>
<ol>
<li>Less code to produce them</li>
<li>
<p>Less likely to be misreported by users</p>
</li>
<li>
<p>For user-facing error messages, survive translation. For example, a screenshot of a messagebox with &quot;המערכת לא מצאה את הקובץ&quot; is quite hard to understand (unless you speak the target language). And you can&#8217;t put it into machine translation, since it&#8217;s a screenshot, and you don&#8217;t know how to type the weird letters.</p>
</li>
<li>
<p>Easier to document in troubleshooting guides (if you get error 619, do X).</p>
</li>
<li>
<p>Easier to google for.</p>
</li>
</ol>
<p>That said, IMO the best would be to provide both. A sufficiently-nice logging system would do that for you. For example, if you use wpp trace (google it), you get to write:</p>
<ul>
<li>TrTRACE(&quot;X failed, error code=%!winerr!&quot;, GetLastError());</li>
</ul>
<p>Which, after formatting, would produce:</p>
<ul>
<li>X failed, error code=2(ERROR_FILE_NOT_FOUND)</li>
</ul>
<p>It also does IP addresses, GUIDs, and other stuff.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-807253">
				<div id="div-comment-807253" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Goran</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100127-00/?p=15163#comment-807253">
			February 1, 2010 at 4:40 am</a>		</div>

		<p>@njkayaker (Functions like fprintf have that sorts of problems with many other types of arguments&#8230; If you really wanted to make fprintf &quot;robust&quot;, you&#8217;d cast&#8230;)</p>
<p>Hmmm&#8230; &quot;Improving&quot; [X]printf was not my goal. It&#8217;s what it is. I was merely commenting about it&#8217;s proper use with %s and CString in particular, where one should use an explicit cast.</p>
<p>There is no reason to e.g. cast an int in when used with %d. As A. Grigoriev said, compiler does a &quot;blind copy&quot; of an int there and that&#8217;s it. Incessant casting is not how [X]printf was meant to be used. One should just match format string and argument types, and for the most part that does match and casting is superfluous.</p>
<p>But with CString the problem is more insidious: it all works, but programmer thinks he is passing a LPCTSTR (he doesn&#8217;t, he&#8217;s effectively doing a</p>
<p>memcpy(</p>
<p>&nbsp;STACK,</p>
<p>&nbsp;&amp;[CSTRING INSTANCE],</p>
<p>&nbsp;sizeof(CSTRING INSTANCE))</p>
<p>and [X]prinf thinks it receives a LPCTSTR (it clearly doesn&#8217;t). So all that&#8217;s needed to bring the world to a halt ;-) is for CString implementation to change so that blind-copying CString to stack does not put a LPCTSTR (and nothing else) there.</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>