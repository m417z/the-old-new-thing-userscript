<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (25)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment byuser comment-author-anonymouscommenter even thread-even depth-1" id="comment-1234185">
				<div id="div-comment-1234185" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">anonymouscommenter</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150512-00/?p=44884#comment-1234185">
			May 12, 2015 at 8:24 am</a>		</div>

		<p>Is this still true? &nbsp;It seems the &quot;Up Time&quot; being reported on my Windows 7 machine right now is indeed up time (about 11 hours) and not time since last boot (about 24 hours ago).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1234175">
				<div id="div-comment-1234175" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">NotThisMind</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150512-00/?p=44884#comment-1234175">
			May 12, 2015 at 8:47 am</a>		</div>

		<p>@Adrian i don&#39;t think so, my boot time is also 16h30 which isn&#39;t the last time i turned it on&#8230; Windows 7 too.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-anonymouscommenter even thread-even depth-1" id="comment-1234165">
				<div id="div-comment-1234165" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">anonymouscommenter</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150512-00/?p=44884#comment-1234165">
			May 12, 2015 at 9:10 am</a>		</div>

		<p>Mine is 19 hours and change, which is definitely not the time since I arrived at work this morning, when I last woke it up from hibernation. On the other hand, I did boot it yesterday morning due to Windows Update, so it all fits. See the description here:</p>
<p><a rel="nofollow" target="_new" href="http://windows.microsoft.com/en-us/windows/see-details-computers-performance-task-manager#1TC=windows-7">windows.microsoft.com/&#8230;/see-details-computers-performance-task-manager</a></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-wndsks odd alt thread-odd thread-alt depth-1" id="comment-1234155">
				<div id="div-comment-1234155" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/skSdnW' rel='external nofollow' class='url'>skSdnW</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150512-00/?p=44884#comment-1234155">
			May 12, 2015 at 9:18 am</a>		</div>

		<p>And I assume it uses undocumented functions to get the boot time? WMI has LastBootUptime but WMI is not always available. OpenProcess() does not work on the low-level system processes but the right Nt*() function will tell you. </p>
<p>Too bad Taskmanager is not a SDK sample app, it would have forced MS to play by the rules and the documented set of process functions would have been a lot better. On NT4 without psapi you are stuck with only the things (EnumProcesses pid list) OpenProcess has access to.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-anonymouscommenter even thread-even depth-1" id="comment-1234145">
				<div id="div-comment-1234145" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">anonymouscommenter</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150512-00/?p=44884#comment-1234145">
			May 12, 2015 at 9:58 am</a>		</div>

		<p>@skSdnW:</p>
<p>As if Microsoft needs another set of compatibility constraints and another fresh set of failure modes for system and apps. (And no good reason provided)</p>
<p>As for NT4, who cares. it&#39;s old system superseded by number of releases.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-wndsks odd alt thread-odd thread-alt depth-1" id="comment-1234135">
				<div id="div-comment-1234135" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/skSdnW' rel='external nofollow' class='url'>skSdnW</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150512-00/?p=44884#comment-1234135">
			May 12, 2015 at 10:06 am</a>		</div>

		<p>Klimax: If the NT4 taskmanager had been limited to documented APIs then the Windows team would have been forced to provide a better set of functions and that would have benefited all of us. NT4 might be dead but the usage of private APIs is not and continues to give MS an advantage over the competition&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-anonymouscommenter even thread-even depth-1" id="comment-1234125">
				<div id="div-comment-1234125" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">anonymouscommenter</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150512-00/?p=44884#comment-1234125">
			May 12, 2015 at 10:28 am</a>		</div>

		<p>OpenProcess() used to work on System process back then. And even if it didn&#39;t they had another choice. smss.exe started a second or two later and using its time would be good enough.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-bboorman odd alt thread-odd thread-alt depth-1" id="comment-1234115">
				<div id="div-comment-1234115" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Brian_EE' rel='external nofollow' class='url'>Brian_EE</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150512-00/?p=44884#comment-1234115">
			May 12, 2015 at 10:31 am</a>		</div>

		<p>@skSdnW: Advantage over what competition? Is there a big market space for Windows Task Manager replacements? I consider Task Manager a part of the core operating system, and I would argue that core operating system components are allowed to use private APIs. It&#39;s not like we&#39;re talking about Office, etc. here.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-anonymouscommenter even thread-even depth-1" id="comment-1234105">
				<div id="div-comment-1234105" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">anonymouscommenter</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150512-00/?p=44884#comment-1234105">
			May 12, 2015 at 10:53 am</a>		</div>

		<p>What&#39;s all this nonsense about undocumented APIs in NT4? NT4&#39;s Task Manager didn&#39;t even show Up Time (and neither did Win2k or XP). But that&#39;s not because the information wasn&#39;t available &#8212; you have always been able to get Up Time from Perfmon (which in turn uses data available from documented performance counters).</p>
<p>Does Task Manager use documented APIs to get System Up Time? I don&#39;t know. But I do know that the information is available using documented means.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-wndsks odd alt thread-odd thread-alt depth-1" id="comment-1234095">
				<div id="div-comment-1234095" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/skSdnW' rel='external nofollow' class='url'>skSdnW</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150512-00/?p=44884#comment-1234095">
			May 12, 2015 at 11:24 am</a>		</div>

		<p>I don&#39;t know if the system uptime you get from the perf counters includes sleep/hibernation but I do know that the perf counters do not provide the process start time which means that you have to fall back to undocumented stuff for System and smss.exe etc&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-anonymouscommenter even thread-even depth-1" id="comment-1234085">
				<div id="div-comment-1234085" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">anonymouscommenter</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150512-00/?p=44884#comment-1234085">
			May 12, 2015 at 11:53 am</a>		</div>

		<p>Here&#39;s how Task Manager does it:</p>
<p><a rel="nofollow" target="_new" href="http://stackoverflow.com/a/26074521/2604492">stackoverflow.com/&#8230;/2604492</a></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-anonymouscommenter odd alt thread-odd thread-alt depth-1" id="comment-1234075">
				<div id="div-comment-1234075" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">anonymouscommenter</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150512-00/?p=44884#comment-1234075">
			May 12, 2015 at 11:55 am</a>		</div>

		<p>@Brian_EE: Well, there are Task Manager replacements, Process Explorer being the most notable one. Process Explorer and the other one I&#39;m aware of both end up using undocumented APIs because some critical information isn&#39;t available through documented APIs. And aside from task manager replacements, any product that presents some of the process performance information about itself in a &quot;uniform&quot; way as other data would benefit (I don&#39;t know if SQL Server actually does something like this, but a small part of the product I work on does this, and there are some Task Manager and Resource Monitor items that would be useful to make available and also to make available in less &quot;laymen-think-it-is-costly-so-I-have-to-waste-time-explaining-&#39;no-it-is-actually-fine&#39;&quot; way).</p>
<p>@skSdnW: PdhGetRawCounterValue with \SystemSystem Up Time returns a value that looks an awful like a FILETIME in the FirstValue field, so the formatted value probably includes sleep / hibernation.</p>
<p>But on the actual topic, I&#39;m confused by this post and the docs for GetTickCount64 and QueryUnbiasedInterruptTime. GetTickCount64 has this in its remarks: &quot;To obtain the time the system has spent in the working state since it was started, use the QueryUnbiasedInterruptTime function.&quot; And QueryUnbiasedInterruptTime has this in the function description: &quot;The unbiased interrupt-time count does not include time the system spends in sleep or hibernation.&quot; So it seems like GetTickCount &quot;still advances&quot; the time when the computer is in sleep mode, but QueryUnbiasedInterruptTime behaves as you&#39;ve described GetTickCount. A short test program running on Windows 7 that outputs the values returned by QUIT and GTC every second shows them roughly in sync with each other until I put the computer to sleep for a short amount of time, after which GTC jumped by ~40 seconds but QUIT advanced only by ~1. Am I misreading both the documentation for those functions and their output? Or has the behavior of GetTickCount changed between versions? I can completely see that I would be reading what I want to read in the docs, but misreading the values returned seems a bit less likely, but still possible, obviously.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-anonymouscommenter even thread-even depth-1" id="comment-1234065">
				<div id="div-comment-1234065" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">anonymouscommenter</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150512-00/?p=44884#comment-1234065">
			May 12, 2015 at 11:56 am</a>		</div>

		<p>Also:</p>
<p>&quot;The elapsed time retrieved by GetTickCount or GetTickCount64 includes time the system spends in sleep or hibernation.&quot;</p>
<p>Source: <a href="https://msdn.microsoft.com/en-us/library/windows/desktop/ms725496.aspx" rel="nofollow" target="_new">msdn.microsoft.com/&#8230;/ms725496.aspx</a></p>
<div class="post">[<em>Yup, it looks like I got things wrong. -Raymond</em><em>]</em></div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-anonymouscommenter odd alt thread-odd thread-alt depth-1" id="comment-1234055">
				<div id="div-comment-1234055" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">anonymouscommenter</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150512-00/?p=44884#comment-1234055">
			May 12, 2015 at 6:31 pm</a>		</div>

		<p>@skSdnW</p>
<p>&quot;&#8230;it would have forced MS to play by the rules&#8230;&quot;</p>
<p>What rules? &nbsp;Who are they from? &nbsp;Is this something mandated by the federal government? &nbsp;Or, was this an accord reached by the top tech companies as a global pact (let&#39;s call it the Silicon Valley Conventions of 1949)?</p>
<p>&quot;&#8230;the usage of private APIs is not and continues to give MS an advantage over the competition&#8230;&quot;</p>
<p>Have you seen Google Chrome (especially when it first came out)? &nbsp;I&#39;d argue the guys at Google know something about Win32 programming a better deal than some of the programmers as Microsoft. &nbsp;And I know that has a kernel of truth because Raymond&#39;s past posts are full of examples of Microsoft employees getting it wrong (recall that his blog was first a crib sheet for the company before becoming a crib sheet for all of us). &nbsp;I can think of some other examples of third party programs that are quite impressive native desktop apps. &nbsp;I wonder how they do it, you know, being at a disadvantage and all?</p>
<p>skSdnW, you have been a posting on this blog for quite some time. &nbsp;I have a hard time believing that you can be a long time reader and not have any of this material sink in and change your mind that things are not so black/white good/evil over at Microsoft. &nbsp;Bravo to you sir, you are definitely fighting the good fight of the pure GNU/Linux code base against the sullied code bases of all capitalist pig companies. &nbsp;Keep it up!</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-anonymouscommenter even thread-even depth-1" id="comment-1234045">
				<div id="div-comment-1234045" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">anonymouscommenter</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150512-00/?p=44884#comment-1234045">
			May 12, 2015 at 8:03 pm</a>		</div>

		<p>64-bit tick counts have been supported since XP 64 / Windows 2003. &nbsp;GetTickCount64 was added in Vista. &nbsp;On XP 64 / 2003, you can reinterpret_cast&lt;decltype(&amp;GetTickCount64)&gt;(&amp;GetTickCount). &nbsp;This works because EDX happens to have the high bits of the result. &nbsp;(In 64-bit builds, RAX happens to hold the full 64-bit result, so this still works.)</p>
<div class="post">[<em>I can&#39;t believe you&#39;re recommending that people rely on the value of an unused register. -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-anonymouscommenter odd alt thread-odd thread-alt depth-1" id="comment-1234035">
				<div id="div-comment-1234035" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">anonymouscommenter</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150512-00/?p=44884#comment-1234035">
			May 13, 2015 at 1:05 am</a>		</div>

		<p>@Eddie Your incredibly patronizing rant would be rather embarrassing if it turned out that chrome used undocumented APIs because those were the only way to implement some feature, right?</p>
<p>There you go: <a rel="nofollow" target="_new" href="http://arstechnica.com/security/2008/09/chrome-antics-did-google-reverse-engineer/1/">arstechnica.com/&#8230;/1</a> Even nicely documented by them.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-anonymouscommenter even thread-even depth-1" id="comment-1234025">
				<div id="div-comment-1234025" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">anonymouscommenter</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150512-00/?p=44884#comment-1234025">
			May 13, 2015 at 1:19 am</a>		</div>

		<p>@skSdnW: What is the problem with smss.exe?</p>
<p>I can query WMI with &quot;select * from Win32_Process where Name = &#39;smss.exe&#39;&quot;</p>
<p>and read CreationDate</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-cheong odd alt thread-odd thread-alt depth-1" id="comment-1234015">
				<div id="div-comment-1234015" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/cheong00' rel='external nofollow' class='url'>cheong00</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150512-00/?p=44884#comment-1234015">
			May 13, 2015 at 1:53 am</a>		</div>

		<p>@Eddie: They do have their share of issues. For example, I&#39;m still waiting for them to release a version of Chrome that is not battery hungry when idle.</p>
<p>And I think the PEP team of jQuery would be grateful if Google will implement the Pointer Events W3C recommendation instead of extending something different fundamentally instead of properly implement it.</p>
<p><a rel="nofollow" target="_new" href="http://blog.jquery.com/2015/02/24/getting-on-point/">blog.jquery.com/&#8230;/getting-on-point</a></p>
<p>If you also count Android in, the list suddenly grows much much longer&#8230; and with WTFs. For example, when I was recently assigned to develop Android Apps, I come across this old bug ( <a rel="nofollow" target="_new" href="http://code.google.com/p/android/issues/detail?id=38282">code.google.com/&#8230;/detail</a> ) that just marked as obsolete after 3 years after Android 5.0 released. To be fair Microsoft also does this on MS Connect, but this is just problematic.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-anonymouscommenter even thread-even depth-1" id="comment-1234005">
				<div id="div-comment-1234005" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">anonymouscommenter</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150512-00/?p=44884#comment-1234005">
			May 13, 2015 at 6:34 am</a>		</div>

		<p>Why is everyone replying to someone whose name is &#39;Windows Sucks&#39; abbreviated and reversed? Don&#39;t feed the trolls.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-anonymouscommenter odd alt thread-odd thread-alt depth-1" id="comment-1233995">
				<div id="div-comment-1233995" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">anonymouscommenter</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150512-00/?p=44884#comment-1233995">
			May 13, 2015 at 6:38 am</a>		</div>

		<p>&gt; you are definitely fighting the good fight of the pure GNU/Linux code base against the sullied code bases of all capitalist pig companies. &nbsp;Keep it up!</p>
<p>Thanks for the demo of begging the question. I&#39;ve been guilty of that heaps too.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1221571">
				<div id="div-comment-1221571" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Myria</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150512-00/?p=44884#comment-1221571">
			May 13, 2015 at 11:45 am</a>		</div>

		<p>Raymond &gt; [I can&#39;t believe you&#39;re recommending that people rely on the value of an unused register. -Raymond]</p>
<p>I&#39;m sorry; after rereading the disassembly, I know now that I mischaracterized what&#39;s happening. &nbsp;It&#39;s more accurate to say that the assembly code was written to support 64-bit tick counts, but no GetTickCount64 was exported. &nbsp;GetTickCount jumps to this internal 64-bit tick count routine on NT 5.2. &nbsp;EDX is set without anything actually using it, meaning that EDX is intended to be part of the return value of that internal routine.</p>
<p>Also, the only time I advocate such hacks is with *specific past* versions of Windows, when future compatibility is not at risk. &nbsp;If GetTickCount64 exists, obviously, use it. =)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-anonymouscommenter odd alt thread-odd thread-alt depth-1" id="comment-1233985">
				<div id="div-comment-1233985" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">anonymouscommenter</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150512-00/?p=44884#comment-1233985">
			May 13, 2015 at 1:24 pm</a>		</div>

		<p>Well then, looks like Myria is recommending normally atrocious behavior exactly where it won&#39;t make a difference. Windows 2003 is about to be done being patched.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-xpclientgmail-com even thread-even depth-1" id="comment-1233975">
				<div id="div-comment-1233975" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/xpclient' rel='external nofollow' class='url'>xpclient</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150512-00/?p=44884#comment-1233975">
			May 14, 2015 at 1:33 am</a>		</div>

		<p>Windows 7/Vista&#39;s Task Manager does give uptime &#8211; total time that elapsed while the computer is on minus time in hibernation/sleep. That is consistent with uptime.exe from Windows 2000 Resource Kit. Is there a built-in tool in Windows to calculate time since last reboot? net.exe statistics server gives the time when the OS last booted (Statistics since&#8230;.)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-anonymouscommenter odd alt thread-odd thread-alt depth-1" id="comment-1233965">
				<div id="div-comment-1233965" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">anonymouscommenter</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150512-00/?p=44884#comment-1233965">
			May 14, 2015 at 1:13 pm</a>		</div>

		<p>skDdnW wrote &quot;I do know that the perf counters do not provide the process start time&quot;.</p>
<p>They do. &nbsp;Have another look. &nbsp;Maybe squint a little.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-anonymouscommenter even thread-even depth-1" id="comment-1233955">
				<div id="div-comment-1233955" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">anonymouscommenter</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150512-00/?p=44884#comment-1233955">
			May 14, 2015 at 1:45 pm</a>		</div>

		<p>@voo:</p>
<p>I didn&#39;t mean to say that Google Chrome did not use undocumented APIs. &nbsp;I&#39;m simply addressing the notion that Microsoft has an unfair advantage over the rest of the world that is writing Windows applications. &nbsp;It is reasonable to expect that the NT kernel team can write better systems apps since who better knows the kernel. &nbsp;Likewise, it is reasonable to expect that the shell team can write desktop apps with top notch UI features since who better knows the shell API than the people who write it. &nbsp;However, other teams at Microsoft are clients of the Windows API at the same level as the rest of us. &nbsp;I don&#39;t buy into the idea that there is a company wide conspiracy.</p>
<p>@Everybody else:</p>
<p>Sorry for that post as it was rude and patronizing. &nbsp;It&#39;s one thing for new comers to find this site and post the usual &quot;MS sucks because of XYZ.&quot; &nbsp;That&#39;s just a fact of life. &nbsp;But for a regular to keep up the tired old themes is just astonishing (and tiring).</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>