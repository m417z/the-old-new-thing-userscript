<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (20)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-1093433">
				<div id="div-comment-1093433" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Nicholas</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20131206-00/?p=2443#comment-1093433">
			December 6, 2013 at 12:50 pm</a>		</div>

		<p>I&#39;ve always found shell extensions to be very interesting from a cost/benefit point of view. &nbsp;The best of them are extremely powerful tools that do some wonderful things, but even the average ones tend to cause very noticeable problems, and the good/bad distribution is far from normal. &nbsp;I imagine there have been some interesting internal discussions about the future of them.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-fleet-command odd alt thread-odd thread-alt depth-1" id="comment-1093443">
				<div id="div-comment-1093443" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Fleet+Command' rel='external nofollow' class='url'>Fleet Command</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20131206-00/?p=2443#comment-1093443">
			December 6, 2013 at 3:33 pm</a>		</div>

		<p>My answer without reading the post: Hell, yes, it is wrong!</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1093413">
				<div id="div-comment-1093413" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Antonio &#039;Grijan&#039;</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20131206-00/?p=2443#comment-1093413">
			December 6, 2013 at 7:49 am</a>		</div>

		<p>Apart from the first three reasons (#1 and #2 should be immediately obvious to anyone writing a service!), the fourth one is worrisome. When I used Windows XP, I had many of problems with Explorer (hangs, protection errors, etc.), and I could trace every single of them to a buggy shell extension. It looks like Windows 7 64-bit has a lot less trouble, maybe because most software publishers don&#39;t provide 64-bit versions of their shell extensions. I think shell extensions should always be an opt-in feature in installers (as browser toolbars are, at least some times *cough*), but I&#39;m getting out of topic :-) .</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1093453">
				<div id="div-comment-1093453" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Gabe</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20131206-00/?p=2443#comment-1093453">
			December 6, 2013 at 11:06 pm</a>		</div>

		<p>Does this mean it&#39;s also inadvisable to use the IFileOperation interface from a service? I suspect that since it&#39;s more powerful than SHFileOperation, then it must be even more inadvisable.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1093463">
				<div id="div-comment-1093463" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Klimax</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20131206-00/?p=2443#comment-1093463">
			December 7, 2013 at 1:04 am</a>		</div>

		<p>@Gabe</p>
<p><a rel="nofollow" target="_new" href="http://msdn.microsoft.com/en-us/library/windows/desktop/bb775771(v=vs.85).aspx">msdn.microsoft.com/&#8230;/bb775771(v=vs.85).aspx</a></p>
<p>It&#39;s in Shell interfaces, and provides dialogs. Also replaces SHFileOperation.</p>
<p>Answer I think is quite obvious&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1093473">
				<div id="div-comment-1093473" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">640k</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20131206-00/?p=2443#comment-1093473">
			December 7, 2013 at 8:28 am</a>		</div>

		<p>Windows should provide pit-of-success. In this case, don&#39;t allow a non-interactive service to call a interactive shell function, it should throw an exception. Don&#39;t document &quot;it&#39;s inadvisable&quot; in some non-official documentation. It should be strictly forbidden and technically impossible.</p>
<div class="post">[<em>How hard should an API check that it is not being used incorrectly? Does every function begin with &quot;if (is_running_in_service() || is_called_from_dllmain() || is_impersonating() || &#8230;)&quot;? Soon, you&#39;ll find that 10% of your CPU time is spent just checking the prerequisites and not doing actual work. -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1093503">
				<div id="div-comment-1093503" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Western Infidels</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20131206-00/?p=2443#comment-1093503">
			December 8, 2013 at 8:42 am</a>		</div>

		<p>I&#39;m working on Windows Service project where this information is relevant, but it&#39;s news to me. That&#39;s really bad.</p>
<p>Is there some part of the API documentation I&#39;m missing? The page for SHFileOperation(), for example, says &quot;[desktop apps only]&quot; but has no further explanation and no link to an explanation. It&#39;s not even clear what &quot;desktop&quot; means in this context; I mean, my service isn&#39;t specifically targeting the Server versions of Windows.</p>
<p>Why didn&#39;t I understand this already? What other calls in my service are fraught with complex side effects that are difficult to glean from the docs?</p>
<p>Whatever the answer, I&#39;m glad my RSS has The Old New Thing in it.</p>
<div class="post">[<em>In MSDN, &quot;desktop app&quot; means &quot;not a Windows Store app&quot;. You should assume nothing works in a service unless it is documented to work in a service. (I know this doesn&#39;t pan out in practice because HeapAlloc works in a service but there is no mention of service-friendliness.) One access to HKEY_CURRENT_USER and everything explodes. -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1093513">
				<div id="div-comment-1093513" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Harry Johnston</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20131206-00/?p=2443#comment-1093513">
			December 8, 2013 at 1:41 pm</a>		</div>

		<p>Probably the best rule of thumb is to check which DLL the function is contained in. &nbsp;MSDN almost always documents this, under the heading &quot;Requirements&quot;, usually towards the end of the article.</p>
<p>Off the top of my head:</p>
<p>If it&#39;s in kernel32.dll or advapi32.dll, it should be safe in pretty much any context unless otherwise documented.</p>
<p>Functions in user32.dll are probably safe in a service if used appropriately but should be treated with some caution.</p>
<p>Functions in shell32.dll, gdi32.dll, etc., should probably be avoided.</p>
<p>Anybody got a more complete list?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1093523">
				<div id="div-comment-1093523" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joker_vD</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20131206-00/?p=2443#comment-1093523">
			December 9, 2013 at 2:14 am</a>		</div>

		<p>&quot;One access to HKEY_CURRENT_USER and everything explodes.&quot;</p>
<p>So LOCAL SERVICE/NETWORK SERVICE/LOCAL SYSTEM are fake users, and HKEY_CURRENT_USER keys are not set up for them? Ugh, that&#39;s bad. </p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1093533">
				<div id="div-comment-1093533" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Anon</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20131206-00/?p=2443#comment-1093533">
			December 9, 2013 at 3:41 am</a>		</div>

		<p>@Joker_vD</p>
<p>Why is that bad? They aren&#39;t for User applications, they&#39;re for Services. Services shouldn&#39;t be accessing HKCU.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1093543">
				<div id="div-comment-1093543" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Karellen</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20131206-00/?p=2443#comment-1093543">
			December 9, 2013 at 6:14 am</a>		</div>

		<p>@Anon &#8211; So, services shouldn&#39;t access HKCU because they run as $SPECIAL_USER$, but $SPECIAL_USER$ doesn&#39;t have HKCU set up because they&#39;re &quot;only&quot; for running services? Isn&#39;t that reasoning somewhat circular?</p>
<p>All processes run in the context of a user account. Some user accounts are meant for people to log in with, and some aren&#39;t &#8211; so far, so normal. But if simply trying to access a user-specific piece of data for some types of user suddenly means that &quot;everything explodes&quot;, well, I&#39;m still left scratching my head and asking &quot;Why would it explode?&quot;. (I&#39;m also wondering what the definition of &quot;everything explodes&quot; is. System bluescreen? All system services crash? Single service crash? Single service restart? Or is RegOpenKeyEx(HKCU) returning a non-zero error code now classified as an &quot;everything has exploded&quot; scenario?)</p>
<p>What about services that run as a &quot;real&quot; user, for which HKCU should exist?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1093553">
				<div id="div-comment-1093553" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Anon</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20131206-00/?p=2443#comment-1093553">
			December 9, 2013 at 6:49 am</a>		</div>

		<p>@Karellen</p>
<p>I&#39;m not sure what&#39;s circular&#8230; Services should run as special accounts. Special accounts don&#39;t have HKCU. Therefore, Services don&#39;t have HKCU.</p>
<p>Services should never assume a &quot;real&quot; user. Why would they? What possible good purpose could that have? Services aren&#39;t supposed to be interactive. If you want an interactive service, you run something at login.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1093573">
				<div id="div-comment-1093573" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20131206-00/?p=2443#comment-1093573">
			December 9, 2013 at 7:11 am</a>		</div>

		<p>HKEY_CURRENT_USER works just fine in a service. Sure it fails when impersonating, but I can count on zero hands the number of times I&#39;ve used impersonation for production services.</p>
<div class="post">[<em>The problem is that not only does it not work when impersonating, using it while impersonating <span style="text-decoration:underline;">screws up future use of HKCU even after you stop impersonating</span>. -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1093603">
				<div id="div-comment-1093603" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Karellen</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20131206-00/?p=2443#comment-1093603">
			December 9, 2013 at 7:49 am</a>		</div>

		<p>@Anon &quot;Services should never assume a &quot;real&quot; user. Why would they?&quot;</p>
<p>Off the top of my head, how about a per-user cron job? User &quot;Alice&quot; wants to download the contents of a URL every hour, whether she&#39;s logged in or not. You just want a small service to grab the contents of a URL and write it to a file, whose filename contains a timestamp. In order that the service can write the file into Alice&#39;s profile folder, but not accidentally (or maliciously) write to Bob&#39;s profile folder, the service should run as user Alice.</p>
<p>How about a DVCS server? Carol wants to run one to share her public repositories to her co-workers, and wants to allow people to submit patches &#8211; which get saved into the object store in the DVCS, which simply works on flat files in the filesystem, in her user profile. Although it might require the Admin to set up the service, the configuration of which repos to share and where they are, should be up to Alice. However, she shouldn&#39;t be able to misconfigure it to write stuff to Dave&#39;s profile, so it ought to run as her. As a non-interactive service. When she&#39;s logged out.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1093633">
				<div id="div-comment-1093633" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Nick</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20131206-00/?p=2443#comment-1093633">
			December 9, 2013 at 8:11 am</a>		</div>

		<p>@Karellen: There&#39;s a tool for your per-user cron jobs, it&#39;s called the &quot;Task Scheduler.&quot;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1093673">
				<div id="div-comment-1093673" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Hm</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20131206-00/?p=2443#comment-1093673">
			December 9, 2013 at 9:10 am</a>		</div>

		<p>@Nick: What do you think how Task Scheduler is implemented? How does it map the correct registry part to the HKCU alias? Just magic?</p>
<p>@Raymond, in your linked article:</p>
<p>&quot;but if your COM server then calls a helper object which calls SHGetKnownFolderPath and passes NULL for the impersonation token&quot; Why is there a token needed? The thread is impersonated, so SHGetKnownFolderPath() should work correctly by default, assuming the impersonated user account of its calling thread when called without an explicit token.</p>
<p>&quot;The registry keys HKEY_CURRENT_USER and HKEY_CLASSES_ROOT don&#39;t work when you&#39;re impersonating. (You have to use RegOpenCurrentUser or RegOpenUserClassesRoot.)&quot; Why is the Registry API not doing providing HKCU and HKCR as virtual aliases, based on the user the calling thread is impersonating?</p>
<p>&quot;The problem is all the code that&#39;s not part of the system which assumes identity does not change (because it rarely does).&quot; I consider the Shell API part of the system because it is designed by the Windows team, shipped with Windows, documented as Windows API. Why do you (or the Shell team) deny the task to make SHGetKnownFolderPath() just work according to the impersonation of the callig thread?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1093713">
				<div id="div-comment-1093713" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Rick C</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20131206-00/?p=2443#comment-1093713">
			December 9, 2013 at 11:28 am</a>		</div>

		<p>@hm, Task Scheduler probably maps the registry by virtue of you putting in credentials when you create the task. &nbsp;All it&#39;s got to do is run the task as you instead of impersonating.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1093753">
				<div id="div-comment-1093753" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Karellen</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20131206-00/?p=2443#comment-1093753">
			December 9, 2013 at 3:56 pm</a>		</div>

		<p>@Anon &quot;Services should run as special accounts. Special accounts don&#39;t have HKCU. Therefore, Services don&#39;t have HKCU&quot;</p>
<p>OK then, the question is &#8211; why don&#39;t special accounts have HKCU? Given that making exceptions and special cases generally adds complexity to a system (which generally is not helpful), and that this special case can cause an &quot;everything explodes&quot; scenario (which is actively bad), what is the upside in not providing an HKCU to these special accounts, while other accounts do get HKCU?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1093763">
				<div id="div-comment-1093763" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">ErikF</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20131206-00/?p=2443#comment-1093763">
			December 9, 2013 at 4:08 pm</a>		</div>

		<p>@Hm: Not all APIs are designed to work for all parts of the system (for example, DirectX is part of the system and designed by the Windows team, but it certainly was not tested with services in mind.) I treat services in the same category as POSIX subsystem programs: yes, they run in Windows, but they don&#39;t run as standard Win32 user applications.</p>
<p>@Karellen: I&#39;m guessing here, but some of the services load pretty early and might not even have a full registry available yet (i.e. SAM), so having HKCU for them seems pointless for the number of times that it would be required; as documented, services should be using HKLM. Anyways, the builtins have big issues when you&#39;re trying to determine which service managed to pooch the system; the less things that share the accounts, the better!</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1093793">
				<div id="div-comment-1093793" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joker_vD</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20131206-00/?p=2443#comment-1093793">
			December 9, 2013 at 10:24 pm</a>		</div>

		<p>Aaaaaand it turns out that special accounts *do* have HKCU! Look:</p>
<p><a rel="nofollow" target="_new" href="http://msdn.microsoft.com/en-us/library/ms684188%28v=vs.85%29.aspx" rel="nofollow">msdn.microsoft.com/&#8230;/ms684188%28v=vs.85%29.aspx</a> (LocalService) — &quot;The LocalService account has its own subkey under the HKEY_USERS registry key. Therefore, the HKEY_CURRENT_USER registry key is associated with the LocalService account.&quot;</p>
<p><a rel="nofollow" target="_new" href="http://msdn.microsoft.com/en-us/library/ms684190%28v=vs.85%29.aspx" rel="nofollow">msdn.microsoft.com/&#8230;/ms684190%28v=vs.85%29.aspx</a> (LocalSystem) — &quot;The registry key HKEY_CURRENT_USER is associated with the default user, not the current user. To access another user&#39;s profile, impersonate the user, then access HKEY_CURRENT_USER.&quot;</p>
<p><a rel="nofollow" target="_new" href="http://msdn.microsoft.com/en-us/library/ms684272%28v=vs.85%29.aspx" rel="nofollow">msdn.microsoft.com/&#8230;/ms684272%28v=vs.85%29.aspx</a> (NetworkService) — &quot;The NetworkService account has its own subkey under the HKEY_USERS registry key. Therefore, the HKEY_CURRENT_USER registry key is associated with the NetworkService account.&quot;</p>
<p>And wait, didn&#39;t the second link just said &quot;Using HKCU while impersonating is OK&quot;?</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>