<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (6)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-147033">
				<div id="div-comment-147033" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">floyd</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20030915-00/?p=42493#comment-147033">
			February 23, 2004 at 6:32 am</a>		</div>

		<p>Hi Raymond,</p>
<p>    I know, this comment is somewhat late &#8212; but it wasn&#8217;t until last week that I came across your page.</p>
<p>    Believe it or not (you probably already know&#8230;) but this is in fact the only valuable resource on handling the WM_NCCALCSIZE message &#8212; and I tried hard to find anything, really, anything. From occasional hints I take it you are in fact working at Microsoft. Now, a lot of people would probably go and question my sanity, but I do envy you for &quot;making it&quot;. Anyway, if this is the case, you may be able to help me out with a related problem:</p>
<p>    First off, a short abstract of what I&#8217;m trying to achieve before I delve into where I failed to do so: Currently I&#8217;m writing a small tool that is supposed to have as little impact on the user as possible. I succeeded with that, in my opinion at least, but I couldn&#8217;t get a particular piece of visual feedback to work: Adding and removing a frame dynamically.</p>
<p>    To keep the impact on the user low I decided to make the main window translucent, transparent, topmost, and invisible in the task bar, i.e. WS_EX_LAYERED | WS_EX_TOPMOST | WS_EX_TRANSPARENT | WS_EX_TOOLWINDOW. So far, no big deal, except for receiving mouse messages, which I solved with a global mouse hook. If you have an alternative for the mouse hook I&#8217;m all ears, as the MSDN suggests to use hooks for debugging only.</p>
<p>    Since this part works sufficiently I&#8217;ll leave it at that for the moment. Moreso, since I need to get that frame-thingie to work. At any rate, here is a list of things I&#8217;ve already tried and how they failed:</p>
<p>    * SetWindowLong( hWnd, GWL_STYLE, dwNewStyle ); That&#8217;s the only part I know I need, and it&#8217;s almost working, too, except that the frame gets placed *inside* the window, not around it. I&#8217;m also flushing the style change by calling SetWindowPos with the respective flags.</p>
<p>    * so I thought to myself: well, easy, I&#8217;ll just have AdjustWindowRect and move/size the window in the call to SetWindowPos. The problem here is, that the window gets properly resized, but just won&#8217;t move. At least not on the screen, since GetClientRect/ClientToScreen returns the &#8216;correct&#8217; position, i.e. the position and size I had attempted to move it to.</p>
<p>    * the next 2 incarnations are probably the way to go. Well, almost at least. The first one being: SetWindowLong( &#8230; ); SetWindowPos( &#8230;, SWP_NOMOVE | SWP_NOSIZE | SWP_NOZORDER | SWP_FRAMECHANGED ); SetWindowPost( hWnd, &lt;adjusted rect coordinates&gt;, &#8230; ); The other implementation just altered the order, i.e. the window first gets repositioned and the frame added after that.</p>
<p>    Those last 2 implementations pretty much work, but they expose ugly visual artifacts. In particular, the client area pops towards the top left and back to where it should be when adding the frame (towards the lower right and back, when removing it). It wasn&#8217;t until then that I realized the WM_NCCALCSIZE message may turn out to relief my pain. Maybe a bit overexcited I went right at it. And was promptly set back by a hard to follow documentation. So I finally came across this blog and it suddenly all made perfect sense to me. At least, that&#8217;s what I thought&#8230;</p>
<p>    My first attempt was to go with a single call to SetWindowPos and account for the extra space needed by altering the contents of rgrc[0] inside my WM_NCCALCSIZE message handler. To my astonishment, the application crashed badly when running a debug build (msvc6.0 sp5). In fact, it wasn&#8217;t only my application crashing, but the entire system. In short, I get a bluescreen. Nothing to get all puffy about, if I was running a Win9x system. However, I&#8217;m working on Win2k and I have been wondering all these years what Win2k users were talking about when referring to a BSOD&#8230; I can reproduce this behaviour in debug builds, no matter if a debugger is running or not. I *think* this doesn&#8217;t happen with Release builds, but I wasn&#8217;t really tempted to give it a thorough analysis.</p>
<p>    Anyway, here comes the question: I know that if I forward the message to DefWindowProc it does in fact alter the contents of rgrc[0]. Is this something that client code isn&#8217;t allowed to do? If this isn&#8217;t the way to go, how would I preserve the client area at it&#8217;s current location while inflating the window to make room for the frame, and if I&#8217;m inflating the window, will there be any WM_PAINT messages send? This piece of information would be vital, since the drawing code relies on the client coordinates. Plus, I&#8217;m having a feeling that I still don&#8217;t fully understand how to work with the rgrc[]&#8217;s to achieve what I want, be it because I can&#8217;t write what I mean or because the system is doing something I didn&#8217;t quite anticipate. I&#8217;d be greatful if you could enlighten me.</p>
<p>    Wow, this turned out to be longer than I had anticipated. I hope you don&#8217;t mind. If nothing else, look at it as some appreciation for your programming blogs, in case you are ever wondering again whether people are interested in it or not.</p>
<p>Regards,<br />
<br />.f</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-147053">
				<div id="div-comment-147053" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://weblogs.asp.net/oldnewthing/' rel='external nofollow' class='url'>Raymond Chen</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20030915-00/?p=42493#comment-147053">
			February 23, 2004 at 7:33 am</a>		</div>

		<p>Don&#8217;t use WS_EX_TRANSPARENT on toplevel windows; it doesn&#8217;t do what you think. I&#8217;ll have to write about that more later.</p>
<p>rcrc[0] is legal to change; that&#8217;s sort of the whole point of the WM_NCCALCSIZE message. though of course the rectangle you return has to fit inside the window rectangle.<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-147083">
				<div id="div-comment-147083" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">floyd</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20030915-00/?p=42493#comment-147083">
			February 23, 2004 at 8:20 am</a>		</div>

		<p>Thanks a lot for responding. I feared that this would happen: You answer my questions and thereby raise new ones&#8230;</p>
<p>First off, I was under the impression that WS_EX_TRANSPARENT would cause a window to be invisible to mouse messages, and my application appears to be working according to this assumption (I don&#8217;t really remember where I got that &#8216;information&#8217; from; the MSDN doesn&#8217;t seem to suggest anything along those lines). If I&#8217;m totally wrong, I can hardly wait for your take on this one.</p>
<p>I figured that changing the rgrc[0] would be a Good Idea &#8482;, but it just doesn&#8217;t seem get me anywhere. I tried doing the same that DefWindowProc does and my trusted machine BSOD&#8217;s on me. I sincerely hope I&#8217;m doing something utterly stupid, rather than having to fear that my system components are teaming up against me&#8230;</p>
<p>With all that said, I&#8217;ll have to take the risk of sounding like a total fool, since your explanations should be sufficient already: The way I understand it, in my example of a simple toplevel window with no controls contained, all coordinates in the rgrc&#8217;s will always be screen-relative coordinates, both on entry as well as on exit.</p>
<p>Damn, I feel stupid already bothering you with this. It&#8217;s frightening to see what a sudden OS shutdown can do to a man&#8230;</p>
<p>.f</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-147093">
				<div id="div-comment-147093" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://weblogs.asp.net/oldnewthing/' rel='external nofollow' class='url'>Raymond Chen</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20030915-00/?p=42493#comment-147093">
			February 23, 2004 at 8:27 am</a>		</div>

		<p>Yes I don&#8217;t see any obvious mistakes in your description. Maybe the world is just out to get you&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-510563">
				<div id="div-comment-510563" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://smallcode.weblogs.us/2007/06/03/corrections-to-raymond-chens-wheel-scrolling-code/' rel='external nofollow' class='url'>smallcode &raquo; Blog Archive &raquo; Corrections to Raymond Chen&#8217;s wheel scrolling code</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20030915-00/?p=42493#comment-510563">
			June 3, 2007 at 12:06 am</a>		</div>

		<p>PingBack from <a rel="nofollow" target="_new" href="http://smallcode.weblogs.us/2007/06/03/corrections-to-raymond-chens-wheel-scrolling-code/" rel="nofollow">http://smallcode.weblogs.us/2007/06/03/corrections-to-raymond-chens-wheel-scrolling-code/</a></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-665553">
				<div id="div-comment-665553" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blogs.msdn.com/wpfsdk/archive/2008/09/08/custom-window-chrome-in-wpf.aspx' rel='external nofollow' class='url'>Windows Presentation Foundation SDK</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20030915-00/?p=42493#comment-665553">
			September 8, 2008 at 2:04 pm</a>		</div>

		<p>Guest post by Joe Castro, WPF product team developer This document covers the design and some implementation</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>