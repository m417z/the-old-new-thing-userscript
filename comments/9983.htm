<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (26)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-928593">
				<div id="div-comment-928593" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Cesar</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110803-00/?p=9983#comment-928593">
			August 3, 2011 at 8:11 am</a>		</div>

		<p>The problem is that these global settings were from a time before threads, where they made more sense. In the current world with threads, they only make sense if you are sure your program will always have a single thread (not possible on Windows because some things like to inject threads into all processes), or if you only call them on your process startup, before you create other threads (again not possible on Windows because some things manage to inject threads into your process even before it starts up).</p>
<p>On Unix (where setlocale came from) it makes more sense, since a lot of processes are still single-threaded and people do not run around injecting threads into other people&#39;s processes.</p>
<div class="post">[<i>Even without threads, one component shouldn&#39;t run around changing global settings unless it knows that the rest of the process is okay with it. Imagine if calling dbopen() changed your locale. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-928603">
				<div id="div-comment-928603" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110803-00/?p=9983#comment-928603">
			August 3, 2011 at 8:26 am</a>		</div>

		<blockquote><p>
  (not possible on Windows because some things like to inject threads into all processes)
</p></blockquote>
<p>BLODA. Do not inject into any processes you have not tested against.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-928613">
				<div id="div-comment-928613" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Adam Rosenfield</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110803-00/?p=9983#comment-928613">
			August 3, 2011 at 8:29 am</a>		</div>

		<p>BSD, as well as Mac OS X, which is based on BSD, also have the _l variants of many functions, but oddly other POSIX/*nix systems do not; they&#39;re not part of any major standard.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-jader3rd odd alt thread-odd thread-alt depth-1" id="comment-928623">
				<div id="div-comment-928623" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/jader3rd' rel='external nofollow' class='url'>jader3rd</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110803-00/?p=9983#comment-928623">
			August 3, 2011 at 9:02 am</a>		</div>

		<p>If there was a pattern for plugins, which would prevent plugins from changing settings for the executable, that would help avoid these situations.</p>
<p>Of course that does break scenarioes where load the plugin with the explicit purpose of changing settings.</p>
<div class="post">[<i>But how would you know that the settings change request was coming from the plugin rather than the main program? <a href="http://blogs.msdn.com/b/oldnewthing/archive/2004/01/01/47042.aspx" rel="nofollow">You can&#39;t trust the return address</a>. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-928633">
				<div id="div-comment-928633" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">apn</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110803-00/?p=9983#comment-928633">
			August 3, 2011 at 9:08 am</a>		</div>

		<p>I had run into this exact problem when loading the system PDH DLL on NT 4.0 and Win2K (<a rel="nofollow" target="_new" href="http://support.microsoft.com/kb/884536" rel="nofollow">support.microsoft.com/&#8230;/884536</a>). Not sure if later Windows version also exhibit this but I hope MS folks are also reading this blog!</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-928643">
				<div id="div-comment-928643" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Simon Farnsworth</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110803-00/?p=9983#comment-928643">
			August 3, 2011 at 9:13 am</a>		</div>

		<p>It sounds like what&#39;s needed is a way for a process to say &quot;I don&#39;t expect any global settings changes from here on&quot;, so that Explorer can indicate that it&#39;s done initialising, and any further global state change is a bug in an extension. You then need suitable magic to break into a debugger if a global state change is attempted, so that buggy extensions can be caught and their developers re-educated.</p>
<p>Of course, that&#39;s bound to be a lot harder than it sounds, and cause other nightmares; I&#39;m not sure how I&#39;d justify it out of the minus 100 points area. For starters, I&#39;m not sure I could list all the places that change global state like that.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-928663">
				<div id="div-comment-928663" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">AsmGuru62</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110803-00/?p=9983#comment-928663">
			August 3, 2011 at 9:33 am</a>		</div>

		<p>&quot;&#8230;developers re-educated.&quot;</p>
<p>That sounds violent!</p>
<p>:-)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-jader3rd odd alt thread-odd thread-alt depth-1" id="comment-928673">
				<div id="div-comment-928673" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/jader3rd' rel='external nofollow' class='url'>jader3rd</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110803-00/?p=9983#comment-928673">
			August 3, 2011 at 10:27 am</a>		</div>

		<p>&quot;But how would you know that the settings change request was coming from the plugin rather than the main program?&quot;</p>
<p>From today&#39;s architecture I don&#39;t think that you can. I don&#39;t have a solution for this, I just wish there was one.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-928683">
				<div id="div-comment-928683" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110803-00/?p=9983#comment-928683">
			August 3, 2011 at 11:17 am</a>		</div>

		<p>@Simon Farnsworth: easy. When done initializing these things, patch the functions in question so the first byte is int 3. Extension calls function, extension gets debugger breakpoint instead.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-928693">
				<div id="div-comment-928693" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Erik</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110803-00/?p=9983#comment-928693">
			August 3, 2011 at 11:18 am</a>		</div>

		<p>I immediately thought of the Chris Farley SNL spoof of the Folgers coffee commercial.</p>
<p><a rel="nofollow" target="_new" href="http://www.hulu.com/watch/4154/saturday-night-live-schillervision-hidden-camera" rel="nofollow">http://www.hulu.com/&#8230;/saturday-night-live-schillervision-hidden-camera</a></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-928713">
				<div id="div-comment-928713" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Crescens2k</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110803-00/?p=9983#comment-928713">
			August 3, 2011 at 12:00 pm</a>		</div>

		<p>Joshua:</p>
<p>If I remember correctly, each executable module has its own import table and it uses that to look up the routines from the CRT, so the plugin would use a different import table. So how could explorer patch the functions from an unknown DLL. Also the DLL could change the locale in the DllMain function, and this is executed long before explorer could get control and patch the it. Also, what happens if the plugin was linked using the static CRT?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-928733">
				<div id="div-comment-928733" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Cesar</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110803-00/?p=9983#comment-928733">
			August 3, 2011 at 12:41 pm</a>		</div>

		<p>@Crescens2k: forgive me if I am wrong (I am more used to Unix which usually has a single C runtime per process), but isn&#39;t setlocale() and friends part of the C runtime? So a plugin linked with a static CRT would have its own separate view of the locale. The same for mixing CRTs (msvcrt.dll msvcr70.dll msvcr71.dll msvcr80.dll&#8230;), each one would have its own separate view of the locale.</p>
<p>Or does setlocale() forward to something in kernel32.dll or other shared DLL used by all C runtimes?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-928743">
				<div id="div-comment-928743" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110803-00/?p=9983#comment-928743">
			August 3, 2011 at 1:12 pm</a>		</div>

		<blockquote><p>
  If I remember correctly, each executable module has its own import table and it uses that to look up the routines from the CRT, so the plugin would use a different import table.
</p></blockquote>
<p>You remember correctly. That is why I patch the first byte as returned by GetProcAddress().</p>
<blockquote><p>
  Also the DLL could change the locale in the DllMain function, and this is executed long before explorer could get control and patch the it.
</p></blockquote>
<p>Shell plugins are loaded dynamically.</p>
<blockquote><p>
  Also, what happens if the plugin was linked using the static CRT?
</p></blockquote>
<p>Fine. Either the static CRT has its own copy of the locale in which case we don&#39;t care or there&#39;s a lower down API we can patch and therefore do.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-928753">
				<div id="div-comment-928753" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Cheong</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110803-00/?p=9983#comment-928753">
			August 3, 2011 at 6:35 pm</a>		</div>

		<p>I think that all API calls that can change global system behaviour must be passed along a token that can identify the user really want to do that (just like another &quot;Run As Administrator&quot; one.) The executables calling DLL function need to pass the token to them. Make something like UAC setting to make the user decide whether to trust any legacy programs that doesn&#39;t implement token passing to change settings.</p>
<p>Now you need not trust the return address to block rouge applications to change global system behaviour.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-928773">
				<div id="div-comment-928773" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Cheong</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110803-00/?p=9983#comment-928773">
			August 4, 2011 at 3:08 am</a>		</div>

		<p>@immibis: My approach does not require a time machine. Just modify the origional API calls to accept and process with token with new names (list &quot;*_withtoken&quot;), then create another set of API with original API name as alias to the newly created function, with token = null.</p>
<p>Now change the next platform SDK&#39;s header to include appropiate function headers. Of course making new programs call the new APIs takes work, but you are targeting new Windows version anyway and have to accept the change if you really want the behaviour change to be global. Afterall, you can always use the old function signature to let user decide whether to trust the things you done, so not really it&#39;d be breaking things.</p>
<p>Yet that&#39;d be lots of (somehow unnecessary) works involved indeed.</p>
<div class="post">[<i>You forget that we&#39;re talking about plug-ins here. Once the host program recompiles with the new APIs, all old-style plug-ins stop working, since they were written before the _withtoken API was invented. They didn&#39;t get a chance to opt in/out since they&#39;re just a plug-in. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-928793">
				<div id="div-comment-928793" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Random832</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110803-00/?p=9983#comment-928793">
			August 4, 2011 at 6:16 am</a>		</div>

		<p>&quot;I think that all API calls that can change global system behaviour&quot; &#8211; But it doesn&#39;t&#8230; oh, you saw &quot;global setting&quot; and stopped reading. The locale is &quot;global&quot; (at least, within a CRT dll) in the sense that it applies to the whole process [rather than just the shell extension], not the system or even the session.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-928853">
				<div id="div-comment-928853" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Rick C</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110803-00/?p=9983#comment-928853">
			August 4, 2011 at 8:36 am</a>		</div>

		<p>Cheong, your idea is to pop up a dialog saying &quot;Something inside of Explorer wants to change the locale. Do you want to let this happen?&quot; &nbsp;Users are going to go &quot;Buh?&quot; and click a random button.</p>
<p>Worse, what does Explorer do if you click No? &nbsp;Unload the extension that called setlocale? &nbsp;The user&#39;s never going to connect the two events.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-928763">
				<div id="div-comment-928763" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blogs.msdn.com/computer_2D00_dude_4000_hotmail.com/ProfileUrlRedirect.ashx' rel='external nofollow' class='url'>computer-dude@hotmail.com</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110803-00/?p=9983#comment-928763">
			August 4, 2011 at 1:42 am</a>		</div>

		<p>&quot;[But how would you know that the settings change request was coming from the plugin rather than the main program? You can&#39;t trust the return address. -Raymond]&quot;</p>
<p>Forgive me if I&#39;m wrong, but it seems like the reason for changing the carpet is usually ignorance&#8230; In that case, any roadblock like that would *hopefully* make the developer(s) notice they&#39;re doing something wrong. The same argument applies to Cheong&#39;s idea (passing a token around).</p>
<p>Of course, you sadly can&#39;t implement either, since you don&#39;t have a time machine.</p>
<div class="posT">[<i>Wishful thinking. Most roadblocks just make people frustrated that they hit another roadblock. (See: SetActiveWindow -&gt; <a href="http://blogs.msdn.com/b/oldnewthing/archive/2008/10/06/8969399.aspx" rel="nofollow">SetForegroundWindow</a>.) All that&#39;ll happen is that people will do &quot;#define setlocale(c, l) setlocalewithtoken(c, l, GetTokenForSettingsChange())&quot; -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-928883">
				<div id="div-comment-928883" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Simon Farnsworth</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110803-00/?p=9983#comment-928883">
			August 4, 2011 at 9:06 am</a>		</div>

		<p>@Joshua</p>
<p>You&#39;ve brushed over what (in my opinion) is the hardest bit of implementing such a function; identifying all the places you need to patch. It&#39;s trivial, given such a list, to patch all of them, such that they trap into the debugger when they would otherwise set shared state, but producing the list and identifying all the corner cases is hard. To take just one example, setlocale() should only trap if it&#39;s called with a non-NULL second argument; if the second argument is NULL, it&#39;s a query, and that might be legitimate.</p>
<p>Your proposed patch mechanism therefore fails at the first hurdle; you can&#39;t just patch the first byte to 0xCC, as that doesn&#39;t check that the second argument passed to setlocale is non-NULL. You need something more sophisticated, which calls INT 3 if (and only if) the call tries to change the state.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-928923">
				<div id="div-comment-928923" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110803-00/?p=9983#comment-928923">
			August 4, 2011 at 10:54 am</a>		</div>

		<p>@Simon Farnsworth: I didn&#39;t read the manual before I posted it. Anyway, I have written stuff that acts only if the patched function has a particular argument before. It&#39;s not that hard.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-928963">
				<div id="div-comment-928963" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Simon Farnsworth</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110803-00/?p=9983#comment-928963">
			August 4, 2011 at 12:14 pm</a>		</div>

		<p>@Joshua</p>
<p>You&#39;re still ignoring the hard bit; we don&#39;t have a full list of all places where global state is changed. If we knew exactly what to patch, and under what conditions we needed to break to the debugger, we&#39;d have a trivial problem.</p>
<p>You keep restating that if we ignore the hard part of the problem, it becomes simple. Well, duh. Of course the problem&#39;s trivial if we ignore the hard part. Restating it in terms that you might find easier to deal with:</p>
<p>&quot;We wish to patch all functions that can change global state, such that when they are entered with appropriate preconditions to trigger a change of global state, the code enters the debugger instead of changing global state&quot;.</p>
<p>You&#39;ve managed the &quot;patch&quot; bit. But you have no idea what the &quot;all functions&quot; bit is, nor what the &quot;appropriate preconditions&quot; are; it&#39;s not impossible that (for example) setlocale() is implemented as an inline function unconditionally changing a global variable, and you need to use heavy-duty techniques to catch anything writing to that location, compare the value they&#39;re writing to the value already in place, and if it&#39;s a change, break into the debugger. If that is the case for any of the functions we&#39;re talking about, it&#39;s possible that the runtime cost of this feature is sufficiently high that it&#39;s not worth implementing.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-928973">
				<div id="div-comment-928973" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Crescens2k</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110803-00/?p=9983#comment-928973">
			August 4, 2011 at 1:08 pm</a>		</div>

		<p>Joshua:</p>
<blockquote><p>
  You remember correctly. That is why I patch the first byte as returned by GetProcAddress().
</p></blockquote>
<p>Hmm I&#39;m not quite sure what you are wanting to patch here? What GetProcAddress returns is the pointer to a function, so it would be pointing at code in the code segment. This could be in a page which is read only so changing it would fail. Also, what happens if you overwrite an instruction like a stack push for the ebp/rbp, or part of the sub instruction it uses to allocate stack space?</p>
<blockquote><p>
  Shell plugins are loaded dynamically.
</p></blockquote>
<p>Yes, and LoadLibrary doesn&#39;t return until after DllMain has returned, so no matter what you try it has already executed by the time you get a handle to it. It is in the LoadLibrary documentation.</p>
<p>&quot;If the specified module is a DLL that is not already loaded for the calling process, the system calls the DLL&#39;s DllMain function with the DLL_PROCESS_ATTACH value. If DllMain returns TRUE, LoadLibrary returns a handle to the module. If DllMain returns FALSE, the system unloads the DLL from the process address space and LoadLibrary returns NULL.&quot;</p>
<p>Since CoLoadLibrary is documented to be equivalent to LoadLibraryEx, and since this is documented to be the same as LoadLibrary when just normally loading a DLL, then these functions will only return if there is no DllMain entry point or DllMain has run and returned TRUE.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-929013">
				<div id="div-comment-929013" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Crescens2k</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110803-00/?p=9983#comment-929013">
			August 4, 2011 at 5:45 pm</a>		</div>

		<p>Made one mistake in my last post. In the last paragraph I missed out some words and made it imply that LoadLibrary etc. don&#39;t return unless the DllMain executes successfully.</p>
<p>It should have been</p>
<p>&quot;then these functions will only return a valid handle if there is no DllMain entry point or DllMain has run and returned TRUE.&quot;</p>
<p>One more thing I meant to point out but forgot too. Explorer is linked against the system CRT, which is msvcrt.dll, extensions are written usually using VS, and they would thus link against msvcrxx.dll, so how could explorer use GetProcAddress to get setlocale and patch it so that plugins would be affected. Explorer only knows about msvcrt.dll after all.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-929023">
				<div id="div-comment-929023" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Cheong</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110803-00/?p=9983#comment-929023">
			August 4, 2011 at 6:07 pm</a>		</div>

		<p>Ok, so just add an checkbox option &quot;Prevent and notify known buggy behaviour of shell plugins&quot; to Explorer so that if any encounter any of the API with *_withtoken versions, suspend the loading of that plugin and wait until other plugin&#39;s loaded.</p>
<p>The shell will show a icon in the notification area acknowledge user what happened. And when user click on it, it&#39;ll show a list of plugin that it had detected known buggy behaviour and ask you whether to disable them (much like what you see when starting IE9 with slow plugin). Shell will continue to load the plugins if the user select &quot;Don&#39;t disable&quot;.</p>
<div class="post">[<i>Explorer loads plugins on demand, not at startup like IE does. So you right-click on a .foo file, the FOO context menu plugin does something bad, and then&#8230; what exactly? (Remember, plugins also execute in no-UI scenarios, such as namespace extensions, so there&#39;s no guarantee that there&#39;s a human being around to answer any questions.) Oh, and as Crescens2k noted, the &quot;bad API&quot; isn&#39;t even something Explorer knows about. It&#39;s in a DLL that doesn&#39;t come with Windows. So Explorer wouldn&#39;t know about these &quot;bad APIs&quot; in order to patch them. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-929033">
				<div id="div-comment-929033" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110803-00/?p=9983#comment-929033">
			August 4, 2011 at 6:38 pm</a>		</div>

		<p>Figures. I only link to msvcrt.dll so I had a really dumb idea.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-929173">
				<div id="div-comment-929173" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">vga</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110803-00/?p=9983#comment-929173">
			August 6, 2011 at 10:29 am</a>		</div>

		<p>A command prompt application needs to use the standard VGA palette, as used by such apps since DOS-ages.</p>
<p>In windows the cmd prompt uses some other other palette with very ugly results.</p>
<p>Currently, the palette set by the app isn&#39;t applied permanently and user palette is restored when new prompt is opened. Earlier the palette was applied permanently. I have not figured out what the logic of whether the palette is permanently saved. There were some refactoring of the code between current and earlier but nothing stands out.</p>
<p>In any case, either change the cmd to use VGA palette or face the risk of losing your cmd palette if you use my application. I believe in time this app will be the most popular cmd app, as it&#39;s 1:1 repro of the most popular DOS app which stopped working in 64 bit windows.</p>
<div class="post">[<i>I don&#39;t understand. Cmd.exe does not change the palette; it uses whatever palette the console system gives it. Try it: use the Properties dialog to edit the color palette, then launch cmd.exe. Observe that the custom color palette remains intact. And what this has to do with shell extensions I have no idea. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>