<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (48)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-304653">
				<div id="div-comment-304653" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.mschaef.com/cgi-bin/blosxom.cgi' rel='external nofollow' class='url'>mschaef</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050909-24/?p=34263#comment-304653">
			September 9, 2005 at 10:03 am</a>		</div>

		<p>&quot;Of course, one could invent a brand new batch language, let&#8217;s call it Batch&#178; for the sake of discussion, and thereby be rid of the backwards compatibility constraints. But with that decision come different obstacles. &quot;</p>
<p>I don&#8217;t think these obstacles need to be explained to anybody with any dependance on VB6 code.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-304663">
				<div id="div-comment-304663" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">sas</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050909-24/?p=34263#comment-304663">
			September 9, 2005 at 10:41 am</a>		</div>

		<p>I know it&#8217;s hard to conceive of, but Microsoft doesn&#8217;t actually have to solve every problem under the sun.  Perl is a great scripting language, and is portable to Unix systems.  There&#8217;s also Python, Ruby, tcsh; all are free, I believe.</p>
<p>I&#8217;ll grant the big advantage of knowing your language is already installed (.BAT).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-304673">
				<div id="div-comment-304673" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://localhost' rel='external nofollow' class='url'>Lee Houghton</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050909-24/?p=34263#comment-304673">
			September 9, 2005 at 10:49 am</a>		</div>

		<p>I think that calls for command namespaces.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-304683">
				<div id="div-comment-304683" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">D. Lorentz</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050909-24/?p=34263#comment-304683">
			September 9, 2005 at 11:06 am</a>		</div>

		<p>Yeah, but aren&#8217;t these new batch features added on a pretty ad-hoc basis already? I don&#8217;t recall having access to FOR/F under Win98, for instance.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-304693">
				<div id="div-comment-304693" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Pops</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050909-24/?p=34263#comment-304693">
			September 9, 2005 at 11:10 am</a>		</div>

		<p>What if you were to provide a converter along with the new batch language? You run your old batch program through the converter, and voila, you&#8217;re now using the new langauge&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-304703">
				<div id="div-comment-304703" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">ac</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050909-24/?p=34263#comment-304703">
			September 9, 2005 at 11:10 am</a>		</div>

		<p>but why the hell was the choice command removed from the NT line?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-304713">
				<div id="div-comment-304713" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.csc.calpoly.edu/~bfriesen/' rel='external nofollow' class='url'>Brian Friesen</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050909-24/?p=34263#comment-304713">
			September 9, 2005 at 11:32 am</a>		</div>

		<p>I hate to admit it, but the scripting languages in Unix blow away what Microsoft offers.  It would be awesome if a future version of Windows included the scripting capabilities of tcsh.<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-304723">
				<div id="div-comment-304723" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">AndyB</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050909-24/?p=34263#comment-304723">
			September 9, 2005 at 11:38 am</a>		</div>

		<p>New batch language? I thought it was already here in WSH and cscript.exe.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-304733">
				<div id="div-comment-304733" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">bat man</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050909-24/?p=34263#comment-304733">
			September 9, 2005 at 11:57 am</a>		</div>

		<p>It&#8217;s probably the legacy and excess backward compability, but every time I try to do something with BATs, it almost get the feeling that the syntax has delibarately been designed such that you can&#8217;t do anything useful with it. For example:</p>
<p>FOR /F &quot;tokens=*&quot; %i IN (&#8216;ver|find version&#8217;) DO echo %i<br />
<br />| was unexpected at this time.</p>
<p>Why on Earth can&#8217;t you use | there?</p>
<p>This is just one example out of million. Fortunately we have cygwin these days&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-304743">
				<div id="div-comment-304743" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ring Zero</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050909-24/?p=34263#comment-304743">
			September 9, 2005 at 12:08 pm</a>		</div>

		<p>I&#8217;m with AndyB: these days, if I have the urge to write a batch file, I write javascript and execute with cscript.exe.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-304763">
				<div id="div-comment-304763" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://spacebunny.xepher.net/' rel='external nofollow' class='url'>KJK::Hyperion</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050909-24/?p=34263#comment-304763">
			September 9, 2005 at 12:19 pm</a>		</div>

		<p>However quirky (a lot!), I love the batch language! my only gripe is that there&#8217;s no clean way to break out of a for loop. Sure, it looks slightly more like line noise than Perl (can you tell what does the below code do?), but you can do very interesting stuff with it:</p>
<p>@echo off<br />
<br />setlocal<br />
<br />setlocal enableextensions<br />
<br />setlocal enabledelayedexpansion</p>
<p>set startdir=%1<br />
<br />if .!startdir!. == .. ( set startdir=!CD! )</p>
<p>call :visit &quot;!startdir!&quot;<br />
<br />goto :EOF</p>
<p>:visit<br />
<br />setlocal<br />
<br />set dir=&quot;%~dpnx1&quot;</p>
<p>pushd !dir! &amp;&amp; ( ( ^<br />
<br /> for /f &quot;tokens=*&quot; %%D in (&#8216;dir /ad/b&#8217;) do ( ^<br />
<br />  call :visit &quot;%%D&quot; &quot;%%~aD&quot; ) ) &amp; popd ) || ^<br />
<br />goto :EOF</p>
<p>( echo %~a1| findstr /R /X &#8230;&#8230;..l 2&gt;&amp;1 &gt; NUL ) || ( ^<br />
<br />rd !dir! 2&gt; NUL &amp;&amp; ( echo !dir:~1,-1!&gt;&amp;2 || exit /b ) )<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-304793">
				<div id="div-comment-304793" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">bat man</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050909-24/?p=34263#comment-304793">
			September 9, 2005 at 12:47 pm</a>		</div>

		<p>KJK::Hyperion: Thanks for the tip.</p>
<p>&quot;despite not being really documented anywhere, it&#8217;s not hard to understand by long and painful trial-and-error&quot; &#8211; Exactly what I mean :) Trial-and-error is what I&#8217;ve been doing, Trial-and-eventual-success muvh much less. BAT must have the lowest productivity rate among the languages I&#8217;ve ever used (and that includes AutoLISP&#8230;)</p>
<p>Regarding find vs. findstr &#8211; my mistake, didn&#8217;t verify that. </p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-304803">
				<div id="div-comment-304803" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.semack.net' rel='external nofollow' class='url'>Myron A. Semack</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050909-24/?p=34263#comment-304803">
			September 9, 2005 at 12:49 pm</a>		</div>

		<p>&quot;I hate to admit it, but the scripting languages in Unix blow away what Microsoft offers. It would be awesome if a future version of Windows included the scripting capabilities of tcsh.&quot;</p>
<p>What do you need that WSH doesn&#8217;t provide?</p>
<p><a rel="nofollow" target="_new" href="http://msdn.microsoft.com/library/default.asp?url=/library/en-us/script56/html/wsoriWindowsScriptHost.asp" rel="nofollow">http://msdn.microsoft.com/library/default.asp?url=/library/en-us/script56/html/wsoriWindowsScriptHost.asp</a><br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-304813">
				<div id="div-comment-304813" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.mschaef.com/cgi-bin/blosxom.cgi' rel='external nofollow' class='url'>mschaef</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050909-24/?p=34263#comment-304813">
			September 9, 2005 at 1:18 pm</a>		</div>

		<p>&quot;How did one get the output of a program (or input from the user) into a variable in the DOS era?&quot;</p>
<p>For simple things, my approach was to redirect output into another batch file that set the variable, and then call the second batch file. It&#8217;d look something like this (making allowances for long file names):</p>
<p>copy __set_cd_template.bat __set_cd.bat<br />
<br />cd &gt;&gt; __set_cd.bat<br />
<br />call __set_cd.bat<br />
<br />del __set_cd.bat</p>
<p>__set_cd_template.bat would contain something like the text &quot;set CURRENT_DIRECTORY=^Z&quot;.  The lack of a space between the equal sign and the EOF (^Z) was important. Otherwise, the output from the file got redirected into a second line.</p>
<p>You could also do interesting things with edlin. I remember pretty clearly implementing the equivalent of pushd/popd with edlin and batch files.  pushd would append a line that read &quot;CD&lt;current_directory&gt;&quot; to a global batch file in a well known location. popd would call the global batch file and use edlin to truncate the last line. It would (quickly, behind the scenes) take you through every directory in the stack, but you&#8217;d end up where you were when you said &#8216;pushd&#8217;.</p>
<p>Around the time time, chkdsk would report percentage fragmentation of the files in a given directory. I built a set of batch files atop pushd/popd that traversed the entire directory hierarchy of a hard disk and dumped a report of the fragmentation percentages in a well known location.</p>
<p>(Or you could use Norton&#8230; :-)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-304823">
				<div id="div-comment-304823" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Mike Dunn</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050909-24/?p=34263#comment-304823">
			September 9, 2005 at 1:31 pm</a>		</div>

		<p>I used to work at a company whose complex build system ran entirely on 4DOS/4NT batch files. It was probably the first system that was designed in-house back in the DOS days, and they just stuck with it. It scaled horribly (ie, not at all) and was hard for newbies to learn, but since <em>every</em> product used it, no one wanted to change it. So breaking batch files would literally make the company unable to function.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-304833">
				<div id="div-comment-304833" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://mailto:Nekto2@gmail.com' rel='external nofollow' class='url'>Nekto2</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050909-24/?p=34263#comment-304833">
			September 9, 2005 at 1:34 pm</a>		</div>

		<p>Perl is not good as a replacement. You can&#8217;t easy use it on CD or etc. Lot&#8217;s of files needed to run it. (ok actually I have single-file perl4.exe for DOS ;)</p>
<p> And it is not batch language &#8211; It&#8217;s not easy to generate programmatically perl script which will be run next. It&#8217;s easy to do with BAT.</p>
<p> Thanks all for hints on JS/BAT/find* and explanations of BAT parsing.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-304843">
				<div id="div-comment-304843" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Mihai</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050909-24/?p=34263#comment-304843">
			September 9, 2005 at 2:35 pm</a>		</div>

		<p>Nekto2: &quot;Perl is not good as a replacement. You can&#8217;t easy use it on CD or etc.&quot;<br />
<br />I like Perl, use it daily, but this is 100% true.<br />
<br />Then I have discovered KiXtart (<a rel="nofollow" target="_new" href="http://www.kixtart.org/" rel="nofollow">http://www.kixtart.org/</a>). Not perfect, or as powerfull as Perl, but worth more than a look.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-304853">
				<div id="div-comment-304853" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">bat man</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050909-24/?p=34263#comment-304853">
			September 9, 2005 at 2:43 pm</a>		</div>

		<p>mschaef: the<br />
<br /> copy sethack.bat tmp.bat<br />
<br /> foo &gt;&gt; tmp<br />
<br /> call tmp.bat<br />
<br /> del tmp.bat<br />
<br />hack is what I used, too :). But if I recall correctly ancient DOS versions did not even have CALL&#8230; :)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-304863">
				<div id="div-comment-304863" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Jerry Pisk</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050909-24/?p=34263#comment-304863">
			September 9, 2005 at 3:02 pm</a>		</div>

		<p>&quot;Suppose you decide to bite the bullet and rewrite. Oh, but Batch&#178; is available only in more recent versions of Windows. Do you tell your customers, &quot;We don&#8217;t support the older versions of Windows any more&quot;? Or do you bite another bullet and say, &quot;We support only versions of Windows that have Batch&#178;&quot;?&quot;</p>
<p>So all features available in batch files under WinXP are also backported to Windows 95? I find that hard to believe…</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-304873">
				<div id="div-comment-304873" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">cooney</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050909-24/?p=34263#comment-304873">
			September 9, 2005 at 3:19 pm</a>		</div>

		<blockquote><p>
  Suppose you decide to bite the bullet and rewrite. Oh, but Batch&#178; is available only in more recent versions of Windows. Do you tell your customers, &quot;We don&#8217;t support the older versions of Windows any more&quot;? Or do you bite another bullet and say, &quot;We support only versions of Windows that have Batch&#178;&quot;?</p>
<p>This is just stupid &#8211; we&#8217;re talking about a new shell here. You ship another shell program with Longhorn/Vista/whatever and make it available for free redistribution. Want to run it on 95? document what features are available on 95 and away you go.</p>
<p>But how will I tell which program to run?</p>
<p>Well, that part will require support, provided you want to run it like the regular batch files. Start your script with #!&lt;path&gt;/bash. As a nod to the drive letter issue, you can always use %WINDIR% or %SHELLDIR% or something for the path. On windows95, just invoke the new shell with the script as an arg. Simple.</p>
<p>Seriously, this is a solved problem for 30 years, and seeing such a lack of history is embarrassing.
</p></blockquote>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-304883">
				<div id="div-comment-304883" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://home.earthlink.net/~sleepyjackal/index.html' rel='external nofollow' class='url'>Gary and the Samoyeds</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050909-24/?p=34263#comment-304883">
			September 9, 2005 at 4:33 pm</a>		</div>

		<p>&quot;Welcome to evolution.&quot;</p>
<p>So we can agree it&#8217;s not Intelligent Design?  [wag]<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-304903">
				<div id="div-comment-304903" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Grant Wagner</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050909-24/?p=34263#comment-304903">
			September 9, 2005 at 5:24 pm</a>		</div>

		<p>&quot; but why the hell was the choice command removed from the NT line?&quot;</p>
<p>Because you can accomplish the same thing with set /p:</p>
<p>set /p answer=Select from [a, b, c]:<br />
<br />if %answer% == &quot;a&quot;&#8230;</p>
<p>&quot; &#8230;&quot;Those who don&#8217;t know Unix are doomed to reinvent it, poorly.&quot;&quot;</p>
<p>The general concensus from what I&#8217;ve read is that MSH (aka Monad) is as (or more) powerful a shell than anything offered by *nix.</p>
<p>&quot;So all features available in batch files under WinXP are also backported to Windows 95? I find that hard to believe…&quot;</p>
<p>If you read all of what Raymond wrote, you see that the argument is that any batch file will run in Windows XP and 2003, not the other way around. If Windows XP and 2003 used another shell, with another batch language syntax, no batch file from prior to XP would run in them. In other words, if any version of Windows to ship with Monah (MSH) expected .bat files to contain Monah (MSH) syntax, all existing .bat files would break.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-304913">
				<div id="div-comment-304913" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Cooney</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050909-24/?p=34263#comment-304913">
			September 9, 2005 at 6:29 pm</a>		</div>

		<blockquote><p>
  If Windows XP and 2003 used another shell, with another batch language syntax, no batch file from prior to XP would run in them.</p>
<p>Why is that? We have established methods for dealing with this already. Leave standard batch files alone and make something new and clean.
</p></blockquote>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-304923">
				<div id="div-comment-304923" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">brofield</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050909-24/?p=34263#comment-304923">
			September 9, 2005 at 6:56 pm</a>		</div>

		<p>From the link provided&#8230;<br />
<br />&quot;&quot;Once you have access to the beta site, download the beta version of the .NET Framework 2.0 (a 24mb download), and the MSH Preview version (4.1 mb) from the downloads page. Once downloaded, run Dotnetfx.exe to install the .NET Framework, then run Windows command shell preview.exe to install MSH.&quot;&quot;</p>
<p>I consider 28Mb of downloads (or inclusions on CD/DVD) and an installation of the .NET framework at a minimum, just to get a new shell scripting language is a little too heavy. One of the light-weight standalone scripting languages around seems a better solution. e.g. 4DOS (although it is not free) or one of the programs listed above.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-304933">
				<div id="div-comment-304933" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">scoutcat</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050909-24/?p=34263#comment-304933">
			September 9, 2005 at 7:03 pm</a>		</div>

		<p>Did anybody say &quot;Cygwin&quot;?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-304753">
				<div id="div-comment-304753" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Foo</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050909-24/?p=34263#comment-304753">
			September 9, 2005 at 12:11 pm</a>		</div>

		<p>Raymond just explained a cool trick possible with batch files and noted how popular they are inspite of being so &#8216;Kludgy&#8217;. *Nobody* mentioned anything about competing with other scripting languages. LOL Perl ! Ruby !</p>
<p> </p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-304773">
				<div id="div-comment-304773" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">bat man</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050909-24/?p=34263#comment-304773">
			September 9, 2005 at 12:36 pm</a>		</div>

		<p>Btw, given this is The *Old* New Thing, let me ask an outdated question. How did one get the output of a program (or input from the user) into a variable in the DOS era? That is, before the WinNT era FOR /F and other modern folly.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-304783">
				<div id="div-comment-304783" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://spacebunny.xepher.net/' rel='external nofollow' class='url'>KJK::Hyperion</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050909-24/?p=34263#comment-304783">
			September 9, 2005 at 12:36 pm</a>		</div>

		<p>bat man: you need to escape the &quot;|&quot;. Try to get familiar with the extremely idiosyncratic and extremely quirky multi-stage parsing of batch files (for example: don&#8217;t *ever* try to nest FOR loops if you use the !variable! syntax &#8211; string the loops in a pipeline instead); despite not being really documented anywhere, it&#8217;s not hard to understand by long and painful trial-and-error</p>
<p>It helps to know, for example, that the batch language has *no* constructs whatsoever (with the possible exception of labels) &#8211; rem, echo, for, if, etc. are all built-in commands; being built-in means, among other things, that they have a custom parser (note how echo outputs the string argument verbatim, preserving whitespace), and that they are handled by a slightly different tokenizer (which is why &quot;cd..&quot; is equivalent to &quot;cd ..&quot; but &quot;findstr.exe&quot; isn&#8217;t equivalent to &quot;findstr .exe&quot;); even the parenthesis isn&#8217;t a construct, it&#8217;s a built-in command with a custom parser that handles line breaks itself, which is why you can write this:</p>
<p>if .%var%. == .. (<br />
<br /> command<br />
<br /> command<br />
<br />) else (<br />
<br /> command<br />
<br />)</p>
<p>but not this:</p>
<p>if .%var%. == ..<br />
<br />(<br />
<br /> command<br />
<br /> command<br />
<br />)<br />
<br />else<br />
<br />(<br />
<br /> command<br />
<br />)</p>
<p>since the &quot;if&quot; built-in doesn&#8217;t handle line breaks in any special way</p>
<p>In your case what you *really* mean is:</p>
<p>FOR /F &quot;tokens=*&quot; %I IN (&#8216;ver^|findstr /i version&#8217;) DO @echo %I</p>
<p>Note the use of uppercase letters for variables (it&#8217;s unambiguous if you&#8217;ll ever use the %~xxxX syntax, and chanches are you will), the escaped &quot;|&quot;, the use of findstr instead of find (find can only search disk files), and the @ to suppress the echoing of the echo command</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-304943">
				<div id="div-comment-304943" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://tim.strafenet.com' rel='external nofollow' class='url'>Tim</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050909-24/?p=34263#comment-304943">
			September 9, 2005 at 8:32 pm</a>		</div>

		<blockquote><p>
  I consider 28Mb of downloads (or inclusions on CD/DVD) and an installation of the .NET framework at a minimum, just to get a new shell scripting language is a little too heavy. One of the light-weight standalone scripting languages around seems a better solution. e.g. 4DOS (although it is not free) or one of the programs listed above. </p>
<p>brofield: The .NET Framework 2.0 will already be installed on Vista I&#8217;m sure, and any .NET 2.0 application for previous versions of windows will need the framework redistributable /anyway/. So if you&#8217;re writing a .NET 2.0 app, or if you&#8217;re writing an app for Vista, you&#8217;ll not have any additional dependancies to install.
</p></blockquote>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-304893">
				<div id="div-comment-304893" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Bryan</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050909-24/?p=34263#comment-304893">
			September 9, 2005 at 4:59 pm</a>		</div>

		<p>&#8230;&quot;Those who don&#8217;t know Unix are doomed to reinvent it, poorly.&quot;</p>
<p>;-)</p>
<p>About find vs. findstr &#8212; find can search more than just disk files.  For example, just today I&#8217;ve done a:</p>
<p>netstat -n | find &quot;:25&quot;</p>
<p>to see the states of all the open, closed, etc. SMTP connections on a 2K Server box.  Unless you have to use findstr in XP?  If so, then *that* reeks of backwards-incompatibility&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-304953">
				<div id="div-comment-304953" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Anonymous Coward</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050909-24/?p=34263#comment-304953">
			September 10, 2005 at 12:48 am</a>		</div>

		<p>One of the things not mentioned is that batch files can&#8217;t be self modifying.  (Or rather they can if you are extremely careful).</p>
<p>The batch file is closed before each command is executed, and then reopened and the next command read from the absolute location that the previous one ended.  You would get wierd errors if you moved the contents of the file around at all.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-304973">
				<div id="div-comment-304973" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Michael Fitzpatrick</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050909-24/?p=34263#comment-304973">
			September 10, 2005 at 4:35 am</a>		</div>

		<blockquote><p>
  Why is the batch language such a grammatical<br />
  <br />&gt;mess? Backwards compatibility.<br />
  <br />I can&#8217;t believe that I am reading this here. I know that Microsoft has a rep of not seeing the big picture, but really, on this blog too?<br />
  <br />Really, aren&#8217;t there enough words in the engish language that MS couldn&#8217;t use a different word than &quot;FOR&quot; so as to preserve &quot;Backwards compatibility&quot;. Really&#8230;<br />
  <br />I could go on about MS, but whats the point. How many times can you kill a dead horse.</p>
</blockquote>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-304983">
				<div id="div-comment-304983" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Alex Blekhman</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050909-24/?p=34263#comment-304983">
			September 10, 2005 at 5:16 am</a>		</div>

		<p>Cooney wrote on Friday, September 09, 2005 6:29 PM:<br />
<br />&gt; Why is that? We have established<br />
<br />&gt; methods for dealing with this already.<br />
<br />&gt; Leave standard batch files alone and<br />
<br />&gt; make something new and clean.</p>
<p>There <em>is</em> something new and clean already. As many others pointed, it&#8217;s called WSH (Windows Scripting Host). WSH exists since Win98 and has two excellent scripting languages out of the box: JScript and VBScript. Implementation of other popular languages can be found easily, including Tcl, Python and Perl, so beloved by Unix admirers (search web for ActivePerl).</p>
<p>Personally, I almost always prefer WSH over batch files. I agree with others here that batch script has done its job well for many years, but now it&#8217;s dead-end path of scripting evolution.</p>
<p>Moreover, I find batch script as counterproductive quite often, because it gives you illusion that no programming efforts are required; &quot;it&#8217;s just few CMD commands away&quot; thinks typical developer and starts typing. Then he/she needs to peek in documentation before typing almost every command, because nobody remembers cumbersome syntax. Then developer is stunned by results of first run and starts to debug it (with echo, of course, there is nothing else). Then poor guy cursing his way through opaque rules of parsing and execution context of batch scripts. After couple of hours of exhausting coding it works finally. However, nobody can understand it from first glance including the author. What about maintenance now? That&#8217;s why I don&#8217;t like batch scripts.</p>
<p>There is mental barrier that developers often need to overcome before start writing JScript or Perl: it looks like &quot;programming&quot;. It has functions and variables, debuggers, even editors with syntax highlight. It makes impression as full blown programming in contrast with &quot;simple&quot; batch files. Many times people think &quot;what? I won&#8217;t start <em>coding</em> now for such simple task; there is batch script for that!&quot;, but they often forget that tasks tend to expand quickly (usually as early as you&#8217;re writing very first solution) and batch script reaches its limits even quicker. As a result, coding efforts invested in batch scripts are much higher than those for JScript/Perl for comparable tasks. And I even don&#8217;t want to think about batch script maintenance vs JScript maintenance.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-305013">
				<div id="div-comment-305013" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Me</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050909-24/?p=34263#comment-305013">
			September 10, 2005 at 11:21 am</a>		</div>

		<p>&quot;You pipe text around.&quot;</p>
<p>Actually, often binary data is piped around, for instance, on some *nix systems, where &#8216;tar&#8217; dosent support gzip directly, the following command will extract a .tar.gz archive:</p>
<p>gzcat file.tar.gz | tar xvf &#8211;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-304963">
				<div id="div-comment-304963" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ross Bemrose</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050909-24/?p=34263#comment-304963">
			September 10, 2005 at 4:24 am</a>		</div>

		<p>&gt; The general concensus from what I&#8217;ve read is that MSH (aka Monad) is as (or more) powerful a shell than anything offered by *nix.</p>
<p>I&#8217;d love to see evidence of that.  However, by stating &quot;shell,&quot; scripting languages that don&#8217;t have their own shell are excluded.  Perl, for example, is ubiquitous on *nix, but there isn&#8217;t a perl shell.  (Incidently, TCL/TK does have a shell, tclsh, so a comparison with it would be warranted.)</p>
<p>I also feel the need to pull up a quote from Jeffrey Snover, Architect for Administration Experience Platform (and one of Monad&#8217;s lead developers).</p>
<p>&quot;So, Monad is a way to automate the system. It has four components. First is it&#8217;s as interactive and composable as kshell or bash. So if you&#8217;re familiar with those types of shells, we have those capabilities. It&#8217;s also as programmatic as say Perl or Ruby. Third is we&#8217;ve focused in on some production-oriented capabilities of it, like VMS&#8217;s DCL or the AS400. We&#8217;re really focused in on trying to solve admins&#8217; problems. And then fourth, we go and we take all the management information in your system and make it as easy to find as files in the file system.&quot; &#8212; <a rel="nofollow" target="_new" href="http://msdn.microsoft.com/theshow/transcripts/Episode043Transcript.aspx" rel="nofollow">http://msdn.microsoft.com/theshow/transcripts/Episode043Transcript.aspx</a></p>
<p>One and two are already covered by *nix, as is the fourth.  In fact, the fourth is one of UNIX&#8217;s strong points, because process and device information already appear as files in the file system (see /dev and /proc).</p>
<p>The third point seems to deal with DCL&#8217;s ties to VMS&#8217;s security system&#8230; but in *nix this isn&#8217;t all that necessary, because security settings are already managed through shell utilities.  Even ACL lists are managed that way by the *nix systems that support them (Linux and some of the BSDs).</p>
<p>Anyway, I think I&#8217;ve said enough on the subject, because this is starting to get rambly.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-304993">
				<div id="div-comment-304993" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Andreas H&#228;ber</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050909-24/?p=34263#comment-304993">
			September 10, 2005 at 8:17 am</a>		</div>

		<p>&gt;&gt; The general concensus from what I&#8217;ve read is that MSH (aka Monad) is as (or more) powerful a shell than anything offered by *nix.</p>
<p>&gt;I&#8217;d love to see evidence of that. However, by stating &quot;shell,&quot; scripting languages that don&#8217;t have their own shell are excluded. Perl, for example, is ubiquitous on *nix, but there isn&#8217;t a perl shell. (Incidently, TCL/TK does have a shell, tclsh, so a comparison with it would be warranted.)</p>
<p>Why is it more powerful? Because the script languages in traditional UNIX is based on pure text streams. You pipe text around, which you then have to parse. MSH pipes *objects* around instead, which make it far more powerful. In fact, these are .NET objects. And if you know .NET then you can do a lot of magic in there :)</p>
<p>Some videos of &quot;Monad&quot; are available at Channel9: <a rel="nofollow" target="_new" href="http://channel9.msdn.com/tags/Monad" rel="nofollow">http://channel9.msdn.com/tags/Monad</a><br />
<br />And they also have a blog where you can read more about it: <a rel="nofollow" target="_new" href="http://blogs.msdn.com/monad/" rel="nofollow">http://blogs.msdn.com/monad/</a>.</p>
<p>Anyways, I really like it :]</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-305043">
				<div id="div-comment-305043" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Yosi</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050909-24/?p=34263#comment-305043">
			September 11, 2005 at 3:12 am</a>		</div>

		<p>Raymond: you can&#8217;t use that &quot;backward compatability&quot; excuse for all idiotic &quot;features&quot; that windows have. And with batch files windows misses the point big time.<br />
<br />It is hard to believe, but *nixes have virtually unchanged shell languages for about 30 years. And it is all backward compatible.<br />
<br />So please, have a respect for your readers: call things by their name. Bug is a bug and mistake is a mistake and mess is a mess. And batch files are design mistake &#8211; plain and simple.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-305083">
				<div id="div-comment-305083" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Tim Smith</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050909-24/?p=34263#comment-305083">
			September 11, 2005 at 4:51 pm</a>		</div>

		<p>YEAH!!!</p>
<p>I wish the tar and gzip people used XML so I wouldn&#8217;t have to create my own parsers.  I hate it when those unix guys can&#8217;t follow a standard.</p>
<p>note: sarcasm at many levels.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-305093">
				<div id="div-comment-305093" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Bryan</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050909-24/?p=34263#comment-305093">
			September 11, 2005 at 7:27 pm</a>		</div>

		<p>O&#8230;K&#8230;  I&#8217;m thoroughly confused.  ;-)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-305073">
				<div id="div-comment-305073" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Bryan</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050909-24/?p=34263#comment-305073">
			September 11, 2005 at 4:25 pm</a>		</div>

		<p>&gt; You pipe text around, which you then have to parse</p>
<p>No, *you* (as the programmer) don&#8217;t usually have to parse it, unless you dream up your own file format(s).  That&#8217;s what expat, libxml2, Lisp&#8217;s s-expression interpreter, etc. are for.</p>
<p>As for the utility of passing objects around, yes, sometimes it would be helpful (but then, in most scripting languages, you&#8217;d just use XMLRPC, and in Lisp, you&#8217;d use s-expressions), but not always.</p>
<p>Especially not when the format of the objects you&#8217;re passing around is undocumented, and binary, and you&#8217;re having problems with whatever&#8217;s going on on one side or the other.  It&#8217;s really easy in Unix to dump the output of a command to a file and look at it in a text editor; it&#8217;s not too much more difficult to redirect an XMLRPC &quot;call&quot; to a file and look at it.  It&#8217;s also not too difficult to dump a bunch of s-expressions to a file.  And if you know a bit about XML, or the structure of Lisp, you can generally figure out what the problem is.</p>
<p>Whereas, what do you do if you&#8217;re having problems with the way MSH is passing objects?</p>
<p>The difference is transparency.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-305103">
				<div id="div-comment-305103" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Say WTF?</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050909-24/?p=34263#comment-305103">
			September 12, 2005 at 4:37 am</a>		</div>

		<blockquote><p>
  Do you tell your customers, &quot;We don&#8217;t support the older versions of Windows any more&quot;?</p>
<p>You mean, like Microsoft do?
</p></blockquote>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-305113">
				<div id="div-comment-305113" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Rory</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050909-24/?p=34263#comment-305113">
			September 12, 2005 at 6:12 am</a>		</div>

		<p>I have yet to find anything that beats the power of the Bash shell. Combine that with say, Perl/Python/Ruby/whatever, and you have the most complete shell environment you could wish for.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-305123">
				<div id="div-comment-305123" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">ansic</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050909-24/?p=34263#comment-305123">
			September 12, 2005 at 8:57 am</a>		</div>

		<p>Real men use c<br />
<br /><a rel="nofollow" target="_new" href="http://root.cern.ch/root/Cint.html" rel="nofollow">http://root.cern.ch/root/Cint.html</a></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-oldnewthing bypostauthor odd alt thread-odd thread-alt depth-1" id="comment-305313">
				<div id="div-comment-305313" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Raymond+Chen+-+MSFT' rel='external nofollow' class='url'>Raymond Chen - MSFT</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050909-24/?p=34263#comment-305313">
			September 12, 2005 at 5:55 pm</a>		</div>

		<p>Backwards compatibility means being compatible with your mistakes, too.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-305333">
				<div id="div-comment-305333" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Cooney</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050909-24/?p=34263#comment-305333">
			September 12, 2005 at 7:01 pm</a>		</div>

		<p>#! means never having to say you&#8217;re sorry.</p>
<p>/couldn&#8217;t resist</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-357583">
				<div id="div-comment-357583" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blogs.msdn.com/oldnewthing/archive/2006/03/22/558007.aspx' rel='external nofollow' class='url'>The Old New Thing : Solving one problem by creating a bigger problem</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050909-24/?p=34263#comment-357583">
			March 22, 2006 at 11:00 am</a>		</div>

		<p>PingBack from <a rel="nofollow" target="_new" href="http://blogs.msdn.com/oldnewthing/archive/2006/03/22/558007.aspx" rel="nofollow">http://blogs.msdn.com/oldnewthing/archive/2006/03/22/558007.aspx</a></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-357593">
				<div id="div-comment-357593" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blogs.msdn.com/oldnewthing/archive/2006/03/22/558012.aspx' rel='external nofollow' class='url'>The Old New Thing : Solving one problem by creating a bigger problem</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050909-24/?p=34263#comment-357593">
			March 22, 2006 at 11:01 am</a>		</div>

		<p>PingBack from <a rel="nofollow" target="_new" href="http://blogs.msdn.com/oldnewthing/archive/2006/03/22/558012.aspx" rel="nofollow">http://blogs.msdn.com/oldnewthing/archive/2006/03/22/558012.aspx</a></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-373873">
				<div id="div-comment-373873" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blogs.msdn.com/oldnewthing/archive/2006/04/27/585047.aspx' rel='external nofollow' class='url'>The Old New Thing : A new scripting language doesn't solve everything</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050909-24/?p=34263#comment-373873">
			April 27, 2006 at 10:00 am</a>		</div>

		<p>PingBack from <a rel="nofollow" target="_new" href="http://blogs.msdn.com/oldnewthing/archive/2006/04/27/585047.aspx" rel="nofollow">http://blogs.msdn.com/oldnewthing/archive/2006/04/27/585047.aspx</a></p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>