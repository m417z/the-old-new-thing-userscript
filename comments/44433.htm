<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (23)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-1180653">
				<div id="div-comment-1180653" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">JamesJohnston</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150319-00/?p=44433#comment-1180653">
			March 19, 2015 at 7:32 am</a>		</div>

		<p>The fun part is that a certain competitor to Visual C++ would globally add atoms with unique numbers, even for the most basic &quot;hello world&quot; program. &nbsp;One atom contained the process ID, and another atom contained the combination of HINSTANCE and thread ID. &nbsp;As you can imagine, programs written that use this runtime environment eventually exhaust the global atom table if they are restarted often (e.g. automatically).</p>
<p>Hopefully it is not unreasonable to link to this blog post, as the offending product isn&#39;t named in the article text&#8230; <a rel="nofollow" target="_new" href="http://blogs.msdn.com/b/ntdebugging/archive/2012/01/31/identifying-global-atom-table-leaks.aspx">blogs.msdn.com/&#8230;/identifying-global-atom-table-leaks.aspx</a></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1180663">
				<div id="div-comment-1180663" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">DWalker</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150319-00/?p=44433#comment-1180663">
			March 19, 2015 at 7:56 am</a>		</div>

		<p>Ideally, the documentation for &quot;register anything&quot; would say how to, or WHETHER it&#39;s necessary to, deregister the thing. &nbsp;And how to query the status of the thing. &nbsp;But I see Raymond&#39;s point.</p>
<p>On a related note, lots and lots of documentation, for all kinds of software and systems, will tell you how to SET some option, but not tell you how to TEST or CHECK the value of that option. &nbsp;I might want to know how to check the value of an option.</p>
<p>The Microsoft SQL Server documentation used to be really bad about this. It would show the syntax for SET ANSI_NULLS ON and SET ANSI_NULLS OFF, for example, but not show how to query the value. &nbsp;</p>
<p>I have been asking for 10 years for the documentation of everything that can be SET to also describe how to find the current value. &nbsp;I see that this has been done for some of the SQL documentation. &nbsp;Yay! &nbsp;Some of the doc teams have implemented some of my suggestions over the years, and I think the docs are better. &nbsp;:-)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-wndsks even thread-even depth-1" id="comment-1180673">
				<div id="div-comment-1180673" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/skSdnW' rel='external nofollow' class='url'>skSdnW</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150319-00/?p=44433#comment-1180673">
			March 19, 2015 at 8:12 am</a>		</div>

		<p>IIRC the SetWindowSubclass functions in comctl32 bumps (used to bump?) the SetProp atom refcounts. Not sure if it is done because of old Win9x atom bugs or as a defense against buggy apps. I&#39;m sure you know the inside story here Raymond?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1180703">
				<div id="div-comment-1180703" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Adrian</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150319-00/?p=44433#comment-1180703">
			March 19, 2015 at 11:07 am</a>		</div>

		<p>Is there a way to get a list of the registered window messages? &nbsp;When the resource does get depleted, it would be helpful to get a hint as to who the culprit is. &nbsp;Spy++ can show them when one is sent or posted, but it doesn&#39;t seem to offer a list of registered ones.</p>
<p>I&#39;ve read claims that registered window messages and registered clipboard formats are in the same space, and that you therefore can use the clipboard API to figure out the text for a given registered window message. &nbsp;Clearly, that&#39;s an undocumented detail that shouldn&#39;t be relied upon because it might change in a new version of Windows. &nbsp;But is that how Spy++ does it? &nbsp;Or is there an approved API that I&#39;m missing in my searches?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1180713">
				<div id="div-comment-1180713" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">SimonRev</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150319-00/?p=44433#comment-1180713">
			March 19, 2015 at 11:58 am</a>		</div>

		<p>I don&#39;t know of such a way Adrian, but if Spy++ can do it, all you have to do is send every message in the registered message space to a window you are spying on and you should get that list, if inelegantly.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1180723">
				<div id="div-comment-1180723" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">laonianren</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150319-00/?p=44433#comment-1180723">
			March 19, 2015 at 1:34 pm</a>		</div>

		<p>@JamesJohnston It&#39;s not just Visual C++&#39;s competitors. &nbsp;Every time you launch Visual C++ 2010 the main Window gets a class name containing a new GUID.</p>
<p>Window class names seem to be stored in the same atom table as message and clipboard format names.</p>
<p>Restarting Visual Studio (or any WPF app) will eventually exhaust the atom table.</p>
<div class="post">[<em>Those atoms will be cleaned up when the class is unregistered. Even if the app crashes or exits without calling UnregisterClass (admit it, you don&#39;t either), the window manager will unregister on the app&#39;s behalf. -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1180733">
				<div id="div-comment-1180733" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">SimonRev</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150319-00/?p=44433#comment-1180733">
			March 19, 2015 at 2:02 pm</a>		</div>

		<p>@Iaonianren: &nbsp;Only if they fail to call UnregisterClass after destroying the main window AND RegisterClass was called from a DLL and not the main EXE. &nbsp;[If Visual Studio crashes on the order of 16,000 times in a single session of Windows, you have bigger problems :)]</p>
<p>Actually using a GUID is a decent way to ensure that no one is squatting on your class name.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1180743">
				<div id="div-comment-1180743" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">laonianren</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150319-00/?p=44433#comment-1180743">
			March 19, 2015 at 2:22 pm</a>		</div>

		<p>Mea culpa. &nbsp;I wrote some code to try this out, and I did test to see if class names were deleted, but I used the same name I&#39;d previously used to test if windows message names and class names were in the same atom table. &nbsp;And obviously that name didn&#39;t get deleted&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1180753">
				<div id="div-comment-1180753" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Paradice</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150319-00/?p=44433#comment-1180753">
			March 19, 2015 at 9:36 pm</a>		</div>

		<p>Whenever I see a Raymond post about &quot;actually, this limit is never a problem in practice&quot;, I get a little hesitant about jumping into the comments section &#8211; more often than not, someone has built a terrible design and has hit whatever limit is being discussed.</p>
<p>Thankfully, not the case this time!</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1180763">
				<div id="div-comment-1180763" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Neil</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150319-00/?p=44433#comment-1180763">
			March 20, 2015 at 4:08 am</a>		</div>

		<p>In Win16, RegisterClipboardFormat and RegisterWindowMessage even have the same address.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1180773">
				<div id="div-comment-1180773" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Roger H&#229;gensen</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150319-00/?p=44433#comment-1180773">
			March 20, 2015 at 5:32 am</a>		</div>

		<p>What about a system using Hybernation instead of cold starting, eventually it will use up all messages right? What happens then?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1180783">
				<div id="div-comment-1180783" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Random832</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150319-00/?p=44433#comment-1180783">
			March 20, 2015 at 6:06 am</a>		</div>

		<p>@Neil Not just in Win16. I can&#39;t find any information on whether this equivalency is documented, though.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1180793">
				<div id="div-comment-1180793" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Yukkuri</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150319-00/?p=44433#comment-1180793">
			March 20, 2015 at 6:37 am</a>		</div>

		<p>This is my favorite thing about The Old New Thing: stories about how incredibly wrong people make their software</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1180803">
				<div id="div-comment-1180803" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">SimonRev</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150319-00/?p=44433#comment-1180803">
			March 20, 2015 at 6:50 am</a>		</div>

		<p>About the statement &quot;Even if the app crashes or exits without calling UnregisterClass&quot;: &nbsp;</p>
<p>From MSDN we can see &quot;No window classes registered by a DLL are unregistered when the DLL is unloaded. A DLL must explicitly unregister its classes when it is unloaded.&quot;</p>
<p>It seems highly likely that since the examples in question are WPF windows, that RegisterClass is being called from a DLL. &nbsp;The way I parse that sentence from MSDN would mean that an application crash would leak an atom.</p>
<div class="post">[<em>The automatic unregistration happens at process termination, not DLL unload. -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1180813">
				<div id="div-comment-1180813" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Csaboka</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150319-00/?p=44433#comment-1180813">
			March 20, 2015 at 7:00 am</a>		</div>

		<p>Roger Hågensen: Eventually, Windows Update will find a patch that requires a restart, and the full restart after the installation will clean up the message table, among other things. :D</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1180863">
				<div id="div-comment-1180863" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Sven2</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150319-00/?p=44433#comment-1180863">
			March 20, 2015 at 3:30 pm</a>		</div>

		<p>Well, let&#39;s play &quot;defend the theoretical problem&quot;: Let&#39;s say you never reboot your computer but always just hibernate for three months and there happens to be no update that requires a reboot during the two patch days.</p>
<p>Let&#39;s also assume that you work e.g. as some kind of software compatibility tester (or game reviewer, etc.) and you install, test and uninstall 20 new programs every day.</p>
<p>Then after 90 days (you work every weekend), you have run 1800 programs. If each program registered just 10 messages, you will run out of messages!</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-fjeldse even thread-even depth-1" id="comment-1180873">
				<div id="div-comment-1180873" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Erik+F' rel='external nofollow' class='url'>Erik F</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150319-00/?p=44433#comment-1180873">
			March 20, 2015 at 3:55 pm</a>		</div>

		<p>@Sven2: If you&#39;re installing and uninstalling that many programs a day, exactly what kind of testing would you manage to complete? In an 8-hour day, you&#39;d have 24 minutes per program to install, test and uninstall each program. Seems unlikely. Anyways, I can&#39;t think of a good reason for every program in existence to register window messages; the standard messages work for most uses.</p>
<p>(Also, allowing for resource leakage you&#39;d probably have to log out and back in every once in a while, which would release all of those registered window messages!)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1180853">
				<div id="div-comment-1180853" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Gabe</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150319-00/?p=44433#comment-1180853">
			March 20, 2015 at 12:03 pm</a>		</div>

		<p>Roger Hågensen: The idea that Raymond was trying to get across is that any given application will (or should!) always use the same messages, no matter how many times it is executed.</p>
<p>The only way to run out of messages is to run apps that combine to use over 16,000 different messages. If you have an app that has 100 messages and you run it more than 160 times, you won&#39;t run out of messages because it will still only be using the same 100 messages as the first time you ran it.</p>
<p>So in order to run out of messages, either have some app that registers *new* messages every time it is executed (perhaps caused by a bug in the runtime as others have noted), run hundreds (or more likely thousands) of different apps, or have some app(s) registering thousands of different messages.</p>
<p>Since 100 messages is an order of magnitude more than a typical app registers and 160 apps is an order of magnitude more than a typical user runs, it is very rare to run out of messages and hence deregistering them is unnecessary.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1180893">
				<div id="div-comment-1180893" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">640k</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150319-00/?p=44433#comment-1180893">
			March 21, 2015 at 11:34 pm</a>		</div>

		<p>Why is the limit less that physical RAM + swap?</p>
<div class="post">[<em>Pigeonhole principle. -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1180913">
				<div id="div-comment-1180913" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Gabe</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150319-00/?p=44433#comment-1180913">
			March 21, 2015 at 11:47 pm</a>		</div>

		<p>Sven2: It&#39;s hard to imagine being able to install and uninstall hundreds of different programs without a single one requiring a reboot or logout!</p>
<p>Even if you did manage to find such programs, what are the odds that your system won&#39;t have a single Windows update requiring a reboot during those several months?</p>
<p>Furthermore, I doubt that actual programs average anywhere close to 10 unique window messages and clipboard formats. I&#39;m guessing the average is less than 1, even.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1180933">
				<div id="div-comment-1180933" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">JamesJohnston</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150319-00/?p=44433#comment-1180933">
			March 23, 2015 at 4:54 am</a>		</div>

		<p>@laonianren: &nbsp;Raymond already said those atoms will be cleaned up; to quote RegisterClass from MSDN: &nbsp;&quot;All window classes that an application registers are unregistered when it terminates.&quot;</p>
<p>In contrast, the VC++ competitor in question calls GlobalAddAtom directly (I checked the source code). &nbsp;There is a cleanup function that calls GlobalDeleteAtom if the application properly terminates. &nbsp;However if the application crashes, GlobalDeleteAtom won&#39;t be called and the atoms are leaked: &nbsp;&quot;Global atoms are not deleted automatically when the application terminates.&quot;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1180943">
				<div id="div-comment-1180943" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">JamesJohnston</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150319-00/?p=44433#comment-1180943">
			March 23, 2015 at 4:57 am</a>		</div>

		<p>@640k: &nbsp;If you examine the history behind your own name, I think you will learn the reason why. ;)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1181083">
				<div id="div-comment-1181083" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua A. Schaeffer</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150319-00/?p=44433#comment-1181083">
			March 24, 2015 at 2:03 am</a>		</div>

		<p>So you can basically maliciously lock other apps out with while(1) RegisterWindowMessage(&#8230;); ?</p>
<div class="post">[<em>If you have desktop access, then you can maliciously lock out other apps by calling TerminateProcess on them. -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>