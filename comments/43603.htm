<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (14)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-1162233">
				<div id="div-comment-1162233" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">acq</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20141117-00/?p=43603#comment-1162233">
			November 17, 2014 at 7:36 am</a>		</div>

		<p>Anybody knows how I can disable on the computer to which the client is being connected to see any smartcards, ports, drives or PnP devices from the clients?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1162243">
				<div id="div-comment-1162243" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">acq</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20141117-00/?p=43603#comment-1162243">
			November 17, 2014 at 7:46 am</a>		</div>

		<p>The answer to my previous question:</p>
<p><a rel="nofollow" target="_new" href="http://technet.microsoft.com/en-us/library/cc770631.aspx">technet.microsoft.com/&#8230;/cc770631.aspx</a></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1162253">
				<div id="div-comment-1162253" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20141117-00/?p=43603#comment-1162253">
			November 17, 2014 at 10:15 am</a>		</div>

		<p>Gee looks like readdir. See man 2 readdir. Most of the time you expect to see this handled for you in system libraries but oh well.</p>
<div class="post">[<em>Most enumeration problems look like readdir. Not because readdir is primordial, but because most enumeration problems look the same. -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1162263">
				<div id="div-comment-1162263" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20141117-00/?p=43603#comment-1162263">
			November 17, 2014 at 10:52 am</a>		</div>

		<p>FindFirstFile/FindNextFile/FindClose do not require 2 loops, nor does the library call as seen in man 3 readdir. Shrug.</p>
<div class="post">[<em>Wait, you said man 2 readdir, and man 2 readdir does require two loops. (Since it can return multiple dirents.) -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1162273">
				<div id="div-comment-1162273" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Harald van Dijk</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20141117-00/?p=43603#comment-1162273">
			November 17, 2014 at 1:25 pm</a>		</div>

		<p>&gt; [Wait, you said man 2 readdir, and man 2 readdir does require two loops. (Since it can return multiple dirents.) -Raymond]</p>
<p>The readdir(2) page reads &quot;The argument count is ignored; at most one old_linux_dirent structure is read.&quot; The API appears as if it has been different in the past. If it was different in the past, then the API suggests that an inner loop could have been avoided, even for old kernels, by setting count to 1, which would ensure that at most one entry got returned.</p>
<p>The same applies to WNetEnumResource: the inner loop should be avoidable by setting lpcCount to 1. That would probably be a subobtimal use of the function, but if someone (such as Joshua) is more comfortable calling it like that, there does not appear to be anything stopping such use.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1162283">
				<div id="div-comment-1162283" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20141117-00/?p=43603#comment-1162283">
			November 17, 2014 at 2:25 pm</a>		</div>

		<p>&gt; The API appears as if it has been different in the past.</p>
<p>And so it was. Wow I didn&#39;t notice it had been reduced to assuming 1 now. Been so long since I called it directly.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-hardon even thread-even depth-1" id="comment-1162293">
				<div id="div-comment-1162293" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/gdalsnes' rel='external nofollow' class='url'>gdalsnes</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20141117-00/?p=43603#comment-1162293">
			November 17, 2014 at 3:31 pm</a>		</div>

		<p>I wish all enums used callbacks, like EnumWindows.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-harry-johnston odd alt thread-odd thread-alt depth-1" id="comment-1162303">
				<div id="div-comment-1162303" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Harry+Johnston' rel='external nofollow' class='url'>Harry Johnston</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20141117-00/?p=43603#comment-1162303">
			November 17, 2014 at 3:44 pm</a>		</div>

		<p>Rats. &nbsp;I was hoping to find out how to get a list of remembered (but not currently connected) drive mappings.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1162343">
				<div id="div-comment-1162343" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joker_vD</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20141117-00/?p=43603#comment-1162343">
			November 18, 2014 at 12:13 am</a>		</div>

		<p>That&#39;s kind of weird to see a function that takes an array of NETRESOURCE to fill as LPVOID instead of LPNETRESOURCE, and the size is counted in bytes, not in NETRESOURCEs. It&#39;s not that NETRESOURCE has variable length, so why is this the way it is? </p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1162363">
				<div id="div-comment-1162363" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Agares</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20141117-00/?p=43603#comment-1162363">
			November 18, 2014 at 12:58 am</a>		</div>

		<p>Why the hell would ERROR_MORE_DATA status have word &quot;error&quot; in it&#39;s name?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1162373">
				<div id="div-comment-1162373" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Harald van Dijk</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20141117-00/?p=43603#comment-1162373">
			November 18, 2014 at 2:20 am</a>		</div>

		<p>&gt; Why the hell would ERROR_MORE_DATA status have word &quot;error&quot; in it&#39;s name?</p>
<p>Because ERROR_MORE_DATA indicates that the function was unable to fulfill your request. You requested all items. You didn&#39;t get all items. The reason why you didn&#39;t get all items is because there is more data that could not be written into the provided buffer.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1162393">
				<div id="div-comment-1162393" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Neil</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20141117-00/?p=43603#comment-1162393">
			November 18, 2014 at 6:49 am</a>		</div>

		<p>In the extreme case you can ask how big the buffer should be and the provider will say &quot;dunno&#8230; you need at least N to fit in the array itself&quot; so you ask it &quot;will a buffer of size N do&quot; and it says &quot;no, you need this much for all the strings too&quot;.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1162353">
				<div id="div-comment-1162353" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Graham</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20141117-00/?p=43603#comment-1162353">
			November 18, 2014 at 12:52 am</a>		</div>

		<p>@Joker_vD</p>
<p>The docs say that the buffer stores not only the NETRESOURCE structures, but also the strings pointed to by those structures, so the size of the buffer is greater than simply sizeof(NETRESOURCE) * cEntries. I would guess it&#39;s done that way to avoid needing a separate &quot;free the strings in the returned NETRESOURCE&quot; structures.</p>
<p>The function could simply allocate the strings, keep track of the allocations and return an array of just NETRESOURCEs as you suggest, and then free all the strings during the call to WNetCloseEnum, but I suspect this function dates from the Windows 3.1 times when memory was really precious, and keeping a copy of everything the application enumerated (if you&#39;re enumerating all the computers in a domain, it can be a *lot* of data) was a bad idea.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1162893">
				<div id="div-comment-1162893" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Marc K</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20141117-00/?p=43603#comment-1162893">
			November 20, 2014 at 7:04 am</a>		</div>

		<p>&gt; Little Programs do little to no error checking.</p>
<p>I&#39;ve found &quot;Enterprise&quot; programs tend to be the same way as well.</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>