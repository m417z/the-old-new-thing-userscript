<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (10)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-639043">
				<div id="div-comment-639043" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Narr</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080616-00/?p=21943#comment-639043">
			June 16, 2008 at 2:10 pm</a>		</div>

		<blockquote><p>
  the ANSI code page is CP_ACP. That&#8217;s what ACP stands for, after all.
</p></blockquote>
<p>Presumably you mean CODE_PAGE_CP_ACP?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-639063">
				<div id="div-comment-639063" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">mikeb</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080616-00/?p=21943#comment-639063">
			June 16, 2008 at 3:21 pm</a>		</div>

		<blockquote><p>
  &gt; Presumably you mean CODE_PAGE_CP_ACP?
</p></blockquote>
<p>CP_ACP is defined in winnls.h &#8211; I can&#8217;t find a declaration for CODE_PAGE_CP_ACP</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-dean-harding even thread-even depth-1" id="comment-639093">
				<div id="div-comment-639093" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Dean+Harding' rel='external nofollow' class='url'>Dean Harding</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080616-00/?p=21943#comment-639093">
			June 16, 2008 at 7:26 pm</a>		</div>

		<p>Actually, he does say it&#8217;s running on a Traditional Chinese system. I think my point is still valid, though &#8212; in my experience it&#8217;s usually that the program is expecting CP_ACP to be something when in reality it&#8217;s actually something else (my wife is Korean, so I see lots of programs expecting a Korean CP_ACP, when my computer is English).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-dean-harding odd alt thread-odd thread-alt depth-1" id="comment-639083">
				<div id="div-comment-639083" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Dean+Harding' rel='external nofollow' class='url'>Dean Harding</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080616-00/?p=21943#comment-639083">
			June 16, 2008 at 7:20 pm</a>		</div>

		<p>My guess for Chris&#8217;s problem is probably that the Chinese app was running on a English (US) computer (or something that *wasn&#8217;t* Chinese) so you end up getting gibberish. Basically, CP_ACP is set to English, but the application was assuming that CP_ACP was set to Chinese.</p>
<p>You can use the AppLocale[1] tool from Microsoft to &quot;trick&quot; the application into thinking it&#8217;s running with CP_ACP set to Chinese.</p>
<p>[1] <a rel="nofollow" target="_new" href="http://www.microsoft.com/globaldev/tools/apploc.mspx" rel="nofollow">http://www.microsoft.com/globaldev/tools/apploc.mspx</a></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-639173">
				<div id="div-comment-639173" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Medinoc</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080616-00/?p=21943#comment-639173">
			June 17, 2008 at 4:12 am</a>		</div>

		<p>Hello,</p>
<p>I&#8217;ve noticed in the MultiByteToWideChar documentation that Windowss 2000 and later support CP_THREAD_ACP additionally to CP_ACP.</p>
<p>Do the common controls still use CP_ACP, or CP_THREAD_ACP instead ?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-639183">
				<div id="div-comment-639183" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Nawak</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080616-00/?p=21943#comment-639183">
			June 17, 2008 at 7:32 am</a>		</div>

		<blockquote><p>
  &gt; Presumably you mean CODE_PAGE_CP_ACP?</p>
<p>  CP_ACP is defined in winnls.h &#8211; I can&#8217;t find a declaration for CODE_PAGE_CP_ACP
</p></blockquote>
<p>Mike, I think that was a joke on the redundancy of CP_ACP :)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-639293">
				<div id="div-comment-639293" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Chris Becke</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080616-00/?p=21943#comment-639293">
			June 17, 2008 at 2:41 pm</a>		</div>

		<p>At the time I posted the question I had a bad understanding of how a fonts character-set selection would influence GDI&#8217;s later selection of codepage.</p>
<p>The situation was, I was embedding a listview control in a standard dialog box. I can&#8217;t remember what font was chosen &#8211; which is a problem because it is likely meaningful to this question.</p>
<p>I then loaded some strings froma string table and added the strings to some STATIC, EDIT and ListView controls using the relevent ANSI APIs.</p>
<p>All the user32 controls displayed the text correctly. The ListView however displayed a string that was corrupt in places :- when I explored using LocaleExplorer the result was consistent with interpreting the string using the other chinese codepage.</p>
<p>We solved the problem ultimately by fixing the font, but i was intreuged as to why the ListView &#8211; on that particular windows / language combo &#8211; was second guessing the codepage i&#8217;d use to be something other than CP_ACP.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-639733">
				<div id="div-comment-639733" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">640k</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080616-00/?p=21943#comment-639733">
			June 19, 2008 at 3:37 am</a>		</div>

		<p>The console subsystem isn&#8217;t even unicode for .net console output. You should be happy if it manage to output 8-bit ansi.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-639923">
				<div id="div-comment-639923" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Dan</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080616-00/?p=21943#comment-639923">
			June 19, 2008 at 2:40 pm</a>		</div>

		<p>The console can&#8217;t support Unicode, not even UTF-8, since this would break some apps. &nbsp;In DOS there is ASCII (byte values 0 &#8211; 127) which maps directly to UTF-8. &nbsp;However with UTF-8 anything past there is different from ASCII. &nbsp;UTF-8 only uses it for non-English letters, math symbols, etc, but in DOS text environments you didn&#8217;t have GUIs so there were also block and line characters you could use to create nice-looking text interfaces.</p>
<p>Since some DOS programs use these still you can&#8217;t drop Unicode support into the console font and the console since output from Windows and DOS apps can be on the console at once, and some DOS apps use the &quot;extended ASCII&quot; character and your Windows apps would use UTF-8&#8230; one of them would end up looking ugly and broken.</p>
<p>At least that&#8217;s what I understand it to be given my limited understanding of Unicode and NTVDM.</p>
<p>I don&#8217;t know when Unicode was first widely used but MS only introduced Unicode support at an OS-level with NT. &nbsp;With 9x/ME to provide Unicode support to an app you needed to bundle unicows.dll (Microsoft Layer for Unicode).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-640103">
				<div id="div-comment-640103" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blogs.msdn.com/michkap/archive/2008/06/19/8620349.aspx' rel='external nofollow' class='url'>Sorting it all Out</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080616-00/?p=21943#comment-640103">
			June 19, 2008 at 7:24 pm</a>		</div>

		<p>The other day, Raymond Chen blogged about How do the common controls convert between ANSI and Unicode?</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>