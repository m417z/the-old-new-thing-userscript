<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (20)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-1198101">
				<div id="div-comment-1198101" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20151016-00/?p=91341#comment-1198101">
			October 16, 2015 at 7:12 am</a>		</div>

		<p>That&#39;s the hard way. OpenProcess() DuplicateHandleEx() GetFinalPathNabeByHandle() MessageBox()</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1198091">
				<div id="div-comment-1198091" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Henke37</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20151016-00/?p=91341#comment-1198091">
			October 16, 2015 at 7:12 am</a>		</div>

		<p>Of course, by the time the world sees this post, the debugger team has already added the name resolving to the debugger. But it&#39;s the spirit of the problem that matters.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1198081">
				<div id="div-comment-1198081" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Mason Wheeler</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20151016-00/?p=91341#comment-1198081">
			October 16, 2015 at 7:15 am</a>		</div>

		<p>What debugger is this? &nbsp;Why doesn&#39;t it have the ability to call functions as a standard feature, and why are we using it when there are plenty of debuggers that do? (Including the one in Visual Studio.)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1198071">
				<div id="div-comment-1198071" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ian</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20151016-00/?p=91341#comment-1198071">
			October 16, 2015 at 7:26 am</a>		</div>

		<p>@Mason Raymond is teaching us how stuff works. You are free to do it the easy way without needing to understand what&#39;s really going on if you want to.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1198061">
				<div id="div-comment-1198061" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Falcon</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20151016-00/?p=91341#comment-1198061">
			October 16, 2015 at 7:27 am</a>		</div>

		<p>Exercise answer: The code being debugged is about to execute the &quot;xor eax,eax&quot; instruction, which will trash rax and flags.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-mngoldeneagle odd alt thread-odd thread-alt depth-1" id="comment-1198051">
				<div id="div-comment-1198051" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/MNGoldenEagle' rel='external nofollow' class='url'>MNGoldenEagle</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20151016-00/?p=91341#comment-1198051">
			October 16, 2015 at 7:27 am</a>		</div>

		<p>@Mason Wheeler: This is windbg, which is pretty much the only debugger you can use to debug in kernel space (drivers, minifilters, etc.). &nbsp;I think most sane application developers would avoid windbg as much as possible, though it is definitely a powerful tool.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1198031">
				<div id="div-comment-1198031" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">pm100</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20151016-00/?p=91341#comment-1198031">
			October 16, 2015 at 8:28 am</a>		</div>

		<p>&quot;Now, if Get­Final­Path­Name­By­Handle were a function you had written,&quot;</p>
<p>Why does it matter who wrote the function? What the net technical difference between a function in my code vs something in a loaded DLL</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1198011">
				<div id="div-comment-1198011" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Pietro Gagliardi (andlabs)</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20151016-00/?p=91341#comment-1198011">
			October 16, 2015 at 8:54 am</a>		</div>

		<p>@Joshua: sure, if you&#39;re writing code. Sometimes you want to call functions in the debugger, to do quick tests for things. I&#39;ve done it a number of times (not on Windows, but the point is the same).</p>
<p>@Mason, @pm100 &#8211; the debugger described *can* call functions. That&#39;s what Raymond told us: &quot;you could just use the .call command&quot;. But the debugger only knows how to set up a call frame for the functions that it has debugging information about, and most of the time that means &quot;your code only&quot;. And the debugger needs to know how to set up a stack frame, because all the world is not stdcall.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1198001">
				<div id="div-comment-1198001" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Lars</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20151016-00/?p=91341#comment-1198001">
			October 16, 2015 at 10:15 am</a>		</div>

		<p>@Pietro: Aha, so the situation would be different if one downloaded the symbols from the MS symbol server? That&#39;s not what I (and several others, it seems) took away from Raymond&#39;s exposition. I thought the core difference was the function living in a DLL vs. in the main executable. Otherwise Raymond would&#39;ve mentioned the symbol server.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1197951">
				<div id="div-comment-1197951" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Darek</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20151016-00/?p=91341#comment-1197951">
			October 16, 2015 at 12:41 pm</a>		</div>

		<p>@Lars: The MS symbol server only has the public symbols, which do not contain enough information for .call to work (no info about function parameters, just the FPO).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1197931">
				<div id="div-comment-1197931" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Josh Bowman</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20151016-00/?p=91341#comment-1197931">
			October 16, 2015 at 1:38 pm</a>		</div>

		<p>It&#39;s worth pointing out that any IT professional worth his salt should know his way around WinDbg, in order to be able to solve seemingly intractable problems directly on a customer&#39;s machine. This is yet another tool I&#39;ll stick in my bag. It&#39;s not just developers that need debuggers, though I did come to IT from development, so it&#39;s not as much of a mystery.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1197921">
				<div id="div-comment-1197921" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Don't Go Trashing My Flags</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20151016-00/?p=91341#comment-1197921">
			October 16, 2015 at 1:46 pm</a>		</div>

		<p>This trick only works on code that conforms to the ABI. The ABI is stupid. In order for a function to return a simple true/false &#8211; which, of course, the FLAGS register could do in a single bit &#8211; the ABI demands we use an entire 64-bit register&#8230; and, to add insult to injury, the compiler will use only the low 8 bits! That&#39;s wasting over 80% of the bits right there&#8230; but, since you really only need one bit, that&#39;s a 200% increase in bit-usage &#8211; PER YEAR &#8211; over the last three decades!! STOP THE MADNESS. &nbsp;RESPECT THE FLAGS.</p>
<div class="post">[<em>There&#39;s also 64 bits of unused space in the RCX, RDX, R8, R9, R10, R11, XMM0, XMM1, XMM2, XMM3, XMM4, and XMM5 registers, Plus the home space on the stack that could be used to return additional values. That&#39;s a total of 1472 bits wasted. WASTED! Plus in the flags register, you have C, P, A, Z, S, D, O flags available. Why not use them all? -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1197901">
				<div id="div-comment-1197901" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Martin Bonner</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20151016-00/?p=91341#comment-1197901">
			October 17, 2015 at 12:02 am</a>		</div>

		<p>@Don&#39;t Go Trashing My Flags: &nbsp;How would you call such a function from a language that doesn&#39;t _have_ a single bit type? &nbsp;In particular, how would you call such a function from C89 (which was pretty much the dominant language for this sort of thing when the x64 ABI was defined).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1197891">
				<div id="div-comment-1197891" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Carl Mess</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20151016-00/?p=91341#comment-1197891">
			October 17, 2015 at 9:47 am</a>		</div>

		<p>I think SoftIce, WinIce did this too. Anyways way to go Raymond I always find very interesting this kinds of analysis about functions, calling conventions and stack preparation.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-fredericmagnyf even thread-even depth-1" id="comment-1197851">
				<div id="div-comment-1197851" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Medinoc' rel='external nofollow' class='url'>Medinoc</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20151016-00/?p=91341#comment-1197851">
			October 19, 2015 at 1:42 am</a>		</div>

		<p>Won&#39;t the first solution run into the desynch stack problem?</p>
<p><a href="http://blogs.msdn.com/b/oldnewthing/archive/2004/12/16/317157.aspx" rel="nofollow" target="_new">blogs.msdn.com/&#8230;/317157.aspx</a></p>
<div class="post">[<em>The context switch out of the app into the debugger already broke the return address predictor. -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1197841">
				<div id="div-comment-1197841" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">AlexShalimov</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20151016-00/?p=91341#comment-1197841">
			October 19, 2015 at 6:05 am</a>		</div>

		<p>How does this method (and Get­Final­Path­Name­By­Handle) work with hardlinks? It basically means that a file has several equal names; which one is returned?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-fredericmagnyf even thread-even depth-1" id="comment-1197821">
				<div id="div-comment-1197821" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Medinoc' rel='external nofollow' class='url'>Medinoc</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20151016-00/?p=91341#comment-1197821">
			October 19, 2015 at 7:03 am</a>		</div>

		<p>@AlexShalimov: If it&#39;s done well, it will be the one that was used to open it, I&#39;d guess.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-wndsks odd alt thread-odd thread-alt depth-1" id="comment-1197731">
				<div id="div-comment-1197731" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/skSdnW' rel='external nofollow' class='url'>skSdnW</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20151016-00/?p=91341#comment-1197731">
			October 20, 2015 at 3:53 am</a>		</div>

		<p>@Medinoc: You can also open files by their file id so in some instances it has to just pick one&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1197631">
				<div id="div-comment-1197631" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Nick</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20151016-00/?p=91341#comment-1197631">
			October 20, 2015 at 2:22 pm</a>		</div>

		<p>Now I want to know how to do it in Itanium. ;)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1197521">
				<div id="div-comment-1197521" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">GWO</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20151016-00/?p=91341#comment-1197521">
			October 21, 2015 at 7:44 am</a>		</div>

		<p>ls -l /proc/&lt;PID&gt;/fd/&lt;handle&gt; &nbsp;</p>
<p>Ta Da!</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>