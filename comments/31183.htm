<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (19)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-381113">
				<div id="div-comment-381113" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Father Time</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060516-17/?p=31183#comment-381113">
			May 16, 2006 at 10:02 am</a>		</div>

		<p>This didn&#8217;t post until 07:02. &nbsp;Check the server&#8217;s time!!!</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-patriotb odd alt thread-odd thread-alt depth-1" id="comment-381173">
				<div id="div-comment-381173" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">PatriotB</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060516-17/?p=31183#comment-381173">
			May 16, 2006 at 11:32 am</a>		</div>

		<p>Hmm, maybe Raymond manually changed the post time, as it says 7:00 on my screen&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-381213">
				<div id="div-comment-381213" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">ssss</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060516-17/?p=31183#comment-381213">
			May 16, 2006 at 2:13 pm</a>		</div>

		<p>raymond why the hell did you use</p>
<p>_IsNonwritableInCurrentImage</p>
<p>in CRT&#8217;s code??? Now most of exe-packers wont be able to compress VS8 executables, another great idea from MS, to kill its own market.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-381253">
				<div id="div-comment-381253" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Adam G</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060516-17/?p=31183#comment-381253">
			May 16, 2006 at 2:31 pm</a>		</div>

		<p>People are still using exe packers? What a terrible thought.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-381283">
				<div id="div-comment-381283" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">-</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060516-17/?p=31183#comment-381283">
			May 16, 2006 at 4:38 pm</a>		</div>

		<blockquote><p>
  People are still using exe packers? What a terrible thought.</p>
<p>As opposed to worse compression (.ZIP) or installers? Anytime.</p>
<p>As long as you don&#8217;t have to share code, it&#8217;s a great idea; with disk I/O being so slow and CPUs so fast, it&#8217;s often a speedup. Granted the extracted image will have to be paged back to the swapfile on memory pressure, but it&#8217;s usually a speedup. (Relocated DLLs are a much bigger problem with everyone using 0x10000000 as the base address and MS shipping several system DLLs with 0x20000000)</p>
<p>There are still many applications distributed packed. uTorrent and VirtualDub come to mind.
</p></blockquote>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-dean-harding odd alt thread-odd thread-alt depth-1" id="comment-381303">
				<div id="div-comment-381303" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Dean+Harding' rel='external nofollow' class='url'>Dean Harding</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060516-17/?p=31183#comment-381303">
			May 16, 2006 at 7:19 pm</a>		</div>

		<p>How on earth could an exe packer give you better compression than a standalone compressor? You&#8217;ve got to at least include the unpacking program uncompressed with your data, so if the algorithm it uses is so great, why wouldn&#8217;t you just include the decompressor separately, unpack the exe once and delete the decompressor?</p>
<p>Once you&#8217;ve unpacked the executable, there&#8217;s no reason to keep it compressed (and plenty of reasons not to)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-381313">
				<div id="div-comment-381313" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Richard McNally</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060516-17/?p=31183#comment-381313">
			May 16, 2006 at 7:59 pm</a>		</div>

		<p>Another quick overview that attmpts to assist in the digestion of those documents is given by Kevin Frei (<a rel="nofollow" target="_new" href="http://blogs.msdn.com/freik/archive/2005/03/17/398200.aspx" rel="nofollow">http://blogs.msdn.com/freik/archive/2005/03/17/398200.aspx</a>)</p>
<p>I don&#8217;t think that &#8216;-&#8216; is suggesting that a packer will achieve better compression than a standalone compressor. What I think he&#8217;s suggesting is that you could speed up load time.</p>
<p>This would be possible because with a seperate compressor you still end up having to load an uncomressed image off the disk to execute it. On the other hand a packed EXE could expand itself directly into memory and execute pass execution to its uncompressed version.</p>
<p>I&#8217;m not sure it would be worth it though, it&#8217;d probably mean that you have to do some extra work, either calling GetProcAddress a whole bunch of times or implementing some kind of indirect calling scheme for imported functions.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-381323">
				<div id="div-comment-381323" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Mike</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060516-17/?p=31183#comment-381323">
			May 16, 2006 at 8:12 pm</a>		</div>

		<p>Any clues as to why the x64 compiler doesn&#8217;t support inline assembler? &nbsp;I realize you&#8217;re not on the compiler team. &nbsp;This makes it difficult to use for OS dev&#8230; &nbsp;but tell whoever&#8217;s responsible thanks for all those useful intrinsics!</p>
<p>Mike</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-381333">
				<div id="div-comment-381333" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Starfish</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060516-17/?p=31183#comment-381333">
			May 16, 2006 at 8:22 pm</a>		</div>

		<p>Regarding EXE packers, what about copy protection systems like Armadillo?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-381353">
				<div id="div-comment-381353" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">ssss</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060516-17/?p=31183#comment-381353">
			May 16, 2006 at 9:17 pm</a>		</div>

		<p>Adam G. where were you in the past 10 years???</p>
<p>Get real man, now most of the software (shareware, freeware, even spyware) is packed/protected, even video codecs are protected by exe-protectors and this is common practice.</p>
<p>And MS with each new OS is trying to make harder and harder to deploy this wonderful software by adding some unnecessary code checks (which can be easily bypassed) while at the same time they&#8217;re doing completly stupid things (like a lame DEP patch in WinXP kernel for aspack/starforce/safedisc applications).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-381403">
				<div id="div-comment-381403" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">josh</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060516-17/?p=31183#comment-381403">
			May 16, 2006 at 11:23 pm</a>		</div>

		<p>Officially, I believe anything using the VC8 runtime MUST use an installer anyway. &nbsp;Have to add the CRT to the SxS assemblies doodad.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-381413">
				<div id="div-comment-381413" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.virtualdub.org/' rel='external nofollow' class='url'>Phaeron</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060516-17/?p=31183#comment-381413">
			May 17, 2006 at 12:12 am</a>		</div>

		<p>There are compression algorithms specific to binary code that are not always used by general purpose compressors. I believe the Windows 95 compressor attempted to detect and compress relative branches as though they were absolute. And it is not always desirable or even possible to have a separate installer, or to cache the uncompressed copy in persistent storage.</p>
<p>I was under the impression that the x64 ABI information in the DDK was out of date compared to the SWConventions.doc file in the Bin/win64/x86/AMD64 folder of the Platform SDK. Is this incorrect? SWConventions.doc appears to be newer and has more information. For instance, the DDK says that x87/MMX registers are preserved across context switches; the PSDK clarifies this by saying that they are unusable in kernel mode, but preserved and merely unspecified for user mode. Testing shows that the registers are indeed preserved in user mode. Also, the DDK makes no mention of the requirement for hot-patchable functions (2-byte first instruction + 6 unused bytes prior).<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-381443">
				<div id="div-comment-381443" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Antonio Vargas</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060516-17/?p=31183#comment-381443">
			May 17, 2006 at 3:31 am</a>		</div>

		<p>pourpose-made exe packer: <a rel="nofollow" target="_new" href="http://www.crinkler.net/" rel="nofollow">http://www.crinkler.net/</a></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-381653">
				<div id="div-comment-381653" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">-</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060516-17/?p=31183#comment-381653">
			May 17, 2006 at 11:27 am</a>		</div>

		<p>Yes, I was implying good EXE packers will defeat ZIP. Why compare against ZIP? Because ZIP is what everybody will be able to decompress.</p>
<p>EXE packers have entropy reduction filters such as jump converters (as Phaeron said) and have a specialized algorithm specially targeted towards code. See UPX, it beats ZIP every time (even including the decompressor stub, which is tiny).</p>
<p>Of course there are better compressors, for example both RAR and 7z do have filters for executables, that when combined with their robust general-purpose compression algorithms will give better compression. But you need to either have an application that decompresses them, or make a SFX (self-extractor) (And usually the SFX module is packed too!)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-381673">
				<div id="div-comment-381673" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blogs.msdn.com/matt_pietrek/archive/2006/05/17/599998.aspx' rel='external nofollow' class='url'>Under The Hood - Matt Pietrek</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060516-17/?p=31183#comment-381673">
			May 17, 2006 at 11:36 am</a>		</div>

		<p>As Raymond mentioned in his post, the MSDN site finally has some decent documentation on the x64 calling&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-382383">
				<div id="div-comment-382383" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">8</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060516-17/?p=31183#comment-382383">
			May 19, 2006 at 7:30 am</a>		</div>

		<p>I use exe packers to save download time, and save the user the hassle of having to decompress it.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-382713">
				<div id="div-comment-382713" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Myria</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060516-17/?p=31183#comment-382713">
			May 21, 2006 at 3:35 pm</a>		</div>

		<p>I ran into the craziness of the CRT security stuff recently. &nbsp;I couldn&#8217;t use the CRT as-is because my code was not a real PE image (it&#8217;s VirtualAlloc&#8217;d into memory). &nbsp;When an exception occurred, it didn&#8217;t trust my address and threw a security error up.</p>
<p>The problem I had was that Microsoft doesn&#8217;t disclose the source to the whole CRT &#8211; the function I needed to modify, __ValidateEH3RN, was not in the CRT source. &nbsp;So I had to hex edit the .obj file to get my code to work &#8211; not fun at all.</p>
<p>x64 support was much easier. &nbsp;RtlAddFunctionTable on the copied .pdata section did the trick.</p>
<p>Melissa</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-384743">
				<div id="div-comment-384743" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">vid</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060516-17/?p=31183#comment-384743">
			May 25, 2006 at 7:31 am</a>		</div>

		<p>Why are ecx and edx still used? especially ecx which has very special meaning (rep, jcxz). Why couldn&#8217;t they use r12-r16 for example? Fastcall was stupid in 16 bit code, and is even more stupid now. </p>
<p>More here: <a rel="nofollow" target="_new" href="http://board.flatassembler.net/topic.php?t=4155" rel="nofollow">http://board.flatassembler.net/topic.php?t=4155</a></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-385153">
				<div id="div-comment-385153" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Myria</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060516-17/?p=31183#comment-385153">
			May 26, 2006 at 3:31 am</a>		</div>

		<p>vid, you have to draw the line somewhere. &nbsp;Every x86 register is special in some way. &nbsp;edx is an implied target of a 32&#215;32=64 multiply and an implied source of a 64/32=32 divide.</p>
<p>eax = too many to list<br />
<br />ebx = xlatb<br />
<br />ecx = jecxz, rep, shifts<br />
<br />edx = (i)mul, (i)div, cmpxchg8b<br />
<br />esp = push, call, SS default<br />
<br />ebp = enter, leave, SS default<br />
<br />esi = string ops source<br />
<br />edi = string ops destination</p>
<p>ebx is I think the least special of all the registers, but that was long ago defined as nonvolatile. &nbsp;I&#8217;m guessing that it&#8217;s a carryover from x86-16, where it was special because you could use it in addressing.</p>
<p>Melissa</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>