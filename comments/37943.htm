<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (7)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-208173">
				<div id="div-comment-208173" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ben Hutchings</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040907-00/?p=37943#comment-208173">
			September 7, 2004 at 7:46 am</a>		</div>

		<p>On a related question, how do those of us not using .NET achieve streamable character conversion &#8211; that is, conversion where the converter can perform a partial conversion, indicate errors such as &quot;the last n bytes of input begin but don&#8217;t complete a multibyte character&quot; or &quot;the output buffer is too small so only converted m bytes of input were converted&quot;, and then allow you to continue with another block of input data and/or output buffer? MLang appeared to offer this but so far as I can see it doesn&#8217;t, or at least the documentation doesn&#8217;t cover it. Yet IE is presumably doing it, and MLang is part of IE&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-208183">
				<div id="div-comment-208183" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ben Hutchings</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040907-00/?p=37943#comment-208183">
			September 7, 2004 at 7:47 am</a>		</div>

		<p>(Apologies for the slightly incoherent rambling sentence above.)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-208243">
				<div id="div-comment-208243" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.blowery.org/blog' rel='external nofollow' class='url'>Ben Lowery</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040907-00/?p=37943#comment-208243">
			September 7, 2004 at 12:16 pm</a>		</div>

		<p>Something else to mention is that you should match the System.Text.Encoding subclass to the contents of the byte[].  For example, passing a byte[] that contains text encoded using UTF-8 to UnicodeEncoding&#8217;s GetString method won&#8217;t decode the byte[] properly.  For example:<br />
<br />&lt;pre&gt;<br />
<br />using System;<br />
<br />using System.Collections;<br />
<br />using System.Text;</p>
<p>public class MyClass<br />
<br />{<br />
<br />    public static void Main()<br />
<br />    {<br />
<br />        byte[] text = Encoding.UTF8.GetBytes(&quot;my string&quot;);<br />
<br />        string s = Encoding.Unicode.GetString(text);<br />
<br />        Console.WriteLine(s);<br />
<br />        s = Encoding.UTF8.GetString(text);<br />
<br />        Console.WriteLine(s);<br />
<br />    }<br />
<br />}<br />
<br />&lt;/pre&gt;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-208253">
				<div id="div-comment-208253" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Clinton Pierce</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040907-00/?p=37943#comment-208253">
			September 7, 2004 at 1:16 pm</a>		</div>

		<p>Unicode?  We don&#8217; need no stinkin&#8217; Unicode!  :)</p>
<p>string s=System.Text.Encoding.ASCII.GetString(buffer, 0, buffer.Length);</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-208263">
				<div id="div-comment-208263" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Jon Potter</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040907-00/?p=37943#comment-208263">
			September 7, 2004 at 3:45 pm</a>		</div>

		<p>not actually a .NET blog?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-208283">
				<div id="div-comment-208283" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Mr. Ed</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040907-00/?p=37943#comment-208283">
			September 7, 2004 at 4:28 pm</a>		</div>

		<p>Regarding the Abrams link:</p>
<p>Why, oh why, does the string have a cast operator to a non-const C-string, if the string is immutable?<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-208303">
				<div id="div-comment-208303" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Norman Diamond</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040907-00/?p=37943#comment-208303">
			September 7, 2004 at 5:54 pm</a>		</div>

		<p>In VC++ 2005 beta 1, either the _T() macro doesn&#8217;t work, or there&#8217;s something funny about macros that are or used to be UNICODE and _UNICODE.  I haven&#8217;t had time to investigate.  When I had time to practice with VC++ 2005 beta 1, I just worked around it by changing _T(&quot;string&quot;) to L&quot;string&quot;, forcing them to be wide strings, and wide strings are Unicode in Windows.</p>
<p>But &#8230; this didn&#8217;t have to be done with all strings.  Some of them I just left as &quot;string&quot;, forcing them to be multibyte strings.  Automatic conversions and boxing to type System::String^ correctly converted some of these ANSI strings to Unicode, only garbaging up some others.  I haven&#8217;t had time to investigate if there&#8217;s a reason for this.</p>
<p>(This didn&#8217;t seem to be the worst issue I found in VC++ 2005 beta 1, because the IDE was still operating and forms could still be edited after that.  But if I didn&#8217;t have time to investigate if there&#8217;s a more serious underlying cause or not.)</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>