<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (52)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-208623">
				<div id="div-comment-208623" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">RichB</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040909-00/?p=37913#comment-208623">
			September 9, 2004 at 7:46 am</a>		</div>

		<p>Isn&#8217;t that what Ghost windows are for? Just because an application which draws a window is hung doesn&#8217;t mean that the desktop should stop treating the window as a valid object.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-208643">
				<div id="div-comment-208643" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://ilyabirman.ru' rel='external nofollow' class='url'>Ilya Birman</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040909-00/?p=37913#comment-208643">
			September 9, 2004 at 7:56 am</a>		</div>

		<p>This does NOT exuse you. That was you (I mean Microsoft) who made it ever possible:<br />
<br />&#8211; for window to hang<br />
<br />&#8211; for hung window not to be able to restore quickly<br />
<br />&#8211; for explorer.exe to hang when trying to restore a hung window</p>
<p>So it&#8217;s not an exuse at all. It was just that you said: &quot;Well, this sucks, but that because we&#8217;ve made a sucking window manager where we just cannot make it work any better, and so we are not going to&quot;</p>
<p>(This message is not supposed to be offensive, I do respect you.)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-208653">
				<div id="div-comment-208653" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Jerry Pisk</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040909-00/?p=37913#comment-208653">
			September 9, 2004 at 8:03 am</a>		</div>

		<p>Ilya, it will always be possible for an app to hang. Even if you use callbacks (executing on a separate thread for each one) instead of message queue it will still be possible for an app not to respond. There&#8217;s nothing you can do about that in any window manager.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-208673">
				<div id="div-comment-208673" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">anonymous coward</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040909-00/?p=37913#comment-208673">
			September 9, 2004 at 8:18 am</a>		</div>

		<p>but surely a window hanging doesn&#8217;t stop Explorer placing the window in the correct z-order and hence being &#8216;in order&#8217;. Sounds to me like suckage in the implementation.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-208683">
				<div id="div-comment-208683" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Jim Causey</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040909-00/?p=37913#comment-208683">
			September 9, 2004 at 8:24 am</a>		</div>

		<p>Ilya,</p>
<p>Is it your assertion that all Windows apps that hang or can&#8217;t restore their windows quickly are solely due to Microsoft&#8217;s coding errors?  Or that all other window managers other than Windows somehow prevent all applications running under then from hanging or restoring their windows slowly?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-208693">
				<div id="div-comment-208693" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ben Cooke</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040909-00/?p=37913#comment-208693">
			September 9, 2004 at 8:24 am</a>		</div>

		<p>Jerry,</p>
<p>I&#8217;m sure lots of people will hold up the X Window System as a counter-example to your claim, so I guess I&#8217;ll do it first. (unless someone beats me to it!)</p>
<p>The window manager in X is a separate process which talks to the X server. The application doesn&#8217;t really know a whole lot about it except when it gets messages that the window has been resized and whatnot. If you &quot;restore&quot; a hanged window in X, the window will restore but the canvas will not be repainted, so you&#8217;ll probably end up with a bordered window with no contents until the application is ready to process the X version of the WM_PAINT message. The Window border will go on responding to the user, though, allowing him or her to resize the window, minimize it again or to &quot;kill&quot; it (terminate the connection between the app and the display &#8212; a forced quit.), assuming the Window Manager has such a function.<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-208703">
				<div id="div-comment-208703" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://weblogs.asp.net/oldnewthing/' rel='external nofollow' class='url'>Raymond Chen</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040909-00/?p=37913#comment-208703">
			September 9, 2004 at 8:28 am</a>		</div>

		<p>Recall that the original window manager was based on a co-operative multitasking model. This influenced much of the design.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-208713">
				<div id="div-comment-208713" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">JD</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040909-00/?p=37913#comment-208713">
			September 9, 2004 at 8:29 am</a>		</div>

		<p>Explorer doesn&#8217;t place windows in Z-order. You are perhaps used to X, where a &quot;window manager&quot; process is responsible for moving and managing windows. This is not how Windows works. Windows in Windows place themselves, or rather, running processes place the windows they own. </p>
<p>Explorer restores windows by sending them messages, telling them to restore themselves. If, for some reason, the window takes a while to get around to it (say because it was doing something else at the time), well, it may restore out of order.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-208733">
				<div id="div-comment-208733" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Tony Lezard</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040909-00/?p=37913#comment-208733">
			September 9, 2004 at 9:20 am</a>		</div>

		<p>So, another question left dangling from the earlier thread (from Jerry P.): why does Explorer keep deciding to switch off the status bar and is there any way of making it truly permanent?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-208753">
				<div id="div-comment-208753" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://weblogs.asp.net/oldnewthing/' rel='external nofollow' class='url'>Raymond Chen</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040909-00/?p=37913#comment-208753">
			September 9, 2004 at 9:47 am</a>		</div>

		<p>The status bar is managed by IE. I keep trying to redirect questions about it to the IE team but people keep asking me for some reason. Here&#8217;s the answer again: I don&#8217;t know.  The IE folks say that it&#8217;s fixed in SP2. Why not ask them what the reason was?</p>
<p><a target="_new" href="http://blogs.msdn.com/tonyschr/archive/2004/06/15/156787.aspx" rel="nofollow">http://blogs.msdn.com/tonyschr/archive/2004/06/15/156787.aspx</a></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-208773">
				<div id="div-comment-208773" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://ilyabirman.ru' rel='external nofollow' class='url'>Ilya Birman</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040909-00/?p=37913#comment-208773">
			September 9, 2004 at 12:40 pm</a>		</div>

		<p>PEOPLE</p>
<p>I&#8217;m not talking about preventing APPLICATIONS from hanging. I&#8217;m taling about WINDOWS.</p>
<p>Operating system CAN paint a window even when the app is hung. Application is to paing only the client area, not the border. So it&#8217;s window manager&#8217;s job to restore z-order and windows&#8217; borders.</p>
<p>That&#8217;s what it should do when recovering from Show Desktop mode.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-208783">
				<div id="div-comment-208783" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://weblogs.asp.net/oldnewthing/' rel='external nofollow' class='url'>Raymond Chen</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040909-00/?p=37913#comment-208783">
			September 9, 2004 at 12:57 pm</a>		</div>

		<p>The Windows window manager leave even nonclient painting (borders) to the application (via the WM_NCPAINT message). So the window manager can&#8217;t draw the borders because it doesn&#8217;t know what kind of borders the app is going to draw. Similarly, when the window manager changes a window&#8217;s z-order, the window gets a change to intercept the request (WM_WINDOWPOSCHANGING) and accept, reject, or modify it. So changing a window&#8217;s z-order requires the app to respond to the &quot;is this z-order okay with you?&quot; message.</p>
<p>Yes, it is possible to design window managers that avoid these problems. Recall that the Windows window manager was designed in the early 1980&#8217;s for machines with less than 1MB of memory, running on top of a co-operatively multi-tasked kernel. There was no such thing as a program trying to send a message to a nonresponsive window. (Think about it.)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-208793">
				<div id="div-comment-208793" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Colin Fletcher</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040909-00/?p=37913#comment-208793">
			September 9, 2004 at 1:48 pm</a>		</div>

		<p>Huh.  Interesting.  That&#8217;s something I always wondered about. Maybe I only notice when the windows rearrange themselves in a non-intuitive way, or maybe the programs I use most often just tend to be slow at responding, but I was convinced before reading your article that the window manager minimized the windows in such a way as to maximize the number of alt-tabs necessary to bring the frontmost applications up again.</p>
<p>However, having just now performed an extremely unscientific test on the applications I have open, I notice that I was wrong and that after a show desktop command their alt-tab order is merely the reverse of their location on the taskbar.  With the exception of Visual Studio .NET, which for some reason is always first.  :)</p>
<p>Is the alt-tab order different than the window order in this case?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-208803">
				<div id="div-comment-208803" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://weblogs.asp.net/oldnewthing' rel='external nofollow' class='url'>Raymond Chen</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040909-00/?p=37913#comment-208803">
			September 9, 2004 at 2:08 pm</a>		</div>

		<p>Hm it seems I&#8217;ve reached the point where people are asking questions I&#8217;ve already answered. Perhaps that means it&#8217;s time to stop.</p>
<p><a target="_new" href="http://weblogs.asp.net/oldnewthing/archive/2003/10/20/55367.aspx" rel="nofollow">http://weblogs.asp.net/oldnewthing/archive/2003/10/20/55367.aspx</a></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-208823">
				<div id="div-comment-208823" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://geekable.com/blog/' rel='external nofollow' class='url'>Jeffrey Czerniak</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040909-00/?p=37913#comment-208823">
			September 9, 2004 at 2:10 pm</a>		</div>

		<p>Pardon my Macintosh arrogance, but have you ever seen this?</p>
<p><a target="_new" href="http://www.apple.com/macosx/features/expose/" rel="nofollow">http://www.apple.com/macosx/features/expose/</a></p>
<p>I used Expose today when one of the running applications locked up, and it worked perfectly &#8212; I was able to glance at all the open windows.   Somehow this doesn&#8217;t make the entire machine lock up.   [wink]</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-208833">
				<div id="div-comment-208833" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://weblogs.asp.net/oldnewthing' rel='external nofollow' class='url'>Raymond Chen</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040909-00/?p=37913#comment-208833">
			September 9, 2004 at 2:21 pm</a>		</div>

		<p>That shows what sort of things you can do when you do a redesign of the window manager, as Carbon was. Windows hasn&#8217;t redesigned the window manager in twenty years &#8211; for compatibility reasons.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-208843">
				<div id="div-comment-208843" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">asdf</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040909-00/?p=37913#comment-208843">
			September 9, 2004 at 2:27 pm</a>		</div>

		<ul>
<li>for window to hang
<p>Not sure what you really mean here but I&#8217;m going to assume you mean a &quot;program looks like it is frozen&quot;. Unless your window is backed by a bitmap instead of being drawn on the fly in response to paint messages, windows can always look like they&#8217;re hanged. Being backed by a bitmap wastes a huge amount of memory though and if you had some logic to resize the window, the only reasonable thing would be to scale the bitmap until the app can process the paint message. If you&#8217;ve ever programmed a direct3d program using the default resize message processing it does just that and it looks like ass.</p>
<p>&#8211; for hung window not to be able to restore quickly</p>
<p>Whenever the z-order, position, or size gets changed, two messages are sent, the first one is a request to move/resize/etc to the new value (the program can also adjust the value to something it likes better). If that message is accepted, a message to notify the window that it has been moved/resized/etc.</p>
<p>Windows has some logic to take over some messages if it detects your app is frozen like being able to minimize a window, draw something reasonable (the windows borders and filled in with a solid color), and activate a menu when you right click on it&#8217;s button in the taskbar. It&#8217;s a fine line what kind of messages to handle because what the app thinks and what windows thinks can get out of sync if you&#8217;re not careful.</p>
<p>&#8211; for explorer.exe to hang when trying to restore a hung window </p>
<p>explorer.exe doesn&#8217;t hang, that&#8217;s the point.</p>
<p>It&#8217;s not just explorer that messes up the z-order, if you try any of those expose clones for windows, they will mess it up too on their show desktop implementation (but at least they will get modal dialogs and the winamp window out of the way).<br />
</li>
</ul>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-208863">
				<div id="div-comment-208863" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://weblogs.asp.net/larryosterman' rel='external nofollow' class='url'>Larry Osterman</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040909-00/?p=37913#comment-208863">
			September 9, 2004 at 2:55 pm</a>		</div>

		<p>Actually, Raymond, the original Windows window manager was designed for machines with 256K (as in Kilobytes) of RAM &#8211; that was the minimum hardware requirement for Win 1.0.</p>
<p>And it had to run (IIRC) 15 different gwbasic applications simultaneously on it.</p>
<p>Think about it. :)<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-208663">
				<div id="div-comment-208663" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ben Cooke</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040909-00/?p=37913#comment-208663">
			September 9, 2004 at 8:14 am</a>		</div>

		<p>This is a little cheeky, but since I missed the linked entry (it&#8217;s in a category I don&#8217;t subscribe to, I guess) I&#8217;m going to be a little off-topic.</p>
<p>In that other entry you tried to use Wingdings and Marlett to show the Windows logo and what I assume is the minimize icon, and a couple of people commented that it hadn&#8217;t worked. Aside from the obvious lack of these fonts, there is another less-obvious reason why this won&#8217;t work in most browsers.</p>
<p>HTML 4 is based around Unicode. When you say &amp;#xff;, this means &quot;show the character at unicode codepoint 255&quot;, which is defined as an umlauted &quot;Y&quot;. Wingdings, being a symbol font, doesn&#8217;t map onto unicode, as you can see if you select it in the Windows NT version of Character Map; for this font, it won&#8217;t allow you to view by unicode subrange. The TrueType Font property page extension shows this too, on the Unicode and Code Pages tab: it doesn&#8217;t have any characters attached to unicode code points.</p>
<p>A strictly compliant browser (which, of course, Internet Explorer is not) will see the request for unicode character 255 and note that this character is not available in the currently-selected font (Wingdings) and go off hunting for it in the preferred font for that unicode range, which is of course Latin.</p>
<p>Internet Explorer seems to have all of this in there somewhere, since it&#8217;s capable of noticing that a particular mathmatical operator isn&#8217;t available in my stock Arial and will go hunting for it and find it in Arial Unicode MS. However, I guess there&#8217;s a special case in there which stops this mechanism from working for non-unicode fonts, instead reverting to the Windows-specific codepage.</p>
<p>I can imagine why this was done: old versions of Microsoft Word encouraged users to insert things like this by changing the font and typing a character. That was a reasonable hack at the time since Unicode wasn&#8217;t around yet. Of course, when Word saves to HTML it can&#8217;t translate these to Unicode because most of the Wingdings glyphs don&#8217;t have any suitable codepoints in Unicode.</p>
<p>As a Microsoft developer writing a site about Microsoft products, I can&#8217;t fault you for writing to Microsoft&#8217;s browser, but I thought I&#8217;d take the opportunity to mention this anyway, for the benefit of others who *aren&#8217;t* writing about Microsoft.</p>
<p>A more correct solution would be for Microsoft to assign Wingdings glyphs to suitable Unicode code points, &#8212; many would be at home in the Symbols and Dingbats range &#8212; but things like the Windows logo would only fit into Private Use Characters which are unsuitable for web use, of course.</p>
<p>Sorry again for replying to your closed discussion in this one. I won&#8217;t do it again! ;)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-208883">
				<div id="div-comment-208883" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Jerry Pisk</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040909-00/?p=37913#comment-208883">
			September 9, 2004 at 4:54 pm</a>		</div>

		<p>First, I think the gfx shell (explorer) in WinXP (and maybe just SP2, I&#8217;m not sure) will still repaint default window borded for an app that&#8217;s not responding quickly enough. If you&#8217;ve ever combined few hundred binary posts in OE you&#8217;ll know ;)</p>
<p>Second, my issue was with explorer not remembering the folder view  for folders that were not using the default. It might have included the status bar. That does seem to be fixed in WinXP SP2, now my control panel always uses Large Icons even when my default folder view is List. I must say that the IE team did fairly good work for SP2, of course all this should&#8217;ve been done years ago, with the release of IE6 SP1 and the team should have been working on fixing standards breaking bugs (and better standard support overall).</p>
<p>And third &#8211; NT based windows use the same window manager that was in 3.x and 9x line? Eeeeewwww.</p>
<p>Oh and fourth &#8211; explorer should not be changing the z-order when showing/hiding desktop. Only when the user switches windows.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-208893">
				<div id="div-comment-208893" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Zodman</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040909-00/?p=37913#comment-208893">
			September 9, 2004 at 5:00 pm</a>		</div>

		<p>I sympathise with the Windows arguement here given the backward compatability issues.</p>
<p>In trying to see the whole picture, I&#8217;m trying to think of a scenario where restoring the windows in a specific order is important and am failing.  What&#8217;s the big deal?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-208903">
				<div id="div-comment-208903" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.peafan.co.uk/blogs/al/' rel='external nofollow' class='url'>Al</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040909-00/?p=37913#comment-208903">
			September 9, 2004 at 6:44 pm</a>		</div>

		<p>Raymond:</p>
<p>| Windows hasn&#8217;t redesigned the window manager<br />
<br />| in twenty years &#8211; for compatibility reasons.</p>
<p>I don&#8217;t know much about anything, but from these posts the window manager in Windows seems to just basically send messages to each window and they can do what they want with them; the windows manager doesn&#8217;t really care too much.<br />
<br />If this is the case (I may be wrong and it may not be, but if it is) then why should there be ANY compatibility problems if the window manager suddenly decides IT wants to take over some actual control. Maybe it can even handle the non-client redrawing itself :)<br />
<br />All it&#8217;d have to do is NOT send certain message, but instead carry out the tasks itself. This shouldn&#8217;t affect the window/program adversely, should it?<br />
<br />Well I dunno, but to me it seems like MS is just a little lazy. To be completely honest I don&#8217;t care about windows being jumbled up, all it is is one click on the taskbar (of a few alt + tabs). I just thought I&#8217;d input my piece, and see exactly how wrong I am! :)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-208923">
				<div id="div-comment-208923" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://reddun.blogspot.com/' rel='external nofollow' class='url'>Tyler Reddun</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040909-00/?p=37913#comment-208923">
			September 9, 2004 at 7:43 pm</a>		</div>

		<p>This is my I started reading your blog, and the more I read the more impressed I am with what Microsoft does to keep programs working from release to release. </p>
<p>It&#8217;s easy to not care about this sort of thing (witness Linux and X many times over), and hard to make it work, but Microsoft does it so flawlessly you almost never notice it.</p>
<p>I&#8217;m pleased to see that this slight of hand isn&#8217;t easy, it proves Microsoft&#8217;s dedication to the rest of the programing world.</p>
<p>&#8211;Tyler</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-208933">
				<div id="div-comment-208933" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Tim Smith</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040909-00/?p=37913#comment-208933">
			September 9, 2004 at 9:08 pm</a>		</div>

		<p>Raymond,</p>
<p>Have you ever considered writing an article on why Microsoft decided to boot the operating system when the power is turned on?  I would just love to see people whine about how doing such a thing is silly and (insert favorite OS) didn&#8217;t make the same mistake.</p>
<p>:)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-208913">
				<div id="div-comment-208913" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://weblogs.asp.net/oldnewthing' rel='external nofollow' class='url'>Raymond Chen</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040909-00/?p=37913#comment-208913">
			September 9, 2004 at 7:18 pm</a>		</div>

		<p>&quot;All it&#8217;d have to do is NOT send certain message, but instead carry out the tasks itself.&quot; </p>
<p>But what if a program was *expecting* a message? Now it&#8217;s broken because it doesn&#8217;t get a message it was relying on.<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-208963">
				<div id="div-comment-208963" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Tom van Wietmarschen</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040909-00/?p=37913#comment-208963">
			September 10, 2004 at 3:10 am</a>		</div>

		<blockquote><p>
  This is my I started reading your blog, and the more I read the more impressed I am<br />
  <br />&gt; with what Microsoft does to keep programs working from release to release.</p>
<p>&gt; It&#8217;s easy to not care about this sort of thing (witness Linux and X many times over), and hard to make it work, but Microsoft<br />
  <br />&gt; does it so flawlessly you almost never notice it.</p>
<p>&gt; I&#8217;m pleased to see that this slight of hand isn&#8217;t easy,<br />
  <br />&gt; it proves Microsoft&#8217;s dedication to the rest of the programing world.</p>
<p>I&#8217;ll have to disagree with you here, sometimes you just have to throw out all the old stuff and start anew. Technology has changed, there&#8217;s more insight in a certain problem, requirements are different.<br />
  <br />Microsoft missed a great opportunity to do thing right with Win95, they missed it again with win2k. Here&#8217;s a big OS upgrade, lot&#8217;s of stuff changed under the hood, people expect stuff to break, it&#8217;s a great time to clean up your code.<br />
  <br />The window manager (or lack thereof) is a great example, You&#8217;re stuck with a design that was written for 1985 specs, almost 30 years old by now, it&#8217;s designed for a single-user, stand-alone system and the design is based on a lot of assumptions that aren&#8217;t true anymore, it&#8217;s not a good idea to use those specs for a multi-user, networking OS like e.g. win2k, really. (Shatter attack anyone ?).<br />
  <br />The current windows versions are held together with sticks, strings and ducktape.</p>
<p>Last night I spent hours battling with Windows File Protection while upgrading some apps on a production win2k AS server after-hours.<br />
  <br />Instead of providing a band-aid like WFP, shouldn&#8217;t you have fixed the reason something like WFP is needed ?
</p></blockquote>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-208973">
				<div id="div-comment-208973" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">AndyB</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040909-00/?p=37913#comment-208973">
			September 10, 2004 at 4:34 am</a>		</div>

		<p>&lt;i&gt;Instead of providing a band-aid like WFP, shouldn&#8217;t you have fixed the reason something like WFP is needed ?&lt;/i&gt;</p>
<p>eh? you mean, like never allowing any app to write to the system32 directory at all, under any circumstances? That&#8217;s the fix you&#8217;re talking about &#8211; but then, those apps you were upgrading would never have successfully installed in the first place.</p>
<p>The big problem though, is that if MS changed the design and stopped things like your apps running, you&#8217;d be complaining just as much that windows had broken your code.</p>
<p>As for the window mananger &#8211; why is it a big deal? Its not broken at all, its just that the design is to allow applications to manage their own windows, instead of having a manager manage the frame that the application draws inside. That&#8217;s just a different design choice &#8211; not a bad one, and you could think up many reasons where the X-style window manager is flawed compared to the windows-style one (eg. when an app hangs, I can kill the window, but the app continues to run&#8230;)<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-208993">
				<div id="div-comment-208993" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Jonathan Wilson</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040909-00/?p=37913#comment-208993">
			September 10, 2004 at 6:45 am</a>		</div>

		<p>if you want some examples of why taking over messages like WM_NCPAINT, WM_NCCALCSIZE, WM_NCHITTEST, WM_WINDOWPOSCHANGING etc, just look at Winamp or Trillian. If windows took away sending of non-client messages and instead drew the default regardless, both apps would break horibly.</p>
<p>When the windows source code was leaked, various postings appeared with comments taken from the source like &quot;do this here to make xyz app work&quot; (or similar messages). This shows just how committed microsoft is to keeping various apps working.<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-209003">
				<div id="div-comment-209003" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Cooney</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040909-00/?p=37913#comment-209003">
			September 10, 2004 at 6:56 am</a>		</div>

		<blockquote><p>
  eh? you mean, like never allowing any app to write to the system32 directory at all, under any circumstances? That&#8217;s the fix you&#8217;re talking about &#8211; but then, those apps you were upgrading would never have successfully installed in the first place. </p>
<p>Why not maintain a strong MS tradition and borrow a page from unix? Implement something like app jails where the app can party on sys32 all it likes without affecting others because all of its file updates are stored in a separate place.</p>
<p>This would likely require a patch to support, unless you allow users to define a jail by name for install, then associate it with the running app.
</p></blockquote>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-209023">
				<div id="div-comment-209023" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">vince</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040909-00/?p=37913#comment-209023">
			September 10, 2004 at 7:35 am</a>		</div>

		<p>Before you play the &quot;it&#8217;s old and computers were too slow then to be reasonable&quot; remember that Unix dates back to 1970, and the X Windows System was started in 1984, with X11 released around 1988 or so, and both have much saner behavior.  And from my experience both are just as backwards compatible as windows is without the crazy hacks.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-209033">
				<div id="div-comment-209033" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://weblogs.asp.net/oldnewthing/' rel='external nofollow' class='url'>Raymond Chen</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040909-00/?p=37913#comment-209033">
			September 10, 2004 at 7:42 am</a>		</div>

		<p>They also had the advantage of processors that supported memory protection and pre-emptive multitasking, as well as the presence of a network. The IBM PC had none of this. (Microsoft&#8217;s Unixlike system Xenix did however.)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-209093">
				<div id="div-comment-209093" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">mschaef</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040909-00/?p=37913#comment-209093">
			September 10, 2004 at 8:38 am</a>		</div>

		<p>&quot;Here&#8217;s a big OS upgrade, lot&#8217;s of stuff changed under the hood, people expect stuff to break,&quot;</p>
<p>_Maybe_ developers expect stuff to break, but certainly none of the users expect stuff to break. Despite Microsoft&#8217;s best efforts to make Windows more than just an OS, it&#8217;s fundamentally just the thing they have to have on their computer to get the value out of the software they actually <em>want</em> to run. If you buy that assumption, then the value of Windows it pretty much completely tied to the applications it can run. Thus, I find it hard to believe that breaking compatibility with significant chunks of those apps is a smart thing to do.</p>
<p>IMHO, The best compromise, the approach Windows has largely taken, is to move the platform forward, maintain compatibility with legacy apps, and minimize the access they have to the rest of the system. Thus, while I can still run Visicalc on XP SP2, it&#8217;s not exactly a security risk.</p>
<p>&quot;They also had the advantage of processors that supported memory protection and pre-emptive multitasking, as well as the presence of a network. &quot;</p>
<p>Memory protection isn&#8217;t an essential component of good software architecture. Also, even the 8088 supports premptive multitasking. Minix multitasked on an 8088, DesqView would multitask <em>DOS</em> applications, and I spent the better part of five years working on an embedded platform that preemptively multitasked on an 80188. Further back, folks were doing preemptive multitasking on 8080&#8217;s and Z80&#8217;s with the likes of MP/M.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-209203">
				<div id="div-comment-209203" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">vince</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040909-00/?p=37913#comment-209203">
			September 10, 2004 at 9:41 am</a>		</div>

		<p>You can write UNIX-alikes that will run on Commodore 64s.  <a target="_new" href="http://lng.sourceforge.net/" rel="nofollow">http://lng.sourceforge.net/</a></p>
<p>X11 was originally written on 1 MIPS VAX machines if I recall, with not much more power than an 8086 PC.</p>
<p>MS often decided for quick hacks over the &quot;right-thing&quot; design wise.  Understandable, but don&#8217;t try to gloss it over with &quot;back then computers were too slow&quot;.  Use the proper argument &quot;we wanted to maximize stockholder value at the expense of maintainability and future user experience&quot;.<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-209293">
				<div id="div-comment-209293" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ben Cooke</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040909-00/?p=37913#comment-209293">
			September 10, 2004 at 11:36 am</a>		</div>

		<p>I remember being quite impressed on my old 286 system when I installed Windows 3.0 and I could have several DOS applications running and task switch between them. Of course, since this was a 286 it wasn&#8217;t really multitasking, but at the time I&#8217;d only had experience with DOS so it sure looked like multitasking to me.</p>
<p>I remember that when pressing Alt+Tab in a DOS application (or did it need an extra qualifier from DOS? I can&#8217;t remember) the window switcher would be a character-mode thing with the window name centered on the top row of the screen, presumably because it was much faster to do that than to switch back to Windows land.</p>
<p>Looking back on it now it seems like nothing, but getting it all working on a 286 (and, of course, earlier chips in the same family) was quite a feat.</p>
<p>People have made linux run in single user mode on a 286 in retrospect, but that&#8217;s working backwards from new technology, which is much easier than working forwards.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-209383">
				<div id="div-comment-209383" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blog.ensoft-software.com/' rel='external nofollow' class='url'>Eric Newton</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040909-00/?p=37913#comment-209383">
			September 10, 2004 at 2:22 pm</a>		</div>

		<p>Wow, I never knew people would get irritated when their windows didnt pop up exactly the same way they minimized&#8230;</p>
<p>get a life guys!</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-209053">
				<div id="div-comment-209053" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ben Cooke</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040909-00/?p=37913#comment-209053">
			September 10, 2004 at 8:21 am</a>		</div>

		<p>Jerry, (re: 9/9/2004 4:54 PM)</p>
<p>Now that Windows isn&#8217;t cooperatively multitasking anymore there&#8217;s a way to send messages to applications and detect if the app doesn&#8217;t respond within a certain period, and Windows 2000 and XP make use of this to prevent hanged applications from getting &quot;stuck&quot;.</p>
<p>For example, as you noted if an application doesn&#8217;t respond to WM_NCPAINT (actually, probably one of the other similar NC messages) Windows seems to automatically call the defaultwindowproc on it so that *something* renders. You can see this if Winamp hangs as Windows will draw the default border over the edges of the window.</p>
<p>This is also used for the messages regarding the close gadget, though. If you click it once and there&#8217;s no response and then you click it again, Windows assumes the application is hanged and offers to terminate it for you. I suspect (although can&#8217;t confirm) that there&#8217;s more going on here than a message timeout, since things like displaying model dialog boxes (which prevent the message handler from returning immediately) also seem to count as responses.</p>
<p>Modern Windows also seems to be able to force changes to the window Z-order when it becomes important to do so, and sometimes allows you to move around hanged windows (in x and y) even though they aren&#8217;t redrawing.</p>
<p>However, as Raymond has noted there&#8217;s only so much you can do behind an application&#8217;s back before you break it. If you force a restore without the application&#8217;s &quot;permission&quot; it won&#8217;t do things it needs to do to get ready to restore, so then it&#8217;ll probably get a WM_PAINT message to draw its normal state but won&#8217;t be ready to do so because it never saw the restore/resize message.</p>
<p>In order to do this properly, I suppose Windows would have to remember that it force-resized the window so that it can make sure that the application still gets the right messages in the right order when it is ready to pump its message queue.</p>
<p>Such is the cost of backwards compatibility.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-209393">
				<div id="div-comment-209393" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.dcc.ufrj.br/~cesarb/' rel='external nofollow' class='url'>Cesar Eduardo Barros</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040909-00/?p=37913#comment-209393">
			September 10, 2004 at 4:10 pm</a>		</div>

		<blockquote><p>
  Wow, I never knew people would get irritated when their windows didnt pop up exactly the same way they minimized&#8230;</p>
<p>It&#8217;s not that people here get irritated about. People here seem to get irritaded by the amount of excessive bending over for backwards compability Microsoft has done.</p>
<p>Almost all the discussion here follow the same steps:</p>
<p>&#8211; Raymond posts about something odd Windows does and show it&#8217;s for a good reason (backwards compability)<br />
  <br />&#8211; People start complaining it&#8217;s absurd, insane, he should let the applications break when they are wrong, and Linux doesn&#8217;t do it that way (even when Linux not doing it that way isn&#8217;t relevant to the discussion at all)<br />
  <br />&#8211; Raymond answers explaining why maintaining backwards compability is very important, and it couldn&#8217;t be done in a better way while still maintaining backwards compability<br />
  <br />&#8211; After a few days, the discussion ends</p>
<p>No matter how small the backwards compability is, someone will find a fault with it. Of course, if Microsoft did the opposite, people would complain &quot;you shouldn&#8217;t let the applications break&quot; and &quot;why didn&#8217;t you do X&quot; where X is some sort of compability layer.
</p></blockquote>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-209413">
				<div id="div-comment-209413" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.rotd.org/' rel='external nofollow' class='url'>Andreas Magnusson</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040909-00/?p=37913#comment-209413">
			September 10, 2004 at 4:29 pm</a>		</div>

		<p>Vince, X doesn&#8217;t have saner behaviour than Windows, just different. It&#8217;s still very easy to write an app that hangs X dead; as a matter of fact some of my students did just that the other day and it was far too easy for me to consider X to be friendly for beginner programmers (or any programmer not intimately related to the inner workings of X).<br />
<br />But maybe that&#8217;s the intention of X&#8217;s design?<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-209223">
				<div id="div-comment-209223" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://weblogs.asp.net/oldnewthing/' rel='external nofollow' class='url'>Raymond Chen</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040909-00/?p=37913#comment-209223">
			September 10, 2004 at 9:47 am</a>		</div>

		<p>Did X11 have to be DOS-compatible?</p>
<p>&quot;Wanted&quot; to maximize shareholder value?  It&#8217;s not a matter of &quot;want&quot;. A company has a legal **obligation** to maximize shareholder value.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-209363">
				<div id="div-comment-209363" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Cooney</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040909-00/?p=37913#comment-209363">
			September 10, 2004 at 1:46 pm</a>		</div>

		<p>&gt; A company has a legal **obligation** to maximize shareholder value.</p>
<p>Among other obligations. There&#8217;s also the question of whether to maximize this quarter&#8217;s returns at the expense of future growth. Single-mindedly maximizing quarterly returns is a great way to kill a company.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-209463">
				<div id="div-comment-209463" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Tom van Wietmarschen</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040909-00/?p=37913#comment-209463">
			September 11, 2004 at 8:14 am</a>		</div>

		<p>&quot;eh? you mean, like never allowing any app to write to the system32 directory at all, under any circumstances? That&#8217;s the fix you&#8217;re talking about &#8211; but then, those apps you were upgrading would never have successfully installed in the first place.&quot;</p>
<p>This app was NOT overwriting stuff in the system32 dir but in it&#8217;s own install dir. </p>
<p>&quot;Thus, I find it hard to believe that breaking compatibility with significant chunks of those apps is a smart thing to do.&quot;</p>
<p>Not doing the Right Thing™ design-wise, to avoid breaking some apps is a short-term solution, in the long run the user is better of with the better designed OS. A solid design leads to a stable, maintainable program, if you apply band aid upon band aid, the design becomes garbled, stuff start to get unpredictable (Call X sometimes behaves like in way A, and sometimes it&#8217;s in &#8216;band aid&#8217; mode and behaves in way B) and you&#8217;ll end up with an unmaintainable, unstable, quirky mess.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-209473">
				<div id="div-comment-209473" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">mschaef</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040909-00/?p=37913#comment-209473">
			September 11, 2004 at 9:57 am</a>		</div>

		<p>&quot;Did X11 have to be DOS-compatible?&quot;</p>
<p>No matter what the answer to that question was initially, it ended up <em>being</em> compatible. DesqView/X ran X11 under DOS+a 386 extender, much like Windows/386, etc.</p>
<p>DV/X could actually do some pretty cool stuff. Since it could display DOS/Windows apps in X11 windows, it was possible to use it to remotely display DOS and Windows apps on other X Windows consoles. Somebody on a Sun workstation could remotely run a DOS or Windows app on a machine running DV/X and have it display on their Sun&#8217;s display.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-209483">
				<div id="div-comment-209483" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">mschaef</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040909-00/?p=37913#comment-209483">
			September 11, 2004 at 10:08 am</a>		</div>

		<p>&quot;People have made linux run in single user mode on a 286 in retrospect, but that&#8217;s working backwards from new technology, which is much easier than working forwards. &quot;</p>
<p>That&#8217;s an odd statement, considering that Minix, Torvald&#8217;s original inspiriation for Linux, multitasked on an 8088-class machine. That was (obviously) before Linux ran on the 386, and well before Linux was backported to the 286.</p>
<p>It&#8217;s also worth pointing out that the PDP-7 on which Unix was originally developed had an 80K address space, very limited memory protection, and could support multiple users as it blazed along at 1MHz.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-209493">
				<div id="div-comment-209493" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Vince</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040909-00/?p=37913#comment-209493">
			September 11, 2004 at 10:14 am</a>		</div>

		<p>Andreas Magnusson:  Did your students report the X11 crash to the maintainer?  Best way to get it fixed.</p>
<p>I&#8217;d never say in all ways X is superior.  It&#8217;s just interesting to see the different design philosophies.  Personally I think having a separate process, the window manager, control the windows is a lot saner than having the indvidual processes do it.  Mainly because if a process is poorly coded or hangs it makes the OS look unresponsive or broken, not just the app.</p>
<p>I like coming to this site, and I usually try to hold my tongue, mainly because I do realize the readership here doesn&#8217;t want to hear about how great the alternatives are.</p>
<p>I just am shocked sometimes that a company with top programmers and seemingly infinite money sometimes seems to make such poor design decisions.  Backwards compatibility is a noble goal, but you shouldn&#8217;t let it become a crutch.</p>
<p>I do hope MS software improves, because maybe it will decrease the amount of hours a year I am unwillingly obligated to support friends/family computers who despite MS&#8217;s best efforts have backwards compatibility, security, and non-intuitive interface issues.</p>
<p>I wish there was some sort of &quot;favors called from computer-knowledgable friend&quot; on total cost of ownership reports.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-209503">
				<div id="div-comment-209503" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.dcc.ufrj.br/~cesarb/' rel='external nofollow' class='url'>Cesar Eduardo Barros</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040909-00/?p=37913#comment-209503">
			September 11, 2004 at 11:31 am</a>		</div>

		<p>Vince: He didn&#8217;t say it crashed. He said it hang.</p>
<p>Which means the student programs probably did a &quot;grab&quot; (probably a server grab or a mouse grab).</p>
<p>A server grab means you own the server (i.e. only you can draw), which looks a lot like a hang.</p>
<p>A mouse grab means you are the only one who receives mouse events (you also have a keyboard grab, which does the same thing to the keyboard). It can also look like a hang.</p>
<p>There are special keys to release grabs (disabled by default &#8212; see the AllowDeactivateGrabs and AllowClosedownGrabs options on XFree86).</p>
<p>Sorry for continuing an offtopic thread.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-209523">
				<div id="div-comment-209523" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.rotd.org/' rel='external nofollow' class='url'>Andreas Magnusson</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040909-00/?p=37913#comment-209523">
			September 11, 2004 at 3:40 pm</a>		</div>

		<p>Actually (to clear up the discussion about my students), they wrote a Java-app that had an infinte loop in the update-method (called to repaint the window).<br />
<br />I also think that in this case the app kept feeding X with requests to repaint the window.</p>
<p>I must admit I haven&#8217;t tried to reproduce this under Windows so I don&#8217;t know if it would hang Windows dead or just take up 99% of the CPU (and thus be killable by TaskManager).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-209623">
				<div id="div-comment-209623" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ben Cooke</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040909-00/?p=37913#comment-209623">
			September 13, 2004 at 5:46 am</a>		</div>

		<p>Andreas,</p>
<p>I suspect in Windows the app would appear to be hanged although the window is repainting, which is unusual but possible &#8230; I&#8217;ve actually done things like this by mistake before in my early days of Windows programming, such as mishandling WM_PAINT and having Windows keep resending it, which actually causes a worse situation because Windows sees the app responding to messages but the message queue is being flooded with paint messages so the application doesn&#8217;t appear to be hanged but instead just runs very sluggishly, dragging around the screen in jolty fashion &#8211; Windows doesn&#8217;t take over like it normally would because the app looks to Windows like it is still running okay.</p>
<p>Under Windows 2000 and XP in the situation your students found themselves in, the app will not be responding to messages so two clicks on the close gadget should trigger Windows&#8217; &quot;Application is not responding&quot; message and allow you to end the task.</p>
<p>A problem with the X Window System design, of course, is that in most cases the display server is a single process and if you get that busy doing something it looks like the whole system is locked but if you were to log in to a non-console TTY (say, an SSH session from another host) you&#8217;d find that the system was still running fine underneath and you could kill the offending process from there, but of course that&#8217;s hardly a good solution.</p>
<p>I remember seeing an interesting X Window System server for Windows a while back, actually. What made it interesting was that for each application connection it would fork off a child process responsible for handling that connection only. This was possible because it ran &quot;rootless&quot; and created Windows windows, so a master process to manage the ultimate display wasn&#8217;t necessary. (or rather, it was necessary but provided by Windows itself) I think it did still use the parent process for IPC but that was to handle things like the clipboard and not painting and interaction issues.</p>
<p>It&#8217;s clear that both designs have their pros and cons. Nothing&#8217;s perfect.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-209833">
				<div id="div-comment-209833" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.rotd.org/' rel='external nofollow' class='url'>Andreas Magnusson</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040909-00/?p=37913#comment-209833">
			September 13, 2004 at 2:21 pm</a>		</div>

		<p>&quot;&#8230;were to log in to a non-console TTY &#8230;&quot;<br />
<br />Yes, that&#8217;s what we did and killed the X server, or rather the sys-admins did, since the X server is running as root (or something with a higher level than ordinary users anyway) and the class is at a major university here in Sweden, so security is important.<br />
<br />My post was not a complaint about linux, but rather about the design of X (which leads to situations like that) since another poster held it in such high regard.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-210023">
				<div id="div-comment-210023" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">DrPizza</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040909-00/?p=37913#comment-210023">
			September 14, 2004 at 7:46 am</a>		</div>

		<p>&quot;(Shatter attack anyone ?). &quot;<br />
<br />What about them?</p>
<p>Window messages aren&#8217;t trusted input.  Shatter attacks are no more fundamental than an application crashing because you pass too much on the command line or because you send too much through a socket.  They&#8217;re all problems of trusting untrustworthy input, and all fixable (in essentially the same way) as soon as one realizes this.<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-212513">
				<div id="div-comment-212513" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://weblogs.asp.net/oldnewthing/' rel='external nofollow' class='url'>Raymond Chen</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040909-00/?p=37913#comment-212513">
			September 19, 2004 at 1:14 am</a>		</div>

		<p>I already wrote why 16-bit apps are still important.</p>
<p>But certainly you want your Windows 2000 apps to keep running, don&#8217;t you? They rely on the same window manager feature that the old 16-bit apps do.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-212493">
				<div id="div-comment-212493" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://weblogs.asp.net/oldnewthing/archive/2004/09/19/227339.aspx#231359' rel='external nofollow' class='url'>fdsaasdf</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040909-00/?p=37913#comment-212493">
			September 19, 2004 at 1:12 am</a>		</div>

		<p>Pardon my arrogance here, but I find it quite amusing that there&#8217;s only Windows that can&#8217;t restore things in the right order.  My Linux desktop can hapilly restore in the right order (even if one of more of the windows has crashed), and the iBook&#8217;s desktop does it nicely too, although I&#8217;ve no experience of a crashed app in MacOS X yet ;)</p>
<p>Perhaps it&#8217;s time Windows had a new window manager that doesn&#8217;t rely on a program to be actually working for it to make it do things, like resize, restore, minimise windows etc.</p>
<p>As for the backwards compatibility issue, does windows  *really* need it any more?  Why are you still supporting DOS programs?  If I want to use a DOS program, I won&#8217;t try and mungs XP round to try and run it, I&#8217;ll dig out the old 486 and run it on that.. Similar for Win95/98 apps..  I&#8217;m fairly sure if you stopped with the backwards compatibility thing, Windows would work a fair bit better than it does at the moment..  And I might have half a reason to actually use my Windows box rather than it sitting there donig nothing whilst I use the mac and linux boxes.</p>
<p>&lt;/rant&gt;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-359313">
				<div id="div-comment-359313" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blogs.msdn.com/oldnewthing/archive/2006/03/27/561924.aspx' rel='external nofollow' class='url'>The Old New Thing : Why doesn't the window manager just take over behavior that used to be within the application's purview?</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040909-00/?p=37913#comment-359313">
			March 27, 2006 at 10:00 am</a>		</div>

		<p>PingBack from <a rel="nofollow" target="_new" href="http://blogs.msdn.com/oldnewthing/archive/2006/03/27/561924.aspx" rel="nofollow">http://blogs.msdn.com/oldnewthing/archive/2006/03/27/561924.aspx</a></p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>