<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (3)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-272953">
				<div id="div-comment-272953" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.jasmusic.com' rel='external nofollow' class='url'>Joshua Schaeffer</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050426-18/?p=35783#comment-272953">
			April 26, 2005 at 10:25 am</a>		</div>

		<p>Why not add an API to set a per-thread message callback for any thread-only messages? Then DispatchMessage could just call this.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-272963">
				<div id="div-comment-272963" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Adrian</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050426-18/?p=35783#comment-272963">
			April 26, 2005 at 10:32 am</a>		</div>

		<p>This seems related to why the timed message box back in the Modality series of articles didn&#8217;t work reliably.  See <a rel="nofollow" target="_new" href="http://blogs.msdn.com/oldnewthing/archive/2005/03/04/385100.aspx" rel="nofollow">http://blogs.msdn.com/oldnewthing/archive/2005/03/04/385100.aspx</a></p>
<p>That article showed how to post a WM_QUIT message to break a modal loop, and then to remove the re-posted WM_QUIT message to keep the application from exiting.  Unfortunately for me, it failed to remove the re-posted WM_QUIT because it was occluded by thread messages that were posted to the queue immediately after the modal loop exited.</p>
<p>They mystery remains as to who would post such a message (and why).  The sample application certainly wasn&#8217;t doing it.  Since it happens reliably on two vanilla Windows XP boxes here at work, I suspect LANdesk Remote Control agent, as that is the only non-standard program running (and the only one I can&#8217;t uninstall thanks to our strict IT department).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-273053">
				<div id="div-comment-273053" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Fran√ßois</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050426-18/?p=35783#comment-273053">
			April 27, 2005 at 1:28 am</a>		</div>

		<p>The documentation for PostThreadMessage hints that we should install a thread-specific hook to solve this problem. </p>
<p>Why not simply always do this ? Even if I am in control of the thread&#8217;s implementation, sometimes &#8216;magic&#8217; modal loops will appear (say I call into this library that uses COM under the covers).</p>
<p>So maybe the rule is : whenever you PostThreadMessage, you MUST install a hook on the target thread to handle the thread messages ?</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>