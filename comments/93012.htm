<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (9)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-1226671">
				<div id="div-comment-1226671" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Douglas</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160211-00/?p=93012#comment-1226671">
			February 11, 2016 at 7:34 am</a>		</div>

		<p>Exercise:<br />
Sorry, my windbg (or similar) -fu is weak.<br />
Not being all that familiar with these debuggers, I don&#8217;t know if you need to tell it the function signature in a case like this.<br />
Then, a quick web search shows that the command is &#8216;dv&#8217; (if you have symbols), or possibly &#8216;kp&#8217;, to find the arguments (aka. &#8220;actual parameters&#8221;) passed to the window procedure.<br />
From there, you have hwnd and friends. The DEF team might be able to look at their stuff from there. If not, I&#8217;m not sure how you would interrogate the window from a crash dump.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1226673">
				<div id="div-comment-1226673" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Dave</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160211-00/?p=93012#comment-1226673">
			February 11, 2016 at 7:45 am</a>		</div>

		<p>inkedit in a richtext control? I discovered the hard way to only way around this is to unsubclass on WM_DESTROY.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1226691">
				<div id="div-comment-1226691" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">sense</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160211-00/?p=93012#comment-1226691">
			February 11, 2016 at 9:25 am</a>		</div>

		<p>mmm&#8230; maybe the window function is specific enough and a &#8220;u&#8221; will show its name at this point?<br />
I know, there must be some function to extract the class name from the window handle, which should be placed somewhere on the stack (or heap?) near the WM_ACTIVATEAPP that you found. But that&#8217;s as far as my knowledge goes for now.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1226711">
				<div id="div-comment-1226711" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.geekswithblogs.net/akraus1' rel='external nofollow' class='url'>Alois Kraus</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160211-00/?p=93012#comment-1226711">
			February 11, 2016 at 11:19 am</a>		</div>

		<p>It is still a mystery to me how window handles in Windbg are accessible. The Gdikdx.dll extension is only for Windows 2000 and XP. That whole GDI stuff is pretty much inaccessible in Windbg and should be fixed in my opinion. If you only have the stack then you should after unloading the wrong pdb do a lm to see in the unloaded module list DEF.dll and its previous load addresses. Then use the closest matching base address for it to do a .reload DEF.dll=xxxx. Now the stack trace with e.g. kb should display the window method of DEF.dll. I have not tried this but I guess that could work.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1226721">
				<div id="div-comment-1226721" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://andreybazhan.com' rel='external nofollow' class='url'>Andrey Bazhan</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160211-00/?p=93012#comment-1226721">
			February 11, 2016 at 11:51 am</a>		</div>

		<p>If you are a little bit lazy then dps @esp would be enough</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-exchange-development-blog-team odd alt thread-odd thread-alt depth-1" id="comment-1226751">
				<div id="div-comment-1226751" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">exchange development blog team</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160211-00/?p=93012#comment-1226751">
			February 11, 2016 at 5:38 pm</a>		</div>

		<p>&gt;Exercise: What command would be useful at this point to help the DEF.dll identify the window that they leaked?</p>
<p>&#8220;google stackoverflow&#8221;.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1226791">
				<div id="div-comment-1226791" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">John Doe</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160211-00/?p=93012#comment-1226791">
			February 12, 2016 at 8:58 am</a>		</div>

		<p>Exercise: Since DEF.dll was reloaded overlapping ABC.dll, you can get the window handle by inspecting the current arguments.  If you&#8217;re debugging live, you can get the window title, class, etc.</p>
<p>The command is: dv</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-alegrigoriev odd alt thread-odd thread-alt depth-1" id="comment-1227321">
				<div id="div-comment-1227321" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/alegr1' rel='external nofollow' class='url'>alegr1</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160211-00/?p=93012#comment-1227321">
			February 17, 2016 at 12:19 pm</a>		</div>

		<p>It would be helpful having a debug VirtualAlloc mode where the virtual ranges keep reserved when decommitted, so any unloaded DLL range will not get reused.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1227621">
				<div id="div-comment-1227621" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Andrew Rogers (ex-MSFT)</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160211-00/?p=93012#comment-1227621">
			February 21, 2016 at 11:26 pm</a>		</div>

		<p>Note from the exception record that 0007ffcfd197be4 == ABC+0x67be4. Therefore ABC is based at:</p>
<p>0:000&gt; ?00007ffcfd197be4-0x67be4<br />
Evaluate expression: 140724554366976 = 00007ffc`fd130000</p>
<p>Whereas DEF is based at 00007ffc`fd140000.</p>
<p>Therefore the exception address, ABC+0x67be4, is DEF+0x57be4:</p>
<p>0:000&gt; ?00007ffc`fd197be4-00007ffc`fd140000<br />
Evaluate expression: 359396 = 00057be4</p>
<p>So the next command is &#8216;ln DEF+0x57be4&#8242;, c.f. the same on ntdll:</p>
<p>0:000&gt; ln ntdll+0x57be4<br />
(77f179cd)   ntdll!RtlDosApplyFileIsolationRedirection_Ustr+0x2d0   |  (77f17f14)   ntdll!`string&#8217;</p>
<p>Andrew R</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>