<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (19)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-747523">
				<div id="div-comment-747523" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Alexandre Grigoriev</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090618-00/?p=17843#comment-747523">
			June 18, 2009 at 10:22 am</a>		</div>

		<p>One example when you just can&#8217;t get the synchronous mouse position is when you want to display a context menu in response to the click on your icon in the tray.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-747543">
				<div id="div-comment-747543" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Mark</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090618-00/?p=17843#comment-747543">
			June 18, 2009 at 10:36 am</a>		</div>

		<p>This is one of the things people &quot;just don&#8217;t get&quot; about Win32 programming. &nbsp;Perhaps it would help if APIs were tagged and separated?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-747593">
				<div id="div-comment-747593" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ivo</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090618-00/?p=17843#comment-747593">
			June 18, 2009 at 11:47 am</a>		</div>

		<p>Isn&#8217;t GetFocus the right way to get the focused window? Most likely you care about the focus in your particular thread.</p>
<p>BTW, the docs for GetFocus mention GetForegroundWindow so maybe that&#8217;s why people use it instead.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-747613">
				<div id="div-comment-747613" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Karellen</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090618-00/?p=17843#comment-747613">
			June 18, 2009 at 12:24 pm</a>		</div>

		<p>OK, I realise that back when Win32 was created, passing an extra pointer parameter to a function involved something like 3 extra instructions which is clearly a performance hit you didn&#8217;t want to incur, but in this day and age is it really too much to ask for an API which does not rely on hidden/opaque global state?</p>
<p>How about:</p>
<p>DWORD GetCursorPosEx(LPMSG lpMsg);</p>
<p>HWND GetForegroundWindow(LPMSG lpMsg);</p>
<p>If lpMsg is non-NULL, it gets the data (cursor position, foreground window) as was at the time the message was created. If lpMsg is NULL, it gets the async data.</p>
<p>Less &#8220;magic&#8221;, more understandable, harder to misuse.</p>
<p>Global variables/state; just say &#8220;no^H^Hsurely there must be a better way&#8221;</p>
<div class=post>[<i>There is not enough information in a <code>MSG</code> structure to uniquely identify the message. Each time a timer ticks, the exact same <code>MSG</code> structure is returned, even though the mouse may very well have been in a different position at each tick. (And what happens if you pass in a message that was generated 5 minutes ago? Does the window manager have to remember all message history so it can produce this information on the off chance somebody asks for it an hour from now?) The window manager remembers the current state. If you want older state, you&#8217;ll have to save it yourself. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-747643">
				<div id="div-comment-747643" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Bob</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090618-00/?p=17843#comment-747643">
			June 18, 2009 at 1:52 pm</a>		</div>

		<p>Karellen: People would just pass NULL by default anyway.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-747683">
				<div id="div-comment-747683" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Duran</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090618-00/?p=17843#comment-747683">
			June 18, 2009 at 4:24 pm</a>		</div>

		<p>Very interesting post. &nbsp;</p>
<p>This seems like a very subtle problem. &nbsp;I&#8217;ve definitely coded this brokenly before (and I&#8217;ve put a TODO on my list to fix this in my code). &nbsp;</p>
<p>This really raises the question, though, of why the window manager/message queue was designed to ever allow this broken pattern. &nbsp;One could imagine different designs that would disallow this, or have the default case do the right thing.</p>
<p>Stuff like this is, IMO, one of the main differentiators between OSes (or frameworks in general). &nbsp;If it&#8217;s hard for developers to program your framework properly, you&#8217;re going to have a lot of subtly buggy apps. &nbsp;Users will then have a negative opinion of it.</p>
<p>I&#8217;d love to see a breakdown of &#8220;ease of programmability&#8221; for various areas across major OSes (Windows, Linux, &#8230;).</p>
<div class=post>[<i>The alternative is&#8230; what? Support only synchronous state queries? (What if somebody wants the asynchronous state?) -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-747713">
				<div id="div-comment-747713" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://arnshea.blogspot.com/' rel='external nofollow' class='url'>arnshea</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090618-00/?p=17843#comment-747713">
			June 18, 2009 at 4:37 pm</a>		</div>

		<p>A similar problem exists in Windows Forms when handling control events.</p>
<p>As far as I can tell the best you can do is to create your own synchronous state. &nbsp;At least you&#8217;re processing with respect to a (mostly) single point in time&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-747763">
				<div id="div-comment-747763" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Steve Thresher</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090618-00/?p=17843#comment-747763">
			June 18, 2009 at 5:25 pm</a>		</div>

		<p>Yet another gem! Keep &#8217;em coming Raymond.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-747773">
				<div id="div-comment-747773" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ben Cooke</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090618-00/?p=17843#comment-747773">
			June 18, 2009 at 5:42 pm</a>		</div>

		<p>I guess this is why, when I ctrl+shift+click on a link in Opera, I need to keep the modifiers held down until the new tab has opened or the modifiers are ignored. It catches me out all the time.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-747843">
				<div id="div-comment-747843" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Karellen</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090618-00/?p=17843#comment-747843">
			June 18, 2009 at 7:16 pm</a>		</div>

		<p>&#8220;There is not enough information in a MSG structure to uniquely identify the message.&#8221;</p>
<p>Oh, Sorry. I assumed that when you called GetMessage(), the out parameter which received a copy of the message data, received a copy of the message data, which specifically included the window handle, {l,w}param, time and cursor position for that message.</p>
<div class=post>[<i>Post WM_USER twice within the same millisecond. The MSG structures will be identical. And how long a message history should the window manager retain? -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-747853">
				<div id="div-comment-747853" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Karellen</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090618-00/?p=17843#comment-747853">
			June 18, 2009 at 7:23 pm</a>		</div>

		<p>Oops. Premature submission. Anyway&#8230;</p>
<p>&#8220;Each time a timer ticks, the exact same MSG structure is returned&#8221;</p>
<p>Huh? Are you required to pass a pointer to the same MSG structure each time you call GetMessage() or something? I don&#8217;t see that documented.</p>
<p>&#8220;Does the window manager have to remember all message history so it can produce this information on the off chance somebody asks for it an hour from now? [&#8230;] If you want older state, you&#8217;ll have to save it yourself&#8221;</p>
<p>Yeah, I was sort of assuming that if you wanted to keep message history around, you&#8217;d just do that yourself with your own managed set of MSG structures. That was the point I was trying to make.</p>
<p>Although, I&#8217;m not entirely clear on the point of the synchronous functions. Why not just access the members of the MSG structure directly?</p>
<div class=post>[<i>Oh, you&#8217;re suggesting that the operating system track each MSG structure by its address. &#8220;Somebody&#8217;s passing me (MSG*)0x00419148, ah the last time I filled in that MSG structure was this message here, now let me go look up whether the &#8216;A&#8217; key was up or down at that time.&#8221; How long does it keep track of all these message pointers before it says, &#8220;Sorry, that was too long ago, I no longer have information about the state of the keyboard at that time&#8221;? -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-747873">
				<div id="div-comment-747873" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blog.henning.makholm.net/' rel='external nofollow' class='url'>HEnning Makholm</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090618-00/?p=17843#comment-747873">
			June 18, 2009 at 7:51 pm</a>		</div>

		<p>Karellen: Another reason this will not work well is that the window procedure does not get to see the MSG structure, only a few selected fields from it. So code called from the window procedure (i.e., most everything UI-related in a typical app) would not be able to call your functions anyway.</p>
<p>If we were to start from scratch and design a windowing system that did not have to be source code compatible with anything in existence, event handlers would probably receive pointers to a much richer event structure than what fits in the few WndProc arguments, including all this kind of synchronous information &#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-748023">
				<div id="div-comment-748023" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Dave Harris</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090618-00/?p=17843#comment-748023">
			June 19, 2009 at 8:42 am</a>		</div>

		<p>&#8220;There is not enough information in a MSG structure to uniquely identify the message.&#8221;</p>
<p>Even if the window procedure did receive the full MSG structure, and even if that was enough to identify the message, it&#8217;s not enough to implement functions like GetKeyState().</p>
<p>For a notional GetMsgKeyState( MSG *pMsg, int nVirtKey ) you&#8217;d need to know the position of every key in the keyboard at the time the MSG was generated. That information is not stored in MSG. Raymond was hinting it could be stored in a history somewhere, with the MSG as an index. An alternative would be to massively increase the size of MSG to include it, and all other state available synchronously. Both approaches have more overhead than the feature is worth.</p>
<div class=post>[<i>Putting the state in the MSG structure is a non-starter because it prevents new synchronous state from being added in the future. &#8220;We want to add a synchronous InSendMessageEx function but, oh, we can&#8217;t because there&#8217;s no room in the MSG structure for the additional state bits. I guess we can provide only an async version, even though that has race conditions.&#8221; -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-747963">
				<div id="div-comment-747963" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Karellen</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090618-00/?p=17843#comment-747963">
			June 19, 2009 at 2:41 am</a>		</div>

		<p>&quot;Oh, you&#8217;re suggesting that the operating system track each MSG structure by its address.&quot;</p>
<p>Sorry, I&#8217;m having a &quot;understanding the prerequisites&quot; failure, and explaining myself really badly.</p>
<p>The &quot;understanding the prerequisites&quot; failure was (as HEnning Makholm poitned out) me forgetting that the window procedure does not receive the lpMsg parameter passed to DispatchMessage(), but instead just a few select fields from it. So it doesn&#8217;t have all the information that I thought it did. (Why not?)</p>
<p>As for explaining myself, I was trying to suggest that the OS not track MSG structures at all. Instead of hanging on to *more* data in &quot;magic&quot; opaque global state somewhere, I was trying to suggest that it become more transparent and do *less*. i.e. once an application has retrieved a message via GetMessage() or the window procedure, then it should be able to keep track of all the state associated with the message itself.</p>
<p>Don&#8217;t worry. I&#8217;m just smart enough to know when I&#8217;m making a fool of myself. I&#8217;ll sit the rest of this thread out. My apologies.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-748083">
				<div id="div-comment-748083" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">MP</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090618-00/?p=17843#comment-748083">
			June 19, 2009 at 12:52 pm</a>		</div>

		<p>&#8221; The great thing about this is that the users will probably blame the other program. &#8220;Sometimes, when I use this program, it spontaneously deletes all my items. Stupid program. It&#8217;s so buggy.&#8221; &#8220;</p>
<p>It seems to me, as another poster alluded to previously, that it&#8217;s a bit broken for the API to allow nonsense messages to be inadvertently sent to some other process&#8217;s window. I imagine at this point it would be a backwards compatibility nightmare but wouldn&#8217;t it be better to require the programmer to be more explicit about their intentions to message a different process?</p>
<div class=post>[<i>In 1983, the philosophy was that programmers were to be trusted to know what they were doing. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-748103">
				<div id="div-comment-748103" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Yuhong Bao</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090618-00/?p=17843#comment-748103">
			June 19, 2009 at 1:38 pm</a>		</div>

		<p>What about GetKeyboardState? Sync or async?</p>
<div class=post>[<i>The docs on GetKeyboardState appear to be sufficiently clear. The table above was intended to be illustrative, not comprehensive. I apologize for not making that clear. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-748133">
				<div id="div-comment-748133" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ray Trent</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090618-00/?p=17843#comment-748133">
			June 19, 2009 at 2:03 pm</a>		</div>

		<blockquote><p>
  What about GetKeyboardState? Sync or async?
</p></blockquote>
<p>Let me google that for you: <a rel="nofollow" target="_new" href="http://lmgtfy.com/?q=GetKeyboardState&amp;l=1" rel="nofollow">http://lmgtfy.com/?q=GetKeyboardState&#038;l=1</a></p>
<p>(sync)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-748143">
				<div id="div-comment-748143" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Yuhong Bao</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090618-00/?p=17843#comment-748143">
			June 19, 2009 at 2:15 pm</a>		</div>

		<p>&quot;Let me google that for you: <a rel="nofollow" target="_new" href="http://lmgtfy.com/?q=GetKeyboardState&amp;l=1&quot;" rel="nofollow"></a><a href="http://lmgtfy.com/?q=GetKeyboardState&#038;l=1&#038;quot" rel="nofollow">http://lmgtfy.com/?q=GetKeyboardState&#038;l=1&#038;quot</a>;</p>
<p>That animation is so funny!</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-748293">
				<div id="div-comment-748293" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Anonymous Coward</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090618-00/?p=17843#comment-748293">
			June 19, 2009 at 7:38 pm</a>		</div>

		<p>Thanks Raymond for giving this issue a bit of a higher profile. There are still a lot of programs doing this wrong.</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>