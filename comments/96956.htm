<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (26)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1 parent" id="comment-1308645">
				<div id="div-comment-1308645" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">laonianren</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170907-00/?p=96956#comment-1308645">
			September 7, 2017 at 7:49 am</a>		</div>

		<p>I was a little surprised I&#8217;d never noticed these dummy names.  It turns out they are a recent addition.  They are in the Windows 10 SDKs, but not the Windows 8 versions.</p>

		
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-oldnewthing bypostauthor odd alt depth-2 parent" id="comment-1308666">
				<div id="div-comment-1308666" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Raymond+Chen+-+MSFT' rel='external nofollow' class='url'>Raymond Chen - MSFT</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170907-00/?p=96956#comment-1308666">
			September 7, 2017 at 8:08 am</a>		</div>

		<p>The common controls ones have been there since 1995.</p>

		
				</div>
		<ol class="children">
		<li class="comment even depth-3" id="comment-1308706">
				<div id="div-comment-1308706" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">laonianren</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170907-00/?p=96956#comment-1308706">
			September 7, 2017 at 9:02 am</a>		</div>

		<p>I see.  This is a recent addition to DEVMODE, not a recent innovation.</p>
<p>To explain my confusion: in the past I&#8217;ve extracted type information from the Windows headers and anonymous structs were the kind of detail that caused difficulties, so I was surprised I was unaware of a workaround.  But it wasn&#8217;t a useful workaround because even as recently as Windows 8 it wasn&#8217;t used everywhere it was needed.</p>
<p>Anyway, it&#8217;s nice to see compatibility with other compilers improving.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment odd alt depth-2" id="comment-1308675">
				<div id="div-comment-1308675" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Stefan Kanthak</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170907-00/?p=96956#comment-1308675">
			September 7, 2017 at 8:10 am</a>		</div>

		<p>No, these were not added recently: you can find them in SDKs published in the last Millennium!<br />
WINNT.H has them at least since the SDK for Windows 7 and .NET 4.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even depth-2" id="comment-1308685">
				<div id="div-comment-1308685" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Mark Jansen</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170907-00/?p=96956#comment-1308685">
			September 7, 2017 at 8:15 am</a>		</div>

		<p>See the VARIANT types for examples that are way older.<br />
There are also macro&#8217;s to access the members, that will work both with and without NONAMELESSUNION defined (like V_VT to access the &#8216;vt&#8217; field.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1 parent" id="comment-1308647">
				<div id="div-comment-1308647" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">pc</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170907-00/?p=96956#comment-1308647">
			September 7, 2017 at 7:54 am</a>		</div>

		<p>This makes me curious about how many compilers and compiler options Microsoft tests their SDK/API with. It seems like it&#8217;d be a daunting task with a substantial testing matrix.</p>

		
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-wndsks even depth-2 parent" id="comment-1308786">
				<div id="div-comment-1308786" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/skSdnW' rel='external nofollow' class='url'>skSdnW</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170907-00/?p=96956#comment-1308786">
			September 7, 2017 at 11:22 am</a>		</div>

		<p>The MinGW/GCC toolchain use their own set of Win32 header files because of stuff like __uuidof and other non-standard things. I don&#8217;t remember if MinGW was ever able to use the official SDK. Maybe a 20 year old SDK would work, who knows.</p>
<p>I always wondered why the SDK does not do something like #ifndef _MSC_VER #include  #endif, then GCC could just ship that file with the correct defines mapping to their __attribute__((whatever)) stuff.</p>

		
				</div>
		<ol class="children">
		<li class="comment odd alt depth-3 parent" id="comment-1308815">
				<div id="div-comment-1308815" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170907-00/?p=96956#comment-1308815">
			September 7, 2017 at 8:28 pm</a>		</div>

		<p>Tell me, what do you expect to happen if the standard windows headers were shipped with and used to compile Wine?</p>

		
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-wndsks even depth-4 parent" id="comment-1308857">
				<div id="div-comment-1308857" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/skSdnW' rel='external nofollow' class='url'>skSdnW</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170907-00/?p=96956#comment-1308857">
			September 8, 2017 at 5:29 am</a>		</div>

		<p>I never said anything about Wine, I&#8217;m talking about using the official headers with GCC/CLang/whatever to build normal applications. For Wine it is a legal issue, not a technical issue.</p>

		
				</div>
		<ol class="children">
		<li class="comment odd alt depth-5" id="comment-1308937">
				<div id="div-comment-1308937" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170907-00/?p=96956#comment-1308937">
			September 8, 2017 at 12:43 pm</a>		</div>

		<p>I went back and checked; mingw branched from cygwin, which quite possibly couldn&#8217;t use the official headers, and was used by wine about as soon as it could be.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment even depth-4" id="comment-1308996">
				<div id="div-comment-1308996" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">smf</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170907-00/?p=96956#comment-1308996">
			September 10, 2017 at 3:26 am</a>		</div>

		<p>Shipping the include files and using the include files are two different things. At one point one of the compilers shipped their own, but gave instructions on how to use the official include files if you legally obtained them.</p>
<p>Microsoft also ship clang with visual studio these days.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment byuser comment-author-mngoldeneagle odd alt depth-2 parent" id="comment-1308805">
				<div id="div-comment-1308805" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/MNGoldenEagle' rel='external nofollow' class='url'>MNGoldenEagle</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170907-00/?p=96956#comment-1308805">
			September 7, 2017 at 12:29 pm</a>		</div>

		<p>Wouldn&#8217;t be a easily parallelizable automated solution, though?  Seems like something you could manage via CI.  The initial configuration for the tests might be complex, but it&#8217;s all software; you&#8217;re not really relying on user interaction or anything like that.  And the answer is a simple binary of whether it compiles or not, with some optional post-functional testing perhaps.</p>

		
				</div>
		<ol class="children">
		<li class="comment even depth-3" id="comment-1308855">
				<div id="div-comment-1308855" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">pc</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170907-00/?p=96956#comment-1308855">
			September 8, 2017 at 5:19 am</a>		</div>

		<p>Oh, I&#8217;m sure a lot of it is automated. Still a lot of testing. And I assume they would need a lot of those post-compile functional checks to ensure that each and every API is being called with the right calling convention, all these various structs are laid out in memory exactly right, and so forth. There&#8217;s a lot of details and nuances that I could imagine being different.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment odd alt thread-even depth-1 parent" id="comment-1308695">
				<div id="div-comment-1308695" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Stefan Kanthak</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170907-00/?p=96956#comment-1308695">
			September 7, 2017 at 8:22 am</a>		</div>

		<p>Notice that I didn&#8217;t use any Microsoft insider information to solve this mystery. All the information you need is right there, if you just follow the symbol definitions.<br />
But also notice that the symbol NONAMELESSUNION and its use/purpose is <b>NOT</b> documented on MSDN&#8217;s <q>Using the Windows Headers</q> page, <a href="https://msdn.microsoft.com/en-us/library/windows/desktop/aa383745.aspx" rel="nofollow">https://msdn.microsoft.com/en-us/library/windows/desktop/aa383745.aspx</a>, where every developer and his dog would expect them.</p>

		
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-oldnewthing bypostauthor even depth-2 parent" id="comment-1308725">
				<div id="div-comment-1308725" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Raymond+Chen+-+MSFT' rel='external nofollow' class='url'>Raymond Chen - MSFT</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170907-00/?p=96956#comment-1308725">
			September 7, 2017 at 9:15 am</a>		</div>

		<p>Right. I&#8217;m saying that if you see them in the header file, you can chase down the definitions and figure out what they&#8217;re for based on their names.</p>

		
				</div>
		<ol class="children">
		<li class="comment odd alt depth-3 parent" id="comment-1308955">
				<div id="div-comment-1308955" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Stefan Kanthak</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170907-00/?p=96956#comment-1308955">
			September 8, 2017 at 2:32 pm</a>		</div>

		<p>Is your recommendation also applicable to (elsewhere not documented) structure definitions like RTL_VERIFIER_PROVIDER_DESCRIPTOR etc., or function prototype like RtlSetHeapInformation, RtlQueryHeapInformation etc. found in winnt.h?</p>

		
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-oldnewthing bypostauthor even depth-4" id="comment-1308965">
				<div id="div-comment-1308965" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Raymond+Chen+-+MSFT' rel='external nofollow' class='url'>Raymond Chen - MSFT</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170907-00/?p=96956#comment-1308965">
			September 8, 2017 at 2:52 pm</a>		</div>

		<p>Turning off nameless unions has no binary effect. The structure has the same layout either way. The only difference is how you refer to its members in source code. The resulting binary is identical. Calling undocumented functions or passing an undocumented structure affects the resulting binary. I can&#8217;t believe I have to explain this.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment odd alt depth-2 parent" id="comment-1308795">
				<div id="div-comment-1308795" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">ErikF</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170907-00/?p=96956#comment-1308795">
			September 7, 2017 at 11:43 am</a>		</div>

		<p>Stuff like this should be something that only the implementor should have to worry about IMO: Note that the page that you referenced discusses how the headers work with VC++. If your compiler ships with Windows headers and can produce PE files correctly, then it should be the responsibility of the compiler vendor to sort this out and document any requirements; otherwise you&#8217;re using the headers in an unsupported way and have to deal with any issues yourself.</p>

		
				</div>
		<ol class="children">
		<li class="comment even depth-3" id="comment-1308896">
				<div id="div-comment-1308896" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Stefan Kanthak</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170907-00/?p=96956#comment-1308896">
			September 8, 2017 at 7:50 am</a>		</div>

		<p>Setting NONAMELESSUNION but forces the <b>programmer</b> to change the sources which reference such previously unnamed unions.<br />
JFTR: the MSDN article talks about the Windows headers in general; Visual C++ is a subsection of it.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1308715">
				<div id="div-comment-1308715" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">JM</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170907-00/?p=96956#comment-1308715">
			September 7, 2017 at 9:05 am</a>		</div>

		<p>I remember asking in comp.lang.c why anonymous unions weren&#8217;t supported in ISO C, given their obvious usefulness. That was during the days of C99. Didn&#8217;t know they&#8217;ve since been added. Nor do I recall what answers I got (I seem to recall they were along the lines of &#8220;it&#8217;s not *that* useful a feature&#8221;).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1 parent" id="comment-1308766">
				<div id="div-comment-1308766" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Alan</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170907-00/?p=96956#comment-1308766">
			September 7, 2017 at 10:17 am</a>		</div>

		<p>What compilers are people using that don&#8217;t support anonymous structs and unions?</p>

		
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-jeremytais odd alt depth-2 parent" id="comment-1308776">
				<div id="div-comment-1308776" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/SimonRev' rel='external nofollow' class='url'>SimonRev</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170907-00/?p=96956#comment-1308776">
			September 7, 2017 at 10:52 am</a>		</div>

		<p>I have to trust my memory of an experience more than a decade ago, but IIRC, having used Visual C++ for many years, I assumed anonymous structs were part of the C++ language and was surprised to find out that while anonymous unions were part of the language, anonymous structs were not.  I think I had to write a quick Linux program and found that GCC was either generating warnings or errors at my usage of them.</p>

		
				</div>
		<ol class="children">
		<li class="comment even depth-3" id="comment-1308946">
				<div id="div-comment-1308946" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Matteo Italia</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170907-00/?p=96956#comment-1308946">
			September 8, 2017 at 2:30 pm</a>		</div>

		<p>They were warnings for sure, and probably only with -pedantic; I used anonymous unions with gcc many times, they are a quite widespread extension (and a very convenient one for sure).</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment odd alt depth-2" id="comment-1309027">
				<div id="div-comment-1309027" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua Schaeffer</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170907-00/?p=96956#comment-1309027">
			September 11, 2017 at 12:50 am</a>		</div>

		<p>The C# compiler doesn&#8217;t support anonymous unions. Preserving exact parity between interop definitions and Win32 header files is harder without tricks like DUMMYUNIONNAME.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment even thread-odd thread-alt depth-1" id="comment-1308785">
				<div id="div-comment-1308785" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Myria</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170907-00/?p=96956#comment-1308785">
			September 7, 2017 at 11:15 am</a>		</div>

		<p>I want to try to get the C++ committee to approve anonymous structs.  Most compilers already allow anonymous structs, though may warn about them being an extension.  They&#8217;re clearly useful in certain context.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-even depth-1" id="comment-1308856">
				<div id="div-comment-1308856" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">s</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170907-00/?p=96956#comment-1308856">
			September 8, 2017 at 5:25 am</a>		</div>

		<p>Gah! Nameless structs are a curse_ed evil from a primative time and should forever be banished from civilized society. It is the evil so great that one dares not speak its name (it has no name). Just say no.</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>