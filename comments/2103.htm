<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (13)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-1099183">
				<div id="div-comment-1099183" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">John Doe</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140113-00/?p=2103#comment-1099183">
			January 13, 2014 at 8:28 am</a>		</div>

		<p>Isn&#39;t thing a case of a leaky abstraction? And since we&#39;re at it, wouldn&#39;t it be better to filter out only state image index 1 and 2?</p>
<div class="post">[<em>LVS_EX_CHECKBOXES was not intended to be an abstraction. It&#39;s a convenience flag. -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1099193">
				<div id="div-comment-1099193" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">John Doe</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140113-00/?p=2103#comment-1099193">
			January 13, 2014 at 9:12 am</a>		</div>

		<p>Typo: thing =&gt; this.</p>
<p>Since this alone is not worthy of another comment, can we copy and change the notification sent to the default message handler, instead of completely ignoring the notification, in an attempt to avoid changing the state image index if it&#39;s 1 or 2?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1099203">
				<div id="div-comment-1099203" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">@John Doe</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140113-00/?p=2103#comment-1099203">
			January 13, 2014 at 9:16 am</a>		</div>

		<p>You didn&#39;t follow very well. Read the very last sentence again. Comprehend.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1099213">
				<div id="div-comment-1099213" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">John Doe</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140113-00/?p=2103#comment-1099213">
			January 13, 2014 at 9:47 am</a>		</div>

		<p>@@John Doe, dear. &quot;You didn&#39;t follow very well.&quot; I posted the second comment before the first response. &quot;Comprehend.&quot;</p>
<p>I&#39;m a stop trolling/troll feeding now.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1099353">
				<div id="div-comment-1099353" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">@John Doe</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140113-00/?p=2103#comment-1099353">
			January 14, 2014 at 6:32 am</a>		</div>

		<p>The response by Raymond merely repeated the second sentence of this blog entry. The point you failed to grasp is a different one, though: Your proposed answer to the problem is to prevent the checkbox from changing from the unchecked state to checked state. This results in a non-intuitive UI (having checkboxes that cannot be checked). Raymond&#39;s proposed solution prevents the checkbox from showing up altogether, which is about a thousand miles away from your attempt, hence the suggestion to re-read the very last sentence.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1099413">
				<div id="div-comment-1099413" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">John Doe</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140113-00/?p=2103#comment-1099413">
			January 14, 2014 at 8:12 am</a>		</div>

		<p>No, my proposal was to, instead of completely filtering out a list view item notification if it tries to change the state icon index of even items, that we either (again, only for for even items):</p>
<p>1) filter out only the ones that set it to 1 or 2, as to prevent only the checkbox images but nothing else</p>
<p>2) when it tries to set it to 1 or 2, actually leave it with the current one, but accepting every other change in the notification</p>
<p>That is, if the state icon index is either 1 or 2, make a copy of the notification. Then, make the new state icon index be the same as the current one, whatever it is. On the first notification, this should be 0, so no checkbox will ever appear. Every other change to the list view items will be accepted.</p>
<p>So, this is not that far from what Raymond has showed, just a little more permissive or generalizable.</p>
<p>Forwarding such notification message to the default list view WndProc is my actual question, if you may. I suppose calling DefWindowProc with the fake notification message would suffice.</p>
<p>All of this has usability problems:</p>
<p>&#8211; Why do some items have checkboxes and others don&#39;t?</p>
<p>&#8211; If you can live with the previous point, why not let some items have icons instead of simply being empty?</p>
<p>I think it&#39;s easy, by sufficiently exercising the little program, to come up with more. Note that intuition is subjective, so as is usual in UI design, a generallly problematic feature may actually be a solution in a specific situation.</p>
<p>As for the rhetoric question about abstraction, it&#39;s not normal for styles to be implemented in a user-visible way. I&#39;d expect the new style to actually extend list view items to have yet-another-field, not add two images and the developer having to know about them, their indexes and what they are, because it interferes with the program&#39;s own images.</p>
<p>No matter what the documentation says, this is quite unusual. Just sayin&#39;&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1099473">
				<div id="div-comment-1099473" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">@John Doe</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140113-00/?p=2103#comment-1099473">
			January 14, 2014 at 9:01 am</a>		</div>

		<p>With LVS_EX_CHECKBOXES there is no need to filter anything. The state item index will either be 1 or 2. If the notification is changing it to anything else, you&#39;re dealing with a list view control that isn&#39;t using the default LVS_EX_CHECKBOXES style, but rather its own image list. You cannot make assumptions for controls you do not know. Your proposal is neither more permissive nor generalizable, but rather unnecessary code spent to implement a bug.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1099483">
				<div id="div-comment-1099483" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">John Doe</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140113-00/?p=2103#comment-1099483">
			January 14, 2014 at 9:41 am</a>		</div>

		<p>You&#39;re right about that. So I checked, and the ListView_GetCheckState macro will fail if the state index value isn&#39;t 1 or 2.</p>
<p>So, if one takes this little application and extend it for some useful purpose, remember that it&#39;s based on undocument behavior, maybe one that can change in the future (but, well, if Raymond published this little app, maybe not), and to treat the even items differently everywhere.</p>
<p>Again, since we&#39;re at it, and we have:</p>
<p>&#8211; An extended style that&#39;s just a convinience, it&#39;s documented to behave in a certain way, with certain images in the list view</p>
<p>&#8211; A little application that messes up with that behavior, by not allowing the state index change and making ListView_GetCheckState generally break</p>
<p>Why not extend the mess to actually allow the items to have other images? It wouldn&#39;t be buggier than what it is now, given that a state index other that 1 or 2 is not documented for when the LVS_EX_CHECKBOXES extended style is used.</p>
<p>Probably, and in an attempt to make the discussion shorter, the better thing to do would be to replicate what this extended style does, and extend for the lack of a check-box (state index 0), and possibly (why not?) for an indeterminate checkbox (e.g. state index 3). Since we&#39;ll not be using the extended style, we&#39;ll also not use that macro.</p>
<div class="post">[<em><a href="http://msdn.microsoft.com/en-us/library/windows/desktop/bb774732(v=vs.85).aspx">The behavior is documented</a>. Not sure what you mean about breaking <code>ListView_GetCheckState</code>; that remains unaffected. And yes, this is a special-purpose function which assumes you don&#39;t need other fancier states. That&#39;s why it&#39;s a Little Program, not a &quot;here&#39;s a function you can copy and paste without understanding what it does&quot; sample. -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1099503">
				<div id="div-comment-1099503" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">John Doe</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140113-00/?p=2103#comment-1099503">
			January 14, 2014 at 11:12 am</a>		</div>

		<p>@Raymond, you&#39;re right, it&#39;s documented, my bad, I missed it:</p>
<p>&quot;Setting the state image to zero removes the check box.&quot;</p>
<p>But ListView_GetCheckState returns true if the state image is zero. Actually, an underflowed UINT:</p>
<p>#define ListView_GetCheckState(hwndLV, i) </p>
<p> &nbsp; ((((UINT)(SNDMSG((hwndLV), LVM_GETITEMSTATE, (WPARAM)(i), LVIS_STATEIMAGEMASK))) &gt;&gt; 12) -1)</p>
<p>Anyway, I&#39;d make the message handling function partially accept item change notifications, instead of throwing them out entirely.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1099723">
				<div id="div-comment-1099723" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140113-00/?p=2103#comment-1099723">
			January 15, 2014 at 12:38 pm</a>		</div>

		<p>Then don&#39;t call ListView_GetCheckState on listbox items that you removed the checkbox on.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1099823">
				<div id="div-comment-1099823" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">John Doe</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140113-00/?p=2103#comment-1099823">
			January 16, 2014 at 7:10 am</a>		</div>

		<p>@Joshua, I won&#39;t, but shouldn&#39;t the documentation reflect that it only works for items which have a checkbox?</p>
<p>Right now, it&#39;s documented that it works if the LVS_EX_CHECKBOXES extended style is in use, but that&#39;s not the whole story.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1099943">
				<div id="div-comment-1099943" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">@John Doe</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140113-00/?p=2103#comment-1099943">
			January 16, 2014 at 9:02 am</a>		</div>

		<p>The documentation says: &quot;This [ListView_GetCheckState] should be used only for list-view controls that have the LVS_EX_CHECKBOXES style.&quot; I doesn&#39;t say that all ListView controls that happen to also have the LVS_EX_CHECKBOXES style set (like the modified version in this blog entry) will be suitable. It states, that the LVS_EX_CHECKBOXES is one requirement, but may not be the only requirement.</p>
<p>If you still find the documentation lacking, simply file a defect report and see how things work out.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1099983">
				<div id="div-comment-1099983" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">@John Doe</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140113-00/?p=2103#comment-1099983">
			January 16, 2014 at 9:04 am</a>		</div>

		<p>Also, mind the Return value description: &quot;If this macro is applied to a list-view control that does not have check boxes enabled, the return value is not reliable.&quot;</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>