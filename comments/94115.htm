<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (14)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1 parent" id="comment-1261115">
				<div id="div-comment-1261115" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">wqw</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160818-00/?p=94115#comment-1261115">
			August 18, 2016 at 7:36 am</a>		</div>

		<p>Why does such simple thing as a process message pump quickly turn into an abomination? I might have multiple modeless forms (non-modal dialogs), even from 3rd party dynamicly loaded plugins. How is my process message pump supposed to handle these? Custom registration scheme for current `hdlg` and `hacc`?</p>
<p>Totally broken design IMHO!</p>

		
				</div>
		<ol class="children">
		<li class="comment odd alt depth-2 parent" id="comment-1261125">
				<div id="div-comment-1261125" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Pietro Gagliardi (andlabs)</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160818-00/?p=94115#comment-1261125">
			August 18, 2016 at 8:08 am</a>		</div>

		<p>I would like to know as well, but I&#8217;ve always had the suspicion that this sort of application design is the thing that&#8217;s broken from the perspective of the Windows application model, and not the design of IsDialogMessage().</p>
<p>Or to put it another way, let&#8217;s say you have a program like Visual Studio or Photoshop that has lots of possibly-dockable toolbox windows open alongside the main content. Should those individual toolboxes be navigable with the Tab key? If so, how *should* one handle that case? Tracking every WM_ACTIVATE or WM_NCACTIVATE (in the same way as <a href="https://blogs.msdn.microsoft.com/oldnewthing/20140521-00/?p=943" rel="nofollow">https://blogs.msdn.microsoft.com/oldnewthing/20140521-00/?p=943</a>) to decide what the current dialog window is? GetActiveWindow()?</p>
<p>A different question that has the same purpose is: Why does IsDialogMessage() take the hdlg parameter in the first place? Couldn&#8217;t it just gather the correct dialog from, say, GetAncestor(msg-&gt;hwnd, GA_ROOT)? Because as it stands, if I have multiple toplevel windows on the same thread, and a code-modal dialog running (say, IFileDialog::Show()), then tab navigation stops working for the other windows because the system-provided dialog box message loop only calls IsDialogMessage() for that one dialog. Not every message has to have an associated window handle, though, and I&#8217;m not sure what IsDialogMessage() would need to watch for from messages without one&#8230;</p>
<p>As for multiple accelerator tables, I can&#8217;t think of a good use case for those, apart from either a) having different sets of accelerators for different parts of your program, which I&#8217;m pretty sure would just lead to endless confusion, or b) separating a giant accelerator table into multiple smaller ones, one for each part of your program, and calling TranslateAccelerator() multiple times â€” which seems pointless since the messages that result don&#8217;t care which accelerator table is used (so all would have to avoid collisions with accelerator IDs anyway).</p>

		
				</div>
		<ol class="children">
		<li class="comment even depth-3 parent" id="comment-1261275">
				<div id="div-comment-1261275" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Neil</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160818-00/?p=94115#comment-1261275">
			August 19, 2016 at 3:27 am</a>		</div>

		<p>As soon as you invent that time machine I&#8217;ll go back in time and get key messages to bubble in the same manner as WM_SETCURSOR so that dialogs can do their own navigation and top-level windows can process their own accelerators without messing up the message loop.</p>

		
				</div>
		<ol class="children">
		<li class="comment odd alt depth-4" id="comment-1261295">
				<div id="div-comment-1261295" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Pietro Gagliardi (andlabs)</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160818-00/?p=94115#comment-1261295">
			August 19, 2016 at 5:16 am</a>		</div>

		<p>Sure, that would avoid the need for IsDialogMessage(), but my point, which I admit probably drowned in the post, was more &#8220;Should auxiliary windows have tab navigation in the first place? Or hell, non-dialogs at all?&#8221;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-oldnewthing bypostauthor even depth-4" id="comment-1261395">
				<div id="div-comment-1261395" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Raymond+Chen+-+MSFT' rel='external nofollow' class='url'>Raymond Chen - MSFT</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160818-00/?p=94115#comment-1261395">
			August 19, 2016 at 10:37 am</a>		</div>

		<p>If we&#8217;re going for a ride in the time machine, then may as well ask for the event to tunnel before bubbling. That way, the dialog box can pick off accelerators before controls see them. E.g., &#8220;I want Ctrl+C to copy all the text from the dialog box, even if the user is in a control that normally uses Ctrl+C to mean something else.&#8221;</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1261135">
				<div id="div-comment-1261135" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160818-00/?p=94115#comment-1261135">
			August 18, 2016 at 8:08 am</a>		</div>

		<p>And this awful mess is why you don&#8217;t want to have more than one message loop per thread if you can help it.</p>
<p>No fair blaming this design for lack of plugin support. It is inherited from the beginning, from before plugins could be a thing.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-fleet-command even thread-even depth-1" id="comment-1261175">
				<div id="div-comment-1261175" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Fleet+Command' rel='external nofollow' class='url'>Fleet Command</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160818-00/?p=94115#comment-1261175">
			August 18, 2016 at 10:32 am</a>		</div>

		<p>There should  really be a book called <i>Windows API messages for Dummies</i>.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1 parent" id="comment-1261205">
				<div id="div-comment-1261205" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Myria</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160818-00/?p=94115#comment-1261205">
			August 18, 2016 at 11:37 am</a>		</div>

		<p>There is confusion from the name &#8220;IsDialogMessage&#8221;, since the function has an effect, rather than merely querying whether the message is a dialog box message.</p>

		
				</div>
		<ol class="children">
		<li class="comment even depth-2" id="comment-1262375">
				<div id="div-comment-1262375" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Tim!</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160818-00/?p=94115#comment-1262375">
			August 26, 2016 at 11:31 am</a>		</div>

		<p>&#8220;Why yes, this message is for the dialog box, so I dispatched it to the button control. Mission accomplished. I&#8217;m so awesome!&#8221; </p>
<p>I wholeheartedly and sarcastically agree; side effects from a getter-named function are so awesome.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-oldnewthing bypostauthor odd alt depth-2" id="comment-1262405">
				<div id="div-comment-1262405" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Raymond+Chen+-+MSFT' rel='external nofollow' class='url'>Raymond Chen - MSFT</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160818-00/?p=94115#comment-1262405">
			August 26, 2016 at 2:20 pm</a>		</div>

		<p>I agree that the function has a terrible name. Better would be something like ProcessDialogMessage.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1 parent" id="comment-1261215">
				<div id="div-comment-1261215" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Yuri Khan</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160818-00/?p=94115#comment-1261215">
			August 18, 2016 at 1:17 pm</a>		</div>

		<p>What is Alt+F2?</p>

		
				</div>
		<ol class="children">
		<li class="comment odd alt depth-2 parent" id="comment-1261225">
				<div id="div-comment-1261225" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">ghbyrkit</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160818-00/?p=94115#comment-1261225">
			August 18, 2016 at 1:27 pm</a>		</div>

		<p>It is an example.  you should be able to infer that from how Raymond wrote the text &#8220;and you press, say, Alt+F2.&#8221;.  So he was giving an example of an accelerator sequence (search on the web for it, rather than expect a tutorial on it here&#8230;)  &#8216;Alt&#8217; keys generally begin an accelerator key sequence</p>

		
				</div>
		<ol class="children">
		<li class="comment even depth-3 parent" id="comment-1261425">
				<div id="div-comment-1261425" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://programmerman.net/' rel='external nofollow' class='url'>Nick</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160818-00/?p=94115#comment-1261425">
			August 19, 2016 at 12:10 pm</a>		</div>

		<p>99% sure Yuri was asking what Alt+F2 does in a dialog when it&#8217;s NOT bound to a custom accelerator. Given that a lot of those types of accelerators are invisible if you don&#8217;t know they&#8217;re doing something (think Ctrl+C to copy, there&#8217;s no visible state change), it seems like a reasonable question.</p>

		
				</div>
		<ol class="children">
		<li class="comment odd alt depth-4" id="comment-1261565">
				<div id="div-comment-1261565" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Yuri Khan</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160818-00/?p=94115#comment-1261565">
			August 19, 2016 at 11:43 pm</a>		</div>

		<p>I knew IsDialogMessage handles navigation between controls and Enter and Esc as shortcuts for OK and Cancel, but it was unclear to me why it would decide that Alt+F2 is for the dialog. I was assuming IsDialogMessage is conservative in what it handles.</p>
<p>However, reading Wineâ€™s source code for IsDialogMessage revealed that it is greedy: its catch-all case dispatches all unrecognized messages whose target is a child of the dialog and returns TRUE.</p>
<p>(Wine is not Windows but is a reasonable predictor of actual Windows behavior.)</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>