<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (15)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-890443">
				<div id="div-comment-890443" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joel</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110124-00/?p=11683#comment-890443">
			January 24, 2011 at 7:56 am</a>		</div>

		<p>I wish Visual Studio 2008 would use something like this for the toolbox sidebar which takes forever, as it adds each custom control one-by-one to the list while also repeatedly jumping between the topmost, bottommost and currently selected items in the list (for no apparent reason).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-890453">
				<div id="div-comment-890453" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">640k</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110124-00/?p=11683#comment-890453">
			January 24, 2011 at 8:05 am</a>		</div>

		<p>If you think vs2008 is slow, try vs2010.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-890463">
				<div id="div-comment-890463" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110124-00/?p=11683#comment-890463">
			January 24, 2011 at 8:52 am</a>		</div>

		<p>Just don&#39;t use the designer and you&#39;ll be fine.</p>
<p>I almost never use it these days. I can do a smaller/faster/better job in code.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-890473">
				<div id="div-comment-890473" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Alex Grigoriev</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110124-00/?p=11683#comment-890473">
			January 24, 2011 at 10:15 am</a>		</div>

		<p>I wish Windows Live (DirectActiveX.NET just kidding) Mail programmers worked in the same company as Raymond Chen. Oops, they do. The damn thing doesn&#39;t know to use WM_SETREDRAW when deleting the mails from the list.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-890493">
				<div id="div-comment-890493" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">@Alex Grigoriev</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110124-00/?p=11683#comment-890493">
			January 24, 2011 at 1:26 pm</a>		</div>

		<p>I wish the commenters would actually complain on the correct blog <a rel="nofollow" target="_new" href="http://windowsteamblog.com/windows_live/b/windowslive/" rel="nofollow">windowsteamblog.com/&#8230;/windowslive</a>. Oops, that would mean they&#39;d have to do something other than complain to someone who has nothing to do with said product. This means I have to read the damn comments that have nothing to do with the post.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-890503">
				<div id="div-comment-890503" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joel</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110124-00/?p=11683#comment-890503">
			January 24, 2011 at 2:00 pm</a>		</div>

		<p>@Alex I&#39;m not really planning to do anything about it. &nbsp;It&#39;s a minor annoyance, honestly, and only an issue the first time I start up VS for the day. &nbsp;Still&#8230;I wish they had used something like WM_SETREDRAW. &nbsp;Just sayin&#39;.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-890523">
				<div id="div-comment-890523" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Brian Frost</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110124-00/?p=11683#comment-890523">
			January 24, 2011 at 2:43 pm</a>		</div>

		<p>I&#39;ve seen the angst over the &#39;wrong&#39; use of LockWindowUpdate in favour of WM_SETREDRAW but my approach to reducing screen flicker in my Delphi Apps is rather empirical. In my tools box I have four possibilities &#8211; DoubleBuffered (writes the bitmap to a backing canvas before painting), BeginUpdate-EndUpdate (ListView, TreeView etc) LockWindowUpdate() and WM_SETREDRAW. I fiddle with each until I find a solution that looks nice. Invariably LockWindowUpdate looks best although I know its naughty. Why is it best?</p>
<div class="post">[<i>It&#39;s not surprising that naughty gives the best results for the person being naughty. If your network card doesn&#39;t implement exponential backoff but instead always retransmits immediately, then you will win all collisions. If you steal from the store, you don&#39;t have to pay. If you grab all the crayons in art class, then you will have an easier time drawing your pictures. Of course, you also screw over everybody else. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-brunopitrus odd alt thread-odd thread-alt depth-1" id="comment-890553">
				<div id="div-comment-890553" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/kinokijuf' rel='external nofollow' class='url'>kinokijuf</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110124-00/?p=11683#comment-890553">
			January 24, 2011 at 9:25 pm</a>		</div>

		<p>@Alex Grigoriev;@Alex Grigoriev: I bet this is leftover from OE. I see exact same behaviour in winmail.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-890563">
				<div id="div-comment-890563" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">bad api</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110124-00/?p=11683#comment-890563">
			January 24, 2011 at 11:05 pm</a>		</div>

		<p>[It&#39;s not surprising that naughty gives the best results for the person being naughty. If your network card doesn&#39;t implement exponential backoff but instead always retransmits immediately, then you will win all collisions. If you steal from the store, you don&#39;t have to pay. If you grab all the crayons in art class, then you will have an easier time drawing your pictures. Of course, you also screw over everybody else. -Raymond]</p>
<p>Exponential backoff will most likely make collisions worse. Only random backoff will minimize collisions.</p>
<p>To draw flicker free in windows gdi you have to STEAL resources?</p>
<div class="post">[<i>Who said you were stealing resources? I was just giving real-world examples of how bad people get an advantage over people who follow the rules. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-890583">
				<div id="div-comment-890583" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Brian Frost</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110124-00/?p=11683#comment-890583">
			January 24, 2011 at 11:55 pm</a>		</div>

		<p>..and my real point is why should LockWindowUpdate() give a &#39;better&#39; visual effect than WM_SETREDRAW? </p>
<div class="post">[<i>I thought I explained it in the article. WM_SETREDRAW lets the control decide how to redraw. Maybe the control does a bad job. But instead of LockWindowUpdate you can just ShowWindow(SW_HIDE), which is a local solution. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-890593">
				<div id="div-comment-890593" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">nikos</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110124-00/?p=11683#comment-890593">
			January 25, 2011 at 1:45 am</a>		</div>

		<p>talking about the listview control, its implementation of setredraw is very buggy. If I turn redraw off, then add/rearrange a lot of items, chances are that when redraw is re-enabled the control will not paint fully, not scroll correctly or both. The end result leaves much to be admired (especially in LVS_LIST) so usually I request a full redraw with Invalidate() after each WM_SETREDRAW(true)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-gregm odd alt thread-odd thread-alt depth-1" id="comment-890633">
				<div id="div-comment-890633" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/GregM' rel='external nofollow' class='url'>GregM</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110124-00/?p=11683#comment-890633">
			January 25, 2011 at 7:46 am</a>		</div>

		<p>Nikos, how is it buggy when it behaves exactly as documented?</p>
<p>This message can be useful if an application must add several items to a list box. The application can call this message with wParam set to FALSE, add the items, and then call the message again with wParam set to TRUE. Finally, the application can call RedrawWindow(hWnd, NULL, NULL, RDW_ERASE | RDW_FRAME | RDW_INVALIDATE | RDW_ALLCHILDREN) to cause the list box to be repainted.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-890723">
				<div id="div-comment-890723" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Gabe</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110124-00/?p=11683#comment-890723">
			January 25, 2011 at 9:11 am</a>		</div>

		<p>If you&#39;re trying to avoid flickering, I don&#39;t see how ShowWindow(SW_HIDE) would help. It sounds like you&#39;re suggesting that one should hide the control, perform updates, and show it again. That will definitely cause flickering!</p>
<div class="post">[<i>But it will speed up the update. If you want to get rid of the flickering, you disable redraw on the parent, I guess. Or put up a cover window. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-890753">
				<div id="div-comment-890753" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">bad api</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110124-00/?p=11683#comment-890753">
			January 25, 2011 at 10:19 am</a>		</div>

		<blockquote><p>
  Nikos, how is it buggy when it behaves exactly as documented?
</p></blockquote>
<p>The listview content is easily provoked to garbage when enabling gridlines and adding items.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-891133">
				<div id="div-comment-891133" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">bob asking</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110124-00/?p=11683#comment-891133">
			January 27, 2011 at 6:59 am</a>		</div>

		<p>Can you please clarify about WM_SETREDRAW message &#8211; does it allow nesting? I mean if you do SendMsg(WM_SET&shy;REDRAW, FALSE) twice, then SendMsg(WM_SET&shy;REDRAW, TRUE) twice, will it allow repainting only after second SendMsg(WM_SET&shy;REDRAW, TRUE)?</p>
<p>Also, from your post it is not very clear to me how should I implement WM_SET&shy;REDRAW. Are there any examples of how it could be done? For example, should I call default implementation? And what other messages should be handled in specific way while setredraw flag is set?</p>
<div class="post">[<i>WM_SETREDRAW does not nest. I&#39;ll consider &quot;How to implement WM_SETREDRAW&quot; a topic suggestion since I&#39;m not going to try to create a scratch program in a comment. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>