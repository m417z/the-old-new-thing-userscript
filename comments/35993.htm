<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (24)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-268953">
				<div id="div-comment-268953" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Stewart Tootill</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050401-00/?p=35993#comment-268953">
			April 1, 2005 at 7:12 am</a>		</div>

		<p>Create a window that is a child of the desktop window then create a dialog from it?</p>
<p>I just tried that with MessageBox though and nothing particularly nasty seemed to happen,</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-268963">
				<div id="div-comment-268963" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blogs.msdn.com/oldnewthing/' rel='external nofollow' class='url'>Raymond Chen</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050401-00/?p=35993#comment-268963">
			April 1, 2005 at 7:15 am</a>		</div>

		<p>That&#8217;s because Windows XP SP1 (or was it 2?) contains special code specifically to fix people who have this bug.  Try it on Windows 2000.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-268973">
				<div id="div-comment-268973" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Koro</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050401-00/?p=35993#comment-268973">
			April 1, 2005 at 7:31 am</a>		</div>

		<p>I come to wonder why the GetDesktopWindow() function exists in the first place if we must not use it.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-268983">
				<div id="div-comment-268983" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Frederik Slijkerman</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050401-00/?p=35993#comment-268983">
			April 1, 2005 at 7:32 am</a>		</div>

		<p>Well, the fix for that is simple. Just reverse the two app hacks, so you find the ancestor first, and then test if it is the desktop window.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-269003">
				<div id="div-comment-269003" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Frederik Slijkerman</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050401-00/?p=35993#comment-269003">
			April 1, 2005 at 7:36 am</a>		</div>

		<p>It is kind of sad, by the way, that the MSDN page for DialogBox does not mention any requirements at all for the hwndParent parameter. People are hardly to blame for passing the desktop window here.</p>
<p>Apparently, the Windows programmers have gone through all this trouble to fix applications that pass the wrong window handle, but nobody thought of mentioning this to the MSDN team.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-269013">
				<div id="div-comment-269013" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blogs.msdn.com/oldnewthing/' rel='external nofollow' class='url'>Raymond Chen</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050401-00/?p=35993#comment-269013">
			April 1, 2005 at 7:37 am</a>		</div>

		<p>It doesn&#8217;t list any special requirements because you&#8217;re expected to &quot;follow the ball&quot; and understand that &quot;since this is an owner window, all the standard rules for owner windows apply&quot;.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-269023">
				<div id="div-comment-269023" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">mschaef</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050401-00/?p=35993#comment-269023">
			April 1, 2005 at 8:15 am</a>		</div>

		<p>&quot;It doesn&#8217;t list any special requirements because you&#8217;re expected to &quot;follow the ball&quot; and understand that &quot;since this is an owner window, . &quot;</p>
<p>While that&#8217;s theoretically true, since thousands of developers have made the mistake in reality, maybe &#8216;theoretically true&#8217; isn&#8217;t all that useful, after all. </p>
<p>API Documentation is hard, and there&#8217;s lots to it, I know, but how hard would a cautionary sentence or two be? Then again, now that the mistake&#8217;s been made and worked around, maybe there isn&#8217;t any point&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-269033">
				<div id="div-comment-269033" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.uesp.net' rel='external nofollow' class='url'>Daveh</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050401-00/?p=35993#comment-269033">
			April 1, 2005 at 8:17 am</a>		</div>

		<p>I second the motion that something should be mentioned concerning GetDesktopWindow() and CreateDialog(), preferably in one or both of those function entries in MSDN.</p>
<p>Strangely enough, the GetDesktopWindow() actually refers to the &quot;Initializing a Dialog Box&quot; article which uses GetDesktopWindow() to position the dialog.</p>
<p>I&#8217;m not saying this to point fingers or absolve developers of their responsibility to learn APIs and related concepts, but isn&#8217;t more explicit documentation always better?</p>
<p>Also, the problem with &quot;follow the ball&quot; is that new developers simply don&#8217;t understand the important Windows principles and thus make mistakes like are commonly referred to here. I wonder what percentage of Windows developers do actually understand things like this&#8230;I wouldn&#8217;t care to guess, but I&#8217;m sure its disappointing low.</p>
<p>Good stuff though&#8230;keep it up.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-269043">
				<div id="div-comment-269043" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blogs.msdn.com/oldnewthing/' rel='external nofollow' class='url'>Raymond Chen</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050401-00/?p=35993#comment-269043">
			April 1, 2005 at 8:24 am</a>		</div>

		<p>What sort of explanatory &quot;let me help you follow the ball&quot; remarks would you recommend?  Something like, &quot;Remember that modal dialogs disable the owner window. In particular, passing the desktop window (GetDesktopWindow()) as the owner causes the desktop to be disabled. Disabling a window disables its children. All windows are children of the desktop. Therefore, this disables all windows. You probably didn&#8217;t want that.&quot; added to all the modal dialog functions?</p>
<p>What about all the functions that use modal dialogs, such as PropertySheet, GetOpenFileName, ChooseColor, lineConfigDialog, RasPhonebookDlg, &#8230; There are thousands of such functions, new ones being written all the time. Should they all have the &quot;Choose your owner window wisely&quot; text? When the RAS team writes documentation for a new API, do they have to &quot;follow the ball&quot; all the way to the bottom for every single system service that their new API uses indirectly?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-269053">
				<div id="div-comment-269053" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Waleri</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050401-00/?p=35993#comment-269053">
			April 1, 2005 at 8:59 am</a>		</div>

		<p>Well, maybe not in every API help entry, but create a separate &quot;quick reference&quot; guide, containing entries like &quot;Don&#8217;t pass GetDesktopWindow() as modal dialog parent&quot;, &quot;Repost WM_QUIT message&quot;, &quot;Don&#8217;t send WM_CLOSE to disabled windows&quot;. A tight list of &quot;don&#8217;t do that&quot;, that&#8217;s all</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-269063">
				<div id="div-comment-269063" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Frederik Slijkerman</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050401-00/?p=35993#comment-269063">
			April 1, 2005 at 9:39 am</a>		</div>

		<p>I think just including a link to a page that lists the requirements for windows that own dialogs would be great. And yes, I would include that link everywhere an owner window is passed to a function, even in the documentation for RasPhonebookDlg.</p>
<p>If you are just trying to open a phone book dialog, you might not be intimately familiar with dialog box construction. And in some way, it seems logical to pass GetDesktopWindow() if you don&#8217;t want the dialog to be owned by a specific application.</p>
<p>Since the documentation for DialogBox does not even mention the fact that NULL is a valid value to pass for the owner window, I guess most programmers who pass GetDesktopWindow() are in fact trying to be careful. Just one extra line of documentation could have avoided all this.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-269073">
				<div id="div-comment-269073" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.uesp.net' rel='external nofollow' class='url'>Daveh</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050401-00/?p=35993#comment-269073">
			April 1, 2005 at 9:41 am</a>		</div>

		<p>The point would be to document it somewhere, and if it is already documented make it more visible from the relevant entries. CreateDialog() could also point out that a NULL input hParentWnd is valid. I actually find the MSDN documentation very good in general, but that doesn&#8217;t mean it cannot be improved.</p>
<p>I would say some of this stems from the Windows API seeming to be simple at first glance but you actually need a decent grasp of the concepts as mentioned. A new Windows developer sees CreateDialog() take a HWND and GetDesktopWindow() returns a HWND, and all of a sudden you have 100s (1000s?) of programs doing it, big and small alike.</p>
<p>Is there a solution to this kind of problem? I&#8217;d like to think so even I don&#8217;t have any easy answers&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-269083">
				<div id="div-comment-269083" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Mark Hampton</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050401-00/?p=35993#comment-269083">
			April 1, 2005 at 9:54 am</a>		</div>

		<p>I used to create documentation in the &quot;follow the ball&quot; way, but I found out that many of the users of the documentation are klutzes and just couldn&#8217;t hold the damn ball. So, I tend to repeat things over and over in the documentation to hammer the do&#8217;s and don&#8217;ts into the user of the documentation. </p>
<p>On an aside, I&#8217;ve read in many of your posts about &quot;shims&quot;. Do you have a post that describes shims and how they work? </p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-269123">
				<div id="div-comment-269123" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blogs.msdn.com/oldnewthing/' rel='external nofollow' class='url'>Raymond Chen</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050401-00/?p=35993#comment-269123">
			April 1, 2005 at 9:59 am</a>		</div>

		<p>It is the the GetMessage and the DispatchMessage that need to be matched. If you dispatch a message via DispatchMessageW to an ANSI window, the thunk layer translate the message from Unicode to ANSI before delivering it to the wndproc. Perhaps you were using a custom thunk layer (for Win95 compat) that didn&#8217;t do this translation?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-269093">
				<div id="div-comment-269093" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blogs.msdn.com/mgrier' rel='external nofollow' class='url'>Michael Grier [MSFT]</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050401-00/?p=35993#comment-269093">
			April 1, 2005 at 10:03 am</a>		</div>

		<p>Doesn&#8217;t that loop have a bug?</p>
<p>The issue is this: you have to call the correct GetMessageA/DispatchMessageA vs. GetMessageW/DispatchMessageW depending on whether the hwnd has an ANSI vs. Unicode wndproc.</p>
<p>We had to fix this repeatedly in private message loops in visual studio (where the plugins/packages were non-uniform in Unicode vs. ANSI/MBCS usage).</p>
<p>Maybe you only have to be careful about this on certain OSes?  The problem is/was that calling GetMessageA/DispatchMessageA on a message to a Unicode window would do the wrong thunking and you&#8217;d commonly see garbage characters either when typing non-ascii characters or when displaying them.  (It was also a problem calling GetMessageW/DispatchMessageW on a message to an ANSI window.)</p>
<p>As I recall the correct sequence was to peek the current message without removing it from the queue, check if the hwnd is ANSI vs. Unicode (IsWindowUnicode), then use the appropriate (A vs. W) GetMessage and DispatchMessage.</p>
<p>I haven&#8217;t had to write a message loop in years now so maybe the state of the art has advanced.<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-269113">
				<div id="div-comment-269113" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">G. Style</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050401-00/?p=35993#comment-269113">
			April 1, 2005 at 10:06 am</a>		</div>

		<p>Ha!! April Fools everybody! Good one Ray!<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-269133">
				<div id="div-comment-269133" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">mschaef</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050401-00/?p=35993#comment-269133">
			April 1, 2005 at 10:19 am</a>		</div>

		<p>&quot;Is there a solution to this kind of problem? I&#8217;d like to think so even I don&#8217;t have any easy answers&#8230; &quot;</p>
<p>Iterative refinement of the docs (and the API, to the extent possible).</p>
<p>Even if you can&#8217;t identify all the trouble spots in an API ahead of time, the fact that this mistake was made so many times indicates that there&#8217;s a fundamental problem &quot;following the ball&quot;. </p>
<p>Text describing the problem in the docs to CreateDialog is a good start. Text in the CreateDialog docs that says something like &quot;other API&#8217;s that accept parent window handles to create dialog boxes will have the same problem&quot; is a good follow up.</p>
<p>Maybe part of what&#8217;s at issue here is the role that API documentation plays: is it a simple specification or does it take a more tutorial role, guiding developers to correct usage? If you believe it&#8217;s a simple specification, it&#8217;s pretty poor, since it doesn&#8217;t document all the hidden &quot;App Hack&quot; behaviors. Imagine someone trying to (for whatever reason) literally depend on the documented behavior that passing in the desktop window to a CreateDialog call disables the entire window hierarchy. If you believe that the documentation should specify the API&#8217;s behavior, it should specify that desktop window handles in hwndParent are replaced with NULL. If you take the more tutorial stance, then the documentation ought to be at least as forgiving as the API code itself and document the typical mistake and its workaround.</p>
<p>This blog has done a good job of revealing a little of the complexity involved in making Windows work. That said every workaround of a buggy application changes API behavior in a possibly (likely) undocumented manner. For someone who wants to know what his calls into Windows are doing, that&#8217;s unsettling.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-269153">
				<div id="div-comment-269153" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.jasmusic.com' rel='external nofollow' class='url'>Joshua Schaeffer</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050401-00/?p=35993#comment-269153">
			April 1, 2005 at 1:45 pm</a>		</div>

		<p>&quot;Maybe part of what&#8217;s at issue here is the role that API documentation plays: is it a simple specification or does it take a more tutorial role, guiding developers to correct usage?&quot;</p>
<p>That&#8217;s where the API source code comes in. Those few enterprising developers who know how to get their hands on it, live by it in a very practical way, whether in official capacity or under the radar. Then there&#8217;s a diminished debate about the purpose or accuracy of API documents, because they merely become abstracts.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-269163">
				<div id="div-comment-269163" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.werkema.com' rel='external nofollow' class='url'>Sean Werkema</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050401-00/?p=35993#comment-269163">
			April 1, 2005 at 3:04 pm</a>		</div>

		<p>I&#8217;m curious about the &lt;dialog still active&gt; flag.  Obviously this is the same flag that is set by the EndDialog() function; but I&#8217;m curious where the actual data for this flag is stored.  It can&#8217;t be a local variable, or EndDialog couldn&#8217;t affect it; and it can&#8217;t be static, since you can have nested dialog boxes.  So it has to be part of the dialog-box (or window) data itself &#8212; or possibly a special posted message &#8212; both of which are possible answers given the parameters one passes to EndDialog().  So, Ray, could you elaborate just a little on that flag just to remove the last bit of &quot;magic&quot; from the code?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-269173">
				<div id="div-comment-269173" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blogs.msdn.com/oldnewthing' rel='external nofollow' class='url'>Raymond Chen</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050401-00/?p=35993#comment-269173">
			April 1, 2005 at 3:18 pm</a>		</div>

		<p>It&#8217;s part of the dialog manager&#8217;s internal bookkeeping. And it clearly has to be associated with the dialog itself, since you can have multiple active dialogs at once.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-269193">
				<div id="div-comment-269193" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">cola</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050401-00/?p=35993#comment-269193">
			April 2, 2005 at 1:46 am</a>		</div>

		<p>Why is it possible to disable the desktop?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-269223">
				<div id="div-comment-269223" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blogs.msdn.com/oldnewthing/archive/2005/04/04/405207.aspx' rel='external nofollow' class='url'>The Old New Thing</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050401-00/?p=35993#comment-269223">
			April 4, 2005 at 9:04 am</a>		</div>

		<p>Writing your own dialog loop.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-269453">
				<div id="div-comment-269453" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blogs.msdn.com/oldnewthing/archive/2005/04/06/406012.aspx' rel='external nofollow' class='url'>The Old New Thing</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050401-00/?p=35993#comment-269453">
			April 6, 2005 at 6:08 pm</a>		</div>

		<p>Injecting navigation keys into the dialog modal loop.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-438723">
				<div id="div-comment-438723" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blogs.msdn.com/oldnewthing/archive/2006/11/02/931674.aspx' rel='external nofollow' class='url'>The Old New Thing</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050401-00/?p=35993#comment-438723">
			November 2, 2006 at 10:00 am</a>		</div>

		<p>Disable the owner window, but make sure it&#8217;s really the owner.</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>