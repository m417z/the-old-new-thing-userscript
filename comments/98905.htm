<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (14)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1 parent" id="comment-1344215">
				<div id="div-comment-1344215" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Koro</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180604-00/?p=98905#comment-1344215">
			June 4, 2018 at 7:30 am</a>		</div>

		<p>This is why I think Windows should come with a built-in method for API hooking, so everyone would stop hand-rolling their own thing.<br />
Something like SetWindowSubclass. Coupled with a &#8220;load this DLL in all processes right now&#8221; call (requiring administrator of course, but bypassing UIPI, sessions, and all other roadblocks) would be perfect. Something like RegisterUserApiHook, but public and less theme-specific.</p>
<p>And yes I know the &#8220;but it could be used by malware!!!111&#8221; excuse applies, but there are many legitimate uses to be able to tweak one&#8217;s system completely.</p>

		
				</div>
		<ol class="children">
		<li class="comment odd alt depth-2 parent" id="comment-1344245">
				<div id="div-comment-1344245" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180604-00/?p=98905#comment-1344245">
			June 4, 2018 at 9:36 am</a>		</div>

		<p>Load DLL into all processes actually exists, and needs to go away. Application DLLs don&#8217;t behave when loaded into specialized memory-layout processes. The level of compatibility required to make it work is absurd, and the programming shops who want to use this feature aren&#8217;t willing to even try to get it right.</p>

		
				</div>
		<ol class="children">
		<li class="comment even depth-3" id="comment-1344265">
				<div id="div-comment-1344265" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Koro</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180604-00/?p=98905#comment-1344265">
			June 4, 2018 at 10:36 am</a>		</div>

		<p>AppInit_DLLs is a bad system, forces you to do stuff in your DllMain.<br />
And most DLLs misbehaving are doing so exactly because there is no proper way of doing API hooking.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt depth-3 parent" id="comment-1344285">
				<div id="div-comment-1344285" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Harry Johnston</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180604-00/?p=98905#comment-1344285">
			June 4, 2018 at 5:10 pm</a>		</div>

		<p>Ideally there would be a separate subsystem for processes that want complete control over their memory space.  But I&#8217;m thinking this is a case of -100 points; apart from Cygwin, I doubt such a subsystem would have seen all that much use.</p>

		
				</div>
		<ol class="children">
		<li class="comment even depth-4" id="comment-1344295">
				<div id="div-comment-1344295" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">laonianren</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180604-00/?p=98905#comment-1344295">
			June 5, 2018 at 2:52 am</a>		</div>

		<p>This is a thing: <a href="https://blogs.msdn.microsoft.com/wsl/2016/05/23/pico-process-overview/" rel="nofollow">https://blogs.msdn.microsoft.com/wsl/2016/05/23/pico-process-overview/</a></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt depth-4 parent" id="comment-1344515">
				<div id="div-comment-1344515" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180604-00/?p=98905#comment-1344515">
			June 5, 2018 at 5:56 pm</a>		</div>

		<p>A long time ago I dealt with something that needed a gigabyte byte array and 64 bit was not yet available. A random 3rd party dll would be a major headache unless I could rebase it.</p>

		
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-hans-yperman even depth-5" id="comment-1344685">
				<div id="div-comment-1344685" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/hyperman_' rel='external nofollow' class='url'>hyperman_</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180604-00/?p=98905#comment-1344685">
			June 6, 2018 at 11:57 am</a>		</div>

		<p>Got exactly your problem:  A 32 bit  JVM of windows has a heap limit of the maximum contiguous block of addres space it can allocate.  So of course our company bought some security contraption which injects a DLL in every process to lock down the proxy for crying out loud.   It doesn&#8217;t enable ASLR and decided on a base adress somewhere around the 1GB mark to cause maximal damage. No heaps above 600 mb possible.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment odd alt depth-4 parent" id="comment-1344725">
				<div id="div-comment-1344725" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Harry Johnston</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180604-00/?p=98905#comment-1344725">
			June 6, 2018 at 3:35 pm</a>		</div>

		<p>On second thoughts, although minimal/pico processes would be nice to have for special cases, the more common problems (such as those Joshua and Hyperman describe) could have been more easily solved by making rebasing mandatory for any DLL loaded via an API hook.</p>
<p>(And perhaps some mechanism for an executable to say &#8220;reserve me a single chunk of X megabytes of address space before you start loading any DLLs&#8221;?)</p>

		
				</div>
		<ol class="children">
		<li class="comment even depth-5" id="comment-1345505">
				<div id="div-comment-1345505" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Harry Johnston</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180604-00/?p=98905#comment-1345505">
			June 8, 2018 at 11:34 pm</a>		</div>

		<p>&#8230; which of course you can already do.  D&#8217;oh!</p>
<p>@Joshua, wouldn&#8217;t making the array static have solved your problem?</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1 parent" id="comment-1344225">
				<div id="div-comment-1344225" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180604-00/?p=98905#comment-1344225">
			June 4, 2018 at 8:07 am</a>		</div>

		<p>I looked at the actual Detours code being used for IsDebuggerPresent and ChangeDisplaySettingsEx, and that code makes a lot of sense. But whoever wrote that code forgot one thing. If you&#8217;re going to detour something, call LoadLibrary on yourself so that you don&#8217;t get unloaded.</p>
<p>Hint: IsDebuggerPresent() =&gt; false;</p>

		
				</div>
		<ol class="children">
		<li class="comment even depth-2 parent" id="comment-1344305">
				<div id="div-comment-1344305" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Neil</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180604-00/?p=98905#comment-1344305">
			June 5, 2018 at 5:00 am</a>		</div>

		<p>Presumably if an actual debugger is present it&#8217;s not beyond the wit of the programmer to set a breakpojnt on IsDebuggerPresent and simulate return true;&#8230;</p>

		
				</div>
		<ol class="children">
		<li class="comment odd alt depth-3" id="comment-1344405">
				<div id="div-comment-1344405" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">R P (MSFT)</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180604-00/?p=98905#comment-1344405">
			June 5, 2018 at 8:26 am</a>		</div>

		<p>Back in the day, a program which shall not be named (but which, remarkably, wasn&#8217;t a virus) did IsDebuggerPresent their own way: they&#8217;d do an int 3 and use (presumably) a hardware clock to see how quickly it executed. If it took too long, the program would terminate. And they sprinkled these checks liberally throughout the code, so they quickly got annoying.<br />
If you&#8217;re good enough with your debugger, you can work around that check, too, and without having to find where they&#8217;re checking the clock.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1 parent" id="comment-1344275">
				<div id="div-comment-1344275" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">adrianm</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180604-00/?p=98905#comment-1344275">
			June 4, 2018 at 12:37 pm</a>		</div>

		<p>I had the same problem back in the Amiga days. Two programs patched the same function and if you closed them in the wrong order it crashed.<br />
I solved it by patching the patch-function (SetFunction?) to return a trampoline which could be modified when the programs unhooked themselves. Caused extra indirections of course but lacking memory protection the alternative was a guru meditation.  Worked well until anti-virus became a thing</p>

		
				</div>
		<ol class="children">
		<li class="comment odd alt depth-2" id="comment-1344875">
				<div id="div-comment-1344875" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">John Styles</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180604-00/?p=98905#comment-1344875">
			June 7, 2018 at 9:24 am</a>		</div>

		<p>Quis patchiet ipsos patches?&#8221;</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>