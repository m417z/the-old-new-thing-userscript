<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (6)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment byuser comment-author-ajgelado even thread-even depth-1 parent" id="comment-1317445">
				<div id="div-comment-1317445" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Antonio+%27Grijan%27' rel='external nofollow' class='url'>Antonio 'Grijan'</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20171204-00/?p=97515#comment-1317445">
			December 4, 2017 at 10:42 am</a>		</div>

		<p>Frankly, this series could be renamed to &#8220;how not to add a feature to a control&#8221;. Given the care put by Microsoft in the design of the public interfaces (APIs, message model, etc.) of Windows and its user interface library, it&#8217;s surprising this got into production without raising some eyebrows.</p>

		
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-cheong odd alt depth-2" id="comment-1317466">
				<div id="div-comment-1317466" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/cheong00' rel='external nofollow' class='url'>cheong00</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20171204-00/?p=97515#comment-1317466">
			December 4, 2017 at 6:18 pm</a>		</div>

		<p>Btw, I&#8217;d be interested to know how Microsoft staffs did their code review in the old days (at the time like Win2.X or DOS). Did they only get review when there&#8217;s some bad smell of code detected by seniors or was there routine sampled checks?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even depth-2 parent" id="comment-1317485">
				<div id="div-comment-1317485" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">pc</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20171204-00/?p=97515#comment-1317485">
			December 5, 2017 at 5:43 am</a>		</div>

		<p>Well, as Raymond says if you understand the history you can understand why the tradeoffs that were made at the time may have made sense at the time. First you don&#8217;t have a concept of &#8220;treeview with checkboxes&#8221;, but you do have &#8220;treeview with ability to put images next to items&#8221;. So, people build their own libraries to use checkboxes for those images, in the best way they can (without even using undocumented internal structures). Next, Microsoft when trying to figure out what features to add, decides that since everybody wants treeviews with checkboxes, to go ahead and add them. Then, they have to decide which way to do so: (1) In a way that&#8217;s easily backwards-compatible with the existing codebases and libraries, or (2) In a more &#8220;Windows-native&#8221; way that makes more sense with how other controls are created, meaning that anybody who wants to use it needs to rewrite their code.</p>
<p>Microsoft has historically chosen option (1) whenever possible, as Raymond keeps on demonstrating. Engineering is all about understanding tradeoffs, and I&#8217;m sure that they made this one intentionally.</p>
<p>And if you think there should be an option (3) Do Both, then, well, the feature would have taken at least twice as long and might not have been included in the first place.</p>
<p>There are no good answers. There is merely understanding the tradeoffs one is making.</p>

		
				</div>
		<ol class="children">
		<li class="comment odd alt depth-3 parent" id="comment-1317495">
				<div id="div-comment-1317495" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">viila</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20171204-00/?p=97515#comment-1317495">
			December 5, 2017 at 8:38 am</a>		</div>

		<p>I don&#8217;t see why (3) should take twice as long. There is no reason why the enhancement has to be backwards compatible, adding new proper way wouldn&#8217;t stop the original workaround from working and the workaround that existing software already uses is already in place. You don&#8217;t need to do anything, just let it be. (In fact, since it&#8217;s being used by software it has to remain working no matter what you do.) Then implement (2) in the proper way.</p>
<p>Old software and people who like the old libraries continue to work as they always have. New software can take advantage of the new Right Way(tm) to do things.</p>

		
				</div>
		<ol class="children">
		<li class="comment even depth-4" id="comment-1317525">
				<div id="div-comment-1317525" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.silverbacknetworks.tech' rel='external nofollow' class='url'>Joshua Bowman</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20171204-00/?p=97515#comment-1317525">
			December 5, 2017 at 8:14 pm</a>		</div>

		<p>Realistically, there is no option 2. Option 1 was &#8220;Hey, our team made a nice routine to add checkboxes to the treeview last week. I can put it into common controls with an hour or two of work, maybe, save everyone the hassle in the future.&#8221; Option 3 involves tens of man-hours in meetings to design it robustly, then more hours to code it from scratch. Minimal effort won, in a way that it probably wouldn&#8217;t now.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment byuser comment-author-yuhong-bao odd alt thread-odd thread-alt depth-1" id="comment-1317455">
				<div id="div-comment-1317455" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Yuhong+Bao' rel='external nofollow' class='url'>Yuhong Bao</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20171204-00/?p=97515#comment-1317455">
			December 4, 2017 at 12:31 pm</a>		</div>

		<p>I wonder if it is possible to go through NULL when setting a new image list. The idea is ImageList_Destroy(TreeView_SetImageList(hwndTV, nullptr, TVSIL_STATE)); TreeView_SetImageList(hwndTV, newImageList, TVSIL_STATE);</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>