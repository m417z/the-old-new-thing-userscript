<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (28)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-238353">
				<div id="div-comment-238353" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://drazen.dotlic.name/weblog' rel='external nofollow' class='url'>Drazen Dotlic</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041229-00/?p=36853#comment-238353">
			December 29, 2004 at 8:05 am</a>		</div>

		<blockquote><p>
  &gt; (Yes, I could have simplified this code a little by using a built-in stack class, but as I have already noted in the context of smart pointers, I try to present these articles in &quot;pure&quot; C++ so people won&#8217;t get into arguments about which class library is best.)</p>
<p>stack is a part of C++ Standard Library, it&#8217;s not any particular vendor&#8217;s one, thus it is &quot;safe&quot; to use in this context.
</p></blockquote>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-238373">
				<div id="div-comment-238373" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://weblogs.asp.net/oldnewthing/' rel='external nofollow' class='url'>Raymond Chen</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041229-00/?p=36853#comment-238373">
			December 29, 2004 at 9:52 am</a>		</div>

		<p>It may be the part of the standard library, but it&#8217;s still a library. Some people may like std::string, others might prefer CString, still others may prefer their own string library. (If everybody agreed on std::string then why are there so many string libraries?)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-238393">
				<div id="div-comment-238393" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">John McCormick</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041229-00/?p=36853#comment-238393">
			December 29, 2004 at 10:36 am</a>		</div>

		<p>Perhaps if more people treated the standard library as a standard, more people would accept it as such. In any case, I don&#8217;t think too many people would lampoon you for using it.</p>
<p>I always find this sort of mix of c-like code and c++ code a bit jarring, but then I&#8217;m not really a windows programmer. Looking forward to tomorrow&#8217;s installment!</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-238403">
				<div id="div-comment-238403" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://weblogs.asp.net/oldnewthing/' rel='external nofollow' class='url'>Raymond Chen</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041229-00/?p=36853#comment-238403">
			December 29, 2004 at 10:38 am</a>		</div>

		<p>True, but if I chose a specific library (even the standard one), I would lose people who weren&#8217;t familiar with (or actively disliked) that library. But everybody who programs Windows knows what TCHAR is.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-238463">
				<div id="div-comment-238463" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://drazen.dotlic.name/weblog' rel='external nofollow' class='url'>Drazen Dotlic</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041229-00/?p=36853#comment-238463">
			December 29, 2004 at 2:47 pm</a>		</div>

		<blockquote><p>
  &gt;If everybody agreed on std::string then why are there so many string libraries?</p>
<p>So many? Besides MFC, I am not familiar with any other in widespread use.<br />
  <br />The only reason for these &quot;other&quot; libraries, including (parts of) MFC has been poor implementation (or buggy) of both C++ compiler and/or Standard Library. Things are a lot better now with VS.NET 2003 and will be even better with 2005. It&#8217;s time to start treating Standard Library as a part of C++ language, not something we might not use because we don&#8217;t like it or are not familiar with.
</p></blockquote>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-238473">
				<div id="div-comment-238473" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Eric TF Bat</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041229-00/?p=36853#comment-238473">
			December 29, 2004 at 2:57 pm</a>		</div>

		<p>Maybe it&#8217;s because I&#8217;ve been reading a lot of LISP code lately, but I looked at this article and my first thought was &quot;Why is Raymond posting randomly-indented assembler code on his blog?&quot;</p>
<p>C++: Just Say AAAARRGHH OH GOD STOP AAAAARRRGGGHHH HELP PLEASE PLEASE PLEASE UUURKKK!<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-238483">
				<div id="div-comment-238483" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Noob</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041229-00/?p=36853#comment-238483">
			December 29, 2004 at 3:04 pm</a>		</div>

		<p>What does fibers have to do with this?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-238493">
				<div id="div-comment-238493" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://weblogs.asp.net/larryosterman' rel='external nofollow' class='url'>Larry Osterman</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041229-00/?p=36853#comment-238493">
			December 29, 2004 at 3:06 pm</a>		</div>

		<p>Drazen,<br />
<br />  There are lots of reasons not to use std::string, and CString/CAtlString often provide an alternative to it.</p>
<p>  Just because STL&#8217;s a part of the C++ standard library doesn&#8217;t mean that it is a worthy solution for everyone &#8211; the code size bloat you get from using STL is enough to preclude its use in many scenarios (like most of the Windows core).  Also the fact that STL&#8217;s localization support is mediochre (it has to be because it&#8217;s platform neutral, and localization basically requires a platform specific infrastructure (how you specify your localizable resources depends on the platform)) precludes its use in many places.<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-238503">
				<div id="div-comment-238503" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Rick C</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041229-00/?p=36853#comment-238503">
			December 29, 2004 at 3:08 pm</a>		</div>

		<p>Noob, this is a multi-part lecture.  I&#8217;m sure Rand will get to that.  Part 1 is setting a stage.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-238513">
				<div id="div-comment-238513" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">MYG</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041229-00/?p=36853#comment-238513">
			December 29, 2004 at 4:09 pm</a>		</div>

		<p>Noob,</p>
<p>Because state is easily held on the CPU stack. A fiber is a bit like a thread in that it has its own stack but the context switching is driven by the application rather than the scheduler. </p>
<p>So the idea here is to have a tasking module without the tasking overhead (or part of it, stack space is overhead): two &quot;fibers&quot;, one a consumer, one a producer. </p>
<p>Think of fibers as setjmp()/longjmp() with separate stacks. </p>
<p>IIRC, there is a &quot;fiber like&quot; construct in later versions of VMS. I wonder if they are a Cutler decree or just a common good idea.<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-238523">
				<div id="div-comment-238523" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blogs.msdn.com/michkap/' rel='external nofollow' class='url'>Michael Kaplan</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041229-00/?p=36853#comment-238523">
			December 29, 2004 at 4:15 pm</a>		</div>

		<p>Speaking as the owner of a technology (namely, linguistic collation) and a colleague to the owner of a technology (namely encoding / codepages) and a former owner of a technology (namely, locale based formatting) which is superior in almost every way to the correponding CRT analogue, I can tell you that there are indeed times that the CRT is not always the best solution. And there do exist many times that it is not the answer&#8230;.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-238533">
				<div id="div-comment-238533" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://kentb.blogspot.com' rel='external nofollow' class='url'>Kent Boogaart</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041229-00/?p=36853#comment-238533">
			December 29, 2004 at 4:33 pm</a>		</div>

		<p>This is OT and for that I apologise . . .</p>
<p>Does anyone know where I can find information about the next standard version of C++? I remember hearing about this somewhere but have no idea what it is codenamed etcetera.</p>
<p>Nice article Raymond (as per usual).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-238573">
				<div id="div-comment-238573" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Tim Smith</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041229-00/?p=36853#comment-238573">
			December 29, 2004 at 10:00 pm</a>		</div>

		<p>std::auto_ptr is a perfect example of something that just because it is the standard doesn&#8217;t mean it is good.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-238593">
				<div id="div-comment-238593" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://andyandy.sprayblogg.no' rel='external nofollow' class='url'>Andreas H&#228;ber</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041229-00/?p=36853#comment-238593">
			December 30, 2004 at 1:38 am</a>		</div>

		<p>Kent:<br />
<br />You can find some links about the next C++ standard here: <a target="_new" href="http://www.gotw.ca/iso/" rel="nofollow">http://www.gotw.ca/iso/</a></p>
<p>And also check out Herb Sutter&#8217;s blog at <a target="_new" href="http://www.pluralsight.com/blogs/hsutter/default.aspx" rel="nofollow">http://www.pluralsight.com/blogs/hsutter/default.aspx</a></p>
<p>Happy new year everyone :)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-238653">
				<div id="div-comment-238653" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://drazen.dotlic.name/weblog' rel='external nofollow' class='url'>Drazen Dotlic</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041229-00/?p=36853#comment-238653">
			December 30, 2004 at 9:38 am</a>		</div>

		<blockquote><p>
  &gt;Drazen,<br />
  <br />&gt;&gt;There are lots of reasons not to use std::string, and CString/CAtlString often provide an alternative to it.</p>
<p>Larry,</p>
<p>you are right. But let&#8217;s put things into context here &#8211; this is supposed to be an example of a certain technique. State management is only a necessary &quot;evil&quot; here, it is not a meat of the post. I am simply arguing that standard stack could have been used to simplify the code sample without jeopardizing the message of the post &#8211; even better, shorter code might have improved the readibility and help push the message through.
</p></blockquote>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-238663">
				<div id="div-comment-238663" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://weblogs.asp.net/oldnewthing/' rel='external nofollow' class='url'>Raymond Chen</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041229-00/?p=36853#comment-238663">
			December 30, 2004 at 9:49 am</a>		</div>

		<p>Perhaps true, but when I see std:: stuff I tend to get more confused rather than less.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-238613">
				<div id="div-comment-238613" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://weblogs.asp.net/oldnewthing/archive/2004/12/30/344281.aspx' rel='external nofollow' class='url'>The Old New Thing</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041229-00/?p=36853#comment-238613">
			December 30, 2004 at 9:58 am</a>		</div>

		<p>This time, we&#8217;ll watch the enumerator lose.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-238673">
				<div id="div-comment-238673" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blogs.msdn.com/mgrier' rel='external nofollow' class='url'>Michael Grier [MSFT]</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041229-00/?p=36853#comment-238673">
			December 30, 2004 at 10:18 am</a>		</div>

		<p>The std:: stuff assumes you are comfortable with exceptions.  I personally believe that there are unsolvable quality problems associated with use of exceptions.  Thus, even though the library seems very useful, I stay as far away from the STL libraries as possible.</p>
<p>C and C++ (pre-STL) were systems programming languages which provided you with a syntax for using the underlying machine.  The libraries provided were really just tokens to portability.</p>
<p>With the introduction of STL, C++ is moving/has moved out of the systems programming space and is trying to seem like an application programming language like BASIC.  I personally don&#8217;t see the point.  If I wanted to use BASIC, with all its plusses and minuses, I&#8217;d use BASIC.<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-238713">
				<div id="div-comment-238713" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">asdf</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041229-00/?p=36853#comment-238713">
			December 30, 2004 at 10:54 am</a>		</div>

		<p>&quot;an application programming language like BASIC&quot;</p>
<p>I see Microsoft doesn&#8217;t do any drug testing&#8230;</p>
<p>Raymond: You need to cast the ULONGLONGs to unsigned __int64 when you pass it in to printf and you need the format to be %I64u because %I64d is the signed version.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-239033">
				<div id="div-comment-239033" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Cooney</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041229-00/?p=36853#comment-239033">
			January 3, 2005 at 10:09 am</a>		</div>

		<blockquote><p>
  I see Microsoft doesn&#8217;t do any drug testing&#8230;</p>
<p>Perhaps they do, just not the way you were thinking ;)
</p></blockquote>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-239133">
				<div id="div-comment-239133" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Sig9</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041229-00/?p=36853#comment-239133">
			January 4, 2005 at 10:58 am</a>		</div>

		<p>is part of the software industry.  if you do not learn to learn (ya ya ya) you will be out of a job as fast as you can say &quot;hello world!&quot;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-239463">
				<div id="div-comment-239463" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://weblogs.asp.net/larryosterman/archive/2005/01/05/347314.aspx' rel='external nofollow' class='url'>Larry Osterman's WebLog</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041229-00/?p=36853#comment-239463">
			January 5, 2005 at 6:58 pm</a>		</div>

		
		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-241363">
				<div id="div-comment-241363" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://weblogs.asp.net/larryosterman/archive/0001/01/01/347314.aspx' rel='external nofollow' class='url'>Larry Osterman's WebLog</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041229-00/?p=36853#comment-241363">
			January 10, 2005 at 2:03 pm</a>		</div>

		
		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-246543">
				<div id="div-comment-246543" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://dotnetjunkies.com/WebLog/barblog/archive/2005/01/18/45891.aspx' rel='external nofollow' class='url'>public Blog</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041229-00/?p=36853#comment-246543">
			January 19, 2005 at 12:11 am</a>		</div>

		<p>CSci 101 Part I</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-247833">
				<div id="div-comment-247833" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.wisniewski-online.com/cs/blogs/wizzys_world/archive/2005/01/20/4.aspx' rel='external nofollow' class='url'>Wizzy's World</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041229-00/?p=36853#comment-247833">
			January 20, 2005 at 6:32 pm</a>		</div>

		<p>A while back there was an article in MSDN magazine about wrapping up the unmaged fibers API to implement&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-460343">
				<div id="div-comment-460343" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://excastle.com/blog/archive/2007/01/11/10280.aspx' rel='external nofollow' class='url'>Joe White's Blog</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041229-00/?p=36853#comment-460343">
			January 11, 2007 at 10:19 pm</a>		</div>

		
		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-460373">
				<div id="div-comment-460373" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://excastle.com/blog/archive/0001/01/01/10280.aspx' rel='external nofollow' class='url'>Joe White's Blog</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041229-00/?p=36853#comment-460373">
			January 11, 2007 at 10:21 pm</a>		</div>

		
		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-572213">
				<div id="div-comment-572213" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.labraaten.com/wpblog/2007/11/29/mimic-the-c-yield-instruction-in-vc/' rel='external nofollow' class='url'>Labr??tens Web Log &raquo; Blog Archive &raquo; Mimic the C# yield instruction in VC++</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041229-00/?p=36853#comment-572213">
			November 28, 2007 at 7:25 pm</a>		</div>

		<p>PingBack from <a rel="nofollow" target="_new" href="http://www.labraaten.com/wpblog/2007/11/29/mimic-the-c-yield-instruction-in-vc/" rel="nofollow">http://www.labraaten.com/wpblog/2007/11/29/mimic-the-c-yield-instruction-in-vc/</a></p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>