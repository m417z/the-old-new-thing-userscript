<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (10)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment byuser comment-author-wndsks even thread-even depth-1" id="comment-1080933">
				<div id="div-comment-1080933" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/skSdnW' rel='external nofollow' class='url'>skSdnW</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20131003-00/?p=3043#comment-1080933">
			October 3, 2013 at 7:20 am</a>		</div>

		<p>If that is all LR_SHARED does, why does MSDN say this: &quot;Do not use LR_SHARED for images that have non-standard sizes, &#8230;&quot;?</p>
<div class="post">[<em>The caching code ignores the size (because in Win16, there was no way to load something at a nonstandard size). If you use LR_SHARED for a nonstandard size and you are the first to request it, then you put a nonstandard size into the cache, and the next person to ask for the resource will get the nonstandard size rather than the size they requested. If you are the second to request it, your nonstandard size will be ignored and the size in the cache will be returned instead. -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1080943">
				<div id="div-comment-1080943" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20131003-00/?p=3043#comment-1080943">
			October 3, 2013 at 7:35 am</a>		</div>

		<p>Probably because the cache can&#39;t accept nonstandard sizes.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-wndsks even thread-even depth-1" id="comment-1080953">
				<div id="div-comment-1080953" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/skSdnW' rel='external nofollow' class='url'>skSdnW</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20131003-00/?p=3043#comment-1080953">
			October 3, 2013 at 7:42 am</a>		</div>

		<p>&#8230;then it should say the limit is 256&#215;256, what standard sizes means has changed over the years as more icon sizes have been added.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1080973">
				<div id="div-comment-1080973" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Deduplicator</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20131003-00/?p=3043#comment-1080973">
			October 3, 2013 at 11:09 am</a>		</div>

		<p>Just read LR_SHARED as &quot;simulate win16&quot; instead of &quot;cache resource&quot;, because using it for anything else but its designed role is asking for trouble.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1080983">
				<div id="div-comment-1080983" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Nick</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20131003-00/?p=3043#comment-1080983">
			October 3, 2013 at 11:29 am</a>		</div>

		<p>It seems reasonable to assume that if you&#39;re going to share with others (passing LR_SHARED) there are some constraints in place to make sure that everyone participating in the sharing is happy. &nbsp;If, on the other hand, you want to be a special little snowflake, you can also take care of managing your own resources! :)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-wndsks odd alt thread-odd thread-alt depth-1" id="comment-1080993">
				<div id="div-comment-1080993" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/skSdnW' rel='external nofollow' class='url'>skSdnW</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20131003-00/?p=3043#comment-1080993">
			October 3, 2013 at 11:33 am</a>		</div>

		<p>@Raymond: If the LR_SHARED cache ignores size maybe MSDN say that you must also specify LR_DEFAULTSIZE?</p>
<p>Win7 seems to cache based on size:</p>
<p>void dumpico(HICON hIco)</p>
<p>{</p>
<p>ICONINFO ii;</p>
<p>BITMAP bm;</p>
<p>if (GetIconInfo(hIco, &amp;ii) &amp;&amp; GetObject(ii.hbmColor, sizeof(bm), &amp;bm))</p>
<p>printf(&quot;%#xt%ux%un&quot;, hIco, bm.bmWidth, bm.bmHeight);</p>
<p>}</p>
<p>void test()</p>
<p>{</p>
<p>HINSTANCE hSh32 = LoadLibraryA(&quot;SHELL32&quot;);</p>
<p>dumpico(LoadImage(hSh32, MAKEINTRESOURCE(1), IMAGE_ICON, 99, 99, LR_SHARED));</p>
<p>dumpico(LoadImage(hSh32, MAKEINTRESOURCE(1), IMAGE_ICON, GetSystemMetrics(SM_CXICON), GetSystemMetrics(SM_CYICON), LR_SHARED));</p>
<p>dumpico(LoadImage(hSh32, MAKEINTRESOURCE(1), IMAGE_ICON, 77, 77, LR_SHARED));</p>
<p>dumpico(LoadImage(hSh32, MAKEINTRESOURCE(1), IMAGE_ICON, 0, 0, LR_SHARED|LR_DEFAULTSIZE));</p>
<p>}</p>
<p>0x461081b 99&#215;99</p>
<p>0xbb406a7 32&#215;32</p>
<p>0x7bf0841 77&#215;77</p>
<p>0xbb406a7 32&#215;32</p>
<p>And if you load a SM_CXICON icon with LR_SHARED and assign it to a window it seems to pick up the small icon automatically&#8230;</p>
<div class="post">[<em>Congratulations, you found one case where the cache respects the size. But there are other cases where it doesn&#39;t. -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-fleet-command even thread-even depth-1" id="comment-1081003">
				<div id="div-comment-1081003" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Fleet+Command' rel='external nofollow' class='url'>Fleet Command</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20131003-00/?p=3043#comment-1081003">
			October 3, 2013 at 11:47 am</a>		</div>

		<p>Excellent so far but why bitmaps and strings are not reference-counted? It is not surprising if Windows team had discovered that bitmaps are rarely used more than once but strings seem like a candidate for reference-counting. (I just hope it has nothing to do with null-terminated strings.)</p>
<div class="post">[<em>Bitmaps and strings were not reference-counted because they weren&#39;t module resources. See <a href="http://blogs.msdn.com/b/oldnewthing/archive/2013/10/02/10453564.aspx">the linked article</a>. -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1081013">
				<div id="div-comment-1081013" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Marc K</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20131003-00/?p=3043#comment-1081013">
			October 4, 2013 at 5:27 am</a>		</div>

		<p>The biggest problem I&#39;ve had with LR_SHARED and &quot;non-standard&quot; sizes is wanting to load a predefined icon in a 16&#215;16 size. &nbsp;Without LR_SHARED, I&#39;d get NULL back. &nbsp;With it, I&#39;d get the 32&#215;32 icon. &nbsp;Then I had to go on to write a lot of code to manually load the 16&#215;16 version that I really wanted.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1081083">
				<div id="div-comment-1081083" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">SuperKoko</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20131003-00/?p=3043#comment-1081083">
			October 4, 2013 at 3:33 pm</a>		</div>

		<p>What about LoadResource?</p>
<p>Your article tells that FindResource returns a reference, but it looks like it&#39;s returning a handle to the resource (which is a sort of reference).</p>
<p>I would expect LoadResource to return a reference since FreeResource is obsolete and may be a dummy function.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1081193">
				<div id="div-comment-1081193" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blogs.msdn.com/mity_4000_morous.org/ProfileUrlRedirect.ashx' rel='external nofollow' class='url'>mity@morous.org</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20131003-00/?p=3043#comment-1081193">
			October 7, 2013 at 8:14 am</a>		</div>

		<p>Your post caused some confusion to me. I always assumed the LR_SHARED means really &quot;reference&quot;, not &quot;simulated reference&quot; (in your terminology). So what about the lifetime of such objects in 32-bit Windows? Should app. call e.g. DestroyIcon() for the shared icon? I.e. is DestroyIcon() smart enough to just decrease the counter in the cache, and destroy it only when it drops to zero? If app does not do that, is the cached copy destroyed on unload of the module it originated from?</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>