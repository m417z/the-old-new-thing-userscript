<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (25)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-205523">
				<div id="div-comment-205523" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://kreiger.linuxgods.com/' rel='external nofollow' class='url'>Christoffer &quot;Kreiger&quot; Hammarstr&#246;m</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040824-00/?p=38063#comment-205523">
			August 24, 2004 at 7:05 am</a>		</div>

		<p>Raymond: You&#8217;d better put some newlines in that program, so as to not put it all on one line.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-205533">
				<div id="div-comment-205533" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.rose-hulman.edu/~gurganbl/' rel='external nofollow' class='url'>Brant Gurganus</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040824-00/?p=38063#comment-205533">
			August 24, 2004 at 7:08 am</a>		</div>

		<p>I remember a registry, or more precistely a registry editor, from back in the Windows 3.1 days.  What was it used for?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-205543">
				<div id="div-comment-205543" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">DrPizza</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040824-00/?p=38063#comment-205543">
			August 24, 2004 at 7:11 am</a>		</div>

		<p>Windows should have used counted strings throughout its API.  Internally (in kernel mode), it does.  It should do externally too.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-205553">
				<div id="div-comment-205553" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Jonathan</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040824-00/?p=38063#comment-205553">
			August 24, 2004 at 7:28 am</a>		</div>

		<p>Win 95 doesn&#8217;t support REG_DWORD?  I&#8217;ve used it in some of my programs without any problems&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-205563">
				<div id="div-comment-205563" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">mschaef</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040824-00/?p=38063#comment-205563">
			August 24, 2004 at 7:51 am</a>		</div>

		<p>&quot;I remember a registry, or more precistely a registry editor, from back in the Windows 3.1 days. What was it used for? &quot;</p>
<p>IIRC, the Windows 3.1 registry editor was used almost exclusively to store OLE 2.0 bindings and configuration information.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-205573">
				<div id="div-comment-205573" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://weblogs.asp.net/oldnewthing/' rel='external nofollow' class='url'>Raymond Chen</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040824-00/?p=38063#comment-205573">
			August 24, 2004 at 8:37 am</a>		</div>

		<p>DrPizza: Please read the paragraph where I said that I&#8217;m not going to discuss whether the current design is good or not.<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-205583">
				<div id="div-comment-205583" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blog.ensoft-software.com/' rel='external nofollow' class='url'>Eric Newton</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040824-00/?p=38063#comment-205583">
			August 24, 2004 at 8:46 am</a>		</div>

		<p>Ever since Win95 introduced the registry and the first time my registry got corrupted, I&#8217;ve hated it&#8230;</p>
<p>We moved from INI files [similar to Mac app settings going into the System folder or something like that] to a monolithic storage structure.  NOTE That WinNT introduced ACLs for the keys, which in a sense made it cool, but still monolithic.  [And I&#8217;m always curious why IIS used a METABASE when the registry was available&#8230; speed? probably&#8230; although the METABASE got out of sync too damn easy too]</p>
<p>So now that .NET apps are pushing for more XCOPY deployment, and IIS6 able to I wonder if the registry begins to take a back seat to Config files in Longhorn, relegating the Registry to just OS storage and not for the Apps?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-205593">
				<div id="div-comment-205593" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://weblogs.asp.net/larryosterman' rel='external nofollow' class='url'>Larry Osterman</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040824-00/?p=38063#comment-205593">
			August 24, 2004 at 8:59 am</a>		</div>

		<p>Somewhat OT: Did you know that the hive guy is back?<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-205603">
				<div id="div-comment-205603" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Carlos</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040824-00/?p=38063#comment-205603">
			August 24, 2004 at 9:05 am</a>		</div>

		<blockquote><p>
  Change the last parameter of RegSetValueExW to 3</p>
<p>You always ask for two bytes (cb = sizeof(sz[0]);), but that&#8217;s not enough so RegQueryValueExW will return ERROR_MORE_DATA.</p>
<p>If you had used a big enough buffer of bytes and you attempted to terminate the string by appending two zero bytes to the buffer, then you&#8217;d fail because the zeroes would straddle a wide character boundary.  I&#8217;m slightly worried that I&#8217;ve written code that does this&#8230;<br />
  
</p></blockquote>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-205613">
				<div id="div-comment-205613" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://mikedimmick.blogspot.com' rel='external nofollow' class='url'>Mike Dimmick</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040824-00/?p=38063#comment-205613">
			August 24, 2004 at 9:21 am</a>		</div>

		<p>Win9x registries didn&#8217;t get corrupted on systems where the hardware worked. Never happened to me in four years before I moved to NT 4.0 and has never happened on any of the NT-based systems either.</p>
<p>NT-based systems protect the registry data by, unsurprisingly, logging all changes before they&#8217;re made &#8211; it&#8217;s transactional, on both FAT32 and NTFS volumes. The log files can be found in the same directory as the hives themselves, in %SystemRoot%System32config, except your user profile&#8217;s registry settings which live in %USERPROFILE%NtUser.dat (for HKEY_CURRENT_USER) and %USERPROFILE%Local SettingsApplication DataMicrosoftWindowsUsrClass.dat (the user portion of HKEY_CLASSES_ROOT).</p>
<p>Frankly I feel a lot safer with the registry than arbitrary configuration files (not transactional), and it&#8217;s a lot more efficient. Unfortunately it&#8217;s harder to add new configuration data &#8211; you have to make API calls rather than dropping a file.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-205623">
				<div id="div-comment-205623" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Jordan Russell</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040824-00/?p=38063#comment-205623">
			August 24, 2004 at 10:45 am</a>		</div>

		<p>Nice article.</p>
<p>I understand you don&#8217;t want to discuss the history of this behavior or &quot;whether the current design is good or not&quot;, but isn&#8217;t this something that could be fixed once and for all at the OS level in a future service pack / OS?</p>
<p>For example, couldn&#8217;t RegQueryValueEx be made to always append a null terminator on SZ-type data, and in cases where there isn&#8217;t enough room in the supplied buffer for one (as in your example), return ERROR_MORE_DATA?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-205633">
				<div id="div-comment-205633" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://weblogs.asp.net/oldnewthing/' rel='external nofollow' class='url'>Raymond Chen</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040824-00/?p=38063#comment-205633">
			August 24, 2004 at 10:53 am</a>		</div>

		<p>That would break programs that intentionally store non-null-terminated strings in the registry, since they would write 4 non-null-terminated characters then try to read it back into a 4-character buffer and instead of succeeding they get ERROR_MORE_DATA back.</p>
<p>Programs that do this are far more common than you think.  (You may have written one such inadvertently!  It happens if you pass REG_SZ instead of REG_BINARY by mistake.)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-205683">
				<div id="div-comment-205683" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://weblogs.asp.net/oldnewthing' rel='external nofollow' class='url'>Raymond Chen</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040824-00/?p=38063#comment-205683">
			August 24, 2004 at 12:59 pm</a>		</div>

		<p>// this copy assumes the presence of<br />
<br />// a null terminator; otherwise you have<br />
<br />// a buffer overflow.<br />
<br />TCHAR szOtherBuffer[256];<br />
<br />lstrcpy(szOtherBuffer, szBuffer);</p>
<p>note also dwBufferLength should be the size in bytes, not the size in characters.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-205703">
				<div id="div-comment-205703" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.valhallalegends.com/skywing' rel='external nofollow' class='url'>Skywing</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040824-00/?p=38063#comment-205703">
			August 24, 2004 at 2:59 pm</a>		</div>

		<p>The NT registry doesn&#8217;t really enforce the value sizes for any of the types AFAIK; for instance, you can have REG_DWORDs that aren&#8217;t actually 4 bytes.</p>
<p>So this problem isn&#8217;t necessarily limited to strings, just strings are more of an issue since Win32 apps assume them null terminated mostly.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-205723">
				<div id="div-comment-205723" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">David Candy</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040824-00/?p=38063#comment-205723">
			August 24, 2004 at 4:11 pm</a>		</div>

		<p>I thought dword vs 4 byte binary was a inf limitation rather than a registry limitation.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-205663">
				<div id="div-comment-205663" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Gary</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040824-00/?p=38063#comment-205663">
			August 24, 2004 at 12:40 pm</a>		</div>

		<p>Even if your program assumes that all registry strings are null terminated how can this cause a buffer overflow?  RegQueryValueEx 6th parameter is a DWORD* to the size of your data.  So if I&#8217;m reading in a string I have:</p>
<p>TCHAR szBuffer[256];<br />
<br />DWORD dwBufferLength = sizeof(szBuffer) / sizeof(TCHAR);</p>
<p>RegQueryValueEx(&#8230;, (BYTE*)szBuffer, &amp;dwBufferLength);<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-205753">
				<div id="div-comment-205753" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">timchen</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040824-00/?p=38063#comment-205753">
			August 25, 2004 at 12:16 am</a>		</div>

		<p>This usually isn&#8217;t an issue when both the writer and reader of the value are the same app. However, it becomes a problem when the registry becomes an interface between app and OS. Such as, I&#8217;ve seen a lot of &#8216;hacks&#8217; in the print spooler that take care of the strings to which a print driver forgot to append a null terminator. It&#8217;s just common.</p>
<p>Apart from the size issue, I&#8217;ve also seen a number of apps changing the data type of public registry values at will. Sometimes a REG_EXPAND_SZ is changed to REG_SZ, and something strange may happen (or maybe not).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-205763">
				<div id="div-comment-205763" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Tom M</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040824-00/?p=38063#comment-205763">
			August 25, 2004 at 1:16 am</a>		</div>

		<p>I&#8217;m told, and I can&#8217;t remember where I saw this, that there are microsoft apps which embed a null into a registry value in order to hide some information. Regedit treats strings as being null terminated and so only shows the first part, but the entire string is there and hidden.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-205743">
				<div id="div-comment-205743" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Norman Diamond</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040824-00/?p=38063#comment-205743">
			August 24, 2004 at 6:36 pm</a>		</div>

		<p>&gt; Lo and behold, the values were read from the<br />
<br />&gt; registry and only two bytes were read. sz[0]<br />
<br />&gt; contains the character &#8216;1&#8217;, and sz[1]<br />
<br />&gt; remains uninitialized.</p>
<p>Seriously, this is a relief.  Unless I&#8217;m misreading your APL program[*], the second call to RegQueryValueExW specified that the buffer length is 2 bytes.  If RegQueryValueExW changed the valye of sz[1] then RegQueryValueExW would be causing buffer overflows.</p>
<p>Your printf printed sizeof(sz), but your assignment only set cb = sizeof(sz[0]).</p>
<p>[* How many APL programmers does it take to change a light bulb?  35, and they all have to be on one line.]</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-205773">
				<div id="div-comment-205773" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Frederik Slijkerman</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040824-00/?p=38063#comment-205773">
			August 25, 2004 at 2:38 am</a>		</div>

		<p>&quot;Such as, I&#8217;ve seen a lot of &#8216;hacks&#8217; in the print spooler that take care of the strings to which a print driver forgot to append a null terminator.&quot;</p>
<p>Why doesn&#8217;t the print spooler read the size of the string first, and then the number of bytes up to the first null terminator? Looks safe and not like a hack to me.<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-205783">
				<div id="div-comment-205783" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Mike</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040824-00/?p=38063#comment-205783">
			August 25, 2004 at 4:23 am</a>		</div>

		<p>This does lead to me to ask a sorta-OT question: what do you think of the design of the Windows API in general Raymond? I know you wrote some of it, but if you could design the API again with no backwards compatibility concerns, what would you do different?</p>
<p>Perhaps a less vague way of phrasing the same thing: If tomorrow you were hired by Red Hat to work on the desktop Linux APIs, what advice would you have w.r.t API design and implementation?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-205793">
				<div id="div-comment-205793" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">DrPizza</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040824-00/?p=38063#comment-205793">
			August 25, 2004 at 6:50 am</a>		</div>

		<p>&quot;DrPizza: Please read the paragraph where I said that I&#8217;m not going to discuss whether the current design is good or not. &quot;<br />
<br />But I&#8217;m not talking about the design of the registry.  I&#8217;m talking about the design of the rest of Win32, for it is the rest of Win32 whose design is poor.  The kernel API doesn&#8217;t make that mistake, and on occasion that leaks out into the Win32 world.  This is merely one of those occasions.<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-205803">
				<div id="div-comment-205803" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Manip</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040824-00/?p=38063#comment-205803">
			August 25, 2004 at 7:16 am</a>		</div>

		<p>Why don&#8217;t you punch out a blog entry on what you think is wrong with Win32. It would make an interesting read.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-205973">
				<div id="div-comment-205973" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">timchen</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040824-00/?p=38063#comment-205973">
			August 25, 2004 at 7:00 pm</a>		</div>

		<p>&quot;Why doesn&#8217;t the print spooler read the size of the string first, and then the number of bytes up to the first null terminator? Looks safe and not like a hack to me.&quot;</p>
<p>It just checks whether or not there is a null terminator at the end of the string, and if not adds one. This is extra code written for bad developers. Allowing such non-null-terminated strings leads to crashes in other places that do not have the check code. I have chased down some crashes due to this, and it&#8217;s usually difficult to chase because the crashes often happen after a strcpy that corrupts memory.</p>
<p>IMO, it should just not accept such strings at the beginning to force the driver developers fix their code before shipping the driver.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-208473">
				<div id="div-comment-208473" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Chickenman</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040824-00/?p=38063#comment-208473">
			September 8, 2004 at 9:43 am</a>		</div>

		<p>DrPizza:  that&#8217;s unfair (and I&#8217;m a OS X bigot).  Some parts are well designed, some parts are so-so designed, some parts are poorly designed.  WinNT is big, lots of cooks in the kitchen, lots of fingers in the code.</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>