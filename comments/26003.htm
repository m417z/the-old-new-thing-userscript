<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (18)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-525723">
				<div id="div-comment-525723" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Spike</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070716-00/?p=26003#comment-525723">
			July 16, 2007 at 10:03 am</a>		</div>

		<p>I think there&#8217;s a &#8216;not&#8217; missing in the first line.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-525743">
				<div id="div-comment-525743" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Humanoid....</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070716-00/?p=26003#comment-525743">
			July 16, 2007 at 10:20 am</a>		</div>

		<p>Nah, I reckon its overloaded by the &quot;Nothing&quot; in bold.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-525763">
				<div id="div-comment-525763" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Csaboka</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070716-00/?p=26003#comment-525763">
			July 16, 2007 at 10:52 am</a>		</div>

		<p>But that &quot;Nothing&quot; is in the second sentence. The first sentence says the exact opposite of the second.</p>
<p>Oh, am I nitpicking now, by pointing out a problem in an anti-nitpick paragraph?&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-525803">
				<div id="div-comment-525803" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Damian</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070716-00/?p=26003#comment-525803">
			July 16, 2007 at 11:53 am</a>		</div>

		<p>&gt; It&#8217;s times like that that I&#8217;m tempted to just give up writing.</p>
<p>Raymond, just put a disclaimer in the side bar.</p>
<div class="post">[<i>That won&#8217;t stop the people who intentionally play stupid. Besides, it&#8217;s a <u>blog</u>; you should already know the ground rules for blogs. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-525863">
				<div id="div-comment-525863" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Doug</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070716-00/?p=26003#comment-525863">
			July 16, 2007 at 1:46 pm</a>		</div>

		<p>Well, Raymond, I agree with you on the effect of idiots on one&#8217;s ability to tolerate it.</p>
<p>However, having just read your book from cover to cover, which is something I very rarely do with anything technical, there is a LOT of value in what you write. &nbsp;Thank you.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-525873">
				<div id="div-comment-525873" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Matt Pietrek</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070716-00/?p=26003#comment-525873">
			July 16, 2007 at 2:04 pm</a>		</div>

		<p>For what it&#8217;s worth, if anyone has an old copy of my &quot;Windows 95 System Programming Secrets&quot; book, the subject of window handles and the USER heaps is discused therein.</p>
<p>Wow, I wrote that chapter 13 years ago!</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-525883">
				<div id="div-comment-525883" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.pretentiousname.com' rel='external nofollow' class='url'>Leo Davidson</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070716-00/?p=26003#comment-525883">
			July 16, 2007 at 2:32 pm</a>		</div>

		<p>Wow, 700 windows. I&#8217;ve got about 900 windows open on my system right now (so Spy++ tells me anyway) and most of those are inside background processes as I don&#8217;t have many &quot;applications&quot; (i.e. top-level windows I&#8217;m interacting with) open at the moment.</p>
<p>I would say that I&#8217;m glad the limit has increased since 3.11 but I guess people would have written things differently if the low limit was still there (e.g. not creating windows for background processes until they needed to be shown).</p>
<p>I&#8217;m looking forward to the next part about handle re-use. I have some ideas about how it might work but I&#8217;ll keep my mouth shut for now!</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-525903">
				<div id="div-comment-525903" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Gwyn</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070716-00/?p=26003#comment-525903">
			July 16, 2007 at 3:52 pm</a>		</div>

		<p>I tracked a problem on a Windows CE device recently to window handle reuse. A window was being destroyed but the handle was left dangling and then destroyed again which caused an Av in the process. The same code was running on Windows XP without issues for many years.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-525913">
				<div id="div-comment-525913" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">ajb</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070716-00/?p=26003#comment-525913">
			July 16, 2007 at 7:57 pm</a>		</div>

		<p>Window handle reuse is a major operating system flaw. &nbsp;To get around it, I make sure to never close my handles.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-525933">
				<div id="div-comment-525933" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://sonokie.net/' rel='external nofollow' class='url'>Daniel Ferguson</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070716-00/?p=26003#comment-525933">
			July 16, 2007 at 9:26 pm</a>		</div>

		<p>Raymond, I read your blog because I&#8217;m fascinated by little Windows design details like this. &nbsp;(I had speculated that window handles were just memory pointers and interesting to have that confirmed.) &nbsp;I&#8217;m also really amused by your disclaimers, but I hope you&#8217;ll ignore the idiots and keep writing.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-dean-harding even thread-even depth-1" id="comment-525943">
				<div id="div-comment-525943" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Dean+Harding' rel='external nofollow' class='url'>Dean Harding</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070716-00/?p=26003#comment-525943">
			July 16, 2007 at 11:10 pm</a>		</div>

		<blockquote><p>
  Window handle reuse is a major operating system flaw.
</p></blockquote>
<p>I agree, in fact I would take it further: any numeric identifier that gets reused is a flaw. All window handles, kernel handles, memory pointers, file numbers, sockets and so on should represented by 512-bit numbers that we can safely gaurantee won&#8217;t be reused for the next 10,000 years. And if we need more than 10,000 years, we have plenty of time to switch to 1024-bit pointers&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-525953">
				<div id="div-comment-525953" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.levicki.net/' rel='external nofollow' class='url'>Igor</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070716-00/?p=26003#comment-525953">
			July 17, 2007 at 2:15 am</a>		</div>

		<p>&quot;any numeric identifier that gets reused is a flaw&quot;</p>
<p>Indeed it is. If a program tries to send message to a window and the handle is no longer valid because it destroyed it seconds ago it should crash and burn with a big red fat&#8217;n&#8217;ugly blinking exception.</p>
<p>Of course, if handle was refcounted on a per thread basis then it would be possible to detect reuse and crash the bastard. But I am sure Raymond will tell us how they fixed it. I can&#8217;t wait to hear the solution.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-dean-harding even thread-even depth-1" id="comment-525963">
				<div id="div-comment-525963" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Dean+Harding' rel='external nofollow' class='url'>Dean Harding</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070716-00/?p=26003#comment-525963">
			July 17, 2007 at 2:41 am</a>		</div>

		<blockquote><p>
  if handle was refcounted on a per thread basis then it would be possible to detect reuse
</p></blockquote>
<p>Er, how would that work exactly? How would you add a ref-count to the handle while still keeping it a 16-bit value?</p>
<p>Do you also propose that memory pointers returned from malloc() be ref-counted in the same way? What about inodes in a Posix-style filesystem? Or any of the other values which are represented by simple integers?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-525973">
				<div id="div-comment-525973" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.pretentiousname.com' rel='external nofollow' class='url'>Leo Davidson</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070716-00/?p=26003#comment-525973">
			July 17, 2007 at 5:34 am</a>		</div>

		<blockquote><p>
  if handle was refcounted on a per thread basis then it would be possible to detect reuse
</p></blockquote>
<p>Window handles aren&#8217;t scoped to threads or processes so I don&#8217;t think that would work on its own.</p>
<p>If thread A destroys handle H then, without some other protection mechanism, it&#8217;s possible and legal for thread B (which could be in another process) to create a new window that happens to also have handle H. B could then pass H to A and A could, legitimately, send messages to H.</p>
<p>Let&#8217;s wait to see what Raymond says is the real &nbsp;answer.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-525993">
				<div id="div-comment-525993" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">BryanK</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070716-00/?p=26003#comment-525993">
			July 17, 2007 at 8:08 am</a>		</div>

		<p>Um, Dean, inodes already are refcounted. &nbsp;That&#8217;s how hard-links work (two directory entries pointing to the same inode means the inode&#8217;s refcount (aka link count) is 2). &nbsp;And actually, processes with the file open bump the refcount too. &nbsp;(When you unlink the last link to a file, the inode number isn&#8217;t reused until the file is really removed from disk &#8212; i.e. when all processes close their handle(s) to it. &nbsp;Actually the number may not be reused at all, but I think it can be.)</p>
<p>Now it&#8217;s true that the inode *number* doesn&#8217;t have a refcount in it, but the inode structure does. &nbsp;I&#8217;m not sure on the internal details of window handles, etc., but it may be possible to do something similar with them.</p>
<p>Or it may cause all kinds of other headaches.</p>
<p>(And now that I re-read what was being discussed, I see that this doesn&#8217;t really even relate to the handle-reuse problem. &nbsp;I don&#8217;t think there are any, but if any syscalls operate on an inode number (as opposed to a file handle or pathname), then they&#8217;d be susceptible to the same type of &quot;process X gets an inode number, then the file gets deleted, then process X uses that number&quot; type of problem. &nbsp;So never mind.)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-526593">
				<div id="div-comment-526593" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.levicki.net/' rel='external nofollow' class='url'>Igor</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070716-00/?p=26003#comment-526593">
			July 17, 2007 at 6:26 pm</a>		</div>

		<p>Ok, maybe not exactly refcounting but something like this:</p>
<p>Assume you have process P with Thread A and Thread B.</p>
<p>Thread A creates window with handle 0x124. Thread B can send the messages to that window.</p>
<p>Then Thread A destroys the window and handle 0x124 is now free to be reused, but not for any thread that belongs to process P.</p>
<p>Handle is a void pointer so it points to some structure. In that structure you can have an entry where you store process ID of the last process which has used that particular handle.</p>
<p>Since process IDs are not reused but monotonically increasing, you can assume that all processes with ID &lt;= to that one should not be able to reuse the handle.</p>
<p>But I am sure that there are other smarter ways. This is just a 2 minute hack so don&#8217;t expect miracles.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-526713">
				<div id="div-comment-526713" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://parris.josh.com.au/' rel='external nofollow' class='url'>Josh Parris</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070716-00/?p=26003#comment-526713">
			July 17, 2007 at 11:15 pm</a>		</div>

		<p>The correct technical term is, as you point out, not boatload. &nbsp;It&#8217;s shipload.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-526753">
				<div id="div-comment-526753" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Gabe</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070716-00/?p=26003#comment-526753">
			July 18, 2007 at 1:01 am</a>		</div>

		<p>Igor, you are forgetting that HWNDs are like randomly assigned filenames. Any process in a desktop is allowed to send any message to any window on that desktop, just like any process can access any file owned by the uid of that process.</p>
<p>Just because Process P doesn&#8217;t need to use its own window 0x124 any longer doesn&#8217;t mean that P doesn&#8217;t have a legitimate need to talk to Process Q&#8217;s new window 0x124.</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>