<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (6)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1 parent" id="comment-1253936">
				<div id="div-comment-1253936" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Vilx-</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160627-00/?p=93755#comment-1253936">
			June 27, 2016 at 7:26 am</a>		</div>

		<p>Ahh, a few years ago I was trying to do EXACTLY this, but with a twist &#8211; I not only wanted to determine WHICH keyboard the code originated at, but also REPLACE it (suppress + SendInput() would work too) , if it was from a specific keyboard. Basically I wanted to take a cheap USB keypad and turn it into a media control device (play/pause/next/etc). But it could have other applications as well.</p>
<p>Turns out, you can&#8217;t do this with Windows APIs. At least you couldn&#8217;t in Windows 7. Perhaps there&#8217;s something new in Windows 10 that  don&#8217;t know about. But back then, Raw Input could distinguish between keyboards, but not suppress the events; while Low Level Keyboard Hooks could suppress the events, but not determine which keyboard they originated from. The only solution was to use a specialized 3rd party hardware driver to do the trick. It works flawlessly to this day, but I sure do wish there was a native way to achieve it! :)</p>

		
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-chd1 odd alt depth-2 parent" id="comment-1253985">
				<div id="div-comment-1253985" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/ChDF+T' rel='external nofollow' class='url'>ChDF T</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160627-00/?p=93755#comment-1253985">
			June 27, 2016 at 10:28 am</a>		</div>

		<p>Tom Scott did something like that: He build a physical emoji keyboard by connecting multiple usb keyboards to a single PC and remapping the keys to emojis in software (explanation video: <a href="https://www.youtube.com/watch?v=lIFE7h3m40U" rel="nofollow">https://www.youtube.com/watch?v=lIFE7h3m40U</a> ). Although his solution was a bodge, it proves that the required APIs are available.</p>

		
				</div>
		<ol class="children">
		<li class="comment even depth-3" id="comment-1254005">
				<div id="div-comment-1254005" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Vilx-</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160627-00/?p=93755#comment-1254005">
			June 27, 2016 at 11:15 am</a>		</div>

		<p>Thanks, I&#8217;ll check it out later. Although in the description of the video is mentioned AutoHotKey, which makes me suspicious, since AHK doesn&#8217;t have such a capability (or didn&#8217;t when I checked it out a while ago).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt depth-3" id="comment-1254035">
				<div id="div-comment-1254035" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Vilx-</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160627-00/?p=93755#comment-1254035">
			June 27, 2016 at 2:23 pm</a>		</div>

		<p>OK, I watched the video. It seems I was wrong &#8211; it uses LuaMacros instead to do the keyboard reading. A quick glance at the source code + a quick glance at the forum (and the problems people report having) seems to hint that LuaMacros is still using the same two interfaces &#8211; Low Level Keyboard Hooks and Raw Input. Apparently they managed to combine them somehow, although the results seem to be less than perfect anyway, and many keys are still unblockable. This is, if I remember correctly, why I abandoned this approach myself when looking for a solution.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment even thread-odd thread-alt depth-1" id="comment-1254555">
				<div id="div-comment-1254555" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Azarien</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160627-00/?p=93755#comment-1254555">
			June 30, 2016 at 4:33 am</a>		</div>

		<p>Now I feel deceived, because you, Raymond, some years ago, suggested this cannot be done without writing one&#8217;s own keyboard driver. Or at least that was my impression.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-even depth-1" id="comment-1255025">
				<div id="div-comment-1255025" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">onodera</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160627-00/?p=93755#comment-1255025">
			July 5, 2016 at 5:18 am</a>		</div>

		<p>&gt; Next, we register our window to receive raw keyboard input. The magic numbers for keyboard are Usage Page 1 and Usage 6. These magic numbers come from the USB HID specification. </p>
<p>Does this work for PS/2 input devices as well?</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>