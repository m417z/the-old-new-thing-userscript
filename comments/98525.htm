<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (8)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1 parent" id="comment-1333255">
				<div id="div-comment-1333255" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Daniel</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180417-00/?p=98525#comment-1333255">
			April 17, 2018 at 10:33 am</a>		</div>

		<p>I&#8217;m surprised the Microsoft compiler takes so much effort just to allow calling a varargs function without a prototype.<br />
The C standard does not require this: 6.7.6.3, paragraph 15 says that functions without prototype are not compatible with varargs functions.<br />
With gcc, you will get a compiler error if you have both types of declaration (no prototype + with varargs) in the same compilation unit. And it&#8217;s undefined behavior if they&#8217;re in different compilation units.</p>

		
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-oldnewthing bypostauthor odd alt depth-2 parent" id="comment-1333265">
				<div id="div-comment-1333265" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Raymond+Chen+-+MSFT' rel='external nofollow' class='url'>Raymond Chen - MSFT</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180417-00/?p=98525#comment-1333265">
			April 17, 2018 at 12:09 pm</a>		</div>

		<p>It&#8217;s so nice of you to cite a standard that wouldn&#8217;t exist until 26 years after the compiler was written. Do you have a time machine?</p>

		
				</div>
		<ol class="children">
		<li class="comment even depth-3 parent" id="comment-1333295">
				<div id="div-comment-1333295" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Daniel</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180417-00/?p=98525#comment-1333295">
			April 17, 2018 at 1:47 pm</a>		</div>

		<p>OK, I admit I took the C11 standard for the section number.<br />
But the paragraph in question is basically unchanged from C89; it was in 6.5.4.3 &#8220;Function declarators (including prototypes)&#8221;.</p>
<p>Which was a bit earlier than the MIPS R4000. Of course the compiler probably just re-used the same behavior as on other platforms. But at least you can do the job with a smaller time machine ;)</p>

		
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-archangelpip odd alt depth-4" id="comment-1333335">
				<div id="div-comment-1333335" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Darran+Rowe' rel='external nofollow' class='url'>Darran Rowe</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180417-00/?p=98525#comment-1333335">
			April 17, 2018 at 4:14 pm</a>		</div>

		<p>Remember that the x64 calling convention defines the same thing.<br />
&#8220;For functions not fully prototyped, the caller will pass integer values as integers and floating-point values as double precision. For floating-point values only, both the integer register and the floating-point register will contain the float value in case the callee expects the value in the integer registers. &#8221;<br />
So while it is true that C doesn&#8217;t allow this, it isn&#8217;t like all languages are C, so any programming language that sticks to this ABI, even ones that accept varag unprototyped functions, will work.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment even depth-3 parent" id="comment-1333305">
				<div id="div-comment-1333305" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Fabian Giesen</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180417-00/?p=98525#comment-1333305">
			April 17, 2018 at 1:57 pm</a>		</div>

		<p>And even when newer language standards forbid something, consider that platform ABIs need to work for all programs (and all language standards) supported on a platform. Including the odd K&amp;R C program that (dynamically) links against a libc written against a newer language standard.</p>
<p>The particular case of unprototyped varargs functions is a source of trouble in every C platform ABI that I&#8217;ve ever seen. The SysV x64 ABI definitely included. :)</p>

		
				</div>
		<ol class="children">
		<li class="comment odd alt depth-4 parent" id="comment-1333635">
				<div id="div-comment-1333635" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Jonathan Wilson</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180417-00/?p=98525#comment-1333635">
			April 18, 2018 at 3:27 pm</a>		</div>

		<p>In theory since Microsoft controlled the ABI for NT on MIPS and the (at the time they were producing NT on MIPS) only toolchain that produced code for NT on MIPS, they could have just said no to vararg functions with no prototype. But I suspect they supported such things on other platforms like x86 and therefore couldn&#8217;t drop support on a new platform.</p>

		
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-oldnewthing bypostauthor even depth-5" id="comment-1333675">
				<div id="div-comment-1333675" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Raymond+Chen+-+MSFT' rel='external nofollow' class='url'>Raymond Chen - MSFT</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180417-00/?p=98525#comment-1333675">
			April 18, 2018 at 11:58 pm</a>		</div>

		<p>Remember, if you want to get people to port to your new platform, you want to make it <u>easier</u> for them, not <u>harder</u>. And saying &#8220;You must rewrite all your K&amp;R code to be C89-compliant&#8221; is not exactly in the &#8220;easier&#8221; category.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt depth-5" id="comment-1333895">
				<div id="div-comment-1333895" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">smf</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180417-00/?p=98525#comment-1333895">
			April 23, 2018 at 3:51 am</a>		</div>

		<p>It was probably easier to code the no-prototype case than it was to hold meetings to argue that it shouldn&#8217;t be supported, knowing that at some point you&#8217;d probably need to implement it anyway.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>