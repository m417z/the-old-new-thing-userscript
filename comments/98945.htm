<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (32)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1 parent" id="comment-1344965">
				<div id="div-comment-1344965" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://geelaw.blog/' rel='external nofollow' class='url'>Gee Law</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180608-00/?p=98945#comment-1344965">
			June 8, 2018 at 7:25 am</a>		</div>

		<p>Does that mean you should avoid setting your default code page to UTF-8, which is now possible as beta in Windows 10 version 1803?</p>

		
				</div>
		<ol class="children">
		<li class="comment odd alt depth-2 parent" id="comment-1345035">
				<div id="div-comment-1345035" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Antonio Rodríguez</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180608-00/?p=98945#comment-1345035">
			June 8, 2018 at 7:52 am</a>		</div>

		<p>As I understand, the legacy code page is a concession to legacy software that is not Unicode-aware. As UTF-8 is quite recent, I doubt there are many applications developed taking it into account; but there are scores of them developed for ANSI which assume (wrongly) that one character is always one byte. So I guess setting it would cause all kinds of crashes and compatibility issues with old applications (because of the apps&#8217; internal string manipulation &#8211; which Windows have no control over). I would avoid it at all costs.</p>

		
				</div>
		<ol class="children">
		<li class="comment even depth-3 parent" id="comment-1345095">
				<div id="div-comment-1345095" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Cesar</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180608-00/?p=98945#comment-1345095">
			June 8, 2018 at 8:55 am</a>		</div>

		<p>UTF-8 is not &#8220;quite recent&#8221;, it&#8217;s older than Windows 95. But AFAIK the &#8220;codepage&#8221; concept Windows uses is even older, from the MS-DOS days or earlier.</p>
<p>The current recomendation seems to be to use the &#8220;W&#8221; APIs, and convert to/from UTF-8 manually. The &#8220;A&#8221; APIs, and the whole codepage concept which comes with them, should be treated as deprecated.</p>

		
				</div>
		<ol class="children">
		<li class="comment odd alt depth-4" id="comment-1345405">
				<div id="div-comment-1345405" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Brian</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180608-00/?p=98945#comment-1345405">
			June 8, 2018 at 3:57 pm</a>		</div>

		<p>It&#8217;s somewhat recent by Windows standards.  When Windows NT first adopted Unicode, there were &lt;64k Unicode characters, and the only representation was 1 character = 2 bytes (either Big or Little endian).  NT shipped about the same time as the development of UTF-8, but without any knowledge or any non-2-byte Unicode representation.  UTF-8 really only took off when HTTP and HTML turned the whole world into a stream of bytes, later in the 90s.<br />
Windows 95 doesn&#039;t really figure into the equation, unlike NT, it was a &quot;encode characters using code-pages&quot; OS, just like DOS and 16-bit Windows was.  UNICOWS fixed that, but too late to have any impact at all.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment even depth-3 parent" id="comment-1345105">
				<div id="div-comment-1345105" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">James Picone</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180608-00/?p=98945#comment-1345105">
			June 8, 2018 at 9:09 am</a>		</div>

		<p>Such programs would have already been wrong, surely? The legacy code page can be multi-byte, I thought, just originally a maximum of two bytes/character. You&#8217;re not going to break it any harder because UTF8 matches ANSI in the ANSI range.</p>

		
				</div>
		<ol class="children">
		<li class="comment odd alt depth-4" id="comment-1345545">
				<div id="div-comment-1345545" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">CN</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180608-00/?p=98945#comment-1345545">
			June 9, 2018 at 10:01 am</a>		</div>

		<p>It matches &#8220;ANSI&#8221; in the **ASCII** range. For those who use languages that fit comfortably in 8-bit &#8220;ANSI &#8220;(e.g. CP1252), but absolutely not in ASCII (French, German, Swedish, &#8230;, &#8230;) &#8212; that&#8217;s a huge difference.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment even depth-3 parent" id="comment-1345195">
				<div id="div-comment-1345195" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180608-00/?p=98945#comment-1345195">
			June 8, 2018 at 11:14 am</a>		</div>

		<p>On the other hand, I&#8217;ve got a dozen or so programs that are waiting for this to appear. (Or alternately a standard library where char * is UTF-8 in fopen(), dir(), printf(), etc.)</p>

		
				</div>
		<ol class="children">
		<li class="comment odd alt depth-4 parent" id="comment-1345475">
				<div id="div-comment-1345475" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://geelaw.blog/' rel='external nofollow' class='url'>GL</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180608-00/?p=98945#comment-1345475">
			June 8, 2018 at 4:56 pm</a>		</div>

		<p>I guess they’d better solve that problem themselves. The <code>/execution-charset:utf-8</code> switch will do the trick.</p>

		
				</div>
		<ol class="children">
		<li class="comment even depth-5" id="comment-1345635">
				<div id="div-comment-1345635" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180608-00/?p=98945#comment-1345635">
			June 10, 2018 at 1:41 pm</a>		</div>

		<p>I tried this. Your idea would result in trying to pass UTF-8 strings to fopen with spectacular results. The Windows Console can handle this. fopen() cannot. Pipes can&#8217;t be declared to be in UTF-16.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment odd alt depth-3" id="comment-1345395">
				<div id="div-comment-1345395" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Antonio Rodríguez</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180608-00/?p=98945#comment-1345395">
			June 8, 2018 at 3:47 pm</a>		</div>

		<p>I was talking about Windows supporting UTF-8 as a codepage. Which is definitely more recent than Windows 95, given that in 2018 it&#8217;s still in beta, but Windows 95 was launched in 1995 (23 years before).</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment even depth-2" id="comment-1345385">
				<div id="div-comment-1345385" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Dan</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180608-00/?p=98945#comment-1345385">
			June 8, 2018 at 3:44 pm</a>		</div>

		<p>I&#8217;ve long wondered why Windows hasn&#8217;t supported UTF-8 for the &#8220;ANSI&#8221; code page, and now I finally got a straightforward explanation *why*.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment byuser comment-author-ranta odd alt thread-odd thread-alt depth-1 parent" id="comment-1344995">
				<div id="div-comment-1344995" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/ranta' rel='external nofollow' class='url'>ranta</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180608-00/?p=98945#comment-1344995">
			June 8, 2018 at 7:33 am</a>		</div>

		<p>Does Win32 have a constant similar to MB_LEN_MAX? I guess MB_LEN_MAX itself is not guaranteed to be large enough for all code pages, only for CRT locales.</p>
<p>The Windows equivalent of MB_CUR_MAX apparently is CPINFO::MaxCharSize after calling GetCPInfo, which requires error handling and is too cumbersome to do just in case.</p>

		
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-oldnewthing bypostauthor even depth-2 parent" id="comment-1345325">
				<div id="div-comment-1345325" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Raymond+Chen+-+MSFT' rel='external nofollow' class='url'>Raymond Chen - MSFT</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180608-00/?p=98945#comment-1345325">
			June 8, 2018 at 1:26 pm</a>		</div>

		<p>Even if MB_LEN_MAX had existed, its value would have been 2, because at the time (1983), the worst-case length for a character was 2 bytes (DBCS).</p>

		
				</div>
		<ol class="children">
		<li class="comment odd alt depth-3" id="comment-1345445">
				<div id="div-comment-1345445" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180608-00/?p=98945#comment-1345445">
			June 8, 2018 at 4:34 pm</a>		</div>

		<p>Indeed, but it makes finding the fixup locations easy.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1345135">
				<div id="div-comment-1345135" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">DWalker07</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180608-00/?p=98945#comment-1345135">
			June 8, 2018 at 9:40 am</a>		</div>

		<p>If the first sentence had said &#8220;If you call the Get­Service­Display­NameA function (the ANSI version), it reports a buffer size twice the size of what appears to be necessary&#8221;, I would have thought &#8220;DBCS&#8221; or &#8220;Unicode&#8221; right off the bat.  As it is, when I read &#8220;fourteen&#8221; instead of &#8220;seven&#8221;, I knew that was the answer.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1345435">
				<div id="div-comment-1345435" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Stefan Kanthak</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180608-00/?p=98945#comment-1345435">
			June 8, 2018 at 4:29 pm</a>		</div>

		<p>Bonus question: why does ConvertSecurityDescriptorToStringSecurityDescriptor() return in the 5th argument (StringSecurityDescriptorLen; number of characters written to the output buffer) a value bigger than the length of the string written to the output buffer?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1 parent" id="comment-1345495">
				<div id="div-comment-1345495" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://kirit.com/' rel='external nofollow' class='url'>Kirit</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180608-00/?p=98945#comment-1345495">
			June 8, 2018 at 10:57 pm</a>		</div>

		<p>You can&#8217;t take the UTF-16 code units and convert them to UTF-8 without getting a borked stream, so you need to go UTF-16 -&gt; UTF-32 -&gt; UTF-8. Your worst case here is 4 bytes not 3.</p>

		
				</div>
		<ol class="children">
		<li class="comment odd alt depth-2" id="comment-1345615">
				<div id="div-comment-1345615" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">florian</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180608-00/?p=98945#comment-1345615">
			June 10, 2018 at 11:50 am</a>		</div>

		<p>&gt; &#8230; three UTF-8 code units for one UTF-16 code unit &#8230;</p>
<p>With UTF-8, code points from the BMP take up (at maximum) 3 bytes, and code points from the Supplementary Planes take up 4 bytes.</p>
<p>With UTF-16, code points from the BMP take up 2 bytes (1 WORD), and code points from the Supplementary Planes take up 4 bytes (2 WORDs).</p>
<p>So the mentioned &#8220;worst-case expansion&#8221; of 3 to one &#8220;code units&#8221; is 3 to 2 bytes.</p>
<p>And, it&#8217;s possible to perform UTF-16 to UTF-8 (and vice versa) conversion &#8220;directly&#8221;, it&#8217;s just a matter of masking and shifting the non-framing bits to the correct positions:</p>
<p>UTF-8 (BMP):<br />
[0opqrstu]<br />
[110klmn|o10pqrstu]<br />
[1110fghi|10jklmno|10pqrstu]</p>
<p>UTF-16 (BMP):<br />
[fghijklm|nopqrstu]</p>
<p>UTF-8 (Supplementary Planes):<br />
[11110abc|10defghi|10jklmno|10pqrstu]</p>
<p>UTF-16 (Supplementary Planes, i.e. surrogate pairs):<br />
[110110wx|yzfghijk|110111lm|nopqrstu]<br />
(wxyz = abcde-1)</p>
<p>Unicode has been &#8220;artificially&#8221; limited to a 21-bit encoding space, so that all code points can be represented with UTF-16, even if UTF-8 would theoretically cover a 42-bit encoding space (with 8-byte sequences).</p>
<p>To me, Unicode is one of the most fascinating systems I&#8217;ve discovered, to date, a true technical masterpiece.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even depth-2 parent" id="comment-1345665">
				<div id="div-comment-1345665" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://nbtparse.org' rel='external nofollow' class='url'>Kevin</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180608-00/?p=98945#comment-1345665">
			June 10, 2018 at 7:45 pm</a>		</div>

		<p>Sure you can, you just have to know what you&#8217;re doing (i.e. you have to parse surrogate pairs and convert them into a single character each, which you also have to do to convert to UTF-32).  Incidentally, this conversion (UTF-16 surrogate pair -&gt; UTF-8 single character) will only blow up 2x because the surrogate pair occupies two &#8220;Unicode characters&#8221; (as Raymond has been calling them) to encode one Unicode code point (as the Unicode consortium calls them), which occupies four bytes in UTF-8.</p>

		
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-oldnewthing bypostauthor odd alt depth-3" id="comment-1345795">
				<div id="div-comment-1345795" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Raymond+Chen+-+MSFT' rel='external nofollow' class='url'>Raymond Chen - MSFT</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180608-00/?p=98945#comment-1345795">
			June 11, 2018 at 7:02 am</a>		</div>

		<p>I try to remember to call them &#8220;Unicode code units&#8221;. If I miss a spot, let me know.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment even thread-odd thread-alt depth-1 parent" id="comment-1345515">
				<div id="div-comment-1345515" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Neil</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180608-00/?p=98945#comment-1345515">
			June 9, 2018 at 3:47 am</a>		</div>

		<p>&gt; You gave it a buffer with room for 15 characters and it filled in only 8 of them.</p>
<p>Where did it get the buffer to call the wide version of the function? It can&#8217;t use your buffer, because it&#8217;s only got room for 7 wide characters, and the wide function needs to fill in 8 of them.</p>
<p>Is there something I&#8217;ve forgotten from a previous post whereby the null terminator isn&#8217;t written in the limiting case, but the function still succeeds?</p>

		
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-oldnewthing bypostauthor odd alt depth-2" id="comment-1345535">
				<div id="div-comment-1345535" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Raymond+Chen+-+MSFT' rel='external nofollow' class='url'>Raymond Chen - MSFT</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180608-00/?p=98945#comment-1345535">
			June 9, 2018 at 7:45 am</a>		</div>

		<p>It allocates a local Unicode buffer with the same capacity as the ANSI buffer.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even depth-2" id="comment-1345605">
				<div id="div-comment-1345605" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">florian</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180608-00/?p=98945#comment-1345605">
			June 10, 2018 at 11:47 am</a>		</div>

		<p>There were wonderful MSJ &#8211; &#8220;Under the Hood&#8221; articles by Matt Pietrek, maybe 20 years ago, and unfortunately no longer available on microsoft.com, to explain the techniques used to speed up the ANSI to Unicode (and vice versa) API translations.</p>
<p>It was (is?) full of fanciness like hand-optimized assembly code with unrolled loops for UCS-2 (later UTF-16) to system ANSI code page conversion, and static/preallocated per-PEB (or, maybe per-TEB) string conversion buffers (with lengths of 32767 &#8220;characters&#8221;, accounting for many of the string length limits found in Win32 ANSI APIs).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-alexcohn odd alt depth-2" id="comment-1345695">
				<div id="div-comment-1345695" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Alex+Cohn' rel='external nofollow' class='url'>Alex Cohn</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180608-00/?p=98945#comment-1345695">
			June 10, 2018 at 10:09 pm</a>		</div>

		<p>This API and her kin were never about saving memory, but rather reducing (sometimes) memory management effort.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1345625">
				<div id="div-comment-1345625" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180608-00/?p=98945#comment-1345625">
			June 10, 2018 at 1:39 pm</a>		</div>

		<p>So I&#8217;ve got something useful to say on UTF-8 codepage. My previous analyses were all based on application code, not library code. It takes a special kind of mistake to make code page UTF-8 break in application code, but it&#8217;s very easy for that mistake to exist in the C library itself. Essentially, it&#8217;s the same kind of problem as the W-A problem given here. The problem shouldn&#8217;t exist in application code because application code has no business doing partial-range code-point conversion. But fgets() and fprintf() need to do this internally and its really easy to mess up the chunk-read algorithm in fgets() to assume at most two bytes here.</p>
<p>This is one of the many reasons why you really want a platform libc. While you can service the msvc*.dll files, several VS versions including 2005 went out with broken support for this where servicing one application&#8217;s local copy would break another application&#8217;s local copy, resulting in people statically linking against libc, which can&#8217;t be serviced.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-alexcohn odd alt thread-odd thread-alt depth-1" id="comment-1345705">
				<div id="div-comment-1345705" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Alex+Cohn' rel='external nofollow' class='url'>Alex Cohn</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180608-00/?p=98945#comment-1345705">
			June 10, 2018 at 10:13 pm</a>		</div>

		<p>To me, this and similar APIs that return size of required buffer sans terminating nul, remind the $9.99 price tags.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1345725">
				<div id="div-comment-1345725" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Anonymous</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180608-00/?p=98945#comment-1345725">
			June 11, 2018 at 3:27 am</a>		</div>

		(The content was deleted per user request)
		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1345735">
				<div id="div-comment-1345735" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Anonymous</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180608-00/?p=98945#comment-1345735">
			June 11, 2018 at 3:28 am</a>		</div>

		(The content was deleted per user request)
		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1345745">
				<div id="div-comment-1345745" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Anonymous</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180608-00/?p=98945#comment-1345745">
			June 11, 2018 at 3:28 am</a>		</div>

		(The content was deleted per user request)
		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-msn odd alt thread-odd thread-alt depth-1 parent" id="comment-1345755">
				<div id="div-comment-1345755" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/poizan42' rel='external nofollow' class='url'>poizan42</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180608-00/?p=98945#comment-1345755">
			June 11, 2018 at 3:31 am</a>		</div>

		<p>&gt; <b>Bonus chatter</b>: These worst-case calculations will break if the ANSI code page were ever UTF-8, because the worst-case expansion becomes three UTF-8 code units for one UTF-16 code unit, rather than just two to one for DBCS code pages. These types of assumptions about the worst-case scenario are buried throughout tens of millions of lines of source code. Finding them is quite a challenge.</p>
<p>Uh-uh <a href="https://i.imgur.com/BuxCncw.png" rel="nofollow">https://i.imgur.com/BuxCncw.png</a>. Yes, that does exactly that&#8230;</p>

		
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-msn even depth-2 parent" id="comment-1345765">
				<div id="div-comment-1345765" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/poizan42' rel='external nofollow' class='url'>poizan42</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180608-00/?p=98945#comment-1345765">
			June 11, 2018 at 3:32 am</a>		</div>

		<p>&#8230; how do I get the blog software to make a newline? Several line breaks does nothing, and &lt;br&gt; is ignored as well,</p>

		
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-msn odd alt depth-3" id="comment-1346075">
				<div id="div-comment-1346075" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/poizan42' rel='external nofollow' class='url'>poizan42</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180608-00/?p=98945#comment-1346075">
			June 11, 2018 at 12:56 pm</a>		</div>

		<p>Wait, my comment shows up fine when I&#8217;m not logged in, but misses the newline when I am logged in.</p>
<p>Logged in: <a href="https://i.imgur.com/OO5PhWA.png" rel="nofollow">https://i.imgur.com/OO5PhWA.png</a></p>
<p>Not logged in: <a href="https://i.imgur.com/TYLc9R7.png" rel="nofollow">https://i.imgur.com/TYLc9R7.png</a></p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>