<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (13)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-1010043">
				<div id="div-comment-1010043" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Antonio Rodr&#237;guez</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120910-00/?p=6653#comment-1010043">
			September 10, 2012 at 7:53 am</a>		</div>

		<p>Corollary: always handle all reasonable exceptions in a callback. Yes, there are still programmers using Visual Basic 6 (its reasonably powerful and quite fast to develop in, and believe it or not, many customers still require Windows 98 compatibility in 2012!), and this is one thing you have to take in mind when you need to subclass (one of those hairy and ugly things in a high level language: subclassing is far more difficult in classic Visual Basic than in C or C++). Inside of a window procedure or a callback, any kind of exception immediately crashes the entire process, and Visual Basic raises exceptions (&quot;runtime errors&quot;) for any unexpected condition, like reading beyond the end of a file.</p>
<p>All in all, most of the time you don&#39;t need to work with subclassing, and classic Visual Basic is pretty efficient for general GUI programming &#8211; that&#39;s why it&#39;s still used 15 years after its last release!</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1010053">
				<div id="div-comment-1010053" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120910-00/?p=6653#comment-1010053">
			September 10, 2012 at 8:06 am</a>		</div>

		<p>Which is why I normally catch at module boundaries, stuff into global variable translate to return code, return, and rethrow at the reentry point.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-maurits even thread-even depth-1" id="comment-1010063">
				<div id="div-comment-1010063" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Maurits+%5BMSFT%5D' rel='external nofollow' class='url'>Maurits [MSFT]</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120910-00/?p=6653#comment-1010063">
			September 10, 2012 at 8:41 am</a>		</div>

		<p>An aviation person once told me that all landings are controlled crashes.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-alegrigoriev odd alt thread-odd thread-alt depth-1" id="comment-1010083">
				<div id="div-comment-1010083" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/alegr1' rel='external nofollow' class='url'>alegr1</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120910-00/?p=6653#comment-1010083">
			September 10, 2012 at 10:29 am</a>		</div>

		<p>A checked build of Windows needs to have all those callback calls wrapped in a catch-all block which must terminate the process with a DebugOutput message. But then again, who runs the checked Windows? Even Microsoft proggers don&#39;t always care.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1010133">
				<div id="div-comment-1010133" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Neil</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120910-00/?p=6653#comment-1010133">
			September 11, 2012 at 3:41 am</a>		</div>

		<p>The worst bit is the that 64-bit message loop effectively eats window procedure exceptions, so for example if your paint routine throws an exception, it actually exhibits as a busy hang as your app keeps failing to repaint.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1010143">
				<div id="div-comment-1010143" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Neil</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120910-00/?p=6653#comment-1010143">
			September 11, 2012 at 3:48 am</a>		</div>

		<p>My above comment was slightly inaccurate. Correcting it is left as an exercise. Now to try out the hotfix mentioned in the linked article.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1010203">
				<div id="div-comment-1010203" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120910-00/?p=6653#comment-1010203">
			September 11, 2012 at 8:10 am</a>		</div>

		<p>After reading the entire backwards chain, I conclude that EnterCriticalSection has a bug. So, it throws if it needs to allocate an event but cannot. Even in that situation, it should not corrupt state.</p>
<p>I mean really, the APIs in kernel32 are the effective kernel level APIs. They need to be as stable as kernel, by which I mean all conditions except for memory corruption are handled.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-alegrigoriev odd alt thread-odd thread-alt depth-1" id="comment-1010253">
				<div id="div-comment-1010253" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/alegr1' rel='external nofollow' class='url'>alegr1</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120910-00/?p=6653#comment-1010253">
			September 11, 2012 at 10:01 am</a>		</div>

		<p>&quot;The worst bit is the that 64-bit message loop effectively eats window procedure exceptions, so for example if your paint routine throws an exception, it actually exhibits as a busy hang as your app keeps failing to repaint.&quot;</p>
<p>It should be obvious that WM_PAINT handler MUST NOT create any modal dialogs and MUST NOT throw before calling BeginPaint.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1010263">
				<div id="div-comment-1010263" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Gabe</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120910-00/?p=6653#comment-1010263">
			September 11, 2012 at 11:07 am</a>		</div>

		<p>Joshua: As of Win2k, EnterCriticalSection doesn&#39;t throw an exception upon being unable to allocate an event. Instead it just uses the preallocated KeyedEvent. It will only throw an exception if your critical section times out, but that causes nothing to get corrupted.</p>
<p>The corruption happens when your region of code protected by the critical section throws an exception you&#39;re not expecting (ACCESS_VIOLATION). The exception handling of RAII exits the critical section, leaving your data structure half-modified and no longer protected by the critical section. It&#39;s this partially modified data structure that is the corruption.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-chris-j-leonard odd alt thread-odd thread-alt depth-1" id="comment-1010323">
				<div id="div-comment-1010323" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Veltas' rel='external nofollow' class='url'>Veltas</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120910-00/?p=6653#comment-1010323">
			September 11, 2012 at 3:52 pm</a>		</div>

		<p>&quot;When you transfer control across stack frames, all the frames in between need to be in on the joke&quot; Haha!</p>
<p>Interesting read, especially since I tend not to involve myself with exceptions unless they involve themselves with me.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1010333">
				<div id="div-comment-1010333" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Anonymous</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120910-00/?p=6653#comment-1010333">
			September 11, 2012 at 4:14 pm</a>		</div>

		<p>We had an issue like this at a place I used to work. &nbsp;We had a product which was built on Berkeley DB. &nbsp;In some rare and generally unpredictable situation, the DB would apparently decide to corrupt itself, and every call would return a &quot;DB run recovery&quot; error. &nbsp;Even running recovery, like it said, wouldn&#39;t fix it. &nbsp;Eventually, we tracked the cause down to a C++ exception being thrown out through the key comparison callback function (Berkeley DB is a C library). &nbsp;Apparently ripping the stack out from under BDB while it was in the middle of some B-Tree operation was a Very Bad Thing&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1010673">
				<div id="div-comment-1010673" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Bob</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120910-00/?p=6653#comment-1010673">
			September 12, 2012 at 12:41 pm</a>		</div>

		<p>&quot;An aviation person once told me that all landings are controlled crashes.&quot;</p>
<p>Only if the pilot is an ex-naval aviator.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1010863">
				<div id="div-comment-1010863" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120910-00/?p=6653#comment-1010863">
			September 13, 2012 at 2:53 pm</a>		</div>

		<p>@Anonymous: Undefined or not I&#39;d suddenly consider abandoning BerkeleyDB. I find it hard to imagine that such behavior could coexist with able to recover from pulling the plug at any time.</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>