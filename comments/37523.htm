<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (70)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-219363">
				<div id="div-comment-219363" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Jerry Pisk</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041020-00/?p=37523#comment-219363">
			October 20, 2004 at 7:11 am</a>		</div>

		<p>If a program that my company relies on breaks because it does tricks like this you bet I&#8217;m going to change my tune &#8211; I&#8217;ll start looking for an alternative. And since Microsoft isn&#8217;t really willing to make sure programs like this don&#8217;t survive I have no choice but to look at other platforms, that weed out crappy code.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-219373">
				<div id="div-comment-219373" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Carlos</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041020-00/?p=37523#comment-219373">
			October 20, 2004 at 7:18 am</a>		</div>

		<blockquote><p>
  The most common way people mess up their program registration is by forgetting to quote spaces in the path to the program itself!</p>
<p>The COM self-registration code in VB6 used to have this bug and it lead to many bizarre errors.  For example, you&#8217;d see &quot;D:Program FilesMeMyVBServer.exe is not a valid Win32 executable&quot; in the event log.  This would happen if someone had created a file called &quot;D:Program&quot; which wasn&#8217;t a valid win32 executable.</p>
<p>The security implications of this are also rather worrying.<br />
  
</p></blockquote>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-219383">
				<div id="div-comment-219383" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Tim Smith</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041020-00/?p=37523#comment-219383">
			October 20, 2004 at 7:23 am</a>		</div>

		<p>In other words, &quot;Damn you Microsoft for making an operating system that doesn&#8217;t break applications that were working just fine.&quot;</p>
<p>If I &quot;broke&quot; bad user data with each release of my software just because the user was &quot;too stupid&quot; to know that what he did was wrong, I would be out of business.</p>
<p>There is NO reason to assume that someone screwed up their registry entry just to make sure he received short file names.  I would bet half of these people always wondered why they were getting short filenames but just thought it was &quot;how it works&quot;.</p>
<p>Hey Raymond, in your experience have you run across a term used to describe situations like these?  I have used the term &quot;accidental contracts&quot; to describe cases where a user, unbeknownst to himself relies of a undocumented behavior.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-219393">
				<div id="div-comment-219393" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Gordon</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041020-00/?p=37523#comment-219393">
			October 20, 2004 at 7:33 am</a>		</div>

		<p>It seems like users want this undocumented behavior pretty badly. Why not just have a registry key for it, rather than making ANY assumption? (Initially, I mean &#8212; now you&#8217;re pretty screwed.)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-219403">
				<div id="div-comment-219403" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Thomas Heller</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041020-00/?p=37523#comment-219403">
			October 20, 2004 at 7:37 am</a>		</div>

		<p>How do I mark a 16-bit Program Win95 compatible?<br />
<br />(We are still distributiong 16-bit exe. Once I had long filenames working, but someday it broke)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-219423">
				<div id="div-comment-219423" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://weblogs.asp.net/oldnewthing/' rel='external nofollow' class='url'>Raymond Chen</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041020-00/?p=37523#comment-219423">
			October 20, 2004 at 7:42 am</a>		</div>

		<p>&quot;Why not just have a registry key for it, rather than making ANY assumption? (Initially, I mean&#8230;&quot;</p>
<p>I guess I don&#8217;t understand. A registry key that says &quot;Assume incorrectly registered programs are SFN?&quot; That was the default behavior. Why do you need a registry key to set a behavior that is already the default?</p>
<p>And a registry key doesn&#8217;t work once you have two programs, one that wants the setting on and one that wants it off.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-219433">
				<div id="div-comment-219433" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ben Cooke</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041020-00/?p=37523#comment-219433">
			October 20, 2004 at 7:52 am</a>		</div>

		<p>Quite why a 32-bit application would want a short filename is beyond me right now. I guess it could just want a filename without spaces to avoid dealing with the quotes, but that&#8217;s the only reason that comes to mind.</p>
<p>I dread to think what happens if the user installs such an application to a path like N:appsBrokenApp (where N: is perhaps some mapped network share) &#8211; now Windows will be able to find the executable and determine that it&#8217;s 32-bit &#8230; CRUNCH.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-219443">
				<div id="div-comment-219443" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">DrPizza</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041020-00/?p=37523#comment-219443">
			October 20, 2004 at 7:56 am</a>		</div>

		<p>Why would I change my tune?</p>
<p>MS could write an appcompat shim (that could be used with any and all of these broken applications) that I could use to fix the problem.</p>
<p>It means that the core OS can work sensibly, broken applications can continue to run, and that their breakage becomes apparent, thus serving as a motivation to their vendors to fix them.<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-219503">
				<div id="div-comment-219503" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Miles Archer</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041020-00/?p=37523#comment-219503">
			October 20, 2004 at 8:47 am</a>		</div>

		<p>Most people just want their computer to work and dont care how or why. Causing them avoidable pain is a great way to get them to switch to a platform that &quot;just works&quot;.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-219523">
				<div id="div-comment-219523" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ben Hutchings</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041020-00/?p=37523#comment-219523">
			October 20, 2004 at 9:17 am</a>		</div>

		<p>Carlos: There is some code in Windows XP that will warn you if you create a directory whose name matches up to the first space of the Program Files folder (e.g. &quot;C:Program&quot; on a normal English version), though I don&#8217;t remember when it runs. Creating that folder through Explorer doesn&#8217;t trigger it immediately.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-219533">
				<div id="div-comment-219533" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://thor.prohosting.com/bmm6o' rel='external nofollow' class='url'>Brian</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041020-00/?p=37523#comment-219533">
			October 20, 2004 at 9:42 am</a>		</div>

		<p>Will there ever be a day where Raymond describes some heroic workaround that MS undertook to keep some misguided app running that doesn&#8217;t involve a debate on the merits of keeping said app running vs giving it some tough love?  It&#8217;s sooooo tedious.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-219543">
				<div id="div-comment-219543" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Cooney</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041020-00/?p=37523#comment-219543">
			October 20, 2004 at 9:52 am</a>		</div>

		<p>How about a registry key for the application that declares whether LFN support is desired?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-219553">
				<div id="div-comment-219553" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ari Berger</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041020-00/?p=37523#comment-219553">
			October 20, 2004 at 9:54 am</a>		</div>

		<p>It seems unlikely to me that most culprits weren&#8217;t &quot;relying on the shell not being smart enough to find their real location&quot;.  More likely they registered their programs incorrectly by accident.  It still ran, so they didn&#8217;t know they were doing somethng wrong.  When they examined the pathnames that came in, they were short file names, so they wrote the programs to match.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-219573">
				<div id="div-comment-219573" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://weblogs.asp.net/oldnewthing/' rel='external nofollow' class='url'>Raymond Chen</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041020-00/?p=37523#comment-219573">
			October 20, 2004 at 10:00 am</a>		</div>

		<p>&quot;so they wrote the programs to match&quot;</p>
<p>and therefore now rely on this behavior.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-219593">
				<div id="div-comment-219593" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Gordon</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041020-00/?p=37523#comment-219593">
			October 20, 2004 at 11:06 am</a>		</div>

		<p>Cooney got my meaning better than I expressed it &#8212; the behavior I meant was &quot;32/64-bit app that doesn&#8217;t support  LFN&quot;, rather than the tripartite assumption.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-219603">
				<div id="div-comment-219603" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Andrew Taylor</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041020-00/?p=37523#comment-219603">
			October 20, 2004 at 11:29 am</a>		</div>

		<p>Why can Windows find the file to execute it but not to check binary? Shouldn&#8217;t that have been consistant from the start?  If Windows gave enough feedback to developers that their registry entry was incorrect by not executing the file, perhaps even having the shell pop up a message box saying &quot;Can&#8217;t find c:Program&quot;, this issue wouldn&#8217;t have arisen in the first place.</p>
<p>Of course, crying about it now isn&#8217;t productive, and I guess Windows takes the safest alternative given the choices.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-219613">
				<div id="div-comment-219613" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://weblogs.asp.net/oldnewthing' rel='external nofollow' class='url'>Raymond Chen</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041020-00/?p=37523#comment-219613">
			October 20, 2004 at 11:46 am</a>		</div>

		<p>The decision on how to parse unquoted strings in CreateProcess was made in Windows NT 3.1 (for compatibility reasons certainly). Imagine if NT 3.1 said &quot;Sorry, lots of your 16-bit programs won&#8217;t work. If you don&#8217;t like it, go buy some other operating system.&quot;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-219643">
				<div id="div-comment-219643" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Camillo</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041020-00/?p=37523#comment-219643">
			October 20, 2004 at 1:49 pm</a>		</div>

		<p>I really don&#8217;t understand why people react this way. Raymond is spending his free time giving us a glimpse on how they were able to create the most succesful piece of software on earth&#8230; and you all begin to aruge that you would have done it better. Gentlemen, please show the evidences,  case studies.<br />
<br />I prefer to stay silent and thank Raymond for sharing his know-how with us.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-219453">
				<div id="div-comment-219453" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://weblogs.asp.net/oldnewthing/' rel='external nofollow' class='url'>Raymond Chen</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041020-00/?p=37523#comment-219453">
			October 20, 2004 at 7:58 am</a>		</div>

		<p>The problem is that the shim would have to be applied to *any program that uses shell32.dll* since it is shell32.dll that parses the registry key.  Shimming litware.exe doesn&#8217;t get you anywhere since it is not litware.exe that needs to alter its registry parsing code. It&#8217;s shell32.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-219653">
				<div id="div-comment-219653" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Jerry Pisk</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041020-00/?p=37523#comment-219653">
			October 20, 2004 at 3:36 pm</a>		</div>

		<p>Camillo, take a look at Linux. It barely existed 10 years ago, when Windows was first released. And look at where it is today, compared to Windows. Backwards compatibility might be nice but is usually the worse choice when it&#8217;s made at the expense of stability or security. And supporting lazy programmers only leads to more lazy programmers that won&#8217;t bother to do things the right way.</p>
<p>I understand why Microsoft is doing all these things Raymond describes, but that doesn&#8217;t mean I have to agree to it and that I can&#8217;t say what I think about it, just because Raymond spends his time writing about it. Afterall, most of us do use Windows, why woudln&#8217;t we want Microsoft to know what we think? Not all Windows users are VB draggers who do not understand how to quote paths…</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-219663">
				<div id="div-comment-219663" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.chaoszone.org/' rel='external nofollow' class='url'>Prasenjeet Dutta</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041020-00/?p=37523#comment-219663">
			October 20, 2004 at 4:06 pm</a>		</div>

		<p>Is it just me, or does anyone else have this LFN-not-supplied problem with regedit.exe on Windows 2000 (SP4 here)? I see a lot of &quot;Are you sure you want to add C:DOCUME~1PRASEN~1MYDOCU~1foo.reg to the registry? y/n&quot; because my Windows 2000 registry uses &#8216;regedit.exe &quot;%1&quot;&#8217; for HKCRregfileshellopencommand. Wondering if <em>this</em> was deliberate.<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-219673">
				<div id="div-comment-219673" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">John Elliott</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041020-00/?p=37523#comment-219673">
			October 20, 2004 at 4:15 pm</a>		</div>

		<p>I tend to install my programs in C:OPT rather than C:Program Files. As Ben Cooke remarks, that&#8217;s going to play havoc with a program relying on the above behaviour.</p>
<p>As for why I&#8217;d do such a thing: PROGMAN.EXE seems to have something of a blind spot about long filenames with spaces in them. You can set up a program item with such a name (either by browsing, or by drag/drop) but it won&#8217;t run them. You have to convert the name to a SFN by hand, and it&#8217;s then that you get the fun of working out whether &quot;Program FilesMicrosoft Developer Studio&quot; corresponds to PROGRA~1MICROS~1, PROGRA~1MICROS~2 or PROGRA~1MICROS~3. It&#8217;s much simpler to install into C:OPTMSDEV where PROGMAN can see it straight away.<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-219683">
				<div id="div-comment-219683" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Rick C</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041020-00/?p=37523#comment-219683">
			October 20, 2004 at 4:52 pm</a>		</div>

		<p>&quot;You have to convert the name to a SFN by hand, and it&#8217;s then that you get the fun of working out whether &quot;Program FilesMicrosoft Developer Studio&quot; corresponds to PROGRA~1MICROS~1, PROGRA~1MICROS~2 or PROGRA~1MICROS~3.&quot;</p>
<p>dir/x is your friend when it comes to that.<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-219703">
				<div id="div-comment-219703" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Norman Diamond</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041020-00/?p=37523#comment-219703">
			October 20, 2004 at 6:26 pm</a>		</div>

		<p>1.<br />
<br />&gt; If it can&#8217;t find your program, then the<br />
<br />&gt; shell plays it safe and assumes that the<br />
<br />&gt; program doesn&#8217;t support long file names.</p>
<p>Is that the reason why PhotoDraw gets registered without those quotation marks?  The result is that when double-clicking a previously saved PhotoDraw file, Windows either can&#8217;t find the PhotoDraw application or can&#8217;t find the file you just double-clicked (I forgot which, it&#8217;s been a while).</p>
<p>Surely the company that made PhotoDraw would have discovered this bug if they had ever tested the product &#8212; after all, how can you miss what happens when you double-click a file in Explorer.  No fix was ever released either.  Will a shim be made to compensate for it?</p>
<p>2.<br />
<br />Does Windows 98 command.com support long file names?  I copied and saved the following a couple of years ago because it was so striking.  In between the two &quot;move&quot; commands, Windows made a random adjustment to its schizophrenia over the use of long filenames and short filenames.  I didn&#8217;t do anything else between those two &quot;move&quot; commands.</p>
<p>C:My Documents&gt;move an061.pdf ni<br />
<br />C:MY DOCUMENTSAN061.pdf =&gt; C:MY DOCUMENTSniAN061.pdf [OK]</p>
<p>C:My Documents&gt;move an017.pdf ni<br />
<br />C:MYDOCU~1AN017.pdf =&gt; C:MYDOCU~1niAN017.pdf [OK]</p>
<p>C:My Documents&gt;</p>
<p>3.<br />
<br />Does Windows Explorer support long filenames?  Fixed in Windows XP SP2, not yet fixed in Windows Server 2003, on external hard drives.  (Also can be fixed by grading to Windows 98, NT4, 2000, etc.)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-219733">
				<div id="div-comment-219733" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.accidentalscientist.com' rel='external nofollow' class='url'>Simon Cooke [exMSFT]</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041020-00/?p=37523#comment-219733">
			October 20, 2004 at 8:52 pm</a>		</div>

		<p>John Elliot-</p>
<p>People still use Progman?</p>
<p>Bleuch.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-219753">
				<div id="div-comment-219753" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://weblogs.asp.net/oldnewthing/' rel='external nofollow' class='url'>Raymond Chen</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041020-00/?p=37523#comment-219753">
			October 20, 2004 at 11:02 pm</a>		</div>

		<p>&quot;Does Windows 98 command.com support long file names?&quot;</p>
<p>It does, but &quot;move&quot; is not part of command.com. It&#8217;s an old DOS program.</p>
<p>&quot;Does Windows Explorer support long filenames?&quot;</p>
<p>I&#8217;m sure this is some sort of trick question.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-219763">
				<div id="div-comment-219763" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Frank</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041020-00/?p=37523#comment-219763">
			October 20, 2004 at 11:23 pm</a>		</div>

		<p>I made the error described by Raymond, and now I can fix it. Thank you Raymond.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-219783">
				<div id="div-comment-219783" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Chris Becke</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041020-00/?p=37523#comment-219783">
			October 21, 2004 at 12:58 am</a>		</div>

		<p>I do find this concession to compatability a bit dodge. Installing these apps in a path without spaces causes them to break.</p>
<p>I remeber at one time trying to find out what % escapes the shell supported. I have a legacy app that needs to get the filenames passed to it winthout their extensions. I seem to recall finding things like %L would always pass the long name, but I never found any documentation describint the alternatives to %1 and %*</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-219713">
				<div id="div-comment-219713" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Jerry Pisk</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041020-00/?p=37523#comment-219713">
			October 20, 2004 at 6:47 pm</a>		</div>

		<p>Another thing Raymond didn&#8217;t mention &#8211; what&#8217;s going to happen when there are no short file names? You can turn it off, for NTFS volumes, so if one does turn it off (as I do on my servers) programs not working properly with LFN break &#8211; and the vendor blames it on me, because their Windows run their ***** code just fine.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-219793">
				<div id="div-comment-219793" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">John Elliott</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041020-00/?p=37523#comment-219793">
			October 21, 2004 at 3:14 am</a>		</div>

		<p>Simon Cooke: Ah, comrades, you may jeer and sneer, and you may scoff, but I&#8217;ve got into the habit of using it for all the apps that don&#8217;t fit on my quicklaunch bar. Don&#8217;t worry &#8211; I don&#8217;t have it as my shell :-)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-219813">
				<div id="div-comment-219813" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Chris H</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041020-00/?p=37523#comment-219813">
			October 21, 2004 at 5:22 am</a>		</div>

		<p>Jerry:</p>
<p>&gt; take a look at Linux. It barely existed 10<br />
<br />&gt; years ago, when Windows was first released.<br />
<br />&gt; And look at where it is today, compared to<br />
<br />&gt; Windows.</p>
<p>Today, it barely exists, compared to Windows. And part of the reason for that is that people don&#8217;t like dealing with the horrendous compatibility issues between applications and versions of core libraries.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-219833">
				<div id="div-comment-219833" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">DrPizza</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041020-00/?p=37523#comment-219833">
			October 21, 2004 at 5:51 am</a>		</div>

		<p>&quot;The decision on how to parse unquoted strings in CreateProcess was made in Windows NT 3.1 (for compatibility reasons certainly). Imagine if NT 3.1 said &quot;Sorry, lots of your 16-bit programs won&#8217;t work. If you don&#8217;t like it, go buy some other operating system.&quot; &quot;<br />
<br />This was in practice not that far from the truth anyway, so I&#8217;m not sure it would have been too much of a disaster.<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-219843">
				<div id="div-comment-219843" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">mschaef</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041020-00/?p=37523#comment-219843">
			October 21, 2004 at 6:50 am</a>		</div>

		<p>&quot;If you remember Norton Navigator from 1995, it had a feature that let 16-bit apps &quot;see&quot; LFNs (not sure how exactly, I didn&#8217;t use NN much). I&#8217;m curious if apps like NN cause the shell team any extra grief in app compat. &quot;</p>
<p>I have no idea how this was done, but I have a guess I came up with at the time.</p>
<p>My theory is that Norton intercepted calls to the Win16 standard dialog APIs and displayed the Win32 standard file dialogs instead. I&#8217;m supposing that thunking and some creative systems programming was able to resolve the conflict bewteen Win16 and Win32.  From that point, all that&#8217;d have to be done (I guess) is to ensure that the filenames passed back from the altered standard file dialogs match what a Win16 app would expect: short file names.</p>
<p>Of course, if apps expected to be able to do funky things to the standard dialogs (subclassing, new dialog templates, adding control, whatever), Norton would either have to disable its extension for that particular app or find a way to support the client app&#8217;s expectations.</p>
<p>Does this sound plausible at all? It seems a lot more doable than somehow altering apps in place to handle long filenames correctly.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-219853">
				<div id="div-comment-219853" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Matt</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041020-00/?p=37523#comment-219853">
			October 21, 2004 at 7:37 am</a>		</div>

		<p>&quot;take a look at Linux&#8230;&quot;<br />
<br />Yes &#8211; a mediocre rip off of a 30 year old OS that&#8217;s barely caught up to where the original was 10 years ago!<br />
<br />An OS that doesn&#8217;t worry about spaces in program paths because most of its directories in the root file system have 3 character names. (Obviously 3 character file type extensions are arcane and detrimental to the user experience. The user would much rather interpret 3 character names for the most important system directories. I&#8217;ve personally always rathered &quot;/bin&quot;, &quot;/usr/local/bin&quot; and &quot;/opt&quot; to &quot;Program files&quot; as a place to put my programs!) Of course I&#8217;m being harsh &#8211; some of the more advanced directories have easily understandable 5 or 6 letter names.<br />
<br />And of course binary compatibility with old programs (through hacks in the OS) is obviously less important than a stable API and architecture. Users love to recompile programs and come to terms with the architecture of X. Windows 3.11 on DOS was obviously a dirty hack, but X on sh/bash/csh is such a clean answer to the GUI.<br />
<br />Users also love to learn dozens of different syntaxes for text configuration files. It&#8217;s obviously superior to a consistent GUI. We&#8217;d much rather spend hours learning config file syntaxes than have our computers waste seconds loading and using a GUI.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-219893">
				<div id="div-comment-219893" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">David Candy</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041020-00/?p=37523#comment-219893">
			October 21, 2004 at 8:30 am</a>		</div>

		<p>I presume %L forces a long file name rather than above rules. Can you force a short name (differently from above duscussion).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-219983">
				<div id="div-comment-219983" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">mschaef</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041020-00/?p=37523#comment-219983">
			October 21, 2004 at 10:33 am</a>		</div>

		<p>&quot; I&#8217;ve personally always rathered &quot;/bin&quot;, &quot;/usr/local/bin&quot; and &quot;/opt&quot; to &quot;Program files&quot; as a place to put my programs!)&quot;</p>
<p>Personally, I&#8217;d rather have /bin than &quot;Program Files&quot;.  /bin is <em>much</em> easier to type, and for &quot;Aunt Tillie&quot;, she&#8217;s not going to care where the programs are installed anyway, given that Windows depends so heavily on installers distributing files across the disk (rather than just copying over program files manually).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-220043">
				<div id="div-comment-220043" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Josh</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041020-00/?p=37523#comment-220043">
			October 21, 2004 at 12:03 pm</a>		</div>

		<p>Program Files may be more obvious than bin, but why oh why couldn&#8217;t microsoft have used Programs instead?  That would have avoided much of the short versus long filename issues.  Many of Microsoft&#8217;s own commands still have issues with spaces being in a path or filename.  Oh well!</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-220053">
				<div id="div-comment-220053" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Matt</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041020-00/?p=37523#comment-220053">
			October 21, 2004 at 12:17 pm</a>		</div>

		<p>A near good question, Josh, but I&#8217;m in an argumentative mood.<br />
<br />I think the reason (if MS considered that option) is that your &quot;Programs&quot; directory suggestion would conflict with the &quot;Programs&quot; start menu item. It&#8217;s much better to have some distinction for the less technical. If &quot;Programs&quot; are what you click on the start menu then all those supporting files should be called something else. (I even include the exe as a supporting file given its shortcut often has a different name.) &quot;Program Files&quot; seems somewhat obvious after the Start Menu terminology is factored in.<br />
<br />Spaces and long filenames shouldn&#8217;t have been an issue (outside of DOS/Win16/Win32[k?/s?/whatever?]) in 1995 let alone in 2004. MS has gone a fair way to making that so. Linux has not despite its proponents claims of technical superiority and superior adapatability.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-220063">
				<div id="div-comment-220063" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">mschaef</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041020-00/?p=37523#comment-220063">
			October 21, 2004 at 12:34 pm</a>		</div>

		<p>&quot; It&#8217;s much better to have some distinction for the less technical. &quot;</p>
<p>Why are the less technical looking around in &quot;Program Files&quot; anyway?</p>
<p>The 95% case for modern users is: install, uninstall, repair an existing install, and change the components that are installed. The installer can do all of that from the &quot;Add/Remove Programs&quot; Control Panel. The cases I can think of that would require more access all imply enough sophistication that the difference between &quot;Program Files&quot;, &quot;Programs&quot;, and &quot;bin&quot; seems pretty trivial.</p>
<p>Just to put it in perspective, I don&#8217;t remember having any trouble with odd directory names back when I was 12 and playing around with DOS on an 8088. If that&#8217;s me with no formal training, very little informal training and not much experience with the machine at all, I have a hard time figuring out who exactly this user is who cares what&#8217;s in &quot;Program Files&quot; and yet can&#8217;t figure out a shorter directory name.</p>
<p>&quot;Spaces and long filenames shouldn&#8217;t have been an issue (outside of DOS/Win16/Win32[k?/s?/whatever?]) in 1995 let alone in 2004. MS has gone a fair way to making that so. Linux has not despite its proponents claims of technical superiority and superior adapatability. &quot;</p>
<p>What specifically are you claiming that Linux isn&#8217;t doing with spaces and long fime names?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-219823">
				<div id="div-comment-219823" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">DrPizza</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041020-00/?p=37523#comment-219823">
			October 21, 2004 at 5:49 am</a>		</div>

		<p>&quot;The problem is that the shim would have to be applied to *any program that uses shell32.dll* since it is shell32.dll that parses the registry key. Shimming litware.exe doesn&#8217;t get you anywhere since it is not litware.exe that needs to alter its registry parsing code. It&#8217;s shell32. &quot;<br />
<br />Surely it&#8217;d have to be applied to litware.exe to mung its command-line arguments vector so that it got what it expected, rather than what it should have actually received?<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-220103">
				<div id="div-comment-220103" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">mschaef</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041020-00/?p=37523#comment-220103">
			October 21, 2004 at 1:02 pm</a>		</div>

		<p>FWIW, I do use Windows virtually <em>all</em> the time, due to interoperability concerns. It just seriously concerns me that so much of my work is tied to one company, so dominant in its field, and my alternative choices are so limited.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-220013">
				<div id="div-comment-220013" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Matt</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041020-00/?p=37523#comment-220013">
			October 21, 2004 at 11:17 am</a>		</div>

		<p>If you&#8217;re typing those places are almost certainly included in the path and there&#8217;s path completion in both Linux and Windows at present.<br />
<br />If you&#8217;re hunting around for something &quot;Program Files&quot; is a much more obvious place to look &quot;/bin&quot;, &quot;/opt&quot; and &quot;/usr/local/bin&quot;.<br />
<br />I&#8217;m not claiming Windows is perfect &#8211; theres no excuse for msimn.exe as a filename today, but it&#8217;s still ahead of Linux.<br />
<br />And I&#8217;m responding to the argument that Linux has ditched its &quot;unnecessary&quot; compatibility weight more than Windows has for the sake of user and technological advancements.<br />
<br />Obscure *important* directory names (and configuration files and outdated GUI architecture) says it hasn&#8217;t. In fact the only place Linux ditches compatibility is for binary executables. That&#8217;s no great technical achievement and its a user nightmare.<br />
<br />If Linux were the revolutionary OS its proponents make it out to be those issues would have been addressed.<br />
<br />I&#8217;d be worried about giving such astounding insights away to Linux developers on an MS blog if I weren&#8217;t sure they&#8217;d ignore them anyway. In 5 years time Linux developers will still be bitching about MS being anticompetitive. If Linux is technically superior it would have the market by now (ten years after widespread distribution). Their arguments will be even less compelling in 2009.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-220133">
				<div id="div-comment-220133" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.subversion.co.nz/index.php?p=17' rel='external nofollow' class='url'>Anonymous</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041020-00/?p=37523#comment-220133">
			October 21, 2004 at 6:55 pm</a>		</div>

		<p>Subversion &amp;raquo; Obfuscation and the Long Filename Debacle</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-220083">
				<div id="div-comment-220083" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">mschaef</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041020-00/?p=37523#comment-220083">
			October 21, 2004 at 12:53 pm</a>		</div>

		<p>&quot;If you&#8217;re typing those places are almost certainly included in the path and there&#8217;s path completion in both Linux and Windows at present.&quot;</p>
<p>Which I now have to obsessively rely on thanks to the choice of directory name.</p>
<p>&quot;If you&#8217;re hunting around for something &quot;Program Files&quot; is a much more obvious place to look &quot;/bin&quot;, &quot;/opt&quot; and &quot;/usr/local/bin&quot;. &quot;</p>
<p>Sure, right. It makes _so_ much sense to look for include files under &quot;/Program Files/Microsoft Visual Studio 2003/vc7/PlatformSDK/include&quot; than &quot;/usr/include&quot;.</p>
<p>Not to mention the fact that Windows installers have historically droped files all over the hard disk and not just in Program Files.  </p>
<p>&quot;Obscure *important* directory names&quot;</p>
<p>Directory names that take a whole 10 minutes to figure out.</p>
<p>&quot;(and configuration files&quot;</p>
<p>Which are easily scriptable, easily transportable, and easily editable with simple tooling.</p>
<p>&quot;and outdated GUI architecture)&quot;</p>
<p>Which has done better remote access than Windows for coming up on 20 years now. Complaining about X Windows when the dominant function of most all windows systems these days is as a bitmap transport seems pretty pointless.</p>
<p>&quot;In fact the only place Linux ditches compatibility is for binary executables. &quot;</p>
<p>That&#8217;s the side effect of a culture that has historically values openness, availabilty of source code and other information, and personal responsibility rather than corporate dominance.</p>
<p>With Linux, I know I can theoretically understand and fix what&#8217;s going on in my computer. With closed source, it&#8217;s just the opposite: I _have_ to rely on Microsoft/etc., who historically (and correctly) operates in its shareholder&#8217;s interests. If I ever end up in a place where my interests diverge from Microsoft&#8217;s and I depend on their software, then oh well&#8230; too bad for me: there&#8217;s nothing _I_ can do, short of switching and hoping it doesn&#8217;t happen again.</p>
<p>&quot;If Linux is technically superior it would have the market by now (ten years after widespread distribution). &quot;</p>
<p>The history of this industry is littered with the shells of companies that had technically superior products that got steamrollered by the competition. </p>
<p>It&#8217;s not technical superiority that makes the decision, it&#8217;s: can I get done what I need to get done. Since that&#8217;s very much tied to things like file formats and software compatibility, the obstacles to Linux adoption shouldn&#8217;t be underestimated by folks on either side of the fence. It will take a long time, if it ever happens, and to say that since it hasn&#8217;t happened yet, it won&#8217;t happen at all is to fundamentally misunderstand the motivations behind such a possible shift in consumer demand.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-220233">
				<div id="div-comment-220233" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://home.arcor.de/skanthak/' rel='external nofollow' class='url'>Stefan Kanthak</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041020-00/?p=37523#comment-220233">
			October 21, 2004 at 10:02 pm</a>		</div>

		<p>&quot;Matt&quot; (who?) wrote:</p>
<p>&gt; Spaces and long filenames<br />
<br />&gt; shouldn&#8217;t have been an issue<br />
<br />&gt; (outside of DOS/Win16/Win32<br />
<br />&gt; [k?/s?/whatever?]) in 1995 let<br />
<br />&gt; alone in 2004. MS has gone a fair<br />
<br />&gt; way to making that so. Linux has<br />
<br />&gt; not despite its proponents claims<br />
<br />&gt; of technical superiority and<br />
<br />&gt; superior adapatability.</p>
<p>Take a look at the registry of any W2K/WXP and count the entries with ~1. Pretty, ain&#8217;t it?</p>
<p>Install W2K/WXP on an NTFS partition and turn off 8.3 filename creation VERY early (edit the SETUPREG.HIV and/or the HIVESYS.INF), then watch how for example MS Office 2000 and later bump over filenames with spaces!</p>
<p>Write a (complex) batch script that can handle long filenames with spaces on it&#8217;s input and pass them through some levels of FOR &#8230;, CALL :SUB to programs.<br />
<br />Now do the same thing on an even ancient XENIX (MS once had this :-)!</p>
<p>It&#8217;s sad, so sad!</p>
<p>Then look a bit further: Windows NT has such nice things like REG_EXPAND_SZ.<br />
<br />How many apps but still write those damned driver letters to their registry entries, or use C:Program Files resp. C:WINNT instead of %ProgramFiles% resp. %SystemRoot%?</p>
<p>Take a look at MSKB 249321 and 269049: both errors are SIMPLY avoidable by using %SystemRoot%&#8230;<br />
<br />But don&#8217;t try this with WXP: they broke it deliberately here for just THIS entry. In NT4 and W2K it worked flawlessly.</p>
<p>And for sure you&#8217;ll even find all the lurking security flaws in<br />
<br />[HKEY_LOCAL_MACHINESOFTWAREClassesChannelFileShellSubscribeCommand]<br />
<br />@=&quot;rundll32 cdfview.dll,Subscribe %L&quot;</p>
<p>I might get depressive if I&#8217;ll write more &#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-220263">
				<div id="div-comment-220263" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.bigbeardy.co.uk' rel='external nofollow' class='url'>Mat Hall</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041020-00/?p=37523#comment-220263">
			October 22, 2004 at 12:42 am</a>		</div>

		<p>&quot;If Linux is technically superior it would have the market by now&#8230;&quot;</p>
<p>Like the way that the technically superior Mac/Amiga captured the market from the PC back in the 80s?  Don&#8217;t be so naive &#8212; market saturation and brand awareness are very difficult to overcome.</p>
<p>The whole short file name thing winds me up.  It&#8217;s been nearly 10 years since Win95 appeared so I find it hard to believe that anyone&#8217;s still using applications that don&#8217;t cope with long file names; Win 95 should have ONLY supported them for legacy (Win 3.x/DOS) apps, and then we could have probably done away with them altogether by now!</p>
<p>And as for &quot;Program Files&quot; vs &quot;/bin&quot;, I much prefer the latter.  On my XP install I tend not to use the Program Files folder for anything if I can avoid it.  I have D:Games, D:Apps and E:Dev, and life is so much simpler!</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-220213">
				<div id="div-comment-220213" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Matt</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041020-00/?p=37523#comment-220213">
			October 21, 2004 at 9:53 pm</a>		</div>

		<p>&quot;Sure, right. It makes _so_ much sense to look for include files under &quot;/Program Files/Microsoft Visual Studio 2003/vc7/PlatformSDK/include&quot; than &quot;/usr/include&quot;. &quot;<br />
<br />Keep on making OS/Filesystem choices based on developer need. As I said earlier, in 5 years time you&#8217;ll still be wondering why 97% of computer users won&#8217;t touch your OS with a bargepole.<br />
<br />&quot;Directory names that take a whole 10 minutes to figure out&quot;<br />
<br />That could take 10 seconds to work out if they were given meaningful names. Why should I spend 10 minutes reading a man page to work out what a folder is when the developer could have made it perfectly obvious by using a long meaningful filename? If you want average users to use your OS, give the bloody folders names understandable to average people.<br />
<br />&quot;[&quot;and configuration files&quot;] Which are easily scriptable, easily transportable, and easily editable with simple tooling. &quot;<br />
<br />They&#8217;re not easily scriptable because there&#8217;s no consistency in format. You have to make a custom script for a file with different syntax even if the task you need to perform is conceptually similar. That&#8217;s called duplication of effort not ease of scripting.<br />
<br />&quot;Which has done better remote access than Windows for coming up on 20 years now. Complaining about X Windows when the dominant function of most all windows systems these days is as a bitmap transport seems pretty pointless. &quot;<br />
<br />You&#8217;d be hard pressed to argue X is better than RDP. Windows has caught up with remote access. X hasn&#8217;t caught up in architecture. It&#8217;s kludge upon kludge upon kludge. OSS advocates like to point to kludges in Windows as flaws. It&#8217;s right for the other side to point to the same in X. It&#8217;s hardly an example of the technically superior approach that OSS fans say it has.<br />
<br />&quot;With Linux, I know I can theoretically understand and fix what&#8217;s going on in my computer. &quot;<br />
<br />Fine for you. Most of us don&#8217;t have the time or skills to write bugfixes for our OS. It&#8217;s another case of a stupid compromise. When a compromise is needed for an OS you want to become mainstream, the compromise will almost always fall in favour of the user. Certain compromises in Linux fall in favour of the developer at the expense of the user.<br />
<br />&quot;The history of this industry is littered with the shells of companies that had technically superior products that got steamrollered by the competition.&quot;<br />
<br />You&#8217;d be hard pressed to find the decaying shell of a technically superior product that was being *given away*.<br />
<br />&quot;Since that&#8217;s very much tied to things like file formats and software compatibility, the obstacles to Linux adoption shouldn&#8217;t be underestimated by folks on either side of the fence&quot;<br />
<br />You can&#8217;t have it both ways. You can&#8217;t claim that Linux (with OSS apps) is superior and does everything 90% of people need, that OpenOffice does everything that 90% of people need and opens most files that people need to migrate, and then bitch about obstacles. Linux isn&#8217;t ready. The fact that its market penetration doesn&#8217;t approach one tenth of what it&#8217;s advocates say it could be is a very significant sign of some fundamental problem.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-220283">
				<div id="div-comment-220283" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Matt</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041020-00/?p=37523#comment-220283">
			October 22, 2004 at 6:06 am</a>		</div>

		<p>They weren&#8217;t giving Macs and Amigas away for free. We&#8217;ll never know for sure but I reckon there wouldn&#8217;t be a PC compatible now if they had. I don&#8217;t even accept they were superior. In the early to mid 90s PC had assimilated the best technologies of both and was evolving rapidly. On the other hand Macs and Amigas seemed comparatively stagnant. (eg the A1200 was an improvement of an older design. It did not incorporate any major new features. More bitplanes, faster processor, prettier icons. Nothing astoundingly innovative though)<br />
<br />You might prefer /bin. You&#8217;re a geek and you&#8217;re familiar with it. It just doesn&#8217;t make sense for average users. And there&#8217;s no good technical reason that you can&#8217;t use long filenames and even spaces to come up with something that is obvious and meaningful to average users. The filesystem limitations that led to those obscure names were overcome a decade or more ago. Operating systems should start taking advantage of those features.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-220293">
				<div id="div-comment-220293" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">mschaef</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041020-00/?p=37523#comment-220293">
			October 22, 2004 at 6:19 am</a>		</div>

		<p>&quot;You might prefer /bin. You&#8217;re a geek and you&#8217;re familiar with it. It just doesn&#8217;t make sense for average users.&quot;</p>
<p>You still haven&#8217;t bothered to explain why average users should be looking in /bin (or &quot;Program Files&quot; anyway.  What exactly is a user naive enough to be confused by &quot;/bin&quot; doing spelunking around in a directory full of binary files anyway? Windows Explorer even defaults to displaying a warning about not messing around with the files in &quot;Program Files&quot; unless you know what you&#8217;re doing. To me, the need to post a &quot;No Trespassing&quot; sign explicitly speaks to the uselessness of the &quot;user friendly&quot; directory name.<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-220323">
				<div id="div-comment-220323" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">mschaef</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041020-00/?p=37523#comment-220323">
			October 22, 2004 at 6:50 am</a>		</div>

		<p>&quot;Keep on making OS/Filesystem choices based on developer need. &quot;</p>
<p>I&#8217;m not, I&#8217;m just being pragmatic about what actually matters to end users. The name of the /bin directory is not one of those things, assuming a good package manager/installer and reasonable locations for data and configuration files.</p>
<p>&quot;That could take 10 seconds to work out if they were given meaningful names. Why should I spend 10 minutes reading a man page to work out what a folder is when the developer could have made it perfectly obvious by using a long meaningful filename? &quot;</p>
<p>Because I&#8217;ll learn the name <em>one</em> time, type it thousands, and use it in scripts/batch files dozens. A couple minutes ahead of time to save time and increase accuracy every time I use it seems like a excellent trade off.</p>
<p>&quot;You have to make a custom script for a file with different syntax even if the task you need to perform is conceptually similar. That&#8217;s called duplication of effort not ease of scripting. &quot;</p>
<p>You have to do the same thing with the registry.  SUre, you have consistent access to keys, but given that the keys are used in radically different ways for various kinds of configuration tasks, you still have to worry about custom logic for each case. </p>
<p>Unix-style scripts generally allow comments (to document hidden values or the rationale behind choices), which the registry does not.</p>
<p>Not to mention that there&#8217;s just as much black magic in knowing particular registry key names (some of which are hidden) as configuration file syntaxes.</p>
<p>&quot;Fine for you. Most of us don&#8217;t have the time or skills to write bugfixes for our OS. &quot;</p>
<p>To be honest, I don&#8217;t either.</p>
<p>But&#8230; if Microsoft fails to update a bug in Windows that&#8217;s critical to my business, I&#8217;m screwed. With OSS, it&#8217;s at least possible to look at the cost/benefits myself and hire someone to fix it (or fix it myself). In enterprise settings, where computers are sitting on hundreds of thousands of desktops or moving billions of dollars around, the ability to have that level of control over one&#8217;s destiny is very valuable in and of itself. For smaller businesses, with less ability to influence MS&#8217;s priorities, it can be even more important.</p>
<p>Speaking to my own interests: with Linux I can know for an absolute fact what my computer is doing. Not true with Microsoft: users and developers are reduced to running experiments and making guesses about how it works from what happens.</p>
<p>&quot;and then bitch about obstacles.&quot;</p>
<p>I&#8217;m not bitching about them, I&#8217;m just stating a fact. </p>
<p>Legal challenges aside, OSS is about the one entity in the software business with more staying power than Microsoft, even if it fails to gain mass market adoption.  In that sense, it&#8217;s not a competitor that MS can out-sell, cut off its air supply, and dispatch to the graveyard.  The truth is that the technical issues we&#8217;re discussing don&#8217;t matter worth a hill of beans: they can be fixed. The issues that do matter are all cultural: OSS represents a completely different approach to software development than Microsoft&#8217;s [1]. That&#8217;s how OSS will ultimately be weighed and measured.</p>
<p>1] I call it Microsoft&#8217;s, since they pioneered for-sale software in the Microcomputer market, dating back to Bill Gates&#8217; memo to the Altair hobbyists in the mid 70&#8217;s</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-220333">
				<div id="div-comment-220333" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.bigbeardy.co.uk' rel='external nofollow' class='url'>Mat Hall</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041020-00/?p=37523#comment-220333">
			October 22, 2004 at 6:56 am</a>		</div>

		<p>&quot;&#8230;the need to post a &quot;No Trespassing&quot; sign explicitly speaks to the uselessness of the &quot;user friendly&quot; directory name.&quot;</p>
<p>Exactly.  If you&#8217;re going to warn &quot;regular&quot; users of the perils of playing about with things of which they do not wot, then who cares if it&#8217;s called &quot;/bin&quot;, &quot;Program Files&quot;, or &quot;{CLSID-00EF-783743-746785}&quot;?  For people who do want to mess with it it&#8217;s a non-issue, and giving it a short space-free name makes life easier&#8230;</p>
<p>It all gets a bit OT from here on in, sorry.  However, I was an Amiga zealot until the mid 90s, and I still feel the pain.</p>
<p>&quot;They weren&#8217;t giving Macs and Amigas away for free. We&#8217;ll never know for sure but I reckon there wouldn&#8217;t be a PC compatible now if they had. I don&#8217;t even accept they were superior. In the early to mid 90s PC had assimilated the best technologies of both and was evolving rapidly.&quot;</p>
<p>When did they give away free ATs?  And sure, in the early 90s the PC started outstripping the Mac/Amiga in hardware terms, but only a fool would claim Win 2.x/3.x were &quot;superior&quot; to Workbench 2/AmigaOS.  The outstripping only happened because given the choice between an Amiga (&quot;Didn&#8217;t they make the C64?&quot;) or a PC (&quot;Ooh, we have an IBM at work!&quot;) the inferior machine won in terms of numbers purely down to the public&#8217;s lack of understanding.  Had the PC not carried the IBM branding for years it would never have got off the ground.</p>
<p>It&#8217;s a sad indictment of the power of branding, but a machine with 512k of RAM (expandable up to 8Mb), a multitasking OS and GUI, graphics capabilities that made CGA look like an Etch-a-Sketch™, and real digital stereo sound lost to a machine with (typically) 64k of RAM (up to a max of 640k &#8212; a crippled address space and no Quarterdeck EMM or DOS/4GW in those days), a command line single-tasking OS, the ability to display 4 (count them, 4!) colours at once (if you paid extra, otherwise text only), and a hideous beeping noise, and you claim that technical superiority will win?  Fatuous nonsense!</p>
<p>Bill Gates once said that MS Word would be ported to the Amiga when it had sold a million units, but it never materialised.  (It&#8217;s estimated that until the demise of CBM over around 5 million of them were sold, with 1.5m in the UK alone.)  With support like that, how could it hope to survive?  Cluelessness amongst the public combined with powerful branding (inevitably leading to a virtual monopoly for MS) meant that there could only be one winner; once it became the defacto standard other systems had no hope but to become a niche platform&#8230;</p>
<p>Right, that&#8217;s that settled.  Next, why the Spectrum (aka Timex 2000) was the greatest computer ever&#8230; :)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-220453">
				<div id="div-comment-220453" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Matt</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041020-00/?p=37523#comment-220453">
			October 22, 2004 at 6:25 pm</a>		</div>

		<p>You were indeed an Amiga zealot. It was a good machine but by the early 90s the PC had virtually caught up and in some ways surpassed it (processor performance in particular). By the mid 90s it had entirely caught up with Win95 or WinNT.<br />
<br />They weren&#8217;t giving away free ATs. But a previous commenter used Macs and Amigas as an analogy for Linux that they most certainly are giving away for free. Free stuff tends to beat market dominance or brand recognition. A real example is IE&#8217;s slow but steady victory over Netscape (before OS integration so don&#8217;t even bother moaning about that). Linux hasn&#8217;t made the same gains and there&#8217;s absolutely no excuse for that. There has to be some other problem. I maintain that&#8217;s the choice of obscure approaches that place developer needs over user needs. Short names for the include directories, binary incompatibility, horrible packaging, nasty inconsistent configuration files are all symptoms.<br />
<br />And the Amiga might be around now if CBM had not neglected it. One major upgrade to the chipset in 7 or 8 years is not enough to keep in front. No wonder the PC caught up.<br />
<br />The Word argument is BS too. For most of the Amiga&#8217;s lifetime there simply wasn&#8217;t a GUI form of Word (or WordPerfect.) If developers on the Amiga had shown some initiative they might have had a decent GUI word processor before the PC. As it was they left it too late and were playing catch up with Word after that.<br />
<br />The reasons for the Amiga&#8217;s demise isn&#8217;t the fault of a stupid market that went for brand recognition over technical superiority. It&#8217;s the fault of those who neglected it over nearly a decade, trying to sell the same machine in 1991/2 as they were in 1985. They gave the PC a chance to catch up and it took advantage of it.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-220483">
				<div id="div-comment-220483" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.foxyshadis.com' rel='external nofollow' class='url'>foxyshadis</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041020-00/?p=37523#comment-220483">
			October 22, 2004 at 11:57 pm</a>		</div>

		<p>Not just the Amiga enthusiasts and developers, but Commodore itself basically killed it. It&#8217;d be like IBM &amp; Intel putting out the PC, the XT, and the AT with almost no marketing, and then going bankrupt and shutting its PC division down (with no compaq or HP), leaving third-party vendors scrambling and leaving, and finally being given 386s sometime in the mid-90&#8217;s. Meanwhile DEC and clones has been marketing faster, more colorful, more capacitous, more connected computers every 6-12 months with extensive 3rd party support for a decade now.</p>
<p>Who&#8217;s going to look more attractive to customers?</p>
<p>You need to interoperate (nearly) seamlessly with anything the customer already uses. You need to package a full suite that does everything the customer could have done with another system, but better and more productively and even prettier. You need to <em>market the hell out of it</em>. (And not just on slashdot and blogs.) And make it almost too easy to make really cool stuff, like media players and finance reports, with python, the closest thing to a VB for linux.</p>
<p>Of course, do it the MS way &#8211; support exchange just dandy, but support some sendmail derivative&#8217;s unique powerful <em>easy-to-use</em> productivity features like crazy. And integrate it all &#8211; major apps built on mozilla, like explorer and html help are built on IE. You can whine about cheating, or join the big leagues who understand the needs and wants of customers. And sue a few people so you&#8217;ll stay in the news and look serious about it. xD</p>
<p>Just saying you do things better doesn&#8217;t mean squat, because you only do a few important things better (network security), but a few important things worse (file security, openoffice really needs a UI redesign, and linux as a whole desperately needs a new real GUI to rally behind), and don&#8217;t do a few important things at all (for all your love of conf files, and hate of the registry and AD, those two pieces of windows are the two most important components of centralized MS management. And I refuse to believe that linux couldn&#8217;t improve on them immensely if it tried. Built-in management and reporting tools are linux&#8217;s achilles heel).</p>
<p>Enough ranting for one night.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-220523">
				<div id="div-comment-220523" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://weblogs.asp.net/oldnewthing/' rel='external nofollow' class='url'>Raymond Chen</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041020-00/?p=37523#comment-220523">
			October 23, 2004 at 5:32 pm</a>		</div>

		<p>&quot;Win 95 should have ONLY supported them for legacy (Win 3.x/DOS) apps&#8230;&quot;</p>
<p>But Windows 95 needed to be compatible with Windows NT, which did support SFNs for 32-bit apps.</p>
<p>The problem with saying &quot;32-bit apps cannot see SFNs&quot; is that you create interop problems at the boundaries. A 16-bit app launches &quot;notepad SHORTN~1.TXT&quot; and Notepad (a 32-bit app) puts up the error message &quot;File not found&quot;.</p>
<p>DrPizza: If you shim litware.exe&#8217;s command line parser then you risk breaking cases where litware expects to receive a long name by means other than the file system association. Perhaps litware didn&#8217;t mind, but this change was made during a service pack which has much shorter testing cycles.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-220563">
				<div id="div-comment-220563" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Norman Diamond</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041020-00/?p=37523#comment-220563">
			October 24, 2004 at 8:57 pm</a>		</div>

		<p>10/20/2004 11:02 PM Raymond Chen </p>
<p>&gt;&gt; &quot;Does Windows Explorer support long<br />
<br />&gt;&gt; filenames?&quot;<br />
<br />&gt;<br />
<br />&gt; I&#8217;m sure this is some sort of trick<br />
<br />&gt; question. </p>
<p>You&#8217;re right.  I had intended it as simple acrimony rather than trickery, but after thinking about it, you&#8217;re right that it does require trickery to interpret it.</p>
<p>The literal answer is sometimes yes and sometimes no, but the literal answer provides no useful information.</p>
<p>The trickery involves thinking about what caused the question to arise in the first place, and why the answer isn&#8217;t a consistent yes.</p>
<p>The full answer requires observing one of the ways a user might use Windows Explorer, in this case making backups onto a USB hard drive.  In Windows 2000, and I think 98 and ME, when a USB hard drive is attached, Windows Explorer recognizes the added drive and can write long filenames to it.  In Windows XP this was broken until SP2, now SP2 can write long filenames to it.  In Windows Server 2003 it remains broken either with or without SP1 beta build 1218.  In broken versions of XP and 2003, you can even look at long filenames already existing on the USB hard drive, try to cut from one directory and paste into a different directory, and watch Windows Explorer say that it can&#8217;t write long filenames and offer a truncated 8.3 filename.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-220573">
				<div id="div-comment-220573" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://weblogs.asp.net/oldnewthing/' rel='external nofollow' class='url'>Raymond Chen</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041020-00/?p=37523#comment-220573">
			October 24, 2004 at 9:04 pm</a>		</div>

		<p>Sounds like an issue with the filesystem then. Explorer uses the GetVolumeInformation function to determine whether a drive supports long file names. If the maximum component length is 12 (8+dot+3), then Explorer says &quot;Sorry, this is not an LFN drive.&quot; </p>
<p>Explorer is the victim here.</p>
<p>PS, could you tone down the nastiness? You could have said, &quot;Sometimes Explorer thinks my USB drive doesn&#8217;t support long file names&quot; instead of saying &quot;Explorer doesn&#8217;t support long file names, that piece of crap&quot;.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-220743">
				<div id="div-comment-220743" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">DrPizza</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041020-00/?p=37523#comment-220743">
			October 25, 2004 at 9:51 am</a>		</div>

		<p>&quot;In Windows Server 2003 it remains broken either with or without SP1 beta build 1218. &quot;<br />
<br />News to me.</p>
<p>I have LFNs aplenty on my FAT USB hard drives.</p>
<p>What the hell are you talking about?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-220863">
				<div id="div-comment-220863" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Norman Diamond</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041020-00/?p=37523#comment-220863">
			October 25, 2004 at 5:58 pm</a>		</div>

		<p>10/24/2004 9:04 PM Raymond Chen </p>
<p>&gt; Sounds like an issue with the filesystem<br />
<br />&gt; then. Explorer uses the GetVolumeInformation<br />
<br />&gt; function to determine whether a drive<br />
<br />&gt; supports long file names.</p>
<p>Does GetVolumeInformation change its answer from one call to the next?  Does it change its answer depending on which process id has called it?  Different instances of Windows Explorer don&#8217;t always agree on whether a long file name can&#8217;t be moved from one folder to another, they only sometimes agree on it.</p>
<p>10/25/2004 9:51 AM DrPizza</p>
<p>&gt; I have LFNs aplenty on my FAT USB hard<br />
<br />&gt; drives.</p>
<p>So do I.  Windows 2000 can write them, Windows XP SP2 can write them, and depending on factors yet unknown, Windows XP prior to SP2 and Windows Server 2003 can sometimes write them.  As mentioned, some of the occasions when Windows Explorer denies ability to write them and offers to truncate them to 8.3 filenames are when doing cut-and-paste from one folder to another on the same drive, so I assure you I&#8217;ve got them there.</p>
<p>There&#8217;s a bit too much randomness involved in the unknown factor(s), but here&#8217;s a combination that reproduces it somewhat comparatively reliably (in XP pre-SP2 and in 2003).  After booting and logging in, open a Windows Explorer window, unfold &quot;my computer&quot; and go to some directory on your internal drive where perhaps you have a file that you want to make a backup of, and keep the window open.  Attach a USB hard drive that is &quot;self-powered&quot; (i.e. needing its own AC adapter, being powered by its own adapter instead of from the PC&#8217;s USB circuitry).  Sometimes an icon doesn&#8217;t appear at all in the left-hand pane of Windows Explorer but you can type the drive letter and a colon into the address bar and Windows Explorer will move its view to it.  Sometimes a drive icon does appear so you can just click it and Windows Explorer will move the way it should.  You can see your exsiting LFNs.  But when you try copying or moving an LFN to the drive (either from your internal drive or from a different folder on the same external drive), Windows Explorer refuses.</p>
<p>If you open Computer Management, go to Disk Management, right-click the partition displayed for the external drive, and select &quot;explore&quot;, then a new Windows Explorer window opens that sees the external drive.  That Explorer window is usually pretty reliable &#8212; until you click the Refresh button for whatever reason.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-220873">
				<div id="div-comment-220873" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Michael</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041020-00/?p=37523#comment-220873">
			October 25, 2004 at 6:22 pm</a>		</div>

		<p>&quot;If Linux is technically superior it would have the market by now (ten years after widespread distribution). &quot;</p>
<p>If people were not brainwashed morons, they would not buy bottled water thinking that they are getting cleaner and more pure water than from the tap. Ever played Lemmings?</p>
<p>About SystemRoot, etc. You guys should not forget that english is not the only language Windows supports. There are quite a few Windows versions which use different names for Program Files even in Latin charset. There are other charsets too. For example, the encoding for russian DOS and russian Windows is different. I don&#8217;t know about NT/Win2K, but in Win3.x/9x short filenames are stored in cp866 on disk to support DOS programs, and converted to codepage 1251 when &quot;Open File&quot; dialog is opened by Windows program. LFN are encoded in Unicode, so using LFN is kind of more uniform. I think there is no conversion to open a file with LFN. And be sure, that Program Files not only has a different name in russian Windows, it is also spelled in cyrillic.</p>
<p>I think Raymond can tell more fun things about codepage conversions.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-221273">
				<div id="div-comment-221273" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">David Candy</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041020-00/?p=37523#comment-221273">
			October 27, 2004 at 3:34 pm</a>		</div>

		<blockquote><p>
  Observe that the spaces in the path &quot;C:Program FilesLitware Deluxelitware.exe&quot; are not quoted in the program registration. Consequently, the shell mistakenly believes that the program name is &quot;C:Program&quot;, which it cannot find. The shell therefore plays it safe and assumes no LFN support. </p>
<p>I was going to ask this last week &#8211; how can the shell find the program to pass it a short file name then?</p>
<p>I just paraphrase what I think was said</p>
<p>If the shell can&#8217;t find the program file it passes a short name to the program (that it can&#8217;t find) and everything works. As Pauline Hanson would say &quot;Please Explain&quot;.
</p></blockquote>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-221293">
				<div id="div-comment-221293" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://weblogs.asp.net/oldnewthing/' rel='external nofollow' class='url'>Raymond Chen</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041020-00/?p=37523#comment-221293">
			October 27, 2004 at 3:39 pm</a>		</div>

		<p>Because the shell hands the final command line to CreateProcess &#8211; CreateProcess has its own search algorithm.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-221263">
				<div id="div-comment-221263" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">David Candy</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041020-00/?p=37523#comment-221263">
			October 27, 2004 at 3:27 pm</a>		</div>

		<p>Chris Becke,</p>
<p>This is a list from <a target="_new" href="http://users.lia.net/chris/win32/explorer.asp" rel="nofollow">http://users.lia.net/chris/win32/explorer.asp</a></p>
<p>Some look to be cmd specific (such as %~n1 which extracts the name). So pass it to a bat and </p>
<p>program.exe %~n1</p>
<p>or for path and name</p>
<p>program %~dpn1 (dpn is drive, path, name. x is extension see the help on For)</p>
<p>%h and %s are used mainly in DDE conversation and I&#8217;ve never seen &amp;h used at all. Explorer uses %s to pass the window state of the calling window (eg c:) when opening a sub folder. If you replace it with a showwindow const then all windows become that (eh maximised). IE has quite a few parameters but none seem to be the show state. %I is only used by Explorer and is two numbers (at least if you pass it to a bat file to echo %1) :nnnn:nnnn (in decimal) with the second being the folder and the first the number of the item in the folder. They exist only while the folder is opened. ? is for pif files only.</p>
<p>%h, when creating a window you can assign a hotkey to the window. Presumbably this is for passing hotkeys from window to window. Though I&#8217;ve never see any program use this feature.</p>
<p>Now for that list</p>
<p>%% &#8211; escape sequence for &#8216;%&#8217;<br />
<br />%0 &#8211; the thing being clicked (or dropped upon)<br />
<br />%1 &#8211; represents the name of the item being clicked (or dropped upon).<br />
<br />%2 &#8211; 1st file &quot;dropped&quot; onto item. (in case of files being dropped).<br />
<br />%3 &#8211; 2nd file &quot;dropped&quot; onto item. etc&#8230;<br />
<br />%* &#8211; all the dropped items.<br />
<br />%L &#8211; same as %1 (unconditional lfn form?)<br />
<br />%I &#8211; generates a global itemid of the form &quot;:-2109146316&quot; (folders only?)<br />
<br />? &#8211; Will prompt the user for the commandline to supply</p>
<p>I don&#8217;t know what these do, but they do something:</p>
<p>%L = document name<br />
<br />%0 = short version of document name (sometimes)<br />
<br />%1 = same as %0<br />
<br />%2 = parameter 1<br />
<br />%9 = parameter 8<br />
<br />%~2 = parameter 1 onwards<br />
<br />%~9 = parameter 8 onwards<br />
<br />%* = all parameters (i.e. same as %~2)<br />
<br />%H = hotkey in hex. can only be used once<br />
<br />%I = pidl (different format depending on OS)<br />
<br />%S = initial Show format in decimal</p>
<p>AND RAYMOND ANSWERED ONE OF MY QUESTIONS !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! (and he says my questions aren&#8217;t interesting to anyone but this got 60 responses, most mini essays).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-221353">
				<div id="div-comment-221353" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">David Candy</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041020-00/?p=37523#comment-221353">
			October 28, 2004 at 12:44 am</a>		</div>

		<p>So that&#8217;s why AppPath entries are ignored in Registry command strings.</p>
<p>HKLM&#8230;AppPaths<br />
<br />prog.exe=c:somewhereprog.exe</p>
<p>HKCR.extshellopencommand<br />
<br />@=prog %1</p>
<p>won&#8217;t work.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-221903">
				<div id="div-comment-221903" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Matt</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041020-00/?p=37523#comment-221903">
			October 30, 2004 at 7:31 am</a>		</div>

		<p>&quot;&quot;&quot;<br />
<br />&quot;If Linux is technically superior it would have the market by now (ten years after widespread distribution). &quot;<br />
<br />If people were not brainwashed morons, they would not buy bottled water thinking that they are getting cleaner and more pure water than from the tap. Ever played Lemmings?<br />
<br />&quot;&quot;&quot;<br />
<br />Lovely. People are using Windows over Linux because they are brainwashed morons.<br />
<br />Again (and again and again and again) that&#8217;s the attitude that keeps people away from Linux.<br />
<br />Run Windows? Moron! Can&#8217;t get modem/video/network card to work under Linux? Moron! Can&#8217;t recompile kernel to support obscure feature for funny application? Moron! Don&#8217;t know the ins and outs of Unix filesystems and partitioning? Moron! Don&#8217;t understand three letter directory names? Moron!<br />
<br />And you people will still be surprised in 5 years time when the market share of Linux is no better than it is today!</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-221923">
				<div id="div-comment-221923" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://home.arcor.de/skanthak/' rel='external nofollow' class='url'>Stefan Kanthak</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041020-00/?p=37523#comment-221923">
			October 30, 2004 at 7:22 pm</a>		</div>

		<p>Raymond Chen wrote:</p>
<p>&gt; Because the shell hands the final<br />
<br />&gt; command line to CreateProcess &#8211;<br />
<br />&gt; CreateProcess has its own search<br />
<br />&gt; algorithm. </p>
<p>Hmmm&#8230; does this mean:<br />
<br />a) the shell does no search at all?<br />
<br />b) has another search algorithm than CreateProcess()? Which?<br />
<br />Can you say how simple/relative  filenames are handled/interpreted?<br />
<br />a) relative to the CWD?<br />
<br />b) &#8230;.?</p>
<p>Can you say a word or two why filenames in the registry are<br />
<br />a) not always fully qualified?<br />
<br />b) not always specified fully qualified as REG_EXPAND_SZ?<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-221953">
				<div id="div-comment-221953" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://weblogs.asp.net/oldnewthing/' rel='external nofollow' class='url'>Raymond Chen</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041020-00/?p=37523#comment-221953">
			October 30, 2004 at 9:17 pm</a>		</div>

		<p>(b) the shell implements its own search algorithm. Just fully quality (and quote) your paths and the precise algorithm becomes irrelevant.</p>
<p>Why aren&#8217;t file names in the registry fully qualified/REG_EXPAND_SZ? You&#8217;ll have to ask the programs who wrote those registry keys.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-221993">
				<div id="div-comment-221993" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Stefan Kanthak</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041020-00/?p=37523#comment-221993">
			October 31, 2004 at 6:46 pm</a>		</div>

		<p>Hi Raymond,</p>
<p>you wrote:</p>
<p>&gt; (b) the shell implements its own<br />
<br />&gt; search algorithm. Just fully<br />
<br />&gt; quality (and quote) your paths and<br />
<br />&gt; the precise algorithm becomes irrelevant. </p>
<p>I always specify my entries with fully qualified and quoted path and use REG_EXPAND_SZ whereever possible, but Windows&#8217; shell itself doesn&#8217;t: I count 2 references to explorer (yuck, even without extension) and 8 to explorer.exe in the registry of Windows 2000. rundll32 has 8 references without path and extension and about 20 without path. And both explorer.exe and rundll32.exe are not the only programs referenced without path!</p>
<p>I count NUMEROUS references to ole32.dll, shell32.dll, shdocvw.dll  and other dll&#8217;s, ocx&#8217;s, &#8230; without path in registry entries for &quot;InProcHandler32&quot;, &quot;LocalServer&quot;, &quot;LocalServer32&quot; and &quot;InProcServer32&quot; and I don&#8217;t feel comfortable about it knowing that PATH always includes . at first component: as long as SafeDLLSearchMode ain&#8217;t set (before Windows 2003!) this invites for exploits!<br />
<br />Cf. 249321 and 269049</p>
<p>That&#8217;s what scares/bothers me!<br />
<br />&quot;trustworthy computing&quot; anyone?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-222003">
				<div id="div-comment-222003" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://weblogs.asp.net/oldnewthing/' rel='external nofollow' class='url'>Raymond Chen</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041020-00/?p=37523#comment-222003">
			October 31, 2004 at 10:47 pm</a>		</div>

		<p>The fashion for fully-qualifying paths for files that normally reside in the system32 directory has gone through its own cycles. For a while, using a relative path was recommended to allow for side-by-side application overrides. I don&#8217;t know whether that&#8217;s still the fashion or not.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-222173">
				<div id="div-comment-222173" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">David Candy</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041020-00/?p=37523#comment-222173">
			November 1, 2004 at 1:11 pm</a>		</div>

		<p>The shell algorithm is good to know for diagnosing problems with systems and file associations.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-222283">
				<div id="div-comment-222283" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Chris Becke</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041020-00/?p=37523#comment-222283">
			November 1, 2004 at 11:59 pm</a>		</div>

		<p>Ha. Thats ironic. Having my own (ancient) web page thrown back at me :)</p>
<p>As always, I desire official sources of information I&#8230; really don&#8217;t know how I got.</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>