<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (11)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-1064403">
				<div id="div-comment-1064403" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Bobo</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130701-00/?p=3943#comment-1064403">
			July 1, 2013 at 7:38 am</a>		</div>

		<p>Fixmes:</p>
<p>1. TimerProc ahould be InvalidateMe</p>
<p>2. Circle shakes around while dragging (drag window in s wide circle)</p>
<div class="post">[<em>#1 is fixed, thanks. The circle also flickers a lot. Fixing these glitches I leave as an exercise. My goal was to get the general effect because it sounded fun. -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1064433">
				<div id="div-comment-1064433" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blogs.msdn.com/wswiktor_4000_poczta.fm/ProfileUrlRedirect.ashx' rel='external nofollow' class='url'>wswiktor@poczta.fm</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130701-00/?p=3943#comment-1064433">
			July 1, 2013 at 8:11 am</a>		</div>

		<p>Exercise: rewrite the program so it uses Windows Animation Manager.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1064443">
				<div id="div-comment-1064443" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">James</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130701-00/?p=3943#comment-1064443">
			July 1, 2013 at 8:35 am</a>		</div>

		<p>@Azarien: ew! That is cheating.</p>
<p>It can be done without going there. If you got the knowledge that is.</p>
<p>Hint: Games do it.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1064513">
				<div id="div-comment-1064513" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blogs.msdn.com/passport_4000_gentlyusedunderwear.com/ProfileUrlRedirect.ashx' rel='external nofollow' class='url'>passport@gentlyusedunderwear.com</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130701-00/?p=3943#comment-1064513">
			July 1, 2013 at 1:04 pm</a>		</div>

		<p>I wonder why this was written in C++ when it doesn&#39;t use any C++ features? (using a class a simple struct is not &quot;using C++ features&quot;)</p>
<div class="post">[<em>If &quot;struct with methods&quot; is not a C++ feature, and it&#39;s not a C feature, then what is it? (I was not aware of the rule that says &quot;You are not allowed to use any C++ features unless you use all of them.&quot; I can&#39;t find it in my copy of the C++11 standard.) -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1064523">
				<div id="div-comment-1064523" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blogs.msdn.com/passport_4000_gentlyusedunderwear.com/ProfileUrlRedirect.ashx' rel='external nofollow' class='url'>passport@gentlyusedunderwear.com</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130701-00/?p=3943#comment-1064523">
			July 1, 2013 at 1:05 pm</a>		</div>

		<p>err, Needs editâ€¦ (using a class as a simple struct is not &quot;using C++ features&quot;)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1064543">
				<div id="div-comment-1064543" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">JDP                     </cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130701-00/?p=3943#comment-1064543">
			July 1, 2013 at 2:09 pm</a>		</div>

		<p>Roysna: Probably because it&#39;s working off the scratch program, which was written in C++? I doubt Raymond would start with a whole new program for every sample he does. </p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1064623">
				<div id="div-comment-1064623" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Simon Buchan</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130701-00/?p=3943#comment-1064623">
			July 2, 2013 at 12:50 am</a>		</div>

		<p>Nice impl. on the motion-curve, but I generally prefer the simpler and easier to understand spring simulation method for that effect:</p>
<p>DWORD lastTick;</p>
<p>double target, position, velocity;</p>
<p>bool InMotion() { return !velocity &amp;&amp; position == target; }</p>
<p>void Tick() {</p>
<p>&nbsp; DWORD tick = GetTickCount();</p>
<p>&nbsp; double seconds = (tick &#8211; lastTick);</p>
<p>&nbsp; lastTick = tick;</p>
<p>&nbsp; velocity += (target &#8211; position);</p>
<p>&nbsp; velocity /= DAMPENING; // ~= 2.0 is good</p>
<p>&nbsp; position += (velocity * seconds);</p>
<p>&nbsp; if (abs(velocity) &lt; 1.0 &amp;&amp; abs(position &#8211; target) &lt; 1.0) { // close enough: stop simulating</p>
<p>&nbsp; &nbsp; &nbsp;velocity = 0;</p>
<p>&nbsp; &nbsp; &nbsp;position = target;</p>
<p>&nbsp; }</p>
<p>}</p>
<div class="post">[<em>The downside of this version is that it requires ticks to arrive at relatively high and steady frequency, since it is doing numerical integration. If, for example, the application takes a page fault and gets stuck on I/O for for 2 seconds, the ball will overshoot the target by a wide margin. -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1064633">
				<div id="div-comment-1064633" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Simon Buchan</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130701-00/?p=3943#comment-1064633">
			July 2, 2013 at 2:05 am</a>		</div>

		<p>Some bugfixes: seconds should of course be (tick &#8211; lastTick) / 1000.0;, and InMotion() should be inverted: (velocity || position != target)</p>
<p>Try it with DAMPENING less than 2.0 for a nice overshooting springy effect, or less than 1 to break the universe :) (really it should be velocity /= 1 + DAMPENING;, but that&#39;s no fun)</p>
<p>Note also that the positions this gives you are absolute, you can straight up update the targets at any time to any value and the spring response: I assume the motion curve is doing the int x = g_ptRest.x + &#8230;; because it needed to be in relative to not wig out when moved.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1064643">
				<div id="div-comment-1064643" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Neil</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130701-00/?p=3943#comment-1064643">
			July 2, 2013 at 4:23 am</a>		</div>

		<p>If C had been invented in the UK, would we #include &quot;maths.h&quot; instead?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1064903">
				<div id="div-comment-1064903" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ian Boyd</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130701-00/?p=3943#comment-1064903">
			July 2, 2013 at 1:03 pm</a>		</div>

		<p>When i got my Nexus 4 (i.e. Android) last year, it drove me nuts trying to figure out why &quot;momentum scrolling&quot; didn&#39;t feel as nice as it did on the iPhone. i would flick a little, and it would scroll a little. i would flick a lot, and it would scroll a lot. i couldn&#39;t find anything obviously &quot;wrong&quot;, yet it didn&#39;t &quot;feel&quot; right. Going back to the iPhone; flicking and scrolling, and timing, and counting, i realized what Apple does that is non-obvious, ignores physics, but &quot;feels&quot; better:</p>
<p>Scrolling under it&#39;s own momentum lasts 3 seconds. Always. Whether you just flicked it a little, or you did a massive throw, the momentum scrolling will always take 3 seconds to come to a stop.</p>
<p>You would think that a massive throw should cause the scrolling to last longer, and a little flick should only last a moment. And as a technically minded, computer programmer, who understands physics, you would be right; momentum and friction should lead to exponential speed decay.</p>
<p>Except usability doesn&#39;t care about physics, it cares about what &quot;feels&quot; right. </p>
<p>i&#39;ve forgotten the math, but it turned out the math became much simpler when you decided the exponential decay parameters based on initial velocity and a known 3 second duration. It amounted to a simple multiplication factor each tick.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1065143">
				<div id="div-comment-1065143" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Bart</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130701-00/?p=3943#comment-1065143">
			July 3, 2013 at 7:16 am</a>		</div>

		<p>Resizing will not make the circle jump around but window movement will. I can&#39;t figure out why. Does anyone know why?</p>
<p>Is it how the window position is updated?</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>