<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (32)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-1215971">
				<div id="div-comment-1215971" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20151125-00/?p=92141#comment-1215971">
			November 25, 2015 at 7:14 am</a>		</div>

		<p>The answer this deserves but MS can&#39;t give is &quot;No, this is not a UNIX machine, so don&#39;t expect modern UNIX enhancements.&quot; To be fair, that hasn&#39;t made it reliably into glob() yet.</p>
<div class="post">[<em>Find&shy;First&shy;File is more akin to readdir. And readdir doesn&#39;t support wildcards at all! (Find&shy;First&shy;File supports wildcards for <a href="http://blogs.msdn.com/b/oldnewthing/archive/2007/12/17/6785519.aspx">CP/M compatibility</a>. I suspect that if the designers of Win32 didn&#39;t have to be compatible with CP/M, they wouldn&#39;t have had any wildcard support in the kernel at all.) -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1215961">
				<div id="div-comment-1215961" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Adam Rosenfield</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20151125-00/?p=92141#comment-1215961">
			November 25, 2015 at 7:46 am</a>		</div>

		<p>If you put on your kernel-colored glasses, then it&#39;s clear that FindFirstFile[Ex] can&#39;t be doing anything too fancy. &nbsp;The kernel should do the simplest possible thing it can do, which is to read the directory entries in the order they&#39;re in on disk. &nbsp;The filtering for wildcards is an extra bonus which can easily be done in userspace (though I&#39;m guessing in this case it&#39;s done in kernel space) but does not require any additional I/O overhead, just a bit of extra CPU time.</p>
<p>Conversely, Unix&#39;s glob(3) might potentially have to read a large number of directories if you have a complicated pattern with lots of wildcards. &nbsp;It can be a useful library function, no doubt, but it&#39;s not something that should be built into the KISS system call.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1215951">
				<div id="div-comment-1215951" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Anonymousse au Chocolat</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20151125-00/?p=92141#comment-1215951">
			November 25, 2015 at 7:56 am</a>		</div>

		<p>&quot;For example&quot; is a bit strange here. Either asterisk and question mark are the complete list, then they aren&#39;t &quot;examples&quot;. Or there are other wildcard characters, then where is the reference to the complete list?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1215941">
				<div id="div-comment-1215941" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Jeffrey</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20151125-00/?p=92141#comment-1215941">
			November 25, 2015 at 8:00 am</a>		</div>

		<p>On a semi-related note, powershell has great wildcard support. &nbsp;Want to find filetypes that have a shellnew handler?</p>
<p>PS C:&gt; dir hklm:softwareclasses*shellnew</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1215931">
				<div id="div-comment-1215931" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20151125-00/?p=92141#comment-1215931">
			November 25, 2015 at 8:24 am</a>		</div>

		<p>Did I strike a nerve by mistake? We both know the benefit of leaving it in kernel was to let the wildcard expansion happen on the remote side of the network when operating on a network directory.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1215921">
				<div id="div-comment-1215921" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">ErikF</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20151125-00/?p=92141#comment-1215921">
			November 25, 2015 at 8:52 am</a>		</div>

		<p>@Joshua: Why does every operating system have to be yet another UNIX?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1215911">
				<div id="div-comment-1215911" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Antonio &amp;#39;Grijan&amp;#39;</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20151125-00/?p=92141#comment-1215911">
			November 25, 2015 at 9:08 am</a>		</div>

		<p>@Joshua: if you agree that leaving it in kernel mode has benefits, then you should understand that it should be kept as simple as possible, as services provided by the kernel should be (for reliability and performance reasons). If you want to provide fancy filtering, sorting, or directory recursion, do it where Unix does: in a user mode library function (which is what glob() is). It&#39;s the KISS principle.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-scott-brickey odd alt thread-odd thread-alt depth-1" id="comment-1215901">
				<div id="div-comment-1215901" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Scott+Brickey' rel='external nofollow' class='url'>Scott Brickey</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20151125-00/?p=92141#comment-1215901">
			November 25, 2015 at 9:41 am</a>		</div>

		<p>fixing documentation is a good thing&#8230; but seems like this would fall under the &quot;faster to check, rather than wait for someone to reply to my question&quot; category.</p>
<div class="post">[<em>But maybe it&#39;s supposed to work, but you&#39;re just doing it wrong? And if you find that it works, are you sure it&#39;s intended to behave that way, or are you relying on an implementation detail? -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1215891">
				<div id="div-comment-1215891" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Roger</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20151125-00/?p=92141#comment-1215891">
			November 25, 2015 at 11:21 am</a>		</div>

		<p>(In a past life I implemented a SMB/CIFS server.) &nbsp;What is even more amusing is just how inconsistent this stuff gets. &nbsp;Wildcards are also sent over the network. &nbsp;Both the Microsoft client and server pieces then have various workarounds for the other party, so the answers differ based on who is asking, and/or who is being asked. &nbsp;The Samba team eventually wrote a tool named masktest, which is essentially a fuzzer trying to find edge cases in wildcard processing. &nbsp;You&#39;d never think something as simple as listing files would be complicated, but throw in legacy decisions like case insensitivity, knowing file names are 8.3, letting clients not close directories even when they should, filesystem level wildcards, pagination of results, security considerations, client and server versioning, being lenient, backwards and forwards compatibility, and this gets complex.</p>
<p>I am curious if Raymond can find out roughly how many lines of code are dedicated just to processing directory listings. &nbsp;I had to rewrite our code **four** times because previous approaches became untenable as we discovered issues. &nbsp;My memory is around 2,000 LOC in our implementation, whereas a naive simple implementation using opendir/readdir/closedir would be less than 50.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1215881">
				<div id="div-comment-1215881" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Harry Johnston</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20151125-00/?p=92141#comment-1215881">
			November 25, 2015 at 12:13 pm</a>		</div>

		<p>Quite apart from network servers, I&#39;d have thought the overhead of one system call (and the corresponding transition to and from kernel mode) per file would become a performance bottleneck for directories with lots of files.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1215871">
				<div id="div-comment-1215871" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Anon</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20151125-00/?p=92141#comment-1215871">
			November 25, 2015 at 12:42 pm</a>		</div>

		<p>If we&#39;re comparing, then the Unix syscall interface is highly regrettable as well, due to the fact that a directory fd has to support telldir() and seekdir(). &nbsp;The whole notion of a current position in a directory is fairly meaningless since files can be added and removed at any time, and the filesystem is free to completely reorder its internal structures as it sees fit for maximum efficiency, but the idea of being able to save your place in a directory and then go back there assumes that the ordering is stable. &nbsp;Go ask any unix filesystem developer how much time has been wasted having to come up with brutal hacks to support seeking in a directory and I&#39;m sure you&#39;ll get a response that includes a lot of profanity.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-kwadwomi odd alt thread-odd thread-alt depth-1" id="comment-1215861">
				<div id="div-comment-1215861" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Master+Programmer' rel='external nofollow' class='url'>Master Programmer</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20151125-00/?p=92141#comment-1215861">
			November 25, 2015 at 1:05 pm</a>		</div>

		<p>@Adam Rosenfield</p>
<p>Yeah the filtering is done in kernel space. That&#39;s how rootkits are able to hide files. They just throw out the entries they don&#39;t want.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1215851">
				<div id="div-comment-1215851" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua Bowman</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20151125-00/?p=92141#comment-1215851">
			November 25, 2015 at 1:31 pm</a>		</div>

		<p>@Harry, kernel transitions are pretty negligible when it&#39;s only a few dozen or hundred a second. It&#39;s not like a user-mode Ethernet. FindNextFile already uses a 4096 byte buffer to minimize kernel calls, which is enough to store at least 5 files with a MAX_PATH length (potentially many more); with the new Win7+ FIND_FIRST_EX_LARGE_FETCH flag you get a 65536 size buffer, enough for at least 88 files!</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1215831">
				<div id="div-comment-1215831" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20151125-00/?p=92141#comment-1215831">
			November 25, 2015 at 6:07 pm</a>		</div>

		<p>@Anon: I just made seekdir return -ENOTSUPP.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1215821">
				<div id="div-comment-1215821" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Harry Johnston</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20151125-00/?p=92141#comment-1215821">
			November 25, 2015 at 7:58 pm</a>		</div>

		<p>@Joshua: even so, it isn&#39;t all that uncommon to have tens or hundreds of thousands of files in a directory. &nbsp;Silly, but not all that uncommon. :-)</p>
<p><a rel="nofollow" target="_new" href="http://stackoverflow.com/q/9780735/886887">stackoverflow.com/&#8230;/886887</a></p>
<p>But I didn&#39;t know the user-mode function was buffering the information. &nbsp;That would certainly make a difference.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1215811">
				<div id="div-comment-1215811" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Anthony Wieser</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20151125-00/?p=92141#comment-1215811">
			November 25, 2015 at 10:54 pm</a>		</div>

		<p>It&#39;s still not very clear, even with the change, as &quot;an&quot; implies only one, and the or may be exclusive.</p>
<p>Making asterisk and question mark plural would fix that, if it&#39;s true that *.?a? is a legal pattern.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-cheong even thread-even depth-1" id="comment-1215801">
				<div id="div-comment-1215801" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/cheong00' rel='external nofollow' class='url'>cheong00</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20151125-00/?p=92141#comment-1215801">
			November 26, 2015 at 12:01 am</a>		</div>

		<p>I thought because this function has to support POSIX subsystem for Windows, it would follow what section 3.13 of POSIX.2 say when processing wildcard in files.</p>
<p>Then again this is just what I thought.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1215781">
				<div id="div-comment-1215781" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Medinoc</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20151125-00/?p=92141#comment-1215781">
			November 26, 2015 at 4:41 am</a>		</div>

		<p>Is the POSIX subsystem even up to POSIX.2? I thought it only supported POSIX.1&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1215751">
				<div id="div-comment-1215751" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">boogaloo</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20151125-00/?p=92141#comment-1215751">
			November 26, 2015 at 11:01 am</a>		</div>

		<p>IMO it would make sense for the FindFirstFileEx to support wildcards in all positions, because of high latency and low bandwidth situations like SMB and tape storage.</p>
<p>If the kernel designers were &quot;forced&quot; to include the limited wildcard support because CP/M did, then they dodged a bullet.</p>
<p>It would also be nice if you could find files using more than the name.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1215741">
				<div id="div-comment-1215741" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Harry Johnston</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20151125-00/?p=92141#comment-1215741">
			November 26, 2015 at 11:52 am</a>		</div>

		<p>@cheong00, I don&#39;t think so. &nbsp;Interix presumably does the same thing Linux does, implementing glob() in user-mode.</p>
<p>Besides, the underlying kernel function (ZwQueryDirectoryFile) takes a directory handle, not a path name, so there&#39;s no way to even *try* to put a wildcard in the path. :-)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1215731">
				<div id="div-comment-1215731" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Dave</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20151125-00/?p=92141#comment-1215731">
			November 26, 2015 at 4:05 pm</a>		</div>

		<p>Just curious, when you submit a documentation change request is that by going to the MSDN page for the docs and submitting a comment, or is there a MS-internal way to do it? &nbsp;I&#39;ve submitted several change requests via the MSDN pages for things that are obvious errors (e.g. _Inout_ parameter documented as _In_ so you get a compiler warning every time you call that particular function), but never had any response, and the docs stay incorrect.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-cheong odd alt thread-odd thread-alt depth-1" id="comment-1215711">
				<div id="div-comment-1215711" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/cheong00' rel='external nofollow' class='url'>cheong00</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20151125-00/?p=92141#comment-1215711">
			November 26, 2015 at 5:22 pm</a>		</div>

		<p>POSIX.2 govens how command interpreters interpret the input and standard utilities (i.e.: commands) to be provided in POSIX systems like &quot;cat&quot; or &quot;alias&quot;, the .2 is not version number, more like &quot;chapter&quot;.</p>
<p>The revision usually comes in form of &quot;POSIX.2-1992&quot;, or in the standard form &quot;IEEE Std.2-1992&quot;.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-cheong even thread-even depth-1" id="comment-1215701">
				<div id="div-comment-1215701" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/cheong00' rel='external nofollow' class='url'>cheong00</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20151125-00/?p=92141#comment-1215701">
			November 26, 2015 at 5:27 pm</a>		</div>

		<p>@Harry Johnston: There&#39;s no limitation on one user-mode API has to be implemented with exactly one kernel API. If there are more requirements on wildcard handling, the path parsing and matching would probably be done on the outer function too.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1215681">
				<div id="div-comment-1215681" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Anonymous Coward</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20151125-00/?p=92141#comment-1215681">
			November 26, 2015 at 8:19 pm</a>		</div>

		<p>FindFirstFile is a user-mode function, so there&#39;s no reason the kernel has to do the wildcard expansion. (It&#39;s not like Linux where the system call interface is documented and intentionally exposed to applications)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1215671">
				<div id="div-comment-1215671" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">boogaloo</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20151125-00/?p=92141#comment-1215671">
			November 26, 2015 at 10:05 pm</a>		</div>

		<p>Most of the wild card handling should be performed by the file system anyway, not the kernel (*). However to allow wildcards in directories then you&#39;d need to be able to identify which file system you were talking to because of reparse points.</p>
<p>(*) This is assuming you want to build a decent system that works optimally in all use cases and aren&#39;t just happy with knocking something up that &quot;works for me&quot;.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-cheong odd alt thread-odd thread-alt depth-1" id="comment-1215661">
				<div id="div-comment-1215661" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/cheong00' rel='external nofollow' class='url'>cheong00</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20151125-00/?p=92141#comment-1215661">
			November 27, 2015 at 12:35 am</a>		</div>

		<p>s/IEEE Std.2-1992/IEEE Std 1003.2-1992/</p>
<p>Not sure whether I forgot to copy and paste the 1003 part, or somehow &quot;the dog ate that&quot; ( <a rel="nofollow" target="_new" href="https://en.wikipedia.org/wiki/The_dog_ate_my_homework">en.wikipedia.org/&#8230;/The_dog_ate_my_homework</a> ).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1215491">
				<div id="div-comment-1215491" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Kevin</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20151125-00/?p=92141#comment-1215491">
			November 28, 2015 at 5:10 pm</a>		</div>

		<p>@Joshua: You can&#39;t use -ENOTSUPP for telldir, and *certainly* not for seekdir(). &nbsp;Both are POSIX-specified to never error, and seekdir() is additionally a void function so the chances of anyone checking the error code are approximately nil. &nbsp;Linux quite illegally adds EBADF to telldir() (because the alternative, I suppose, would be undefined behavior), but it does not allow for ENOTSUPP.</p>
<p><a rel="nofollow" target="_new" href="http://pubs.opengroup.org/onlinepubs/9699919799/functions/telldir.html">pubs.opengroup.org/&#8230;/telldir.html</a></p>
<p><a rel="nofollow" target="_new" href="http://pubs.opengroup.org/onlinepubs/9699919799/functions/seekdir.html">pubs.opengroup.org/&#8230;/seekdir.html</a></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1215431">
				<div id="div-comment-1215431" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Daniel Neely</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20151125-00/?p=92141#comment-1215431">
			November 29, 2015 at 2:32 pm</a>		</div>

		<p>The sad bit is that despite the IIRC multi-year queue of written articles that Raymond maintains, the current MSDN documentation still has the old ambiguous text in it.</p>
<p><a rel="nofollow" target="_new" href="https://msdn.microsoft.com/en-us/library/windows/desktop/aa364419.aspx">msdn.microsoft.com/&#8230;/aa364419.aspx</a></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1215421">
				<div id="div-comment-1215421" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Harry Johnston</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20151125-00/?p=92141#comment-1215421">
			November 29, 2015 at 3:13 pm</a>		</div>

		<p>@cheong00, I&#39;m not sure what you mean. &nbsp;The user-mode function (FindFirstFile) is part of the Win32 API, so what Interix does isn&#39;t relevant to it AFAIK. &nbsp;(Interix is not layered on top of Win32, they are peers.) &nbsp;</p>
<p>Only the kernel-mode function (ZwQueryDirectoryFile) might have been affected by an Interix requirement to support wildcards in paths, and we can tell that it wasn&#39;t since the function signature doesn&#39;t permit it.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-cheong odd alt thread-odd thread-alt depth-1" id="comment-1215401">
				<div id="div-comment-1215401" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/cheong00' rel='external nofollow' class='url'>cheong00</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20151125-00/?p=92141#comment-1215401">
			November 29, 2015 at 5:46 pm</a>		</div>

		<p>If the infomation given on wiki ( <a rel="nofollow" target="_new" href="https://en.wikipedia.org/wiki/Interix">en.wikipedia.org/&#8230;/Interix</a> ) isn&#39;t wrong, it makes me think Interix intends to cover console utilities which is covered by POSIX.2 . It&#39;s kind of strange if you only commited to confirm to part of the standard.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1215261">
				<div id="div-comment-1215261" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">DWalker</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20151125-00/?p=92141#comment-1215261">
			November 30, 2015 at 10:24 am</a>		</div>

		<p>@Dave said:</p>
<p>&quot;Just curious, when you submit a documentation change request is that by going to the MSDN page for the docs and submitting a comment, or is there a MS-internal way to do it? &nbsp;I&#39;ve submitted several change requests via the MSDN pages for things that are obvious errors (e.g. _Inout_ parameter documented as _In_ so you get a compiler warning every time you call that particular function), but never had any response, and the docs stay incorrect.&quot;</p>
<p>I would like to echo that. &nbsp;Does anyone know the answer? &nbsp;Do any of the MSFT people here???? &nbsp;Thanks.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1216221">
				<div id="div-comment-1216221" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">bzakharin</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20151125-00/?p=92141#comment-1216221">
			December 1, 2015 at 10:05 am</a>		</div>

		<p>I&#39;m not sure how this stuff evolved, but I&#39;m pretty sure that in DOS days anything after a *, but before the dot (if applicable) would get ignored in a DIR command, so &quot;DIR def*.txt&quot; would return any text file starting with def, but &quot;DIR *def.txt&quot; would return any text file. This seems to not be the case in CMD today, but what about Find­First­File­Ex?</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>