<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (22)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-785903">
				<div id="div-comment-785903" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">kog999</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20091112-00/?p=16053#comment-785903">
			November 12, 2009 at 7:54 am</a>		</div>

		<p>seems to me the question shouldn&#8217;t be</p>
<p>&quot;why it&#8217;s possible to create a PIF file that refers to a program that isn&#8217;t an MS-DOS program&quot;</p>
<p>but instead</p>
<p>&quot;why would someone want to create a PIF file that refers to a program that isn&#8217;t an MS-DOS program&quot;</p>
<p>that would make for a more insteresting explination. If there is a valid reason to do this then why try to stop them in the first place. If there isn&#8217;t a reason then blame the programmer for wasting resources and not windows for allowing them to do it.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-785923">
				<div id="div-comment-785923" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Richard Wells</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20091112-00/?p=16053#comment-785923">
			November 12, 2009 at 8:55 am</a>		</div>

		<p>Some of the PIF files that pointed to non-PIF files were ghosts of upgrades from MS-DOS to Windows versions. It would be difficult to track down every shortcut that would link to the old PIF file thus it is easier to modify the PIF file to redirect to the current Windows executable.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-maurits even thread-even depth-1" id="comment-785933">
				<div id="div-comment-785933" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Maurits+%5BMSFT%5D' rel='external nofollow' class='url'>Maurits [MSFT]</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20091112-00/?p=16053#comment-785933">
			November 12, 2009 at 9:02 am</a>		</div>

		<p>&gt; You can&#8217;t even enforce it at the time the PIF file is launched, because somebody could replace the file during the split second between checking the file type and actually using it. </p>
<p>Does not follow. &nbsp;Sure, someone could replace the file during the split second between checking the file type and actually using it &#8211; but you /could/ enforce it at the time the PIF file is launched. &nbsp;The enforcement wouldn&#8217;t be ironclad, agreed, but it would (arguably) be better than nothing.</p>
<div class=post>[<i>True, it would reduce the scope, but it wouldn&#8217;t solve the problem outright, which was my point (poorly phrased). -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-785963">
				<div id="div-comment-785963" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://i.have.no.url/' rel='external nofollow' class='url'>No body</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20091112-00/?p=16053#comment-785963">
			November 12, 2009 at 9:49 am</a>		</div>

		<p>Why can&#8217;t you modify some shortcuts that some installers put on the Start Menu folder?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-785993">
				<div id="div-comment-785993" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Brian</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20091112-00/?p=16053#comment-785993">
			November 12, 2009 at 11:16 am</a>		</div>

		<p>Related to your bizarre red tape comment, I once tried renting a car (in person) and the gal at the counter informed me that the special advertised price was only available online. &nbsp;So, I pulled out my internet-connected cell phone and booked the car at the reduced rate.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-dwalker-wk odd alt thread-odd thread-alt depth-1" id="comment-786003">
				<div id="div-comment-786003" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/DWalker' rel='external nofollow' class='url'>DWalker</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20091112-00/?p=16053#comment-786003">
			November 12, 2009 at 12:15 pm</a>		</div>

		<p>Replacing a file in the split second between checking the file type and actually launching it seems like &#8230; a red herring.</p>
<p>What if permissions are altered between the time they are checked and the time a file is opened? &nbsp;What if a file is deleted between the time permissions are checked and actually opening it? &nbsp;What if all kinds of things happen between step 1 and step 2 of any process? &nbsp;The operating system can&#8217;t prevent all such occurrences.</p>
<p>I don&#8217;t think that&#8217;s a huge concern; if the file is replaced, the application may crash when Windows tries to &#8220;run&#8221; it. &nbsp;It&#8217;s not like this is going to happen often.</p>
<div class=post>[<i>You can hit this with 100% certainty. Set up a malware site that responds with an MS-DOS program the first time any particular IP address opens the attack file, and responds with a Win32 program the second time. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-786013">
				<div id="div-comment-786013" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Random832</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20091112-00/?p=16053#comment-786013">
			November 12, 2009 at 12:21 pm</a>		</div>

		<p>For that matter, what if a <em>windows</em> exe file is replaced with a <em>dos</em> (or 16-bit windows) exe in the split second between when it decides <em>not</em> to create a virtual machine with the default settings [as when you directly launch a dos exe] and when it actually uses it?</p>
<div class=post>[<i>That one&#8217;s easy: The Win32 loader rejects it. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-786043">
				<div id="div-comment-786043" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Hadron</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20091112-00/?p=16053#comment-786043">
			November 12, 2009 at 1:31 pm</a>		</div>

		<p>I bet if I made a PIF file that pointed to the Higgs Boson, Windows could go back in time to stop it.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-786063">
				<div id="div-comment-786063" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">drysart@gmail.com</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20091112-00/?p=16053#comment-786063">
			November 12, 2009 at 4:02 pm</a>		</div>

		<blockquote><p>
  Why can&#8217;t you modify some shortcuts that some installers put on the Start Menu folder?
</p></blockquote>
<p>You&#8217;re probably referring to Windows Installer&#8217;s advertised shortcuts. &nbsp;They don&#8217;t actually point to a file, they fire off a call into Windows Installer instead, which checks to see if the target is actually installed (launching an install process if its not, or if it needs to be repaired), then launching the underlying file only after its satisfied the house is in order.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-786083">
				<div id="div-comment-786083" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">porter</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20091112-00/?p=16053#comment-786083">
			November 12, 2009 at 4:42 pm</a>		</div>

		<blockquote><p>
  &gt; Now, back in the days when PIF files were invented, if you tried to run something that wasn&#8217;t an MS-DOS program inside an MS-DOS virtual machine,
</p></blockquote>
<p>PIF files were invented before there was any virtualisation, they were there in Windows 1.0 on an 8088. From memory, the DOS exec 0x21 trap would run a windows program. You only got the WINSTUB.EXE response if windows wasn&#8217;t actually running.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-786133">
				<div id="div-comment-786133" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">configurator</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20091112-00/?p=16053#comment-786133">
			November 12, 2009 at 7:50 pm</a>		</div>

		<p>@Miral: I remember about 10 years ago I used to make PIFs to bat files all the time for that exact reason. I remember it was quite annoying, too.</p>
<p>@Raymond: &quot;You want a custom icon? Sure, no problem.&quot; The custom icon comes up when the pif is loaded? That doesn&#8217;t seem to make sense. Am I missing something?</p>
<p>Side note:</p>
<p>Remember the good old days of Web 2.0 when there was this new thing called a blog with comments, and the comments actually posted when you wanted them to? I haven&#8217;t seen a site like that in a long time now.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-786153">
				<div id="div-comment-786153" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://lambert.geek.nz/' rel='external nofollow' class='url'>Miral</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20091112-00/?p=16053#comment-786153">
			November 12, 2009 at 10:36 pm</a>		</div>

		<p>@Raymond: Which is another problem, admittedly. &nbsp;Which team is responsible for the shortcut property editor? &nbsp;Any chance you can sneak a &#8220;close on exit&#8221; checkbox into the feature request pile?</p>
<p>@configurator: Better still, comments that not only appear immediately but give you (and only you) an edit option for a few minutes even if posting without a login. &nbsp;Still, I can understand why Raymond isn&#8217;t using one of those: (a) this is the standard blogs.msdn.com style &#8212; he might have to get it hosted elsewhere to get different behaviour; (b) it&#8217;s a popular blog &#8212; having immediately-shown comments would most likely get it spammed into the dark ages. &nbsp;Don&#8217;t forget the trackback linkspam affair of a few months ago.</p>
<div class=post>[<i>Um, you do realize there&#8217;s more to implementing a feature than adding a checkbox&#8230; The rules for consoles come from kernel, not the shortcut team. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-786103">
				<div id="div-comment-786103" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://lambert.geek.nz/' rel='external nofollow' class='url'>Miral</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20091112-00/?p=16053#comment-786103">
			November 12, 2009 at 6:20 pm</a>		</div>

		<p>PIF files actually seem to have one massive advantage over LNK files, even under Vista:</p>
<p>.pif files that point at .bat files get a &#8220;Close on exit&#8221; checkbox, so you can tell them to stay open after they finish (useful to check for errors etc).</p>
<p>.lnk files that point at .bat files have no such option; in order to get them to wait, every exit point from the batch file has to be protected with a &#8220;pause&#8221; command.</p>
<p>Sadly, creating a shortcut to a batch file under NT/2000/XP/Vista/7 creates a .lnk, not a .pif. &nbsp;(Also sadly, the .pif doesn&#8217;t work in 64-bit Windows.)</p>
<p>(Of course, nowadays they *should* create .lnks. &nbsp;But .lnks to console programs should have a Close on Exit checkbox.)</p>
<div class=post>[<i>Mind you, those PIF-pointed BAT files run under COMMAND.COM, not CMD.EXE, because PIF files create MS-DOS virtual machines. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-786173">
				<div id="div-comment-786173" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">AndyC</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20091112-00/?p=16053#comment-786173">
			November 13, 2009 at 2:42 am</a>		</div>

		<p>&quot;.lnk files that point at .bat files have no such option; in order to get them to wait, every exit point from the batch file has to be protected with a &quot;pause&quot; command.&quot;</p>
<p>cmd /K nameofbatchfile.bat</p>
<p>is your friend. :)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-786183">
				<div id="div-comment-786183" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Neil</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20091112-00/?p=16053#comment-786183">
			November 13, 2009 at 3:19 am</a>		</div>

		<p>Another advantage PIF files had over LNK files on Windows 9x is that you could specify the dimensions that you wanted your console application to run in, otherwise they always opened in 50 line mode.</p>
<p>On Windows XP I have the reverse problem; I can&#8217;t seem to get a DOS application to open in the dimensions I want without creating a .BAT file for it and a .LNK to the .BAT file. (All problems can be solved with indirection!)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-786203">
				<div id="div-comment-786203" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Florian</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20091112-00/?p=16053#comment-786203">
			November 13, 2009 at 5:59 am</a>		</div>

		<p>A follow-up question is this: When you rename an EXE file to a PIF file, why does the program still run?</p>
<div class=post>[<i>For the same reason an EXE renamed to COM or SCR still runs. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-786213">
				<div id="div-comment-786213" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://stevehanov.ca' rel='external nofollow' class='url'>Steve Hanov</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20091112-00/?p=16053#comment-786213">
			November 13, 2009 at 6:11 am</a>		</div>

		<p>I like your analogies (&quot;It&#8217;s like booking a meeting room&#8230;&quot; Use more of them in your writing.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-dwalker-wk odd alt thread-odd thread-alt depth-1" id="comment-786243">
				<div id="div-comment-786243" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/DWalker' rel='external nofollow' class='url'>DWalker</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20091112-00/?p=16053#comment-786243">
			November 13, 2009 at 9:05 am</a>		</div>

		<p>@Steve: My Dad hates analogies! &nbsp;&quot;Tell me what something IS, not what it&#8217;s LIKE.&quot; &nbsp;</p>
<p>I&#8217;ll quote again: &nbsp;Analogies are like feathers on a snake. &nbsp;:-)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-786283">
				<div id="div-comment-786283" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Alexandre Grigoriev</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20091112-00/?p=16053#comment-786283">
			November 13, 2009 at 11:16 am</a>		</div>

		<p>&quot;You&#8217;re probably referring to Windows Installer&#8217;s advertised shortcuts.&quot;</p>
<p>Now, if only those half-assed shortcuts were able to accept drag-drop, like the normal shortcuts do&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-786483">
				<div id="div-comment-786483" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://lambert.geek.nz/' rel='external nofollow' class='url'>Miral</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20091112-00/?p=16053#comment-786483">
			November 15, 2009 at 5:00 pm</a>		</div>

		<p>@AndyC: Actually &#8220;cmd /k&#8221; is worse, because at the end of it you get a live command prompt.</p>
<p>@Raymond: Yes, of course I know that there&#8217;s more to the feature then just the checkbox. &nbsp;But that&#8217;s where it starts &#8212; &#8220;users want a checkbox&#8221; -&gt; &#8220;how do we implement that checkbox&#8221; -&gt; &#8220;let&#8217;s get the kernel team to add something&#8221;.</p>
<p>Although it ought to be doable without bothering the kernel team &#8212; if the target is a console app and &#8220;close on exit&#8221; is unchecked (or &#8220;keep open after exiting&#8221; is checked, whichever makes more sense), then the shell can create a console window for the app itself rather than letting the kernel do so on its behalf, so that the console sticks around even after the subprocess has terminated.</p>
<div class=post>[<i>&#8220;the shell&#8221; isn&#8217;t a process; it&#8217;s a library. From Notepad, do File.Open, right-click a shortcut, select &#8220;Open&#8221;, then that console window will be opened by Notepad, and when you exit Notepad, that console window vanishes? -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-786833">
				<div id="div-comment-786833" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Consolas</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20091112-00/?p=16053#comment-786833">
			November 16, 2009 at 4:58 pm</a>		</div>

		<p>The easiest way to replicate PIF-style &quot;Close on Exit&quot; functionality in shortcuts is to append the conditional operators || or &amp;&amp; along with the pause command to the target.</p>
<p>For example, to have the console stay open if a batch or console app fails, create a shortcut and change the target to the following:</p>
<p>&lt;path&gt;consoleapp.exe || pause</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-someone odd alt thread-odd thread-alt depth-1" id="comment-786863">
				<div id="div-comment-786863" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/anony.muos' rel='external nofollow' class='url'>anony.muos</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20091112-00/?p=16053#comment-786863">
			November 16, 2009 at 10:04 pm</a>		</div>

		<p>Put NTVDM damn it under 64-bit Windows. Did MS say it was technically impossible?</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>