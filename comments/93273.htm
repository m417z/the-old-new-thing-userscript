<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (11)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1 parent" id="comment-1232621">
				<div id="div-comment-1232621" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Michael</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160407-00/?p=93273#comment-1232621">
			April 7, 2016 at 7:45 am</a>		</div>

		<p>So why does Microsoft not include the required information for a call into the public symbols? I can see why this would be a bad idea for undocumented functions, but why not for the official documented ones?</p>

		
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-oldnewthing bypostauthor odd alt depth-2 parent" id="comment-1232653">
				<div id="div-comment-1232653" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Raymond+Chen+-+MSFT' rel='external nofollow' class='url'>Raymond Chen - MSFT</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160407-00/?p=93273#comment-1232653">
			April 7, 2016 at 11:58 am</a>		</div>

		<p>The information is there: It&#8217;s in the SDK. But the debugger doesn&#8217;t come with the SDK.</p>

		
				</div>
		<ol class="children">
		<li class="comment even depth-3 parent" id="comment-1232691">
				<div id="div-comment-1232691" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Anon</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160407-00/?p=93273#comment-1232691">
			April 7, 2016 at 8:12 pm</a>		</div>

		<p>Unless there&#8217;s another way to get it, the debugger *does* come with the SDK &#8212; you have to use the SDK installer to install it. It would be one more checkbox in the Windows SDK Installer. (That used to not be true, but as far as I can tell, it is no longer possible to get the debugger redists outside of downloading the SDK installer, or via some third-party kind enough to place them up for download.)</p>

		
				</div>
		<ol class="children">
		<li class="comment odd alt depth-4" id="comment-1232731">
				<div id="div-comment-1232731" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">morlamweb</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160407-00/?p=93273#comment-1232731">
			April 8, 2016 at 5:41 am</a>		</div>

		<p>@Anon: the debuggers can be deployed separately from the SDK.  The SDK installer allows you to copy the installers for the debuggers to your local disk, and those installers can then be sent to customers to install the debuggers.  Defrag Tools on Channel9 took advantage of this feature to build their &#8220;lightsaber&#8221; &#8211; a USB memory stick with the debugging tools + sysinternals tools &#8211; for Win 7, 8, and 8.1.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment even thread-odd thread-alt depth-1 parent" id="comment-1232631">
				<div id="div-comment-1232631" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Michael</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160407-00/?p=93273#comment-1232631">
			April 7, 2016 at 7:52 am</a>		</div>

		<p>Also, why not add a command to the debugger that takes the call syntax as an argument?<br />
Like:<br />
.call stdcall FunctionName DWORD:123 CHAR:12 ret:INT</p>

		
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-oldnewthing bypostauthor odd alt depth-2" id="comment-1232663">
				<div id="div-comment-1232663" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Raymond+Chen+-+MSFT' rel='external nofollow' class='url'>Raymond Chen - MSFT</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160407-00/?p=93273#comment-1232663">
			April 7, 2016 at 12:00 pm</a>		</div>

		<p>That would be a neat extension to write. <a href="https://blogs.msdn.microsoft.com/oldnewthing/20050721-16/?p=34863" rel="nofollow">Start typing</a>! (Functions that return structures would be more tricky.)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even depth-2" id="comment-1232783">
				<div id="div-comment-1232783" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://paradisefacade.com' rel='external nofollow' class='url'>Rosyna</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160407-00/?p=93273#comment-1232783">
			April 8, 2016 at 2:58 pm</a>		</div>

		<p>I wonder about that as well. For example, GDB and LLDB permit you to do typecasting to inform the debugger of the argument and return types of a function the debugger otherwise has no information about.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment odd alt thread-even depth-1 parent" id="comment-1232651">
				<div id="div-comment-1232651" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ben</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160407-00/?p=93273#comment-1232651">
			April 7, 2016 at 9:30 am</a>		</div>

		<p>I for one enjoy the &#8220;Portability&#8221; of WinDBG/CDB and its kin.</p>
<p>Missed you at //build2016 Raymond! I really want you to sign a copy of your book :)</p>
<p>As to &#8220;Installing Visual Studio To Debug&#8221; at build the Visual Studio team was showing off their super slick vNext installer at //build2016, I asked the very same question (portable install), if their intel was good its getting closer, the core is ~300mb and gives you the shell, minimal syntax highlighting, and the native and managed debugger (one day we might get our CLR Debugger that shipped with .NET 2.0 back!). They were talking about the limited invasive-ness of the new installer/vNext. Still a far cry away from the ~40mb of WinDBG and its kin.</p>
<p>I also had a chance to talk to the Visual Studio Debugging Tools team, I was surprised to hear that the rep had never head of the ntdebugging blog (I found them through your sidebar, those guys are simply amazing). I was also a little surprised to hear them admit WinDBG was slightly better for some operations. I know Microsoft&#8217;s a big place, but I would expected there to be some cross over. Maybe a blog post for another time that talks about the various teams (as you understand them?) or perhaps its out of scope.</p>

		
				</div>
		<ol class="children">
		<li class="comment even depth-2" id="comment-1232701">
				<div id="div-comment-1232701" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Anon</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160407-00/?p=93273#comment-1232701">
			April 7, 2016 at 8:15 pm</a>		</div>

		<p>I wouldn&#8217;t expect the VS Debug Tools team to read every other MS blog&#8230;, but I *would* expect everyone on the team to pay attention to the other Microsoft debugging tool blogs&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1232671">
				<div id="div-comment-1232671" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160407-00/?p=93273#comment-1232671">
			April 7, 2016 at 2:09 pm</a>		</div>

		<p>Despite the low number of comments, this post has been particularly interesting.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1232732">
				<div id="div-comment-1232732" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">sense</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160407-00/?p=93273#comment-1232732">
			April 8, 2016 at 6:17 am</a>		</div>

		<p>I&#8217;ve recently seen in the latest WinDbg (the windows 10 sdk version) that it can show &#8220;Source Args&#8221; for API functions in a callstack of a crash dump. This was not the case with previous versions of WinDbg.<br />
It seems that if public symbols contain the necessary information for the debugger to show this, it will be enough to call functions. Maybe at some point in time, the public symbols were changed and contained more information?</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>