<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (13)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment byuser comment-author-anonymouscommenter even thread-even depth-1" id="comment-1238746">
				<div id="div-comment-1238746" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">anonymouscommenter</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150706-00/?p=45211#comment-1238746">
			July 6, 2015 at 8:42 am</a>		</div>

		<p>The next step, of course, is to reject any dates that are far in the past or future automatically (since the date came from a crash dump, not some 12th century mathematician playing games with date formats). &nbsp;This is left as an exercise for the reader.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-anonymouscommenter odd alt thread-odd thread-alt depth-1" id="comment-1238726">
				<div id="div-comment-1238726" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">anonymouscommenter</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150706-00/?p=45211#comment-1238726">
			July 6, 2015 at 11:00 am</a>		</div>

		<p>Kevin: that way you would filter out all users playing with date, trying Contoso App in 12th century :-)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-bboorman even thread-even depth-1" id="comment-1238716">
				<div id="div-comment-1238716" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Brian_EE' rel='external nofollow' class='url'>Brian_EE</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150706-00/?p=45211#comment-1238716">
			July 6, 2015 at 11:49 am</a>		</div>

		<p>@Kevin: But what if you are debugging a crash dump that occurred while time traveling?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-anonymouscommenter odd alt thread-odd thread-alt depth-1" id="comment-1238706">
				<div id="div-comment-1238706" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">anonymouscommenter</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150706-00/?p=45211#comment-1238706">
			July 6, 2015 at 12:07 pm</a>		</div>

		<p>@ Brian EE: Easy enough &#8211; go back to before the crash occurred and debug it in real time.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-anonymouscommenter even thread-even depth-1" id="comment-1238696">
				<div id="div-comment-1238696" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">anonymouscommenter</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150706-00/?p=45211#comment-1238696">
			July 6, 2015 at 12:16 pm</a>		</div>

		<p>Out of idle curiosity, is there a reason you&#39;re using decimal numbers for your bitmasks? &nbsp;I&#39;ve always had a habit of using hex values for masks (0x7F instead of 127, etc). &nbsp;Just personal preference, or has your experience shown decimal is preferable?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-anonymouscommenter odd alt thread-odd thread-alt depth-1" id="comment-1238686">
				<div id="div-comment-1238686" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">anonymouscommenter</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150706-00/?p=45211#comment-1238686">
			July 6, 2015 at 12:17 pm</a>		</div>

		<p>@Kevin, throwing out invalid dates could throw out useful information. What if the bug that caused the crash happens because a field of the date is set incorrectly earlier in the program? What if the timestamp is being used to store the difference between two dates?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-davebacher even thread-even depth-1" id="comment-1238676">
				<div id="div-comment-1238676" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Dave+Bacher' rel='external nofollow' class='url'>Dave Bacher</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150706-00/?p=45211#comment-1238676">
			July 6, 2015 at 1:51 pm</a>		</div>

		<p>Dates in the past and future could be meaningful, too.</p>
<p>However, since you&#39;re projecting into a DateTime, the range is clamped anyway. &nbsp;For the local time variants, DateTimeOffset might be more useful here, for displaying the information, since it can display information that the DateTime class cannot. &nbsp;And presumably that information might be useful in debugging as well.</p>
<p>There are a small but significantly non-zero number of apps that support astronomical/astrological scale dates. &nbsp;If you&#39;re running a simulation, I could see storing time stamps in unix format (for example). &nbsp;I&#39;d think passing those to a date formatting API, say to get the year, could easily cause a crash dump, too, because it would be a case hardly anyone would actively test for. &nbsp;But I could see an app doing that, crashing, and having to look at a crash dump for it.</p>
<p>Same thing for ones in historic time frames, although that gets pretty tricky pretty fast even just last century, because of various rules. &nbsp;You need a lot of data beyond just the date to be able to place it properly, in many of these systems. &nbsp;IF they support it, you know, at all.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-anonymouscommenter odd alt thread-odd thread-alt depth-1" id="comment-1238656">
				<div id="div-comment-1238656" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">anonymouscommenter</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150706-00/?p=45211#comment-1238656">
			July 7, 2015 at 12:01 am</a>		</div>

		<p>@Nico RE decimal bitmasks</p>
<p>For me personally it&#39;s just a matter of more compact notation, so I too would use decimal for bitmasks up to 10 bits and hex for larger ones (well, to be precise, I&#39;d use decimal only for contiguous bitmasks because non-contiguous ones are more readable in hex, so it&#39;s 7 or 63 but 0x0c or 0xaa for me). Judging by Raimond&#39;s penchant for economic notation (e.g. the use of 9999 instead of 10000 as giving &quot;more value per character&quot; in one of the past posts) I&#39;d guess a similar motivation.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-anonymouscommenter even thread-even depth-1" id="comment-1238636">
				<div id="div-comment-1238636" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">anonymouscommenter</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150706-00/?p=45211#comment-1238636">
			July 7, 2015 at 3:49 am</a>		</div>

		<p>How to recognise different timestamps from quite a long way away.</p>
<p>Number 1. The Unix timestamp.</p>
<p>Number 1. The Unix timestamp.</p>
<p>Number 1. The Unix timestamp.</p>
<p>Number 3. The local FILETIME.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-anonymouscommenter odd alt thread-odd thread-alt depth-1" id="comment-1238606">
				<div id="div-comment-1238606" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">anonymouscommenter</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150706-00/?p=45211#comment-1238606">
			July 7, 2015 at 7:54 am</a>		</div>

		<p>My algorithm: if it&#39;s 10 or 13 digits long and starts with a 1, it&#39;s a Unix timestamp (10 digits for seconds, 13 digits for milliseconds).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-anonymouscommenter even thread-even depth-1" id="comment-1238556">
				<div id="div-comment-1238556" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">anonymouscommenter</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150706-00/?p=45211#comment-1238556">
			July 7, 2015 at 3:30 pm</a>		</div>

		<p>This activity reminds me of the &quot;Guess the code page of my string&quot; post.</p>
<p>Only the code page guessing was roundly savaged, but for some reason we&#39;re having great fun guessing timestamp formats!</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-anonymouscommenter odd alt thread-odd thread-alt depth-1" id="comment-1238536">
				<div id="div-comment-1238536" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">anonymouscommenter</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150706-00/?p=45211#comment-1238536">
			July 7, 2015 at 5:09 pm</a>		</div>

		<p>Regarding filtering timestamps that are too far away from now, there&#39;s a way to make both inclusionists and exclusionists happy: </p>
<p> &nbsp;&#8211; make it an option</p>
<p>This is also left as an exercise for the reader. It&#39;s also up in the air what the default will be &#8211; so there&#39;s still some room for arguing.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-anonymouscommenter even thread-even depth-1" id="comment-1238526">
				<div id="div-comment-1238526" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">anonymouscommenter</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150706-00/?p=45211#comment-1238526">
			July 8, 2015 at 4:34 am</a>		</div>

		<p>I liked the Monty Python reference in the title &#8211; see <a rel="nofollow" target="_new" href="https://youtu.be/HPeFd5zQm_Y">https://youtu.be/HPeFd5zQm_Y</a></p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>