<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (10)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-1012163">
				<div id="div-comment-1012163" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120921-00/?p=6543#comment-1012163">
			September 21, 2012 at 8:07 am</a>		</div>

		<p>Even easier way: don&#39;t call WMI. Use wrapper libraries for the few pieces of functionality that have no Win32 API equivalents.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-maurits odd alt thread-odd thread-alt depth-1" id="comment-1012183">
				<div id="div-comment-1012183" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Maurits+%5BMSFT%5D' rel='external nofollow' class='url'>Maurits [MSFT]</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120921-00/?p=6543#comment-1012183">
			September 21, 2012 at 9:00 am</a>		</div>

		<p>Nitpick; in some code examples you declare a VARIANT var; and then eventually call VariantClear(&#8230;) without ever having called VariantInit, which can result in strange effects.</p>
<p>I&#39;ve gotten into the habit of using VariantInit on the same line as the declaration so I know I didn&#39;t miss it:</p>
<p>VARIANT var; VariantInit(&amp;var);</p>
<p>&#8230;</p>
<p>VariantClear(&amp;var);</p>
<p>(Well, actually I usually use a smart RAII object.)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-maurits even thread-even depth-1" id="comment-1012193">
				<div id="div-comment-1012193" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Maurits+%5BMSFT%5D' rel='external nofollow' class='url'>Maurits [MSFT]</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120921-00/?p=6543#comment-1012193">
			September 21, 2012 at 9:12 am</a>		</div>

		<p>Never mind, I take that back; I see you only call VariantChangeTypeEx/VariantClear if hr was successful.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1012213">
				<div id="div-comment-1012213" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Random832</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120921-00/?p=6543#comment-1012213">
			September 21, 2012 at 9:31 am</a>		</div>

		<p>Out of curiosity, if the definition on <a href="http://msdn.microsoft.com/en-us/library/windows/desktop/ms221627(v=vs.85).aspx" target="_new" rel="nofollow">msdn.microsoft.com/&#8230;/ms221627(v=vs.85).aspx</a> is correct, how do you get around having to type var.__VARIANT_NAME1.__VARIANT_NAME_2.__VARIANT_NAME_3.iVal? Or am I misunderstanding something fundamental about how structs work, or is the definition incorrect?</p>
<div class="post">[<i>Read oaidl.h and find out. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1012223">
				<div id="div-comment-1012223" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Random832</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120921-00/?p=6543#comment-1012223">
			September 21, 2012 at 10:01 am</a>		</div>

		<p>Ah. The definition listed there doesn&#39;t show the macros that define them to be empty. If one were going to use this code under the circumstances that could cause the alternate form to be used, presumably one would use the macros in OleAuto.h &#8211; I don&#39;t think that V_DECIMAL is correctly defined in that case, though, since decVal is not a member of n2.n3.</p>
<p>And a short test case confirms I&#39;m right &#8211; a funny place, indeed. I guess this shows how little this case is exercised.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1012233">
				<div id="div-comment-1012233" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ivan K</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120921-00/?p=6543#comment-1012233">
			September 21, 2012 at 9:09 pm</a>		</div>

		<p>Guessing. And probably missing some fine point about compiler optimisations or &#39;memory&#39; boundaries, but I think the cases could be combined as long as the caller was trusted not to do something like SafeArrayGetElementAsVariant(psa, rgIndices, (LPVARIANT)p_decimal_Out), and then pass in an array that&#39;s actually full of variants (maybe the clever caller gets to reuse a decimal variable lying around and assumes the two structs are the same, which they kind of are on win32).</p>
<p>The alignment of both a decimal and a variant is 8 bytes (at least on my windows/x64 machine), and as mentioned offsetof decVal in a variant is zero. A variant is 24 bytes on win64 (thanks to the unnamed &quot;record&quot; struct), whereas a decimal stays at 16, so the individual safearray elements are possibly packed into in different memory locations depending on the array type, but I don&#39;t think that&#39;s any different than the VT_I1, etc case since an variant is big enough to hold the result.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1012243">
				<div id="div-comment-1012243" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Someone</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120921-00/?p=6543#comment-1012243">
			September 22, 2012 at 12:32 am</a>		</div>

		<p>I dont know why you assume that the decimal value is stored inside a VARIANT, occupying all of its memory. How could the vt member be stored that is needed for each and every valid VARIANT? It seems very clear that the value is stored where pdecValpoints to , outside of the VARIANT.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1012253">
				<div id="div-comment-1012253" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Harald</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120921-00/?p=6543#comment-1012253">
			September 22, 2012 at 2:25 am</a>		</div>

		<p>@Someone &quot;How could the vt member be stored that is needed for each and every valid VARIANT?&quot; It overlaps the unused bits of the DECIMAL structure, which are listed as a wReserved field at <a rel="nofollow" target="_new" href="http://msdn.microsoft.com/en-us/library/windows/desktop/ms221061%28v=vs.85%29.aspx" rel="nofollow">msdn.microsoft.com/&#8230;/ms221061%28v=vs.85%29.aspx</a></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1012273">
				<div id="div-comment-1012273" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">wtfadf</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120921-00/?p=6543#comment-1012273">
			September 23, 2012 at 9:14 am</a>		</div>

		<p>@someone. Yea, I&#39;m not sure how to deal with VT_BYREF types.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1012363">
				<div id="div-comment-1012363" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Someone</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120921-00/?p=6543#comment-1012363">
			September 24, 2012 at 6:36 am</a>		</div>

		<p>@Harald: Thanks. I didn&#39;t expectt the DECIMAL struct to have a reserved field as the first one. I thought the handling is similar to BSTR values.</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>