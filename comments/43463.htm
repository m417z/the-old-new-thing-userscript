<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (7)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-1165323">
				<div id="div-comment-1165323" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20141205-00/?p=43463#comment-1165323">
			December 5, 2014 at 7:53 am</a>		</div>

		<p>Let me guess, Raymond had to debug a shell extension messing this up about a queue length ago.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1165333">
				<div id="div-comment-1165333" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">OldFart</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20141205-00/?p=43463#comment-1165333">
			December 5, 2014 at 8:18 am</a>		</div>

		<p>This recent string of message-queue-related posts made me wonder, when is a message filter (or PeekMessage for that matter) ever a proper solution to a problem? &nbsp;It has been years since I&#39;ve attempted to do anything tricky in a message pump, but my best recollection is that the unintended consequences of any such attempt way overwhelmed any benefits.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1165353">
				<div id="div-comment-1165353" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">rs</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20141205-00/?p=43463#comment-1165353">
			December 5, 2014 at 9:29 am</a>		</div>

		<p>I suspect 0 should be PM_REMOVE in the first PeekMessage example (0 is PM_NOREMOVE).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1165373">
				<div id="div-comment-1165373" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">EduardoS</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20141205-00/?p=43463#comment-1165373">
			December 5, 2014 at 11:50 am</a>		</div>

		<p>Get&shy;Message blocks the thread, in the case of WM_TIMER, how is the process of wakeing up the thread and posting the message?</p>
<div class="post">[<em>The same way Get&shy;Message wakes up for other external events, like a new posted message or an inbound sent message. -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1165393">
				<div id="div-comment-1165393" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Jim</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20141205-00/?p=43463#comment-1165393">
			December 5, 2014 at 3:24 pm</a>		</div>

		<p>&quot;But it doesn&#39;t remain in this state for long, because the message is removed from the queue by the Peek&shy;Message function.&quot; &#8211; Pretty sure you meant &quot;&#8230; by the DispatchMessage function&quot; (as opposed to rs&#39;s suggestion)</p>
<div class="post">[<em>Nope. PeekMessage and GetMessage remove messages from the queue. DispatchMessage dispatches messages after they have already been removed from the queue. It is legal to <a href="http://blogs.msdn.com/b/oldnewthing/archive/2003/10/21/55384.aspx">remove messages from the queue without dispatching them</a>. -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1165403">
				<div id="div-comment-1165403" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Jim</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20141205-00/?p=43463#comment-1165403">
			December 5, 2014 at 3:45 pm</a>		</div>

		<p>Oops, sorry! Thanks for the reply (and the post of course, which is interesting as always).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1165413">
				<div id="div-comment-1165413" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Azarien</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20141205-00/?p=43463#comment-1165413">
			December 5, 2014 at 6:16 pm</a>		</div>

		<p>As far as I understand, DispatchMessage just calls WndProc with a given message, and does little else (that &quot;little else&quot; includes some calling convention magic that is not needed in normal circumstances).</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>