<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (10)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-1089013">
				<div id="div-comment-1089013" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Jon</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20131115-00/?p=2653#comment-1089013">
			November 15, 2013 at 7:47 am</a>		</div>

		<p>Instead of &#39;u&#39;</p>
<p>&nbsp; 0:000&gt; u contoso!DllGetClassObject+0x93c3</p>
<p>I&#39;d use &#39;ln&#39;</p>
<p>&nbsp; 0:000&gt; ln contoso!DllGetClassObject+0x93c3</p>
<p>There&#39;s less output to deal with.</p>
<div class="post">[<em>I usually append &quot;L1&quot; to limit to one line of disassembly, so the output is not huge. Also, &quot;LN&quot; puts the information after the address, which makes it harder to spot at a glance, and it increases the likelihood that there will be a line break in the middle of the symbol, making it harder to read and copy/paste. But that&#39;s just my preference. Your preference is also valid. -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-maurits odd alt thread-odd thread-alt depth-1" id="comment-1089033">
				<div id="div-comment-1089033" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Maurits+%5BMSFT%5D' rel='external nofollow' class='url'>Maurits [MSFT]</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20131115-00/?p=2653#comment-1089033">
			November 15, 2013 at 8:21 am</a>		</div>

		<p>&quot;began at begins at&quot;</p>
<p>&quot;lm m contoso*&quot; also works; there isn&#39;t an &quot;lmm&quot; command per se, rather an &quot;m &lt;pattern&gt;&quot; option to the &quot;lm&quot; command.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1089063">
				<div id="div-comment-1089063" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Neil</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20131115-00/?p=2653#comment-1089063">
			November 16, 2013 at 2:44 am</a>		</div>

		<p>I wondered what was going on at first but then it dawned on me that you were in fact trying to help someone who had only provided a stack trace formatted without symbols.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-fleet-command odd alt thread-odd thread-alt depth-1" id="comment-1089083">
				<div id="div-comment-1089083" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Fleet+Command' rel='external nofollow' class='url'>Fleet Command</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20131115-00/?p=2653#comment-1089083">
			November 16, 2013 at 5:29 am</a>		</div>

		<p>Hi. Won&#39;t ASLR make this whole thing impossible?</p>
<div class="post">[<em>The debugger knows where Contoso.DLL was loaded. That&#39;s how it got the half-hearted symbols in the first place. (If you didn&#39;t let debuggers know where DLLs got loaded, it&#39;s going to be hard for the debugger to accomplish much of anything.) There is no requirement that Contoso.DLL be loaded at its preferred base address. (Indeed, it wasn&#39;t.) -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1089093">
				<div id="div-comment-1089093" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">anyfoo</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20131115-00/?p=2653#comment-1089093">
			November 16, 2013 at 6:58 am</a>		</div>

		<p>@Fleet Command: when debugging you usually know what exists at which virtual address, even if that virtual address is random. With that knowledge you can translate the addresses into offsets into the DLL/executable/whatever you are interested in.</p>
<p>Not a security problem, because, as Raymond would put it, to get that information you have to already be on the other side of the airtight hatch. Unless there are bugs or oversights which permit you to get the mapping without proper privileges.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1089103">
				<div id="div-comment-1089103" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Gabe</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20131115-00/?p=2653#comment-1089103">
			November 16, 2013 at 4:19 pm</a>		</div>

		<p>Why would you even care where a DLL got loaded? If the addresses were all absolute, you&#39;d definitely have to know. But the addresses are all offsets relative to the DLL base address (contoso+0x1d6c), so the base address isn&#39;t used anywhere in the computation.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1089123">
				<div id="div-comment-1089123" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">640k</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20131115-00/?p=2653#comment-1089123">
			November 17, 2013 at 9:02 am</a>		</div>

		<p>Why can&#39;t debuggers do this work year 2013?</p>
<div class="post">[<em>Debuggers have been fully capable of doing this for decades if they have access to symbols. The issue is &quot;What if the debugger doesn&#39;t have access to symbols?&quot; Or are you asking, &quot;Why can&#39;t debuggers be smart enough to find symbols anywhere in the universe?&quot; -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1089133">
				<div id="div-comment-1089133" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">anyfoo</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20131115-00/?p=2653#comment-1089133">
			November 17, 2013 at 9:18 am</a>		</div>

		<p>@Gabe: well, the debugger has to know.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1090063">
				<div id="div-comment-1090063" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Escaper</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20131115-00/?p=2653#comment-1090063">
			November 19, 2013 at 2:07 pm</a>		</div>

		<p>&quot;It uses the symbols from the exported function table. For every address it wants to resolve, it looks for the nearest exported function whose address is less than or equal to the target value.&quot;</p>
<p>This sounds like a good example of a situation where it is better not to do anything than do something. Because using the above described algorithm is plainly misleading as it provides user with wrong function names. I see no value in that compared to just seeing offsets for unrecognized functions.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-bboorman odd alt thread-odd thread-alt depth-1" id="comment-1090713">
				<div id="div-comment-1090713" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Brian_EE' rel='external nofollow' class='url'>Brian_EE</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20131115-00/?p=2653#comment-1090713">
			November 21, 2013 at 12:05 pm</a>		</div>

		<p>@Escaper: How would you suggest the debugger know that the exported symbols + offset are wrong? What if the exception occurred in an exported function and the entire call chain was only exported functions? Wouldn&#39;t you then complain that the debugger didn&#39;t give you a correct stack trace?</p>
<p>Or would you prefer that the debugger try to reverse engineer the DLL looking for jmp and ret instructions and somehow piece together function boundaries? What if that process doesn&#39;t work all the time?</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>