<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (18)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-868943">
				<div id="div-comment-868943" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Medinoc</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101025-00/?p=12463#comment-868943">
			October 25, 2010 at 7:45 am</a>		</div>

		<p>Norman Diamond seems to assume that Windows are associated to a particular message loop in their thread. Which is false: They just run on whichever message loop the thread is currently running.</p>
<p>However, fun stuff such as IsDialogMessage() processing doesn&#39;t work a window that called DialogBox(). Which isn&#39;t that much of a problem, since it receives no keyboard input.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-868973">
				<div id="div-comment-868973" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Dan Bugglin</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101025-00/?p=12463#comment-868973">
			October 25, 2010 at 8:46 am</a>		</div>

		<p>Of course the code sample provided assumes a single-threaded environment. &nbsp;Problems arise with multithreading since now we can have asynchronous functions that return immediately and continue their work on another thread.</p>
<p>Though in this case it does sound like Norman didn&#39;t get that the message loop runs on the main thread (or more precisely, the calling thread that created the window, IIRC)&#8230; if you&#39;re running code you can&#39;t process messages at the same time.</p>
<p>Even if you&#39;ve just used .NET and not &quot;low-level&quot; Win32 you&#39;ve probably figured this out&#8230; if you do something processor intensive the UI stops responding (since you are too busy to handle window messages). &nbsp;The solution of course is to offload the work onto another thread.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-868993">
				<div id="div-comment-868993" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Henke37</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101025-00/?p=12463#comment-868993">
			October 25, 2010 at 8:58 am</a>		</div>

		<p>This reminds me of when people mix up function definitions and the function actually getting called. With some languages allowing functions to be defined at any point, some people get confused.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-869003">
				<div id="div-comment-869003" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">asf</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101025-00/?p=12463#comment-869003">
			October 25, 2010 at 8:59 am</a>		</div>

		<p>The dialog proc can SendMessage its parent, if they are on the same thread the WndProc is called directly, so while there might not be two message loops, you still have to handle this situation.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-869033">
				<div id="div-comment-869033" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">AsmGuru62</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101025-00/?p=12463#comment-869033">
			October 25, 2010 at 9:49 am</a>		</div>

		<p>Some dialogs behave differently &#8212; MFC ;) Message posted (not sent) to a dialog&#39;s parent will be received BEFORE dialog ends.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-869053">
				<div id="div-comment-869053" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ben Voigt [Visual C++ MVP]</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101025-00/?p=12463#comment-869053">
			October 25, 2010 at 9:58 am</a>		</div>

		<p>@AsmGuru: And why wouldn&#39;t it? &nbsp;The dialog&#39;s message loop processes the thread message queue. &nbsp;When you post a message to the parent (assuming it was created in the same thread), it goes in the same queue, so (barring some really messed up PeekMessage filters) it has to get processed before the dialog can receive newly posted messages. &nbsp;Medinoc has it exactly right, windows are owned by a thread, not by a message loop, and there&#39;s a single message queue per thread, not per message loop.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-869103">
				<div id="div-comment-869103" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Henning Makholm</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101025-00/?p=12463#comment-869103">
			October 25, 2010 at 10:51 am</a>		</div>

		<p>Clearly the confusion arises because the asker had not realized that the modal message loop inside DialogBox will happily dispatch messages to other windows if anyone posts them. One will not learn that just by reading the MSDN reference documentation for DialogBox itself &#8212; reasonably enough, every manpage cannot explain all the basics it presupposes &#8212; but &quot;About Dialog Boxes&quot; does clearly say so: &quot;To process messages for the modal dialog box, the system starts its own message loop, taking temporary control of the message queue for the entire application. When the system retrieves a message that is not explicitly for the dialog box, it dispatches the message to the appropriate window. If it retrieves a WM_QUIT message, it posts the message back to the application message queue so that the application&#39;s main message loop can eventually retrieve the message.&quot;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-dean-harding odd alt thread-odd thread-alt depth-1" id="comment-869193">
				<div id="div-comment-869193" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Dean+Harding' rel='external nofollow' class='url'>Dean Harding</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101025-00/?p=12463#comment-869193">
			October 25, 2010 at 3:49 pm</a>		</div>

		<p>For a second there, I thought Microsoft had started making strides on that time machine&#8230; we haven&#39;t heard from Norman here in a looong time!</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-869333">
				<div id="div-comment-869333" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Karellen</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101025-00/?p=12463#comment-869333">
			October 26, 2010 at 4:14 am</a>		</div>

		<p>Hmm&#8230;I&#39;d get confused here because I was under the impression that the main thread message loop was capable of dealing with messages for more than one window at the same time. I mean, doesn&#39;t this happen with non-modal dialog boxes?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-869283">
				<div id="div-comment-869283" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">santosh</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101025-00/?p=12463#comment-869283">
			October 25, 2010 at 10:52 pm</a>		</div>

		<p>@Henning Makholm, Nice guessing what the original question was :)</p>
<p>But, I think today&#39;s post was to point out that *Message Loop* is nothing but a bunch of function calls. &quot;So aren&#39;t there two or more message loops running in parallel?&quot; becomes &quot;So aren&#39;t there two or more functions running in parallel (in same thread)? </p>
<p>In some other parallel universe that may be true :)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-869343">
				<div id="div-comment-869343" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Chris Oldwood</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101025-00/?p=12463#comment-869343">
			October 26, 2010 at 6:03 am</a>		</div>

		<p>Problems that arise from code that does not handle re-entrancy (e.g. using static variables) can often manifest as problems that look similar to those you get with multi-threading. For example timer callbacks in your &#39;main window&#39; will still be dispatched whilst your &#39;modal dialog&#39; is displayed and to the unwary can appear as if you have two concurrent threads.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-alexcohn odd alt thread-odd thread-alt depth-1" id="comment-869373">
				<div id="div-comment-869373" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Alex+Cohn' rel='external nofollow' class='url'>Alex Cohn</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101025-00/?p=12463#comment-869373">
			October 26, 2010 at 7:35 am</a>		</div>

		<p>I believe that the term &quot;message loop&quot; is often misused, because usually it is handled by somebody else &#8211; MFC or .NET or is copied as is from some ancient HELLOWIN.C. We are more familiar with WinProc and message handlers, and sometimes we mistakenly refer to the latter as &quot;message loop&quot;.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-869503">
				<div id="div-comment-869503" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">640k</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101025-00/?p=12463#comment-869503">
			October 26, 2010 at 11:54 am</a>		</div>

		<blockquote><p>
  Does baz get called before bar returns?</p>
<p>  No, it does not.
</p></blockquote>
<p>Until DialogBox() is replaced with CreateDialog()</p>
<p>&#8230;to get a modeless window instead of a modal one. What can go wrong!?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-869383">
				<div id="div-comment-869383" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Medinoc</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101025-00/?p=12463#comment-869383">
			October 26, 2010 at 7:53 am</a>		</div>

		<p>@Karellen: You&#39;re not confused, you&#39;re *right*.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-869793">
				<div id="div-comment-869793" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Chris</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101025-00/?p=12463#comment-869793">
			October 27, 2010 at 5:36 pm</a>		</div>

		<p>640k gotcha there Raymond, as soon as you change Norm&#39;s question your answer falls apart.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-alexcohn odd alt thread-odd thread-alt depth-1" id="comment-869843">
				<div id="div-comment-869843" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Alex+Cohn' rel='external nofollow' class='url'>Alex Cohn</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101025-00/?p=12463#comment-869843">
			October 28, 2010 at 3:58 am</a>		</div>

		<p>@Chris, thanks for drawing my attention to it: the original question has a very different meaning, as far as I can understand. Norman was asking if there was some implementation details of how the modal dialog message loop works &#8211; because this message loop replaces the application message loop (which we supply ourselves, unless we rely on MFC or .NET or other framework). True, he made a wrong assumption that more than one message loop is handling the window messages. It&#39;s unfortunate that this misunderstanding distracted Raymond&#39;s attention from the real question.</p>
<div class="post">[<i>Only one message loop runs at a time. They do not run in parallel. That is a fundamental property of the sequential nature of the C language. Even if he misunderstood message loops, I don&#39;t see how you can come to the conclusion that the main function resumes execution before the subroutine returns. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-alexcohn even thread-even depth-1" id="comment-869853">
				<div id="div-comment-869853" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Alex+Cohn' rel='external nofollow' class='url'>Alex Cohn</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101025-00/?p=12463#comment-869853">
			October 28, 2010 at 4:04 am</a>		</div>

		<p>@640k, there is an even more subtle way of changing the way message loop works: MFC! When you create a modal dialog with MFC, it&#39;s actually a modeless dialog! Probably, this is what AsmGuru62 referred to, not what Ben Voigt made of his comment.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-870063">
				<div id="div-comment-870063" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Richard VJ</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101025-00/?p=12463#comment-870063">
			November 1, 2010 at 2:31 am</a>		</div>

		<p>asynchronous C#/VB in PDC2010 presentation, have a look <a rel="nofollow" target="_new" href="http://az8714.vo.msecnd.net/presentations/FT09-Hejlsberg.pptx" rel="nofollow">az8714.vo.msecnd.net/&#8230;/FT09-Hejlsberg.pptx</a></p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>