<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (11)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-223793">
				<div id="div-comment-223793" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">AC</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041109-00/?p=37353#comment-223793">
			November 9, 2004 at 7:56 am</a>		</div>

		<p>Am I the only one who thinks it a big mistake to allow a coding error like this (using a pointer vs. handle) to work most of the time? That&#8217;s just asking for the bug to show up. Instead of just saying &quot;don&#8217;t do this&quot; in the docs, why not actually enforce it? (i.e., don&#8217;t ever just return the pointer back from GlobalAlloc).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-223813">
				<div id="div-comment-223813" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">asdf</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041109-00/?p=37353#comment-223813">
			November 9, 2004 at 8:16 am</a>		</div>

		<p>Two questions, 1. Would the app verifier be able to spot that bug 2. is GMEM_MOVABLE&#8217;s semantics the same as GMEM_FIXED (and the GlobalFlags function removed from, etc.) in the Win64 api?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-223823">
				<div id="div-comment-223823" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://weblogs.asp.net/oldnewthing/' rel='external nofollow' class='url'>Raymond Chen</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041109-00/?p=37353#comment-223823">
			November 9, 2004 at 8:24 am</a>		</div>

		<ol>
<li>The problem is that the caller didn&#8217;t call any APIs; they just cast a handle to a pointer. AppVerifier has no hook into a compiler cast.
<p>2. Win64 is intended to be source-compatible with Win32. Changing function semantics would break source compatibility.</li>
</ol>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-223853">
				<div id="div-comment-223853" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://weblogs.asp.net/oldnewthing/' rel='external nofollow' class='url'>Raymond Chen</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041109-00/?p=37353#comment-223853">
			November 9, 2004 at 9:00 am</a>		</div>

		<p>Then again, the correct code raises an error too if you omit the cast:</p>
<p>HGLOBAL hglob = GlobalAlloc(GMEM_MOVEABLE, &#8230;);<br />
<br />DROPFILES* pdrop = GlobalLock(hglob);<br />
<br />pdrop-&gt;pFiles = &#8230;;<br />
<br />GlobalUnlock(hglob);<br />
<br />DragQueryFile(hglob, &#8230;);<br />
<br />error C2664: &#8216;DragQueryFileA&#8217; : cannot convert parameter 1 from &#8216;HGLOBAL&#8217; to &#8216;HDROP&#8217;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-223883">
				<div id="div-comment-223883" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://weblogs.asp.net/oldnewthing' rel='external nofollow' class='url'>Raymond Chen</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041109-00/?p=37353#comment-223883">
			November 9, 2004 at 12:40 pm</a>		</div>

		<p>Ben has the basic idea of the current implementation. But of course since it&#8217;s an implementation detail, it can change at any time so don&#8217;t go grovelling into undocumented data structures&#8230; Just call the GlobalLock function and be a good citizen.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-223903">
				<div id="div-comment-223903" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://flurf.net/' rel='external nofollow' class='url'>Eric TF Bat</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041109-00/?p=37353#comment-223903">
			November 9, 2004 at 2:46 pm</a>		</div>

		<p>&quot;C is a language that combines all the elegance and power of assembly language with all the readability and maintainability of assembly language.&quot;</p>
<p>Or, for even more rude quotes about this poor old language and its cousins, see <a target="_new" href="http://www.sysprog.net/quotec.html" rel="nofollow">http://www.sysprog.net/quotec.html</a>.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-223803">
				<div id="div-comment-223803" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://weblogs.asp.net/oldnewthing/' rel='external nofollow' class='url'>Raymond Chen</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041109-00/?p=37353#comment-223803">
			November 9, 2004 at 8:15 am</a>		</div>

		<p>If you pass GMEM_FIXED then you get a pointer back; if you pass GMEM_MOVEABLE then you get a handle. GlobalAlloc *must* return a pointer if the caller asked for a pointer.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-223833">
				<div id="div-comment-223833" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.1060.org/blogxter/publish/5' rel='external nofollow' class='url'>Steve Loughran</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041109-00/?p=37353#comment-223833">
			November 9, 2004 at 8:20 am</a>		</div>

		<p>I used to know all this nightmare. I used to know off by heart which operations yielded the thread (old: SendMessage, MessageBox(); new: COM ), because in the win16 days, any yield would move memory around. I even remember before STRICT was enabled, and everything mapped to the same UINT, so there was no guarantee that anything would work, especially as the GUI didnt do any param validation.</p>
<p>But I have erased all that stuff from my brain and filled it up with a different set of obscure coding facts. Long term, these will be equally irrelevant, but it is so good not to have to worry about pointers *at all*. </p>
<p>The miracle is that some pretty good stuff shipped in those days -remember the early Excel? It worked, it even had a macro language built into the cells that wasnt viewed as a virus transmission mechanism. I am not sure that we developers have given the users as much as they deserve, given how much easier our life has become, now that the cache of a CPU is greater than all the memory that Win16+himem could address.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-223843">
				<div id="div-comment-223843" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Tom</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041109-00/?p=37353#comment-223843">
			November 9, 2004 at 8:48 am</a>		</div>

		<p>If they&#8217;d have compiled with STRICT, they&#248;&#8217;d have got this error: </p>
<p>error C2664: &#8216;DragQueryFileA&#8217; : cannot convert parameter 1 from &#8216;struct _DROPFILES *&#8217; to &#8216;struct HDROP__ *&#8217; </p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-223873">
				<div id="div-comment-223873" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ben Hutchings</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041109-00/?p=37353#comment-223873">
			November 9, 2004 at 12:43 pm</a>		</div>

		<p>Ooh, I think I get it. A &quot;handle&quot; to a fixed block is a 16-byte-aligned pointer, but a real handle to a moveable block points to a pointer that&#8217;s offset 4 bytes into an 8-byte-aligned entry. So it&#8217;s just an alignment test:</p>
<p>LPVOID GlobalLock(HGLOBAL hMem)<br />
<br />{<br />
<br />    if (((DWORD)hMem &amp; 0xF) == 0)<br />
<br />        return (LPVOID)hMem;<br />
<br />    /* This may not be right for Win64. Also the real implementation may detect and handle overflow somehow. */<br />
<br />    InterlockedIncrement((DWORD *)hMem &#8211; 1);<br />
<br />    return *(LPVOID *)hMem;<br />
<br />}<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-223913">
				<div id="div-comment-223913" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Your Mom</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041109-00/?p=37353#comment-223913">
			November 9, 2004 at 10:40 pm</a>		</div>

		<p>Umm, Honey&#8230; I dont even know what your talking about&#8230; but just remember&#8230; thinking hard makes you mess yourself, remember that time you, nevermind&#8230;Love, Your Mom.</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>