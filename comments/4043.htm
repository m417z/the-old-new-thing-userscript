<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (29)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-1061753">
				<div id="div-comment-1061753" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blogs.msdn.com/michael.breyer_4000_s_2D00_i_2D00_e.de/ProfileUrlRedirect.ashx' rel='external nofollow' class='url'>michael.breyer@s-i-e.de</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130619-00/?p=4043#comment-1061753">
			June 19, 2013 at 7:23 am</a>		</div>

		<p>Hm, it works. But there must be any message, addressed to the Window of the application being debugged, which blocks the input queue. But which one could that be? The Thread of the application being debugged should not receive any messages simply during the call of AttachThreadInput. (The Debugger does not reach the BringWindowToTop call)</p>
<div class="post">[<em>Focus change messages, probably. -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1061783">
				<div id="div-comment-1061783" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blogs.msdn.com/michael.breyer_4000_s_2D00_i_2D00_e.de/ProfileUrlRedirect.ashx' rel='external nofollow' class='url'>michael.breyer@s-i-e.de</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130619-00/?p=4043#comment-1061783">
			June 19, 2013 at 7:34 am</a>		</div>

		<p>Thank you for your super fast answer.</p>
<p>So my assumption was correct, that the reason for the block is that the Debugger cannot retrieve any of its messages, because he cannot bypass a message which is addressed to the application?</p>
<p>(Read all of your blog-entries associated to this topic, during this week. Big thanks for all of them, at this point)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-maurits even thread-even depth-1" id="comment-1061793">
				<div id="div-comment-1061793" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Maurits+%5BMSFT%5D' rel='external nofollow' class='url'>Maurits [MSFT]</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130619-00/?p=4043#comment-1061793">
			June 19, 2013 at 7:53 am</a>		</div>

		<p>I&#39;m a little more concerned with &quot;why is this app doing all kinds of wacky stuff to try to get to be the foreground window.&quot; What&#39;s so special about this app that it should get to be the foreground window?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1061803">
				<div id="div-comment-1061803" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">What d'ya mean the bank is out of money??!</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130619-00/?p=4043#comment-1061803">
			June 19, 2013 at 8:11 am</a>		</div>

		<p>This post reminds me of a Simpson&#39;s reference&#8230; <a rel="nofollow" target="_new" href="http://www.youtube.com/watch?v=1OfBobGWYAg">http://www.youtube.com/watch</a> A building society must prove robust against imps. In this case I assume the operating system as a whole copes quite well.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1061813">
				<div id="div-comment-1061813" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130619-00/?p=4043#comment-1061813">
			June 19, 2013 at 8:33 am</a>		</div>

		<p>[Focus change messages, probably. -Raymond]</p>
<p>I think I&#39;ll remember this next time I have to disrupt debuggers. I&#39;d love to see the look on the guy&#39;s face when his debugger hangs.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1061823">
				<div id="div-comment-1061823" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">parkrrrr</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130619-00/?p=4043#comment-1061823">
			June 19, 2013 at 9:22 am</a>		</div>

		<p>@Joshua: This guy, at least, is using ntsd -d to debug your process and won&#39;t even blink.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1061833">
				<div id="div-comment-1061833" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ivan</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130619-00/?p=4043#comment-1061833">
			June 19, 2013 at 9:25 am</a>		</div>

		<p>Why the hang often happens if the second application is not a debugger? Of course, in theory the second app is not designed to handle attached thread input, so anything can happen. But what are actual reasons for hang, if, for example, the second app is just showing message box at the time of BringWindowToTop call? You know, all this AttachThreadInput-related stuff is there, in code samples, only to steal focus from 3rd-party apps, and it is not clear why _sometimes_ they are not handling it well.</p>
<div class="post">[<em>I thought I spent a whole week discussing this. See &quot;Get into the same jail free&quot;. -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-dwalker-wk odd alt thread-odd thread-alt depth-1" id="comment-1061893">
				<div id="div-comment-1061893" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/DWalker' rel='external nofollow' class='url'>DWalker</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130619-00/?p=4043#comment-1061893">
			June 19, 2013 at 10:57 am</a>		</div>

		<p>Re bank tellers and withdrawing money: &nbsp;Remember, analogies are like feathers on a snake. &nbsp;:-)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1061913">
				<div id="div-comment-1061913" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Sven2</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130619-00/?p=4043#comment-1061913">
			June 19, 2013 at 11:04 am</a>		</div>

		<p>Why is this dangerous trick of AttachThreadInput so popular to get focus? Wouldn&#39;t it be much cleaner to just do something like CreateRemoteThread({SetForegroundWindow(mywindow)}) in the application that currently has focus?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1061933">
				<div id="div-comment-1061933" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Myria</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130619-00/?p=4043#comment-1061933">
			June 19, 2013 at 11:30 am</a>		</div>

		<p>The biggest lesson of Raymond&#39;s blog has always been to not touch stuff that isn&#39;t yours. &nbsp;Don&#39;t mess with other programs &#8211; keep to yourself. &nbsp;Relying upon the precise behavior of another application is bad news.</p>
<p>CreateRemoteThread is far more of a hack than AttachThreadInput. &nbsp;You&#39;re injecting assembly code at that point.</p>
<p>As for annoying debuggers, good reverse engineers won&#39;t be fazed at all. &nbsp;They can just make the AttachThreadInput API do nothing anyway.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1061963">
				<div id="div-comment-1061963" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130619-00/?p=4043#comment-1061963">
			June 19, 2013 at 12:19 pm</a>		</div>

		<p>@Myria: I&#39;ve got something worse for him. You see, you warn once with a blatent goaway, then you play nasty.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1061973">
				<div id="div-comment-1061973" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">parkrrrr</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130619-00/?p=4043#comment-1061973">
			June 19, 2013 at 12:41 pm</a>		</div>

		<p>And then all of the people who have legitimate reasons to be debugging your application, like those of us who attempt to pay your taxes for you by adding the accessibility you couldn&#39;t be bothered with, shrug our shoulders and counsel our customers to buy literally anything else.</p>
<p>I&#39;m looking at you, popular voice chat application with overly-paranoid developers and a new corporate parent who should know better.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1061993">
				<div id="div-comment-1061993" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Gabe</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130619-00/?p=4043#comment-1061993">
			June 19, 2013 at 1:16 pm</a>		</div>

		<p>I think you can refine the analogy by adding that you&#39;re taking a random stranger and forcing them at gunpoint to put your savings into a joint dual-signature account, whereupon you&#39;re arrested for using the gun. At that point, you cannot get your money out because you&#39;ve been arrested and the stranger can&#39;t get his money out either because you&#39;ve been arrested.</p>
<p>The stranger can&#39;t even bail you out to get your signature, because in order to get the bail money he needs your signature!</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1062003">
				<div id="div-comment-1062003" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Christian</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130619-00/?p=4043#comment-1062003">
			June 19, 2013 at 1:48 pm</a>		</div>

		<p>I really don&#39;t like programs to steal focus and I have no plan to ever write one.</p>
<p>But this &quot;forbidden&quot; topic is somewhat interesting. In the linked posts there was much talk about SwitchToThisWindows, but allegedly that function does not magically bring an obnoxious application to the front and it minds focus rules.</p>
<p>Can someone confirm that this crazy, dangerous method of using AttachThreadInput is &quot;the forbidden trick&quot; that those programs use to get to the front and steal focus? Or do they just turn the protection off in the registry temporary (which is the well known global state for local solution problem)</p>
<p>If indeed AttachThreadInput+BringWindowToTop is the secret trick, then clearly the crowd who say that it must not ever be talked about can have a piece of mind: Only really crazy software would do that (which means 90% of it ;-) )</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-jan-ringos even thread-even depth-1" id="comment-1062013">
				<div id="div-comment-1062013" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Jan+Ringo%C5%A1' rel='external nofollow' class='url'>Jan Ringoš</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130619-00/?p=4043#comment-1062013">
			June 19, 2013 at 2:14 pm</a>		</div>

		<p>[John Doe] What if the foreground window&#39;s application is running at a higher integrity level?</p>
<p>I, for one, wrote myself a simple program, that waits until some period of idleness elapses, and then starts cycling between console windows, movie-style. Except it works only until the period, where it is allowed to set foreground window, elapses. I couldn&#39;t find a way how to do that the proper way, so it sits between my suspended projects waiting if it ever will be resurrected. Yes, I do often use several console windows with different output.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-maurits odd alt thread-odd thread-alt depth-1" id="comment-1061743">
				<div id="div-comment-1061743" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Maurits+%5BMSFT%5D' rel='external nofollow' class='url'>Maurits [MSFT]</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130619-00/?p=4043#comment-1061743">
			June 19, 2013 at 7:19 am</a>		</div>

		<p>Nitpick: both the application being debugged and the *application in the foreground* will freeze. (This is very likely, but not certainly, the debugger.)</p>
<div class="post">[<em>I&#39;m walking through the specific scenario where you are debugging the application (&quot;If you try to step over the <code>Attach&shy;&shy;Thread&shy;&shy;Input</code> call in the debugger&quot;), so it is implied that the debugger is the foreground window. -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-maurits even thread-even depth-1" id="comment-1062023">
				<div id="div-comment-1062023" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Maurits+%5BMSFT%5D' rel='external nofollow' class='url'>Maurits [MSFT]</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130619-00/?p=4043#comment-1062023">
			June 19, 2013 at 2:30 pm</a>		</div>

		<p>&gt; Jan Ringos</p>
<p>If your simple program is the foreground window, it can set any other app to the foreground window. So one solution would be to have it include itself in the cycle, refreshing its &quot;allowed to set foreground window&quot; privileges.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1062033">
				<div id="div-comment-1062033" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130619-00/?p=4043#comment-1062033">
			June 19, 2013 at 3:42 pm</a>		</div>

		<p>&gt; SwitchToThisWindow &#8230; does not magically bring &#8230; application to the front</p>
<p>I&#39;m told it used to prior to XP. (End-run in 98, ME, 2000).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1061923">
				<div id="div-comment-1061923" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">John Doe</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130619-00/?p=4043#comment-1061923">
			June 19, 2013 at 11:28 am</a>		</div>

		<p>@Sven2, is thread injection any cleaner?</p>
<p>What if the foreground window&#39;s application is running at a higher integrity level?</p>
<p>Or again, what&#39;s so special about any application that it requires to interrupt whatever you&#39;re doing in such way? You may be typing a password, or simply a message/phrase, followed by Return and *BAM*, you&#39;ve just clicked the default button of whatever was it that got in your way.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1062053">
				<div id="div-comment-1062053" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blogs.msdn.com/michael.breyer_4000_s_2D00_i_2D00_e.de/ProfileUrlRedirect.ashx' rel='external nofollow' class='url'>michael.breyer@s-i-e.de</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130619-00/?p=4043#comment-1062053">
			June 19, 2013 at 11:38 pm</a>		</div>

		<p>Hello Raymond,</p>
<p>Sorry for misusing your Blog &#8211; Comment List as a chat, but i would be grateful if you would answer my question to you within comment no. 3. That bothered me yesterday all evening.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1062063">
				<div id="div-comment-1062063" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">@Allgaeuer</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130619-00/?p=4043#comment-1062063">
			June 20, 2013 at 1:25 am</a>		</div>

		<p>Didn&#39;t you claim to have read the answer already right after asking the question?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1062073">
				<div id="div-comment-1062073" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blogs.msdn.com/michael.breyer_4000_s_2D00_i_2D00_e.de/ProfileUrlRedirect.ashx' rel='external nofollow' class='url'>michael.breyer@s-i-e.de</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130619-00/?p=4043#comment-1062073">
			June 20, 2013 at 2:42 am</a>		</div>

		<p>No, i am absolutly uncertain about my assumption, that any message, addressed to the Window of the application being debugged, is (for sure) the reason for the unresponding Windows. I took up my interest to this topic just to express my gratitude.</p>
<p>I also don&#39;t understand the question of Ivan. I mean, the &quot;Get Into the Same Jail card&quot;-article states that the thread which owns the forground Window has to process is WM_ACTIVATE message. There is no reason why an application which shows a message box should be unable to do this. Even if there is a modal dialog, the thread still has to pump messages within the routine&#8230; :(</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1062093">
				<div id="div-comment-1062093" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Neil</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130619-00/?p=4043#comment-1062093">
			June 20, 2013 at 3:53 am</a>		</div>

		<p>Of course, there are much easier ways to hang your debugger. Copying from the debuggee and accidentally pasting into the debugger is the way I normally fail.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-dwalker-wk odd alt thread-odd thread-alt depth-1" id="comment-1062113">
				<div id="div-comment-1062113" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/DWalker' rel='external nofollow' class='url'>DWalker</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130619-00/?p=4043#comment-1062113">
			June 20, 2013 at 7:30 am</a>		</div>

		<p>@Gabe: &nbsp;That was good&#8230; maybe you could work a getaway driver in there somehow. &nbsp;:-)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1062193">
				<div id="div-comment-1062193" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130619-00/?p=4043#comment-1062193">
			June 20, 2013 at 8:25 am</a>		</div>

		<p>@Jan Ringoš: I would have told you to change the setting &quot;prevent applications from stealing focus&quot; but a Google search tells me that option was removed from the code starting in Windows 7.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1062103">
				<div id="div-comment-1062103" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">John Doe</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130619-00/?p=4043#comment-1062103">
			June 20, 2013 at 4:40 am</a>		</div>

		<p>@Jan Ringoš, you see, that&#39;s no different from the stated problem. Yet again, what&#39;s so special about your application?</p>
<p>The chance that the user will press Return by about the time your application steals the focus is still (relatively) huge. Imagine, he/she might be reading the text in a message box, deciding what to do before doing anything (your idle time), then do it (just a tiny bit after you stole focus and got ahead of everything else).</p>
<p>The taskbar will blink if you use SetForegroundWindow, just use it and let the user decide when he/she wants to switch to it.</p>
<p>If you&#39;re doing some nuclear power plant monitoring and controlling system, then you should have physical bright almost blinding lights of various colors and loud almost deafening speakers for things that really *really* REALLY require your attention.</p>
<p>Or turn the computer almost &quot;unusable&quot;, to the point where it&#39;s a kiosk and you probably shouldn&#39;t have much problem with focus (or chat applications, for that matter).</p>
<p>@Allgaeuer, if two threads share the same input queue, any generic message pumping loop will most likely block when the other thread blocks. There&#39;s no &quot;for sure&quot; that the block is due to shared input queues, but Of Course™, you can debug the debugger to confirm it.</p>
<p>@Neil, good point. An application might have a handler for when the current clipboard&#39;s content is requested. When pasting from a debugged application that is suspended, pasting will block until the debugged application is resumed. If you paste in the debugger, you can&#39;t resume.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1062403">
				<div id="div-comment-1062403" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">kme</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130619-00/?p=4043#comment-1062403">
			June 20, 2013 at 5:37 pm</a>		</div>

		<p>So how did debugging work in older versions of Windows where there was just one global input queue?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1062453">
				<div id="div-comment-1062453" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blogs.msdn.com/bc_5F00_programming_4000_hotmail.com/ProfileUrlRedirect.ashx' rel='external nofollow' class='url'>bc_programming@hotmail.com</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130619-00/?p=4043#comment-1062453">
			June 20, 2013 at 9:19 pm</a>		</div>

		<p>@kme:</p>
<p>Not very well, from what I remember&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1062513">
				<div id="div-comment-1062513" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130619-00/?p=4043#comment-1062513">
			June 21, 2013 at 11:00 am</a>		</div>

		<p>@kme: I&#39;m pretty sure there was in the 16 bit days some kind of way for the system to notice because it didn&#39;t hang up my 16 bit debugger to step into the message loop, put breakpoints in WndProc, etc.</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>