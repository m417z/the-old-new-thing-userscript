<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (16)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1 parent" id="comment-1279985">
				<div id="div-comment-1279985" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Jonimoose</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170113-00/?p=95185#comment-1279985">
			January 13, 2017 at 9:25 am</a>		</div>

		<p>What is unclear to me about all this is why you would want to use most of these options. 99% of the time I would think you either want the memory or you don&#8217;t. I can see a few cases where  you could use the old pages as a cache for data you can recreate and are unsure if you are going to want again.</p>

		
				</div>
		<ol class="children">
		<li class="comment odd alt depth-2" id="comment-1280105">
				<div id="div-comment-1280105" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Pseudonym</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170113-00/?p=95185#comment-1280105">
			January 14, 2017 at 3:54 am</a>		</div>

		<p>I think that&#8217;s precisely it. Some data is inherently cache-like, in the sense that it can be recreated. Some programs, if they want to be good citizens, would like to indicate that cache-like data can be dumped if the OS really needs to free up memory. Most Windows programs are not good citizens, of course&#8230;</p>
<p>Having said that, I&#8217;d bet that whoever asked for OfferVirtualMemory to be added wasn&#8217;t an application. More likely a service or a driver.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment even thread-odd thread-alt depth-1 parent" id="comment-1279995">
				<div id="div-comment-1279995" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">nathan_works</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170113-00/?p=95185#comment-1279995">
			January 13, 2017 at 9:26 am</a>		</div>

		<p>So I&#8217;m a bit slow, but I read the pre-fetch for memory mapped files .. What would the use for some of the other functionality be ? (ie why tell the OS you don&#8217;t want this page or that page of memory any more ? If you&#8217;re writing your own memory manager/cache/pool ? )</p>

		
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-mngoldeneagle odd alt depth-2 parent" id="comment-1280015">
				<div id="div-comment-1280015" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/MNGoldenEagle' rel='external nofollow' class='url'>MNGoldenEagle</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170113-00/?p=95185#comment-1280015">
			January 13, 2017 at 11:31 am</a>		</div>

		<p>I imagine this would be useful for garbage collectors and other applications that do advanced heap management.</p>

		
				</div>
		<ol class="children">
		<li class="comment even depth-3" id="comment-1280055">
				<div id="div-comment-1280055" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170113-00/?p=95185#comment-1280055">
			January 13, 2017 at 2:39 pm</a>		</div>

		<p>*ding*ding*ding* We have a winner!</p>
<p>Garbage collection + paging -&gt; thrashing unless the GC can tell the memory manager to not care anymore.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment odd alt thread-even depth-1 parent" id="comment-1280025">
				<div id="div-comment-1280025" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Yukkuri</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170113-00/?p=95185#comment-1280025">
			January 13, 2017 at 12:26 pm</a>		</div>

		<p>Where does the gargbage come from in those cases? Hopefully not from some other process&#8230;</p>

		
				</div>
		<ol class="children">
		<li class="comment even depth-2 parent" id="comment-1280065">
				<div id="div-comment-1280065" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Richard</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170113-00/?p=95185#comment-1280065">
			January 13, 2017 at 2:45 pm</a>		</div>

		<p>I believe that by &#8220;garbage&#8221; he means &#8220;gone to the great ramdisk in the sky&#8221;.<br />
 Whatever you&#8217;d put there before has been destroyed, and you get back a demand-zero&#8217;d page.</p>
<p>Though even on a modern machine some memory is insecure &#8211; many (possibly most) GPU drivers don&#8217;t zero memory on allocation, so it&#8217;s relatively easy to accidentally get a texture memory that contains private data like emails from Outlook!<br />
With tecture data the original format and layout are rather simple to work out as well because there are so few possibilities.</p>

		
				</div>
		<ol class="children">
		<li class="comment odd alt depth-3 parent" id="comment-1280075">
				<div id="div-comment-1280075" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Harry Johnston</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170113-00/?p=95185#comment-1280075">
			January 13, 2017 at 3:33 pm</a>		</div>

		<p>I think the only guarantee is that the page you get back won&#8217;t contain data from other processes.  That doesn&#8217;t rule out random data taken from your own process.  (I have no idea whether Windows actually does that, I&#8217;m just saying I don&#8217;t think it would violate the contract.)</p>

		
				</div>
		<ol class="children">
		<li class="comment even depth-4 parent" id="comment-1280115">
				<div id="div-comment-1280115" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.silverbacknetworks.tech' rel='external nofollow' class='url'>Joshua Bowman</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170113-00/?p=95185#comment-1280115">
			January 14, 2017 at 4:03 am</a>		</div>

		<p>I doubt there&#8217;s even that guarantee. If it doesn&#8217;t say it&#8217;ll give you your own garbage, there&#8217;s no reason to assume it will; just assume it&#8217;s like an uninitialized stack variable and can contain anything at all. One of the features of the new APIs is that they maximize performance; you can zero or not zero as you need to, or try to read whatever was there. Your choice.</p>

		
				</div>
		<ol class="children">
		<li class="comment odd alt depth-5" id="comment-1280125">
				<div id="div-comment-1280125" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Harry Johnston</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170113-00/?p=95185#comment-1280125">
			January 15, 2017 at 8:10 pm</a>		</div>

		<p>If it gave you pages from a process you&#8217;re not entitled to have access to, that would violate the security model.  I guess that&#8217;s not technically the same thing as a violation of the API contract, though.  From the programmer&#8217;s point of view it doesn&#8217;t make any difference, garbage is garbage and if your program&#8217;s behaviour varies depending on what content you&#8217;re given, that&#8217;s a bug.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment byuser comment-author-fredericmagnyf even depth-4 parent" id="comment-1280135">
				<div id="div-comment-1280135" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Medinoc' rel='external nofollow' class='url'>Medinoc</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170113-00/?p=95185#comment-1280135">
			January 16, 2017 at 2:50 am</a>		</div>

		<p>Well technically I guess it could also give you memory from other processes of the same user (and integrity level) without it being a breach of security, couldn&#8217;t it?</p>

		
				</div>
		<ol class="children">
		<li class="comment odd alt depth-5" id="comment-1280285">
				<div id="div-comment-1280285" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Harry Johnston</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170113-00/?p=95185#comment-1280285">
			January 17, 2017 at 2:06 pm</a>		</div>

		<p>True.  Although I suspect that would be a layering violation, because it means the memory manager would have to know about the security model.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment even depth-2" id="comment-1280145">
				<div id="div-comment-1280145" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Austin Donnelly (MSFT)</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170113-00/?p=95185#comment-1280145">
			January 16, 2017 at 6:33 am</a>		</div>

		<p>Yukkuri&#8217;s questions is still a good one: in practice, where does the garbage come from?</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1280165">
				<div id="div-comment-1280165" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://nbtparse.org' rel='external nofollow' class='url'>Kevin</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170113-00/?p=95185#comment-1280165">
			January 16, 2017 at 5:33 pm</a>		</div>

		<p>The Unix counterpart is called posix_madvise(2) (unless you just use free(3)).  It does a number of things in this vein, including both eviction and prefectching, as well as advising on random vs. sequential access (i.e. turning cache read ahead off or increasing it).  However, it has no impact on program semantics (i.e. any implementation must be semantically equivalent to the null implementation).  Not all implementations actually bother with all of the functionality POSIX specifies, which has no effect on correctness and is therefore explicitly allowed.  Linux in particular ignores (via the glibc wrapper) the &#8220;please evict this memory&#8221; signal because the underlying syscall has different semantics (see below).</p>
<p>Unix also has madvise(2), but there are a lot of different implementations with varying semantics, and some systems don&#8217;t have it at all, so the POSIX people just threw their hands up and invented a new system call with &#8220;posix&#8221; in front of it as a distinguishing mark.  madvise(2) still exists on Linux (and probably other systems) with semantics that do affect correctness.  It can also be used to do a variety of surprisingly weird things to your memory such as case-by-case vfork(2)-like semantics.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1 parent" id="comment-1280455">
				<div id="div-comment-1280455" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">felixb</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170113-00/?p=95185#comment-1280455">
			January 18, 2017 at 3:24 pm</a>		</div>

		<p>&gt; Windows 8 added the MEM_RESET_UNDO flag which says, &#8220;Hey, um, I changed my mind. I don&#8217;t want you to discard the contents of the memory after all.&#8221; If the memory hasn&#8217;t yet been discarded, then it is &#8220;rescued&#8221; and behaves like normal memory again. But if the memory has already been discarded, then the memory manager will say, &#8220;Sorry, too late.&#8221; </p>
<p>What inspired this?</p>

		
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-oldnewthing bypostauthor odd alt depth-2" id="comment-1280595">
				<div id="div-comment-1280595" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Raymond+Chen+-+MSFT' rel='external nofollow' class='url'>Raymond Chen - MSFT</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170113-00/?p=95185#comment-1280595">
			January 19, 2017 at 9:06 am</a>		</div>

		<p>If the cache is still valid, why not use it?</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>