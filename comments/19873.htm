<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (36)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-691723">
				<div id="div-comment-691723" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">ton</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20081211-00/?p=19873#comment-691723">
			December 11, 2008 at 11:38 am</a>		</div>

		<p>Unfortunately but true there are some who shouldn&#8217;t be allowed to use computers much less program them.</p>
<p>The number one question for these boneheads: Did you really test this on your own machine? In most cases the answer is no.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-691743">
				<div id="div-comment-691743" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">ShimCity</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20081211-00/?p=19873#comment-691743">
			December 11, 2008 at 1:06 pm</a>		</div>

		<p>Reading the post regarding the change of system time (and forgive me if it&#8217;s inappropriate to post here as it was nothing to do with you), it seems that the shim put in place is just asking for trouble&#8230;</p>
<p>One app hangs because it enters an infinite loop by firing an event in the handler for that event and the solution is to not fire the event for any app? What about my shiny new app that depends on this event firing when I update the TimeZone? Where is this documented?</p>
<p>I know the app compatibility issue is a thorny one but hacks like this do seem extreme.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-691753">
				<div id="div-comment-691753" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://leonardo-schenkel.blogspot.com' rel='external nofollow' class='url'>Leonardo Brondani Schenkel</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20081211-00/?p=19873#comment-691753">
			December 11, 2008 at 1:10 pm</a>		</div>

		<p>ShimCity: The way I understood it they didn&#8217;t do it globally but used application compatibility functionality &quot;which provides a way to implement per-application compatibility workarounds without polluting the core Windows code base&quot;, so the workaround is only in effect for that specific application.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-691773">
				<div id="div-comment-691773" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">ShimCity</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20081211-00/?p=19873#comment-691773">
			December 11, 2008 at 1:23 pm</a>		</div>

		<p>Oops&#8230; yeah, I missed the per-application bit. Ok, that makes more sense.</p>
<p>Don&#8217;t mind me, carry on.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-691833">
				<div id="div-comment-691833" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">pablo</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20081211-00/?p=19873#comment-691833">
			December 11, 2008 at 2:29 pm</a>		</div>

		<p>It should be SOP that Windows Error Reporting sends an email to the app developers with a link to this blog when it detects a crash that is linked to evil programming practices.</p>
<p>&quot;Check for Problems &amp; Solutions&quot;</p>
<p>&quot;Send snarky email to App developers&quot;</p>
<p>&quot;Stab developer in the eye&quot;</p>
<p>..</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-691863">
				<div id="div-comment-691863" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Duran</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20081211-00/?p=19873#comment-691863">
			December 11, 2008 at 3:38 pm</a>		</div>

		<p>Does UAC make this better? &nbsp;Like, if the program tried to modify global hardware settings, the user would at least get a prompt?</p>
<div class=post>[<i>Has no effect. You already said, &#8220;Let this application make global configuration changes&#8221; when you approved letting the uninstaller run. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-691893">
				<div id="div-comment-691893" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Mihai</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20081211-00/?p=19873#comment-691893">
			December 11, 2008 at 5:54 pm</a>		</div>

		<p>It is also very important that the desired task can be accomplished without changing any global setting.</p>
<p>Example: formatting a date using an alternate calendar. See <a rel="nofollow" target="_new" href="http://blogs.msdn.com/michkap/archive/2005/01/14/353216.aspx" rel="nofollow">http://blogs.msdn.com/michkap/archive/2005/01/14/353216.aspx</a></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-691903">
				<div id="div-comment-691903" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Dan</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20081211-00/?p=19873#comment-691903">
			December 11, 2008 at 6:04 pm</a>		</div>

		<p>Forgive me if this isn&#8217;t 100% accurate, I haven&#8217;t run Vista in awhile (my only computer is too slow for my favorite games on XP, never mind my favorite games on Vista) but I did a bit of research at one point in trying to make my own apps UAC-aware.</p>
<p>Programs have to be UAC aware to trigger UAC prompts. &nbsp;If not, the operations they are trying will simply fail as they would on a pre-Vista Limited User account.</p>
<p>Unless you launch them as administrator, then they would have full access a la pre-Vista Administrator account.</p>
<p>UAC is a tool meant for use in new, Limited-User-aware Vista programs. &nbsp;Older programs can&#8217;t take advantage of it&#8230; although Vista will try to detect programs that are trying to use Administrator-only functionality and that are crashing or failing because of it and will offer to reexecute them elevated for you.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-691913">
				<div id="div-comment-691913" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Angry coward</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20081211-00/?p=19873#comment-691913">
			December 11, 2008 at 7:10 pm</a>		</div>

		<p>Actually UAC doesn&#8217;t solve any &#8220;problem&#8221; at all. If anything, things are worse than they were in XP, since you have less control over what programs can do (for example, installers can and will force you to run them as admin).</p>
<p>UAC alleviates the problem of &#8220;a running app got compromised over the network&#8221;, but it&#8217;s a tossup anyway since if the limited user space is compromised it&#8217;s very easy to trick the user into elevating the malware (for example next time he requests something that does require elevation &#8211; and no, code singing won&#8217;t help you there, since &#8220;regedit /S evil.reg&#8221; displays the very same UAC prompt as just &#8220;regedit&#8221;, unless you click on &#8220;details&#8221;, and even doing that isn&#8217;t 100% safe). Low integrity processes (ala iexplore or chrome) are the right answer to this.</p>
<p>The whole UAC thing is pretty much useless if you end up having to run each vendor&#8217;s installer as admin. It&#8217;s game over by then: they&#8217;ll litter the system folders, the registry, many will even install their own system service because they have some stuff that has to run elevated (and you can hope the service is secure from elevation attacks, which 99% of the times it won&#8217;t be because nobody is going to complain&#8230;)</p>
<p>It&#8217;s a mess, still a mess, and will forever be a mess. You could have some kind of &#8220;managed&#8221; installer which restricts what installations can do, and as a incentive you could make its UAC prompt less menacing and annoying, but most of the big vendors would probably ignore it anyway. Sigh.</p>
<div class=post>[<i>I admire how virtually any topic can be turned into a rant about UAC. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-691923">
				<div id="div-comment-691923" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Kaenneth</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20081211-00/?p=19873#comment-691923">
			December 11, 2008 at 7:13 pm</a>		</div>

		<p>&quot;I wonder if their uninstaller reformats the hard drive.&quot;</p>
<p>That&#8217;s virtually been done before&#8230;</p>
<p>There was a game that shipped with an uninstall bug that could obliterate your OS install.</p>
<p><a rel="nofollow" target="_new" href="http://www.rpgfan.com/news/2001/1416.html" rel="nofollow">http://www.rpgfan.com/news/2001/1416.html</a></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-691943">
				<div id="div-comment-691943" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.visi.com/~nathan' rel='external nofollow' class='url'>Nathan Mates</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20081211-00/?p=19873#comment-691943">
			December 11, 2008 at 8:07 pm</a>		</div>

		<p>I play a bunch of games, but usually prefer to replace the soundtrack with my own music, played thru Winamp in the background. (Others may prefer their own music players.)</p>
<p>I tried this with <font color=red>Game&nbsp;X</font>, the original game (though w/ the expansion packs installed.) My wife didn&#8217;t like the sound effects&#8211; mainly the <font color=red>sound effect from Game&nbsp;X</font>&#8212; and asked me to turn that down. So, I clicked on the icon to turn off sound.</p>
<p>Given that I&#8217;m posting on this thread, you should be able to guess what happened. <font color=red>Game&nbsp;X</font> turned the global volume setting to 0, killing the game&#8217;s sound efx. And my music. Not cool.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-691823">
				<div id="div-comment-691823" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.codingadventures.com' rel='external nofollow' class='url'>Robert 'Groby' Blum</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20081211-00/?p=19873#comment-691823">
			December 11, 2008 at 2:24 pm</a>		</div>

		<p>Of course, you *could* make the case that the OS shouldn&#8217;t make it so easy to change global state in the first place&#8230;</p>
<p>How many programs outside of the control panel really should be allowed to change system wide settings?</p>
<p>(Yes, I understand the reasons why it is like it is, history and all &#8211; but this is the result of that status.)</p>
<div class=post>[<i>You&#8217;re saying that, for example, no program should be allowed to change the time? What if you&#8217;re writing a program whose job is to synchronize the time with another source? -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-691973">
				<div id="div-comment-691973" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ian</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20081211-00/?p=19873#comment-691973">
			December 12, 2008 at 4:34 am</a>		</div>

		<p>As a couple of people have already commented, there do seem to be a few instances in Windows where a global setting is the only way to achieve the desired end.</p>
<p>I agnoised over such a problem recently. The bug report said that my application&#8217;s save dialog was overwriting files with a different extension. This has been discussed here before &#8211; it&#8217;s the in-line autocompletion feature of Explorer that is to blame (along with inattention of the user and the user not understanding that a setting in Windows Internet Settings affects my application&#8217;s save dialog).</p>
<p>It is obnoxious for an application to change a global setting, but this seemed to be the only way to solve the problem.</p>
<p>In the end, we modified our application to read the value of HKCUSoftwareMicrosoftWindowsCurrentVersionExplorerAutoCompleteAppend Completion and then to set it to &#8216;no&#8217; immediately before showing the Save dialog, and then to restore the original value immediately after.</p>
<p>It isn&#8217;t perfect &#8211; if someone leaves our save dialog up and meanwhile chooses Save in another application then they get our application&#8217;s temporary setting.</p>
<p>Of course the best way to solve this problem is to educate the user, but that is easier said than done.</p>
<p>Does anyone have any better ideas?</p>
<div class=post>[<i>Um, register your own (null) autocomplete on the edit control. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-691953">
				<div id="div-comment-691953" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ben Cooke</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20081211-00/?p=19873#comment-691953">
			December 11, 2008 at 9:39 pm</a>		</div>

		<p>A related problem is when API/Library/Application developers design the system in such a way that you *need* to use a global setting to achieve a particular result.</p>
<p>(This wasn&#8217;t the cause in this case, of course. But a number of times I&#8217;ve found myself using hacks with locking and such to work around functions that use global variables for things that ought to have been arguments without breaking other callers that might depend on the setting being different. It&#8217;s one of those things that comes up with enough frequency to make me hate my job sometimes.)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-691983">
				<div id="div-comment-691983" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Dog</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20081211-00/?p=19873#comment-691983">
			December 12, 2008 at 5:47 am</a>		</div>

		<p>Of course third parties aren&#8217;t the only applications that take that particular setting too far&#8230;</p>
<p>If you &quot;deny access&quot; to Windows Media Center (at least on Vista), then it absolutely refuses to run, displaying a cryptic error message instead.</p>
<p>When I said &quot;deny access&quot; I meant, &quot;don&#8217;t use this application to open any documents or autoplay anything ever&quot;, not &quot;don&#8217;t let me run this program even if I specifically ask for it&quot;.</p>
<p>So I either have to put up with Media Center being offered as an option for opening any vaguely media-related file, or have no access to it at all.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-691993">
				<div id="div-comment-691993" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">pingpong</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20081211-00/?p=19873#comment-691993">
			December 12, 2008 at 6:56 am</a>		</div>

		<p>@Ian: so the inline autoocompletion works OK for this user in other apps, or your program is the only one [s]he is saving files from?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-692003">
				<div id="div-comment-692003" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Igor Levicki</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20081211-00/?p=19873#comment-692003">
			December 12, 2008 at 7:40 am</a>		</div>

		<blockquote><p>
  &gt;The guidelines for the use of this control panel recommend that in response to the Remove access command, media players should remove their user interface entry points (such as shortcuts on the Start menu and notification icons), disable their autoplay feature, and generally act as if they weren&#8217;t there.&lt;&lt;
</p></blockquote>
<p>Great to know the rule which WMP11 in Vista ignores and continues launching and hijacking media file types.</p>
<p>I just had to delete some of its keys from registry to keep WMP11 from starting when I select Open With&#8230;-&gt;VLC Media Player from a video file context menu.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-692013">
				<div id="div-comment-692013" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ian</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20081211-00/?p=19873#comment-692013">
			December 12, 2008 at 8:03 am</a>		</div>

		<p>@pingpong: Whether or not inline autocompletion causes problems for other applications, it is not a good enough reason for my application to hijack a global setting. I think this was the point of the original article.</p>
<p>As it happens, my application is more prone to this kind of problem than most because users tend to create several files with the same basename but a different extension.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-692043">
				<div id="div-comment-692043" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://a.coward@slashdot.org' rel='external nofollow' class='url'>Anonymous Coward</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20081211-00/?p=19873#comment-692043">
			December 12, 2008 at 8:42 am</a>		</div>

		<p>Personally, I think this part of the Control Panel is one of the more useless parts of Windows.</p>
<p>It allows you to disable access, but doesn&#8217;t uninstall the applications &#8211; why would I want to do that? The sensible option &#8211; uninstall &#8211; is available elsewhere.</p>
<p>And that applies to all the options there: they are all configurable elsewhere. Add to that that most programs don&#8217;t notify this part of the Control Panel that they&#8217;re installed and that in fact the Control Panel itself only works in a half-hearted sort of way, and the result isn&#8217;t much use. What for example happens if I switch from ‘Keep my current &#8230;’ to whatever is my current &#8230; ? Maybe nothing happens, but there&#8217;s no way to be certain, no way to ask the applet how the current is different.</p>
<p>I think the applet is there solely for legal reasons. I wish I could remove it.</p>
<div class=post>[<i>&#8220;Keep my current&#8221; = &#8220;Make no changes&#8221;; this is not the same as picking a new one if you have mixed ownership (e.g. Program&nbsp;A owns mp3 but Program&nbsp;B owns avi). There is a system policy for hiding the control panel if it so offends you. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-692113">
				<div id="div-comment-692113" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Alexandre Grigoriev</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20081211-00/?p=19873#comment-692113">
			December 12, 2008 at 12:38 pm</a>		</div>

		<p>That &#8220;program access and defaults&#8221; is half-baked stuff. Why can&#8217;t I have different defaults for different users on my computer? Why an user can&#8217;t set his/her own preference? </p>
<div class=post>[<i>Then you&#8217;d have &#8220;I told Program&nbsp;X to be the default .xyz file handler, but it still opens in Program&nbsp;Y!&#8221; Because Program&nbsp;Y registered a per-user .xyz handler, and Program&nbsp;X was written in 2000 and doesn&#8217;t understand per-user handlers. -Raymond</i>]</div>
<div></div>
<p>Not to mention that every little update for MS Office considers that it&#8217;s necessary to reset the email default back to Outlook.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-692123">
				<div id="div-comment-692123" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Alexandre Grigoriev</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20081211-00/?p=19873#comment-692123">
			December 12, 2008 at 12:45 pm</a>		</div>

		<p>[I admire how virtually any topic can be turned into a rant about UAC. -Raymond]</p>
<p>Because UAC <em>deserves</em> bashing. Just like you-know-which email program which is not actually email, but a database, whose every mention evokes a barrage of &#8220;sucks&#8221;. If the developers haven&#8217;t lived in ivory towers with unlimited memory, super-fast multi-proc PCs, bulletproof network isolation from the outside world, maybe they would make Windows and other apps a bit more suited to the real user needs? Then maybe this new Windows Search 4 would not cause my machine to slow down to a crawl? Maybe Windows Search 4 would actually search files instead of putting an excuse that &#8220;the folder is not indexed yet&#8221;?</p>
<div class=post>[<i>I also admire how the topic of UAC can be injected into any topic without regard for relevance. I&#8217;m surprised you haven&#8217;t ranted about UAC in my blog entry about Dance Your PhD. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-692183">
				<div id="div-comment-692183" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Anonymous Coward</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20081211-00/?p=19873#comment-692183">
			December 12, 2008 at 2:39 pm</a>		</div>

		<p>Thanks, Raymond, will do. It&#8217;s hard to explain why it bothers me that it&#8217;s there, but I guess it&#8217;s like an itch. I take it this is the way:</p>
<p><a rel="nofollow" target="_new" href="http://www.pctools.com/guides/registry/detail/1212/" rel="nofollow">http://www.pctools.com/guides/registry/detail/1212/</a></p>
<p>@dave: Not necessarily. You could use something similar that&#8217;s used for handles now. Programs can pass handles around, but they don&#8217;t leak beyond where programs actively leak them, so to speak. Then you could say for example: okay, the shell has handles (directly or indirectly) to everything the user is allowed to touch, but doens&#8217;t pass them on unless asked in some way or another. It would require a major re-think on how software works, but the result would be safe and intuitive, I think. (Note: I don&#8217;t claim this idea is original, I just can&#8217;t remember where I picked it up.)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-maurits even thread-even depth-1" id="comment-692213">
				<div id="div-comment-692213" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Maurits+%5BMSFT%5D' rel='external nofollow' class='url'>Maurits [MSFT]</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20081211-00/?p=19873#comment-692213">
			December 12, 2008 at 4:45 pm</a>		</div>

		<p>Another possibility is that their users kept calling them to ask why CDs kept autoplaying after they had turned autoplay off in Program X.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-692253">
				<div id="div-comment-692253" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.codingadventures.com' rel='external nofollow' class='url'>Robert 'Groby' Blum</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20081211-00/?p=19873#comment-692253">
			December 12, 2008 at 7:36 pm</a>		</div>

		<p>You know, if you&#8217;re going to reply inline, threaded comments would be nice ;)</p>
<p>Either way: Yes, I think no program that does not have explicit permission should allow to touch global settings.</p>
<p>The vast majority of programs don&#8217;t need to. (How many time syncing apps have you written lately?)</p>
<p>Anything that affects global state (or even state with a wider scope than just my application) should require special permissions. Might be that&#8217;s just my Unix upbringing talking, but that&#8217;s the way I like things.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-692093">
				<div id="div-comment-692093" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">dave</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20081211-00/?p=19873#comment-692093">
			December 12, 2008 at 12:22 pm</a>		</div>

		<p>&gt;Of course, you *could* make the case that </p>
<p>&gt;the OS shouldn&#8217;t make it so easy to change</p>
<p>&gt;global state in the first place&#8230;</p>
<p>This is the first step on the path of &#8216;there is an API but only one program is allowed to use the API&#8217;.</p>
<p>It&#8217;s rarely a good idea.</p>
<p>Usually people describe this as letting the user do something but prohibit programs from doing the same thing. The trouble is, of course, that users don&#8217;t actually twiddle bits on disk, you need programs for that.</p>
<p>I guess you could have an undocumented API, but these days you tend to end up in court when you do that.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-692323">
				<div id="div-comment-692323" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">SuperKoko</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20081211-00/?p=19873#comment-692323">
			December 14, 2008 at 10:21 am</a>		</div>

		<p>@Robert &#8216;Groby&#8217; Blum:</p>
<p>I like when people ask for features that Windows already provide.</p>
<p>To modify the time zone, you need SE_TIME_ZONE_NAME privileges, which are typically provided for administrator users only.</p>
<p>The Windows NT access control model is fine grained and more subtle than the typical POSIX model.</p>
<p>The fact that tons of cr*ppy applications require admin privileges on Windows XP is a real problem that Windows Vista tries very hard (at the cost of backward compatibility) to solve.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-692343">
				<div id="div-comment-692343" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Yuhong Bao</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20081211-00/?p=19873#comment-692343">
			December 14, 2008 at 2:15 pm</a>		</div>

		<p>Another example:</p>
<p><font color=red>Example deleted because it violates the ground rules against identifying a specific company, program, or person. This commenter, despite his/her enthusiasm, tends to violate the ground rules and eventually I will tire of editing the comments and start deleting them.</font></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-692363">
				<div id="div-comment-692363" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Anonymous Coward</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20081211-00/?p=19873#comment-692363">
			December 14, 2008 at 6:56 pm</a>		</div>

		<p>That is certainly true and it deserves more credit for that than it gets.</p>
<p>However, the shell automatically passes the privilege on to the applications it spawns, which is bad. I want to be able to change the time zone, sure. But only the time and date applet should be able to do this on my behalf, so the shell should only pass the privilege on to that applet, and perhaps others that I explicitly specify.</p>
<p>Also, the access control model is certainly a big improvement over POSIX, but it still leaves a lot to be desired, especially in terms of consistency and default configuration. Some things are controlled by privileges, as the time zone. Other things are controlled by passing handles around (or failing to do so). Yet other things are accessed by pathname which are then on access checked against ACLs which operate by user and group, not by application. &nbsp;The default settings are almost all too permissive.</p>
<p>I think the handle model is the easiest to work with and reason about, as well as the most flexible and the easiest to get watertight, so if we, theoretically speaking, were to adopt one of these models, I&#8217;d opt for that one. It also has the nice property that it would be easy (relatively speaking) to add the necessary infrastructure to make it emulate the other two if necessary.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-692373">
				<div id="div-comment-692373" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">SuperKoko</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20081211-00/?p=19873#comment-692373">
			December 15, 2008 at 4:58 am</a>		</div>

		<p>@Anonymous Coward:</p>
<p>A per-application (application being defined by an exe path name + SHA1) access control model would be nice. That would be a generalization of network firewalls to system calls &amp; all other privileges.</p>
<p>However it wouldn&#8217;t solve the issue of trusted applications changing the global state as part of their internal calculation:</p>
<p>Either applications, when installed, declare the privileges they need, in which case, the application would declare that it sets the time zone, or the user would have to configure that for every application, getting pop-ups they don&#8217;t understand as UAC does. Even if they manage to understand the pop-up, they&#8217;ll first click &quot;No&quot; and see that the application doesn&#8217;t work, so they&#8217;ll eventually give the privilege the application asks.</p>
<p>Access control can protect against worms &amp; trojans, but cannot automagically repair broken applications. Broken applications are broken. Only their developers, or Windows hacks as we see on The old new thing, can fix them.</p>
<p>Anyway, I don&#8217;t see how the handle model can be used to implement per-application access control. Either the explorer would pass all the handles to every child process it invokes or it would use an application table to select which handles it must passes to child processes. The latter would be very weak as there&#8217;re many ways to launch applications without explorer, and every application allowing people to launch other applications would&#8217;ve to use these &quot;firewall tables&quot;.</p>
<p>The per-application model used by network firewall is much better IMO.</p>
<p>There&#8217;s also the argument of backward compatibility. Handles based access control would significantly change the Windows API.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-692383">
				<div id="div-comment-692383" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Anonymous Coward</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20081211-00/?p=19873#comment-692383">
			December 15, 2008 at 6:41 am</a>		</div>

		<p>@Broken applications are broken. Only their developers, or Windows hacks as we see on The old new thing, can fix them.: True, but if broken means that your application doesn&#8217;t even work in testing, hopefully devs will have some incentive to fix a bug before shipping.</p>
<p>@getting pop-ups they don&#8217;t understand: Then make them get pop-ups they do understand. Frankly I don&#8217;t get what people hate about UAC. The only thing I kind of don&#8217;t like is how the pop up is too generic. The most central item in a good dialog would be what the application is actually trying to do.</p>
<p>(And to add to the above two paragraphs: there are lots of things for which it doesn&#8217;t make sense to be able to ask the operating system for a privilege. The time zone only needs to be set by the time date applet, which is started by the shell, which will pass the handle on because it knows it&#8217;s starting the time date applet, or computer setup programs and administration tools, to which you could pass the handle on startup similarly to how we pass command line parameters now. Regardless, either you can change the time zone, or you can&#8217;t. No way to ask = no pop up.)</p>
<div class=post>[<i>Q: &#8220;I need to change the time programmatically in order to perform this internal computation.&#8221; A: &#8220;Mark yourself as an administrative tool, then you will have permission to change the time.&#8221; Now you&#8217;re back where you started. Or worse, A: &#8220;Inject a thread into Explorer to change the time.&#8221; Now you have a problem worse than the original problem. -Raymond</i>]</div>
<p>@Anyway, &#8230; tables&#8221;.: Logical fallacy: false dichotomy. There could be other ways to pass to handles to programs, and if you design the system right, I think that you could get most applications working just right without requiring the user or shell to do anything specific. For example, if you open a document from an Explorer window, Explorer could pass a handle to that document to the application it starts, much like we pass filenames today. A common dialog could do the same kind of thing.</p>
<p>Pure per-application instead of per process has a major deficiency, in that it would be hard to give different instances different access (which you might want sometimes) and to pass handles to running processes. It could be done, but it would be harder and less intuitive.</p>
<p>Backward compatibility could be done using an emulation layer. It would for example interpret a CreateFile( &lt;path&gt; ) as ‘look if there&#8217;s a handle open in this process that corresponds to path’. It can be done, and it probably wouldn&#8217;t even be that difficult. You could even pass a handle to a folder to make all files in it accessible.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-692513">
				<div id="div-comment-692513" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Yuhong Bao</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20081211-00/?p=19873#comment-692513">
			December 15, 2008 at 12:53 pm</a>		</div>

		<p>&#8220;Example deleted because it violates the ground rules against identifying a specific company, program, or person. This commenter, despite his/her enthusiasm, tends to violate the ground rules and eventually I will tire of editing the comments and start deleting them.&#8221;</p>
<p>Well, good thing that there is off-roading the old new thing. BTW, it don&#8217;t seem to be very active. Raymond: Do you read off-road? Because you don&#8217;t seem to post in it.</p>
<div class=post>[<i>I read it but I don&#8217;t post to it because I post here. And thanks for taking this thread even further off topic. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-692523">
				<div id="div-comment-692523" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Yuhong Bao</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20081211-00/?p=19873#comment-692523">
			December 15, 2008 at 1:12 pm</a>		</div>

		<p>[I read it but I don&#8217;t post to it because I post here. And thanks for taking this thread even further off topic. -Raymond]</p>
<p>Thanks for confirming, because it is hard to tell if you don&#8217;t post there.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-692533">
				<div id="div-comment-692533" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Anonymous Coward</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20081211-00/?p=19873#comment-692533">
			December 15, 2008 at 1:29 pm</a>		</div>

		<p>@Mark yourself as an administrative tool, then you will have permission to change the time.: I didn&#8217;t say that and I wouldn&#8217;t be in favour of that.</p>
<p>@Thread injection: that opens up a whole &#8216;nother can o&#8217; worms, but I think that would take this thread too far off topic.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-692583">
				<div id="div-comment-692583" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Giuseppe</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20081211-00/?p=19873#comment-692583">
			December 15, 2008 at 1:53 pm</a>		</div>

		<p>(back to the topic?)</p>
<p>Sometimes it is difficult for the developer to follow the rule. I have seen many (most of) compression/archieving tools that become &quot;the&quot; global compression/archieving tool (and when one tries to uninstall them, the registry is often messed up, and the native &quot;compressed folder&quot; feature is lost; but this is a bug, of course). The problem is that their GUI are very different. I actually don&#8217;t know if registering the new application is &nbsp;always a good thing. In my little experience, it is often a source of problems. But I also understand the &quot;marketing&quot;: if you sell a &quot;good archiver&quot;, you &quot;want&quot; to throw the native one away, right?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-692753">
				<div id="div-comment-692753" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Anonymous Coward</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20081211-00/?p=19873#comment-692753">
			December 16, 2008 at 1:24 am</a>		</div>

		<p>@SuperKoko: your post is too incoherent to be really sure, but I think I have already answered most of your questions in previous posts.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-692723">
				<div id="div-comment-692723" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">SuperKoko</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20081211-00/?p=19873#comment-692723">
			December 15, 2008 at 6:17 pm</a>		</div>

		<p>&gt; @Mark yourself as an administrative tool, then you</p>
<p>&gt; will have permission to change the time.: I didn&#8217;t</p>
<p>&gt; say that and I wouldn&#8217;t be in favour of that.</p>
<p>So, how do you let the third-party administrative tool X which does modify a system setting for a good reason, do it.</p>
<p>Somehow, it has to declare it, which you don&#8217;t wish, or the user has to get a pop-up.</p>
<p>&quot;Frankly I don&#8217;t get what people hate about UAC.&quot;</p>
<p>UAC is russian roulette.</p>
<p>Assuming there are two kinds of applications:</p>
<p>1) Normal trustable applications. Sometimes, they need high privileges to do their tasks.</p>
<p>e.g. Network clock synchronization requires privileges to set the clock.</p>
<p>Or, a network tool to change the time zone on a whole LAN at a time, require privileges to set the time zone.</p>
<p>2) Worms, malwares, viri&#8230;</p>
<p>For applications of kind #1, the &quot;right&quot; answer to UAC is always YES. Clicking NO will (almost) always result in malfunction of the software.</p>
<p>For applications of kind #2, the &quot;right&quot; answer is always NO. This might not always totally stop the malware, but, clicking YES will only makes things worse.</p>
<p>In BOTH cases, a message box convincing the user to click YES can trivially be written. I would even say that it&#8217;s easier for malwares as they are &quot;free&quot; to tell lie.</p>
<p>So, the message box can be ignore, and the UAC question always comes down to:</p>
<p>&quot;</p>
<p>Hi, I&#8217;m Windows. I&#8217;m going to do perform dangerous operation, but I don&#8217;t know if the program asking for it is evil or not, so, could you tell me:</p>
<p>Are you executing a malware?</p>
<p>&quot;</p>
<p>When computers have no clue what they&#8217;re doing, desperate, they ask the user.</p>
<p>(I don&#8217;t know details, but UAC might also be a problem when managing hundred computers on a LAN and not wanting to click YES hundred times).</p>
<p>Now, we see that there&#8217;s a third kind of application.</p>
<p>3) Trusted non-malware applications, badly programmed, which modify a global setting to perform an internal calculation.</p>
<p>However, the answer to the UAC should be YES there too, as the application won&#8217;t work at all if NO is answered, and, surely, the user wants the application to work. So, from a security &amp; user point-of-view kind #3 and kind #1 are the same.</p>
<p>If the declarative model is used, applications of kind #1 and #3 will properly declare that they need these privileges, while, worms will be blocked unless they manage to execute with &quot;installer&quot; privileges (the privileges needed to declare privileges of applications).</p>
<p>This model doesn&#8217;t help bad developers to fix applications of kind #3.</p>
<p>If the &quot;pop-up&quot; model is used, applications of kind #1 will pop out dialog boxes as part of their normal behavior, and that won&#8217;t be a bug.</p>
<p>Applications of kind #3 will do the same, and these &quot;pop-ups&quot; won&#8217;t be reported as bugs during testing.</p>
<p>This model doesn&#8217;t help bad developers to fix applications of kind #3.</p>
<p>However, this model helps worms to propagate, compared to the other model.</p>
<p>Proper education of *developers* is the only way to fix applications of kind #3.</p>
<p>&quot;There could be other ways to pass to handles to programs&quot;</p>
<p>Which one?</p>
<p>&quot;A common dialog could do the same kind of thing.&quot;</p>
<p>ok.</p>
<p>So, a network clock synchronization tool would&#8217;ve to pop up the system clock? Looks weird to me.</p>
<p>What dialog would you show when modifying some obscure registry setting such as obcaseinsensitive, or the user profile folder path?</p>
<p>Would the admin have to close this dialog box on the hundred computers of his LAN?</p>
<p>Give a concrete proposal, with an API and a description of some applications, and I&#8217;ll read it, but you&#8217;re being vague enough to make it hard to understand what you&#8217;re thinking.</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>