<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (13)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment byuser comment-author-fredericmagnyf even thread-even depth-1 parent" id="comment-1267495">
				<div id="div-comment-1267495" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Medinoc' rel='external nofollow' class='url'>Medinoc</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20161006-00/?p=94465#comment-1267495">
			October 6, 2016 at 7:47 am</a>		</div>

		<p>I guess it could also be possible to set the subclass for the whole duration of the wizard, but determine whether to suppress Autoplay dynamically during the message&#8217;s processing. I wonder which would be the &#8220;safest&#8221;.</p>

		
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-wndsks odd alt depth-2 parent" id="comment-1267505">
				<div id="div-comment-1267505" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/skSdnW' rel='external nofollow' class='url'>skSdnW</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20161006-00/?p=94465#comment-1267505">
			October 6, 2016 at 9:06 am</a>		</div>

		<p>If there are 3rd-party components involved then it would be safer to keep the subclass for the lifetime of the window. If some other code just used SetWindowLongPtr to subclass then the list of subclassers maintained by *WindowSubclass can get out of sync and somebody might get unwillingly desubclassed&#8230;</p>

		
				</div>
		<ol class="children">
		<li class="comment even depth-3 parent" id="comment-1267626">
				<div id="div-comment-1267626" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Zarat</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20161006-00/?p=94465#comment-1267626">
			October 7, 2016 at 1:42 am</a>		</div>

		<p>&gt; If some other code just used SetWindowLongPtr to subclass then the list of subclassers maintained by *WindowSubclass can get out of sync &lt;</p>
<p>In contrary, thats the whole point of using SetWindowSubclass, so it can properly manage the &quot;chain of subclasses&quot; when multiple subclasses exist and descublass in unexpected orders. (It does the whole complicated mess of desubclassing when you are not the first window proc so you don&#039;t have to turn your window proc into a no-op until the time comes where you can properly remove the subclass, at latest during window destruction. Since most people probably don&#039;t get that scenario right anyways SetWindowSubclass takes over that management for you by wrapping your window proc.)</p>
<p>At least thats how I understand it.</p>

		
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-fredericmagnyf odd alt depth-4 parent" id="comment-1267635">
				<div id="div-comment-1267635" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Medinoc' rel='external nofollow' class='url'>Medinoc</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20161006-00/?p=94465#comment-1267635">
			October 7, 2016 at 1:53 am</a>		</div>

		<p>I think skSdnW&#8217;s point is that SetWindowSubclass() relies on all subclassers using it. If some third-party code use SetWindowLongPtr() instead, you may lose the safety guarantee.</p>

		
				</div>
		<ol class="children">
		<li class="comment even depth-5" id="comment-1267636">
				<div id="div-comment-1267636" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Zarat</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20161006-00/?p=94465#comment-1267636">
			October 7, 2016 at 3:45 am</a>		</div>

		<p>&gt; I think skSdnWâ€™s point is that SetWindowSubclass() relies on all subclassers using it. If some third-party code use SetWindowLongPtr() instead, you may lose the safety guarantee. &lt;</p>
<p>Thats what I was saying. Where do you (or skSdnW) take that information from? It&#039;s not document that SetWindowSubclasses requires all subclassers using it. As I was saying the whole point of that function (as far as I know) is to implement safe subclassing, so making the assumption that everyone has to use it kinda would defeat the purpose because then nobody could use it except when it is trivial, and in the trivial case you don&#039;t need it in the first place.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment byuser comment-author-wndsks odd alt depth-4 parent" id="comment-1267655">
				<div id="div-comment-1267655" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/skSdnW' rel='external nofollow' class='url'>skSdnW</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20161006-00/?p=94465#comment-1267655">
			October 7, 2016 at 7:57 am</a>		</div>

		<p>I&#8217;ll admit that I have not inspected these functions in years but they started off as ordinal-only undocumented functions. They are implemented in comctl32 and not user32, that is your clue that the window manager is not in on the game. They exist as a convenience to you so you don&#8217;t have to figure out how to store your data that is connected to the HWND. Is it nice that they try to unwind correctly, yeah sure but it was not bulletproof the last time I looked&#8230;</p>

		
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-oldnewthing bypostauthor even depth-5" id="comment-1267665">
				<div id="div-comment-1267665" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Raymond+Chen+-+MSFT' rel='external nofollow' class='url'>Raymond Chen - MSFT</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20161006-00/?p=94465#comment-1267665">
			October 7, 2016 at 8:59 am</a>		</div>

		<p>This is discussed in the linked entry. &#8220;RemoveWindowSubclass does all the work to do the right thing if you are not the window procedure at the top of the chain.&#8221;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-wndsks odd alt depth-5" id="comment-1267805">
				<div id="div-comment-1267805" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/skSdnW' rel='external nofollow' class='url'>skSdnW</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20161006-00/?p=94465#comment-1267805">
			October 8, 2016 at 9:10 am</a>		</div>

		<p>@Raymond: Yes RemoveWindowSubclass is able to tell when the internal SetWindowSubclass WNDPROC is not the current GWLP_WNDPROC but SetWindowSubclass is not able to deal with the reverse situation:</p>
<p>g_oldWndProc = SetWindowLongPtr(hWnd, GWLP_WNDPROC, (LONG_PTR) SubOld);<br />
SetWindowSubclass(hWnd, SubCC6, something, whatever);<br />
&#8230;<br />
SetWindowLongPtr(hWnd, GWLP_WNDPROC, g_oldWndProc);</p>
<p>&#8230;when GWLP_WNDPROC gets restored to g_oldWndProc then SubCC6 will no longer receive messages even though it was never explicitly removed. My original comment is correct, you should not mix and match SetWindowLongPtr and SetWindowSubclass.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment even thread-odd thread-alt depth-1" id="comment-1267555">
				<div id="div-comment-1267555" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Mike Caron</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20161006-00/?p=94465#comment-1267555">
			October 6, 2016 at 5:02 pm</a>		</div>

		<p>&#8220;Insert the CD.&#8221;</p>
<p>Old New Thing indeed!</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-even depth-1" id="comment-1267565">
				<div id="div-comment-1267565" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">henke37</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20161006-00/?p=94465#comment-1267565">
			October 6, 2016 at 5:16 pm</a>		</div>

		<p>I feel as if this is a repeat.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-odd thread-alt depth-1 parent" id="comment-1267675">
				<div id="div-comment-1267675" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">DWalker07</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20161006-00/?p=94465#comment-1267675">
			October 7, 2016 at 11:47 am</a>		</div>

		<p>Was the MSDN documentation wrong, or just easy to misinterpret or misuse?</p>

		
				</div>
		<ol class="children">
		<li class="comment odd alt depth-2" id="comment-1267926">
				<div id="div-comment-1267926" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Scarlet Manuka</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20161006-00/?p=94465#comment-1267926">
			October 10, 2016 at 2:29 am</a>		</div>

		<p>The example doesn&#8217;t play games with message filters, so that part is on the customer.<br />
For the other part, the documentation does state (at least now, but it&#8217;s talking about Windows 95 so I expect it hasn&#8217;t been updated too recently): &#8220;Your application&#8217;s window must be in the foreground to receive this message.&#8221; The customer probably did not realise that their wizard page was not the foreground window. This part is likely on the customer too &#8212; you certainly can&#8217;t expect the AutoPlay documentation to mention it; I would assume that this is properly pointed out in the documentation on wizards, but I haven&#8217;t checked.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1267795">
				<div id="div-comment-1267795" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">JDG</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20161006-00/?p=94465#comment-1267795">
			October 8, 2016 at 1:30 am</a>		</div>

		<p>My gut instinct would be to create a new, invisible top-level window to receive those types of messages. It feels wrong &#8212; a violation of segregation of concerns &#8212; to start fiddling with the configuration of whatever window might be hosting my wizard/property page. Using my own window avoids any issue of incompatible interaction between my code and other code that might also make the (in my opinion) poor decision to reconfigure its host&#8217;s implementation details (with the exception of a potential very rude component that enumerates all windows and fiddles with them indiscriminately).</p>
<p>Are there any serious downsides to creating a dedicated window for the purpose, rather than redirecting the WndProc of someone else&#8217;s window?</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>