<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (30)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-238063">
				<div id="div-comment-238063" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joe Dietz</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041228-00/?p=36863#comment-238063">
			December 28, 2004 at 9:03 am</a>		</div>

		<p>The same fun comes when making quota decisions!  Was that literal disk block bytes or user-data bytes and which user-data bytes would that refer too, the primary data-stream or the alternate and reparse streams as well?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-238103">
				<div id="div-comment-238103" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">dakirw</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041228-00/?p=36863#comment-238103">
			December 28, 2004 at 9:51 am</a>		</div>

		<p>Regarding sparse files, is there any compelling reason to use them instead of just using a standard file structure? I&#8217;m assuming that the programmer of the application wants to allocate a larger block of space to allow for file expansion, without create file fragments all over the place.</p>
<p>I took a look at a MS link:</p>
<p><a target="_new" href="http://www.microsoft.com/resources/documentation/Windows/XP/all/reskit/en-us/Default.asp?url=/resources/documentation/Windows/XP/all/reskit/en-us/prkc_fil_aixf.asp" rel="nofollow">http://www.microsoft.com/resources/documentation/Windows/XP/all/reskit/en-us/Default.asp?url=/resources/documentation/Windows/XP/all/reskit/en-us/prkc_fil_aixf.asp</a></p>
<p>It appears that sparse files are controlled at the application level, not by users, correct?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-238113">
				<div id="div-comment-238113" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://weblogs.asp.net/oldnewthing/' rel='external nofollow' class='url'>Raymond Chen</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041228-00/?p=36863#comment-238113">
			December 28, 2004 at 10:13 am</a>		</div>

		<p>The NTFS change journal is one use of a sparse file. Sparse files are also handy when you know that most of a file isn&#8217;t going to be used but you don&#8217;t want to design an internal directory structure.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-238133">
				<div id="div-comment-238133" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.dotnetjunkies.com/weblog/sriram' rel='external nofollow' class='url'>Sriram</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041228-00/?p=36863#comment-238133">
			December 28, 2004 at 10:44 am</a>		</div>

		<p>In XP, tooltips for folders give folder sizes )(approximate in some cases) &#8211; what is the algorithm behind that?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-238033">
				<div id="div-comment-238033" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://weblogs.asp.net/oldnewthing/archive/2004/12/28/336219.aspx#FeedBack' rel='external nofollow' class='url'>Ayende @ Blog</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041228-00/?p=36863#comment-238033">
			December 28, 2004 at 10:49 am</a>		</div>

		<p>What he&#8217;s doing there might give you nightmares. </p>
<p> Raymond Chen blogs about the simple act of getting the size of a directory, not so simple after all, if you take into account all sorts of obscur&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-238163">
				<div id="div-comment-238163" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://weblogs.asp.net/oldnewthing/' rel='external nofollow' class='url'>Raymond Chen</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041228-00/?p=36863#comment-238163">
			December 28, 2004 at 11:11 am</a>		</div>

		<p>Mat Hal: I don&#8217;t know why the Size column rounds up instead of to nearest. It seems to go out of its way to do that&#8230;</p>
<p>Sriram: I don&#8217;t know what the algorithm is; why don&#8217;t you experiment and report back.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-238203">
				<div id="div-comment-238203" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Anonymous Coward</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041228-00/?p=36863#comment-238203">
			December 28, 2004 at 11:40 am</a>		</div>

		<p>All these features and issues have existed for decades on Unix where most software gets it right.  Of course it is way easier to give the &quot;-mount&quot; flag to find than to convince Explorer to only copy files from the same filesystem (ie ignore junctions etc)  And multiple streams/extended attributes make life even more fun.</p>
<p>However it is always worthwhile double checking the Unix Haters Handbook (available free online and in book form) where chapter 13 details many of the issues with Unix filesystems.  Some of the issues are now fixed.</p>
<p>Chapter 14 covers the wart that is NFS.  I once wrote an SMB/CIFS server and consequently know that Microsoft also did a hairy job in their networked filesystem.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-238223">
				<div id="div-comment-238223" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.foxyshadis.com' rel='external nofollow' class='url'>foxyshadis</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041228-00/?p=36863#comment-238223">
			December 28, 2004 at 1:34 pm</a>		</div>

		<p>I don&#8217;t think it&#8217;s possible to get it &quot;right&quot;, just to have a generally accepted version that isn&#8217;t correct under all circumstances. Of course if you only care about being &#8216;good enough&#8217; under most circumstances then windows already has easy solutions built in.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-238233">
				<div id="div-comment-238233" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Sickboy</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041228-00/?p=36863#comment-238233">
			December 28, 2004 at 2:02 pm</a>		</div>

		<p>The question is wether junction points are like hardlinks or like symlinks in Unix parlance.<br />
<br />A hardlink is automatically followed and programs even have to use extra functions to determine if a file is actually a hardlink.<br />
<br />Hovewer, symlinks are NEVER automatically followed by any program (unless you explicitly tell it to do so).<br />
<br />You can not create a hardlink to a directory. So simple is the solution to this problem.<br />
<br />If junction points are more like hardlinks and every program has to do extra work to find out if a dir is hardlinked and otherwise they are followed automatically, well then this might be&#8230; harmful. :)</p>
<p>But I think this concept is more like bind-mount so its more like a mount point than a link.<br />
<br />Recursion through mount points needs to be explicitly forbidden (-xdev) in Unix too. (so the default is to follow)<br />
<br />But regular users are not trusted to mount things (~create junction points) and admins (presumably) don&#8217;t create infinite recursions and don&#8217;t bindmount directories in the wrong places. :)<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-238253">
				<div id="div-comment-238253" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://david.acz.org/' rel='external nofollow' class='url'>David Phillips</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041228-00/?p=36863#comment-238253">
			December 28, 2004 at 4:19 pm</a>		</div>

		<p>Sickboy: In UNIX, every regular file is a hard link.  Directory entries (filenames) are merely (hard) links to the inode, which is the actual file.  Files usually only have one link, hence the confusion.</p>
<p>You can only tell if a file has more than one link (directory entry).  When you have two or more links to the same file, they are all equal.  You can&#8217;t say that one of them is the real file and the others are hard links.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-238263">
				<div id="div-comment-238263" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Drew</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041228-00/?p=36863#comment-238263">
			December 28, 2004 at 4:50 pm</a>		</div>

		<p>Similar to the cluster-rounding, but sort of the inverse: If you have small enough files they&#8217;re probably MFT-resident and don&#8217;t take up any space other than their MFT entry.</p>
<p>By &quot;bookkeeping overhead&quot; you meant attributes, right?  That gets more complicated as there are resident attributes, some that live in extents, and others that can live in other MFT entries.</p>
<p>There&#8217;s the added question of whether or not to count MFT entries at all.  Are they in the MFT zone?  If so those clusters are reserved for the MFT anyway so they don&#8217;t take up free disk space.  Or do they?  Depends on what you want to count.</p>
<p>Journaling could add even more questions about what to count.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-238073">
				<div id="div-comment-238073" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.eluent.com/freeware.htm' rel='external nofollow' class='url'>Doug Harrison</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041228-00/?p=36863#comment-238073">
			December 28, 2004 at 9:35 am</a>		</div>

		<p>All this talk of reparse points reminds me of a message I wrote in another forum in May 2003. (I assume nothing&#8217;s changed since then, but I don&#8217;t know for sure, and the message will explain why this is.)</p>
<p>*****</p>
<p>Junction points considered harmful?</p>
<p>I&#8217;ve been using junction points to relocate some folders to a more capacious partition, and it has worked very well. However, I was recently horrified to discover that unlike a hard link, deleting a junction point through Explorer deletes the target as well as the junction! Fortunately, I didn&#8217;t lose anything, but it pretty much turns a very useful feature into a very dangerous feature. It seems to me that if you use junctions at all, you can&#8217;t delete any directory without first considering whether it or some subdirectory many levels down contains a junction to something you want to keep. Not good.</p>
<p>I&#8217;ve been unable to solve this problem by using ACLs and would welcome any tips. Otherwise, I think I&#8217;m going to give up on junctions altogether. I think I understand now why Windows comes with no native tools for creating them.</p>
<p>*****</p>
<p>Note that your own programs can choose how to treat reparse points in SHFileOperation by using the FOF_NORECURSEREPARSE flag.<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-238083">
				<div id="div-comment-238083" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.bigbeardy.co.uk' rel='external nofollow' class='url'>Mat Hall</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041228-00/?p=36863#comment-238083">
			December 28, 2004 at 9:37 am</a>		</div>

		<p>So when you right-click and pick Properties for a folder in Explorer, what does *it* do?  You get the &quot;size&quot; and &quot;size on disk&quot; (which presumably covers the compression/cluster/overhead problem by giving you two &quot;correct&quot; answers), but how about all the other potential minefields?</p>
<p>(And on a sort of related note, what&#8217;s with the fact that the &quot;size&quot; column in the details view in Explorer is rounded up while the size reported in the status bar is rounded down?  For example, a 225,718 byte file (220.4k) is reported as 221k in the size column and 220k in the status bar.  It&#8217;s bugged me for years!)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-238323">
				<div id="div-comment-238323" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.dotnetjunkies.com/weblog/sriram' rel='external nofollow' class='url'>Sriram</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041228-00/?p=36863#comment-238323">
			December 29, 2004 at 6:00 am</a>		</div>

		<p>Raymond &#8211; I haven&#8217;t tried out hardlinks yet &#8211; but my guess is that </p>
<p>(a) Explorer caches folder sizes whenever calculated. So for example, if I&#8217;ve used the &#8216;Properties&#8217; dialog of a folder recently, it gives back the right answer instantly.</p>
<p>(b)For a folder containing other folders, it scans to see whether it has the children&#8217;s folder sizes cached. If all of them are cached, it sums them up and puts it in the tooltip. If only a few are cached, it sums up the few and says &quot;More than&quot; followed by the size of the children it knows the size of.</p>
<p>This leads to some silly tooltips &#8211; for e.g, a folder containing over 3 GB of sub-folders had a tooltip saying &quot;More than 4.63 mb&quot; which though correct, wasn&#8217;t very helpful.</p>
<p>I&#8217;m not sure what actions cause the folder sizes to be cached &#8211; but I&#8217;m sure there are more than the one I reported.For example, a folder whose contents I burned on to a CD recently using Nero had its size show up correctly in a tooltip.</p>
<p>A general rule of thumb seems to be that recently/frequently used folders report their sizes properly while lesser used folders don&#8217;y.</p>
<p>Have to play around with hard links(and the other cases you mention) and see what happens.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-238333">
				<div id="div-comment-238333" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://weblogs.asp.net/oldnewthing/archive/2004/12/29/336219.aspx#343647' rel='external nofollow' class='url'>AC</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041228-00/?p=36863#comment-238333">
			December 29, 2004 at 6:18 am</a>		</div>

		<p>Re Junctions: Why shouldn&#8217;t the user interfaces that allow creating junctions check if the junction introduces &quot;infinite loop&quot; in the file system, and simply reject such actions?</p>
<p>I think the worst thing is to see only the effects of some decision, without considering the goals. There are two goals, from which we&#8217;re still far away on NT platform:</p>
<p>&#8211; Eliminate the logical drive letters that came from DOS. </p>
<p>&#8211; Allow system and data files on separate disks. Junctions should allow this one, I guess (never tried)? Other usage scenarios do not have to be reasonably supported. Therefore, the &quot;normal&quot; programs should traverse right through junctions and not avoid them.</p>
<p>Re Sizes: I also think the only reasonable solution is really to have more than one size, just like &quot;Size&quot; and &quot;Size on Disk&quot;. Clusters practically existed always, so the &quot;size on disk&quot; was never the same as the logical size. Then came Stacker (remember that one?) and that was even more obvious.<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-238413">
				<div id="div-comment-238413" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://weblogs.asp.net/oldnewthing/' rel='external nofollow' class='url'>Raymond Chen</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041228-00/?p=36863#comment-238413">
			December 29, 2004 at 11:10 am</a>		</div>

		<p>AC: Blocking it at the UI level doesn&#8217;t stop someone from creating an infinite loop at the API level. And if you block it at the API level you get into the weird situation where for example, &quot;I can&#8217;t attach my 1394 drive &#8211; the system tells me that adding it would create an infinite loop between my system drive and the new drive. But I can&#8217;t see what the infinite loop is until I mount the drive!&quot; </p>
<p>Sriram: Explorer calculates the directory size recursively, but after 3 seconds it gives up and says &quot;at least xxx&quot; where xxx is the amount it found so far.  That explains why it doesn&#8217;t see your 3GB hidden off in subdirectories &#8211; it didn&#8217;t find them in time.</p>
<p>I&#8217;m reluctant to go into detail because people might start relying on this behavior, which is clearly open to change at any time.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-238423">
				<div id="div-comment-238423" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Drew</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041228-00/?p=36863#comment-238423">
			December 29, 2004 at 12:28 pm</a>		</div>

		<p>Joe: You can pass FSCTL_GET_NTFS_VOLUME_DATA into DeviceIoControl to get cluster size (and lots of other information).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-238443">
				<div id="div-comment-238443" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Brio</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041228-00/?p=36863#comment-238443">
			December 29, 2004 at 2:18 pm</a>		</div>

		<p>This article stood out for me, since I&#8217;ve been working on a program to calculate folder sizes. Looks like I have a few bugs to fix now. :)</p>
<p>If people here are interested, check out my Explorer column shell extension at <a target="_new" href="http://foldersize.sourceforge.net" rel="nofollow">http://foldersize.sourceforge.net</a>.</p>
<p>Sorry if this sounds like an advertisement&#8230; but with the topic here, this seems like a program that people might find useful!</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-238383">
				<div id="div-comment-238383" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.excastle.com/blog/' rel='external nofollow' class='url'>Joe White</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041228-00/?p=36863#comment-238383">
			December 29, 2004 at 9:56 am</a>		</div>

		<p>The &quot;cluster size&quot; issue is even more problematic, given that there doesn&#8217;t seem to be any API call that will tell you what the cluster size *is*. GetDiskFreeSpace won&#8217;t report the correct cluster size on partitions larger than 2 GB, and GetDiskFreeSpaceEx doesn&#8217;t report the cluster size at all.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-238543">
				<div id="div-comment-238543" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Chris</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041228-00/?p=36863#comment-238543">
			December 29, 2004 at 9:05 pm</a>		</div>

		<p>@Brio &#8211; That&#8217;s pretty neat, thanks. :)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-238563">
				<div id="div-comment-238563" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.foxyshadis.com' rel='external nofollow' class='url'>foxyshadis</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041228-00/?p=36863#comment-238563">
			December 29, 2004 at 9:46 pm</a>		</div>

		<p>AC: Logical drives actually have a really fantasic use: They&#8217;re short and convenient. It&#8217;s so much easier to see or type or browse to P: than /branch/mod1/[user]/data or \fservaccountingreciepts. I&#8217;ve seen linux shops set up aliases like /p for that purpose. An additional perk is that you can restrict which drives are visible in NT, and coupled with drive names make life simpler for the majority of users who aren&#8217;t really knowledgable and don&#8217;t need to see that stuff.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-238433">
				<div id="div-comment-238433" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Chris Louth</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041228-00/?p=36863#comment-238433">
			December 29, 2004 at 2:09 pm</a>		</div>

		<p>I once found a really cool &quot;directory size&quot; problem at a client. There was a Win2k server running out of space on C: drive. Free reported space was shrinking to under 10MB when I was called. </p>
<p>I selected all files on C: and found that the reported size was about 4GB, but the 10GB partition was full. So where was the 6GB going? I ultimately traced it to a bug in a custom program that would read the ACL, add a new entry, then *add the whole tihng back*. Since this was called on many small files, thousands of times a day&#8230; a few GB of data files took up an extra 6GB in ACL data.</p>
<p>Explorer wouldn&#8217;t show the ACL data as part of the file size, but free disk space didn&#8217;t lie :)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-238583">
				<div id="div-comment-238583" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">AC</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041228-00/?p=36863#comment-238583">
			December 30, 2004 at 1:28 am</a>		</div>

		<p>Raymond: Of course, blocking creation of infinite loops at the API level must take care of the tradeoffs, and the only reasonable solution for some occasions is that traversal functions implemented in OS do know how to recognize that they broke some reasonable limits (e.g. N levels of directory traversal). OS has the duty to keep itself stable and allow the user to correct errors (e.g. not to try to infinitely traverse junctions, in the user only wants to remove the problematic junction). Of course it can&#8217;t protect the user from all possible user&#8217;s errors, but each time some protection for some trivial error is introduced, it saves a lot of time for the whole world.</p>
<p>foxyshadis: Having the possiblity just to give shorter path is a trivial, and you really don&#8217;t need logical drives just for that. For me, the best consequence of having the logical drives is that then I can play with more &quot;current directories&quot; at the same time (and at he single command line). However it can be just a convenience and not something on what system depends.</p>
<p>Still, I would really prefer the system which doesn&#8217;t depend on fixed directory locations. And in Windows, you can&#8217;t move anything trivially, which is a pity. Wouldn&#8217;t it be great that you can install any application just by draging it into some folder. That you &quot;uninstall&quot; it by simply deleting it. The Windows platform is still so far from real simplicity and elegance.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-238763">
				<div id="div-comment-238763" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Matthew Lock</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041228-00/?p=36863#comment-238763">
			December 30, 2004 at 11:14 pm</a>		</div>

		<p>I always found Spacemonger to be a handy program when wanting to know the size of directories on my disk: <a target="_new" href="http://www.werkema.com/software/spacemonger.html" rel="nofollow">http://www.werkema.com/software/spacemonger.html</a></p>
<p>Also JDiskReport is nice too: <a target="_new" href="http://www.jgoodies.com/freeware/jdiskreport/" rel="nofollow">http://www.jgoodies.com/freeware/jdiskreport/</a></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-239023">
				<div id="div-comment-239023" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.danielmoth.com/Blog/2005/01/blog-link-of-week-53.html' rel='external nofollow' class='url'>Daniel Moth</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041228-00/?p=36863#comment-239023">
			January 2, 2005 at 6:59 pm</a>		</div>

		<p>Blog link of the week 53</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-239053">
				<div id="div-comment-239053" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Michael J.</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041228-00/?p=36863#comment-239053">
			January 3, 2005 at 11:44 am</a>		</div>

		<p>My favorite file manager for Windows, the Total Commander <a target="_new" href="http://www.ghisler.com" rel="nofollow">http://www.ghisler.com</a> has &quot;Directory Size&quot; function. Select a directory, press spacebar and see the directory size. It does not follow the links, but the information is accurate enough to decide how much one can free up deleting the directory, or will the directory fit the USB drive or floppy.</p>
<p>Why would one follow the link anyway, what is the practical sence in doing that? What is the size of Documents and SettingsUserStart Menu directory? Even better, what is the size of Documents and SettingsUserFavorites directory, where links point to URLs?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-239073">
				<div id="div-comment-239073" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Brio</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041228-00/?p=36863#comment-239073">
			January 3, 2005 at 3:29 pm</a>		</div>

		<p>Matthew Lock and Michael J.: Those other programs are why I had to write the Explorer column extension. Why start up another program to see folder sizes, when they should just be right there, in Explorer, all the time? There&#8217;s an empty hole in the Size column right where that data should be.<br />
<br />Actually, the column extension API makes it look like I might be able to add data to an existing column, but I couldn&#8217;t get that to work. Would any column extension gurus know if that&#8217;s possible?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-240683">
				<div id="div-comment-240683" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Keith Moore</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041228-00/?p=36863#comment-240683">
			January 8, 2005 at 9:13 am</a>		</div>

		<p>The &quot;alternate data stream&quot; scenario is especially grim. All released versions of NTFS have supported multiple data streams, but Windows Server 2003 is the first version with a *documented* API to enumerate the stream names.<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-291833">
				<div id="div-comment-291833" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blogs.msdn.com/oldnewthing/archive/2005/07/21/441330.aspx' rel='external nofollow' class='url'>The Old New Thing</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041228-00/?p=36863#comment-291833">
			July 21, 2005 at 10:00 am</a>		</div>

		<p>It&#8217;s a very simple directory enumerator.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-490583">
				<div id="div-comment-490583" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://intosoul.com/blogs/tech/archive/2007/04/08/Some-Cool-Tips-for-.Net-Framework.aspx' rel='external nofollow' class='url'>Kris - TECH</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041228-00/?p=36863#comment-490583">
			April 7, 2007 at 11:40 pm</a>		</div>

		<p>Introduction These are some tips for commonly faced problems in .NET . Some of these tips are mine and</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>