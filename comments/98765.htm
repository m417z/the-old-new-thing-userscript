<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (14)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-1337705">
				<div id="div-comment-1337705" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ray Koopa</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180516-00/?p=98765#comment-1337705">
			May 16, 2018 at 7:44 am</a>		</div>

		<p>And of course you do all the using namespace statements in your header files. So your colleagues don&#8217;t miss out on your awesome ideas when including then.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1337745">
				<div id="div-comment-1337745" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Rich</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180516-00/?p=98765#comment-1337745">
			May 16, 2018 at 10:03 am</a>		</div>

		<p>*Applause* !!!</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-matteo even thread-even depth-1 parent" id="comment-1337755">
				<div id="div-comment-1337755" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Matteo+Italia' rel='external nofollow' class='url'>Matteo Italia</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180516-00/?p=98765#comment-1337755">
			May 16, 2018 at 10:12 am</a>		</div>

		<p>When reading/using such deep namespace I&#8217;m always reminded of one of Butterworth&#8217;s ironic posts, namely <a href="https://punchlet.wordpress.com/2011/06/18/letter-the-sixth-belatedly/" rel="nofollow">https://punchlet.wordpress.com/2011/06/18/letter-the-sixth-belatedly/</a></p>
<blockquote><p>And then I (yes, modesty allows me to admit) had a wonderful idea. Why can we not take advantage of our patientâ€™s mania for hierarchy? Can we not encourage them to write code like this:</p>
<p>namespace MyLibrary {<br />
    namespace Useful {<br />
        namespace Utility {<br />
           int f();<br />
        }<br />
        namespace Business {<br />
           int f();<br />
           namespace Utility {<br />
                int f();<br />
           }<br />
       }<br />
    }<br />
}</p>
<p>It turns out that almost no encouragement is needed. Humans apparently actually like writing stuff like this:</p>
<p>MyLibrary::Useful::Business::Utility::f();</p>
<p>and when they have done so seem to think they have done something profound. The thought of naming the functions so that their own names are distinct seems repellent to them. And even when the names are distinct, and there is absolutely no reason to use these ludicrous constructs, they will still embrace them as they would long-lost lovers.
</p></blockquote>

		
				</div>
		<ol class="children">
		<li class="comment odd alt depth-2" id="comment-1337845">
				<div id="div-comment-1337845" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">pc</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180516-00/?p=98765#comment-1337845">
			May 16, 2018 at 11:39 am</a>		</div>

		<p>Thank you so much for sharing this site. I now want all content about programming to be in Screwtape Letters format.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment even thread-odd thread-alt depth-1" id="comment-1337785">
				<div id="div-comment-1337785" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Peter Doubleday</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180516-00/?p=98765#comment-1337785">
			May 16, 2018 at 10:54 am</a>		</div>

		<p>This is rather wonderful.  I wouldn&#8217;t call it a &#8220;stupid trick,&#8221; per se, because after all a namespace is just an aliasing mechanism.  Rather, it&#8217;s a composite alias mechanism for aliases.</p>
<p>If you have a sufficiently large .NET code-base, it might even be worth thinking about there.  Isn&#8217;t <b>using</b> a wonderful keyword?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-even depth-1" id="comment-1337865">
				<div id="div-comment-1337865" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://00jknight.com' rel='external nofollow' class='url'>Jason Knight</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180516-00/?p=98765#comment-1337865">
			May 16, 2018 at 2:18 pm</a>		</div>

		<p>Isn&#8217;t there a mistake on this? Shouldn&#8217;t the &#8220;inner namespaces&#8221; be different from each other? All three are importing the same Windows::* namespaces! Shouldn&#8217;t it be:</p>
<p>namespace ABI {<br />
    using ABI::Windows::System::Profile::SystemManufacturers;<br />
    &#8230;&#8230;<br />
}</p>
<p>???</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-odd thread-alt depth-1 parent" id="comment-1337945">
				<div id="div-comment-1337945" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Jan</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180516-00/?p=98765#comment-1337945">
			May 17, 2018 at 6:41 am</a>		</div>

		<p>Maybe I read it wrong, but I would expect that ABI:: and winrt:: are missing in the examples of the namespaces (all 3 are identical at the moment).</p>

		
				</div>
		<ol class="children">
		<li class="comment odd alt depth-2" id="comment-1342205">
				<div id="div-comment-1342205" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ben Voigt</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180516-00/?p=98765#comment-1342205">
			May 23, 2018 at 11:41 am</a>		</div>

		<p>The code&#8217;s already *in* that namespace, so it will automatically lookup names qualified relative to it.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1 parent" id="comment-1340825">
				<div id="div-comment-1340825" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Aged .Net Guy</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180516-00/?p=98765#comment-1340825">
			May 18, 2018 at 8:32 am</a>		</div>

		<p>Looks like cut-n-paste coding strikes again.  Happens to the very best of us apparently.</p>
<p>One of the nice things about being retired from active devving is that it&#8217;s now been _months_ since I last made that mistake myself. :)</p>

		
				</div>
		<ol class="children">
		<li class="comment odd alt depth-2" id="comment-1342215">
				<div id="div-comment-1342215" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ben Voigt</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180516-00/?p=98765#comment-1342215">
			May 23, 2018 at 11:43 am</a>		</div>

		<p>Nope, just context-dependent meaning, so someone who blindly copy+pastes this code to a function living in a different namespace will have the meaning mysteriously and completely change.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment even thread-odd thread-alt depth-1 parent" id="comment-1341045">
				<div id="div-comment-1341045" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Marvy</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180516-00/?p=98765#comment-1341045">
			May 19, 2018 at 4:34 pm</a>		</div>

		<p>re: Windows Runtime type names are unique across all Windows Runtime namespaces</p>
<p>So why not just use one namespace and let the compiler enforce that rule?</p>

		
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-oldnewthing bypostauthor odd alt depth-2 parent" id="comment-1341075">
				<div id="div-comment-1341075" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Raymond+Chen+-+MSFT' rel='external nofollow' class='url'>Raymond Chen - MSFT</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180516-00/?p=98765#comment-1341075">
			May 20, 2018 at 7:32 pm</a>		</div>

		<p>I can&#8217;t tell if you&#8217;re being serious or silly.</p>

		
				</div>
		<ol class="children">
		<li class="comment even depth-3" id="comment-1341115">
				<div id="div-comment-1341115" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Mark Yagnatinsky</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180516-00/?p=98765#comment-1341115">
			May 21, 2018 at 6:28 am</a>		</div>

		<p>Almost serious</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment odd alt thread-even depth-1" id="comment-1342435">
				<div id="div-comment-1342435" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Mike</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180516-00/?p=98765#comment-1342435">
			May 23, 2018 at 11:50 pm</a>		</div>

		<p>Perhaps it&#8217;s me, but when C++ first emerged, it&#8217;s great attraction was the ability to encapsulate code and hide implementation within the objects you were building. As the years went by, ever more complex mechanisms were introduced to allow the real-world access needed to object data and methods. Ever more complex aliasing and namespace usages were born to avoid the use of global variables whilst simultaneously creating ever more esoteric ways of actually having them in all but name but hiding that fact! </p>
<p>After many years, I finally gave up using C++ because it was harder to understand and use the language than it was to solve the problems I was coding for. The above article illustrates why &#8211; for me anyway &#8211; very well.</p>
<p>8)</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>