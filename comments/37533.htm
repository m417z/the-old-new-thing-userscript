<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (51)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-218953">
				<div id="div-comment-218953" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.reactos.org' rel='external nofollow' class='url'>Steven Edwards</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041019-00/?p=37533#comment-218953">
			October 19, 2004 at 8:58 am</a>		</div>

		<p>What is the system administration tool?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-218983">
				<div id="div-comment-218983" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">DrPizza</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041019-00/?p=37533#comment-218983">
			October 19, 2004 at 9:33 am</a>		</div>

		<p>&quot;(I&#8217;m sure there will be the usual chorus of people who will say, &quot;You should&#8217;ve just broken them.&quot; What if I told you that one of the programs that does this is is a very popular system administration tool?) &quot;<br />
<br />Why should that change the answer?<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-218993">
				<div id="div-comment-218993" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Bdoserror</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041019-00/?p=37533#comment-218993">
			October 19, 2004 at 9:45 am</a>		</div>

		<p>I have to agree with DrPizza: My naive view (and I do work in the retail software market) is &quot;if it hurts when you do that, don&#8217;t do that&quot; &#8212; you should &quot;out&quot; these products.</p>
<p>Unfortunately, I understand that realistically, users don&#8217;t think it&#8217;s the program&#8217;s fault, they blame windows (&quot;It worked in 98, but when I upgraded to XP it broke.  Stupid Windows&quot;).  Moral highground doesn&#8217;t do you any good here.  This job would be easy if it wasn&#8217;t for the customers. :)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-219003">
				<div id="div-comment-219003" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Shog9</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041019-00/?p=37533#comment-219003">
			October 19, 2004 at 9:55 am</a>		</div>

		<p>IMHO, it&#8217;d be one thing if developers were grabbing the header by searching for a child window and then doing Bad Things to it.  But when you provide a nice API for getting the thing, it sorta just screams &quot;use me! abuse me!&quot;.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-219013">
				<div id="div-comment-219013" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Vince</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041019-00/?p=37533#comment-219013">
			October 19, 2004 at 10:00 am</a>		</div>

		<p>Just curious.  If backwards compatibility is truly the all-encompassing goal of Microsoft, why was Netscape-plugin support dropped from IE 5.5?  I know it caused a lot of annoyance at the time, and that customers were forced to go out and try to update most of their plugins from various software companies.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-219023">
				<div id="div-comment-219023" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Cooney</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041019-00/?p=37533#comment-219023">
			October 19, 2004 at 10:15 am</a>		</div>

		<p>Was that before or after Judge Jackson&#8217;s penalty was overturned?</p>
<p>My opinion: Microsoft lives by Conan&#8217;s 3 rules. Backward compatibility is about not giving your users another reason to look elsewhere.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-219033">
				<div id="div-comment-219033" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">DeepIce</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041019-00/?p=37533#comment-219033">
			October 19, 2004 at 10:15 am</a>		</div>

		<p>Unless the system administration tool is from microsoft</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-219043">
				<div id="div-comment-219043" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Anon</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041019-00/?p=37533#comment-219043">
			October 19, 2004 at 10:39 am</a>		</div>

		<p>The documentation is inadequate (it doesn&#8217;t seem to say what can be done with the header control) and you&#8217;ve ignored one of the most basic rules of programming &#8211; encapsulation, so are you really surprised at the consequences? Do you expect a prize for this great feat of backwards compatibility?</p>
<p>There is the argument that people could FindWindow to get the header control, so you might as well give it to them. I still think that a note on the message which said &quot;Although the header control is accessible, applications should not attempt to X, Y or Z it&quot; is necessary to make your complaint valid or excuse your faux shock.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-219053">
				<div id="div-comment-219053" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">DrPizza</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041019-00/?p=37533#comment-219053">
			October 19, 2004 at 10:45 am</a>		</div>

		<p>&quot;Unless the system administration tool is from microsoft &quot;<br />
<br />All the more reason to break it, really, as it&#8217;s that much easier for them to fix.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-219063">
				<div id="div-comment-219063" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.codeproject.com/script/articles/list_articles.asp?userid=152' rel='external nofollow' class='url'>Mike Dunn</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041019-00/?p=37533#comment-219063">
			October 19, 2004 at 10:47 am</a>		</div>

		<p>C&#8217;mon people, you&#8217;re blaming MS for not hiding this LPARAM in a header control? Puh-leeze. If they <em>had</em> hid it, you would be whining about how MS (sorry, I mean &quot;M$&quot;) is conspiring against other companies to keep them from using those 4 magical bytes (which, of course, make their apps so much better than everyone else&#8217;s). Pfft.</p>
<p>The real blame lies on the programmer who was too lazy to keep his own vector&lt;CMyData&gt;. It&#8217;s common sense not to muck around in windows and data structures that you don&#8217;t control. Alas, not all programmers exercise common sense&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-219073">
				<div id="div-comment-219073" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Tim Smith</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041019-00/?p=37533#comment-219073">
			October 19, 2004 at 11:02 am</a>		</div>

		<p>Give them hell Mike.  :)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-219083">
				<div id="div-comment-219083" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://weblogs.asp.net/oldnewthing/' rel='external nofollow' class='url'>Raymond Chen</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041019-00/?p=37533#comment-219083">
			October 19, 2004 at 11:03 am</a>		</div>

		<p>(What Mike Dunn said.)</p>
<p>Suppose you&#8217;re a system administrator. You are evaluating whether to upgrade your 10,000-employee company to Windows XP. Uh-oh, your critical system administration tool doesn&#8217;t work any more. What do you think your recommendation is going to be to the company&#8217;s management?<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-219113">
				<div id="div-comment-219113" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Nate</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041019-00/?p=37533#comment-219113">
			October 19, 2004 at 12:01 pm</a>		</div>

		<p>Frankly it seems odd to me that the lParam would be considered internal.  I&#8217;ve always seen things like LVITEM lParams, GWL_USERDATA and all of those things provided explicitly so user programs could put their stuff in them.  The fact that it happens to be in a list view child control doesn&#8217;t seem to change anything to me.</p>
<p>Am I alone in my thinking?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-219123">
				<div id="div-comment-219123" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://weblogs.asp.net/oldnewthing/' rel='external nofollow' class='url'>Raymond Chen</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041019-00/?p=37533#comment-219123">
			October 19, 2004 at 12:22 pm</a>		</div>

		<p>The header control is not yours. It belongs to the listview. You can use the handle value to, as Anon points out, detect that a drag notification came from the header control. But you can&#8217;t do anything to the header itself &#8211; the listview controls it. Don&#8217;t add columns directly to the header control, edit item text, etc. Go through the listview for that.</p>
<p>(Personally, I&#8217;m surprised that LVM_GETHEADER exists at all.)</p>
<p>The LPARAM member in the HDITEM structure is for the header&#8217;s owner to use. The header&#8217;s owner is listview.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-219133">
				<div id="div-comment-219133" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Anonymouse</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041019-00/?p=37533#comment-219133">
			October 19, 2004 at 1:37 pm</a>		</div>

		<p>My opinion: Microsoft lives by Conan&#8217;s 3 rules. Backward compatibility is about not giving your users another reason to look elsewhere.</p>
<p>But what does backwards compatibility have to do with Crushing your enemies, Seeing them driven before you, and Hearing the lamentations of their women?  You are talking about Conan, right?  :)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-219143">
				<div id="div-comment-219143" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">EP</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041019-00/?p=37533#comment-219143">
			October 19, 2004 at 1:38 pm</a>		</div>

		<p>Moral of the story:<br />
<br />If you&#8217;re writing a control that might be used by millions of programmers, add a &quot;OwnerData&quot; property to it. Whether it&#8217;s the listview, the header, the header columns &#8211; whatever.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-219153">
				<div id="div-comment-219153" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://weblogs.asp.net/oldnewthing/' rel='external nofollow' class='url'>Raymond Chen</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041019-00/?p=37533#comment-219153">
			October 19, 2004 at 1:45 pm</a>		</div>

		<p>The header does have an OwnerData property (lParam). But the header&#8217;s owner is Listview! (Not the adminstration app.)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-219183">
				<div id="div-comment-219183" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">EP</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041019-00/?p=37533#comment-219183">
			October 19, 2004 at 2:55 pm</a>		</div>

		<p>&quot;But the header&#8217;s owner is Listview! (Not the adminstration app.)&quot;</p>
<p>That&#8217;s ok. Simply allow me to saveretreive header specific data through the ListView_* functions. If the control is there &#8211; someone will want to associate data with it.<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-219193">
				<div id="div-comment-219193" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">IUnknown</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041019-00/?p=37533#comment-219193">
			October 19, 2004 at 3:02 pm</a>		</div>

		<p>With which function can I read the lparam value that you talk about?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-218963">
				<div id="div-comment-218963" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.differentpla.net/' rel='external nofollow' class='url'>Roger Lipscombe</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041019-00/?p=37533#comment-218963">
			October 19, 2004 at 9:00 am</a>		</div>

		<p>I believe I&#8217;ve done this myself. I don&#8217;t recall (at the time) that there was anything in the documentation that warned against this specific scenario.</p>
<p>Essentially, if the ListView team didn&#8217;t want people grovelling around with their header control, it shouldn&#8217;t have allowed the user a documented way to get at the handle, at least not without a *large* warning. I mean, the lParam is _always_ where I want to stash useful things.</p>
<p>Instead, it should have had ListView_GetColumnData-like macros which I could have used instead.<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-219213">
				<div id="div-comment-219213" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Satan's Cursemonger</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041019-00/?p=37533#comment-219213">
			October 19, 2004 at 4:00 pm</a>		</div>

		<p>Hm&#8230; I was on the classic Mac OS toolbox team at Apple, and we had similar issues, often with major applications such as those from vendors such as the five-letter one starting with &quot;A&quot;. cf &quot;Why We Added The Window and Control Property APIs in Carbon, by the Apple High Level Toolbox team&#8230;&quot; We learned that when you expose anything to an app, they <em>will</em> take advantage of it, whether or not they <em>should</em>.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-219223">
				<div id="div-comment-219223" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://flurf.net/' rel='external nofollow' class='url'>Eric TF Bat</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041019-00/?p=37533#comment-219223">
			October 19, 2004 at 4:33 pm</a>		</div>

		<p>Now of course the <em>real</em> problem is that programmers are using C and its variants to write software.  Of course it will blow up in your faces!  If you&#8217;d only use a real language like LISP, you&#8217;d never have this problem&#8230;</p>
<p>Now of course the <em>real</em> problem is that programmers are using C and its variants to write software.  Of course it will blow up in your faces!  If you&#8217;d only use a real language like APL, you&#8217;d never have this problem&#8230;</p>
<p>Now of course the <em>real</em> problem is that programmers are using C and its variants to write software.  Of course it will blow up in your faces!  If you&#8217;d only use a real language like Intercal, you&#8217;d never have this problem&#8230;</p>
<p>(rinse, repeat)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-219243">
				<div id="div-comment-219243" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">.dan.g.</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041019-00/?p=37533#comment-219243">
			October 19, 2004 at 5:27 pm</a>		</div>

		<p>sorry if this is the wrong forum raymond, but i&#8217;ve been wondering for a while how the listctrl offsets the origin of its client area to take account of the tab control when the tabcontrol also exists in its client area.</p>
<p>is this just some magic within the listctrl or is there a generic technique that can be applied elsewhere?</p>
<p>rgds</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-219253">
				<div id="div-comment-219253" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://weblogs.asp.net/oldnewthing' rel='external nofollow' class='url'>Raymond Chen</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041019-00/?p=37533#comment-219253">
			October 19, 2004 at 5:36 pm</a>		</div>

		<ol>
<li>There is a suggestion box.<br />
<br />2. I don&#8217;t know what you&#8217;re talking about. There is no tab control in the client area of the listview. (I assume that&#8217;s what you mean by listctrl?)</li>
</ol>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-219093">
				<div id="div-comment-219093" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Anon</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041019-00/?p=37533#comment-219093">
			October 19, 2004 at 11:15 am</a>		</div>

		<p>Mike Dunn: I reject the idea that it&#8217;s common sense not to have user-provided per-column data in a list control. In fact, I think the purpose of the LPARAM data in shell-provided controls is *exactly* for clients to use, even when exposed through another control. Since there&#8217;s no documentation to the contrary and it&#8217;s easier and more robust for Microsoft to maintain a separate pile of bits (which they&#8217;re probably already doing for the other LVCOLUMN stuff), they should have expected to do that all along.</p>
<p>We don&#8217;t complain that there&#8217;s no LPARAM in the LVCOLUMN structure (which supersedes itself, according to the documentation &#8211; probably they need an underscore in there, another place where the documentation is lacking quality). We simply assume that we&#8217;re intended to use the one we have so readily accessible.</p>
<p>Your assertion that people would be complaining if the documentation said &quot;The LPARAM data of the header may be used by the list control and should not be modified or interpreted by user code&quot; is as flawed as the rest of your argument. We don&#8217;t spend all day whining about the dwReserved&#8217;s, or all the other places where we&#8217;re asked not to poke, do we?<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-219103">
				<div id="div-comment-219103" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Anon</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041019-00/?p=37533#comment-219103">
			October 19, 2004 at 11:28 am</a>		</div>

		<p>It should be mentioned that I don&#8217;t write GUI code, but I think I can read the documentation.</p>
<p>Right now, I&#8217;m wondering what the point in the LVM_GETHEADER message is, if all the functionality we&#8217;re allowed to use is provided by the LVM_*COLUMN* messages. I&#8217;m assuming the intent is to let reasonable applications do reasonable things: e.g., don&#8217;t destroy it, do use it for functionality missing in the list control functions, do use it to handle HDN_* stuff.</p>
<p>Your argument, then, is really about whether using LPARAM data in columns is a reasonable thing&#8230; sounds like Raymond&#8217;s just given it the blessing.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-219263">
				<div id="div-comment-219263" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Anonymous Coward</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041019-00/?p=37533#comment-219263">
			October 19, 2004 at 6:36 pm</a>		</div>

		<p>Various CPUs got bitten by this in the past.  Various address bits would be ignored, so various programs used them as tags.  As new versions of the CPU came out and memory sizes increased, things crashed.</p>
<p>So in the CPU world, they now verify the various bits are zero/one as appropriate even if they are not currently used.</p>
<p>I guess the lesson for API designers is that if you have areas for future expansion, zero them out (or put in 0xdeadbeef or whatever your favourite pattern is) and verify the pattern is still present in every API call, causing an error if not.</p>
<p>Unfortunately it is commercially impossible to go back and fix this kind of thing.  You end up having to have special modes (eg on Macs to deal with the address bit issues) or just deal with it, as Raymond describes.</p>
<p>I asked about the ACT in another thread, and I guess it applies here too.  Does the ACT detect this?  If a program does this, can it still get Windows certified?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-219163">
				<div id="div-comment-219163" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Anon</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041019-00/?p=37533#comment-219163">
			October 19, 2004 at 1:51 pm</a>		</div>

		<p>Given how many headaches Microsoft has with compatibility, does it do anything to prevent developers using the APIs in &quot;broken but works&quot; ways?  Example, in this case the first version of the Listview control could have checked the lparam hadn&#8217;t been changed, and throw an exception if  it had.  Then it would have been impossible for any developers to abuse this particular part of the API.  </p>
<p>Okay, you can&#8217;t do that retroactively, but is this being done for new APIs?  This might save you a lot of headaches in five years time.  If the doc says that certain members are reserved and to be left zero for forwards compatibility, *check* they are zero, so developers have to store their own data in a future-proof way.  If the doc says that the order of a list is unspecified, randomise the order so that developers cannot rely on whatever order your internals put them in.  That sort of thing.  A pain in the short term, but it would product massive savings in the long term.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-219173">
				<div id="div-comment-219173" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://weblogs.asp.net/oldnewthing/' rel='external nofollow' class='url'>Raymond Chen</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041019-00/?p=37533#comment-219173">
			October 19, 2004 at 2:47 pm</a>		</div>

		<p>&quot;&#8230; checked that the lparam hadn&#8217;t been changed&#8230;&quot;</p>
<p>Are you saying that Listview should keep two copies of all its data and raise an exception if it finds that the two copies ever fall out of sync? (And that still won&#8217;t stop people from going in and hacking *both* undocumented members simultaneously, once they find where the second copy is kept.)</p>
<p>And where do you keep the second copy of things that have only one copy?  There is only one GWLP_USERDATA. Where do you keep the backup copy to check whether the first copy has gone bad?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-219203">
				<div id="div-comment-219203" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://weblogs.asp.net/oldnewthing/' rel='external nofollow' class='url'>Raymond Chen</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041019-00/?p=37533#comment-219203">
			October 19, 2004 at 3:19 pm</a>		</div>

		<p>&quot;Simply allow me to saveretreive header specific data through the ListView_* functions&quot;</p>
<p>Why does there have to be a ListView_* function for something you can do yourself? Create a little array, save your header-specific data there. You added the columns yourself after all.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-219273">
				<div id="div-comment-219273" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://weblogs.asp.net/oldnewthing/' rel='external nofollow' class='url'>Raymond Chen</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041019-00/?p=37533#comment-219273">
			October 19, 2004 at 10:44 pm</a>		</div>

		<p>The app compat toolkit can&#8217;t catch everything. If your program parties on another window, the app compat toolkit doesn&#8217;t know whether it&#8217;s doing it with permission or not.</p>
<p>In the case discussed in this article, the app found a window and started messing with it. Even though the window semantically doesn&#8217;t belong to that program directly; it belongs to the listview.</p>
<p>How would you write an ACT rule to catch apps messing with windows they &quot;shouldn&#8217;t be messing with&quot;?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-219283">
				<div id="div-comment-219283" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Fox Cutter</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041019-00/?p=37533#comment-219283">
			October 19, 2004 at 11:55 pm</a>		</div>

		<p>The lesson I take from this is to set all my unused but exposed data (assuming I know about them, one would hope that I did) to a well known value, then return an error if that changes.</p>
<p>It&#8217;s not a perfect thing, but it should at least provide two hands of protection.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-219293">
				<div id="div-comment-219293" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">asdf</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041019-00/?p=37533#comment-219293">
			October 20, 2004 at 12:11 am</a>		</div>

		<p>.dan.g: They didn&#8217;t do anything fancy here, the header is a child of the listview and gets clipped during painting automatically because of WS_CLIPCHILDREN. All you have to do is offset the y-coordinate during the mouse messages and adjust the origin during the paint messages with SetWindowOrgEx/OffsetWindowOrgEx by header.height(). There may be other places they had to touch but those are the main ones most people have to worry about (it&#8217;s better if you plan for that ahead of time instead of tacking it on later though).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-219303">
				<div id="div-comment-219303" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Tony</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041019-00/?p=37533#comment-219303">
			October 20, 2004 at 1:35 am</a>		</div>

		<p>So, now that they worked around the problem, are we actually now allowed to use the LPARAM, i.e., the ListView is no longer the real owner of the header, but rather the app that owns the ListView?<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-219313">
				<div id="div-comment-219313" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Whatever</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041019-00/?p=37533#comment-219313">
			October 20, 2004 at 2:21 am</a>		</div>

		<p>The problem is/was the documentation. If something is not marked RFU, must have a value of X, or something like that then it is fair game.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-219323">
				<div id="div-comment-219323" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ben Cooke</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041019-00/?p=37533#comment-219323">
			October 20, 2004 at 2:30 am</a>		</div>

		<p>Tony,</p>
<p>Since MS has committed to not overwriting it now (to keep the important admin app running) I see no reason at all why you can&#8217;t clobber it to your heart&#8217;s content.<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-219333">
				<div id="div-comment-219333" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Petr Kadlec</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041019-00/?p=37533#comment-219333">
			October 20, 2004 at 4:27 am</a>		</div>

		<p>Although it really is amusing to read all those stories about &quot;bad guys&quot; who did something wrong and nowadays we have a few megs of code only to catch them, what is the real moral in that?</p>
<p>The only lesson I have learned is that I can use any dirty trick I want, if my app would be important enough that MS would test it (and then make sure it won&#8217;t break). Why should I use ACT if MS will do that for me (and &quot;repair&quot; Windows accordingly)? (And if my app is not important enough, I&#8217;ll just post some info about the trick to a newsgroup, someone else&#8217;s important app will use it.)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-219343">
				<div id="div-comment-219343" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.divil.co.uk/net' rel='external nofollow' class='url'>Tim Dawson</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041019-00/?p=37533#comment-219343">
			October 20, 2004 at 4:31 am</a>		</div>

		<p>As Raymond said, as a programmer, <em>you</em> are adding the columns so <em>you</em> can create yourself a little array, or hashtable, or whatever takes your fancy to associate that little piece of data with each column as you add them.</p>
<p>I&#8217;m sick of people using (or trying hard to use) user interface controls as data storage mechanisms. They&#8217;re just not meant for this. My theory is that 99% of the time this comes from laziness. Store all your data in your own structures/classes, and only enough in the presentation layer to refer back to those structures.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-219353">
				<div id="div-comment-219353" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://weblogs.asp.net/oldnewthing/' rel='external nofollow' class='url'>Raymond Chen</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041019-00/?p=37533#comment-219353">
			October 20, 2004 at 5:52 am</a>		</div>

		<p>&quot;Since MS has committed to not overwriting it now (to keep the important admin app running) I see no reason at all why you can&#8217;t clobber it to your heart&#8217;s content.&quot;</p>
<p>Well except that the compatibility shim probably won&#8217;t be applied to your app by default.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-219413">
				<div id="div-comment-219413" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">IUnknown</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041019-00/?p=37533#comment-219413">
			October 20, 2004 at 7:40 am</a>		</div>

		<p>About which LPARAM do you speak the hole time? With which function you can modify it?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-219483">
				<div id="div-comment-219483" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Anonymous Coward</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041019-00/?p=37533#comment-219483">
			October 20, 2004 at 8:37 am</a>		</div>

		<p>I agree that it would be difficult to write an ACT rule now.  This whole example is something that is real easy with  hindsight, but would have been really hard to predict, and it happens to everyone&#8217;s products and APIs from complex cases like this, to trivial cases like depending on undocumented command line flags.</p>
<p>However updating ACT to allow rules covering this case would solve the problem :-)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-219493">
				<div id="div-comment-219493" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://weblogs.asp.net/oldnewthing/' rel='external nofollow' class='url'>Raymond Chen</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041019-00/?p=37533#comment-219493">
			October 20, 2004 at 8:40 am</a>		</div>

		<p>Even today, how would you write the rule? Suppose you had it to do over again. What ACT rule would you write that would catch this and yet not fire false positives?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-219563">
				<div id="div-comment-219563" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Cooney</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041019-00/?p=37533#comment-219563">
			October 20, 2004 at 9:57 am</a>		</div>

		<p>re: conan&#8217;s 3 rules:</p>
<p>Crush your enemies, see them driven before you. This means that you do your best to drive your competitors out of business. Pissing off your customers by breaking their toys gives advantage to your enemies that you can avoid. Therefore, app compat is useful in maintaining your position only when a significant number of users use a particular toy.</p>
<p>As for hearing the lamentation of the women, once you&#8217;re sitting on a fat stack of cash, it&#8217;s fairly easy to find women. Or something like that.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-219583">
				<div id="div-comment-219583" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">James Summerlin</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041019-00/?p=37533#comment-219583">
			October 20, 2004 at 10:31 am</a>		</div>

		<p>Raymond,</p>
<p>Do you ever get the idea that some people are out to disagree with you ONLY because you work for Microsoft?</p>
<p>People, get real, some of you are going way the hell out of your way to JUSTIFY CRAPTACULAR PROGRAMMING MENTALITIES!!!</p>
<p>James</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-219623">
				<div id="div-comment-219623" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">lowercase josh</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041019-00/?p=37533#comment-219623">
			October 20, 2004 at 12:07 pm</a>		</div>

		<p>&quot;Are you saying that Listview should keep two copies of all its data and raise an exception if it finds that the two copies ever fall out of sync?&quot;</p>
<p>If you&#8217;re not using part of an internal data structure, but reserving it for later use, periodically reset it to some arbitrary value.  People won&#8217;t store data somewhere if it doesn&#8217;t stay there.  (of course, they&#8217;ll curse at Microsoft for not letting them store data there.)</p>
<p>But then that only applies to this case, and is of no help now.  The concept is good though:  If you reserve the right to break something later, break it now.  Assuming it&#8217;s fast enough that nobody else notices.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-219633">
				<div id="div-comment-219633" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://weblogs.asp.net/oldnewthing/' rel='external nofollow' class='url'>Raymond Chen</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041019-00/?p=37533#comment-219633">
			October 20, 2004 at 12:26 pm</a>		</div>

		<p>But it&#8217;s not an internal data structure. It&#8217;s an *external* data structure of the Header control. (The lParam member of the HDITEM structure.) Are you saying that the listview should intentionally go around and reset every single external property of the Header control periodically, just to make sure nobody else uses them?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-219723">
				<div id="div-comment-219723" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Anonymous Coward</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041019-00/?p=37533#comment-219723">
			October 20, 2004 at 8:28 pm</a>		</div>

		<p>The only way I can think of to get ACT to work would involve the Listview cooperating (ie marking when it changes the value of the field).  Detecting when it has changed is also very hard.  You could probably check the value of the field on every call to Listview methods, so you&#8217;ll catch changes after they are made, but it requires keep track of which ones were ever returned etc.  Yuck!</p>
<p>With hindsight, the answer is to zero out/set to known value space reserved for future use and check it is that way in all other relevant calls.</p>
<p>The other alternative strategy is to name and shame the relevant companies, but that is ultimately unlikely to work either technically or commercially.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-219803">
				<div id="div-comment-219803" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Tony</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041019-00/?p=37533#comment-219803">
			October 21, 2004 at 4:18 am</a>		</div>

		<p>What do I need to do to get my app&#8217;s list control into that state?  Does it automatically use this (LPARAM) location when using XP Visual Styles, or is it only in certain views at the moment?</p>
<p>Also, what is it using it for (out of interest)?</p>
<p>Finally, if I do want access, presumably, I can create my list control without a header, create my own header, and party all over the LPARAM as it&#8217;s mine, mine, mine!<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-220473">
				<div id="div-comment-220473" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.foxyshadis.com' rel='external nofollow' class='url'>foxyshadis</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041019-00/?p=37533#comment-220473">
			October 22, 2004 at 10:54 pm</a>		</div>

		<p>&quot;The problem is/was the documentation. If something is not marked RFU, must have a value of X, or something like that then it is fair game.&quot;</p>
<p>This only applies if developers read the docs, and care &#8211; if they just poke around data structures while debugging and find usable space, it&#8217;s all over. I once inherited code that used C++ pointer tricks and a pliable compiler to stuff data into crevices of windows&#8217; data structures that I&#8217;d never heard of, most of which had held system or interface data that the coder decided weren&#8217;t absolutely required. Crashes and colorful corruptions were quite regular. Naturally, it survived the transition to NT about as well as poland survived the nazis.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-579383">
				<div id="div-comment-579383" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.eriknovales.com/blog/index.php/2007/12/20/even-when-you-wrote-the-operating-system-you-still-have-to-work-around-other-peoples-bugs/' rel='external nofollow' class='url'>Even When You Wrote the Operating System, You Still Have to Work Around Other Peoples&#8217; Bugs</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041019-00/?p=37533#comment-579383">
			December 20, 2007 at 2:01 pm</a>		</div>

		<p>PingBack from <a rel="nofollow" target="_new" href="http://www.eriknovales.com/blog/index.php/2007/12/20/even-when-you-wrote-the-operating-system-you-still-have-to-work-around-other-peoples-bugs/" rel="nofollow">http://www.eriknovales.com/blog/index.php/2007/12/20/even-when-you-wrote-the-operating-system-you-still-have-to-work-around-other-peoples-bugs/</a></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-598443">
				<div id="div-comment-598443" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blogs.msdn.com/oldnewthing/archive/2008/02/05/7452279.aspx' rel='external nofollow' class='url'>The Old New Thing</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041019-00/?p=37533#comment-598443">
			February 5, 2008 at 11:10 am</a>		</div>

		<p>Don&#8217;t run around dorking with somebody else&#8217;s stuff.</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>