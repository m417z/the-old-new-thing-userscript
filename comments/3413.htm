<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (30)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-1074573">
				<div id="div-comment-1074573" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Clipboarder Gadget</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130826-00/?p=3413#comment-1074573">
			August 26, 2013 at 7:13 am</a>		</div>

		<p>Ha, I noticed the unusual lengthy version of GetRectCenter before I read the Exercise. Its point surely is to prevent an overflow in the case the window happens to be on the far, far right or bottom.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1074583">
				<div id="div-comment-1074583" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Adam Rosenfield</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130826-00/?p=3413#comment-1074583">
			August 26, 2013 at 7:28 am</a>		</div>

		<p>You should have waited 22 more days for today&#39;s article, then you could have posted the same exercise you posted 10 years prior: <a rel="nofollow" target="_new" href="http://blogs.msdn.com/b/oldnewthing/archive/2003/09/17/54945.aspx">blogs.msdn.com/&#8230;/54945.aspx</a></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-alegrigoriev even thread-even depth-1" id="comment-1074593">
				<div id="div-comment-1074593" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/alegr1' rel='external nofollow' class='url'>alegr1</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130826-00/?p=3413#comment-1074593">
			August 26, 2013 at 7:58 am</a>		</div>

		<p>If your LONG coordinates in POINT structure are causing integer overflow, you must have some billions of monitors.</p>
<div class="post">[<em>If the function were called GetScreenRectCenter, maybe. But this is a generic center-finding function. A better exercise would be to make a generic center-finding function that didn&#39;t suffer from either limitation. -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1074603">
				<div id="div-comment-1074603" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Bob</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130826-00/?p=3413#comment-1074603">
			August 26, 2013 at 9:11 am</a>		</div>

		<p>The first version of GetRectCenter will always round toward the top left corner, not so for the second.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1074613">
				<div id="div-comment-1074613" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">ErikF</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130826-00/?p=3413#comment-1074613">
			August 26, 2013 at 9:12 am</a>		</div>

		<p>If you know the right way of doing something and the wrong way of doing something, why would you choose the wrong way? It&#39;s the principle of the thing! (At least, that&#39;s what my teachers beat into me!)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-alegrigoriev odd alt thread-odd thread-alt depth-1" id="comment-1074623">
				<div id="div-comment-1074623" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/alegr1' rel='external nofollow' class='url'>alegr1</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130826-00/?p=3413#comment-1074623">
			August 26, 2013 at 9:32 am</a>		</div>

		<p>If you want to beat the integer overflow, your second variant will not work either for windows larger than LONG_MAX.</p>
<p>The version that works:</p>
<p>POINT GetRectCenter(LPCRECT prc)</p>
<p>{</p>
<p> &nbsp;POINT pt = {</p>
<p> &nbsp; &nbsp;prc-&gt;left + (unsigned)(prc-&gt;right &#8211; prc-&gt;left) / 2,</p>
<p> &nbsp; &nbsp;prc-&gt;top + (unsigned)(prc-&gt;bottom &#8211; prc-&gt;top) / 2</p>
<p> &nbsp;};</p>
<p> &nbsp;return pt;</p>
<p>}</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1074633">
				<div id="div-comment-1074633" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">John Muller</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130826-00/?p=3413#comment-1074633">
			August 26, 2013 at 9:35 am</a>		</div>

		<p>Whenever I see Left/Right in UI code, I think &quot;test in a bi-di system&quot;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1074643">
				<div id="div-comment-1074643" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joker_vD</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130826-00/?p=3413#comment-1074643">
			August 26, 2013 at 10:37 am</a>		</div>

		<p>&quot;You may have discovered that it doesn&#39;t work for all dialog boxes. Why not?&quot;</p>
<p>The universal answer on questions of such sort is &quot;And how would it work?&quot;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-alegrigoriev even thread-even depth-1" id="comment-1074653">
				<div id="div-comment-1074653" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/alegr1' rel='external nofollow' class='url'>alegr1</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130826-00/?p=3413#comment-1074653">
			August 26, 2013 at 10:47 am</a>		</div>

		<p>Another consideration for this kind of functions:</p>
<p>If there is a possibility it can be implemented wrong, it might be mplemented wrong in the OS libraries. A prudent programmer would instead make sure they never use such large coordinates in the program, to avoid possibility of the OS code mishandling them.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-xpclientgmail-com odd alt thread-odd thread-alt depth-1" id="comment-1074663">
				<div id="div-comment-1074663" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/xpclient' rel='external nofollow' class='url'>xpclient</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130826-00/?p=3413#comment-1074663">
			August 26, 2013 at 10:49 am</a>		</div>

		<p>As Windows versions &quot;improve&quot;, it works for less and less dialogs. e.g the new copy progress and conflict dialogs in Windows 8 don&#39;t support &#39;snap to&#39;. The number of dialogs it doesn&#39;t work with keeps increasing.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1074673">
				<div id="div-comment-1074673" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Pseudo-Anonymous</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130826-00/?p=3413#comment-1074673">
			August 26, 2013 at 11:14 am</a>		</div>

		<p>Eventually, as the number of dialogs which support &quot;Snap To&quot; decrease, Microsoft will remove the feature. If questioned, they will state the reason why they removed the feature is because nobody uses it.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-dwalker-wk odd alt thread-odd thread-alt depth-1" id="comment-1074683">
				<div id="div-comment-1074683" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/DWalker' rel='external nofollow' class='url'>DWalker</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130826-00/?p=3413#comment-1074683">
			August 26, 2013 at 11:37 am</a>		</div>

		<p>I would have guessed that things like &quot;Snap to&quot; would not work for things that are called &quot;non-standard&quot; just as a matter of course. &nbsp;Hence the name &quot;non-standard&quot;! &nbsp;The other half of the question, &quot;how do I do it&quot;, is of course more interesting.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1074693">
				<div id="div-comment-1074693" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130826-00/?p=3413#comment-1074693">
			August 26, 2013 at 1:17 pm</a>		</div>

		<p>Ah good xpclient&#39;s back. You know, he&#39;s got a point. MS sure lacks the attention to detail they once had.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1074703">
				<div id="div-comment-1074703" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blogs.msdn.com/dave3283_4000_gmail.com/ProfileUrlRedirect.ashx' rel='external nofollow' class='url'>dave3283@gmail.com</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130826-00/?p=3413#comment-1074703">
			August 26, 2013 at 1:50 pm</a>		</div>

		<p>It&#39;s not just Microsoft. Almost nobody writes programs with accessibility in mind (even me, sometimes). I still get strange looks when I check in a fix that is nothing but correcting the tab-order of a form to something sane, instead of the semi-random order it ends up in after using the UI designer. Apparently, I&#39;m the only one at work who tabs between fields in programs.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1074713">
				<div id="div-comment-1074713" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blogs.msdn.com/codevisio_4000_gmail.com/ProfileUrlRedirect.ashx' rel='external nofollow' class='url'>codevisio@gmail.com</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130826-00/?p=3413#comment-1074713">
			August 26, 2013 at 3:14 pm</a>		</div>

		<p>&quot;What assumptions are made about the rectangle by the Get&shy;Rect&shy;Center function? How do they differ from the assumptions made by this alternate version&quot;</p>
<p>The first version assumes the rect express an absolute coordinates. the second version assumes the rect be expresse as coorindate point plus offsets.</p>
<div class="post">[<em>Not sure what you&#39;re getting at here. Both versions expect the rectangle to be expressed in terms of <a href="http://msdn.microsoft.com/library/dd162897">this structure</a>. -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1074743">
				<div id="div-comment-1074743" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blogs.msdn.com/codevisio_4000_gmail.com/ProfileUrlRedirect.ashx' rel='external nofollow' class='url'>codevisio@gmail.com</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130826-00/?p=3413#comment-1074743">
			August 26, 2013 at 11:35 pm</a>		</div>

		<p>[QUOTE]Not sure what you&#39;re getting at here. Both versions expect the rectangle to be expressed in terms of this structure. -Raymond[/QUOTE]</p>
<p>I try to repeat it with different words.</p>
<p>I know at least two ways to store coordinates about a window rectangle with the RECT structure.</p>
<p>1-way) left &amp; top fields store the x and y axis coordinates of the left-top point of your rectangle (in your case screen coordinate) while right and bottom fields store the x and y axis coordinates of the right-bottom point of your rectangle (again in your case screen coordinates). Those are absolute position in Windows screen coordinate.</p>
<p>2-way) left &amp; top fields store the x and y axis coordinates of the left-top point of your rectangle (in your case screen coordinate) while the right and bottom fields this time store the offset values of the sides of you rectangle (expressed in same coordinate system obviously).</p>
<p>Am I right?</p>
<div class="post">[<em>Windows uses method 1, <a href="http://msdn.microsoft.com/library/dd162897">as documented in MSDN</a>. If you want to use method 2, then don&#39;t call your structure <code>RECT</code>. That&#39;ll just confuse people. -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1074753">
				<div id="div-comment-1074753" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Marcel</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130826-00/?p=3413#comment-1074753">
			August 27, 2013 at 12:53 am</a>		</div>

		<p>@CodeVisio: I don&#39;t think the RECT structure should ever be used this way (your 2nd way) and it certainly isn&#39;t in example no. 2, because the result would be wrong. Both examples work on the same input values.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1074773">
				<div id="div-comment-1074773" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">AC</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130826-00/?p=3413#comment-1074773">
			August 27, 2013 at 2:23 am</a>		</div>

		<p>Raymond: &quot;A better exercise would be to make a generic center-finding function that didn&#39;t suffer from either limitation.&quot;</p>
<p>Now you&#39;ve got me confused. &quot;Either&quot; limitation? I thought your first version doesn&#39;t suffer from overflow and is correct. What limitation is there left in it?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1074783">
				<div id="div-comment-1074783" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Neil</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130826-00/?p=3413#comment-1074783">
			August 27, 2013 at 3:37 am</a>		</div>

		<p>AC: Did you not see alegra1&#39;s comment? The first version fails if the window is too wide to fit in a signed type.</p>
<p>The second version fails if the sum overflows. There is another approach I found through a quick search. It&#39;s based on the identity (a + b) = (a &amp; b) * 2 + (a ^ b), so the midpoint between a and b could be calculated as (a &amp; b) + (a ^ b) / 2.</p>
<p>Of course this still assumes that the rectangle lies wholly within the range of the signed type, so that if the right is to the left of the left then there is some reflection going on, while alegra1&#39;s version allows for a toroidal coordinate system.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1074793">
				<div id="div-comment-1074793" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Neil</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130826-00/?p=3413#comment-1074793">
			August 27, 2013 at 3:40 am</a>		</div>

		<p>@DAVe3283Martin: That annoys me for web pages too. I think there was a popular blogging software (I forget which one) where the submit button did not follow the comment field in the tab order.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1074803">
				<div id="div-comment-1074803" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Danny</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130826-00/?p=3413#comment-1074803">
			August 27, 2013 at 4:55 am</a>		</div>

		<p>1st version makes the assumption the origin (0, 0) is in top-left corner. The second makes the assumption the origin is like we are taught in math class at school (bottom-left corner).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1074823">
				<div id="div-comment-1074823" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blogs.msdn.com/raceprouk_4000_hotmail.co.uk/ProfileUrlRedirect.ashx' rel='external nofollow' class='url'>raceprouk@hotmail.co.uk</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130826-00/?p=3413#comment-1074823">
			August 27, 2013 at 7:18 am</a>		</div>

		<p>Ah, xpclient. Thou dost despair greatly at thine dialogs that contain no button of default status.</p>
<p>Hey, if I&#39;m gonna feed the trolls, may as well have a little fun :)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1074913">
				<div id="div-comment-1074913" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Rick C</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130826-00/?p=3413#comment-1074913">
			August 27, 2013 at 8:31 am</a>		</div>

		<p>@DAVe3283Martin &quot;Apparently, I&#39;m the only one at work who tabs between fields in programs.&quot;</p>
<p>Yup, that&#39;s very frustrating. &nbsp;Most people will use the mouse to change fields and then move their hands to the keyboard to enter text, and then mouse to the next field, and so on. &nbsp;Worse, they&#39;re so used to doing it that way, you can&#39;t really get them to switch to using Tab (and even if you did, so many programs no longer have meaningful ordering.)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1074963">
				<div id="div-comment-1074963" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">JD</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130826-00/?p=3413#comment-1074963">
			August 27, 2013 at 10:21 am</a>		</div>

		<p>Also the first version will divide by zero if passed an empty rect. Whether a zero-area construct has a &quot;center&quot; and therefore what the desired behavior would be is left as an exercise for the reader.</p>
<div class="post">[<em>Not sure what you&#39;re getting at. 0/2 is not division by zero. -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1074983">
				<div id="div-comment-1074983" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Nick</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130826-00/?p=3413#comment-1074983">
			August 27, 2013 at 11:58 am</a>		</div>

		<p>[Not sure what you&#39;re getting at. 0/2 is not division by zero. -Raymond]</p>
<p>But it&#39;s so close, it&#39;s scary! &nbsp;02 &nbsp;Bam, there it is. &nbsp;And people get those back/forward/left/right/one-next-to-backspace slashes mixed up all the time!</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1075013">
				<div id="div-comment-1075013" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blogs.msdn.com/codevisio_4000_gmail.com/ProfileUrlRedirect.ashx' rel='external nofollow' class='url'>codevisio@gmail.com</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130826-00/?p=3413#comment-1075013">
			August 27, 2013 at 12:28 pm</a>		</div>

		<p>@Marcel,</p>
<p>you can use the structure RECT as you wish as long as in your code you are coherent with your assumptions. It is obvious that if you need to pass it to a WIN32 function that expects the RECT structure as described in the MSDN (as Raymond pointed out) you should honor the meaning/semantic it is supposed to be.</p>
<p>@Raymond,</p>
<p>Yes, you are right, I was to fast answering you. Is the assumption about GetClientRect()? ( left = top = 0 ).</p>
<div class="post">[<em>Um, the program never calls <code>GetClientRect</code>. -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1075033">
				<div id="div-comment-1075033" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Random User 82094828</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130826-00/?p=3413#comment-1075033">
			August 27, 2013 at 2:42 pm</a>		</div>

		<p>@CodeVisio</p>
<p>Yes. YMMV, but when I search for &quot;GetClientRect&quot;, the first MSDN hit has this as the third sentence: &quot;Because client coordinates are relative to the upper-left corner of a window&#39;s client area, the coordinates of the upper-left corner are (0,0).&quot;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-alegrigoriev odd alt thread-odd thread-alt depth-1" id="comment-1075053">
				<div id="div-comment-1075053" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/alegr1' rel='external nofollow' class='url'>alegr1</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130826-00/?p=3413#comment-1075053">
			August 27, 2013 at 4:20 pm</a>		</div>

		<p>You can totally divide by zero. Or so I&#39;ve seen on certain educational flash charts (Math in a flash) for division.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1075083">
				<div id="div-comment-1075083" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">640k</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130826-00/?p=3413#comment-1075083">
			August 27, 2013 at 4:31 pm</a>		</div>

		<p>Division by 0 is defined as undefined. Performance to handle the exceptions, and the additional work for maintain bloated code, is of course a turn off.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-mike-dimmick odd alt thread-odd thread-alt depth-1" id="comment-1075163">
				<div id="div-comment-1075163" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Mike+Dimmick' rel='external nofollow' class='url'>Mike Dimmick</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130826-00/?p=3413#comment-1075163">
			August 28, 2013 at 11:20 am</a>		</div>

		<p>On the subject of what RECT means, I uncovered a horror recently where some code I was modifying passed a .NET Rectangle to a Win32 API expecting a RECT. RECT is left, top, right, bottom. Rectangle is left, top, *width*, *height*. If the top-left co-ordinate is not (0,0) it does not behave as you expect &#8211; but all the code *looks* right.</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>