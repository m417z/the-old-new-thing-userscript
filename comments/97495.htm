<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (3)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1 parent" id="comment-1317325">
				<div id="div-comment-1317325" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Neil</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20171130-00/?p=97495#comment-1317325">
			December 1, 2017 at 2:52 am</a>		</div>

		<p>Normally I&#8217;d use the the % operator for anything that deliberately wraps around (e.g. November + 3 = February) although the usage would be a little awkward in this case.</p>

		
				</div>
		<ol class="children">
		<li class="comment odd alt depth-2 parent" id="comment-1317406">
				<div id="div-comment-1317406" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">IInspectable</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20171130-00/?p=97495#comment-1317406">
			December 3, 2017 at 2:27 am</a>		</div>

		<p>That pattern is fine, if you are using the full range of values (i.e. <i>[0 .. N)</i>). In this case, however, index 0 is unused. Applying the modulo-operator will make the expression more complex, and harder to comprehend and debug.</p>

		
				</div>
		<ol class="children">
		<li class="comment even depth-3" id="comment-1317426">
				<div id="div-comment-1317426" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">ErikF</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20171130-00/?p=97495#comment-1317426">
			December 3, 2017 at 10:53 am</a>		</div>

		<p>The operation isn&#8217;t that hard (it&#8217;s just [0..N-1] =&gt; [1..N], so it would look like &#8220;(index % (N-1)) + 1)&#8221;), but it&#8217;s sufficiently obtuse that I&#8217;d have to comment it really thoroughly. I have to assume that compilers nowadays are smart enough to find these kinds of operations and optimize them, so there&#8217;s less need for the fancy math.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>