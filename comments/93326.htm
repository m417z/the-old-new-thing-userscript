<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (25)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment byuser comment-author-archangelpip even thread-even depth-1" id="comment-1244926">
				<div id="div-comment-1244926" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Darran+Rowe' rel='external nofollow' class='url'>Darran Rowe</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160421-00/?p=93326#comment-1244926">
			April 21, 2016 at 7:25 am</a>		</div>

		<p>This interestingly shows how confusing all of this stuff around security can be, if even large companies can do it.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1 parent" id="comment-1244946">
				<div id="div-comment-1244946" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160421-00/?p=93326#comment-1244946">
			April 21, 2016 at 8:38 am</a>		</div>

		<p>/me takes note</p>
<p>I think I just found a way out of the WinRT sandbox that the auto-analyzer can&#8217;t find.</p>

		
				</div>
		<ol class="children">
		<li class="comment even depth-2 parent" id="comment-1244977">
				<div id="div-comment-1244977" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Myria</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160421-00/?p=93326#comment-1244977">
			April 21, 2016 at 11:46 am</a>		</div>

		<p>I don&#8217;t understand.  WinRT applications really *are* in a sandbox enforced by the NT kernel (&#8220;lowbox token&#8221;), so if you can escape the WinRT sandbox, you would be crossing a security boundary with a real exploit.</p>

		
				</div>
		<ol class="children">
		<li class="comment odd alt depth-3 parent" id="comment-1245136">
				<div id="div-comment-1245136" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160421-00/?p=93326#comment-1245136">
			April 22, 2016 at 11:05 am</a>		</div>

		<p>Modern UI is unusable to me. The bug filed against Windows 8 stands yet unfixed. Unless I find a solution that allows CreateWindowEx(&#8230;, HWND_DESKTOP, &#8230;) to succeed RT might as well not exist at all.</p>

		
				</div>
		<ol class="children">
		<li class="comment even depth-4 parent" id="comment-1245146">
				<div id="div-comment-1245146" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Anon</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160421-00/?p=93326#comment-1245146">
			April 22, 2016 at 12:24 pm</a>		</div>

		<p>If you want to write a desktop app, write a desktop app. If the &#8220;bug&#8221; is that you can&#8217;t escape the WinRT sandbox, that&#8217;s not a bug. That&#8217;s literally the only purpose of the sandbox.</p>

		
				</div>
		<ol class="children">
		<li class="comment odd alt depth-5" id="comment-1245156">
				<div id="div-comment-1245156" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160421-00/?p=93326#comment-1245156">
			April 22, 2016 at 12:45 pm</a>		</div>

		<p>The bug is a font rendering flaw in Modern UI.</p>
<p>Can you write a desktop app for RT without using an exploit yet?</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment byuser comment-author-dwalker-wk even depth-4" id="comment-1245195">
				<div id="div-comment-1245195" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/DWalker' rel='external nofollow' class='url'>DWalker</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160421-00/?p=93326#comment-1245195">
			April 22, 2016 at 1:35 pm</a>		</div>

		<p>Your messages are confusing.  If the Modern UI is &#8220;unusable&#8221; to you, that&#8217;s fine.  Don&#8217;t use it.</p>
<p>I have no idea what you mean by &#8220;the bug filed against Windows 8 stands yet unfixed&#8221;.  Which bug?  If you mean the font rendering flaw that you mentioned later, I predict that a font rendering flaw in Windows 8 is not high on Microsoft&#8217;s list of things to fix right now, in late spring 2016.  Windows 8 likely won&#8217;t get much attention.</p>
<p>&#8220;A way out of the WinRT sandbox that the auto-analyzer can&#8217;t find&#8221; is also confusing.  If you can get out of the WinRT sandbox under running code, that&#8217;s noteworthy.  If the auto-analyzer doesn&#8217;t point it out, then that&#8217;s perhaps a problem in the auto-analyzer. </p>
<p>&#8220;Can you write a desktop app for RT without using an exploit&#8221;.  Who is &#8220;you&#8221;?  Do you mean ANYONE?   Do people generally use exploits to write desktop apps &#8220;for RT&#8221;?</p>
<p>Maybe I shouldn&#8217;t feed you&#8230;.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt depth-4 parent" id="comment-1245255">
				<div id="div-comment-1245255" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Klimax</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160421-00/?p=93326#comment-1245255">
			April 23, 2016 at 9:53 am</a>		</div>

		<p>I see you mentioned later &#8220;font rendering&#8221; bug, but what is the nature, what is repro of it and how does it manifest.. Does it affect Windows 8.1 or not (aka Windows 8.0 only) and does it repro on Windows 10? I got few projects for WinRT, Universal Apps, so I am curious what are you talking about.</p>

		
				</div>
		<ol class="children">
		<li class="comment even depth-5" id="comment-1245295">
				<div id="div-comment-1245295" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160421-00/?p=93326#comment-1245295">
			April 24, 2016 at 7:53 am</a>		</div>

		<p>Try turning off anti-aliasing altogether. It doesn&#8217;t work. But I must turn it off.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt depth-5" id="comment-1245306">
				<div id="div-comment-1245306" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Klimax</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160421-00/?p=93326#comment-1245306">
			April 24, 2016 at 2:24 pm</a>		</div>

		<p>Pretty sure not a bug. (aka by design) Second, why? You are still leaving many questions unanswered. I hope you reported design oversight far better then that.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1 parent" id="comment-1244986">
				<div id="div-comment-1244986" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Nico</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160421-00/?p=93326#comment-1244986">
			April 21, 2016 at 12:27 pm</a>		</div>

		<p>Isn&#8217;t the usual concern these days about remote attacks, usually proxied by a web browser?  So for example:</p>
<p>IE^H^HEdge gets a webpage from evil.com with Javascript that creates a canvas element.  Edge uses Direct2D for canvas.  The Javascript somehow gets Edge to pass the wrong buffer size which causes DirectX to read past the array and into SekritMemoryData[].  This is returned to the browser as a bag of bytes, and returned to the server via an async call.</p>
<p>Combine this with memory pressure (<a href="http://www.theregister.co.uk/2015/04/21/cache_creeps_can_spy_on_web_histories_for_80_of_net_users/" rel="nofollow">http://www.theregister.co.uk/2015/04/21/cache_creeps_can_spy_on_web_histories_for_80_of_net_users/</a>) or something and maybe you can get the data you want.  Or execute code. Or something.</p>
<p>Or not.</p>

		
				</div>
		<ol class="children">
		<li class="comment odd alt depth-2 parent" id="comment-1244995">
				<div id="div-comment-1244995" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">pc</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160421-00/?p=93326#comment-1244995">
			April 21, 2016 at 12:40 pm</a>		</div>

		<p>And if Edge does pass the wrong buffer to DirectX, that&#8217;s a security bug in Edge, not in DirectX.</p>

		
				</div>
		<ol class="children">
		<li class="comment even depth-3" id="comment-1245055">
				<div id="div-comment-1245055" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Falcon</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160421-00/?p=93326#comment-1245055">
			April 21, 2016 at 10:08 pm</a>		</div>

		<p>Exactly &#8211; Edge (or its Javascript interpreter) is the one operating with untrusted data. The Javascript code presumably doesn&#8217;t even have access to the DirectX API &#8211; otherwise it wouldn&#8217;t work on platforms without DirectX.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1245025">
				<div id="div-comment-1245025" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">henke37</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160421-00/?p=93326#comment-1245025">
			April 21, 2016 at 5:04 pm</a>		</div>

		<p>There isn&#8217;t a tag for these posts yet?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1 parent" id="comment-1245045">
				<div id="div-comment-1245045" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Alan</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160421-00/?p=93326#comment-1245045">
			April 21, 2016 at 10:06 pm</a>		</div>

		<p>My experience that when someone sends you an unsolicited PowerPoint deck to read, one can safely delete it unread.</p>

		
				</div>
		<ol class="children">
		<li class="comment odd alt depth-2" id="comment-1245155">
				<div id="div-comment-1245155" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Anon</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160421-00/?p=93326#comment-1245155">
			April 22, 2016 at 12:26 pm</a>		</div>

		<p>If your job is to read unsolicited documents sent by customers, that&#8217;s also a great way to get fired.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment even thread-odd thread-alt depth-1" id="comment-1245065">
				<div id="div-comment-1245065" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Falcon</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160421-00/?p=93326#comment-1245065">
			April 21, 2016 at 10:10 pm</a>		</div>

		<p>Maybe they could share some wisdom with us on how to validate the size of a (void *)?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-even depth-1" id="comment-1245066">
				<div id="div-comment-1245066" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Scarlet Manuka</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160421-00/?p=93326#comment-1245066">
			April 21, 2016 at 11:39 pm</a>		</div>

		<p>&#8220;You can tell it’s a professional operation because the vulnerability report took the form of a neatly-formatted PowerPoint presentation with corporate logos in every corner. Unfortunately, you’ll have to make do with my distillation into boring text.&#8221;</p>
<p>But you&#8217;re so good with the HTML fake images and such! Couldn&#8217;t you have rigged up at least a few pretend logos? I really feel like I&#8217;m missing out now. </p>
<p>Not even bullet points on the list? C&#8217;mon, throw us a bone here.</p>
<p>(no, not really)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-odd thread-alt depth-1 parent" id="comment-1245085">
				<div id="div-comment-1245085" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Mason Wheeler</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160421-00/?p=93326#comment-1245085">
			April 22, 2016 at 7:03 am</a>		</div>

		<p>So basically you&#8217;re saying that vulnerabilities that don&#8217;t involve privilege escalation aren&#8217;t real vulnerabilities?</p>
<p>Out of curiosity, have you seen <a href="http://www.xkcd.com/1200/" rel="nofollow">http://www.xkcd.com/1200/</a> ?</p>

		
				</div>
		<ol class="children">
		<li class="comment odd alt depth-2" id="comment-1245096">
				<div id="div-comment-1245096" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Kemp</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160421-00/?p=93326#comment-1245096">
			April 22, 2016 at 8:12 am</a>		</div>

		<p>Bad program behaviour != security vulnerability. In general, without elevation all you&#8217;re doing is finding a novel way to do something that your program could already do anyway. Remember, &#8220;security vulnerability&#8221; doesn&#8217;t mean the program gives out your gmail password, it means that the program allows your machine to be compromised in a way that your user account permissions should prevent.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even depth-2 parent" id="comment-1245116">
				<div id="div-comment-1245116" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">ChDF T</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160421-00/?p=93326#comment-1245116">
			April 22, 2016 at 10:33 am</a>		</div>

		<p>I think Raymonds point is, that the caller of the DirectX API can do the same things directly, without calling DirectX APIs at all. Therefore this behavior isn&#8217;t a vulnerability *in DirectX*. The post isn&#8217;t about whether this is a security vulnerability, but where the vulnerability is.</p>

		
				</div>
		<ol class="children">
		<li class="comment odd alt depth-3" id="comment-1245316">
				<div id="div-comment-1245316" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">smf</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160421-00/?p=93326#comment-1245316">
			April 25, 2016 at 12:09 am</a>		</div>

		<p>I&#8217;m not sure this even counts as a security vulnerability, they are passing the wrong size for a buffer. It&#8217;s only a vulnerability if a user of the software has control over the size of the buffer, this is just a bug.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment even depth-2" id="comment-1245226">
				<div id="div-comment-1245226" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Aurora</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160421-00/?p=93326#comment-1245226">
			April 22, 2016 at 11:55 pm</a>		</div>

		<p>Basically, yeah. Raymond is saying that trusted code causing a crash in the same &#8220;security context&#8221; is not a security issue, because that doesn&#8217;t cross any security boundaries. </p>
<p>That xkcd is completely irrelevant. Privilege escalation isn&#8217;t only from a user account to an admin account. Something like Javascript code in a browser getting the full permissions of the user account also counts would be an actual exploit, because then the Javascript code can do something it&#8217;s not supposed to be able to do. In this case, the program is using an &#8220;exploit&#8221; to do something it was already supposed to be able to do (read/write to its own process&#8217; memory), something which is not very interesting at all.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment odd alt thread-even depth-1 parent" id="comment-1245125">
				<div id="div-comment-1245125" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joop</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160421-00/?p=93326#comment-1245125">
			April 22, 2016 at 10:40 am</a>		</div>

		<p>&#8220;MS07-052: Code execution results in code execution&#8221; is such a great and funny summary! :D And nice that you linked to the original author&#8217;s comment.</p>

		
				</div>
		<ol class="children">
		<li class="comment even depth-2" id="comment-1245435">
				<div id="div-comment-1245435" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Brian</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160421-00/?p=93326#comment-1245435">
			April 25, 2016 at 1:57 pm</a>		</div>

		<p>And as the original author of that comment (nine years ago!) I still get a chuckle when I read Raymond&#8217;s deconstruction of these dubious vulnerabilities&#8230; doubly so when he drops the MS07-052 on them.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>