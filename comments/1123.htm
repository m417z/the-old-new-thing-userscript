<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (29)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-1122153">
				<div id="div-comment-1122153" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Lockwood</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140429-00/?p=1123#comment-1122153">
			April 29, 2014 at 7:12 am</a>		</div>

		<p>I created a test comment to see if I had write permission to the MSDN Blog comments area.</p>
<p>I cannot delete the test comment, however.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1122163">
				<div id="div-comment-1122163" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140429-00/?p=1123#comment-1122163">
			April 29, 2014 at 7:17 am</a>		</div>

		<p>The documentation used to read &quot;set this flag if operating on a create no modify network share&quot; as though I the programmer were psychic.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1122183">
				<div id="div-comment-1122183" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">RRR</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140429-00/?p=1123#comment-1122183">
			April 29, 2014 at 7:52 am</a>		</div>

		<p>So, if it&#39;s useless, why not suppress it by default or, even better, deprecate the damned thing?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1122193">
				<div id="div-comment-1122193" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">GWO</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140429-00/?p=1123#comment-1122193">
			April 29, 2014 at 8:00 am</a>		</div>

		<p>&quot;Suppose the server is running Windows for Workgroups (which has a 64-character maximum path name limit)&quot;</p>
<p>512 Bits should be enough for everyone&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1122203">
				<div id="div-comment-1122203" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Dan Bugglin</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140429-00/?p=1123#comment-1122203">
			April 29, 2014 at 8:08 am</a>		</div>

		<p>@Lockwood Fortunately, you were able to modify the comment to have the content you were going to put in the new comment anyway.</p>
<p>@steveg By NOT passing the flag your program can be (mostly) sure that you will be able to write to the file. &nbsp;By not passing it, you have to take some responsibility there, although the dialog may still do some other checks I suppose.</p>
<p>@RRR Legacy program support, yay. &nbsp;Also, if it ain&#39;t broke, don&#39;t fix it.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1122213">
				<div id="div-comment-1122213" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">ErikF</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140429-00/?p=1123#comment-1122213">
			April 29, 2014 at 8:14 am</a>		</div>

		<p>@RRR: It&#39;s not useless because you can still have conditions where a file can&#39;t be created for writing (write-only media, lost network connectivity, etc.) The documentation discusses those conditions but they seem to be worded as afterthoughts; see <a rel="nofollow" target="_new" href="http://msdn.microsoft.com/en-us/library/windows/desktop/ms646839(v=vs.85).aspx">msdn.microsoft.com/&#8230;/ms646839(v=vs.85).aspx</a> as an example.</p>
<p>Whether the function should do this is a separate question of course, as you could still be unable to write to the file even after you&#39;ve been told that everything&#39;s good. (Moral of the story: don&#39;t assume anything when programming!)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1122223">
				<div id="div-comment-1122223" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Adam Rosenfield</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140429-00/?p=1123#comment-1122223">
			April 29, 2014 at 8:33 am</a>		</div>

		<p>I&#39;m sure there&#39;s probably some legacy program somewhere that relies on this behavior of creating and deleting the test file, and that program will break if the default behavior were changed to behave as if OFN_NOTESTFILECREATE were always specified.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1122233">
				<div id="div-comment-1122233" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Anon</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140429-00/?p=1123#comment-1122233">
			April 29, 2014 at 8:39 am</a>		</div>

		<p>@RRR</p>
<p>Nothing in the Windows UI is ever deprecated or removed unless the existence of it can be shown to positively affect workflow.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1122253">
				<div id="div-comment-1122253" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Azarien</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140429-00/?p=1123#comment-1122253">
			April 29, 2014 at 9:36 am</a>		</div>

		<p>I see a racing condition where GetSaveFileName creates the file, deletes it, returns success, and suddenly your permission to create that file is revoked.</p>
<p>You still have to handle all sorts of possible errors. Which makes that creation-deletion part rather pointless.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1122263">
				<div id="div-comment-1122263" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Gabe</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140429-00/?p=1123#comment-1122263">
			April 29, 2014 at 9:49 am</a>		</div>

		<p>If they removed the automatic check for writability, it&#39;s unlikely that any programs will break. Most likely it will be the users who complain.</p>
<p>Imagine you&#39;re using a web browser and ask to download a large file. As soon as the download starts you inadvertantly tell it save it to your Apps share rather than your Home share. Then an hour later the download completes and the browser goes to copy the file from its cache to the place you specified, only you specified a read-only share.</p>
<p>You can easily imagine a user saying &quot;Why couldn&#39;t it tell me that I picked an invalid location BEFORE spending an hour downloading it? Stupid computer!&quot;, and obviously somebody who frequently makes that mistake will suffer most from not doing the test.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1122273">
				<div id="div-comment-1122273" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Karellen</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140429-00/?p=1123#comment-1122273">
			April 29, 2014 at 10:17 am</a>		</div>

		<p>@Gabe: Huh. My browsers save downloads to the directory you tell them to save in. ISTR that some add an extra &quot;.part&quot; extension initially so that indexers and document viewers don&#39;t bother trying to access an incomplete file, but others just use the actual file name.</p>
<p>On the other hand, if you&#39;re spending an hour downloading the file to one place before saving it to another, the &quot;quota fills up&quot;/&quot;permissions get revoked&quot; window for race conditions increases significantly.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-alegrigoriev odd alt thread-odd thread-alt depth-1" id="comment-1122283">
				<div id="div-comment-1122283" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/alegr1' rel='external nofollow' class='url'>alegr1</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140429-00/?p=1123#comment-1122283">
			April 29, 2014 at 11:03 am</a>		</div>

		<p>&gt;Then an hour later the download completes and the browser goes to copy the file from its cache to the place you specified, only you specified a read-only share.</p>
<p>Thanks goodness IE doesn&#39;t do that stupidity anymore. Who ever thought that&#39;s a good idea? But even that fix didn&#39;t hold me from giving up on IE.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1122293">
				<div id="div-comment-1122293" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Jonathan</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140429-00/?p=1123#comment-1122293">
			April 29, 2014 at 1:07 pm</a>		</div>

		<p>I suppose the idea was that if the check fails, the user is back in the dialog when he can choose another folder. Yes, you could achieve that with application code even without the check:</p>
<p>..while(true) {</p>
<p>&#8230;.string fileName = GetSaveFileName(&#8230;);</p>
<p>&#8230;.if (MySave(fileName)) break;</p>
<p>..}</p>
<p>However, having the check inside GetSaveFileName() means that it saves its state, and also simplifies the application code:</p>
<p>..MySave(GetSaveFileName());</p>
<p>A good application developer should still use the former because of race/other conditions mentioned above, but I suppose this improves the user&#39;s experience in applications developed by less-than-good developers.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1122173">
				<div id="div-comment-1122173" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">steveg</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140429-00/?p=1123#comment-1122173">
			April 29, 2014 at 7:38 am</a>		</div>

		<p>&quot;But you *can* suppress it&quot;. Is that &quot;can&quot; or &quot;should&quot;?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1122303">
				<div id="div-comment-1122303" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Jaime</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140429-00/?p=1123#comment-1122303">
			April 29, 2014 at 2:59 pm</a>		</div>

		<p>This remind me of a bug in Excel 5. For some reason we had a folder on a NetWare file server configured to allow writes, but not renames. Users kept complaining that they couldn&#39;t find their spreadsheets. Upon investigation, we found a bunch of randomly named files that turned out to be the missing spreadsheets. It seems that Excel was performing a &quot;Save As&quot; by saving with a random file name and then renaming the file after the save was complete. Apparently, there was no error checking on the rename step, presumably because the Excel team hadn&#39;t considered the case where a file could be created but not renamed.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1122243">
				<div id="div-comment-1122243" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Karellen</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140429-00/?p=1123#comment-1122243">
			April 29, 2014 at 9:35 am</a>		</div>

		<p>Yeah, I think I&#39;m with ErikF, when I still don&#39;t see the *point* of this.</p>
<p>Why not just let the user pick a filename, and let the application handle the error if it can&#39;t write the file? Given that the app needs to do this anyway, e.g. if the permissions change between the save dialog doing its dance and the application actually starting to write, or if there&#39;s only 1Mb left on the disk/in the user&#39;s quota, and they try to write a 5Mb file, or if the network goes down part-way through, or&#8230; if there&#39;s any one of a bunch of other errors that pop up.</p>
<p>I can&#39;t see how this behaviour saves an application developer any work at all. So why bother?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1122313">
				<div id="div-comment-1122313" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ray</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140429-00/?p=1123#comment-1122313">
			April 29, 2014 at 7:38 pm</a>		</div>

		<p>@Jaime: Excel 2003 still does this and I&#39;m guessing it&#39;s still part of Excel 2013.</p>
<p><a rel="nofollow" target="_new" href="http://support.microsoft.com/kb/814068">support.microsoft.com/&#8230;/814068</a></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1122323">
				<div id="div-comment-1122323" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Killer{R}</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140429-00/?p=1123#comment-1122323">
			April 30, 2014 at 6:49 am</a>		</div>

		<p>Absolutely useless feature. Application cannot rely on fact that save dialog succeed. Fact that comdlg could create its test file doesn&#39;t mean automatically that application will succeed too in saving its file, cause except permissions there&#39;re numerous reasons why this operation can fail: disk space can be near-to-exceed, so test file will be created but application&#39;s file will not, another application can create same file at same moment, administrator can change permissions at same moment, server can go shutdown etc. So in any case application need to have functionality to detect and report errors itself, so creating this test file from save dialog&#39;s code absolutely redundant and can gives troubles than benefits.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1122363">
				<div id="div-comment-1122363" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">a=a</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140429-00/?p=1123#comment-1122363">
			April 30, 2014 at 7:53 am</a>		</div>

		<p>&gt;Why does the common file save dialog create a temporary file and then delete it?</p>
<p>Because that&#39;s the way it was programmed!</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1122493">
				<div id="div-comment-1122493" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">ErikF</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140429-00/?p=1123#comment-1122493">
			April 30, 2014 at 6:47 pm</a>		</div>

		<p>@Mirinth: IMO, for normal uses of files the easiest way to deal with permissions is still to ignore them and handle errors as they occur; there&#39;s usually very little difference as far as my programs are concerned between permissions and the multitude of other reasons for failure.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1122473">
				<div id="div-comment-1122473" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Mirinth</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140429-00/?p=1123#comment-1122473">
			April 30, 2014 at 3:46 pm</a>		</div>

		<p>I think the race condition is distracting from the real problem:</p>
<p>&quot;&#8230;and MS-DOS didn&#39;t have a way to query security attributes because, well, the file systems of the day didn&#39;t have security attributes to query in the first place.&quot;</p>
<p>DOS programs *never* checked for permissions because they *couldn&#39;t* check for permissions. Then all of a sudden Windows 3.1 threw them into a world of permissions, and all the programs that weren&#39;t written by psychic programers suddenly had nasty bugs lurking in them.</p>
<p>It isn&#39;t a perfect solution, but it makes the problem window a lot smaller, so it&#39;s still worthwhile.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1122623">
				<div id="div-comment-1122623" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">640k</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140429-00/?p=1123#comment-1122623">
			May 1, 2014 at 3:18 pm</a>		</div>

		<p>The dialog magic and any subsequent write isn&#39;t perfomed in a transaction. Useless feature, which cannot guarantee anything at all.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1122583">
				<div id="div-comment-1122583" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Mirinth</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140429-00/?p=1123#comment-1122583">
			May 1, 2014 at 10:09 am</a>		</div>

		<p>@ErikF: I agree, but throwing servers into the mix added new error scenarios, and I doubt the programmers thought to check for ones that didn&#39;t exist yet.</p>
<p>A well written program would have had a default case for unknown response codes, but then what do you do in your unknown response code handler? The code might be a new kind of success, or a notice that something was only partially done and needs to be either completed or undone to put the system back in a consistent state. How do you handle the unknown case when doing nothing isn&#39;t an option? I don&#39;t think you can.</p>
<p>There&#39;s also the problem of telling the user that something went wrong. When you get an unknown error, the best you can do is tell the user that something went wrong, you have no idea how to handle it, and maybe give them the unexpected data so they can try to figure it out for themselves. But now you&#39;ve got a user who&#39;s upset because the program they need to do their job isn&#39;t working, who can&#39;t fix it because they can&#39;t figure out what happened, and who can&#39;t even figure out what happened without a call to tech support. Most of them probably don&#39;t have internet access either, so no searching Google for help from other people who&#39;ve already dealt with the problem.</p>
<p>Windows knows about the error situations though, so it could try to detect and prevent them and make the old programs more likely to keep working in their new environment. I still don&#39;t know if it&#39;s the *ideal* solution, especially considering that race condition, but it was better than letting even the well written programs serve up generic error messages on a regular basis.</p>
<p>Especially when your business model is centered on keeping old programs running at nearly any cost so users will keep buying your new operating system even if they don&#39;t see an immediate advantage yet.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1122653">
				<div id="div-comment-1122653" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">@Mirinth</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140429-00/?p=1123#comment-1122653">
			May 2, 2014 at 3:40 am</a>		</div>

		<p>You highly overcomplicate this case. You let the common dialog give you the filename. Then you call CreateFile. Any return code other tban 0 is an error, and you have to show the user the text that GetLastError &amp; FormatErrorMessage will return.</p>
<p>Easy enough, if you ask me.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1122773">
				<div id="div-comment-1122773" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Gabe</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140429-00/?p=1123#comment-1122773">
			May 2, 2014 at 10:11 am</a>		</div>

		<p>Wow, it seems that lots of people here are incapable of looking at this problem through user-colored glasses. Or maybe they&#39;re just the sort of people who think condoms are useless because they&#39;re not 100% effective &#8212; if they can fail, you need some alternate form of birth control anyway, so why bother?</p>
<p>You could make a similar argument about airlines checking passports on international flights. An airline will probably not let you board a flight without a valid passport because it&#39;s unlikely the destination country will let you in. Of course, even with a valid passport the country may not let you in, but is that a reason for the airline checks to be useless?</p>
<p>The whole point of this feature is to fail fast. Would you rather have the program close the &quot;Save&quot; dialog box, generate the file to write, attempt to create the file, put up an error message, and then show the &quot;Save&quot; dialog again? Or would you prefer that it just tell you immediately that it&#39;s not going to work?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1122823">
				<div id="div-comment-1122823" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">@Gabe</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140429-00/?p=1123#comment-1122823">
			May 2, 2014 at 11:44 am</a>		</div>

		<p>Ent against tbe current design (fail fast), but would work for any possible case.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1122973">
				<div id="div-comment-1122973" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">disk editor next?</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140429-00/?p=1123#comment-1122973">
			May 4, 2014 at 10:16 am</a>		</div>

		<p>GetSaveFileName shouldn&#39;t touch or interact the file system in this way. It should only be a convenient way of creating a full path string in a gui. It is, and should be, a fancy editbox. Not a file system manager or low level inspection tool.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1122993">
				<div id="div-comment-1122993" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Mirinth</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140429-00/?p=1123#comment-1122993">
			May 4, 2014 at 12:34 pm</a>		</div>

		<p>&quot;You highly overcomplicate this case. You let the common dialog give you the filename. Then you call CreateFile. Any return code other tban 0 is an error, and you have to show the user the text that GetLastError &amp; FormatErrorMessage will return.&quot;</p>
<p>I forgot about GetLastError, and didn&#39;t even know about FormatErrorMessage. Shows how much I use C&#8230; You&#39;re right, that does simplify things a lot as long as Windows will provide the appropriate error message, and that&#39;s certainly doable.</p>
<p>@Gabe: That&#39;s about what I was trying to say (I think you said it better though). As nice as it would be if every program was well written, a lot of them aren&#39;t. And the ones that aren&#39;t will cause undue trouble for the user. Windows can&#39;t fix the problem for everyone everywhere, but it can solve it for a lot of people, so it&#39;s still worthwhile even if it doesn&#39;t always work.</p>
<p>Users can&#39;t see your code. They don&#39;t care if your program is well written or not. It can be written as frighteningly badly as possible and still be popular as long as it works.</p>
<div class="post">[<em>Um, GetLastError did not exist in 16-bit Windows 3.1. -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1123223">
				<div id="div-comment-1123223" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140429-00/?p=1123#comment-1123223">
			May 5, 2014 at 3:14 pm</a>		</div>

		<p>[Um, GetLastError did not exist in 16-bit Windows 3.1. -Raymond]</p>
<p>It was called WSAGetLastError then.</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>