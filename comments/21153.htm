<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (31)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-660533">
				<div id="div-comment-660533" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Karellen</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080821-00/?p=21153#comment-660533">
			August 21, 2008 at 12:22 pm</a>		</div>

		<p>OK, my knowledge of how the MMU and various levels of cache work isn&#8217;t that great &#8211; so can someone enlighten me on this&#8230;?</p>
<p>&quot;To obtain the best quality image [&#8230;] the window manager goes back to taskmgr.exe to locate the best match, which in turn triggers a soft page fault [&#8230;] since the information is already in the cache&quot;</p>
<p>Why does this even trigger a soft page fault? Because we access all the data every two seconds and the computer is otherwise idle, shouldn&#8217;t the data and all MMU mappings still be valid? What would be forcing this data out in order than it needs reloading from somewhere else in RAM?</p>
<p>Does a context switch require the MMU state (TLB cache?) to be completely flushed? So it&#8217;s the context switch from explorer to taskmgr that&#8217;s causing the problem?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-660583">
				<div id="div-comment-660583" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Per Larsen</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080821-00/?p=21153#comment-660583">
			August 21, 2008 at 12:57 pm</a>		</div>

		<p>Is there a good way of figuring out what&#8217;s causing excessive page faults in your own code &#8211; other than commenting stuff out until the page fault rate falls? IOW, are you aware of any public tools that can automatically pinpoint source code areas that cause excessive paging?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-660593">
				<div id="div-comment-660593" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Karellen</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080821-00/?p=21153#comment-660593">
			August 21, 2008 at 1:15 pm</a>		</div>

		<p>Per &gt; The cachegrind and massif tools in valgrind[0] might be able to do what you want. If you can run your code under Wine on Linux and you follow the instructions on the &quot;Wine and Valgrind&quot; page[1] then that could help you figure out where the most memory is being allocated and used.</p>
<p>It won&#8217;t quite tell you what&#8217;s causing the most paging, but as a first approximation the most paging will probably be coming from the code that causes the most cache misses.</p>
<p>Disclaimer: I&#8217;ve not tried to run valgrind under Wine, so can&#8217;t personally vouch for how easy it actually is to set up, or how good it is in that environment.</p>
<p>[0] <a rel="nofollow" target="_new" href="http://valgrind.org/info/tools.html" rel="nofollow">http://valgrind.org/info/tools.html</a></p>
<p>[1] <a rel="nofollow" target="_new" href="http://wiki.winehq.org/Wine_and_Valgrind" rel="nofollow">http://wiki.winehq.org/Wine_and_Valgrind</a></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-660603">
				<div id="div-comment-660603" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">microbe</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080821-00/?p=21153#comment-660603">
			August 21, 2008 at 1:40 pm</a>		</div>

		<p>I agree with Karallen. This is very weird explanation.</p>
<p>A page fault happens when you try to access a page that is not there, which could happen the first time you try to look it up. But the page stays there until it&#8217;s evicted from the memory by for example swapping, which doesn&#8217;t look like this case at all.</p>
<p>The only possibility is that every time you do this it&#8217;s in a different (unmapped) address. It sounds very strange.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-660613">
				<div id="div-comment-660613" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">David Walker</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080821-00/?p=21153#comment-660613">
			August 21, 2008 at 1:43 pm</a>		</div>

		<p>This is interesting! &nbsp;And I&#8217;m not being sarcastic.</p>
<p>I would guess that the way to avoid those soft page faults is to cache all of the possible CPU meter icons (there are only, what, 8 of them, or 16, or 10, or something) at the right size. &nbsp;Or is that what Raymond already said?</p>
<p>Or maybe that&#8217;s the wrong way. &nbsp;:-)</p>
<p>Why does the notification area need to make a copy of the icon, if it&#8217;s already at the right size? &nbsp;It could point to the original. &nbsp;(Of course, the bits get copied into the display buffer eventually.)</p>
<p>I&#8217;m curious what the answer is.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-660633">
				<div id="div-comment-660633" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">mh</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080821-00/?p=21153#comment-660633">
			August 21, 2008 at 1:48 pm</a>		</div>

		<p>Certainly interesting, but I&#8217;d be very concerned at the amount of noise it would generate if I was using Task Manager to get a quickie overview of page faults! &nbsp;It should be possible to generate the icon image on the fly, purely in software, and without the round trip to taskmgr.exe, or am I talking through my nethers?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-660653">
				<div id="div-comment-660653" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Gabe</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080821-00/?p=21153#comment-660653">
			August 21, 2008 at 2:09 pm</a>		</div>

		<p>It sounds like Explorer&#8217;s LoadIcon call just maps in taskmgr.exe, accesses the page with the icon (causing the page fault), and closes it. Since LoadIcon has no business keeping the file mapped, it takes a fault every time it gets called.</p>
<p>The page fault could be avoided by having the taskbar cache all the icons, or having taskmgr send in the correct size of icon in the first place.</p>
<p>My not have the taskbar cache the icons? Because there&#8217;s no point &#8212; the memory manager caches them for you by keeping that page of taskmgr.exe in RAM. Making them a permanent part of Explorer&#8217;s memory footprint would just make a hard page fault more likely. In other words, optimizing out the soft page faults (which are free) would make it more likely that you would get hard page faults (which are expensive).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-660663">
				<div id="div-comment-660663" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Erzengel</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080821-00/?p=21153#comment-660663">
			August 21, 2008 at 2:14 pm</a>		</div>

		<p>David: And if the program frees the original icon?</p>
<p>It makes a copy so it can guarentee that it will have the icon exactly as given, in a valid state, for the entire lifetime it needs it.</p>
<p>That&#8217;s why it&#8217;s possible for notification icons to hang around after their creating program has crashed (thereby not allowing it remove the icon); explorer has a copy of the icon for itself, and doesn&#8217;t check with the application until you mouse over it. If it didn&#8217;t keep a copy, what would have happened when said program crashed and explorer tried to redraw the icon? Would explorer explode?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-660673">
				<div id="div-comment-660673" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">alegr</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080821-00/?p=21153#comment-660673">
			August 21, 2008 at 2:51 pm</a>		</div>

		<p>Adding to Gabe&#8217;s explanation:</p>
<ol>
<li>
<p>Task Manager requests the icon update every cycle. It has a few ready icons with different &quot;fill&quot; level, to show CPU usage. This is why Explorer can&#8217;t just use a cached icon. It certainly uses a cached icon if it just need to redraw it.</p>
</li>
<li>
<p>When you hover a mouse over the icon, Explorer tries to send a message into your notification HWND. If your program is dead and HWND is no longer valid, Explorer removes the icon from the notification area.</p>
</li>
<li>
<p>Soft page fault happens because when one maps a file into process space, all pages are marked as unavailable. When a page fault occurs, MM tries to bring the page in. If the page is already in the cache, it&#8217;s mapped to the process without actual hard read. This is a soft pagefault.</p>
</li>
</ol>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-660703">
				<div id="div-comment-660703" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">microbe</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080821-00/?p=21153#comment-660703">
			August 21, 2008 at 3:34 pm</a>		</div>

		<p>Gabe: make sense.</p>
<p>Alternatively it could use read/write instead of mmap.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-660723">
				<div id="div-comment-660723" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">KenW</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080821-00/?p=21153#comment-660723">
			August 21, 2008 at 4:09 pm</a>		</div>

		<p>I&#8217;m amazed at the number of people here who felt the need to read and comment on todays&#8217; entry, but apparently didn&#8217;t feel the need to read yesterdays. If you would read the following:</p>
<p><a rel="nofollow" target="_new" href="http://blogs.msdn.com/oldnewthing/archive/2008/08/20/8880062.aspx" rel="nofollow">http://blogs.msdn.com/oldnewthing/archive/2008/08/20/8880062.aspx</a></p>
<p>It specifically explains why the icon is not loaded from the cache:</p>
<p>&quot;When you pass the LR_COPYFROMRESOURCE flag to the CopyImage function, the window manager goes back to the original icon source to create the copy you requested rather than blindly stretching the pixels of the icon you passed in.&quot;</p>
<p>This also explains the soft page fault issue.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-660733">
				<div id="div-comment-660733" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Mike Diack</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080821-00/?p=21153#comment-660733">
			August 21, 2008 at 4:57 pm</a>		</div>

		<p>It still sounds to me as though Task Manager could/should have been better written to avoid this.</p>
<p>Mike</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-660743">
				<div id="div-comment-660743" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">mh</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080821-00/?p=21153#comment-660743">
			August 21, 2008 at 5:03 pm</a>		</div>

		<p>It&#8217;s not really a problem though, more a case of something that one needs to be aware of when analysing Task Manager data (particularly if naively using Task Manager to get a true picture of performance). &nbsp;It would be nice if taskmgr.exe could have an option to filter out it&#8217;s own data, but that&#8217;s probably something that&#8217;s already been considered and rejected for one reason or another.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-660753">
				<div id="div-comment-660753" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Karellen</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080821-00/?p=21153#comment-660753">
			August 21, 2008 at 5:18 pm</a>		</div>

		<p>KenW &gt; No, I got that, but I still don&#8217;t see why a (soft) page fault would happen.</p>
<p>Explorer has the icon it shows. When it gets a new icon, it&#8217;s going to free the old icon and allocate space for the new one. But both of those allocations should both be the same size, and if malloc()/free() (or whatever API calls are responsible) are even semi-sensible they should end up, after a while, reusing the same chunk of memory each time for the icon. If the app creates the new icon before freeing the old, it will probably end up using the same 2 blocks of memory switching between them each cycle. (Does that make sense?)</p>
<p>Remember, malloc()/free() are strictly userspace calls. free() won&#8217;t free memory back to the OS, it will just create a hole in the heap to be reused by the next appropriately sized malloc(). The OS and the MMU knows nothing about whether an application thinks that a bit of memory is in use or not.</p>
<p>So the memory locations used for the destination icons in explorer should probably always be in the cache, as should the memory for the source icons in taskmgr, as should their page table entries.</p>
<p>Shouldn&#8217;t they?</p>
<p>So if everything should always be in the cache, as this is on an otherwise idle system, why are the soft page faults happening?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-660763">
				<div id="div-comment-660763" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Karellen</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080821-00/?p=21153#comment-660763">
			August 21, 2008 at 5:22 pm</a>		</div>

		<p>Doh! Except Gabe&#8217;s explanation that it uses mmap() (sorry, CreateFileMapping()) to map the memory from the other process does explain that. mmap()/munmap() are OS calls and would create page faults.</p>
<p>Must. Read. All. Comments. Next. Time.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-660773">
				<div id="div-comment-660773" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Michael</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080821-00/?p=21153#comment-660773">
			August 21, 2008 at 5:45 pm</a>		</div>

		<p>Per Larsen: pfmon from the resource toolkits may be helpful. It doesn&#8217;t provide callstacks, which can be annoying if you just see a hard page fault listed at something like memset. One thing to keep in mind is that it attaches itself as a debugger and won&#8217;t detach on getting a CTRL-C. So when pfmon is killed, the monitored process is killed as well. At least, the version I&#8217;ve used.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-660783">
				<div id="div-comment-660783" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">AC</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080821-00/?p=21153#comment-660783">
			August 21, 2008 at 9:58 pm</a>		</div>

		<p>So a soft fault doesn&#8217;t sound like a big deal. Anybody know why taskman shows this but not hard faults (which are a big deal)?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-660803">
				<div id="div-comment-660803" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://initiative.yo2.cn/archives/631495' rel='external nofollow' class='url'>??????Winows Explorer??????????????????????????????</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080821-00/?p=21153#comment-660803">
			August 22, 2008 at 7:43 am</a>		</div>

		<p>PingBack from <a rel="nofollow" target="_new" href="http://initiative.yo2.cn/archives/631495" rel="nofollow">http://initiative.yo2.cn/archives/631495</a></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-660823">
				<div id="div-comment-660823" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">fo</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080821-00/?p=21153#comment-660823">
			August 22, 2008 at 9:48 am</a>		</div>

		<p>AC: It does show them. &nbsp;Why do you think it only shows soft faults?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-660853">
				<div id="div-comment-660853" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Erzengel</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080821-00/?p=21153#comment-660853">
			August 22, 2008 at 12:00 pm</a>		</div>

		<p>AC: The problem isn&#8217;t that it doesn&#8217;t show hard page faults (it does), the problem is that it shows hard page faults + soft page faults as a single number, so we have no way of knowing (from taskman) how many of those &quot;page faults&quot; we actually care about.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-660863">
				<div id="div-comment-660863" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.winstep.net' rel='external nofollow' class='url'>Jorge Coelho</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080821-00/?p=21153#comment-660863">
			August 22, 2008 at 12:54 pm</a>		</div>

		<p>If you think two soft page faults per second is bad, try writting a program that uses GDI+ to update a couple of bitmaps every second. We&#8217;re talking HUNDREDS of page faults per second here!</p>
<p>My question is: don&#8217;t soft page faults include some kind of performance overhead, although nowhere near as bad as hard page faults?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-660873">
				<div id="div-comment-660873" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Godzila</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080821-00/?p=21153#comment-660873">
			August 22, 2008 at 1:33 pm</a>		</div>

		<p>&quot;My question is: don&#8217;t soft page faults include some kind of performance overhead, although nowhere near as bad as hard page faults?&quot;</p>
<p>In a Word? No, soft page faults are free and incur no overhead.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-660893">
				<div id="div-comment-660893" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">David Walker</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080821-00/?p=21153#comment-660893">
			August 22, 2008 at 2:00 pm</a>		</div>

		<p>@Erzengel: Several good points there. &nbsp;I wouldn&#8217;t want Explorer to explode!</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-660923">
				<div id="div-comment-660923" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Gabe</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080821-00/?p=21153#comment-660923">
			August 22, 2008 at 4:32 pm</a>		</div>

		<p>Soft page faults are hardly free (about as expensive as a system call), but I would guess they are between 1000 and 1000000 times faster than hard faults.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-661063">
				<div id="div-comment-661063" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Antti Huovilainen</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080821-00/?p=21153#comment-661063">
			August 24, 2008 at 9:40 am</a>		</div>

		<p>Is there a way to find out why Explorer causes 99 extra page faults per second? I&#8217;m guessing some handler, but how to find out which?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-dean-harding odd alt thread-odd thread-alt depth-1" id="comment-661123">
				<div id="div-comment-661123" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Dean+Harding' rel='external nofollow' class='url'>Dean Harding</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080821-00/?p=21153#comment-661123">
			August 24, 2008 at 6:57 pm</a>		</div>

		<p>@Antti Huovilainen: Uninstall them one-by-one until it stops happening? You could use something like autoruns to disable them (so that it&#8217;s easier to re-enable them later).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-661173">
				<div id="div-comment-661173" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Igor Levicki</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080821-00/?p=21153#comment-661173">
			August 25, 2008 at 7:17 am</a>		</div>

		<p>Just to clarify &#8212; soft page fault isn&#8217;t free performance-wise. It has the same penalty associated with hard page fault minus disk latency. That means it still should be avoided by all costs. Remember, page faults degrade overall system performance, not just performance of a single program that causes them.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-661263">
				<div id="div-comment-661263" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">David Walker</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080821-00/?p=21153#comment-661263">
			August 25, 2008 at 12:17 pm</a>		</div>

		<p>Gabe: &nbsp;I don&#8217;t know what the phrase &quot;x times faster&quot; means when you&#8217;re talking about duraion and not speed. &nbsp;Does it mean &quot;takes 1/x the time&quot;?</p>
<p>A mainframe Syncsort ad from many years ago, published in Computerworld: &nbsp;&quot;&#8217;Our sort jobs now run in 120% less time than before, thanks to Syncsort!&#8217;, gushes Bob Wahtshisname, system programmer for MegaCorp.&quot;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-661593">
				<div id="div-comment-661593" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.winstep.net' rel='external nofollow' class='url'>Jorge Coelho</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080821-00/?p=21153#comment-661593">
			August 25, 2008 at 6:28 pm</a>		</div>

		<p>Igor Levicki: &quot;That means it still should be avoided by all costs.&quot;</p>
<p>Guess somebody forgot to say that to the MS team responsible for GDI+.</p>
<p>It&#8217;s a bit of a pain explaining to your users that the millions (literally!) of page faults they are seeing are actually not your application&#8217;s fault but rather Microsoft&#8217;s, that you can do nothing about it (unless they want to live without alpha transparency effects, etc&#8230;) and that it doesn&#8217;t really hurt performance (much!). :-(</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-661773">
				<div id="div-comment-661773" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Gabe</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080821-00/?p=21153#comment-661773">
			August 26, 2008 at 3:05 am</a>		</div>

		<p>David Walker: When something goes twice as fast, it takes half as long. Does it make more sense to say that the hard page fault is 1000x slower than the soft page fault? I would tend to think that foo is X times slower than bar means the same as bar is X times faster than foo.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-662573">
				<div id="div-comment-662573" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Igor Levicki</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080821-00/?p=21153#comment-662573">
			August 27, 2008 at 7:58 pm</a>		</div>

		<p>Jorge, then do not use GDI+ &#8212; roll your own.</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>