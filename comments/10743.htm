<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (35)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-910933">
				<div id="div-comment-910933" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Jesse</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110504-00/?p=10743#comment-910933">
			May 4, 2011 at 7:34 am</a>		</div>

		<p>I&#39;m not sure if I entirely follow this. &nbsp;It sounds like from the customer&#39;s description that it&#39;s not the ZIP file&#39;s &quot;Last Modified&quot; date that is problematic, but the &quot;Last Modified&quot; date of the files extracted from the archive. &nbsp;But your explanation has to do with modifying the &quot;Last Modified&quot; date on the archive itself. &nbsp;Does the Explorer archive extractor use the archive file&#39;s date in determining what to set the extracted file&#39;s dates to? &nbsp;I was under the impression that ZIP archives included the ability to store the &quot;Last Modified&quot; timestamps per file.</p>
<div class="post">[<i>The file is extracted with the timestamp as recorded in the ZIP file, then it is modified to add the security zone information. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-910943">
				<div id="div-comment-910943" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Alex Grigoriev</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110504-00/?p=10743#comment-910943">
			May 4, 2011 at 7:37 am</a>		</div>

		<p>Or how about fixing zipfldr.dll, to make it set the timestamp on the files _after_ applying the zone information? Or making the &quot;set zone information&quot; function preserve the timestamp?</p>
<div class="post">[<i>But doesn&#39;t changing the security information on a file constitute modifying it? -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-910953">
				<div id="div-comment-910953" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Fred.</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110504-00/?p=10743#comment-910953">
			May 4, 2011 at 8:15 am</a>		</div>

		<p>[But doesn&#39;t changing the security information on a file constitute modifying it? -Raymond]</p>
<p>No. No more than renaming it does at any rate.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-910963">
				<div id="div-comment-910963" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Paul</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110504-00/?p=10743#comment-910963">
			May 4, 2011 at 8:44 am</a>		</div>

		<p>@Fred</p>
<p>Wrong answer. &nbsp;You&#39;ve just substituted one problem for another (&quot;why did the OS apply the zone identifier to the executable and not change the time/date? &nbsp; How am I meant to know if the file changed or not?&quot;)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-910973">
				<div id="div-comment-910973" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Yuliy</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110504-00/?p=10743#comment-910973">
			May 4, 2011 at 9:34 am</a>		</div>

		<p>I think the customer is using modified timestamp to mean &quot;when was the content stored in this file modified&quot;. However, Windows treats it as &quot;when was the file or its metadata update?&quot; This is what caused the problem. The user&#39;s expectation of the semantics of modified timestamp didn&#39;t match the OSes definition of those semantics.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-910983">
				<div id="div-comment-910983" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Cesar</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110504-00/?p=10743#comment-910983">
			May 4, 2011 at 9:35 am</a>		</div>

		<p>[But doesn&#39;t changing the security information on a file constitute modifying it? -Raymond]</p>
<p>It doesn&#39;t. That security information is metadata. It is much like changing the file permissions or the file owner, which should not change the file&#39;s mtime either.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-910993">
				<div id="div-comment-910993" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Cesar</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110504-00/?p=10743#comment-910993">
			May 4, 2011 at 9:42 am</a>		</div>

		<p>As an aside: it seems preserving this zone information is yet another of these &quot;taxes&quot; (<a rel="nofollow" target="_new" href="http://blogs.msdn.com/b/oldnewthing/archive/2005/08/22/454487.aspx" rel="nofollow">blogs.msdn.com/&#8230;/454487.aspx</a>). Do third-party unpackers even think of preserving it? And is there a list of these &quot;taxes&quot; anywhere so software developers know what to pay attention to? It could be a very useful resource (at least for the kind of software developer who would follow this blog).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-911023">
				<div id="div-comment-911023" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Alex Grigoriev</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110504-00/?p=10743#comment-911023">
			May 4, 2011 at 10:19 am</a>		</div>

		<p>[But doesn&#39;t changing the security information on a file constitute modifying it? -Raymond]</p>
<p>By that reasoning, the unzippers would have never set the original timestamp on the unpacked files, because THEY JUST CREATED AND WRITTEN THEM. And the shell file copy function, too.</p>
<p>But no, they take pains to set the desired timestamps. And the function that ZIPFLDR.DLL uses to save the files does set the timestamps explicitly. It&#39;s just the small issue of applying the additional stream to the file afterwards, that screws them.</p>
<p>I&#39;m not sure why you&#39;re trying to advocate this is a proper behaviour, rather than a bug.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-911043">
				<div id="div-comment-911043" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110504-00/?p=10743#comment-911043">
			May 4, 2011 at 10:33 am</a>		</div>

		<p>@Cesar: I deliberately write my tools to strip the security zone information.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-911063">
				<div id="div-comment-911063" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">dave</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110504-00/?p=10743#comment-911063">
			May 4, 2011 at 12:02 pm</a>		</div>

		<blockquote><p>
  There could be timestamp for &quot;the contents of the file were changed&quot;, and a timestamp for &quot;the file&#39;s metadata was changed&quot;.
</p></blockquote>
<p>There could, but the zone information is &quot;contents of the file&quot; as far as the file system is concerned.</p>
<p>Don&#39;t forget, a &quot;file&quot; is a bundle of data streams (one of which is The Stream With No Name), and the zone info is just another data stream.</p>
<p>Your app could store most of its data in a named stream too, if it wished.</p>
<p>(I think the fundamental issue here is that NTFS deviated too far from &#39;normal user expectations&#39; with alternative data streams. &nbsp;Compare OS/2 &#39;extended attributes&#39;, which are arguably the same concept, but which name carries an implication that it&#39;s &#39;attributes&#39; not &#39;data&#39;)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-911073">
				<div id="div-comment-911073" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Cesar</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110504-00/?p=10743#comment-911073">
			May 4, 2011 at 12:39 pm</a>		</div>

		<p>@dave: if the zone information is part of the &quot;contents of the file&quot;, then the unpacker is modifying the <em>contents</em> of a file it unpacked, which is just completely wrong.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-911083">
				<div id="div-comment-911083" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Random832</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110504-00/?p=10743#comment-911083">
			May 4, 2011 at 12:55 pm</a>		</div>

		<p>&quot;There could, but the zone information is &quot;contents of the file&quot; as far as the file system is concerned.&quot;</p>
<p>So is the actual contents, but the fact that it just went from an empty file to however many bytes extracted from the archive just a second ago doesn&#39;t <em>normally</em> pose a serious ontological dilemma for an unzip tools&#39; application of the stored timestamps immediately afterward. This isn&#39;t the posix ctime &#8211; this is here for the user, not to meet some rigorous definition of &quot;modified&quot;.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-911093">
				<div id="div-comment-911093" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">dave</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110504-00/?p=10743#comment-911093">
			May 4, 2011 at 1:50 pm</a>		</div>

		<blockquote><p>
  There could be timestamp for &quot;the contents of the file were changed&quot;, and a timestamp for &quot;the file&#39;s metadata was changed&quot;.
</p></blockquote>
<p>There is in NTFS, almost.</p>
<p>Last write time = time file&#39;s contents changed.</p>
<p>Change time = time file&#39;s metadata or contents changed.</p>
<p>(See File System Behavior Overview document, findable with Google, which is aimed at protocol implementers more than users)</p>
<p>&#39;Change time&#39; is not exposed through the Windows API, as far as I know.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-911103">
				<div id="div-comment-911103" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">jon</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110504-00/?p=10743#comment-911103">
			May 4, 2011 at 2:28 pm</a>		</div>

		<p>Yes, modifying the file metadata modifies the file timestamp, Raymond is perfectly correct from a technological point of view.</p>
<p>However, this is completely wrong from the user&#39;s point of view. The user doesn&#39;t care about the mechanism of implementing the zone check. There&#39;s absolutely no reason, from the user&#39;s point of view, that the timestamps should be changed. It just makes it look like a bug, which frankly, it is.</p>
<p>Unfortunately, far too many design decisions in Windows (particularly the shell) are made from the point of view of the developers, to make things easier for them. This is just another example.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-911113">
				<div id="div-comment-911113" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">John</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110504-00/?p=10743#comment-911113">
			May 4, 2011 at 2:30 pm</a>		</div>

		<p>&quot;[But doesn&#39;t changing the security information on a file constitute modifying it? -Raymond]&quot;</p>
<p>Conceptually, &quot;security information&quot; is an attribute. &nbsp;Does setting the read only or archive attributes change the timestamps? &nbsp;I would expect those actions to have the same behavior. &nbsp;I don&#39;t recall the semantics of alternate data streams, but perhaps this is just a leaky abstraction.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-911123">
				<div id="div-comment-911123" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ens</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110504-00/?p=10743#comment-911123">
			May 4, 2011 at 3:03 pm</a>		</div>

		<p>@Cesar</p>
<p>It&#39;s modifying the contents of the file to write the zone information, and it&#39;s not wrong to modify the contents because the contents is where the zone information data is stored. &nbsp;The weird piece in all of this is that zone information &quot;feels like&quot; metadata but it&#39;s stored as a stream. &nbsp;And it&#39;s especially weird because the system takes pains to make sending zipped files &quot;feel like&quot; a straight file copy from a metadata standpoint, when it isn&#39;t really, so there&#39;s precedent already for holding the metadata constant.</p>
<p>I think with a time machine we might have per-stream &quot;last modified&quot; times, so that streams which encode pseudo-metadata like the zone identifier could be ignored or not ignored as the consumer desires.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-911133">
				<div id="div-comment-911133" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Christian</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110504-00/?p=10743#comment-911133">
			May 4, 2011 at 3:30 pm</a>		</div>

		<p>[But doesn&#39;t changing the security information on a file constitute modifying it? -Raymond]</p>
<p>Oh, I got that, that&#39;s an simple one: No, it does not. The zip code simply has a bug: It must add the zone information in a way where it doesn&#39;t modify the extracted time.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-911153">
				<div id="div-comment-911153" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Mike B</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110504-00/?p=10743#comment-911153">
			May 4, 2011 at 4:15 pm</a>		</div>

		<p>Couldn&#39;t the customer also unblock the file to strip the info (right-click the zip, hit unblock), then unzip the file?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-911013">
				<div id="div-comment-911013" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">David Walker</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110504-00/?p=10743#comment-911013">
			May 4, 2011 at 10:17 am</a>		</div>

		<p>Ack, I hope this isn&#39;t a double-post. &nbsp;My last one went away. &nbsp;Here goes again&#8230;</p>
<p>There could be timestamp for &quot;the contents of the file were changed&quot;, and a timestamp for &quot;the file&#39;s metadata was changed&quot;. &nbsp;And a timestamp for &quot;the file was moved from one folder to another&quot;. &nbsp;That doesn&#39;t change the file&#39;s &quot;last modified&quot; date, since the file&#39;s location is not really an attribute of the file itself.</p>
<p>But then, reading a file&#39;s metadata to read the last accessed timestamp is not counted as an &quot;access&quot; of the file. &nbsp;So that&#39;s a special case. &nbsp;Otherwise, the last access time of a file would always be *right now*. &nbsp;I&#39;m just accessing the file to see when it was last accessed, but this access doesn&#39;t count.</p>
<p>So, you could make a case that changing the file&#39;s security zone information does not count as a modification to the file. &nbsp;After all, it&#39;s an attribute of *where the file came from*, not anything intrinsic to the file itself. &nbsp;Similar, perhaps, to a file being moved from one folder to another, which doesn&#39;t change a file&#39;s last modified timestamp.</p>
<p>Yes, computers are hard.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-911163">
				<div id="div-comment-911163" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Cheong</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110504-00/?p=10743#comment-911163">
			May 4, 2011 at 5:55 pm</a>		</div>

		<p>@Mike: Because that&#39;d require the user to copy the ZIP file to a local location instead of opening the file directly.</p>
<p>I think a possible workaround would be to create a special rule (whether as a general implementation or as a GP rule) that changing zone information won&#39;t modify timestamps.</p>
<p>P.S.: In the past when a POST somehow unsuccessful, the comments would be preserved. But now when the POST is unsuccessful, the comments are gone! Oh&#8230; I&#39;ve forgotten what I typed in the second paragraph.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-911173">
				<div id="div-comment-911173" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Cheong</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110504-00/?p=10743#comment-911173">
			May 4, 2011 at 5:59 pm</a>		</div>

		<p>Argh right&#8230; I have a problem recognize why adding the remote location to a trusted zone would be consider risky. Afterall you&#39;re going to open ZIP files there&#8230; and if you use any 3rd party tools to automate the process later, you &nbsp;won&#39;t get the zone information changed anyway&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-911183">
				<div id="div-comment-911183" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Cheong</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110504-00/?p=10743#comment-911183">
			May 4, 2011 at 5:59 pm</a>		</div>

		<p>Argh right&#8230; I have a problem recognize why adding the remote location to a trusted zone would be consider risky. Afterall you&#39;re going to open ZIP files there&#8230; and if you use any 3rd party tools to automate the process later, you &nbsp;won&#39;t get the zone information changed anyway&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-911193">
				<div id="div-comment-911193" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Gabe</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110504-00/?p=10743#comment-911193">
			May 4, 2011 at 6:48 pm</a>		</div>

		<p>I just unblocked a file using SysInternals&#39; streams.exe and Win7 Explorer. Neither one changed the modification time on the file. If unblocking a file doesn&#39;t change the modification time of a file, I wouldn&#39;t expect that blocking the file would change the timestamp.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-911203">
				<div id="div-comment-911203" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Crescens2k</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110504-00/?p=10743#comment-911203">
			May 4, 2011 at 8:11 pm</a>		</div>

		<p>Gabe: Instead of unblocking try the following at the command prompt (elevated command prompt required).</p>
<p>fsutil file createnew test.txt 0</p>
<p>fsutil file createnew test.txt:stream 0</p>
<p>Possibly leaving it a bit between the two operations to make the difference noticable. Or to make it possibly even more noticable</p>
<p>fsutil file createnew alreadyexistingfile.txt:stream 0</p>
<p>Then compare it with the file&#39;s original modified time.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-911223">
				<div id="div-comment-911223" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Gabe</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110504-00/?p=10743#comment-911223">
			May 4, 2011 at 11:28 pm</a>		</div>

		<p>Crescens2k: I&#39;m not talking about the specific act of modifying streams on a file; I&#39;m talking about the abstraction of security zone annotations on files. Why should the act of blocking a file change its timestamp (particularly since no bits of the file change), when unblocking doesn&#39;t? And since the user didn&#39;t specifically act to block the file (i.e. the user can&#39;t see the file before it&#39;s blocked), there&#39;s no expectation that anything actually changed. As far as the user was concerned, the file was born with the block.</p>
<p>I know that how it works is that adding or modifying a stream sets the file&#39;s LastWriteTime and ChangeTime (POSIX equivalent of mtime and ctime), while deleting a stream sets only the file&#39;s ChangeTime.</p>
<p>I also know that zipfldr.dll writes the file, sets the timestamp, closes the file, and then as a completely separate operation calls into shdocvw.dll to set the zone identifier. I would argue that either zipfldr should make a special case and set the timestamp again after setting the zone ID, or shdocvw should save the file&#39;s timestamp and restore it after setting the zone ID. Afterall, if you&#39;re not changing the bits in the file, you shouldn&#39;t change the LastWriteTime.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-911233">
				<div id="div-comment-911233" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">NB</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110504-00/?p=10743#comment-911233">
			May 5, 2011 at 12:26 am</a>		</div>

		<p>Can&#39;t you bypass this problem by using a 3rd party zip-program instead of the one built-in Explorer? Say 7-zip for example?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-911243">
				<div id="div-comment-911243" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Chris Nahr</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110504-00/?p=10743#comment-911243">
			May 5, 2011 at 2:19 am</a>		</div>

		<p>&quot;Can&#39;t you bypass this problem by using a 3rd party zip-program instead of the one built-in Explorer? Say 7-zip for example?&quot;</p>
<p>Bingo. &nbsp;None of the third-party packers I used (7-Zip, WinRAR, Speed Commander) copy those security annotations from an archive to extracted files, and I&#39;ve certainly never missed them. &nbsp;It&#39;s an ill-conceived feature to begin with &#8212; one warning for the archive itself should be enough.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-911253">
				<div id="div-comment-911253" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">GWO</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110504-00/?p=10743#comment-911253">
			May 5, 2011 at 3:19 am</a>		</div>

		<p>The key question is &quot;Should modifying the file metadata update the file-modified flag&quot;, and the answer is &quot;Whichever you choose (yes, no or &#39;it depends which metadata&#39;), reasonable people may disagree with you.&quot;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-911263">
				<div id="div-comment-911263" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Neil</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110504-00/?p=10743#comment-911263">
			May 5, 2011 at 3:28 am</a>		</div>

		<p>Perhaps the customer should unzip the files onto a FAT drive.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-911283">
				<div id="div-comment-911283" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Paul</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110504-00/?p=10743#comment-911283">
			May 5, 2011 at 6:38 am</a>		</div>

		<p>This reminds me of an old annoyance:</p>
<p>Last Accessed time. You access the file to retrieve that. Last accessed = now.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-fredericmagnyf even thread-even depth-1" id="comment-911293">
				<div id="div-comment-911293" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Medinoc' rel='external nofollow' class='url'>Medinoc</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110504-00/?p=10743#comment-911293">
			May 5, 2011 at 6:40 am</a>		</div>

		<blockquote><p>
  Jesse wrote:</p>
<p>  Or how about fixing zipfldr.dll, to make it set the timestamp on the files <em>after</em> applying the zone information?
</p></blockquote>
<p>If they to, they should also fix the problem of zipfldr.dll apparently not respecting SHSetInstanceExplorer&#8230;</p>
<p>( <a rel="nofollow" target="_new" href="http://blogs.msdn.com/b/oldnewthing/archive/2008/05/28/8555658.aspx" rel="nofollow">blogs.msdn.com/&#8230;/8555658.aspx</a> )</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-911403">
				<div id="div-comment-911403" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">David Walker</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110504-00/?p=10743#comment-911403">
			May 5, 2011 at 12:54 pm</a>		</div>

		<p>@Paul: &nbsp;Yes, that&#39;s just what I said. &nbsp;:-)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-911413">
				<div id="div-comment-911413" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Mark</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110504-00/?p=10743#comment-911413">
			May 5, 2011 at 2:59 pm</a>		</div>

		<p>Cheong: they don&#39;t say that need to open it directly, merely that copying from the remote server fails, but if copying it locally through some other means doesn&#39;t. &nbsp;I think the correct response to the customer should be &quot;we&#39;ll fix/patch zipfoldr.dll&quot;, but until then, just hit Unblock, or use this .vbs file, or use a different extraction program.</p>
<p>zipfldr.dll is an awful example of Windows developers not paying any of their taxes. &nbsp;It doesn&#39;t even disable the &#39;Next&#39; button when extracting &#8211; I wonder how many bugs have been raised for that alone.</p>
<p>The last access time thing has been brought up to the point of tedium. &nbsp;It is useful for determining what can go to slower storage (e.g. tape backup).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-911503">
				<div id="div-comment-911503" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Paul</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110504-00/?p=10743#comment-911503">
			May 6, 2011 at 3:00 am</a>		</div>

		<p>@David Walker: I missed that, or skimmed. Rereading, I think I&#39;m thinking of an old problem then.</p>
<p>I remember getting the last accessed time on Windows 95 DID get the current time (less a second or so on the school machines due to network lag!) since it accessed the file to get the information on file access.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-911773">
				<div id="div-comment-911773" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Troll</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110504-00/?p=10743#comment-911773">
			May 8, 2011 at 6:21 am</a>		</div>

		<p>Sadly Microsoft is to blame here as they rolled out Attachment Manager in XP SP2 without a PROMINENT way to turn it off (Group Policy isn&#39;t even in all Windows editions). Usually, the GPO to disable the Attachment Manager (Do not preserve zone information) that I apply right away after reinstalling Windows. I fear worse changes coming in Windows 8 with extremely slow IE9-like SmartScreen checking also baked it to further spoil the experience.</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>