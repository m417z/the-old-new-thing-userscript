<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (22)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1 parent" id="comment-1353605">
				<div id="div-comment-1353605" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Koro</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180725-00/?p=99335#comment-1353605">
			July 25, 2018 at 11:14 am</a>		</div>

		<p>In some previous code that created a lot of files whose size were known ahead of writing time, I used SetEndOfFile to pre-set the size, hopefully to avoid fragmentation or at least give a hint to the OS about it, are you telling me it was pointless?</p>

		
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-oldnewthing bypostauthor odd alt depth-2 parent" id="comment-1353625">
				<div id="div-comment-1353625" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Raymond+Chen+-+MSFT' rel='external nofollow' class='url'>Raymond Chen - MSFT</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180725-00/?p=99335#comment-1353625">
			July 25, 2018 at 11:39 am</a>		</div>

		<p>Sorry to break it to you.</p>

		
				</div>
		<ol class="children">
		<li class="comment even depth-3 parent" id="comment-1353655">
				<div id="div-comment-1353655" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Richard</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180725-00/?p=99335#comment-1353655">
			July 25, 2018 at 12:27 pm</a>		</div>

		<p>So how do you preallocate a file in order to minimize on-disk fragmentation?</p>

		
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-oldnewthing bypostauthor odd alt depth-4" id="comment-1353725">
				<div id="div-comment-1353725" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Raymond+Chen+-+MSFT' rel='external nofollow' class='url'>Raymond Chen - MSFT</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180725-00/?p=99335#comment-1353725">
			July 25, 2018 at 1:53 pm</a>		</div>

		<p>Oops, my mistake (as Someone clarified below). SetEndOfFile preallocates space but does not zero out the sectors.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment even depth-2" id="comment-1353635">
				<div id="div-comment-1353635" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Someone</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180725-00/?p=99335#comment-1353635">
			July 25, 2018 at 11:53 am</a>		</div>

		<p>It works. See <a href="https://stackoverflow.com/questions/12228042/what-does-setfilevaliddata-doing-what-is-the-difference-with-setendoffile/12241551" rel="nofollow">https://stackoverflow.com/questions/12228042/what-does-setfilevaliddata-doing-what-is-the-difference-with-setendoffile/12241551</a></p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1353645">
				<div id="div-comment-1353645" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180725-00/?p=99335#comment-1353645">
			July 25, 2018 at 12:10 pm</a>		</div>

		<p>In trying to do this on a pipe, I came to the conclusion the OS could always just up and decide to make an async call synchronous whenever it felt like it and gave up. I&#8217;ve seen documentation of people who have gotten it to work, but it&#8217;s touchy.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1 parent" id="comment-1353665">
				<div id="div-comment-1353665" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">waleri</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180725-00/?p=99335#comment-1353665">
			July 25, 2018 at 12:29 pm</a>		</div>

		<p>I&#8217;m curious, why these operations are synchronous to begin with&#8230;</p>

		
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-cheong odd alt depth-2 parent" id="comment-1353745">
				<div id="div-comment-1353745" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/cheong00' rel='external nofollow' class='url'>cheong00</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180725-00/?p=99335#comment-1353745">
			July 25, 2018 at 6:12 pm</a>		</div>

		<p>In the beginning of days, all disk I/O are synchronous.</p>
<p>The CPU itself executes instruction in synchronous way too. When it&#8217;s executing your code, you can be certain it&#8217;s not doing other things.</p>
<p>Asynchronous operations are things that added later.</p>

		
				</div>
		<ol class="children">
		<li class="comment even depth-3" id="comment-1353815">
				<div id="div-comment-1353815" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Osexpert</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180725-00/?p=99335#comment-1353815">
			July 26, 2018 at 1:14 am</a>		</div>

		<p>I remember it different. In first NT version all kernel  io was asynch and synch io was simulated in user space. Synch io in kernel was added later (perf optimization).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt depth-3 parent" id="comment-1353825">
				<div id="div-comment-1353825" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joker_vD</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180725-00/?p=99335#comment-1353825">
			July 26, 2018 at 4:13 am</a>		</div>

		<p>Uh, no? The disk driver sends the read request to the hardware, and then <i>what</i>, busy-waits for the interrupt? Polls the hardware register until it sees the data?</p>

		
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-cheong even depth-4" id="comment-1353885">
				<div id="div-comment-1353885" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/cheong00' rel='external nofollow' class='url'>cheong00</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180725-00/?p=99335#comment-1353885">
			July 26, 2018 at 6:25 pm</a>		</div>

		<p>At the early days of DOS DMA was not a thing yet. To read data from disk your code calls corresponding interrupt then wait until the interrupt returns the control to your code. At that time your CPU is busy executing whatever code the BIOS tells it to do, and in the later dates whatever code injected to overtake the interrupt vector. (Like that &#8220;Ontrack Disk Manager&#8221; that allows you to use harddisk &gt; 500MB)</p>
<p>Windows logicially copies all functionality of existing system, so it&#8217;s the default operation it supports. WinNT logically need to support all non-depreciated/obsoluted API of non-NT Windows therefore supports it too.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment odd alt depth-3 parent" id="comment-1353925">
				<div id="div-comment-1353925" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">DWalker07</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180725-00/?p=99335#comment-1353925">
			July 27, 2018 at 7:37 am</a>		</div>

		<p>&#8220;When it’s executing your code, you can be certain it’s not doing other things.&#8221;  Yes, when it&#8217;s executing your CODE.  When the kernel wants to read data from disk, it can certainly send that request to a disk drive, then while the disk head is in the (relatively slow) process of moving (seeking) to the right cylinder, the kernel can and should be doing other things &#8212; executing other code for other users, or executing other code for you.</p>

		
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-cheong even depth-4" id="comment-1354185">
				<div id="div-comment-1354185" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/cheong00' rel='external nofollow' class='url'>cheong00</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180725-00/?p=99335#comment-1354185">
			July 29, 2018 at 8:50 pm</a>		</div>

		<p>Before DMA, all we have is PIO mode that, the CPU is involved in any input/output process of devices, busy moving data from their corresponding Ports to memory.</p>
<p>That&#8217;s why on WinXP, when your harddisk behaves unstably and the system decided to fallback from DMA mode to PIO mode, even access to your harddisk makes your CPU scream (usage jump to 100%).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-cheong odd alt depth-4" id="comment-1354195">
				<div id="div-comment-1354195" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/cheong00' rel='external nofollow' class='url'>cheong00</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180725-00/?p=99335#comment-1354195">
			July 29, 2018 at 8:59 pm</a>		</div>

		<p>When DMA is not a thing yet, all we have is PIO mode where CPU needs to be involved in copying data from your I/O port to your main memory. So you can say it&#8217;s &#8220;busy&#8221; while not &#8220;busy waiting&#8221;. (You can see CPU goes up to 100% for every I/O when your harddisk falls back from DMA to PIO mode for whatever reason)</p>
<p>P.S.: for unknown reason, the blog system decided to eat all content of my previous comment.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-cheong even depth-4" id="comment-1354215">
				<div id="div-comment-1354215" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/cheong00' rel='external nofollow' class='url'>cheong00</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180725-00/?p=99335#comment-1354215">
			July 29, 2018 at 9:02 pm</a>		</div>

		<p>For unknown reason, the blog system decided to eat all content of my previous comment, and don&#8217;t let me repost.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1 parent" id="comment-1353695">
				<div id="div-comment-1353695" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">JAS</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180725-00/?p=99335#comment-1353695">
			July 25, 2018 at 12:46 pm</a>		</div>

		<p>Natural next question: will the current synchronous implementations be made asynchronous in the future? Should they be?</p>

		
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-oldnewthing bypostauthor even depth-2" id="comment-1353715">
				<div id="div-comment-1353715" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Raymond+Chen+-+MSFT' rel='external nofollow' class='url'>Raymond Chen - MSFT</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180725-00/?p=99335#comment-1353715">
			July 25, 2018 at 1:51 pm</a>		</div>

		<p>Certainly things could change in the future. None of this behavior is contractual.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment odd alt thread-even depth-1 parent" id="comment-1353755">
				<div id="div-comment-1353755" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">henke37</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180725-00/?p=99335#comment-1353755">
			July 25, 2018 at 6:35 pm</a>		</div>

		<p>Remember kids, it&#8217;s always legal for the OS to convert asynchronous I/O to synchronous I/O. It&#8217;s rather common actually, the OS will do it for reads when the data is already in cache, such as due to prefetching.</p>

		
				</div>
		<ol class="children">
		<li class="comment even depth-2 parent" id="comment-1353865">
				<div id="div-comment-1353865" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Karl</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180725-00/?p=99335#comment-1353865">
			July 26, 2018 at 12:13 pm</a>		</div>

		<p>reads are of course always synchronous, if not the app specifies otherwise by supplying a synchronization object or a callback. It&#8217;s even contractual, can never change this.</p>

		
				</div>
		<ol class="children">
		<li class="comment odd alt depth-3" id="comment-1353875">
				<div id="div-comment-1353875" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">ChrisR</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180725-00/?p=99335#comment-1353875">
			July 26, 2018 at 6:04 pm</a>		</div>

		<p>Yeah, but just as henke37 says, even when using overlapped IO, the read can complete synchronously.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even depth-3" id="comment-1353895">
				<div id="div-comment-1353895" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Wombat</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180725-00/?p=99335#comment-1353895">
			July 27, 2018 at 3:54 am</a>		</div>

		<p>Nonsense! File reads are not always synchronous. All file I/O is inherently asynchronous &#8211; the read or write is issued to the hardware, and then we have to wait for the hardware to respond. That can be a busy-wait, or a wait for an interrupt or event. Depending on the hardware, you can have multiple outstanding I/O requests (SCSI, for example, supports this), even against the same hardware.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment byuser comment-author-cheong odd alt thread-odd thread-alt depth-1" id="comment-1354205">
				<div id="div-comment-1354205" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/cheong00' rel='external nofollow' class='url'>cheong00</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180725-00/?p=99335#comment-1354205">
			July 29, 2018 at 9:00 pm</a>		</div>

		<p>When DMA is not a thing yet, all we have is PIO mode where CPU needs to be involved in copying data from your I/O port to your main memory. So you can say it&#8217;s &#8220;busy&#8221; while not &#8220;busy waiting&#8221;. (You can see CPU goes up to 100% for every I/O when your harddisk falls back from DMA to PIO mode for whatever reason)</p>
<p>P.S.: for unknown reason, the blog system decided to eat all content of my previous comment.</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>