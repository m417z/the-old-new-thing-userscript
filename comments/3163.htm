<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (15)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-1079023">
				<div id="div-comment-1079023" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">John Doe</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130923-00/?p=3163#comment-1079023">
			September 23, 2013 at 7:57 am</a>		</div>

		<p>About the frameworks, now that&#39;s a lesson learned the hard way. No one prepares you for that. No matter how smart you are, it&#39;s hard to port every little detail.</p>
<p>It&#39;s &quot;easy&quot; (but not necessarily without work and a bit of research) to port the hard-to-miss details. Hell, it&#39;s just a matter of time to replicate the general actions of another system. The greater problems are in the details, and then you have to know whether you need them, and if not, whether you care about them.</p>
<p>Slightly off-topic (I was unable to answer in the original post): is the answer to the exercise in this post (A big little program: Monitoring Internet Explorer and Explorer windows, part 3: Tracking creation and destruction <a href="http://blogs.msdn.com/b/oldnewthing/archive/2013/06/14/10425806.aspx" rel="nofollow" target="_new">blogs.msdn.com/&#8230;/10425806.aspx</a> ) that spev is not checked for NULL? It happens again in this example, although it&#39;s very unlikely that the actual QueryInterface() fails for a reason other than E_OUTOFMEMORY.</p>
<div class="post">[<em>That&#39;s not what I was thinking of. Little Programs may generally assume that all API calls and memory allocations succeed. -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1079043">
				<div id="div-comment-1079043" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">John Doe</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130923-00/?p=3163#comment-1079043">
			September 23, 2013 at 9:03 am</a>		</div>

		<p>Actually, it doesn&#39;t happen again, I misread the example and spes is not a CComQIPtr.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1079053">
				<div id="div-comment-1079053" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joker_vD</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130923-00/?p=3163#comment-1079053">
			September 23, 2013 at 9:39 am</a>		</div>

		<p>What is a correct way of doing COM? Aside from never touching it?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1079063">
				<div id="div-comment-1079063" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joe Doe</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130923-00/?p=3163#comment-1079063">
			September 23, 2013 at 10:08 am</a>		</div>

		<p>WinRT is the correct way of doing COM, no?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1079073">
				<div id="div-comment-1079073" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130923-00/?p=3163#comment-1079073">
			September 23, 2013 at 10:44 am</a>		</div>

		<p>@Joker_VD: Pay a COM guru to wrap it in a more sane API.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1079083">
				<div id="div-comment-1079083" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joker_vD</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130923-00/?p=3163#comment-1079083">
			September 23, 2013 at 11:16 am</a>		</div>

		<p>@Joe Doe: Too bad Microsoft shipped ISA and TMG before WinRT was conceived.</p>
<p>@Joshua: Guess who is an appointed COM guru at the place where I work? ;) Really though, extending TMG Forefront&#39;s console (just an instance of MMC) with a new property page for rules, and a new context menu item has already required a stunningly large amount of work.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1079103">
				<div id="div-comment-1079103" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Nick</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130923-00/?p=3163#comment-1079103">
			September 23, 2013 at 11:37 am</a>		</div>

		<p>Come now, you can&#39;t leave us hanging! &nbsp;What *is* your favorite Seattle restaurant?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-matteo odd alt thread-odd thread-alt depth-1" id="comment-1079133">
				<div id="div-comment-1079133" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Matteo+Italia' rel='external nofollow' class='url'>Matteo Italia</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130923-00/?p=3163#comment-1079133">
			September 23, 2013 at 7:24 pm</a>		</div>

		<p>Mostly unrelated, but the contact page/suggestion box is closed, so&#8230; since the introduction of the &quot;little programs&quot; series, I added syntax highlighting to the blog on my machine with a 3-lines GreaseMonkey script, and (as expected) it does improve readability of the code snippets quite a bit (<a href="http://img689.imageshack.us/img689/975/737a.png" rel="nofollow" target="_new">img689.imageshack.us/&#8230;/737a.png</a>). It would be nice to have something like this working &quot;out of the box&quot;; I know that you don&#39;t manage the blog software, that including JS may be a problem and everything, so take this just as an item for the wishlist.</p>
<div class="post">[<em>On the other hand, it conflicts with my use of color to highlight changes. But worse, I would have to have a meeting with some lawyers about including external libraries. -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-cheong even thread-even depth-1" id="comment-1079143">
				<div id="div-comment-1079143" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/cheong00' rel='external nofollow' class='url'>cheong00</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130923-00/?p=3163#comment-1079143">
			September 23, 2013 at 7:33 pm</a>		</div>

		<p>On the other hand, porting web applications are usually easier.</p>
<p>If you code can emit the exact HTML code as the original, your port is a success. Virtually no detail can be hidden with the aid of Fiddler like tools.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1079173">
				<div id="div-comment-1079173" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Jonathan</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130923-00/?p=3163#comment-1079173">
			September 23, 2013 at 11:04 pm</a>		</div>

		<p>@Joker_vD: As you appear to already know, Forefront TMG&#39;s console was originally written in the late 90&#39;s for ISA2000, and has never been re-written since. So its unsurprising that extending it is a non-trivial task &#8211; I&#39;m surprised anyone managed to do it at all. There were talks about re-writing it in Managed code, which surely would&#39;ve made for a much more pleasant to work with, but that never happened. Also, since the product is EOL&#39;d, not much will happen with it either.</p>
<p>&#8211; Former TMG team member</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1079213">
				<div id="div-comment-1079213" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blogs.msdn.com/arcangelpip_4000_hotmail.com/ProfileUrlRedirect.ashx' rel='external nofollow' class='url'>arcangelpip@hotmail.com</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130923-00/?p=3163#comment-1079213">
			September 24, 2013 at 2:47 am</a>		</div>

		<p>@Joker_vD:</p>
<p>From my own experiences, smart pointers and other helper classes make doing COM a lot less annoying.</p>
<p>For the correct way, it is programming, , it is not easy to say that there is one correct way of doing something.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1079223">
				<div id="div-comment-1079223" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">ulric</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130923-00/?p=3163#comment-1079223">
			September 24, 2013 at 4:45 am</a>		</div>

		<p>I use ATL all the time but 99.9% just for CComPtr. &nbsp;I find always find CComObject a bit of a head scratcher. </p>
<p>I don&#39;t understand the lifespan of the Autocomplete object here. &nbsp;It&#39;s created and then released automatically at the end of OnInitDialog. Who keeps the object alive, the Edit control by some undocumented interface between it and the CLSID_AutoComplete object?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-mike-dimmick even thread-even depth-1" id="comment-1079233">
				<div id="div-comment-1079233" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Mike+Dimmick' rel='external nofollow' class='url'>Mike Dimmick</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130923-00/?p=3163#comment-1079233">
			September 24, 2013 at 6:34 am</a>		</div>

		<p>@ulric: <a rel="nofollow" target="_new" href="http://msdn.microsoft.com/en-us/library/windows/desktop/hh127437(v=vs.85).aspx">msdn.microsoft.com/&#8230;/hh127437(v=vs.85).aspx</a> says:</p>
<p>&quot;6.Release the objects.</p>
<p>&quot;Note &nbsp;The autocomplete object remains attached to the edit control even after you release it. If you foresee a need to access these objects later—if you want to change the autocomplete options at a later time, for example—it is not required that you release them at this point.&quot;</p>
<p>At a guess, the autocomplete object subclasses the HWND that it&#39;s passed in Init, and deletes itself when WM_DESTROY is sent to the control.</p>
<p>The autocomplete object holds a reference to the string-enumeration object.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1079243">
				<div id="div-comment-1079243" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">John Doe</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130923-00/?p=3163#comment-1079243">
			September 24, 2013 at 6:43 am</a>		</div>

		<p>While analysing the full sample (by stiching the various code snippets together, but still without compiling), I found that the LVN_DELETEITEM notification&#39;s documentation ( <a href="http://msdn.microsoft.com/en-us/library/windows/desktop/bb774812(v=vs.85).aspx" rel="nofollow" target="_new">msdn.microsoft.com/&#8230;/bb774812(v=vs.85).aspx</a> ) states that only the iItem field is set, the other fields are zero. So, this:</p>
<p>&nbsp; &nbsp;auto pnmlv = CONTAINING_RECORD(pnm, NMLISTVIEW, hdr);</p>
<p>&nbsp; &nbsp;delete reinterpret_cast&lt;ItemInfo *&gt;(pnmlv-&gt;lParam);</p>
<p>should be:</p>
<p>&nbsp; &nbsp;auto pnmlv = CONTAINING_RECORD(pnm, NMLISTVIEW, hdr);</p>
<p>&nbsp; &nbsp;delete GetItemByIndex(pnmlv-&gt;iItem);</p>
<p>I was going for properly freeing the text of each listview item, but (although undocumented) listviews make a copy of the string sent in ListView_SetItemText/LVM_SETITEMTEXT et al.</p>
<p>BTW, this would make a good blog post [bling bling bling, suggestion uncalled for]: what&#39;s the expected behavior of some window messages if nothing else is told (e.g. in this case, to copy the string).</p>
<p>I guess I quit finding the subtle bug in BuildWindowList, perhaps some day when I actually compile it. I don&#39;t have VS at hand right now.</p>
<p>PS: Commenter foo also states a potential problem, handle recycling, that seems plausible enough to be the subtle bug. To solve it, we could keep the IUnknown interface pointer of either the Explorer or IE object in ItemInfo, to later check if both the hwnd and the object remain the same.</p>
<div class="post">[<em>The LVN_DELETEITEM thing is a doc error. I&#39;ll submit a fix request. The general rule for controls is that strings are copied. (See: List box, combo box, button, static, you get the idea.) -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1079813">
				<div id="div-comment-1079813" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">John Doe</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130923-00/?p=3163#comment-1079813">
			September 25, 2013 at 9:26 am</a>		</div>

		<p>@Raymond, thanks for the documentation fix request.</p>
<p>About the general rule, it&#39;s just that WM_GETTEXT states it copies the text, and WM_SETTEXT states it returns a control-specific error &quot;if insufficient space is available to set the text in the edit control&quot;. The confident reader will assume it&#39;ll be copied too.</p>
<p>In many other occasions, nothing is told. Only a seasoned Win32 programmer will rely on guess that it&#39;s copied just like WM_*TEXT, the rest would need clarification, and meanwhile come up with a SSCCE ( <a rel="nofollow" target="_new" href="http://sscce.org/">http://sscce.org/</a> ) to check if it&#39;s actually copied or not, or rather, if it leaks or not.</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>