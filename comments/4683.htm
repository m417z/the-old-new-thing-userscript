<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (14)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-1049833">
				<div id="div-comment-1049833" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">AC</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130412-00/?p=4683#comment-1049833">
			April 12, 2013 at 7:14 am</a>		</div>

		<p>I used a similar rule when I told a colleague to always write &quot;new T()&quot; instead of &quot;new T&quot; in C++.</p>
<p>Unless you know what you&#39;re doing, the former is the correct in the cases there&#39;s a difference at all.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1049843">
				<div id="div-comment-1049843" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Chris</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130412-00/?p=4683#comment-1049843">
			April 12, 2013 at 7:49 am</a>		</div>

		<p>It&#39;s funny you should mention this, because I was able to close a monitoring software&#39;s window by setting its parent to an explorer window and closing that. I sent it in along with the more severe ones that were found. The CEO was really nice.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-maurits even thread-even depth-1" id="comment-1049863">
				<div id="div-comment-1049863" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Maurits+%5BMSFT%5D' rel='external nofollow' class='url'>Maurits [MSFT]</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130412-00/?p=4683#comment-1049863">
			April 12, 2013 at 8:01 am</a>		</div>

		<p>The review panel of twelve-year-old boys should have taken a look at this title.</p>
<p><!-- p>(Also, there seems to be a spurious "call")
</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1049893">
				<div id="div-comment-1049893" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Douglas</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130412-00/?p=4683#comment-1049893">
			April 12, 2013 at 8:20 am</a>		</div>

		<p>Can you explain what it means for input queues from two different threads to be &quot;attached&quot;?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1049903">
				<div id="div-comment-1049903" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Dan Bugglin</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130412-00/?p=4683#comment-1049903">
			April 12, 2013 at 8:27 am</a>		</div>

		<p>@Chris Sounds like they&#39;ve likely chosen to ignore Windows&#39; built in user account security (eg run the software as a service where a limited user can&#39;t stop it) and install their own screendoor on the submarine. &nbsp;Good luck to them patching that up.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1049943">
				<div id="div-comment-1049943" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Igor Tandetnik</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130412-00/?p=4683#comment-1049943">
			April 12, 2013 at 9:29 am</a>		</div>

		<p>OLE in-place activation relies on cross-process parent-child relationship (embed an Excel spreadsheet into a Word document, double-click it to activate, inspect the window hierarchy with Spy++). Of course in this case both parties are aware of what&#39;s going on.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1049953">
				<div id="div-comment-1049953" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Gabe</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130412-00/?p=4683#comment-1049953">
			April 12, 2013 at 10:08 am</a>		</div>

		<p>I&#39;m guessing that the way web browsers implement tabs with different processes is an example of cross-process relationships.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1049983">
				<div id="div-comment-1049983" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Goran Mitrovic</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130412-00/?p=4683#comment-1049983">
			April 12, 2013 at 4:13 pm</a>		</div>

		<p>Oh, this reminds me on a Windows bug I&#39;ve encountered&#8230;</p>
<p>I&#39;ve had a following situation:</p>
<ol>
<li>Parent process creates a main window.</li>
<li>
<p>Child process creates a child window that gets SetParented into the main window.</p>
</li>
<li>
<p>In the &#39;parent&#39; process, PrintWindow is called on a main window.</p>
</li>
<li>
<p>&#39;Child&#39; process in child window&#39;s WM_PAINT does UpdateWindow on a parent window (that is, it goes back to the &#39;parent&#39; process).</p>
</li>
</ol>
<p>Win7 blue screen on this.</p>
<p>Note that I do not work on this project any more and mine part was only point 3; I didn&#39;t have sources for other points, but I&#39;ve figured out eventually how it works and what causes the blue screen. I&#39;ve managed to do some workaround for this (don&#39;t remember any more what), but Windows shouldn&#39;t really crash.</p>
<p>Neat.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1049993">
				<div id="div-comment-1049993" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130412-00/?p=4683#comment-1049993">
			April 12, 2013 at 4:42 pm</a>		</div>

		<p>I agree with Goran Mitrovic on one point. Any bluescreen except MANUALLY_INITIATED_CRASH (or one along the lines of I can&#39;t boot) is a kernel bug or hardware problem, and almost all of them are at least trivial DOS level security bugs.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1050023">
				<div id="div-comment-1050023" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Neil</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130412-00/?p=4683#comment-1050023">
			April 13, 2013 at 3:31 am</a>		</div>

		<p>@AC: No, it is new T that would be correct in places where new T() would be wrong. (I seem to remember that VC6 had a compiler bug where it would incorrectly compile new T() as new T in certain circumstances but that particular code got rewritten anyway.)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1050033">
				<div id="div-comment-1050033" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">APZ</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130412-00/?p=4683#comment-1050033">
			April 13, 2013 at 5:30 am</a>		</div>

		<p>Agree with Neil, every C++ book I&#39;ve read clearly says, for default constructors, use: new T. Reason is, new T() can be sometimes ambiguous as to whether it&#39;s a constructor call or function declaration.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1050103">
				<div id="div-comment-1050103" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Jake</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130412-00/?p=4683#comment-1050103">
			April 15, 2013 at 6:14 am</a>		</div>

		<p>@APZ &amp; @AC &#8211; (OT) I suspect the reason AC wants to use &#39;new T()&#39; always, is that is guarantees initialization even for POD, which &#39;new T&#39; does not, leading to fewer &#39;surprises&#39;.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1050113">
				<div id="div-comment-1050113" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Anonymous Coward</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130412-00/?p=4683#comment-1050113">
			April 15, 2013 at 6:21 am</a>		</div>

		<p>Another case where a child window belongs to a different process than the parent is the screensaver preview.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1050123">
				<div id="div-comment-1050123" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blogs.msdn.com/petr.minar_4000_hotmail.com/ProfileUrlRedirect.ashx' rel='external nofollow' class='url'>petr.minar@hotmail.com</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130412-00/?p=4683#comment-1050123">
			April 15, 2013 at 6:44 am</a>		</div>

		<p>I always wondered how exactly it works&#8230; For example when SetParent(hWnd, NULL) is called then desktop windows is the new parent. But the input queues should not be attached (at least I see it as big technical problem if they were). But desktop window is special, right?</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>