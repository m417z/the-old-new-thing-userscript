<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (25)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-1012383">
				<div id="div-comment-1012383" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">AC</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120924-00/?p=6523#comment-1012383">
			September 24, 2012 at 7:18 am</a>		</div>

		<p>Doesn&#39;t the UI Privilege Isolation also prevent posting window messages to higher integrity processes? Otherwise you can fool other processes by posting WM_COMMAND messages etc.</p>
<p>Are only certain messages allowed or is my initial assumption wrong?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1012393">
				<div id="div-comment-1012393" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blogs.msdn.com/johnstonj_4000_inn_2D00_soft.com/ProfileUrlRedirect.ashx' rel='external nofollow' class='url'>johnstonj@inn-soft.com</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120924-00/?p=6523#comment-1012393">
			September 24, 2012 at 7:18 am</a>		</div>

		<p>I was wondering the exact same thing the other week regarding part 1 &#8211; thanks for answering. &nbsp;I think there are still bad security implications &#8211; for some elevated processes, having PROCESS_TERMINATE access would still be like &quot;driving the limousine.&quot; &nbsp;For example, imagine a batch script that invokes various helper programs and checks the return codes. &nbsp;By forcibly terminating processes at key point in the script you could alter the script behavior in undesired ways.</p>
<p>Then I realized that the non-elevated user needs to be able to log out, and that kills everything. &nbsp;It would seem ridiculous to require elevation in order to log out, so that the elevated processes could be terminated, although it&#39;s arguably the correct approach &#8211; but probably wouldn&#39;t fly on a consumer operating system &#8211; only servers/workstations.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1012403">
				<div id="div-comment-1012403" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Matt</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120924-00/?p=6523#comment-1012403">
			September 24, 2012 at 7:26 am</a>		</div>

		<p>@AC:</p>
<p>Yes UIPI limits which messages (and what parameters) are allowed to be sent to windows. For example, you can send a WM_SYSCOMMAND to a high window, but cannot send a WM_DROPFILES.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-alegrigoriev odd alt thread-odd thread-alt depth-1" id="comment-1012423">
				<div id="div-comment-1012423" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/alegr1' rel='external nofollow' class='url'>alegr1</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120924-00/?p=6523#comment-1012423">
			September 24, 2012 at 7:37 am</a>		</div>

		<p>Now the $65536 question:</p>
<p>Why a low-privilege account process started from high-privileged account session by RunAs, has privileges to kill processes of the original account?</p>
<p>To illustrate that:</p>
<p>Log on as an administrator. Start CMD.EXE. By runas command, start taskmgr under any user-privileged account. Use low-privileged taskmgr to kill any Administrator process on your session.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1012433">
				<div id="div-comment-1012433" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Avi</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120924-00/?p=6523#comment-1012433">
			September 24, 2012 at 7:48 am</a>		</div>

		<p>@alegr1</p>
<p>Why shouldn&#39;t a process which descends from privileged process be able to do so? &nbsp;This seems to be an example of Raymond&#39;s &quot;already on the other side of the hatch&quot; maxim. &nbsp;If you can start cmd.exe as Administrator, you can do whatever you want from a normal tskmgr session, so who cares, security-wise, if you do it from a lower-privileged process?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1012453">
				<div id="div-comment-1012453" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Random832</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120924-00/?p=6523#comment-1012453">
			September 24, 2012 at 8:19 am</a>		</div>

		<p>@Avi the problem is, &quot;using RunAs to change to a low-privileged account&quot; sounds like it should be, in this metaphor, shoving the new process out of the airtight hatchway so it can&#39;t do exactly that sort of thing.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1012463">
				<div id="div-comment-1012463" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120924-00/?p=6523#comment-1012463">
			September 24, 2012 at 8:21 am</a>		</div>

		<p>There is an interesting puzzle &#8212; how do I spawn an interactive processes from a service. This breaks down into two further subproblems: how do I spawn an interactive process as the user, and how do I spawn an interactive process with high privileges. The first: steal explorer&#39;s token. The second: steal winlogon&#39;s token. Be careful with this one. This leaves you vulnerable to shatter attacks unless you specially addressed them.</p>
<p>The second path results in a process the user cannot kill (as is to be expected from Raymond&#39;s post above). I&#39;m not sure, but I believe a logout will kill it (I&#39;m using the trick to spawn a feedback window that&#39;s going to close itself anyway so I never tested that).</p>
<p>The UIPI restriction about signed binary with manifest for uiAccess=true is a waste of CPU power. Thread injection to any allowed process (I&#39;m looking at you on-screen-keyboard) will bypass it. This does not appear to be avoidable. I&#39;m not sure if uiAccess=true results in opening the floodgate again to shatter attacks. This may be significant.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1012493">
				<div id="div-comment-1012493" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Avi</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120924-00/?p=6523#comment-1012493">
			September 24, 2012 at 8:54 am</a>		</div>

		<p>@Random832</p>
<p>It seems a logical extension of Raymond&#39;s post. &nbsp;If the chain of (interactive) processes can be followed back to a(n interactive) process that has privileges to kill other processes, there&#39;s no security benefit in preventing any process on the chain from having the same privilege.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1012503">
				<div id="div-comment-1012503" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blogs.msdn.com/arcangelpip_4000_hotmail.com/ProfileUrlRedirect.ashx' rel='external nofollow' class='url'>arcangelpip@hotmail.com</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120924-00/?p=6523#comment-1012503">
			September 24, 2012 at 9:03 am</a>		</div>

		<p>@Joshua</p>
<p>The problem is, stealing anyone&#39;s token can leave your service open to problems. The reason for this is because you would end up with you needing to use the Local System account and maybe even SeTcbPrivilege to get the token from elsewhere. This also suffers from the problem of 0 users logged on = no token, or multiple users logged on = which instance of Explorer. I also wonder why so many people think that services should have high privileges in the first place. I have seriously seen a service (with a massive security flaw) which had the TCB privilege solely for getting a token from elsewhere. The service would have worked perfectly fine with Local Service if it wasn&#39;t for this requirement of getting a token. Why did this person do it this way? Because it was easier.</p>
<p>What I often recommend is for you to run an application at logon using the run key. If needed, this application can give credentials to the service via SSPI so the service can act on behalf of the user, and this application can be used for the notifications.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1012553">
				<div id="div-comment-1012553" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Leo Davidson</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120924-00/?p=6523#comment-1012553">
			September 24, 2012 at 10:24 am</a>		</div>

		<p>&quot;User Interface Privilege Isolation, which prevents low-integrity processes from manipulating the user interface of higher-integrity processes.&quot;</p>
<p>I feel that killing the process should count as manipulating its user interface.</p>
<p>Causing all of the process&#39;s windows to close is surely manipulating its UI. If we&#39;re worried enough to protect elevated windows from being minimized then surely we should care about them being closed as well?</p>
<p>UAC sure is a quirky design. :)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1012603">
				<div id="div-comment-1012603" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120924-00/?p=6523#comment-1012603">
			September 24, 2012 at 12:44 pm</a>		</div>

		<blockquote><p>
  UAC sure is a quirky design. :)
</p></blockquote>
<p>Irrelevant to UIPI, which needed doing anyway.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1012613">
				<div id="div-comment-1012613" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blogs.msdn.com/arcangelpip_4000_hotmail.com/ProfileUrlRedirect.ashx' rel='external nofollow' class='url'>arcangelpip@hotmail.com</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120924-00/?p=6523#comment-1012613">
			September 24, 2012 at 12:47 pm</a>		</div>

		<p>@Joshua</p>
<p>Well, from that extra information, I still think that the service had too many privileges and could have gotten rid of that by fixing the design.</p>
<p>@Leo</p>
<p>If it was the other way around, wouldn&#39;t it just be replaced with people asking why they can&#39;t kill processes that they created?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1012623">
				<div id="div-comment-1012623" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120924-00/?p=6523#comment-1012623">
			September 24, 2012 at 12:58 pm</a>		</div>

		<p>@Crescens2k: What I needed was a SUID-bit but it wasn&#39;t available.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1012633">
				<div id="div-comment-1012633" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Random832</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120924-00/?p=6523#comment-1012633">
			September 24, 2012 at 1:21 pm</a>		</div>

		<p>@Avi can&#39;t they all be traced back to winlogon, by that logic? There has to be <em>some</em> way to deliberately break the chain, or there would never be any such thing as an unprivileged process.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1012643">
				<div id="div-comment-1012643" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">jon</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120924-00/?p=6523#comment-1012643">
			September 24, 2012 at 1:27 pm</a>		</div>

		<p>So it sounds like the main reason low-integrity processes can kill high-integrity processes is to avoid annoying the user with a UAC prompt. That doesn&#39;t sound like a very well thought-through security policy.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1012653">
				<div id="div-comment-1012653" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120924-00/?p=6523#comment-1012653">
			September 24, 2012 at 2:01 pm</a>		</div>

		<p>@jon: Windows Media Player is a super-high privileged process and it is elevated by kernel. Would you have it be unkillable?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1012663">
				<div id="div-comment-1012663" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Faber</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120924-00/?p=6523#comment-1012663">
			September 24, 2012 at 3:55 pm</a>		</div>

		<p>I second the first question by AC: Why is posting SC_SYSCOMMAND by the explorer not prevented by UI privilege isolation? preventing messages from getting from your mid-integrity explorer to your high-integry banking app is the whole point of UI privilege isolation, is it not? &nbsp;And it does not matter if the banking app may ignore the Message, since the low integrity internet download might be sending a keyboard message to fiddle with some Password entry box of the high integrity banking app, and i am sure the banking app honors keyboard input thinking it originated from the user directly.</p>
<div class="post">[<i>WM_SYSCOMMAND is hardly the same as keyboard messages. You can&#39;t fiddle a password entry box with WM_SYSCOMMAND. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1012673">
				<div id="div-comment-1012673" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120924-00/?p=6523#comment-1012673">
			September 24, 2012 at 4:06 pm</a>		</div>

		<p>[WM_SYSCOMMAND is hardly the same as keyboard messages. You can&#39;t fiddle a password entry box with WM_SYSCOMMAND. -Raymond]</p>
<p>Keyboard messages are harmless compared to what WM_SETTEXT and EM_GETSEL can do.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1012513">
				<div id="div-comment-1012513" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120924-00/?p=6523#comment-1012513">
			September 24, 2012 at 9:17 am</a>		</div>

		<p>@Crescens2k: The code grabbed the active session ID to decide which session to create the process in. If no users were logged in, the code would have grabbed the service session, but due to other factors, that&#39;s unreachable anyway.</p>
<p>This was *not* a process that ran at login. This was a process that ran occasionally in response to a user task, and needed to communicate to the user what is in essence a glorified progress bar. If it weren&#39;t for the fact the process also ran from non-service triggered events, breaking it into separate processes for worker and display would have been a better idea. The process had high privileges so it could write to the installation directory.</p>
<p>But that&#39;s all wide of the point I was making.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-alegrigoriev odd alt thread-odd thread-alt depth-1" id="comment-1012693">
				<div id="div-comment-1012693" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/alegr1' rel='external nofollow' class='url'>alegr1</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120924-00/?p=6523#comment-1012693">
			September 24, 2012 at 6:16 pm</a>		</div>

		<p>@Joshua:</p>
<blockquote><p>
  Keyboard messages are harmless compared to what WM_SETTEXT and EM_GETSEL can do.
</p></blockquote>
<p>And that&#39;s the kind of messages stopped by UI isolation. And CBT hooks.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1012703">
				<div id="div-comment-1012703" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Alex Sh</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120924-00/?p=6523#comment-1012703">
			September 24, 2012 at 9:25 pm</a>		</div>

		<p>&gt; &nbsp;As Bill Cosby is credited with saying, &quot;I brought you into this world, and I can take you out!&quot;</p>
<p>Actually, this is a quote from 1962 movie &quot;Taras Bulba&quot; (Yul Brynner as Taras says this). And the movie itself is based on novella by Nikolai Gogol, published in 1842, which has this quote as well (in Russian, of course). Though in Russian it sounds more like &quot;I brought you into this world, and I will kill you!&quot;, which suites this topic nicely.</p>
<div class="post">[<i>Hence my very careful phrasing of the sentence. Thank you for nitpicking. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-alegrigoriev odd alt thread-odd thread-alt depth-1" id="comment-1012803">
				<div id="div-comment-1012803" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/alegr1' rel='external nofollow' class='url'>alegr1</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120924-00/?p=6523#comment-1012803">
			September 25, 2012 at 8:15 am</a>		</div>

		<p>@Alex Sh:</p>
<p>The original Gogol quote is best translated as: &quot;I begat you, and so I shall kill you&quot;.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1012893">
				<div id="div-comment-1012893" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Douglas</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120924-00/?p=6523#comment-1012893">
			September 25, 2012 at 11:51 am</a>		</div>

		<p>I loved the limo driver analogy. Spot on!</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-andycadley2 odd alt thread-odd thread-alt depth-1" id="comment-1012903">
				<div id="div-comment-1012903" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/AndyCadley' rel='external nofollow' class='url'>AndyCadley</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120924-00/?p=6523#comment-1012903">
			September 25, 2012 at 12:29 pm</a>		</div>

		<p>@jon &quot;That doesn&#39;t sound like a very well thought-through security policy.&quot;</p>
<p>UAC is not a security boundary, it&#39;s a convenience tool. Security in Windows is still determined by sessions and their are always ways and means for a user to manipulate windows in the current session (and by extension, processes, which *are* the user).</p>
<p>@Joshua</p>
<p>Services should never, ever open an interactive session at all. In fact, they should always assume their isn&#39;t anybody logged in. If there does need to be some UI, it should be a separate application which is launched by the user that uses some form of IPC to communicate with the service. Each and every attempt everyone makes at trying to launch UI from within the service itself is always going to fall foul of the no user/multiple user issue.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1013023">
				<div id="div-comment-1013023" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Richard Cox</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120924-00/?p=6523#comment-1013023">
			September 26, 2012 at 4:55 am</a>		</div>

		<blockquote><p>
  because the security attributes for the process grants the logon user PROCESS_TERMINATE access
</p></blockquote>
<p>To be pedantic terminate rights is granted to the session (SID), and the logged in user has the session in their (default) token.</p>
<p>Of course the difference only matters when you look at the process&#39;s ACL and don&#39;t see the user&#39;s login sid their.</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>