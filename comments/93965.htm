<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (8)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-1258065">
				<div id="div-comment-1258065" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">SI</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160727-00/?p=93965#comment-1258065">
			July 27, 2016 at 8:15 am</a>		</div>

		<p>I&#8217;m guessing even if a program sets the scroll range to [0&#8230;100], the likelyhood that the scroll position and page size stays 0 over the life of the window is close to nil.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1258075">
				<div id="div-comment-1258075" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">smf</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160727-00/?p=93965#comment-1258075">
			July 27, 2016 at 8:42 am</a>		</div>

		<p>It doesn&#8217;t optimize 0,100 because the allocated memory stores the position and page size as well.<br />
&#8220;minimum, maximum, position, and page size&#8221;</p>
<p>They probably assumed that if you have set a minimum and maximum then at some point you will actually scroll it.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-dwalker-wk even thread-even depth-1" id="comment-1258085">
				<div id="div-comment-1258085" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/DWalker' rel='external nofollow' class='url'>DWalker</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160727-00/?p=93965#comment-1258085">
			July 27, 2016 at 11:53 am</a>		</div>

		<p>Residents of (your city here) are shocked to learn about this new rule.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1258086">
				<div id="div-comment-1258086" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">12BitSlab</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160727-00/?p=93965#comment-1258086">
			July 27, 2016 at 12:51 pm</a>		</div>

		<p>I am still amazed at how Microsoft got 16 bit Windows to work and then shoe horning Win32 from Win95 into the kind of memory space that was available.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1258105">
				<div id="div-comment-1258105" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">zboot</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160727-00/?p=93965#comment-1258105">
			July 27, 2016 at 3:07 pm</a>		</div>

		<p>I knew it! You can slim down with one weird trick from the internet!</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-ian-griffiths odd alt thread-odd thread-alt depth-1 parent" id="comment-1258115">
				<div id="div-comment-1258115" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/IanG' rel='external nofollow' class='url'>IanG</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160727-00/?p=93965#comment-1258115">
			July 27, 2016 at 10:41 pm</a>		</div>

		<p>I don&#8217;t understand the cost for a window that uses only one of the two directions is 2 + 16 = 18 bytes&#8221;? I understand that it takes 16 bytes to hold two sets of scrollbar data, but you put the heap overhead at two pointers. Earlier you calculated a marginal &#8220;cost of 8 + 2 × 2 = 12 bytes of heap memory if the window actually uses the scroll bar&#8221; in the case where a single scroll bar&#8217;s data was delay-allocated. Wouldn&#8217;t adding another 8 bytes of data for the 2nd scrollbar bump this to 20 bytes? (So that&#8217;s 4 bytes of heap overhead, and 16 bytes of data.) I&#8217;m also not following your calculation for separate horizontal and vertical calculation of &#8220;4 + 12 = 16&#8221; since you already calculated the memory cost for a delay-loaded single scrollbar as &#8220;8 + 2 × 2 = 12 bytes&#8221;. (I&#8217;m not sure where you&#8217;re putting your pointer to the optional 2nd scroll block; if that goes in the 1st scroll block, wouldn&#8217;t that just add 2 bytes to your initial calculation, making it 14 bytes?) I&#8217;m guessing that by the time we reach these calculations something has changed to invalidate the assumptions behind your initial calculation of 12 bytes, but I can&#8217;t spot it.</p>

		
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-oldnewthing bypostauthor even depth-2" id="comment-1259565">
				<div id="div-comment-1259565" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Raymond+Chen+-+MSFT' rel='external nofollow' class='url'>Raymond Chen - MSFT</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160727-00/?p=93965#comment-1259565">
			August 9, 2016 at 10:16 am</a>		</div>

		<p>An older version of this article had different (wrong) cost calculations, and I didn&#8217;t update all the numbers when I fixed them. Fixed. And the 8 + 2 × 2 is the marginal cost of creating a scroll bar (assuming the 2 bytes in the main allocation are already accounted elsewhere). I tried to clarify.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment byuser comment-author-jeremytais odd alt thread-even depth-1" id="comment-1258425">
				<div id="div-comment-1258425" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/SimonRev' rel='external nofollow' class='url'>SimonRev</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160727-00/?p=93965#comment-1258425">
			August 1, 2016 at 7:26 am</a>		</div>

		<p>I suspect in Windows 3.1 that the percentage of windows with scroll bars is somewhat higher since today many windows are more or less acting as an empty canvas and doing full custom drawing rather than win32 windows composition (looking at anything that is XAML or web based).</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>