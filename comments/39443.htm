<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (20)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-172103">
				<div id="div-comment-172103" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Mike G.</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040507-00/?p=39443#comment-172103">
			May 7, 2004 at 7:50 am</a>		</div>

		<p>&quot;Some people say that you need a virtual destructor if and only if you have a virtual method. This is wrong in both directions.&quot;</p>
<p>Well, almost.</p>
<p>If the sizeof or layout of your class is a concern for some reason, making the destructor virtual &quot;costs nothing&quot; if your base class already has a virtual method.  You&#8217;re already carrying a vptr at that point.</p>
<p>There&#8217;s rarely a reason NOT to make the destructor virtual if you already have a virtual method, I think.  (I guess it&#8217;s possible you&#8217;re going to create a LOT of temporary Derived&#8217;s, so the ~Derived virtual call becomes a bottleneck, but that seems very unlikely&#8230;)</p>
<p>An empty virtual destructor for your last sample class would hardly be a maintenance headache, and opens the possibility for the use case to change down the road without base class changes.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-172113">
				<div id="div-comment-172113" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Daniel</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040507-00/?p=39443#comment-172113">
			May 7, 2004 at 8:14 am</a>		</div>

		<p>If you really don&#8217;t want a virtual destructor, you should probably make the base class&#8217; destructor protected, to prevent mistakes.</p>
<p>Also, there&#8217;s a small mistake &#8211; Derived isn&#8217;t derived in the last bit of code.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-172123">
				<div id="div-comment-172123" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://weblogs.asp.net/oldnewthing' rel='external nofollow' class='url'>Raymond Chen</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040507-00/?p=39443#comment-172123">
			May 7, 2004 at 8:48 am</a>		</div>

		<p>Fixed, thanks Daniel.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-172133">
				<div id="div-comment-172133" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://weblogs.asp.net/oldnewthing' rel='external nofollow' class='url'>Raymond Chen</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040507-00/?p=39443#comment-172133">
			May 7, 2004 at 8:49 am</a>		</div>

		<p>Mike G.: Most COM objects do not have a virtual destructor since they are destructed from the derived class (inside the Release() methods). Yes, it doesn&#8217;t cost you much (an etra pointer in the vtable), but if your object architecture already encapsulates object destruction in a virtual method (like COM does), then virtualizing the destructor may end up creating confusion.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-172153">
				<div id="div-comment-172153" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://weblogs.asp.net/oldnewthing' rel='external nofollow' class='url'>Raymond Chen</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040507-00/?p=39443#comment-172153">
			May 7, 2004 at 9:08 am</a>		</div>

		<p>I can&#8217;t think of one offhand.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-172173">
				<div id="div-comment-172173" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Aarrgghh</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040507-00/?p=39443#comment-172173">
			May 7, 2004 at 9:15 am</a>		</div>

		<p>Marc Wallace: You might want to do that if you&#8217;re testing the debug heap&#8217;s memory-leak detection.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-172183">
				<div id="div-comment-172183" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">DrPizza</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040507-00/?p=39443#comment-172183">
			May 7, 2004 at 9:31 am</a>		</div>

		<p>&quot;There&#8217;s rarely a reason NOT to make the destructor virtual if you already have a virtual method, I think. (I guess it&#8217;s possible you&#8217;re going to create a LOT of temporary Derived&#8217;s, so the ~Derived virtual call becomes a bottleneck, but that seems very unlikely&#8230;) &quot;</p>
<p>One reason is that it needn&#8217;t be necessary.</p>
<p>Consider for example:</p>
<p>struct Base<br />
<br />{<br />
<br />    arbitraryType arbitraryMemberVariable;<br />
<br />    virtual void doSomething() = 0;<br />
<br />    ~Base() {}<br />
<br />};<br />
<br />struct Derived : Base<br />
<br />{<br />
<br />    arbitraryType arbitraryMemberVariable;<br />
<br />    virtual void doSomething() { blahblahblah; }<br />
<br />    ~Derived() {}<br />
<br />};</p>
<p>// any old block for any old reason<br />
<br />{<br />
<br />    const Base&amp; b((Derived()));<br />
<br />}</p>
<p>In this case the Derived d-tor will be called in spite of being bound to a reference to Base, because the compiler uses the static type of the temporary to figure out which destructor to call.</p>
<p>Esoteric?  Sure.  Useless?  Hell no, as anyone who&#8217;s seen ScopeGuard will know.<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-172163">
				<div id="div-comment-172163" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.extragroup.de/weblog/hmk/archives/000807.html' rel='external nofollow' class='url'>HMK's Spurious Thoughts</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040507-00/?p=39443#comment-172163">
			May 7, 2004 at 12:08 pm</a>		</div>

		<p>When should your destructor be virtual?&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-172243">
				<div id="div-comment-172243" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Thomas Maeder</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040507-00/?p=39443#comment-172243">
			May 7, 2004 at 2:50 pm</a>		</div>

		<p>Slight inaccuracy:</p>
<p>The statement</p>
<p>The delete p will invoke Sample::~Sample instead of Derived::~Derived, resulting in a leak of the stream m_p.</p>
<p>is wrong. If a delete expression is evaluated on a base class pointer that points to an instance of a derived class, the behavior is undefined; anything can happen.</p>
<p>It is possible that the base class destructor is invoked and the derived clas destructor isn&#8217;t, but that&#8217;s just an instance of undefined behavior. Other instances are a program crash or the computer catching fire.<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-172253">
				<div id="div-comment-172253" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://weblogs.asp.net/oldnewthing/' rel='external nofollow' class='url'>Raymond Chen</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040507-00/?p=39443#comment-172253">
			May 7, 2004 at 3:10 pm</a>		</div>

		<p>Ah, excellent point Thomas.</p>
<p>5.3.5.3: &quot;If the static type of the operand is different from its dynamic type, the static type shall be a base class of the operand&#8217;s dynamic type and the static type shall have a virtual destructor or the behavior is undefined.&quot;<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-172143">
				<div id="div-comment-172143" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Marc Wallace</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040507-00/?p=39443#comment-172143">
			May 7, 2004 at 8:58 am</a>		</div>

		<p>Are there any cases where you would *not* want to invoke the destructor of the most derived class that has it?</p>
<p>In other words: somewhere, something knows that p isa Derived.  Are there cases when Derived::~Derived() is defined, but you would actually want &quot;delete p&quot; to do a Simple::~Simple()?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-172373">
				<div id="div-comment-172373" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blogs.msdn.com/jeffdav' rel='external nofollow' class='url'>jeffdav</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040507-00/?p=39443#comment-172373">
			May 9, 2004 at 8:27 pm</a>		</div>

		<p>There you go giving away my interview questions again, Raymond.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-172733">
				<div id="div-comment-172733" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://en.wikipedia.org/wiki/Slashdot_trolling_phenomena' rel='external nofollow' class='url'>Troll Buster</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040507-00/?p=39443#comment-172733">
			May 10, 2004 at 8:29 pm</a>		</div>

		<p>Don&#8217;t click on the link in Gary Niger&#8217;s post.  It&#8217;s a GNAA troll link.  Like goatse.cx only a thousand times worse.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-172743">
				<div id="div-comment-172743" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://weblogs.asp.net/oldnewthing/' rel='external nofollow' class='url'>Raymond Chen</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040507-00/?p=39443#comment-172743">
			May 10, 2004 at 8:45 pm</a>		</div>

		<p>Thanks, Mr. Troll Buster. I deleted the comment. It was also a clipboard stealer. Whatever text was on your clipboard got uploaded to the site, and then you got redirected to something unpleasant&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-172783">
				<div id="div-comment-172783" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Florin POPA</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040507-00/?p=39443#comment-172783">
			May 11, 2004 at 3:40 am</a>		</div>

		<p>Hi,</p>
<p>I think the rule about &quot;When should your destructor be virtual? &quot; can be:</p>
<p>The DTOR of base class is:<br />
<br />&#8211; public and MUST be virtual<br />
<br />&#8211; protected and then should be non-virtual</p>
<p>And by the way, is not a good ideea to  inherit public from a class without any virtual method.<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-172993">
				<div id="div-comment-172993" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">The Other John</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040507-00/?p=39443#comment-172993">
			May 12, 2004 at 6:20 am</a>		</div>

		<p>Wow, a clipboard stealer&#8230; never heard of that one before.  Amazing the things that are possible.</p>
<p>I wonder if we could perform a DNS attack on him by copying gigantic bitmaps into our clipboard, then visiting his site :)<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-174973">
				<div id="div-comment-174973" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://vin_patel2004@yahoo.co.in' rel='external nofollow' class='url'>vinod</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040507-00/?p=39443#comment-174973">
			May 18, 2004 at 3:06 am</a>		</div>

		<p>Graphics means use of graphics function<br />
<br />like circle(),line() etc., like Turbo c++.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-178303">
				<div id="div-comment-178303" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Atul Malhotra</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040507-00/?p=39443#comment-178303">
			May 28, 2004 at 1:33 am</a>		</div>

		<p>Yupp, it means drawing objects using graphics functions using standard graphics library as well as using user defined classes which may or may not be inherited from the standard classes.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-185223">
				<div id="div-comment-185223" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://weblogs.asp.net/oldnewthing' rel='external nofollow' class='url'>Raymond Chen</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040507-00/?p=39443#comment-185223">
			June 18, 2004 at 11:45 am</a>		</div>

		<p>Commenting on this article has been closed.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-397483">
				<div id="div-comment-397483" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://kiranu.wordpress.com/2006/07/06/why-virtual-destructors/' rel='external nofollow' class='url'>Kiran&#8217;s Blog &raquo; Blog Archive &raquo; Why virtual destructors&#8230;</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040507-00/?p=39443#comment-397483">
			July 6, 2006 at 1:00 am</a>		</div>

		<p>PingBack from <a rel="nofollow" target="_new" href="http://kiranu.wordpress.com/2006/07/06/why-virtual-destructors/" rel="nofollow">http://kiranu.wordpress.com/2006/07/06/why-virtual-destructors/</a></p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>