<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (8)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-133853">
				<div id="div-comment-133853" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Jack Mathews</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20031209-00/?p=41573#comment-133853">
			December 9, 2003 at 10:58 am</a>		</div>

		<p>Q: How does one typically make an object threadsafe?</p>
<p>A. Working off of the stack rather than the heap, thread local storage, and critical sections. (I know you&#8217;re looking for critical sections :) )</p>
<p>Q: What is the result of suspending a thread in the middle of a threadsafe operation?</p>
<p>Critical section never gets unlocked if you&#8217;re inside it.</p>
<p>Q: What happens if &#8211; subsequently &#8211; you try to access that same object (in this case, the console) from another thread?</p>
<p>Deadlock&#8230;</p>
<p>&#8212;</p>
<p>One thing, btw, that suspendthread is good for, and perfectly safe, is for a thread to suspend <em>itself</em>.  That&#8217;s been a useful tool to me in the past, and probably the only OTHER useful purpose of it.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-133863">
				<div id="div-comment-133863" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">bryan</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20031209-00/?p=41573#comment-133863">
			December 10, 2003 at 5:25 am</a>		</div>

		<p>since you&#8217;re on processes here (this is 99% off-topic) if you have a process that passes an uri to the system&#8217;s protocol handler (this is an asynchronous pluggable protocol that&#8217;s being passed, a self-rolled one, but it could be http:, outlook: , etc.) can one find out what process the uri was passed from by knowing what the uri is?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-133873">
				<div id="div-comment-133873" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blogs.gotdotnet.com/raymondc/' rel='external nofollow' class='url'>Raymond Chen</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20031209-00/?p=41573#comment-133873">
			December 10, 2003 at 11:40 am</a>		</div>

		<p>Sorry, I don&#8217;t understand the question. Who is &quot;one&quot;? The process that is responsible for handling the protocol? If you choose DDE as your protocol invocation mechanism, I believe DDE lets you determine who is on the other end of a DDE conversation.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-133883">
				<div id="div-comment-133883" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ben Wilhelm</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20031209-00/?p=41573#comment-133883">
			December 10, 2003 at 9:43 pm</a>		</div>

		<p>I had a bug on this exact matter &#8211; I was suspending a thread, and it was ending up in the middle of a memory allocation mutex. Grrr. Useless function &#8211; totally useless.</p>
<p>I&#8217;ve always been trying to think of a way to do SuspendThread() without having to make the thread poll constantly, but have never managed to come up with one.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-133893">
				<div id="div-comment-133893" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Jack Mathews</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20031209-00/?p=41573#comment-133893">
			December 10, 2003 at 10:11 pm</a>		</div>

		<p>1) Not useless.  Again, if used by the thread itself, it&#8217;s extremely useful.<br />
2) Well, there&#8217;s always going to HAVE to be some way to poll.  A way would be to put the unsafe code in critical sections, and make the thread that suspends your thread is also enter the critical section.  Then you can guarantee that only when you&#8217;re out of it can the suspend get called.  But in this case, you may as well just poll in a safe place, rather than this.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-133903">
				<div id="div-comment-133903" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">bryan</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20031209-00/?p=41573#comment-133903">
			December 11, 2003 at 6:10 am</a>		</div>

		<p>&#8216;Who is &quot;one&quot;? The process that is responsible for handling the protocol? If you choose DDE as your protocol invocation mechanism, I believe DDE lets you determine who is on the other end of a DDE conversation.&#8217;</p>
<p>The one was grammatical, as in any unnamed individual, or I guess process as well in this case.</p>
<p>The problem I&#8217;m thinking about specifically is that I&#8217;ve rolled my own pluggable protocol in a third-party scripting language, and registered it as such via the registry,  this language however has no understanding of DDE, and no especially easy way of implementing it, I can however pass off the protocol information via the command line and using Standard I/O get information back, so what I&#8217;m wondering (and I figure it&#8217;s probably not doable) is there anyway for a third process to work out from just the protocol information, what process invoked the uri.</p>
<p>Sorry for taking up the time on your blog with this, but I figure there are not very many people out there competent to answer this question with either an authoritative no, or a &#8216;read these 15 links&#8217; yes.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-138093">
				<div id="div-comment-138093" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blogs.msdn.com/ericlippert/archive/2004/01/22/61745.aspx' rel='external nofollow' class='url'>Fabulous Adventures In Coding</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20031209-00/?p=41573#comment-138093">
			January 22, 2004 at 1:20 pm</a>		</div>

		
		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-504383">
				<div id="div-comment-504383" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://advdbg.org/blogs/advdbg_system/articles/336.aspx' rel='external nofollow' class='url'>AdvDbg System Section</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20031209-00/?p=41573#comment-504383">
			May 15, 2007 at 1:00 am</a>		</div>

		<p>Breaking The Secrets &#8212;&#8211; Dessecting The Stack Part3 Walking The Callstack Last time I cover much&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>