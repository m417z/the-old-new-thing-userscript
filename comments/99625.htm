<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (10)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-1358905">
				<div id="div-comment-1358905" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180831-00/?p=99625#comment-1358905">
			August 31, 2018 at 8:44 am</a>		</div>

		<p>&gt; closing the handles in the Wait­For­Job­To­Empty­Info structure</p>
<p>Be careful with this scheme. While it works in this specific instance, if you try to read a handle from one thread while closing it in another, and you happen to be running with a single CPU kernel, you will hang in kernel mode. It&#8217;s not a hard hang as the process can still be killed or a third thread could come by and cancel the pending IO.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1 parent" id="comment-1358915">
				<div id="div-comment-1358915" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">R P (MSFT)</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180831-00/?p=99625#comment-1358915">
			August 31, 2018 at 8:56 am</a>		</div>

		<p>Maybe I&#8217;m missing something, but that last example seems to leave the thread hanging around in a suspended state if AssignProcessToJobObject fails. I feel like maybe you need a scope guard to resume the thread.</p>

		
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-oldnewthing bypostauthor even depth-2" id="comment-1358925">
				<div id="div-comment-1358925" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Raymond+Chen+-+MSFT' rel='external nofollow' class='url'>Raymond Chen - MSFT</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180831-00/?p=99625#comment-1358925">
			August 31, 2018 at 11:10 am</a>		</div>

		<p>Oops, you&#8217;re right. Fixed.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment odd alt thread-even depth-1 parent" id="comment-1359025">
				<div id="div-comment-1359025" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Neil</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180831-00/?p=99625#comment-1359025">
			September 1, 2018 at 3:59 am</a>		</div>

		<p>Since you can control the state of the thread, you don&#8217;t need to terminate it, because as demonstrated there are ways for the thread to exit itself naturally. But out of interest, what are the dangers of terminating thread that hasn&#8217;t even started yet?</p>

		
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-oldnewthing bypostauthor even depth-2" id="comment-1359045">
				<div id="div-comment-1359045" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Raymond+Chen+-+MSFT' rel='external nofollow' class='url'>Raymond Chen - MSFT</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180831-00/?p=99625#comment-1359045">
			September 1, 2018 at 6:57 am</a>		</div>

		<p><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150814-00/?p=91811" rel="nofollow">https://blogs.msdn.microsoft.com/oldnewthing/20150814-00/?p=91811</a></p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1359065">
				<div id="div-comment-1359065" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">JAS</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180831-00/?p=99625#comment-1359065">
			September 1, 2018 at 11:45 am</a>		</div>

		<p>I never liked needing a dedicated thread to handle job events. Even back in 2000 I thought we were past that. If IOCPs could signal when they had new items, then we could SetThreadpoolWait( ) or something.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-tcb-com-au even thread-even depth-1" id="comment-1359255">
				<div id="div-comment-1359255" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/David+Fissher' rel='external nofollow' class='url'>David Fissher</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180831-00/?p=99625#comment-1359255">
			September 3, 2018 at 11:40 pm</a>		</div>

		<p>i don&#8217;t understand but efforts liked</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-fredericmagnyf odd alt thread-odd thread-alt depth-1 parent" id="comment-1359725">
				<div id="div-comment-1359725" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Medinoc' rel='external nofollow' class='url'>Medinoc</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180831-00/?p=99625#comment-1359725">
			September 7, 2018 at 7:45 am</a>		</div>

		<p>&gt; Note that it will attempt to close INVALID_HANDLE_VALUE, so don&#8217;t use it for file handles.<br />
I don&#8217;t understand this part. Does a <b>CloseHandle(INVALID_HANDLE_VALUE)</b> result in anything worse than <b>{ SetLastError(ERROR_INVALID_HANDLE); return FALSE; }</b> ?</p>

		
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-oldnewthing bypostauthor even depth-2 parent" id="comment-1359745">
				<div id="div-comment-1359745" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Raymond+Chen+-+MSFT' rel='external nofollow' class='url'>Raymond Chen - MSFT</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180831-00/?p=99625#comment-1359745">
			September 7, 2018 at 9:14 am</a>		</div>

		<p>It may also raise an &#8220;invalid handle&#8221; exception.</p>

		
				</div>
		<ol class="children">
		<li class="comment odd alt depth-3" id="comment-1359895">
				<div id="div-comment-1359895" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180831-00/?p=99625#comment-1359895">
			September 9, 2018 at 7:37 am</a>		</div>

		<p>It does only when running under the debugger. If it didn&#8217;t cost $499 to file a bug only to have it not fixed I would have filed one. That&#8217;s just silly.</p>
<p>The exception is normally a good idea, but for INVALID_HANDLE_VALUE not so much. Modern code stye wants to omit stuff like that, and it once worked just fine.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>