<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (18)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-1143823">
				<div id="div-comment-1143823" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140811-00/?p=283#comment-1143823">
			August 11, 2014 at 7:14 am</a>		</div>

		<p>I wonder if a universal wrapper could be made so that anybody requesting an STA on an MTA or free thread can get the wrapper and work. Every example I&#39;ve seen boiled down to calling DialogBox in an MTA thread which seems like it could be safe.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-wndsks odd alt thread-odd thread-alt depth-1" id="comment-1143843">
				<div id="div-comment-1143843" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/skSdnW' rel='external nofollow' class='url'>skSdnW</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140811-00/?p=283#comment-1143843">
			August 11, 2014 at 7:47 am</a>		</div>

		<p>This could/should be fixed in SHBrowseForFolder. It should be pretty simple: if (!IsCurrentThreadSTA()) { SHCreateThreadWithHandle(CTF_COINIT_STA, DoSHBrowseForFolder, pbi); WaitForSingleObject(&#8230;); return ..; } else return DoSHBrowseForFolder(pbi);</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1143853">
				<div id="div-comment-1143853" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140811-00/?p=283#comment-1143853">
			August 11, 2014 at 7:50 am</a>		</div>

		<p>Try MsgWaitFor &#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1143863">
				<div id="div-comment-1143863" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Anon</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140811-00/?p=283#comment-1143863">
			August 11, 2014 at 8:23 am</a>		</div>

		<p>What&#39;s with the &quot;&#8230;the infamous&#8230; error&#8230;&quot; construction? I see it constantly, but most of the time it is shorthand for &quot;This error is scary because I can&#39;t spend two minutes looking it up.&quot;</p>
<p>See also:</p>
<p>&quot;&#8230;the infamous bluescreen error&#8230;&quot;</p>
<p>&quot;&#8230;the infamous stop error&#8230;&quot;</p>
<p>&quot;&#8230;the infamous File Not Found error&#8230;&quot;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1143873">
				<div id="div-comment-1143873" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Gearov</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140811-00/?p=283#comment-1143873">
			August 11, 2014 at 8:34 am</a>		</div>

		<p>Anon: It&#39;s just a snowclone. The infamous &#8230; error construct is the new black.</p>
<div class="post">[<em>There is also &quot;The infamous &#8230; message&quot;, &quot;The infamous &#8230; letter&quot;, and so on. It&#39;s not even a snowclone. It&#39;s just an adjective. -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1143883">
				<div id="div-comment-1143883" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">John Doe</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140811-00/?p=283#comment-1143883">
			August 11, 2014 at 9:01 am</a>		</div>

		<p>@Anon, after the fact, and if anyone on the interwebs ever cares to publish an analysis and fix or workaround, you might spend at most two minutes looking the error up, and it might be the same error, and it might describe the specific cause or a series of causes, and one of the suggestions might actually work (you still have to try them out).</p>
<p>Or not, for each might. &nbsp;Alas, these are the infamous errors where the description might not help. &nbsp;If you know COM, this description will make perfect sense. &nbsp;If you don&#39;t, you may ask &quot;WTH is an apartment, aren&#39;t domains enough?&quot;, Of Course™, one thing having little or nothing to do with the other.</p>
<p>There went two minutes, who knows how many more&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1143893">
				<div id="div-comment-1143893" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Aron Parker</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140811-00/?p=283#comment-1143893">
			August 11, 2014 at 9:51 am</a>		</div>

		<p>Woohoo! I thought those CLR weeks were extinct, can&#39;t wait to see more! I love this blog!</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1143903">
				<div id="div-comment-1143903" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Gabe</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140811-00/?p=283#comment-1143903">
			August 11, 2014 at 10:42 am</a>		</div>

		<p>skSdnW: Why don&#39;t you try that and let us know how it works?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1143913">
				<div id="div-comment-1143913" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">T</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140811-00/?p=283#comment-1143913">
			August 11, 2014 at 10:50 am</a>		</div>

		<p>&quot;On the first call to unmanaged code, the runtime calls Co­Initialize­Ex to initialize the COM apartment as either an MTA or an STA apartment.&quot;</p>
<p>Does it do it even if you don&#39;t deal with COM at all and call native code through a P/Invoke?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-wndsks odd alt thread-odd thread-alt depth-1" id="comment-1143923">
				<div id="div-comment-1143923" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/skSdnW' rel='external nofollow' class='url'>skSdnW</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140811-00/?p=283#comment-1143923">
			August 11, 2014 at 12:07 pm</a>		</div>

		<p>@Gabe: How do you suggest I try that? Injecting into every process and hook SHBrowseForFolder?</p>
<p>Only MS could fix it but it is not hard: <a href="http://pastebin.com/ebGi4RGQ" rel="nofollow" target="_new">http://pastebin.com/ebGi4RGQ</a></p>
<div class="post">[<em>Try changing a system setting while the dialog box is up. Or try doing anything with thread affinity in the browse dialog callback. -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-fleet-command even thread-even depth-1" id="comment-1143933">
				<div id="div-comment-1143933" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Fleet+Command' rel='external nofollow' class='url'>Fleet Command</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140811-00/?p=283#comment-1143933">
			August 11, 2014 at 12:45 pm</a>		</div>

		<p>&quot;Welcome to CLR Week 2014. Don&#39;t worry, it&#39;ll be over in a few days.&quot;</p>
<p>I am excited and don&#39;t want it be over&#8230; ever.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-wndsks odd alt thread-odd thread-alt depth-1" id="comment-1143943">
				<div id="div-comment-1143943" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/skSdnW' rel='external nofollow' class='url'>skSdnW</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140811-00/?p=283#comment-1143943">
			August 11, 2014 at 1:40 pm</a>		</div>

		<p>@Raymond: I don&#39;t know what kind of system setting you are talking about. As far as thread affinity goes, MSDN does not say anything about which thread the callback is called from but most people probably assume it is the same thread. If a MTA workaround was added it could just say that it is undefined which thread the callback is called from when the caller was MTA.</p>
<div class="post">[<em>Anything that triggers a broadcast. And you yourself noted that most people assume that it is the same thread. Adding an MTA workaround would therefore break people who made that assumption. And all this to work around something that is against best practice anyway (doing UI from an MTA thread). -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1143963">
				<div id="div-comment-1143963" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140811-00/?p=283#comment-1143963">
			August 11, 2014 at 4:44 pm</a>		</div>

		<p>[Try changing a system setting while the dialog box is up.]</p>
<p>My point about the Msg version.</p>
<p>[Or try doing anything with thread affinity in the browse dialog callback. -Raymond]</p>
<p>I could fix that in half a day by invoking the call back to the initiating thread. I&#39;ve written similar things before. To be fair I didn&#39;t know this dialog had a callback until just now. I&#39;ve never needed it.</p>
<p>[(doing UI from an MTA thread). -Raymond]</p>
<p>If it&#39;s an MTA client (as opposed to server) thread, there should be no problem with it. Artificiality creating a thread to satisfy an assertion is silly.</p>
<div class="post">[<em>You can&#39;t marshal the call back to the initiating thread, because it will try to interact with the UI elements from the wrong thread. -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1143973">
				<div id="div-comment-1143973" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140811-00/?p=283#comment-1143973">
			August 11, 2014 at 5:43 pm</a>		</div>

		<p>OK so that fix doesn&#39;t work. Yet the lack of a fix seems unreasonable. Being able to create, use, and finally discard single threaded objects within the lifetime of a single message to a multi-threaded server should be the NORMAL case not the strange difficult case.</p>
<div class="post">[<em>(1) That single-threaded object may in turn create other single-threaded objects. And how can you prove that the object is discarded before the call returns? Maybe somebody passed a reference to a background thread, or cached it in a thread-local object. (2) Doing UI from an MTA thread is <a href="http://blogs.msdn.com/b/oldnewthing/archive/2008/04/24/8420242.aspx">explicitly a bad idea</a>. We shouldn&#39;t be making it easier to carry through on bad ideas. That&#39;s the pit of failure. -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-cheong even thread-even depth-1" id="comment-1143993">
				<div id="div-comment-1143993" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/cheong00' rel='external nofollow' class='url'>cheong00</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140811-00/?p=283#comment-1143993">
			August 11, 2014 at 6:39 pm</a>		</div>

		<p>Btw, since the [STAThread] is automatically added to Program.cs when the project is created, it&#39;s kind of puzzling on how it got lost on the way.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-wndsks odd alt thread-odd thread-alt depth-1" id="comment-1143953">
				<div id="div-comment-1143953" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/skSdnW' rel='external nofollow' class='url'>skSdnW</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140811-00/?p=283#comment-1143953">
			August 11, 2014 at 4:20 pm</a>		</div>

		<p>@Raymond: MSDN says this about MTA callers: &quot;&#8230; SHBrowseForFolder fails if the calling application uses the BIF_USENEWUI or BIF_NEWDIALOGSTYLE flag&#8230;&quot; so how would this break existing code? Or you could add a new BIF_* flag for MTA callers. Win32 is dead so it is not going to happen but it would have been nice 10 years ago.</p>
<p>Basically, any API that shows a dialog can get this MTA issue in the future. Imagine this; the dialog created by ChooseFont() gets new buttons to save and load custom colors or to load a color from a palette file. You would end up calling GetOpenFileName which hosts shell extensions that expect to be called from a STA thread&#8230;</p>
<div class="post">[<em>How would changing behavior break existing code? Because you&#39;re changing behavior. There would need to be a new BIF_* flag, but if you need to change your code to get the altered behavior, you may as well change your code to do the helper thread. So there&#39;s no real value added aside from convenience. -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1144003">
				<div id="div-comment-1144003" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Xv8</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140811-00/?p=283#comment-1144003">
			August 12, 2014 at 5:27 am</a>		</div>

		<p>@cheong00: People who don&#39;t use the project templates?</p>
<p>The C++ template annoys the hell out of me, I imagine there must be some people who don&#39;t use the C# template too.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1144563">
				<div id="div-comment-1144563" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">nobugz</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140811-00/?p=283#comment-1144563">
			August 14, 2014 at 5:08 pm</a>		</div>

		<p>The code is fake. &nbsp;As behooves managed code, you get an InvalidOperationException when you try to change the apartment state too late. &nbsp;Exception message &quot;Failed to set the specified COM apartment state&quot;. &nbsp;Try it.</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>