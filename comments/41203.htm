<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (23)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-119663">
				<div id="div-comment-119663" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.whirlingdervishes.com' rel='external nofollow' class='url'>Henk Devos</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040105-00/?p=41203#comment-119663">
			January 5, 2004 at 10:19 am</a>		</div>

		<p>My guess is that this long history (going back to the 4-bits 4004) must have a negative impack on the design of the processor.<br />
<br />Maybe it would have been better to emulate older processors in software at certain stages, instead of building this emulation into the processor itself and staying 100% compatible.<br />
<br />Would it be fair to say that if 8-bit and 16-bit compatibility would not exist, there would be more free space on the chip and consequently more registers?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-119673">
				<div id="div-comment-119673" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Eric Wilson</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040105-00/?p=41203#comment-119673">
			January 5, 2004 at 10:24 am</a>		</div>

		<p>Side note:  When it says above, &quot;At that time, processors did not have lots of registers.&quot; the reason is not because of any sort of hidden agenda against more registers, or any belief that more registers were unneeded.  It was purely a decision based on the cost of transistors at the time.  Remember, these processors were built at a time when 29,000 transitors was all you could fit on the die:)</p>
<p>Unfortunetly, Intel has never been able to reconcile the desire for more registers with the desire for backwards compatibility (they very wisely it turns out stuck with compatibility).  That being said, internally ever modern CPU from Intel uses register renaming so that the lack of registers has only a small effect on performance, if any.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-119683">
				<div id="div-comment-119683" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.honestillusion.com' rel='external nofollow' class='url'>James Curran</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040105-00/?p=41203#comment-119683">
			January 5, 2004 at 10:32 am</a>		</div>

		<p>I&#8217;m not sure of Transitor count alone can explain the lack of registers on the 8086.  The Z-8000 (Zilog&#8217;s successor to the Z-80, and competitor of the 8086), had 16 16-bit registers, all general purpose (in addition the program control registers: IP, SP etc).</p>
<p>(OTOH, fat lot of good that did for Zilog, who seems to have disppeared in the fog of time&#8230;.)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-119693">
				<div id="div-comment-119693" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">S N</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040105-00/?p=41203#comment-119693">
			January 5, 2004 at 11:12 am</a>		</div>

		<p>I thought about it too. But then I remembered the two instructions that exists and used mostly.</p>
<p> PUSHA (PUSH ALL)</p>
<p> POPA  (POP ALL)</p>
<p> If you include the new resgiester as part of above two instructions, then think about what would happen to the performance of the existing applications. They would be crawling rather than speeding.<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-119703">
				<div id="div-comment-119703" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://weblogs.asp.net/oldnewthing/' rel='external nofollow' class='url'>Raymond Chen</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040105-00/?p=41203#comment-119703">
			January 5, 2004 at 11:17 am</a>		</div>

		<p>For compatibility reasons of course you can&#8217;t change the registers pushed and popped by pusha/popa. So if new registers are added you&#8217;d need a new instruction to push and pop those new registers (like pushad and popad when the registers got extended to 32 bits).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-119713">
				<div id="div-comment-119713" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Peter Lund/firefly@diku.dk</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040105-00/?p=41203#comment-119713">
			January 5, 2004 at 11:25 am</a>		</div>

		<p>pusha/popa were introduced in 80188/80186.  The original 8088/8086 didn&#8217;t have them.</p>
<p>What baffles me about the x86 is not the low number of registers or how they are all somewhat less than general purpose or how unorthogonal it is (I like optimizing assembler code :) ).</p>
<p>No, what baffles me is one tiny little piece of orthogonality in all the chaos: the SP register is treated as a GPR.  The instructions that operate on registers that aren&#8217;t fixed have three bits to encode the register they operate on (two-address instructions have two of those fields, of course).  Why is SP one of those eight registers that can be encoded there?  Wouldn&#8217;t it have made sense to special-case SP so you could move between BP and SP, you could add/subtract from SP, you could move between SP and AX and you could load SS and SP together from memory (the 8088/8086 couldn&#8217;t do that &#8212; this is your cue to talk about microcode bugs, Raymond ;) ).  Why on earth can you negate SP, xor it with dx, shift it, rotate it, etc?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-119723">
				<div id="div-comment-119723" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Eric Wilson</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040105-00/?p=41203#comment-119723">
			January 5, 2004 at 11:30 am</a>		</div>

		<p>Absolutely.  A sure recipe for disaster is to have a OS allocate some (fixed) amount of space for the register set (let say 256 bytes for arguement sake), then have the CPU instruction PUSHA write an extra 16 bytes:)  </p>
<p>Can you say, &quot;buffer overrun&quot;?  I knew you could:)<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-119733">
				<div id="div-comment-119733" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Raymond Chen</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040105-00/?p=41203#comment-119733">
			January 5, 2004 at 11:57 am</a>		</div>

		<p>Nowadays it doesn&#8217;t matter &#8212; efficient memory caching takes the place of many, many registers.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-119743">
				<div id="div-comment-119743" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://weblogs.asp.net/oldnewthing/' rel='external nofollow' class='url'>Raymond Chen</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040105-00/?p=41203#comment-119743">
			January 5, 2004 at 11:59 am</a>		</div>

		<p>(note: the above &quot;Raymond Chen&quot; comment was not from me; must be somebody else with the same name as me, or somebody trying to fool people)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-119753">
				<div id="div-comment-119753" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">asdf</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040105-00/?p=41203#comment-119753">
			January 5, 2004 at 12:27 pm</a>		</div>

		<p>This is giving me bad flashbacks of gameboy assembly programming. Make is stop Raymond, make it stop.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-119783">
				<div id="div-comment-119783" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://russ.uk.net' rel='external nofollow' class='url'>Russ C.</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040105-00/?p=41203#comment-119783">
			January 5, 2004 at 2:18 pm</a>		</div>

		<p>I&#8217;ve just got a real nasty urge to dig out Turbo C++ 3.0 and start emitting :)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-119793">
				<div id="div-comment-119793" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://radio.weblogs.com/0133184/' rel='external nofollow' class='url'>Kevin Schofield</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040105-00/?p=41203#comment-119793">
			January 5, 2004 at 2:41 pm</a>		</div>

		<p>At one level you can&#8217;t answer this kind of question in hindsight, knowing what we know now. There&#8217;s so much context in decsions like this: what kinds of programs are people writing, how complex are compilers and can they really take advantage of having a larger number of registers (most couldn&#8217;t). </p>
<p>Aside from all that, here&#8217;s a practical issue: if you&#8217;re running a pre-emptive multitasking operating system, every context switch requires swapping all the register values, which can take a long time (measured in CPU cycles). RISC processors have lots of registers; CISC processors tend to have much fewer. That makes RISC much better for tight, non-preempted data-intensive loops, and CISC better for essentially everything else.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-119803">
				<div id="div-comment-119803" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Peter Lund/firefly@diku.dk</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040105-00/?p=41203#comment-119803">
			January 5, 2004 at 3:16 pm</a>		</div>

		<p>Erik Wilson: the original ARM chip from the middle of the eighties used around 27000 transistors and had 32-bit registers, a barrel shifter, a 32-bit ALU, and around 20 registers (16 registers you could access, one of them being the PC, another would be designated as SP &#8212; some of these had &quot;shadows&quot; for fast interrupt processing).  The 68K had 68000 transistors and was slower.  So it was not just a question of transistor budgets but also a question of design philosophies.</p>
<p>8088/8086 date back from the mid to late seventies where the transistor budgets were *much* smaller.  And then there was the backwards compatibility thing, as Raymond says.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-120013">
				<div id="div-comment-120013" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://weblogs.asp.net/oldnewthing/' rel='external nofollow' class='url'>Raymond Chen</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040105-00/?p=41203#comment-120013">
			January 6, 2004 at 1:29 pm</a>		</div>

		<p>(Curiously nobody has yet noticed my fantastic inability to count.  A,B,C,D,E,H,L = seven registers, not six.)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-120113">
				<div id="div-comment-120113" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">asdf</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040105-00/?p=41203#comment-120113">
			January 6, 2004 at 9:29 pm</a>		</div>

		<p>Gotta love off by one errors.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-120503">
				<div id="div-comment-120503" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.ozemail.com.au/~markhurd/' rel='external nofollow' class='url'>Mark Hurd</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040105-00/?p=41203#comment-120503">
			January 8, 2004 at 2:17 am</a>		</div>

		<p>The 8-bit 6502 (Vic20, Apple II, etc) only had 4: A IX IY SP. That is 1 general purpose, 2 index registers, and a stack pointer.</p>
<p>It had smaller, faster opcodes to access the zero page 0x0000-0x00FF, and the stack was between 0x01FF-0x0100 (going down).</p>
<p>Considering it ran at 1MHz, it is always pleasing to compare the quality and performance of the programs (especially games) written for it with the IBM-PC programs of the same period.<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-120643">
				<div id="div-comment-120643" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://weblogs.asp.net/oldnewthing/' rel='external nofollow' class='url'>Raymond Chen</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040105-00/?p=41203#comment-120643">
			January 8, 2004 at 7:47 am</a>		</div>

		<p>Ah the 6502. Actually I believe the registers were called A, X, Y, and S. Maybe it depends whose mnemonics you were using. I&#8217;ve heard the 6502 described as &quot;a 256-register processor [zero page] except that you had to write your program in microcode.&quot;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-139533">
				<div id="div-comment-139533" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.ozemail.com.au/~markhurd/' rel='external nofollow' class='url'>Mark Hurd</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040105-00/?p=41203#comment-139533">
			January 27, 2004 at 4:42 pm</a>		</div>

		<p>Yes, I used names similar to the ones already mentioned to help people understand their purpose.</p>
<p>If I&#8217;d come across the C compiler for the Commodore 64/128 when it was produced I may not have yet made the transition to Windows PCs for hobby computing. (That is, while I was using Unix and Windows at work, often it was for stuff that I couldn&#8217;t bring home anyway, so my Commodore 128 was my home computer well into the beginnings of the Internet.) Unfortunately, I only found a C64/128 C compiler after I owned a PC, and the speed difference was too much to try to keep using it.</p>
<p>There&#8217;s probably a few features of the C64 that still aren&#8217;t provided in today&#8217;s systems, but there are two that are available that I&#8217;d like to know why they&#8217;re not made easily accessible:<br />
<br /> &#8211; sprites: That is like the mouse cursor, (and menus?) that hardware handles rather than software keeping the background clean<br />
<br /> &#8211; &#8216;computer generated&#8217; sound: The C64 emulators use DirectX to manufacture the SID chip sounds but I&#8217;m surprised there hasn&#8217;t been an API as simple as the SID chip available. I&#8217;ve guessed it&#8217;s because of licencing issues and non-standardisation of sound cards, but I&#8217;d like to know.</p>
<p>I&#8217;ve not needed either of these for work, of course, so I&#8217;m ignorant of the current possibilities, but I&#8217;m as interested in any historical stories as available APIs.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-139543">
				<div id="div-comment-139543" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://weblogs.asp.net/oldnewthing/' rel='external nofollow' class='url'>Raymond Chen</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040105-00/?p=41203#comment-139543">
			January 27, 2004 at 4:53 pm</a>		</div>

		<p>Windows used sprites (hardware cursors) but eventually sprites were ditched because&#8230;</p>
<p>1. sprites were monochrome only (everybody likes color cursors)<br />
<br />2. you can&#8217;t do alphablend dropshadow stuff on sprites (new for Windows 2000)</p>
<p>It&#8217;s possible that these restrictions have since been lifted; those were the reasons at the time.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-157743">
				<div id="div-comment-157743" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Patrik Weibull</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040105-00/?p=41203#comment-157743">
			March 26, 2004 at 2:47 am</a>		</div>

		<p>Pushing all registers onto the stack is fast, and this is what you do between each time slice in a multitasking system. So, with respect to multitasking, the x86 with its few registers is quite good.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-184613">
				<div id="div-comment-184613" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Peter Jacobi</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040105-00/?p=41203#comment-184613">
			June 17, 2004 at 8:16 am</a>		</div>

		<p>Anybody still looking here?</p>
<p>IMHO there was another important reasons to</p>
<p>&#8211; keep the register count low</p>
<p>&#8211; make the registers special purpose</p>
<p>For the sake of a small instruction size!</p>
<p>Every added register, every new use for an<br />
<br />old register, is likely to give troubles how to encode the new instructions. Look Z80 and later the evolution of the X86. It&#8217;s all ugly &quot;Prefix&quot; stuff.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-445003">
				<div id="div-comment-445003" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://test.xxeo.com/archives/2006/06/24/more-x86-lore-illegal-instructions-and-the-286-protected-mode.html' rel='external nofollow' class='url'>Dru&#8217;s Blog &raquo; Blog Archive &raquo; More x86 Lore - Illegal instructions and the 286 Protected Mode</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040105-00/?p=41203#comment-445003">
			November 26, 2006 at 5:24 pm</a>		</div>

		<p>PingBack from <a rel="nofollow" target="_new" href="http://test.xxeo.com/archives/2006/06/24/more-x86-lore-illegal-instructions-and-the-286-protected-mode.html" rel="nofollow">http://test.xxeo.com/archives/2006/06/24/more-x86-lore-illegal-instructions-and-the-286-protected-mode.html</a></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-518803">
				<div id="div-comment-518803" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.xxeo.com/archives/2006/06/24/more-x86-lore-illegal-instructions-and-the-286-protected-mode.html' rel='external nofollow' class='url'>Dru&#8217;s Blog &raquo; Blog Archive &raquo; More x86 Lore - Illegal instructions and the 286 Protected Mode</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040105-00/?p=41203#comment-518803">
			June 25, 2007 at 3:53 am</a>		</div>

		<p>PingBack from <a rel="nofollow" target="_new" href="http://www.xxeo.com/archives/2006/06/24/more-x86-lore-illegal-instructions-and-the-286-protected-mode.html" rel="nofollow">http://www.xxeo.com/archives/2006/06/24/more-x86-lore-illegal-instructions-and-the-286-protected-mode.html</a></p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>