<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (15)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-415733">
				<div id="div-comment-415733" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">FlorianW</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060831-22/?p=29903#comment-415733">
			August 31, 2006 at 10:06 am</a>		</div>

		<p>Well, It&#8217;s usefull for writing tutorials for win32 api programming where you don&#8217;t want to shock the developer with the class function in the hello world example.</p>
<p>But I most admit, I used the button class for this:-)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-415743">
				<div id="div-comment-415743" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">mastmaker</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060831-22/?p=29903#comment-415743">
			August 31, 2006 at 10:24 am</a>		</div>

		<p>For one of our products, I was forced to create a CNonDialog class which would SIMULATE the entire functionality of the dialog. This is because the CDialog painter would assume a rectangular region for the window (for the purposes of background filling) which would make it look like my oval dialog had smudges around the edge. I am sure this happened in Win2k. Haven&#8217;t tried it in XP.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-415753">
				<div id="div-comment-415753" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Steve</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060831-22/?p=29903#comment-415753">
			August 31, 2006 at 10:43 am</a>		</div>

		<p>I&#8217;ve always used &quot;#32770&quot;. &nbsp;Is that the same?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-415763">
				<div id="div-comment-415763" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Anonymous</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060831-22/?p=29903#comment-415763">
			August 31, 2006 at 11:31 am</a>		</div>

		<p>Perhaps they&#8217;re writing a 4k or 64k demo, and they want to save a few bytes in the exe by not needing to link against the CreateDialog function.<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-415803">
				<div id="div-comment-415803" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">mastmaker</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060831-22/?p=29903#comment-415803">
			August 31, 2006 at 1:01 pm</a>		</div>

		<p>Sorry for the mistake. It was CButton class that had the problem with non-rectangular window regions. So, I came up with CNonButton class.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-415843">
				<div id="div-comment-415843" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Jules</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060831-22/?p=29903#comment-415843">
			August 31, 2006 at 3:23 pm</a>		</div>

		<p>I didn&#8217;t actually use the approach of creating a dialog directly, but when I wrote an application framework that used a different resource format for describing dialog boxes, I effectively abandoned the use of the DialogBox (etc) functions. &nbsp;</p>
<p>In the first version I just used DialogBox (or CreateDialog) with a constructed template that created a dialog of the right size, then created controls in response to WM_CREATE. &nbsp;I eventually abandoned this approach because you can&#8217;t get pixel-resolution sizing this way, as the size of a dialog is specified in dialog units (of course).</p>
<p>So, in the second version, I created dialogs by using CreateWindow and used my own implementation of modality to provide an &#8216;execute()&#8217; method on my dialog class. &nbsp;I didn&#8217;t use the standard Windows&#8217; dialog class, cause I figured that by the time I&#8217;d done this, and called IsDialogMessage, and so on, there was nothing left in the standard class that was useful to me. &nbsp;So I just registered my own class for dialog boxes and let it go from that.</p>
<p>The Windows dialog template system is showing its age a bit, I think. &nbsp;Last time I used it, it was showing signs of stress around the edges, particularly when it came to creating the C++ objects that managed the custom controls that were created by it.</p>
<p>Maybe its just me, but I prefer a dialog-creation system that&#8217;s completely integrated into my framework and which does the object creation too.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-415903">
				<div id="div-comment-415903" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">wysiwyg</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060831-22/?p=29903#comment-415903">
			August 31, 2006 at 9:15 pm</a>		</div>

		<p>A proper dialog system should not rely on a existing GUI. And most important, a dialog system should not dictate program flow.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-415913">
				<div id="div-comment-415913" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Norman Diamond</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060831-22/?p=29903#comment-415913">
			September 1, 2006 at 12:04 am</a>		</div>

		<p>Thursday, August 31, 2006 3:23 PM by Jules</p>
<p>&gt; I eventually abandoned this approach because<br />
<br />&gt; you can&#8217;t get pixel-resolution sizing this<br />
<br />&gt; way, as the size of a dialog is specified in<br />
<br />&gt; dialog units (of course).</p>
<p>I think that there are APIs that will figure out how many pixels you have and how many you need for each control, but &#8230; well, maybe this would be a candidate for the suggestion box. &nbsp;As far as I could tell, for each control that uses a different font from the dialog box&#8217;s main font, I would have to create a new separate invisible dialog box, set that one&#8217;s font to the one we do computations with, call the APIs and do some computations, etc. &nbsp;I gave up. &nbsp;I think it&#8217;s possible, but if I tried it I&#8217;d probably get fired for wasting the amount of time that would take.</p>
<p>Meanwhile some header files declare a constant named<br />
<br />DS_USEPIXELS</p>
<p>Now what would that be for? &nbsp;We don&#8217;t know any company that would dare to make internal use of such an enormously useful feature while preventing everyone else from using such an enormously useful feature. &nbsp;And it is 100% fully undocumented, as far as I can find. &nbsp;So what in the world is this declaration doing in some header files?</p>
<div class="post">[<i>I like that strategy. Make up a theory and then start accusing people of cheating because they didn&#8217;t tell you about the theory that you made up. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-415953">
				<div id="div-comment-415953" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Norman Diamond</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060831-22/?p=29903#comment-415953">
			September 1, 2006 at 6:05 am</a>		</div>

		<blockquote><p>
  [I like that strategy. Make up a theory and<br />
  <br />&gt; then start accusing people of cheating<br />
  <br />&gt; because they didn&#8217;t tell you about the<br />
  <br />&gt; theory that you made up. -Raymond]</p>
<p>Well, now I&#8217;m even more confused than by your word games in your recent non-computer thread.</p>
<p>I might or might not have a theory that Microsoft is making internal use of such an enormously useful feature even after Microsoft issued settlement documentation of some APIs and network protocols. &nbsp;But even supposing I have a theory that Microsoft would still dare to do such a thing, then you say that my reason for accusing people of cheating is because they didn&#8217;t tell me about my theory? &nbsp;Supposing that I have such a theory, my reason for accusing people of cheating wouldn&#8217;t be that they withheld publication of DS_USEPIXELS? &nbsp;Mr. Chen, both you and I have moments when we aren&#8217;t as logical as we usually are, but this nonsense looks particularly extreme.</p>
<p>Meanwhile, if Microsoft weren&#8217;t using DS_USEPIXELS, and since no one else can use it, I still wonder how that declaration got into some header files.</p>
</blockquote>
<div class="post">[<i>Thanks for being vague. I eventually found what you&#8217;re referring to, and you conveniently omitted mentioning a critical detail:</p>
<pre><u>#if(_WIN32_WCE &gt;= 0x0500)</u>
#define DS_USEPIXELS        0x8000L
#endif
</pre>
<p>It should be blatantly obvious from the <code>#if</code> that this is a Windows CE-only style. You can take this up with the Windows CE folks. It boggles the mind that that seeing a Windows CE-only style not documented in the Platform SDK (which covers Windows NT not CE) can lead to accusations that this &#8220;undocumented&#8221; style is being used &#8220;secretly&#8221; by a platform that doesn&#8217;t even support it! You owe me two hours of my life back. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-415963">
				<div id="div-comment-415963" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://deadnode.org/' rel='external nofollow' class='url'>James</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060831-22/?p=29903#comment-415963">
			September 1, 2006 at 6:20 am</a>		</div>

		<p>&quot;Meanwhile, if Microsoft weren&#8217;t using DS_USEPIXELS, and since no one else can use it, I still wonder how that declaration got into some header files.&quot;</p>
<p>It would be nice to get a clear answer &#8211; or, better still, a documented API for doing it &#8211; but it seems the explanation is just &quot;It&#8217;s something used in WinCE but not Win32&quot;, which is why it&#8217;s #ifdefed out in the SDK. Rather like the internal build test script written in Perl which managed to sneak into the WinXP CDs: accidental leakage, rather than proof MS is part of the alien conspiracy to distract us from UFO sightings with their fake crop circles.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-416153">
				<div id="div-comment-416153" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Neil</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060831-22/?p=29903#comment-416153">
			September 1, 2006 at 7:19 pm</a>		</div>

		<p>MAKEINTRESOURCE(32770) used to work too.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-416193">
				<div id="div-comment-416193" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://deadnode.org/' rel='external nofollow' class='url'>James</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060831-22/?p=29903#comment-416193">
			September 2, 2006 at 5:53 am</a>		</div>

		<p>&quot;You owe me two hours of my life back. -Raymond]&quot;</p>
<p>Well, you could have saved an hour and three quarters of that by reading my post (fifteen minutes after Norman&#8217;s) where I pointed out it&#8217;s WinCE-only and if&#8217;ed out in the SDK headers&#8230; :-)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-416313">
				<div id="div-comment-416313" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Norman Diamond</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060831-22/?p=29903#comment-416313">
			September 3, 2006 at 11:26 pm</a>		</div>

		<blockquote><p>
  It should be blatantly obvious from the #if<br />
  <br />&gt; that this is a Windows CE-only style.</p>
<p>So what? &nbsp;As already stated, as far as I can tell it&#8217;s 100% undocumented. &nbsp;That doesn&#8217;t mean undocumented in the Platform SDK, it means undocumented in all of MSDN, undocumented in the Windows Mobile 5.0 Developer Resource Kit, undocumented in the Smartphone SDK and Pocket PC SDK, undocumented in the Knowledge Base, and even undocumented in the most reliable well-known documentation system that some Microsoft employees ever obtained permission to publish (blogs.msdn.com).</p>
<p>I was guessing that Microsoft wouldn&#8217;t dare to use this thing internally after certain well known settlements and court cases, and therefore can&#8217;t imagine what purpose the declaration could serve.</p>
<p>But just now I figured it out. &nbsp;Certain well known settlements and court cases pertain to &quot;big&quot; Windows systems not to Windows CE. &nbsp;So Microsoft is free to continue its usual practices. &nbsp;So that must be why I was accused of having a conspiracy theory and some other stuff that I still haven&#8217;t figured out yet, though even this much of a conspiracy theory I hadn&#8217;t figured out until starting this paragraph.</p>
<p>&gt; You owe me two hours of my life back.</p>
<p>Google is still capable of finding some Microsoft things a lot quicker than two hours, and a few weeks ago this was one of them. &nbsp;If that&#8217;s been disabled then maybe a conspiracy theory needs expanding.
</p></blockquote>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-416363">
				<div id="div-comment-416363" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.morganalley.com' rel='external nofollow' class='url'>Dewi Morgan</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060831-22/?p=29903#comment-416363">
			September 4, 2006 at 8:43 am</a>		</div>

		<blockquote><p>
  &gt; I didn&#8217;t use the standard Windows&#8217; dialog class,<br />
  <br />&gt;&gt; cause I figured that by the time I&#8217;d done this, and<br />
  <br />&gt;&gt; called IsDialogMessage, and so on, there was nothing<br />
  <br />&gt;&gt; left in the standard class that was useful to me.</p>
<p>If this library was distributed, you probably ought to look far, far beyond &quot;useful to me&quot;.</p>
<p>Do your dialog contents copy with Ctrl-C? Are they readable with screen readers? Do they make the system-wide user-defined event sounds when displayed? Do they use system-wide user-defined styles? Do they deal correctly with all fonts and things like BiDi text?</p>
<p>The reason we don&#8217;t all rewrite stuff from scratch isn&#8217;t because the MS stuff is perfect, nor because it&#8217;d take us too much time: it&#8217;s an accessibility thing.</p>
<p>I&#8217;m in a glass house for this one, though, being guilty of it myself: I&#8217;m rewriting a bunch of Java text components as lightweight ones. This was because there&#8217;s no other portable way to get component transparency in a Java 1.1 applet without Swing. In doing this, I&#8217;ve killed accessibility, so I must provide an option for users who need the behaviour of the standard, non-transparent components.
</p></blockquote>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-416463">
				<div id="div-comment-416463" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Jules</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060831-22/?p=29903#comment-416463">
			September 4, 2006 at 6:29 pm</a>		</div>

		<p>&quot;Do your dialog contents copy with Ctrl-C?&quot;</p>
<p>If an edit control has focus, the usual shortcuts like this work. &nbsp;I can&#8217;t find any other system behaviour related to this, so I assume this must be what you&#8217;re talking about, so the answer is yes.</p>
<p>&quot;Are they readable with screen readers?&quot;</p>
<p>Yes, at least with Narrator anyway. &nbsp;And I didn&#8217;t have to do anything special to make it work, either. &nbsp;Screen readers are quite smart, these days. &nbsp;They seem to infer a lot from tab order, but as long as you&#8217;re sensible with window creation order that&#8217;s fine.</p>
<p>&quot;Do they make the system-wide user-defined event sounds when displayed?&quot;</p>
<p>I&#8217;ll admit they don&#8217;t do that, and probably should.</p>
<p>&quot;Do they use system-wide user-defined styles?&quot;</p>
<p>They use standard Windows components. &nbsp;They&#8217;ll use user-defined styles as much as any other window does.</p>
<p>&quot;Do they deal correctly with all fonts and things like BiDi text?&quot;</p>
<p>As long as the Windows API functions for measuring the size of text work correctly, then yes. &nbsp;Probably better than the standard dialog manager, because a dialog layout could easily break if you changed a dialog using that between two fonts with wildly different character spacings (e.g. a proportional font to a monospaced one&#8230; most of your spaces aren&#8217;t going to be wide enough any more).</p>
<p>I had very good reasons for breaking from the standard dialog manager&#8217;s control creation mechanism, namely that it wouldn&#8217;t measure the size controls actually need to be, and relied on me specifying sizes, which I felt didn&#8217;t work very well for environments where such things could easily change (especially seeing as the library in question needs to work cross-platform).<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>