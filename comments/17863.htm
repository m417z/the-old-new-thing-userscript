<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (20)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-747133">
				<div id="div-comment-747133" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">someone else</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090617-00/?p=17863#comment-747133">
			June 17, 2009 at 10:09 am</a>		</div>

		<p>Interesting. So, how do we get search and destroy this enhancement software?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-747143">
				<div id="div-comment-747143" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">John</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090617-00/?p=17863#comment-747143">
			June 17, 2009 at 10:26 am</a>		</div>

		<p>Nuke it from orbit; it&#8217;s the only way to be sure.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-747203">
				<div id="div-comment-747203" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">IgorD</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090617-00/?p=17863#comment-747203">
			June 17, 2009 at 11:49 am</a>		</div>

		<p>My 2005 LG Notebook had a fax software that wrote like 20 times a second to the Registry some value that probably meant that we&#8217;re not receiving any fax right now. Mark Russinovich&#8217;s utility helped me find out why is disk light non-stop blinking.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-747233">
				<div id="div-comment-747233" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.flickr.com/photos/ajgelado/' rel='external nofollow' class='url'>Antonio Rodr&#237;&#173;guez</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090617-00/?p=17863#comment-747233">
			June 17, 2009 at 2:15 pm</a>		</div>

		<p>The solution: just remove all the crapware that comes with your brand new computer, and install just the programs you need. Or easier: if your support terms and software license allow for it, wipe away the hard drive and do a fresh Windows install from an unmodified Microsoft disk. This may not solve the problem with the faulty wireless mouse, but will do away with all those programs that make Windows Vista seem slower on a Code Duo than Windows XP was in a Pentium II.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-747243">
				<div id="div-comment-747243" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">ton</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090617-00/?p=17863#comment-747243">
			June 17, 2009 at 2:28 pm</a>		</div>

		<p>&quot;Or, as the author of linked posting above eventually figured out, it might be a buggy wireless mouse which not only is sucking down your CPU and preventing your screen saver from running, but is also draining your wireless mouse battery!&quot;</p>
<p>I sincerely believe that one of the biggest problems that contributes to low quality software is vendors not using the miserable software that they themselves wrought. An even bigger issue is a general ignorance of best practices like basic unit testing, source control, code review, performance testing,etc. Shameful.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-747323">
				<div id="div-comment-747323" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">ender</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090617-00/?p=17863#comment-747323">
			June 17, 2009 at 4:26 pm</a>		</div>

		<p>My usual procedure when I set up a new computer for a client is to first reinstall Windows from a clean CD. Since I started doing this, the amount of trouble I have with various computers after they&#8217;ve been in use for a while has gone down significantly.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-747363">
				<div id="div-comment-747363" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://deadnode.org/' rel='external nofollow' class='url'>James Sutherland</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090617-00/?p=17863#comment-747363">
			June 17, 2009 at 5:35 pm</a>		</div>

		<p>On a related note, yesterday a colleague told me his laptop had started locking up. I investigated, and it turned out Explorer was no longer responding to (or receiving?) mouse messages &#8211; but keys still worked. Other applications seemed to be behaving a little oddly, sometimes ignoring clicks, sometimes treating left clicks as right clicks instead. Presumably something was trying to hook events and screwing it up horribly, but being a brand new big name laptop (i.e. preinstalled with a terabyte of random dross of little value and less quality) , I have far too many obvious suspects&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-747343">
				<div id="div-comment-747343" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Lisa</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090617-00/?p=17863#comment-747343">
			June 17, 2009 at 4:35 pm</a>		</div>

		<p>Sometimes DirectX initialization can cause this, particularly changing the display mode or allocating certain types of new surfaces especially on older DX versions. I assume this is tied to the window manager thing, as DX binds the surface to a window (even if the window is not visible, it&#8217;s still there and has a handle). </p>
<p>Granted, you shouldn&#8217;t be allocating surfaces continually so it shouldn&#8217;t be *sustained* mouse move messages but getting a long burst of them is fairly normal. I also don&#8217;t doubt that some apps aren&#8217;t smart enough to handle surfaces correctly either. :( A number of non-game of apps use DirectX and aren&#8217;t obvious about it, i.e. paint programs and some document readers.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-747423">
				<div id="div-comment-747423" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Alexandre Grigoriev</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090617-00/?p=17863#comment-747423">
			June 17, 2009 at 11:39 pm</a>		</div>

		<p>&#8220;The memory in the message handling code path can&#8217;t be paged out since it&#8217;s being hit all the time.&#8221;</p>
<p>Raymond,</p>
<p>I think the time to worry about code not able to page out is long long over. This code path is naturally exercised every darn half second.</p>
<div class=post>[<i>I think you&#8217;ll find that there are often many long stretches of time where a window receives no messages at all, thereby permitting the message handler to be paged out. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-747463">
				<div id="div-comment-747463" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Drak</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090617-00/?p=17863#comment-747463">
			June 18, 2009 at 1:53 am</a>		</div>

		<p>@James Sutherland:</p>
<p>Ahhhh. Now I understand this guy that was at my local computer store returning his laptop because the pointer wouldn&#8217;t move. (He had a lot of trouble explaining it to the guy behind the counter, and I figured it would be SUE.)</p>
<p>Could have been the same brand :)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-747493">
				<div id="div-comment-747493" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.georg-rottensteiner.de' rel='external nofollow' class='url'>Georg Rottensteiner</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090617-00/?p=17863#comment-747493">
			June 18, 2009 at 3:39 am</a>		</div>

		<p>Reminds me of old times (Win 3.11) when we wrote a screensaver without the provided srnsave.lib. At one of the customers secretary the screensaver would always stop after a few frames.</p>
<p>It was probably a dumb driver that continuously sent WM_MOUSEMOVE with the same coordinates over and over. We changed the screensaver code to only auto-shutoff if the mouse moved a significant amount instead of the first instance WM_MOUSEMOVE was received.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-747553">
				<div id="div-comment-747553" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Alexandre Grigoriev</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090617-00/?p=17863#comment-747553">
			June 18, 2009 at 10:37 am</a>		</div>

		<p>[I think you&#8217;ll find that there are often many long stretches of time where a window receives no messages at all, thereby permitting the message handler to be paged out. -Raymond]</p>
<p>You didn&#8217;t get the point. You should not want your code to page out anymore. Vista, finally (like 5 years later than necessary), doesn&#8217;t call SetProcessWorkingSetSize(h, -1, -1) anymore in its default main window minimize handler. And Win2008 doesn&#8217;t page the kernel stacks, too!</p>
<p>I wonder if the people who wanted the code to page out too much are responsible for horrible performance of file cache with large files in XP. Basically, if you copy large files, it broke MRU logic for the code sections and seemed cause code page-in thrashing.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-747583">
				<div id="div-comment-747583" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Jules</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090617-00/?p=17863#comment-747583">
			June 18, 2009 at 11:21 am</a>		</div>

		<p>Alexandre&#8230; tell me about it. &nbsp;Mastering a DVD image on a machine with &lt; about 1GB of RAM would always leave <em>everything</em> swapped out. &nbsp;Really annoying.</p>
<p>Linux does the same, but you can &#8216;echo 0 &gt; /proc/sys/vm/swappiness&#8217; (or some similar incantation). &nbsp;Unfortunately, I don&#8217;t think there&#8217;s any similar control for the XP kernel&#8217;s willingness to swap out applications to grow the cache.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-747603">
				<div id="div-comment-747603" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Alexandre Grigoriev</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090617-00/?p=17863#comment-747603">
			June 18, 2009 at 12:07 pm</a>		</div>

		<p>Jules,</p>
<p>I wish authors of those video/DVD authoring applications read the SDK docs at least once in a year, and learnt about FILE_FLAG_NO_BUFFERING. Oh, and CopyFile(Ex)/SHFileOperation functions&#8217; owners, too, must do that.</p>
<div class=post>[<i>A common theme: &#8220;You idiots you should do thing X.&#8221; &#8220;Um, <a href="http://blogs.technet.com/markrussinovich/archive/2008/02/04/2826167.aspx" rel="nofollow">we already do thing X</a>.&#8221; -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-747623">
				<div id="div-comment-747623" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Josh</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090617-00/?p=17863#comment-747623">
			June 18, 2009 at 12:53 pm</a>		</div>

		<p>@Alexandre: You do want your code to page out. &nbsp;One, because writing it to disk does not require removing it from RAM; paging out pre-emptively means that if you suddenly need a lot of RAM, you can immediately free unused RAM, instead of writing to disk and then freeing (which can be particularly costly if you are also reading from the same disk). &nbsp;Ever piece of code that refuses to page is less active RAM available to the process currently being used, so why not page it out if it hasn&#8217;t been used in a while? &nbsp;Making the active program run 5% faster for minutes or hours is worth a quarter second pause when you eventually leave it.</p>
<p>That said, the XP minimize paging (which didn&#8217;t seem to leave it in RAM) was a waste, but only because it got the definition of minimize wrong. &nbsp;I suspect the initial designers thought &quot;If they are switching away briefly, they&#8217;ll just switch focus, while minimizing is for programs they won&#8217;t use for a while.&quot; &nbsp;In practice, people use minimize all the time, even for short switches, and the computer was overzealously freeing RAM for the new active program. &nbsp;A good idea, poorly executed, due to inaccurate perceptions of user behavior.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-747823">
				<div id="div-comment-747823" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Alexandre Grigoriev</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090617-00/?p=17863#comment-747823">
			June 18, 2009 at 7:10 pm</a>		</div>

		<p>Josh,</p>
<p>You should not sweat about not being able to page out (discard) a code path which is exercised often during normal use, anyway.</p>
<p>Working set trimming performed during minimization, misfires badly, because when you lock the user&#8217;s session, all apps are sent a minimize command. When you open it back, all will get a restore command. In this case, especially if it&#8217;s a home computer used by different family members, getting these apps back into memory takes like a minute or so of intensive paging-in.</p>
<p>It made some sense in time of 32 MB RAM, but this time is long gone. Unfortunately, even XP SP3 still keeps doing that. I wish there was a registry setting to disable it.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-747833">
				<div id="div-comment-747833" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Alexandre Grigoriev</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090617-00/?p=17863#comment-747833">
			June 18, 2009 at 7:12 pm</a>		</div>

		<p>[A common theme: &#8220;You idiots you should do thing X.&#8221; &#8220;Um, we already do thing X.&#8221; -Raymond]</p>
<p>I thought that should have been done in 2002. Me, particularly, has been bitching about that since I started using DVD-R.</p>
<div class=post>[<i>So you want a time machine? -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-748733">
				<div id="div-comment-748733" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">nksingh</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090617-00/?p=17863#comment-748733">
			June 22, 2009 at 1:35 pm</a>		</div>

		<p>@Alexandre:</p>
<p>&quot;And Win2008 doesn&#8217;t page the kernel stacks, too!&quot;</p>
<p>I&#8217;m pretty sure it does page kernel stacks (why do you think we would fork our kernel behavior between server and client in an area so trivial?).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-748763">
				<div id="div-comment-748763" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Alexandre Grigoriev</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090617-00/?p=17863#comment-748763">
			June 22, 2009 at 2:08 pm</a>		</div>

		<p>@nksingh,</p>
<p>Of course, I don&#8217;t have an opportunity to see all the intricacies of actual Win2008 code, but from my observation of Win2008 kernel during my driver debugging, I never saw a kernel stack paged out. As opposed to Win2003, where some threads were always paged out. Even kernel worker threads (IoQueueWorkitem).</p>
<p>And if you think of it more, this stack paging is now a misfeature which should have been killed in Win2003 timeframe. Again, it&#8217;s not 32MB epoch anymore. If you have 2000 threads all in UserMode wait state, you would only save 8 MB or so of non-pageable memory. Is it worth the trouble at all? Just don&#8217;t tell me that 8 MB is the straw that breaks the camel&#8217;s back.</p>
<div class=post>[<i>In which case I don&#8217;t want to hear you complaining about how newer versions of Windows use more memory than older versions of Windows &#8211; they&#8217;re just following your recommendation of abandoning old-fashioned memory-savings designs because there&#8217;s now a lot of memory available! -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-748823">
				<div id="div-comment-748823" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Alexandre Grigoriev</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090617-00/?p=17863#comment-748823">
			June 22, 2009 at 2:50 pm</a>		</div>

		<p>[In which case I don&#8217;t want to hear you complaining about how newer versions of Windows use more memory than older versions of Windows &#8211; they&#8217;re just following your recommendation of abandoning old-fashioned memory-savings designs because there&#8217;s now a lot of memory available! -Raymond]</p>
<p>I&#8217;m sure you heard some complaints from me, some of them a few times, but I never complained about newer versions using more memory. When MinWin (or WinMin?) was demoed and people were getting excited about the kernel taking 20 MB or so, I thought: &#8220;So what? The whole System32Drivers is about that size, and it&#8217;s not all loaded anyway&#8221;. </p>
<p>The problem with microoptimization is that it takes resources from macro-optimizations. Elaborated kludgy schemes (like superfetch or however it&#8217;s called) can give the developers browny points, but in reality they are just made at an expense of simpler things.</p>
<p>For example, you want to save time to load kernel and drivers in int13 phase time. You could collect load statistics and other crap, while loading the drivers one by one. Or you could go through CurrentControlSetServices at once, open all driver binaries at once (to minimize head movement latency), and then load all binaries. If you want to get fancy, you could use FSCTL_GET_RETRIEVAL_POINTERS to sort the binary reading order for all those drivers.</p>
<p>If you get really fancy, you could get the OS prebuild the image of all boot-time drivers into a single file. This is error-prone, though.</p>
<p>For usermode executables, you could kludge those &#8220;optimal&#8221; prefetch schemes. Or you can take an advantage of having lots of memory, and just prefetch the whole executable (up to a reasonable limit, like 32 MB), by touching all its pages in linear fashion. If you get fancy, you could remember what other DLLs it links to, and pre-open them and pre-fetch (entirely) by touching the sections.</p>
<p>Of course, when mechinical storage eventually gives way to flash, these mechanical optimizations will be obsolete.</p>
<p>Obligatory complaint: Why it is when I plug an USB flash drive it always shows &#8220;Use this drive to speed up your system&#8221;? I&#8217;m not one of those 10 people using this feature. Can I make it go away?</p>
<div class=post>[<i>Aw-right, then, when people complain, I&#8217;ll tell them to talk to you. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>