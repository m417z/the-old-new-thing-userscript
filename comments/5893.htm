<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (25)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-1024743">
				<div id="div-comment-1024743" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">John</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20121207-00/?p=5893#comment-1024743">
			December 7, 2012 at 7:26 am</a>		</div>

		<blockquote><p>
  Each time one of these reports comes in, we have to perform the same evaluation to confirm that it really is an application directory attack and not a current directory attack. &nbsp;This means, among other things, repeating the test on every version of Windows, and every version of LitWare, and every combination of the two, just to make sure all the possibilities have been covered.
</p></blockquote>
<p>Today I learned how to perform a denial of service attack on Microsoft&#39;s security / testing group.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-alegrigoriev odd alt thread-odd thread-alt depth-1" id="comment-1024753">
				<div id="div-comment-1024753" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/alegr1' rel='external nofollow' class='url'>alegr1</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20121207-00/?p=5893#comment-1024753">
			December 7, 2012 at 7:51 am</a>		</div>

		<p>Why bother with placing a rogue DLL? Just replace the EXE, if you have write permissions to the directory.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1024763">
				<div id="div-comment-1024763" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">John Doe</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20121207-00/?p=5893#comment-1024763">
			December 7, 2012 at 7:59 am</a>		</div>

		<p>The Dynamic Link Library Search Order ( <a rel="nofollow" target="_new" href="http://msdn.microsoft.com/en-us/library/windows/desktop/ms682586(v=vs.85).aspx" rel="nofollow">msdn.microsoft.com/&#8230;/ms682586(v=vs.85).aspx</a> ) is the recommended reading material about this stuff.</p>
<p>The most interesting thing is that shell32.dll is a known DLL, so this situation is still strange.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1024773">
				<div id="div-comment-1024773" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Cesar</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20121207-00/?p=5893#comment-1024773">
			December 7, 2012 at 8:47 am</a>		</div>

		<p>As a (related) aside, what would be the set of magic calls you should do in your main() for new programs? I have come up with:</p>
<p>SetProcessDEPPolicy(PROCESS_DEP_ENABLE);</p>
<p>SetDllDirectoryW(L&quot;&quot;);</p>
<p>SetSearchPathMode(BASE_SEARCH_PATH_ENABLE_SAFE_SEARCHMODE | BASE_SEARCH_PATH_PERMANENT);</p>
<p>plus a RegisterApplicationRestart() before the main loop. (Of course, using GetProcAddress for all calls, so it will not break on Windows XP.)</p>
<p>The SetDllDirectoryW call would be the one which prevents the sort of vulnerability being discussed, since IIRC it removes the current directory from the search path.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1024783">
				<div id="div-comment-1024783" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Mark</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20121207-00/?p=5893#comment-1024783">
			December 7, 2012 at 9:06 am</a>		</div>

		<p>Why not ask the submitter: are you sure this is an X attack and not a Y attack? &nbsp;We&#39;ve tested this and can only reproduce it as a Y attack. &nbsp;Which version of Litware are you running?</p>
<p>That way the submitter can save you from doing all that work for nothing.</p>
<div class="post">[<em>A significant fraction of submitters wouldn&#39;t understand the difference between X and Y, so asking the question doesn&#39;t get you anywhere. Some submitters aren&#39;t really interested in solving the problem; they just want <a href="http://blogs.msdn.com/b/oldnewthing/archive/2012/11/27/10371823.aspx" rel="nofollow">street cred</a>. Or the submitter may say, &quot;Of course I know the difference between X and Y, and this is clearly an X. Man, what a bunch of idiots you guys are.&quot; And even if the submitter agrees that it&#39;s a Y, you still have the risk that there really was an X vulnerability, and then when it is finally discovered, the submitter will brag &quot;I reported this to Microsoft 2 years ago and they told me it wasn&#39;t a vulnerability.&quot; A lot of the job is PR. -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-bboorman odd alt thread-odd thread-alt depth-1" id="comment-1024793">
				<div id="div-comment-1024793" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Brian_EE' rel='external nofollow' class='url'>Brian_EE</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20121207-00/?p=5893#comment-1024793">
			December 7, 2012 at 9:17 am</a>		</div>

		<p>@Mark: What if the submitter doesn&#39;t reply to the request yet this turns out to be a real vulnerability? People would jump all over Microsoft for not investigating a reported attack vector.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1024813">
				<div id="div-comment-1024813" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">kog999</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20121207-00/?p=5893#comment-1024813">
			December 7, 2012 at 10:09 am</a>		</div>

		<p>i discovered a way to make this attack work even i do have not write permissions to the applications directory. I create a new folder in a location i have access to, such as my Desktop, i then copy the contents of the application folder to the folder on my desktop, replace shell32.dll since i have write access to that folder and run the application from this location! /Scarcasm</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-joe_woodbury odd alt thread-odd thread-alt depth-1" id="comment-1024823">
				<div id="div-comment-1024823" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/JoeWoodbury' rel='external nofollow' class='url'>JoeWoodbury</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20121207-00/?p=5893#comment-1024823">
			December 7, 2012 at 10:31 am</a>		</div>

		<p>This entirely ignores the fact that if you have administrative access to any computer, there is no security. In addition, the old rule of thumb was physical access means all access. This is generally true to this day.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1024843">
				<div id="div-comment-1024843" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Write access</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20121207-00/?p=5893#comment-1024843">
			December 7, 2012 at 11:22 am</a>		</div>

		<p>Just the other day I was thinking if it&#39;s less secure for a service to have its event log message format strings stored as resource for easier localization, or hardcoded in the code. I was saying to myself, well, if it&#39;s resource, then it&#39;s also easier for people to mess up and create buffer overflows; putting the format strings in the code at least saves some LoadString calls and keeps away those less determined. Several seconds later I concluded that it&#39;s free game to those who can modify the binary and forgot about it.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1024853">
				<div id="div-comment-1024853" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20121207-00/?p=5893#comment-1024853">
			December 7, 2012 at 12:04 pm</a>		</div>

		<p>@EricF: An awful lot of cross-platform software misbehaves like that only on Windows because the port framework is an old version that assumes Windows 9x rules. There&#39;s another one in particular that is doing that because it really wants to be setgid but can&#39;t be.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1024863">
				<div id="div-comment-1024863" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">voo</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20121207-00/?p=5893#comment-1024863">
			December 7, 2012 at 12:47 pm</a>		</div>

		<p>I&#39;m pretty sure you can still tell Office to install itself into a different folder (and really anything else isn&#39;t especially user-friendly) so I hope they don&#39;t rely on the implicit protection by Program Files but also make sure that the permissions are correctly set when installing anywhere else.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1024873">
				<div id="div-comment-1024873" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">laonianren</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20121207-00/?p=5893#comment-1024873">
			December 7, 2012 at 1:22 pm</a>		</div>

		<p>@Write access: Why would your service be reading event log message format strings? &nbsp;Event log messages are formatted when they are viewed.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1024883">
				<div id="div-comment-1024883" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Evan</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20121207-00/?p=5893#comment-1024883">
			December 7, 2012 at 1:48 pm</a>		</div>

		<p>I know of an unpatched vulnerability. If you find &quot;command prompt&quot; in the start menu, choose &quot;run as administrator&quot;, authenticate if necessary, and run &quot;del /s /q &quot;, you&#39;ll have destroyed your system! How can Micro$oft let such bugs be?</p>
<p>[Actually the funny thing is there&#39;s a chance this wouldn&#39;t even work, a la &#39;rm -rf /&#39; being blocked my many rm implementations. Not that I&#39;ve tried that either.]</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1024903">
				<div id="div-comment-1024903" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">JJJ</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20121207-00/?p=5893#comment-1024903">
			December 7, 2012 at 3:46 pm</a>		</div>

		<p>@Evan: &nbsp;That brings up another issue. &nbsp;All you have to do to get administrator access is click &#39;Yes&#39; on a UAC dialog. &nbsp;Surely that MUST be a security hole because really, what kind of attacker would click &quot;no&quot;?</p>
<p>oneone</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-paulcoddingtonhotmail-com even thread-even depth-1" id="comment-1024913">
				<div id="div-comment-1024913" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Paul+Coddington' rel='external nofollow' class='url'>Paul Coddington</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20121207-00/?p=5893#comment-1024913">
			December 7, 2012 at 5:24 pm</a>		</div>

		<p>This was a concern with earlier versions of Office which required write access on their program folder tree to enable the built-in Wizards to run.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1024803">
				<div id="div-comment-1024803" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">ErikF</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20121207-00/?p=5893#comment-1024803">
			December 7, 2012 at 9:49 am</a>		</div>

		<p>There is a program that I use that *still* insist on having world-writable shared data in their application directory! I&#39;ve mitigated the solution as much as I can for them by only giving the directories that need to be writable that access, but it&#39;s still a pain; how long has Windows had an &quot;All Users&quot; directory for? (This program in question is cross-platform, but still the issue remains: how many admins have their /usr and /opt directories world-writable?)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1024923">
				<div id="div-comment-1024923" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">ErikF</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20121207-00/?p=5893#comment-1024923">
			December 8, 2012 at 1:39 am</a>		</div>

		<p>@Evan: It probably wouldn&#39;t work as well as the Unix version because of the way that Windows handles files in use. Unix will generally allow you to delete in-use files, whereas Windows won&#39;t. Yes, I have been bitten by this when I accidentally deleted &quot;busybox&quot; while in recovery mode on a Unix box; what fun I had trying to get that system running again!</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1024933">
				<div id="div-comment-1024933" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">David Maas</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20121207-00/?p=5893#comment-1024933">
			December 8, 2012 at 2:36 am</a>		</div>

		<p>@ErikF</p>
<p>Except Windows isn&#39;t using everything important all the time. You&#39;d still really mess up the system.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-ricardog even thread-even depth-1" id="comment-1024943">
				<div id="div-comment-1024943" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/RicarDog' rel='external nofollow' class='url'>RicarDog</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20121207-00/?p=5893#comment-1024943">
			December 8, 2012 at 9:20 am</a>		</div>

		<p>I&#39;m a bit confused regarding the recommended place to install DLLs. The guidelines article (<a rel="nofollow" target="_new" href="http://msdn.microsoft.com/en-us/library/ms997548.aspx" rel="nofollow">msdn.microsoft.com/&#8230;/ms997548.aspx</a>) suggests creating a System folder under the application folder and then adding it to the App Paths registry key. However, the DLL search order article (<a rel="nofollow" target="_new" href="http://msdn.microsoft.com/en-us/library/windows/desktop/ms682586(v=vs.85).aspx" rel="nofollow">msdn.microsoft.com/&#8230;/ms682586(v=vs.85).aspx</a>) says that Apps Path is not used when computing the DLL search path. So, should we ignore the guidelines and put all DLLs under the application folder?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1024953">
				<div id="div-comment-1024953" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Harry Johnston</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20121207-00/?p=5893#comment-1024953">
			December 9, 2012 at 1:04 pm</a>		</div>

		<p>@RicarDog: it is preferable not to use the DLL search order at all. &nbsp;Instead, look up your entry in the App Paths registry key and use it to constuct the full path to the DLL. &nbsp;You can then load the DLL with an explicit path.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1025073">
				<div id="div-comment-1025073" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Evan</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20121207-00/?p=5893#comment-1025073">
			December 10, 2012 at 9:04 am</a>		</div>

		<p>@JJJ: &quot;All you have to do to get administrator access is click &#39;Yes&#39; on a UAC dialog. &nbsp;Surely that MUST be a security hole because really, what kind of attacker would click &quot;no&quot;?&quot;</p>
<p>If you&#39;re serious, you&#39;re confusing a malicious user with a malicious program. 99% of the time it&#39;s the latter that&#39;s the problem, not the former. (For the same reason, &quot;physical access is game over&quot; is also irrelevant 99% of the time.) The whole point of the secure desktop that the UAC uses is that only the *user* him/herself can respond &#8212; programs can&#39;t emulate clicks. So if someone in OVERSEAS_COUNTRY wants to take over my computer, he&#39;ll need my &quot;consent&quot;.</p>
<p>(Of course, that&#39;s ignoring whether the &quot;make this dialog go away!&quot; reaction really counts as consent. UAC is a small step in the right direction, but only a small step; it&#39;s a VERY difficult problem to solve well.)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1025423">
				<div id="div-comment-1025423" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Evan</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20121207-00/?p=5893#comment-1025423">
			December 11, 2012 at 7:58 am</a>		</div>

		<p>Also reading JJJ&#39;s comment again I think I&#39;m dumb.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1025473">
				<div id="div-comment-1025473" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20121207-00/?p=5893#comment-1025473">
			December 11, 2012 at 9:25 am</a>		</div>

		<p>@Harry Johnston: My preferred way to do it is to assemble the app path from my own executable&#39;s path.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1025783">
				<div id="div-comment-1025783" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Steve</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20121207-00/?p=5893#comment-1025783">
			December 13, 2012 at 3:32 am</a>		</div>

		<p>Does this mean I need to make sure there are no rogue dlls in my Downloads folder when running .exe installers?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1026033">
				<div id="div-comment-1026033" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">ender</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20121207-00/?p=5893#comment-1026033">
			December 14, 2012 at 12:45 am</a>		</div>

		<p>@Steve: yes, and also make sure there isn&#39;t a msiexec.exe in your Downloads folder either.</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>