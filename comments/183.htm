<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (26)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-1145703">
				<div id="div-comment-1145703" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140821-00/?p=183#comment-1145703">
			August 21, 2014 at 7:08 am</a>		</div>

		<p>1. Don&#39;t screw around in DllMain.</p>
<p>2. Don&#39;t call shell functions for automatic file operations. Shell plugins from non-GUI threads hate your guts.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1145713">
				<div id="div-comment-1145713" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Mark</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140821-00/?p=183#comment-1145713">
			August 21, 2014 at 7:24 am</a>		</div>

		<p>Joshua: suggestion 2 is nonsense. That&#39;s not the conclusion to make from this article.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-wndsks even thread-even depth-1" id="comment-1145723">
				<div id="div-comment-1145723" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/skSdnW' rel='external nofollow' class='url'>skSdnW</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140821-00/?p=183#comment-1145723">
			August 21, 2014 at 7:40 am</a>		</div>

		<p>Why did these extensions even need to call Co­Initialize in the first place? COM should already be initialized by the host process before calling Co­Create­Instance to load the extension (Unless they are running on Win95 and the extension is registered to run without COM).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1145733">
				<div id="div-comment-1145733" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140821-00/?p=183#comment-1145733">
			August 21, 2014 at 8:40 am</a>		</div>

		<p>@Mark: I take it you&#39;ve never had a window open on the service session because some shell plugin decided it wanted to prompt about something.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1145753">
				<div id="div-comment-1145753" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Jim Lyon</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140821-00/?p=183#comment-1145753">
			August 21, 2014 at 8:49 am</a>		</div>

		<p>1. Don&#39;t screw around in DllMain.</p>
<p>2. Don&#39;t call CoInitialize / CoUninitialize on any thread that you don&#39;t own.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1145763">
				<div id="div-comment-1145763" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Mark</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140821-00/?p=183#comment-1145763">
			August 21, 2014 at 10:51 am</a>		</div>

		<p>Joshua: the answer&#39;s in the post &#8211; FOFX_NO­COPY­HOOKS.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1145773">
				<div id="div-comment-1145773" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">MV</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140821-00/?p=183#comment-1145773">
			August 21, 2014 at 11:10 am</a>		</div>

		<p>The funny thing is, I&#39;ve never in my life had any reason (that I know of) to implement a DllMain at all &#8211; literally not even once. I like to keep things simple, which means I avoid COM like the plague, so that&#39;s probably part of it. &nbsp;The more of these articles I read, the more convinced I am that avoiding COM is the right thing to do.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1145783">
				<div id="div-comment-1145783" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Roger</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140821-00/?p=183#comment-1145783">
			August 21, 2014 at 11:31 am</a>		</div>

		<p>In older times there were checked builds of Windows where developers could in theory find out about problems in their apps. &nbsp;What is the current best practise for this sort of thing? &nbsp;It looks like checked builds no longer happen, not that too many used them anyway. &nbsp;The Windows Application Verifier also seems to not be too current. &nbsp;Would it have caught this issue?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1145793">
				<div id="div-comment-1145793" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140821-00/?p=183#comment-1145793">
			August 21, 2014 at 12:22 pm</a>		</div>

		<p>@MV: The only thing I&#39;ve needed to do is save HINSTANCE or possibly allocate a DLL heap if GetProcessHeap() was unsuitable for some reason.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1145803">
				<div id="div-comment-1145803" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Behodar</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140821-00/?p=183#comment-1145803">
			August 21, 2014 at 2:36 pm</a>		</div>

		<p>@Roger: There are still checked builds in MSDN Subscriber Downloads.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1145813">
				<div id="div-comment-1145813" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ben Voigt</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140821-00/?p=183#comment-1145813">
			August 21, 2014 at 2:45 pm</a>		</div>

		<p>@MV, I suspect you mean you&#39;ve never written a fake DllMain. &nbsp;Almost certainly your toolchain implements the real DLL entry-point (which has no name; it&#39;s identified by its address stored in the PE header), which in addition to calling the function having the name DllMain which you chose not to provide, also performs construction and initialization of global variables.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1145743">
				<div id="div-comment-1145743" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Mark S</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140821-00/?p=183#comment-1145743">
			August 21, 2014 at 8:47 am</a>		</div>

		<p>As a primarily managed-code developer who has nonetheless read this blog for many years and seen lots of &quot;what *not* to do in DllMain&quot;, I&#39;d like to ask: broadly speaking, what kinds of things *is* it appropriate to do in DllMain?</p>
<div class="post">[<em>Initialize critical sections, allocate TLS slots, allocate memory, that&#39;s about it. -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-cheong even thread-even depth-1" id="comment-1145843">
				<div id="div-comment-1145843" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/cheong00' rel='external nofollow' class='url'>cheong00</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140821-00/?p=183#comment-1145843">
			August 21, 2014 at 7:34 pm</a>		</div>

		<p>@MV: Completely agrees that when writing small tools, static linking makes more sense than dynamic linking.</p>
<p>However, talking about &quot;not linked to .NET runtimes in order to avoid DLL hell&quot; as advantage is silly, it sounds as if you don&#39;t want to call Windows system DLL altogether.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-alegrigoriev odd alt thread-odd thread-alt depth-1" id="comment-1145853">
				<div id="div-comment-1145853" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/alegr1' rel='external nofollow' class='url'>alegr1</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140821-00/?p=183#comment-1145853">
			August 21, 2014 at 8:45 pm</a>		</div>

		<p>@Harry:</p>
<p>Creating a thread is not a problem. Properly shutting it down is.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1145823">
				<div id="div-comment-1145823" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">MV</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140821-00/?p=183#comment-1145823">
			August 21, 2014 at 3:34 pm</a>		</div>

		<p>@Ben, yes, I&#39;m sure you&#39;re right. &nbsp;I&#39;m mostly talking C++, so there&#39;s definitely some initialization that has to happen when the DLL is loaded. But the toolchain handles that &#8211; and handles it correctly every time with zero effort from me, like a good toolchain should (OK, there&#39;s the order of global initialization problem, but that&#39;s not specific to DLLs, it happens just as much with EXEs). &nbsp;But there&#39;s never been anything that *I* wanted to do when one of my DLLs was being loaded or unloaded.</p>
<p>Actually, the last major project I designed, we avoided DLLs completely &#8211; we just compiled the common stuff into LIBs and then linked them directly into the EXEs. &nbsp;Sure, the EXEs were consuming excess disk space, and excess physical memory (because the common code couldn&#39;t be shared between two processes like DLLs can), but all of my EXEs together were smaller than the .NET runtime, so who cares? &nbsp;And it was *SO* worth it to stay completely out of DLL hell!</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-harry-johnston odd alt thread-odd thread-alt depth-1" id="comment-1145833">
				<div id="div-comment-1145833" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Harry+Johnston' rel='external nofollow' class='url'>Harry Johnston</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140821-00/?p=183#comment-1145833">
			August 21, 2014 at 7:22 pm</a>		</div>

		<p>In rare cases you might also want to create a thread. &nbsp;(Which *is* safe, provided you remember that the thread won&#39;t start until DllMain has exited.)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1145873">
				<div id="div-comment-1145873" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Neil</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140821-00/?p=183#comment-1145873">
			August 22, 2014 at 3:41 am</a>		</div>

		<p>@Ben Voigt The default CRT entry point does have a name, otherwise the linker wouldn&#39;t know where it was. The default name is chosen by the linker, but you can override it with /ENTRY (or /NOENTRY for a resource-only DLL).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1145883">
				<div id="div-comment-1145883" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">MV</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140821-00/?p=183#comment-1145883">
			August 22, 2014 at 7:12 am</a>		</div>

		<p>@cheong00: it was a pure C++ app (the architecture of which was cloned from a prior app which predates .NET and is still running strong), so there was really no need for .NET at all. &nbsp;Most of the EXEs were 10-20MB, and they had ZERO dependencies &#8211; just drop the EXEs onto any pc running Win2K or higher, and they&#39;d work. </p>
<p>Every. Single. Time. &nbsp;No code changes when Vista came out. &nbsp;None for 7. &nbsp;None for 8. &nbsp;It was SOOOO nice.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1145943">
				<div id="div-comment-1145943" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">John Doe</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140821-00/?p=183#comment-1145943">
			August 22, 2014 at 8:33 am</a>		</div>

		<p>@MV, that sounds exactly like a huge Hello World to me.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1145973">
				<div id="div-comment-1145973" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Gabe</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140821-00/?p=183#comment-1145973">
			August 22, 2014 at 9:30 am</a>		</div>

		<p>It sounds like DllMain is a lot like Unix signal handlers in this respect: It&#39;s a very attractive place to put fancy code yet there is very little that you can do safely. Since so few people understand that, they write all kinds of unsafe things in their DllMain (like invoke COM) or signal handlers (like allocate memory). And they get away with it too, because the race windows are so hard to hit.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1146023">
				<div id="div-comment-1146023" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Marcel</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140821-00/?p=183#comment-1146023">
			August 22, 2014 at 11:20 am</a>		</div>

		<p>@Cesar: <a rel="nofollow" target="_new" href="http://www.microsoft.com/whdc/driver/kernel/DLL_bestprac.mspx">http://www.microsoft.com/&#8230;/DLL_bestprac.mspx</a></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1146003">
				<div id="div-comment-1146003" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Cesar</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140821-00/?p=183#comment-1146003">
			August 22, 2014 at 10:34 am</a>		</div>

		<p>@Raymond: It would be *great* if there was a precise list of &quot;safe to call in DllMain&quot; Win32 API functions. That would make things simple: if you are calling anything else in your DllMain, you are wrong.</p>
<p>@MV: One useful thing to do in a DllMain: DisableThreadLibraryCalls(). Makes every CreateThread() in the whole process faster.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1146153">
				<div id="div-comment-1146153" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Azarien</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140821-00/?p=183#comment-1146153">
			August 23, 2014 at 7:18 am</a>		</div>

		<p>0. don&#39;t use DllMain. It&#39;s borken beyond repair and you never know if your DllMain breaks one of gazillion DllMain don&#39;ts.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1146213">
				<div id="div-comment-1146213" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Riggs</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140821-00/?p=183#comment-1146213">
			August 24, 2014 at 10:20 pm</a>		</div>

		<p><!-- p>I wonder what is this shell extension that led to a deadlock in explorer.exe? I have received a deadlock in explorer with the June's Windows 8.1 updates :) OneDrive?


<p>Regarding DllMain, I think if you need some extra initialization, it&#39;s better to create a thread from DllMain and save its handle to a global variable, and then kill the thread on DLL_PROCESS_DETACH. That&#39;s fairly enough.</p>


</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1146323">
				<div id="div-comment-1146323" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Kevin Eshbach</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140821-00/?p=183#comment-1146323">
			August 25, 2014 at 12:26 pm</a>		</div>

		<p>@Mark S </p>
<p>Use the DisableThreadLibraryCalls function.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1146643">
				<div id="div-comment-1146643" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">John Doe</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140821-00/?p=183#comment-1146643">
			August 27, 2014 at 5:08 pm</a>		</div>

		<p>@Riggs, the problem is that the other thread will be running your DLL&#39;s code, how do you kill it? &nbsp;TerminateThread will leave some things in an inconsistent state, and signaling the thread and waiting for it to exit is prone to deadlocking with the dreaded loader lock (or whatever it actually is).</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>