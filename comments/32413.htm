<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (6)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-342733">
				<div id="div-comment-342733" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://msmvps.com/alunj' rel='external nofollow' class='url'>Alun Jones</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060202-00/?p=32413#comment-342733">
			February 2, 2006 at 12:09 pm</a>		</div>

		<p>I&#8217;ve recommended for a long time that if you want to know &quot;do I have X access to Y resource&quot;, you simply try to do X to Y.  [Note &#8211; this is valid advice for software development, not for relationships!]</p>
<p>There are a couple of caveats &#8211; sometimes a user wants to see a list of access rights, and you would like to enumerate them for display &#8211; so go ahead and enumerate what AccessCheck tells you, but <em>don&#8217;t</em> use that as a basis to prevent a user trying to access a file if he thinks he has that access.</p>
<p>The second caveat is that this behaviour, of actually trying to access a resource, rather than first determining that you have access, may lead to audit logs noting a failed security event.  Beginner admins often troll through the list of failed accesses, and intuit that they have discovered a hacker.  That&#8217;s not reason to change your software&#8217;s behaviour &#8211; it&#8217;s reason for the admin to get an education.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-342743">
				<div id="div-comment-342743" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Reinder</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060202-00/?p=32413#comment-342743">
			February 2, 2006 at 1:14 pm</a>		</div>

		<p>I would hope/assume that the system has some way to prevent forgery of security access descriptors. Couldn&#8217;t the system use that same mechanism to return a meaningful error (&#8216;descriptor not valid on this machine&#8217;) when someone passes a descriptor from a different machine?<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-342753">
				<div id="div-comment-342753" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://botanicus.net/dw/' rel='external nofollow' class='url'>David Wilson</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060202-00/?p=32413#comment-342753">
			February 2, 2006 at 3:16 pm</a>		</div>

		<p>Is there some way to do the equivalent of AccessCheck() in a cross-machine-friendly way, assuming ForceGuest is disabled? I was thinking of the problem that Alun Jones raised.</p>
<p>Side thought: when ForceGuest is enabled, do the client and server perform a login handshake, the result of which is then ignored? If that is so, then surely ForceGuest causes the server to run out of spec for the SMB protocol.</p>
<p>If it is not true, then why would the client think it was authenticated when it were not? Surely it would assume the Guest SID for the connection until a handshake were successfully completed.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-342783">
				<div id="div-comment-342783" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">bmm6o</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060202-00/?p=32413#comment-342783">
			February 2, 2006 at 7:50 pm</a>		</div>

		<p>It can make for a much better user experience to alter the interface based on what the user is allowed to do right now.</p>
<p>As you explain, this can be difficult/impossible to implement without the cooperation of the module that&#8217;s going to be enforcing the rules.  But in some domains (e.g. most web applications, many client-server applications) it&#8217;s standard.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-dean-harding even thread-even depth-1" id="comment-342793">
				<div id="div-comment-342793" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Dean+Harding' rel='external nofollow' class='url'>Dean Harding</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060202-00/?p=32413#comment-342793">
			February 2, 2006 at 8:05 pm</a>		</div>

		<blockquote><p>
  It can make for a much better user experience to alter the<br />
  <br />&gt; interface based on what the user is allowed to do right now.</p>
<p>But that&#8217;s not what we&#8217;re talking about. People are asking for &quot;advanced&quot; vs. &quot;novice&quot; user interfaces. You can still &quot;do&quot; everything the advanced user interface can do, but it&#8217;s just not presented in the UI.</p>
<p>Kind of like the difference between &quot;Simple&quot; file sharing and old-style file sharing, where the functionality is the same underneath, but you just provide a simpler UI for the &quot;novice&quot; users.
</p></blockquote>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-343003">
				<div id="div-comment-343003" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">bmm6o</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060202-00/?p=32413#comment-343003">
			February 3, 2006 at 5:16 pm</a>		</div>

		<p>&gt; People are asking for &quot;advanced&quot; vs. &quot;novice&quot; user interfaces</p>
<p>If you hadn&#8217;t quoted my post, I don&#8217;t think I would have realized that you were responding to what I wrote.  Which people are you talking about?</p>
<p>Maybe I wasn&#8217;t clear, but I was saying that although Raymond&#8217;s conclusion of &quot;you&#8217;re usually much better off just trying to access [the resource]&quot; is *in general* the best that you can do, the user experience leaves something to be desired.  If the operation fails because the user isn&#8217;t sufficiently privileged, the user can be left with the reaction of &quot;if that wasn&#8217;t going to work, why did you let me try&quot; (to e.g. delete that resource, view that resource).  It&#8217;s true that it&#8217;s an attitude more likely to be held by a novice user, if that&#8217;s what you&#8217;re getting at.</p>
<p>Also, I&#8217;m not really talking about UI that is simplified in any significant way, just one that lacks options that *predictably* result in &quot;access denied&quot; or &quot;operation not allowed&quot; messages.</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>