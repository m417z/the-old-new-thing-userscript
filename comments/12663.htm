<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (22)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-864683">
				<div id="div-comment-864683" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Anonymous</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101001-00/?p=12663#comment-864683">
			October 1, 2010 at 7:28 am</a>		</div>

		<p>The API they ended with is what the API should have been since the beginning &#8211; no magic values selecting a different magic meaning, and each function doing just one thing.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-864703">
				<div id="div-comment-864703" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Henning Makholm</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101001-00/?p=12663#comment-864703">
			October 1, 2010 at 8:01 am</a>		</div>

		<p>&quot;Why did I use __declspec(deprecated) instead of #pragma deprecated(SetTimer)?&quot;</p>
<p>Not being psychic, I can only guess: It must have something to do with the fact that __declspec is much better suited for preprocessor tricks that you might need in order to push the code through different compilers, analysis tools, and the like.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-864713">
				<div id="div-comment-864713" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Saveddijon</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101001-00/?p=12663#comment-864713">
			October 1, 2010 at 8:06 am</a>		</div>

		<p>What I&#39;d like to know: given the application in question, would it be reasonable for a user to hold down the F2 key for an entire minute? How was this even discovered? (Perhaps it is reasonable; I don&#39;t know what this application is, or what it does. If it&#39;s a racing car game where F2 maps to the gas pedal then maybe it&#39;s very reasonable to have it pressed for a full minute.)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-864753">
				<div id="div-comment-864753" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Chris Taylor</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101001-00/?p=12663#comment-864753">
			October 1, 2010 at 8:30 am</a>		</div>

		<p>&quot;Why did I use __declspec(deprecated) instead of #pragma deprecated(SetTimer)&quot;</p>
<p>I prefer the using __declspec(deprecated) because you have the option to provide a message to the developer informing them of the alternate API functions. But it does not seem that you are taking advantage of that in this case.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-864763">
				<div id="div-comment-864763" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Chris Taylor</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101001-00/?p=12663#comment-864763">
			October 1, 2010 at 8:34 am</a>		</div>

		<p>Ah, it just came to me. Using the pragma would mark all overloads deprecated which might be a problem if other libraries or utility functions provide a function with the same name but different signature.</p>
<div class="post">[<i>True, but there&#39;s another reason which is probably more likely&#8230; -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-864813">
				<div id="div-comment-864813" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">A Guy Somewhere Cold</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101001-00/?p=12663#comment-864813">
			October 1, 2010 at 8:54 am</a>		</div>

		<p>@Saveddjion: Thorough application testing means not only testing the expected code paths, but the unexpected ones. Users can do some really bizarre things for reasons you might never have expected, and I think it would be rather arrogant to suggest that a given bug is a user&#39;s fault because they were using the application wrong.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-864853">
				<div id="div-comment-864853" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Kujo</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101001-00/?p=12663#comment-864853">
			October 1, 2010 at 9:20 am</a>		</div>

		<p>The pragma doesn&#39;t care about type or scope, so referencing Foo::SetTimer() or enum { SetTimer } will be considered deprecated.</p>
<div class="post">[<i>That&#39;s what I was looking for. A lot of classes have a method called SetTimer. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-864883">
				<div id="div-comment-864883" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Anonymous</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101001-00/?p=12663#comment-864883">
			October 1, 2010 at 9:50 am</a>		</div>

		<p>It&#39;s over 9000&#8230;!</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-864893">
				<div id="div-comment-864893" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">PhiSmi</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101001-00/?p=12663#comment-864893">
			October 1, 2010 at 10:33 am</a>		</div>

		<p>The F2 for a whole minute is not very relevant. Every F2 press/repeat is going to leak a timer resource. It just took a minute to exhaust them all. Don&#39;t get distracted by how the problem was discovered; the problem is valid and ought to be resolved. If the application ran for a long time the F2 will eventually be pressed enough times.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-864903">
				<div id="div-comment-864903" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Timothy Byrd</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101001-00/?p=12663#comment-864903">
			October 1, 2010 at 11:10 am</a>		</div>

		<p>PhiSmi&#39;s answer is better, but I was going to say that having the corner of a book or notebook accidentally hold a key down is not unheard of in my experience.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-864963">
				<div id="div-comment-864963" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">asf</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101001-00/?p=12663#comment-864963">
			October 1, 2010 at 2:55 pm</a>		</div>

		<p>Why no IsWindow in the assert?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-dwalker-wk odd alt thread-odd thread-alt depth-1" id="comment-864823">
				<div id="div-comment-864823" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/DWalker' rel='external nofollow' class='url'>DWalker</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101001-00/?p=12663#comment-864823">
			October 1, 2010 at 8:56 am</a>		</div>

		<p>Don&#39;t press and hold the F2 key for a whole minute! &nbsp;(Although it might be appropriate, in the context of the program.)</p>
<p>Doctor, it hurts when I do *this*. &nbsp;&quot;Then, don&#39;t do that.&quot;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-dwalker-wk even thread-even depth-1" id="comment-864983">
				<div id="div-comment-864983" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/DWalker' rel='external nofollow' class='url'>DWalker</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101001-00/?p=12663#comment-864983">
			October 1, 2010 at 4:03 pm</a>		</div>

		<p>Ah, yes, a book on the keyboard could certainly cause that problem. &nbsp;Or a cat, which happens at my house often enough. &nbsp;Once, our cat bought an expensive piece of art from EBay. &nbsp;My partner learned not to leave the screen up with the &quot;buy now&quot; button visible and leave the computer.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-864993">
				<div id="div-comment-864993" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Dave</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101001-00/?p=12663#comment-864993">
			October 2, 2010 at 3:25 am</a>		</div>

		<blockquote><p>
  Code analysis tools can use this information to attempt to identify potential defects.
</p></blockquote>
<p>Unfortunately PREfast&#39;s ability to detect use of NULL pointers isn&#39;t very good, and conversly it produces large numbers of false positives for these, so I wouldn&#39;t rely on this.</p>
<blockquote><p>
  assert(hWnd != NULL);
</p></blockquote>
<p>&#8230; which will only work in the non-release version of the code, thus making it anything from &quot;completely useless&quot; through to &quot;only marginally effective&quot;.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-865003">
				<div id="div-comment-865003" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Neil</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101001-00/?p=12663#comment-865003">
			October 2, 2010 at 3:31 am</a>		</div>

		<p>(In the rare case that we actually want a thread timer, we&#39;ll have a second wrapper function called SetThreadTimer.)</p>
<p>SetThreadTimer will still need the nIDEvent parameter in case you need to reset an existing timer. (Or create a ResetThreadTimer wrapper&#8230;)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-865033">
				<div id="div-comment-865033" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Mark Steward</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101001-00/?p=12663#comment-865033">
			October 2, 2010 at 11:56 am</a>		</div>

		<p>Dave: why on earth would you turn a resource leak into a fatal error on a release product? &nbsp;If passing a null value will cause serious problems during normal usage, don&#39;t use an assert.</p>
<p>asf: IsWindow is not thread safe, and you&#39;re more likely to pass a valid (but wrong) handle than a non-existent one. &nbsp;At best, you&#39;d catch a corrupt variable just before SetTimer does.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-865273">
				<div id="div-comment-865273" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Gabe</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101001-00/?p=12663#comment-865273">
			October 4, 2010 at 9:36 am</a>		</div>

		<p>While it&#39;s certainly an interesting question as to how they discovered that holding down F2 for a minute makes the app stop working , you really have to ask why nobody noticed that the timer wasn&#39;t working! I&#39;m sure the test plan is much more likely to include &quot;Press F2. Verify that X happens after Y seconds.&quot; than &quot;Hold down F2 for 1 minute. Verify app still works.&quot;!</p>
<div class="post">[<i>My guess (total guess) is that the &quot;set up the F2 timer&quot; function was called a second redundant time, at which point the handle was valid and the timer ran as expected. The only consequence was the leaked timer from the first call. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-866053">
				<div id="div-comment-866053" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Tergiver</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101001-00/?p=12663#comment-866053">
			October 6, 2010 at 5:08 pm</a>		</div>

		<p>The other flaw that is missed in the analysis is that the developer used the WM_KEYDOWN event to trigger an action (which is subject to repeat), rather than WM_KEYUP which is the &#39;more correct&#39; choice. Mouse/Key down is for predicate to an action (e.g. selection), up is where actions should trigger.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-866083">
				<div id="div-comment-866083" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Gabe</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101001-00/?p=12663#comment-866083">
			October 6, 2010 at 11:41 pm</a>		</div>

		<p>Tergiver: I can&#39;t think of any key action that triggers on WM_KEYUP instead of WM_KEYDOWN. Can you name some?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-866153">
				<div id="div-comment-866153" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Tergiver</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101001-00/?p=12663#comment-866153">
			October 7, 2010 at 7:36 am</a>		</div>

		<p>Frankly, I think most programmers simply get it wrong. The only case that comes easily to mind where it is correct is Shift+F10 (or the context menu key). Of course this only works correctly if the programmer responds to WM_CONTEXTMENU instead of WM_RBUTTONUP (or if you&#39;re really green you think it should be WM_RBUTTONDOWN). WM_CONTEXTMENU is fired on WM_KEYUP (I believe TranslateMessage does the job of sending WM_CONTEXTMENU).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-gregm even thread-even depth-1" id="comment-866243">
				<div id="div-comment-866243" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/GregM' rel='external nofollow' class='url'>GregM</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101001-00/?p=12663#comment-866243">
			October 7, 2010 at 10:39 am</a>		</div>

		<p>Tergiver, it&#39;s only &quot;wrong&quot; if you don&#39;t want key repeat to trigger the action multiple times.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-866253">
				<div id="div-comment-866253" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Tergiver</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101001-00/?p=12663#comment-866253">
			October 7, 2010 at 10:55 am</a>		</div>

		<p>Which is what I said the first time: &quot;trigger an action (which is subject to repeat)&quot;</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>