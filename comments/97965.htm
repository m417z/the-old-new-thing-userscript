<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (30)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment byuser comment-author-bboorman even thread-even depth-1 parent" id="comment-1323815">
				<div id="div-comment-1323815" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Brian_EE' rel='external nofollow' class='url'>Brian_EE</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180205-00/?p=97965#comment-1323815">
			February 5, 2018 at 7:49 am</a>		</div>

		<p>[quote]Should I suggest to the developer that they check if Starbucks is hiring? [/quote]<br />
No. The comment was clearly if you needed a million icons on the desktop. Not if he made a coding error.</p>

		
				</div>
		<ol class="children">
		<li class="comment odd alt depth-2 parent" id="comment-1323875">
				<div id="div-comment-1323875" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Stefan Kanthak</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180205-00/?p=97965#comment-1323875">
			February 5, 2018 at 10:01 am</a>		</div>

		<p>He also gets an malus point for abusing ARRAYSIZE(L&#8221;&#8221;) instead of sizeof(&#8220;&#8221;)</p>

		
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-oldnewthing bypostauthor even depth-3 parent" id="comment-1323915">
				<div id="div-comment-1323915" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Raymond+Chen+-+MSFT' rel='external nofollow' class='url'>Raymond Chen - MSFT</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180205-00/?p=97965#comment-1323915">
			February 5, 2018 at 10:20 am</a>		</div>

		<p>But the output is a Unicode string, so we should measure the Unicode string. The string lengths of ANSI and Unicode strings need not be equal.</p>

		
				</div>
		<ol class="children">
		<li class="comment odd alt depth-4 parent" id="comment-1324585">
				<div id="div-comment-1324585" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Stefan Kanthak</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180205-00/?p=97965#comment-1324585">
			February 12, 2018 at 7:59 am</a>		</div>

		<p>The <b>constant</b> string he used to let the compiler evakuate the length but holds only ASCII characters, ie. no character which occupies more than a single code point.<br />
JFTR: if the routine to interpret the format string would emit more than single code point for some characters <b>both</b> variants were susceptible to buffer overflows.</p>

		
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-oldnewthing bypostauthor even depth-5" id="comment-1324595">
				<div id="div-comment-1324595" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Raymond+Chen+-+MSFT' rel='external nofollow' class='url'>Raymond Chen - MSFT</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180205-00/?p=97965#comment-1324595">
			February 12, 2018 at 8:05 am</a>		</div>

		<p>It holds only ASCII characters today, but maybe not tomorrow.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment odd alt depth-2" id="comment-1323905">
				<div id="div-comment-1323905" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">D</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180205-00/?p=97965#comment-1323905">
			February 5, 2018 at 10:19 am</a>		</div>

		<p>Thank you for your sane comment. Too often people are lost in language over function.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment even thread-odd thread-alt depth-1" id="comment-1323835">
				<div id="div-comment-1323835" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">haha</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180205-00/?p=97965#comment-1323835">
			February 5, 2018 at 8:49 am</a>		</div>

		<p>If he becomes a barista, he can make my coffee order wrong like he did with the code. ;)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-even depth-1 parent" id="comment-1323845">
				<div id="div-comment-1323845" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://adamrosenfield.com' rel='external nofollow' class='url'>Adam Rosenfield</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180205-00/?p=97965#comment-1323845">
			February 5, 2018 at 9:21 am</a>		</div>

		<p>Not even %7.3f is fixed width.  Large inputs like 1e10 will give you outputs like &#8220;10000000000.000&#8221;.</p>

		
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-oldnewthing bypostauthor even depth-2 parent" id="comment-1323935">
				<div id="div-comment-1323935" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Raymond+Chen+-+MSFT' rel='external nofollow' class='url'>Raymond Chen - MSFT</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180205-00/?p=97965#comment-1323935">
			February 5, 2018 at 10:21 am</a>		</div>

		<p>If the input is 1e10, then it&#8217;s time to become a barista.</p>

		
				</div>
		<ol class="children">
		<li class="comment odd alt depth-3" id="comment-1323995">
				<div id="div-comment-1323995" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://nbtparse.org' rel='external nofollow' class='url'>Kevin</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180205-00/?p=97965#comment-1323995">
			February 5, 2018 at 10:59 am</a>		</div>

		<p>Or just round to &#8220;inf&#8221;.  IEE-754 binary16 (half-precision) does it on numbers far smaller than 1e10, if you&#8217;re unfortunate enough to be using 16-bit floating point numbers.  However, while the C standard&#8217;s definition of floating point is notoriously lax, I think it does define a minimum range larger than this, so your compiler isn&#8217;t allowed to just silently shrink all of your floats out from under you.  That&#8217;s probably a Good Thing.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment even thread-odd thread-alt depth-1 parent" id="comment-1323855">
				<div id="div-comment-1323855" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://baltasarq.info/' rel='external nofollow' class='url'>Baltasar</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180205-00/?p=97965#comment-1323855">
			February 5, 2018 at 9:23 am</a>		</div>

		<p>The first error is clear enough: the field width info should be in-between the &#8216;%&#8217; and the &#8216;f&#8217;. I guess it was some kind of typo. The second one is very widespread: many people think that the number left of the dot is the number of positions of the integral part of the number, while it is the total width, inluding the dot itself.</p>

		
				</div>
		<ol class="children">
		<li class="comment odd alt depth-2" id="comment-1324125">
				<div id="div-comment-1324125" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Marcos Kirchner</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180205-00/?p=97965#comment-1324125">
			February 6, 2018 at 3:42 am</a>		</div>

		<p>Funny how that happens a lot in the database world as well. DECIMAL(5, 2) means five digit precision in total, of which two are after the decimal. People tend to confuse with 5+2 digits.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1 parent" id="comment-1323865">
				<div id="div-comment-1323865" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180205-00/?p=97965#comment-1323865">
			February 5, 2018 at 9:27 am</a>		</div>

		<p>I really hope the programmer was female, because otherwise we can stack a grammar error on top of the format string error.</p>

		
				</div>
		<ol class="children">
		<li class="comment odd alt depth-2" id="comment-1323965">
				<div id="div-comment-1323965" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">AP</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180205-00/?p=97965#comment-1323965">
			February 5, 2018 at 10:41 am</a>		</div>

		<p>What&#8217;s the grammar error? There&#8217;s no such thing as a &#8220;baristo,&#8221; if that&#8217;s what you mean.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even depth-2" id="comment-1323975">
				<div id="div-comment-1323975" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://english.rejbrand.se' rel='external nofollow' class='url'>Andreas Rejbrand</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180205-00/?p=97965#comment-1323975">
			February 5, 2018 at 10:53 am</a>		</div>

		<p>Why? Surely you don&#8217;t think that a barista has to be female?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt depth-2" id="comment-1323985">
				<div id="div-comment-1323985" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">ksenzee</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180205-00/?p=97965#comment-1323985">
			February 5, 2018 at 10:55 am</a>		</div>

		<p>-ista is gender-neutral. <a href="https://www.thoughtco.com/words-that-break-the-gender-rule-3078133" rel="nofollow">https://www.thoughtco.com/words-that-break-the-gender-rule-3078133</a></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even depth-2" id="comment-1324015">
				<div id="div-comment-1324015" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">DWalker07</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180205-00/?p=97965#comment-1324015">
			February 5, 2018 at 12:12 pm</a>		</div>

		<p>Joshua, I don&#8217;t understand this comment.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt depth-2" id="comment-1324035">
				<div id="div-comment-1324035" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">McBucket</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180205-00/?p=97965#comment-1324035">
			February 5, 2018 at 3:53 pm</a>		</div>

		<p>Um, no. <a href="https://en.wiktionary.org/wiki/baristo" rel="nofollow">https://en.wiktionary.org/wiki/baristo</a></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even depth-2" id="comment-1324095">
				<div id="div-comment-1324095" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Matteo Italia</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180205-00/?p=97965#comment-1324095">
			February 5, 2018 at 10:53 pm</a>		</div>

		<p>Eeeh even Italian people sometimes mistake unrelated -a terminations as feminine</p>
<p><a href="https://4.bp.blogspot.com/-POspE_eDNF4/Wm5DnzwanQI/AAAAAAABKy8/HM1XCHMHnnoKyI4_IHCPHY0OvBIRjDBWQCLcBGAs/s1600/cartelli%2B0213.jpg" rel="nofollow">https://4.bp.blogspot.com/-POspE_eDNF4/Wm5DnzwanQI/AAAAAAABKy8/HM1XCHMHnnoKyI4_IHCPHY0OvBIRjDBWQCLcBGAs/s1600/cartelli%2B0213.jpg</a></p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1323925">
				<div id="div-comment-1323925" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">AsmGuru62</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180205-00/?p=97965#comment-1323925">
			February 5, 2018 at 10:21 am</a>		</div>

		<p>So, the formatted string was never seen in a Watch panel in debugger.<br />
Interesting.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1324005">
				<div id="div-comment-1324005" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">colin stevens</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180205-00/?p=97965#comment-1324005">
			February 5, 2018 at 11:50 am</a>		</div>

		<p>I hope we don&#8217;t need a floating point number with 3 digits after the decimal to represent the number of icons on the desktop</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1324045">
				<div id="div-comment-1324045" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ivan K</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180205-00/?p=97965#comment-1324045">
			February 5, 2018 at 5:45 pm</a>		</div>

		<p>I&#8217;m not sure if McCafé was a thing when that comment was written, but I&#8217;d like to imagine the ex-programmer coming face to face with a &#8220;Billions and Billions Served&#8221; sign on the first day of a new job. (Even though the format arg error isn&#8217;t related to the code comment, as Brian EE said in the first blog comment.)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-cheong even thread-even depth-1" id="comment-1324055">
				<div id="div-comment-1324055" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/cheong00' rel='external nofollow' class='url'>cheong00</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180205-00/?p=97965#comment-1324055">
			February 5, 2018 at 5:50 pm</a>		</div>

		<p>[I am going to quit and become a barista]<br />
The version for Taiwan people is &#8220;I am going to quit and sell chicken fillet&#8221;. :P</p>
<p>And yes, hawkers selling deep fried / roasted chicken fillet can earn more than average people with programming job.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-cheong odd alt thread-odd thread-alt depth-1" id="comment-1324065">
				<div id="div-comment-1324065" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/cheong00' rel='external nofollow' class='url'>cheong00</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180205-00/?p=97965#comment-1324065">
			February 5, 2018 at 6:09 pm</a>		</div>

		<p>Btw, shouldn&#8217;t it be something that caught by unit testing? If there exists an edge case where a large array of random generated coordinates are spilled into the function, it should throw an exception / runtime error.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1 parent" id="comment-1324105">
				<div id="div-comment-1324105" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Yuri Khan</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180205-00/?p=97965#comment-1324105">
			February 6, 2018 at 1:06 am</a>		</div>

		<p>Surely you don’t need three decimals for the coordinates of a desktop icon? On the other hand, probably want at least four digits for the integral part.</p>

		
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-oldnewthing bypostauthor odd alt depth-2" id="comment-1324135">
				<div id="div-comment-1324135" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Raymond+Chen+-+MSFT' rel='external nofollow' class='url'>Raymond Chen - MSFT</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180205-00/?p=97965#comment-1324135">
			February 6, 2018 at 7:31 am</a>		</div>

		<p>The units are in icons, not pixels. 1000 icons across and 1000 icons down is a million icons. But if you turn off &#8220;Align to grid&#8221;, you can put icons at fractional positions.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment even thread-odd thread-alt depth-1 parent" id="comment-1324115">
				<div id="div-comment-1324115" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">John Styles</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180205-00/?p=97965#comment-1324115">
			February 6, 2018 at 3:20 am</a>		</div>

		<p>One would have hoped that whichever of K &amp; R came up with the formatting in C (someone will now tell me it comes from BCPL or the programming language defined in the Dead Sea Scrolls [Dead C Scrolls?]) could have found someone in Bell Labs who did some sort of application programming to tell them how format statements need to work, maybe someone who wrote Fortran or COBOL?<br />
People always cite the creator of make not changing the tabs into spaces because he had a dozen users as causing the most wasted time of that decision of all time, but the dysfunctional C formatting semantics seems worse to me &#8211; I have never worked on a scientific / technical system where we haven&#8217;t had to write our own replacement or more usually wrapper code round it to catch the cases where the length isn&#8217;t what you would expect.<br />
(Obviously there are philosophical errors in programming languages one can argue about but this just seems a mistake that could have been contained locally in the relevant routine(s))</p>

		
				</div>
		<ol class="children">
		<li class="comment odd alt depth-2 parent" id="comment-1324145">
				<div id="div-comment-1324145" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Peter Doubleday</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180205-00/?p=97965#comment-1324145">
			February 6, 2018 at 9:10 am</a>		</div>

		<p>Pretty darned sure it wasn&#8217;t BCPL (although I suppose I could download the compiler from Martin Richards&#8217; site and experiment with it).  Pretty darned sure because the fundamental types in C (char, short, int, long, float, double) don&#8217;t match the fundamental types in BCPL, and C formatting is closely tied to the fundamental types.   I could be wrong on either count, of course.</p>
<p>What is fascinating about this is that C++ tried really, really hard to be as backward-compatible to C as humanly possible, except in one notable area &#8211; input/output.  Whatever you might say about C++ streams, they are at least in theory a lot easier to use if you want predictable precision and so on.</p>
<p>And what&#8217;s even more interesting (to me as a historian of CS) is that almost everybody in commercial C++ programming went straight ahead and ignored the C++ IO system in favour of the obviously broken C model.</p>

		
				</div>
		<ol class="children">
		<li class="comment even depth-3" id="comment-1324215">
				<div id="div-comment-1324215" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Matteo Italia</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180205-00/?p=97965#comment-1324215">
			February 6, 2018 at 4:33 pm</a>		</div>

		<p>&gt; What is fascinating about this is that C++ tried really, really hard to be as backward-compatible to C as humanly possible, except in one notable area – input/output. Whatever you might say about C++ streams, they are at least in theory a lot easier to use if you want predictable precision and so on.</p>
<p>Uh, not really; each and every time I tried to use them, there were bizarre corner cases (the precision flag behavior is particularly hideous), modifiers that stuck when I didn&#8217;t expect them to and the other way around. Also, its syntax is insanely verbose and completely detached from how the output will look on screen. It&#8217;s no surprise that virtually any other language used placeholder-based formatting (but type-safe, unlike the C predecessor).</p>
<p>&gt; And what’s even more interesting (to me as a historian of CS) is that almost everybody in commercial C++ programming went straight ahead and ignored the C++ IO system in favour of the obviously broken C model.</p>
<p>iostream is a lethal mix of badly designed stuff, it&#8217;s not surprising that virtually everybody stayed away from it. They solved a few problems (type safety in particular), made formatting somewhat safer but IMHO way more inconvenient (see paragraph above), and overengineered everything else (which came with its own performance problems), not meeting any practical objective.</p>
<p>&#8211; streams interface and extension is black magic; how many C++ programmers do you know that know off the top of their heads what is a stream &#8220;sentry&#8221; object and why they may ever need it? or how the locale stuff (that filters all data going through the streams) actually work (bonus points if he/she actually knows what a &#8220;facet&#8221; is, and that a locale is ultimately a type-erased container of unrelated types)?<br />
&#8211; confusing interface = widespread errors; the formatted/unformatted input methods mixed all in the same cauldron made its fair share of victims (extra leftover whitespace, anyone? again, how many people do you know that know about std::ws?); std::endl? while(!is.eof())?<br />
&#8211; all this complexity and magic entities (like the IO manipulators) don&#8217;t really buy in any flexibility &#8211; if I wanted to e.g. add a manipulator to output numbers in base 36 I wouldn&#8217;t even know where to start (std::hex &amp; co. just set fixed flags into the stream object, that handle some arbitrary formatting &#8211; essentially, what was already supported by printf&#8217;s format strings);<br />
&#8211; decoupling the underlying data source/sink from formatting was an important advancement, but the standard library itself hides this surprisingly well; fstream/ifstream/ofstream, their string counterparts&#8230; WTF? all you need is an istream/ostream/iostream + filebuf/stringbuf &#8211; if only the base stream classes had some sensible policy to handle their underlying streambuffers lifetime&#8230;;<br />
&#8211; stream buffers handle buffering, data sink/source interface and encoding conversion, all in the same class, while they should be separate concerns to be handled by separate entities; the resulting interface for implementers is a complete mess (plus some extra assholeries thrown in for free, such as the &#8220;extra character&#8221; thing in the underflow/overflow calls); I have yet to manage to write a streambuf that handles seeks correctly;<br />
&#8211; code page conversion, which, in a decently made library could be just another filter, orthogonal to most of the rest of the library, is yet another pervasive fuckup (and don&#8217;t get me started with the whole wide chars mess).</p>
<p>I could go on; the complete mess that is iostream made some victims in an important codebase of ours as a coworker of mine decided that streambufs where &#8220;the right thing&#8221;; he spent a week trying to implement a more civilized interface on the top of streambuf (when we wasted hours navigating in a mess of confusingly-named protected virtual functions called by slightly-differently-named public nonvirtual functions), implemented some filtering streambufs (zlib, http chunk, bzip2, &#8230;), then we spent the next two months debugging the problems that arose due to bizarre corner cases allowed by the streambuf spec.</p>
<p>This to say: it&#8217;s not surprising that people don&#8217;t use this drek; what is surprising is that anybody deemed it decent enough to include it into the C++ standard.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment byuser comment-author-davebacher odd alt thread-even depth-1" id="comment-1324715">
				<div id="div-comment-1324715" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Dave+Bacher' rel='external nofollow' class='url'>Dave Bacher</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180205-00/?p=97965#comment-1324715">
			February 12, 2018 at 4:37 pm</a>		</div>

		<p>You can never fix this though, because some obscure program depends on the stack hammer to function correctly.</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>