<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (24)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-1198321">
				<div id="div-comment-1198321" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Brian Friesen</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20151015-00/?p=91351#comment-1198321">
			October 15, 2015 at 8:45 am</a>		</div>

		<p>Thanks, interesting to learn the differences. &nbsp;Another key point that might play a role in which API to call is the library where they are located. &nbsp;Both IIDFromString and CLSIDFromString are in ole32.dll which most apps link to already. &nbsp;UuidFromString is located in rpcrt4.dll which might require the developer to pull in an additional library. &nbsp;And GUIDFromString is in shell32.dll.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1198291">
				<div id="div-comment-1198291" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Eddie</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20151015-00/?p=91351#comment-1198291">
			October 15, 2015 at 9:42 am</a>		</div>

		<p>What is the story behind the curly braces? &nbsp;Were they added to delineate the GUID in a larger string?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1198281">
				<div id="div-comment-1198281" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ian Boyd</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20151015-00/?p=91351#comment-1198281">
			October 15, 2015 at 9:52 am</a>		</div>

		<p>I had a strange bug come up about two years ago. We were parsing user input, checking if they were typing a GUID. </p>
<p>CLSIDFromString was converting the string &quot;m&quot; into the guid &quot;{4ED063C9-4A0B-4B44-A9DC-23AFF424A0D3}&quot;. This was completely nonsensical until i used Bing to google the returned GUID, and discovered that it was some malware. &quot;M&quot; was the ProgID, and &quot;{4ED063C9-4A0B-4B44-A9DC-23AFF424A0D3}&quot; was its corresponding CLSID.</p>
<p>Which is how i learned that CLSIDFromString hits the registry every time it&#39;s called. Using it to try to parse strings into a GUID is a bad idea. We switched to IIDFromString.</p>
<p>Perhaps i&#39;ll change it again to use UUIDFromString; as i&#39;m no more interested in an Interface Identifer as i was interested in a Class Identifier.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1198271">
				<div id="div-comment-1198271" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">mikeb</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20151015-00/?p=91351#comment-1198271">
			October 15, 2015 at 10:39 am</a>		</div>

		<p>@Ian Boyd:</p>
<p>&gt;&gt; &nbsp;used Bing to google&#8230;</p>
<p>Classic.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-hankhein even thread-even depth-1" id="comment-1198251">
				<div id="div-comment-1198251" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Henri+Hein' rel='external nofollow' class='url'>Henri Hein</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20151015-00/?p=91351#comment-1198251">
			October 15, 2015 at 11:56 am</a>		</div>

		<p>This was useful. &nbsp;The curly braces always trips me up. &nbsp;It&#39;s like one of those Unix things, where you just have to know whether to include them or not.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1198241">
				<div id="div-comment-1198241" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Rich Shealer</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20151015-00/?p=91351#comment-1198241">
			October 15, 2015 at 1:19 pm</a>		</div>

		<p>@mikeb</p>
<p>Wow Google is embedded deep. When I read that I didn&#39;t even trip on the &quot;Bing to google&quot; phrase until you pointed it out. </p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-wndsks even thread-even depth-1" id="comment-1198231">
				<div id="div-comment-1198231" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/skSdnW' rel='external nofollow' class='url'>skSdnW</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20151015-00/?p=91351#comment-1198231">
			October 15, 2015 at 1:43 pm</a>		</div>

		<p>@Raymond: You forgot SHCLSIDFromString (I can&#39;t find the shell extension docs for Win95 but it is probably part of the mini-COM for extensions that don&#39;t link to ole32)</p>
<p>@Ian Boyd: The implementation on Win8 tries to parse as a guid first and might not hit the registry. It is the sane thing to do and probably does this in all versions. If only it was documented&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1198221">
				<div id="div-comment-1198221" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Electron Shepherd</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20151015-00/?p=91351#comment-1198221">
			October 15, 2015 at 1:54 pm</a>		</div>

		<p>@skSdnW: &quot;The implementation on Win8 &#8230; If only it was documented&quot;</p>
<p>You document the interface, never the implementation.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1198211">
				<div id="div-comment-1198211" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">foo</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20151015-00/?p=91351#comment-1198211">
			October 15, 2015 at 2:00 pm</a>		</div>

		<p>I like uppercase guids too (uuidgen -c &#8230;). And mostly just used CLSIDFromProgID to get the guid from a ProgID. But that&#39;s because we knew we were dealing with prog ids as input. Also, I haven&#39;t bing&#39;ed the googles, but would there be a standard function to convert the string C struct representation of a guid (uuidgen -s) into a binary guid? Probably not, since that was mostly just for pasting into program source code?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1198201">
				<div id="div-comment-1198201" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Nico</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20151015-00/?p=91351#comment-1198201">
			October 15, 2015 at 2:21 pm</a>		</div>

		<p>In the past I was somewhat ambivalent about the case of letters in UUIDs, but as I&#39;ve started to see them more (our current database uses them a lot), I&#39;ve started to prefer lower-case letters. &nbsp;Seeing big lists of uppercase UUIDs feels like I&#39;m being shouted at by my computer :(</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-wndsks even thread-even depth-1" id="comment-1198191">
				<div id="div-comment-1198191" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/skSdnW' rel='external nofollow' class='url'>skSdnW</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20151015-00/?p=91351#comment-1198191">
			October 15, 2015 at 4:13 pm</a>		</div>

		<p>@Electron Shepherd: Obviously but the way it is now you would expect the API to fail on anything that is not a valid GUID string, it&#39;s even implied by its name. Even worse, the result can change from machine to machine or even in the lifetime of a process if something is registered/unregistered while it is running! This implementation is not an accident and forcing people to discover it the hard way is cruel. </p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1198181">
				<div id="div-comment-1198181" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">mh25000</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20151015-00/?p=91351#comment-1198181">
			October 15, 2015 at 9:23 pm</a>		</div>

		<p>A column of type &#39;uniqueidentifier&#39; (which is what newid() returns) in a table in SQL Server returns a string in the form &quot;12345678-1234-1234-1234-123456789ABC&quot; when you select it. &nbsp;If you cast the value to BINARY it comes back as 0x78563412341234121234123456789ABC&quot;, in other words the bytes in the first three sections, but not the last two, are reordered.</p>
<p>Is there an interesting reason for this? &nbsp;Something I should know about?</p>
<p>It isn&#39;t a problem, but I need to code around it because in the database API I&#39;m using (DB-Library, yes an API from the last century) the column comes back as BINARY instead of CHAR(36).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1198171">
				<div id="div-comment-1198171" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">mh25000</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20151015-00/?p=91351#comment-1198171">
			October 15, 2015 at 9:35 pm</a>		</div>

		<p>You can see for yourself with the query</p>
<p> &nbsp; &nbsp;select cast(0x12345678123456789abc123456789abc as uniqueidentifier)</p>
<p>in any SQL Server database.</p>
<p>Nevermind, I&#39;ve just worked it out by having a look at the UUID type (that UuidFromString modifies). &nbsp;It&#39;s a struct of { LONG, SHORT, SHORT, CHAR[8] }, and the three ints change due to byte ordering while the char array stays the same. &nbsp;But now the question is why the struct is the way it is, instead of { LONG, SHORT, SHORT, SHORT, CHAR[6] }?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1198161">
				<div id="div-comment-1198161" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">foo</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20151015-00/?p=91351#comment-1198161">
			October 15, 2015 at 10:14 pm</a>		</div>

		<p>@mh25000 &#8211; I&#39;m guessing Little Endian machine order for the DWORD and 2 WORDS</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1198151">
				<div id="div-comment-1198151" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Sander</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20151015-00/?p=91351#comment-1198151">
			October 15, 2015 at 10:56 pm</a>		</div>

		<p>There are two commonly used GUID serialization forms when you trip between string and binary formats.</p>
<p>The form with the bytes in funny order is often called the Microsoft form and is used, as you might guess, primarily on Microsoft software. The other form with no touching of the bytes and straight up &quot;removing the dashes&quot; style serialization is what I call the Linux style and it is often used with open source software everywhere and is almost universally used on Linux.</p>
<p>GUID: 01020304-0506-0708-090a-0b0c0d0e0f10</p>
<p>Microsoft format: 0403020106050807090A0B0C0D0E0F10</p>
<p>Linux format: 0102030405060708090A0B0C0D0E0F10</p>
<p>While in concept it may looks like an endianness question, in reality there is no relation to machine endianness and both forms are used on all sorts of machines regardless of endianness. You always need to explicitly know not only that you have a serialized GUID in those 16 bytes but also what the serialization format is.</p>
<p>Because of the similarity to endianness (and potential actual roots in it 25 years ago, though no longer relevant) the Microsoft format is called little endian and the Linux format is called big endian.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1198131">
				<div id="div-comment-1198131" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Medinoc</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20151015-00/?p=91351#comment-1198131">
			October 16, 2015 at 2:01 am</a>		</div>

		<p>Are there any such considerations for the various StringFromXxxx() functions?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1198121">
				<div id="div-comment-1198121" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Cesar</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20151015-00/?p=91351#comment-1198121">
			October 16, 2015 at 2:41 am</a>		</div>

		<p>@Sander: what you called the &quot;Linux format&quot; is actually RFC 4122, the UUID RFC. Quoting from it:</p>
<p>&quot;The fields are encoded as 16 octets, with the sizes and order of the fields defined above, and with each field encoded with the Most Significant Byte first (known as network byte order).&quot;</p>
<p>What you called the &quot;Microsoft format&quot; is the in-memory representation of the struct they use to represent an UUID, recalling that Windows runs on little-endian CPUs. The first three fields are integers larger than a byte, the other fields are either byte-sized or an array of bytes.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1198111">
				<div id="div-comment-1198111" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">foo</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20151015-00/?p=91351#comment-1198111">
			October 16, 2015 at 5:06 am</a>		</div>

		<p>&gt; But now the question is why the struct is the way it is</p>
<p>Yeah sorry. Wrote my reply before reading your second post. And that is a good question. Maybe that structure layout made calculating the first version of the guid generation algorithm fast?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1198041">
				<div id="div-comment-1198041" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">DWalker</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20151015-00/?p=91351#comment-1198041">
			October 16, 2015 at 7:34 am</a>		</div>

		<p>@rude name: &quot;The implementation on Win8 tries to parse as a guid first and might not hit the registry&quot; &nbsp;But how would the implementation know that the given GUID was, or was not, a known CLSID unless it checked the registry every time?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1198021">
				<div id="div-comment-1198021" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">SI</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20151015-00/?p=91351#comment-1198021">
			October 16, 2015 at 8:35 am</a>		</div>

		<p>CLSIDFromString converts any passed GUID string to a binary GUID, the GUID does not need to actually be registered as a CLSID.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1197961">
				<div id="div-comment-1197961" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">DMarschall</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20151015-00/?p=91351#comment-1197961">
			October 16, 2015 at 12:04 pm</a>		</div>

		<p>I have two annotations:</p>
<p>1. I am very disappointed about the poor documentation at MSDN in regards to CLSIDFromString: <a href="https://msdn.microsoft.com/de-de/library/windows/desktop/ms680589(v=vs.85).aspx" rel="nofollow" target="_new">msdn.microsoft.com/&#8230;/ms680589(v=vs.85).aspx</a> . The in- and outputs aren&#39;t explained at all. So all we have is your blog, but no official documentation about valid input strings. It isn&#39;t even officially clear if a GUID can be used as input, because a CLSID is technically not a GUID ( <a href="http://stackoverflow.com/questions/1128188/how-do-i-convert-a-lpwstr-to-a-guid#comment8612270_1128208" rel="nofollow" target="_new">stackoverflow.com/&#8230;/how-do-i-convert-a-lpwstr-to-a-guid</a> ). In the comments, people did already complain about that in 2012, but I assume Microsoft doesn&#39;t care about these complaints.</p>
<p>2. About GUIDFromString(): Why did someone implement this function for internal purpose? I assume it is one of the cases where a developer re-invented the wheel, because they didn&#39;t knew it was already implemented somewhere else &#8212; that happened to me a few times, too.</p>
<div class="post">[<em>You&#39;re assuming that somebody actually reads the comments and actively chose to ignore them. I suspect nobody reads the comments. -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1197911">
				<div id="div-comment-1197911" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">More diversity</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20151015-00/?p=91351#comment-1197911">
			October 16, 2015 at 7:42 pm</a>		</div>

		<p>A wonder that there&#39;s no function which is a hybrid of the first two, making the braces optional&#8230;</p>
<div class="post">[<em>That is a great first step toward creating a security hole. (Inconsistent enforcement.)&nbsp;-Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1197831">
				<div id="div-comment-1197831" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Andrew</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20151015-00/?p=91351#comment-1197831">
			October 19, 2015 at 6:34 am</a>		</div>

		<p>Or perhaps a version making just the left brace optional, a version making the right brace optional, and a version making both braces optional.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1197741">
				<div id="div-comment-1197741" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Scarlet Manuka</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20151015-00/?p=91351#comment-1197741">
			October 19, 2015 at 10:31 pm</a>		</div>

		<p>@More diversity:</p>
<p>&gt;a hybrid of the first two, making the braces optional</p>
<p>&#8230; but not allowing NULL input, a design flaw which later has to be rectified by making an Ex version because testing reveals a large number of programs are relying on the call failing on NULL input to do their error checking&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>