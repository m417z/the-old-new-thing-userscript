<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (22)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-918363">
				<div id="div-comment-918363" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Troll</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110610-00/?p=10453#comment-918363">
			June 10, 2011 at 7:09 am</a>		</div>

		<p>Couldn&#39;t you fix the bugs in explorer.exe instead of complaining?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-918373">
				<div id="div-comment-918373" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Mike Caron</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110610-00/?p=10453#comment-918373">
			June 10, 2011 at 7:21 am</a>		</div>

		<p>Yeah, Explorer should know to fill in the customer&#39;s pointer before trying to dereference it!</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-918433">
				<div id="div-comment-918433" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Karellen</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110610-00/?p=10453#comment-918433">
			June 10, 2011 at 8:55 am</a>		</div>

		<p>Shouldn&#39;t this post be tagged &quot;socialskillsofathermonucleardevice&quot;? :-)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-918473">
				<div id="div-comment-918473" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Gabe</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110610-00/?p=10453#comment-918473">
			June 10, 2011 at 9:24 am</a>		</div>

		<p>How could this be a bug in explorer.exe? I don&#39;t see it (or any EXE) anywhere in the stack trace.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-918493">
				<div id="div-comment-918493" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Bran</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110610-00/?p=10453#comment-918493">
			June 10, 2011 at 9:48 am</a>		</div>

		<p>&quot;Apparently, some people don&#39;t understand that psychic powers are not something you ask for. It&#39;s my way of scolding you for not providing enough information to make a quality diagnosis possible. You don&#39;t come back saying, &quot;Hey, thanks for answering my question even though I did a crappy job of asking it. Here&#39;s another crappy question!&quot;&quot;</p>
<p>Social skills of a thermonuclear device indeed.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-918503">
				<div id="div-comment-918503" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ken Hagan</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110610-00/?p=10453#comment-918503">
			June 10, 2011 at 11:02 am</a>		</div>

		<p>&quot;Yeah, Explorer should know to fill in the customer&#39;s pointer before trying to dereference it!&quot;</p>
<p>Alternatively, Explorer should test the pointer as well as the HRESULT. I know it shouldn&#39;t have too, but surely the shell team know by now that third-party shell extensions are, erm, of variable quality. Indeed, Raymond&#39;s psychic powers could probably have predicted this particular class of error within minutes of seeing the prototype for the interface method in question.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-918513">
				<div id="div-comment-918513" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Gabe</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110610-00/?p=10453#comment-918513">
			June 10, 2011 at 11:12 am</a>		</div>

		<p>Ken: Perhaps you are unfamiliar with the &quot;fail fast&quot; philosophy? If you cover up the programmer&#39;s errors, the programmer has no way to debug his problem. In this case you are assuming that the programmer meant to return an error code rather than success, hence the bad pointer could be ignored. But what if the programmer really did intend to return success and forgot to set the output pointer properly? Or maybe they set an invalid output pointer. Regardless, either scenario is just as likely.</p>
<p>Of course if they &quot;fixed Explorer&quot; so that it swallowed exceptions like this, Raymond would just have a different question to post: &quot;How come the output pointer from my function is getting ignored?&quot; &#8212; only there would be no stack trace. And then people would start posting things like &quot;You should crash when the programmer returns garbage so that you can debug it&quot;!</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-918523">
				<div id="div-comment-918523" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">John Fringe</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110610-00/?p=10453#comment-918523">
			June 10, 2011 at 11:22 am</a>		</div>

		<p>Why should Explorer test the pointer? If the application is not working is because it is buggy. And if Explorer has no specific patch for this buggy behavior is because there&#39;s not a lot of applications with this same bug (there can not be: they wouldn&#39;t work).</p>
<p>So, after yelling at Raymond for years for patching windows so buggy applications can run (i.e., for caring for its customers), you are know asking him to relax windows rules pre-patching windows so developers can create new buggy applications?</p>
<p>I think you do not understand the philosophy behind compatibility patches. You relax rules so existing applications can work. You don&#39;t relax rules so that new applications can do new bad things.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-918543">
				<div id="div-comment-918543" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">John</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110610-00/?p=10453#comment-918543">
			June 10, 2011 at 12:21 pm</a>		</div>

		<p>&quot;You relax rules so existing applications can work. You don&#39;t relax rules so that new applications can do new bad things.&quot;</p>
<p>But it&#39;s a bit of a chicken and egg problem. &nbsp;You wouldn&#39;t need shims if applications were written properly, but if applications were written properly then you wouldn&#39;t need shims! &nbsp;If doing something the wrong way continues to work, then don&#39;t complain when people continue to do it the wrong way.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-918563">
				<div id="div-comment-918563" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">ton</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110610-00/?p=10453#comment-918563">
			June 10, 2011 at 1:58 pm</a>		</div>

		<p>&quot;The customer reported that IQueryInfo::SetInfoTip is getting called. The customer liaison added, &quot;Raymond, I&#39;m looking forward to your psychic powers again.&quot;</p>
<p>I used to wonder why Raymond always seemed to be so grumpy, angry, in a general bad mood and &quot;boasted&quot; of having the social skills of a thermonuclear device. After seeing the idiocy from this customer&#39;s inquiries, know I now.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-918573">
				<div id="div-comment-918573" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">ton</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110610-00/?p=10453#comment-918573">
			June 10, 2011 at 2:00 pm</a>		</div>

		<p>Oops meant &quot;know I now&quot;. tee hee&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-918583">
				<div id="div-comment-918583" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">ton</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110610-00/?p=10453#comment-918583">
			June 10, 2011 at 2:01 pm</a>		</div>

		<p>Meant &quot;now I know&quot;. There my brain is finally active.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-918593">
				<div id="div-comment-918593" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">James Schend</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110610-00/?p=10453#comment-918593">
			June 10, 2011 at 2:27 pm</a>		</div>

		<p>Hey guys, the account name is &quot;troll&quot;. You think maybe he&#39;s trolling you?</p>
<p>Stop feeding the trolls. Especially when they flat-out admit they&#39;re trolls. Sheesh.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-918613">
				<div id="div-comment-918613" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">CGomez</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110610-00/?p=10453#comment-918613">
			June 10, 2011 at 5:15 pm</a>		</div>

		<p>Hilarious to watch a few bits of sarcasm in a few comments turn into actual arguing and debate. &nbsp;Lol</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-918633">
				<div id="div-comment-918633" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110610-00/?p=10453#comment-918633">
			June 10, 2011 at 9:35 pm</a>		</div>

		<p>never: return ((String)&quot;Could not open file: &quot; + (String)filename).c_str();</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-918623">
				<div id="div-comment-918623" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Antonio Rodr&#237;guez</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110610-00/?p=10453#comment-918623">
			June 10, 2011 at 7:06 pm</a>		</div>

		<p>@Chris Gomez: this is The Old New Thing, the only blog in the world that needs a nitpickers&#39; corner, because we love to read Raymond and then start to talk about a completely unrelated topic (like I&#39;m doing right now ;-) ). No wonder this is the only blog I read *both* the articles and the comments of.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-918673">
				<div id="div-comment-918673" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">640k</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110610-00/?p=10453#comment-918673">
			June 11, 2011 at 6:26 am</a>		</div>

		<p>Instead: return &quot;stack allocated char* holding the following message: could not open file, which this program refuse to give the name of&quot;;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-918703">
				<div id="div-comment-918703" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">MattG</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110610-00/?p=10453#comment-918703">
			June 12, 2011 at 10:27 pm</a>		</div>

		<p>The address 0x000a0d70 is awfully suspicious. If you treat it as four bytes (little-endian), you get &#39;p&#39;,&#39;r&#39;,&#39;n&#39;,&#39; &#39;. In other words, it looks like a C-style string.</p>
<p>So: somehow, the developer returned the last part of his string as a pointer? That takes courage.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-918723">
				<div id="div-comment-918723" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Cesar</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110610-00/?p=10453#comment-918723">
			June 13, 2011 at 3:31 am</a>		</div>

		<p>@MattG: my turn trying to imitate Raymond&#39;s psychic debugging skills. Since this is an &quot;uninitialized variable&quot; kind of problem, it is probably stack junk, in this case leftover from a C string allocated on the stack.</p>
<p>Some function at some time used the stack to work with a C string which ended in &quot;prn&quot; (like &#39;char asdf[] = &quot;&#8230;.prn&quot;;&#39;), and later (perhaps much later) the buggy function was called, and failed to either return an error or clear the returned pointer (I am guessing it was one of these HRESULT-returning functions with an &quot;out&quot; pointer-to-pointer parameter). Since the caller also did not clear the out parameter (if it is an &quot;out&quot; parameter, the caller is not supposed to have to clear it), nobody cleared it and it had stack junk on it &#8211; in this case leftover bits from a C string.</p>
<p>So, it is not the developer returning the last part of a string as a pointer &#8211; it is the developer returning &quot;undefined&quot;.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-918743">
				<div id="div-comment-918743" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Cherry</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110610-00/?p=10453#comment-918743">
			June 13, 2011 at 6:36 am</a>		</div>

		<p>Correction: It must be:</p>
<p>void* randomLocation = (rand() + (rand() &lt;&lt; 31)) % mbi.RegionSize + mbi.AllocationBase;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-918753">
				<div id="div-comment-918753" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Cherry</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110610-00/?p=10453#comment-918753">
			June 13, 2011 at 6:38 am</a>		</div>

		<p>Looks like my brain is in power-saving mode today. &quot;&lt;&lt; 15&quot; of course (according to the &quot;rand&quot; definition, the highest possible random number is at least 32767).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-918733">
				<div id="div-comment-918733" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Cherry</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110610-00/?p=10453#comment-918733">
			June 13, 2011 at 6:33 am</a>		</div>

		<p>I&#39;d suggest this way (note that I don&#39;t know how shell namespace extensions work):</p>
<p>// &#8230;.. some code &#8230;..</p>
<p>SomeThing* outputPointer = (SomeThing*)0xDEADBEEF;</p>
<p>// Let&#39;s call the customer&#39;s function and see if they are too dumb for returning a failure code on failure!</p>
<p>if(TheCustomersFunction(&amp;outputPointer) == S_OK) {</p>
<p> &nbsp;if(outputPointer == 0xDEADBEEF) {</p>
<p> &nbsp; &nbsp;// I hate you, guys.</p>
<p> &nbsp; &nbsp;HMODULE customersLibBase;</p>
<p> &nbsp; &nbsp;MEMORY_BASIC_INFORMATION mbi;</p>
<p> &nbsp; &nbsp;GetModuleHandleEx(GET_MODULE_HANDLE_EX_FLAG_UNCHANGED_REFCOUNT | GET_MODULE_HANDLE_EX_FLAG_FROM_ADDRESS, &amp;TheCustomersFunction, &amp;customersLibBase))</p>
<p> &nbsp; &nbsp;VirtualQuery(customersLibBase + 0x1000, &amp;mbi, sizeof(mbi)); // We assume here that the code section is at RVA 0x1000. In some odd cases, this assumption might be wrong, but further checks (extracting information from section table in PE header) would be too complex for now.</p>
<p> &nbsp; &nbsp;// You are DOOMED. Good luck with debugging.</p>
<p> &nbsp; &nbsp;for(int i = 0; i &lt; 100; i++) {</p>
<p> &nbsp; &nbsp; &nbsp;void* randomLocation = (rand() * rand()) % mbi.RegionSize + mbi.AllocationBase;</p>
<p> &nbsp; &nbsp; &nbsp;unsigned char randomGarbage = rand() % 0xFF;</p>
<p> &nbsp; &nbsp; &nbsp;WriteProcessMemory(GetCurrentProcess(), randomLocation, &amp;randomGarbage, 1, NULL); // Using WriteProcessMemory, we circumvent memory page write-protection as well as memory breakpoints (if I remember correctly).</p>
<p> &nbsp; &nbsp;}</p>
<p> &nbsp; &nbsp;// Now behave as if the function had returned a failure code and everything was fine&#8230; *mad laughter*</p>
<p> &nbsp;}</p>
<p>}</p>
<p>// &#8230;.. some code &#8230;..</p>
<p>This should busy such developers for a while. ;-)</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>