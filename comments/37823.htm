<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (20)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-212773">
				<div id="div-comment-212773" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Moi</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040920-00/?p=37823#comment-212773">
			September 20, 2004 at 7:17 am</a>		</div>

		<p>Nice article, but it shouldn&#8217;t be needed. The MSDN documentation really shouldn&#8217;t require people to &quot;read the contract from the other side&quot;. I can only assume that the people who write the documentation think that everyone still uses RPN calculators.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-212783">
				<div id="div-comment-212783" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://weblogs.asp.net/oldnewthing/' rel='external nofollow' class='url'>Raymond Chen</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040920-00/?p=37823#comment-212783">
			September 20, 2004 at 8:19 am</a>		</div>

		<p>All interfaces can be read from both sides. Most people focus on the implementation side, but there&#8217;s also the consumer side.</p>
<p>How are you suggesting that the documentation should be changed? Should every interface say, &quot;You can either implement or call this interface&quot;?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-212813">
				<div id="div-comment-212813" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Andy</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040920-00/?p=37823#comment-212813">
			September 20, 2004 at 9:33 am</a>		</div>

		<p>MS programming docs are interesting. Some authors seem to write &quot;cookbook&quot; style. There is useful info in the remarks section and sometimes a link to sample code.</p>
<p>Others are far more dictionary style. A terse description of the function or API with almost no clue as to how to use it to get useful work done.</p>
<p>The latter requires reading between the lines and from the other side. Too much extrapolation in my opinion.</p>
<p></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-212823">
				<div id="div-comment-212823" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://weblogs.asp.net/oldnewthing/' rel='external nofollow' class='url'>Raymond Chen</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040920-00/?p=37823#comment-212823">
			September 20, 2004 at 9:36 am</a>		</div>

		<p>I prefer the dictionary style myself. I think it has to do with which half of the brain you think with.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-212853">
				<div id="div-comment-212853" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Jeff Parker</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040920-00/?p=37823#comment-212853">
			September 20, 2004 at 10:00 am</a>		</div>

		<p>A quick question in this 11 part series will you be demonstrating the .net implementations?</p>
<p>System.Windows.Forms.ContextMenu</p>
<p>Just curious, but don&#8217;t let me disuade you from where you are going. I just haven&#8217;t used C++ in at least 3 years since C# came out. And yeah I know there are other .net blogs but none of them compair to the Raymond and Larry Blogs for in depth detail and knowledge.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-212863">
				<div id="div-comment-212863" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.accidentalscientist.com' rel='external nofollow' class='url'>Simon Cooke [exMSFT]</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040920-00/?p=37823#comment-212863">
			September 20, 2004 at 10:03 am</a>		</div>

		<p>Raymond: Dictionary style only works if you have extensive sample code, the source code of the API implementation, or a large number of reference books to work from.</p>
<p>That&#8217;s the thing about Index knowledge; it lets you find what you&#8217;re looking for. It doesn&#8217;t, however, teach concepts or ideas.</p>
<p>For an example of an API which desperately needs better sample code and some extensive real-world examples, see Uniscribe. While Uniscribe straddles the line between cookbook and dictionary in its documentation, it still leaves lots of questions regarding best practices et al unanswered.</p>
<p>I guess what it all boils down to is this:<br />
<br />Dictionary-style doco is best when one already knows the subject at hand. Cookbook style is best when one needs to learn the subject. Good documentation includes both.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-212873">
				<div id="div-comment-212873" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://weblogs.asp.net/oldnewthing/' rel='external nofollow' class='url'>Raymond Chen</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040920-00/?p=37823#comment-212873">
			September 20, 2004 at 10:37 am</a>		</div>

		<p>I know zero about Windows Forms.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-212883">
				<div id="div-comment-212883" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://weblogs.asp.net/oldnewthing/archive/2004/09/20/231739.aspx#231881' rel='external nofollow' class='url'>mschaef</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040920-00/?p=37823#comment-212883">
			September 20, 2004 at 10:49 am</a>		</div>

		<p>The thing that bothers me about reading the documentation &quot;from the other side&quot;, is that that&#8217;s basically what Microsoft has to do to implement the Windows API in the first place.  Given all the trouble that Microsoft has had ensuring compatibility over the years, that doesn&#8217;t give me much confidence in my own ability to produce a reasonable context menu host (or whatever). Obviously, ISV software doesn&#8217;t have quite the same compatibility requirements as Windows itself, but given the lower resources most ISV&#8217;s can bring to bear on the problem, implementing the API from the other side seems like it might be a fairly costly move.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-212903">
				<div id="div-comment-212903" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://nedwork.com.br/blog/weblog.php' rel='external nofollow' class='url'>Michel van Kessel</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040920-00/?p=37823#comment-212903">
			September 20, 2004 at 3:06 pm</a>		</div>

		<p>I know zero too about Windows Forms!<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-212913">
				<div id="div-comment-212913" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://weblogs.asp.net/oldnewthing/archive/2004/09/20/231739.aspx#232038' rel='external nofollow' class='url'>Wilfried Wieser</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040920-00/?p=37823#comment-212913">
			September 20, 2004 at 4:19 pm</a>		</div>

		<p>The MSDN documentation for most standard interfaces honors both sides by having &quot;When to Implement&quot;, &quot;When to Use&quot;, &quot;Notes to Callers&quot; and &quot;Notes to Implementers&quot; sections.</p>
<p>Most interfaces, however, either have just a few implementors or they have just a few callers. The one more exclusive side of an interface becomes &quot;the other side&quot; of that interface. This side is harder to join because everybody tests against the few well known instances of this side. If somebody implements IContextMenu, he or she will most likely only test against the Windows Shell, despite the fact that &quot;Context Menu&quot; is a quite general term. If the code runs successfully in the shell, it is considered correct.</p>
<p>This has been a major problem for unmanaged component software.</p>
<p>In [HKLMSOFTWAREMicrosoftWindowsCurrentVersionShellCompatibilityObjects] there are strange flags like &quot;CTXMENU_LIMITEDQI&quot;, indicating that there are implementations of IContextMenu which may even get a menu host in trouble if he QI&#8217;s the object differently than a previous version of the shell.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-212923">
				<div id="div-comment-212923" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://weblogs.asp.net/oldnewthing/archive/2004/09/20/231739.aspx#232060' rel='external nofollow' class='url'>asdf</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040920-00/?p=37823#comment-212923">
			September 20, 2004 at 4:51 pm</a>		</div>

		<p>For some more sample source code, I love ContextMenu:</p>
<p><a target="_new" href="http://www.maddogsw.com/cmdutils/" rel="nofollow">http://www.maddogsw.com/cmdutils/</a></p>
<p>It even has code to parse the menu to output text instead of displaying a GUI menu.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-212943">
				<div id="div-comment-212943" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://flurf.net/' rel='external nofollow' class='url'>Eric TF Bat</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040920-00/?p=37823#comment-212943">
			September 20, 2004 at 5:13 pm</a>		</div>

		<p>For the benefit of the people who just want the history and the anecdotes, why not mark your articles with categories and make it possible to view entries by categories?  Does the blogging software have that kind of capability?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-212953">
				<div id="div-comment-212953" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://weblogs.asp.net/oldnewthing' rel='external nofollow' class='url'>Raymond Chen</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040920-00/?p=37823#comment-212953">
			September 20, 2004 at 5:20 pm</a>		</div>

		<p>Um, that&#8217;s what the category feeds are for.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-212993">
				<div id="div-comment-212993" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://weblogs.asp.net/oldnewthing/archive/2004/09/20/231739.aspx#232197' rel='external nofollow' class='url'>name</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040920-00/?p=37823#comment-212993">
			September 20, 2004 at 8:18 pm</a>		</div>

		<p>The thing that still bugs me about reading specs from the other side is that it won&#8217;t always work.</p>
<p>Windows&#8217;s implementation has to be compatible with buggy applications, and may contain workarounds you won&#8217;t think of. Or Windows may have bugs or quirks that applications depend on.  Or it may handle details of a correct implementation that aren&#8217;t obvious in the spec (e.g., ShellExecute expands environment strings).  And when specs change, you may have to track them.</p>
<p>Is the strategy of reading a contract from the other side successfully used on a variety of specs in real applications?  If not, why not?  If so, does it cause the implementors endless grief, or what?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-213043">
				<div id="div-comment-213043" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://weblogs.asp.net/oldnewthing/archive/2004/09/21/231739.aspx#232366' rel='external nofollow' class='url'>Cooney</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040920-00/?p=37823#comment-213043">
			September 21, 2004 at 6:53 am</a>		</div>

		<blockquote><p>
  Is the strategy of reading a contract from the other side successfully used on a variety of specs in real applications? If not, why not? If so, does it cause the implementors endless grief, or what?</p>
<p>Probably not. If it were, it&#8217;d be more akin to a standard &#8211; implementations are judged by their compliance to a standard, and variations are treated as bugs in the code. </p>
<p>Windows is different &#8211; it is the defacto standard, and is authoritative, more so than any written spec. Variations between the code and the spec are treated as bugs in the spec (provided that someone somewhere depends on the behavior). </p>
<p>I think the best way to view this is to look at the docs as a starting point, and then resolve any questions by testing the code to see what it does (which is how we get bug-dependency in the first place).
</p></blockquote>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-213193">
				<div id="div-comment-213193" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.codeproject.com/script/articles/list_articles.asp?userid=152' rel='external nofollow' class='url'>Mike Dunn</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040920-00/?p=37823#comment-213193">
			September 21, 2004 at 11:36 am</a>		</div>

		<blockquote><p>
  Is the strategy of reading a contract from the other side successfully used on a variety of specs in real applications?</p>
<p>I imagine that reading the context menu shell extension spec from the other side is done often, since there are many Explorer shell replacements out there, and a file/dir context menu is a pretty big part of the shell.<br />
  <br />Other apps like WndTabs for VC 6 do it as well (r-click a tab and you can get the Explorer context menu for a source file).
</p></blockquote>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-216443">
				<div id="div-comment-216443" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://notgartner.com/posts/744.aspx' rel='external nofollow' class='url'>notgartner.com: Mitch Denny's Blog</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040920-00/?p=37823#comment-216443">
			October 13, 2004 at 9:29 am</a>		</div>

		
		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-357753">
				<div id="div-comment-357753" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.ailight.jp/blog/sha256/archive/2006/03/23/11241.aspx' rel='external nofollow' class='url'>社本＠ワック Blog</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040920-00/?p=37823#comment-357753">
			March 22, 2006 at 1:33 pm</a>		</div>

		<p>IContextMenu のホスト方法 &#8211; Shell</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-511543">
				<div id="div-comment-511543" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blogwell.wordpress.com/2007/06/05/implementing-sent-to-mail-recipient-in-your-application/' rel='external nofollow' class='url'>Implementing "Sent To Mail Recipient" in your Application &laquo; BlogWell</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040920-00/?p=37823#comment-511543">
			June 6, 2007 at 2:46 am</a>		</div>

		<p>PingBack from <a rel="nofollow" target="_new" href="http://blogwell.wordpress.com/2007/06/05/implementing-sent-to-mail-recipient-in-your-application/" rel="nofollow">http://blogwell.wordpress.com/2007/06/05/implementing-sent-to-mail-recipient-in-your-application/</a></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-587013">
				<div id="div-comment-587013" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blog-well.com/2007/06/05/implementing-sent-to-mail-recipient-in-your-application/' rel='external nofollow' class='url'>BlogWell &raquo; Implementing &#8220;Sent To Mail Recipient&#8221;; in your Application</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040920-00/?p=37823#comment-587013">
			January 8, 2008 at 4:11 pm</a>		</div>

		<p>PingBack from <a rel="nofollow" target="_new" href="http://blog-well.com/2007/06/05/implementing-sent-to-mail-recipient-in-your-application/" rel="nofollow">http://blog-well.com/2007/06/05/implementing-sent-to-mail-recipient-in-your-application/</a></p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>