<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (44)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-302793">
				<div id="div-comment-302793" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Moasat</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050902-00/?p=34333#comment-302793">
			September 2, 2005 at 10:42 am</a>		</div>

		<p>So, I&#8217;m assuming the WaitForSingleObject and WaitForMultipleObjects also use GetTickCount for timing?  If I want a timeout of say 30ms, is it going to use GetTickCount and end up timing out somewhere between 10 and 55ms?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-larryosterman odd alt thread-odd thread-alt depth-1" id="comment-302813">
				<div id="div-comment-302813" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Larry+Osterman+%5BMSFT%5D' rel='external nofollow' class='url'>Larry Osterman [MSFT]</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050902-00/?p=34333#comment-302813">
			September 2, 2005 at 10:55 am</a>		</div>

		<p>Mosat, it&#8217;s not going to use GetTickCount, but the GetTickCount and WaitForSingleObject use the same timer with the same resolution.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-302823">
				<div id="div-comment-302823" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://shazware.com' rel='external nofollow' class='url'>Steve Hazel</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050902-00/?p=34333#comment-302823">
			September 2, 2005 at 11:10 am</a>		</div>

		<p>There is a LOT to windows timing.<br />
<br />Tons of methods with tons of tradeoffs&#8230;<br />
<br />We yack about it on this email list for<br />
<br />midi developers:<br />
<br /><a rel="nofollow" target="_new" href="http://groups.google.com/group/mididev" rel="nofollow">http://groups.google.com/group/mididev</a></p>
<p>multimedia timers, directmusic timers, NT waitable timers, yada yada yada&#8230;</p>
<p>I wish it was all simpler&#8230;:(</p>
<p>&#8230;Steve</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-302833">
				<div id="div-comment-302833" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Carlos</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050902-00/?p=34333#comment-302833">
			September 2, 2005 at 11:11 am</a>		</div>

		<p>I had a problem with broken performance data on a four-way server that had two of its processors running at one speed, and two at another speed.  We discovered that QueryPerformanceCounter and QueryPerformanceFrequency gave different results depending on which of the pairs of processors they ran on, so the perfmon data was mostly garbage.  That was eight years ago so it&#8217;s probably fixed now.<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-302843">
				<div id="div-comment-302843" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Huh</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050902-00/?p=34333#comment-302843">
			September 2, 2005 at 11:22 am</a>		</div>

		<p>What a typical M$ post by Mr Smug-I&#8217;m-So-Much-Better-Than-You Chen. Boils down to: &#8216;you can&#8217;t have both accuracy and precision&#8217;. </p>
<p>Err why not? It&#8217;s not like they&#8217;re mutually exclusive, in fact, in almost all fields of endeavor there&#8217;s a high degree of correlation! How about actually implementing a method to measure time both accurately and precisely, instead of patronizing us by explaining something every 12 year old highschooler is taught in science class?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-302853">
				<div id="div-comment-302853" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">AC</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050902-00/?p=34333#comment-302853">
			September 2, 2005 at 11:34 am</a>		</div>

		<p>I&#8217;ve just read the information about RDTSC instruction, and Intel specifies that on Pentium M and similar processors the value is not incremented on the constant rate (and that&#8217;s logical, since the frequency changes depending on the CPU usage). Does Windows (2k, XP) in QueryPerformanceCounter take the RDTSC values on Pentium M or not? What&#8217;s more important for this Windows function &#8212; a correlation to seconds or a correlation to CPU clocks? I&#8217;d prefer the later.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-oldnewthing bypostauthor even thread-even depth-1" id="comment-302863">
				<div id="div-comment-302863" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Raymond+Chen+-+MSFT' rel='external nofollow' class='url'>Raymond Chen - MSFT</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050902-00/?p=34333#comment-302863">
			September 2, 2005 at 11:43 am</a>		</div>

		<p>I&#8217;m sorry, Huh, that you find today&#8217;s entry insulting. But you&#8217;d be surprised how many people don&#8217;t understand the difference. Search Google Groups for &#8220;GetTickCount&#8221; and you&#8217;ll see lots of confusion. (Oh, and where did I say you can&#8217;t get both precision and accuracy? QueryPerformanceCounter usually gets you both, but at a cost in performance.)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-302873">
				<div id="div-comment-302873" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.interact-sw.co.uk/iangblog/' rel='external nofollow' class='url'>Ian Griffiths</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050902-00/?p=34333#comment-302873">
			September 2, 2005 at 11:46 am</a>		</div>

		<p>About 4 years ago, I had some interesting time-warped results from the QueryPerf APIs on an IBM ThinkPad A21p.  This had a processor with SpeedStep, which I think was relatively new back then.  The QueryPerf counters would change speed according to which of its speedstep power modes the processor was in&#8230;  This made it hard to get meaningful results. :)</p>
<p>(The System info control panel applet would also report a different clock speed depending on the processor power mode too.)</p>
<p>&#8230;and to the aptly named: &quot;Huh&quot; try reading the article, and then try engaging your brain. Enjoy the novelty of this sensation.</p>
<p>You accuse Raymond of saying &#8216;you can&#8217;t have both accuracy and precision&#8217; but in fact he says nothing of the sort.  The precision of the QueryPerf stuff is, as he says, variable, and from that you appear to have concluded, incorrectly, that the precision must be low.</p>
<p>In fact, it&#8217;s very high &#8211; it&#8217;s always orders of magnitude better than any of the other APIs.  In my experience is precision has always been at least as good as microsecond order, and it&#8217;s often orders magnitude better in the cases where it can use RDTSC.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-302883">
				<div id="div-comment-302883" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">David Heffernan</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050902-00/?p=34333#comment-302883">
			September 2, 2005 at 11:50 am</a>		</div>

		<p>Huh, Raymond did not say &quot;you can&#8217;t have both accuracy and precision&quot;.  He actually said that the 2 concepts were different.  I&#8217;m afraid that the topics discussed here are probably too complex for someone of your limited comprehension skills.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-302893">
				<div id="div-comment-302893" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://safetyfork.net/' rel='external nofollow' class='url'>Xavier</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050902-00/?p=34333#comment-302893">
			September 2, 2005 at 11:52 am</a>		</div>

		<p>Huh: In most fields, people are trained not to report any more precision than they have accuracy.  If a physicist can only measure time to plus or minus 55 ms, he says so.</p>
<p>Raymond is explaining that a function like GetTickCount doesn&#8217;t necessarily have millisecond precision just because it returns a value in milliseconds.  That time measurement has to come from somewhere, and unfortunately computers on which Windows runs don&#8217;t have a standard high-accuracy, high-precision time clock that is also quick to access.  So different APIs have made different tradeoffs, and this IS worth reporting on.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-302933">
				<div id="div-comment-302933" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Aleko</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050902-00/?p=34333#comment-302933">
			September 2, 2005 at 12:30 pm</a>		</div>

		<p>I wonder why no one ever mentions the timeGetTime function in winmm.dll. It&#8217;s probably the simplest   way to get the time, and it&#8217;s quite precise (~5ms), although I&#8217;m not sure about its accuracy.</p>
<p>Interestingly, MSDN says that in Win95 the precision is 1ms, while in NT/2000 it can be 5ms or more. How can that be?<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-302943">
				<div id="div-comment-302943" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">gkdada</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050902-00/?p=34333#comment-302943">
			September 2, 2005 at 12:31 pm</a>		</div>

		<p>About a year back, I spent 2 weeks studying nothing but timers and counters in Windows (for a borderline multimedia project).</p>
<p>What Raymond says here is 100% accurate (and precise!). I don&#8217;t see any smugness in it. I think we just have to jump on Huh and beat him up in a proper democratic fashion.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-302963">
				<div id="div-comment-302963" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Lance Fisher</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050902-00/?p=34333#comment-302963">
			September 2, 2005 at 12:40 pm</a>		</div>

		<p>Huh, you should try being nicer.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-302983">
				<div id="div-comment-302983" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">A</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050902-00/?p=34333#comment-302983">
			September 2, 2005 at 12:44 pm</a>		</div>

		<p>&quot;About 4 years ago, I had some interesting time-warped results from the QueryPerf APIs on an IBM ThinkPad A21p. This had a processor with SpeedStep, which I think was relatively new back then. The QueryPerf counters would change speed according to which of its speedstep power modes the processor was in&#8230; This made it hard to get meaningful results. :)&quot;</p>
<p>Sadly, this same thing happens today (on XP x64) with the Cool&#8217;n&#8217;Quiet feature of AMD Athlon 64 processors (a SpeedStep equivalent). I&#8217;ve had to yank out all the QueryPerformanceCounter calls in my apps to work around this.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-302993">
				<div id="div-comment-302993" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Jare</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050902-00/?p=34333#comment-302993">
			September 2, 2005 at 12:51 pm</a>		</div>

		<p>&quot;I&#8217;ve had to yank out all the QueryPerformanceCounter calls in my apps to work around this.&quot;</p>
<p>Which method have you reverted to? Good old GetTickCount()?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-303003">
				<div id="div-comment-303003" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">autist0r</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050902-00/?p=34333#comment-303003">
			September 2, 2005 at 12:57 pm</a>		</div>

		<p>what about</p>
<p>&lt;code&gt;<br />
<br />__declspec(naked) unsigned long GetCounter()<br />
<br />{<br />
<br />   __asm { rtdsc }<br />
<br />}<br />
<br />&lt;/code&gt;</p>
<p>And by the way, keep in mind you most likely do not need a lot of precision with timing.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-303013">
				<div id="div-comment-303013" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">A</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050902-00/?p=34333#comment-303013">
			September 2, 2005 at 1:21 pm</a>		</div>

		<p>&quot;Which method have you reverted to? Good old GetTickCount()?&quot;</p>
<p>Yes. The resolution isn&#8217;t as good, but at least it increments at a constant rate.</p>
<p>I didn&#8217;t try timeGetTime; that might work too, provided it isn&#8217;t based on RDTSC.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-303023">
				<div id="div-comment-303023" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://delphi-snippets.blogspot.com' rel='external nofollow' class='url'>Davy</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050902-00/?p=34333#comment-303023">
			September 2, 2005 at 1:22 pm</a>		</div>

		<p>autist0r: how about measuring? it would be nice to have at least a precision of a millisecond..</p>
<p>QueryPreformanceCounter is nice for this.. but the downside is:<br />
<br /><a rel="nofollow" target="_new" href="http://support.microsoft.com/default.aspx?scid=KB;EN-US;Q274323&amp;" rel="nofollow"></a><a href="http://support.microsoft.com/default.aspx?scid=KB;EN-US;Q274323&#038;amp" rel="nofollow">http://support.microsoft.com/default.aspx?scid=KB;EN-US;Q274323&#038;amp</a>;</p>
<p>anybody have an other solution?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-303033">
				<div id="div-comment-303033" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.lawfulneutral.com/' rel='external nofollow' class='url'>Chris</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050902-00/?p=34333#comment-303033">
			September 2, 2005 at 2:28 pm</a>		</div>

		<p>I too have had problems with QueryPerformanceCounter(). One some el cheapo overclocked PCs, the LSBs were garbage and would sometimes go back in time! Needless to say, most apps do not like going back in time. :D</p>
<p>The Multimedia timers are also interesting Windows timers. The MM timers sleep using WaitForSingleObject() or whatever, but wake up early. Then they spin in a busy loop until the actual wake-up time, so they can fire events very precisely.<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-303053">
				<div id="div-comment-303053" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://shazware.com' rel='external nofollow' class='url'>Steve Hazel</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050902-00/?p=34333#comment-303053">
			September 2, 2005 at 3:45 pm</a>		</div>

		<p>Chris &#8211; how do you know MM timers spin?<br />
<br />Inquiring minds wanna know&#8230;<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-303063">
				<div id="div-comment-303063" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Richard</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050902-00/?p=34333#comment-303063">
			September 2, 2005 at 4:44 pm</a>		</div>

		<p>Thanks for that informative post, very interesting.</p>
<p>Richard</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-302913">
				<div id="div-comment-302913" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Derek</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050902-00/?p=34333#comment-302913">
			September 2, 2005 at 12:23 pm</a>		</div>

		<p>&quot;Raymond is explaining that a function like GetTickCount doesn&#8217;t necessarily have millisecond precision just because it returns a value in milliseconds.&quot;</p>
<p>I think you mean &quot;[&#8230;] GetTickCount doesn&#8217;t necessarily have millisecond *accuracy* just because it returns a value in milliseconds.&quot;</p>
<p>:)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-303073">
				<div id="div-comment-303073" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">memet</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050902-00/?p=34333#comment-303073">
			September 2, 2005 at 8:10 pm</a>		</div>

		<p>I implemented a kernel driver that connects to my USB webcam, and determines with very high accuracy (but no precision) the tick count by looking at the relative position of the sun. Of course, this method doesn&#8217;t work so well at night time, but I&#8217;m working on a lunar based mod.<br />
<br />&lt;/joke&gt;<br />
<br /> Have a nice friday night everyone.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-303083">
				<div id="div-comment-303083" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://lj.dpdx.net' rel='external nofollow' class='url'>Brooks Moses</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050902-00/?p=34333#comment-303083">
			September 3, 2005 at 12:02 am</a>		</div>

		<p>The problem with that, memet, is that you can&#8217;t really have an accuracy that&#8217;s higher than your precision &#8212; there&#8217;s no way that a system which reports things to the nearest hour could have a millisecond precision, because the nearest hour is usually more than a millisecond away.</p>
<p>(Meanwhile, your webcam system ought to be working fine at night, with a +/- six hour &#8212; or eight in winter at high latitudes &#8212; precision.  All it needs to measure is &quot;dark&quot;)</p>
<p>I bring that up not to harsh on your joke, but because there&#8217;s an important point there: what your system has that&#8217;s valuable is a lack of drift &#8212; over really long periods of time, the fractional error is quite tiny (assuming the system stays running, of course!).</p>
<p>Observation: a number for accuracy is nearly meaningless, unless one also specifies what length of time one&#8217;s measuring for.</p>
<p>Consider, for instance, a hypothetical timer that&#8217;s usually off by 5%, and reports with a precision of 5ms.  For a 2.0s time, it&#8217;s probably off by 100ms.  But, for anything under 0.1s or so, it&#8217;s accurate to +/- 5ms.  That&#8217;s very different from a timer that&#8217;s off by 100ms no matter how short the measurement time is.</p>
<p>And so that brings me back to Raymond&#8217;s original post: He hasn&#8217;t really told us all that much about the accuracy of GetTickCount.  Is that 10-55ms expected error still valid if I&#8217;m timing something that only lasts 20ms?  What if I measure something that takes 20 minutes?  Is this a sort of random error that effectively gets added to all measurements regardless of size, or is it a typical value of the drift over an &quot;average&quot; measurement time?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-303123">
				<div id="div-comment-303123" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">josh</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050902-00/?p=34333#comment-303123">
			September 3, 2005 at 2:19 am</a>		</div>

		<p>If you can reliably repeat an operation enough times, you can get as much accuracy as you need out of GetTickCount, even better than 1ms.</p>
<p>As for the actual behavior of GetTickCount:  If you watch the output for a while, you&#8217;ll see that it will sit at one value and then jump up by 10 or 11ms.  You&#8217;ll see even bigger jumps periodically, but that&#8217;s for a different reason.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-303133">
				<div id="div-comment-303133" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.mastropaolo.com' rel='external nofollow' class='url'>Purplet [Italy]</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050902-00/?p=34333#comment-303133">
			September 3, 2005 at 3:56 am</a>		</div>

		<p>At <a rel="nofollow" target="_new" href="http://developer.nvidia.com/object/timer_function_performance.html" rel="nofollow">http://developer.nvidia.com/object/timer_function_performance.html</a> there is an article empirically comparing timing methods on a performance point of view.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-303163">
				<div id="div-comment-303163" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://users.forthnet.gr/pat/efotinis/' rel='external nofollow' class='url'>Elias Fotinis</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050902-00/?p=34333#comment-303163">
			September 3, 2005 at 3:48 pm</a>		</div>

		<p>The QueryPerformance* functions fail unless the supplied LARGE_INTEGER is DWORD aligned. Shouldn&#8217;t that be documented? I wasted a couple of hours once trying to figure this out&#8230; :)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-303193">
				<div id="div-comment-303193" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">jon</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050902-00/?p=34333#comment-303193">
			September 4, 2005 at 3:29 am</a>		</div>

		<p>Actually I would say that &quot;precision&quot; is the wrong term to use here. The dictionary.com definition is:</p>
<p>pre&#183;ci&#183;sion<br />
<br />The state or quality of being precise; exactness. </p>
<p>1. The ability of a measurement to be consistently reproduced.<br />
<br />2. The number of significant digits to which a value has been reliably measured. </p>
<p>Neither of these definitions really seem to be what Raymond is talking about. I would stick with the term &quot;resolution&quot; rather than precision, since for the very reasons Raymond mentions, the values returned by these functions are neither accurate nor precise.<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-303173">
				<div id="div-comment-303173" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://roblevine.blogspot.com/' rel='external nofollow' class='url'>RobL</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050902-00/?p=34333#comment-303173">
			September 3, 2005 at 8:38 pm</a>		</div>

		<p>This article does raise an interesting point though; in maths and physics (or any of the sciences for that matter), for example, it is basically *illegal* to quote any of your figures in more precision than you have accuracy. It is not so in computing &#8211; a point worth re-iterating.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-303213">
				<div id="div-comment-303213" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Brian</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050902-00/?p=34333#comment-303213">
			September 4, 2005 at 1:01 pm</a>		</div>

		<blockquote><p>
  The problem with that, memet, is that you can&#8217;t really have an accuracy that&#8217;s higher than your<br />
  <br />&gt; precision &#8212; there&#8217;s no way that a system which reports things to the nearest hour could have a<br />
  <br />&gt; millisecond precision, because the nearest hour is usually more than a millisecond away. </p>
<p>I disagree.  It&#8217;s perfectly reasonable to have high accuracy but poor precision.</p>
<p>Consider the scenario where you sample something repeatedly.  If this thing is a natural process then when you plot the probability distribution function of these samples it will take the shape of a Standard Normal distribution, assuming there are enough samples (by the Law of Large Numbers.)</p>
<p>This Normal distribution will have a mean and a standard deviation.  If your measurements were accurate but not precise, then the mean would very accurately reflect the true value of the thing you were trying to measure, but the standard deviation would be large.  Or in other words, it would be a wide but properly centered distribution.  Conversely if you had some bias in your measurement but an otherwise precise apparatus, it would mean that you would have a very tall and sharp distribution, but centered at the wrong value.</p>
<p>It is perfectly reasonable to expect an accuracy that is very much higher than the precision, sometimes by orders of magnitude, if these observations are averaged.  This is the basis by which many scientific intruments operate, by the way.  No one single reading can give the necessary accuracy, but with averaging you can trade off the time it takes to collect the readings for improved accuracy &#8212; as long as there is no systematic bias in your apparatus.
</p></blockquote>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-303233">
				<div id="div-comment-303233" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Norman Diamond</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050902-00/?p=34333#comment-303233">
			September 4, 2005 at 9:31 pm</a>		</div>

		<p>Friday, September 02, 2005 3:50 PM by Huh </p>
<p>&gt; I really should have my reproductive organs<br />
<br />&gt; ground to hamburger so as to prevent any<br />
<br />&gt; possibility of inflicting my corrupted DNA<br />
<br />&gt; on the gene pool.</p>
<p>Nah, that&#8217;s excessive.  All you have to do is patronize yourself by learning something every 12 year old highschooler is taught in mathematics class.  It&#8217;s called logic.  And in fact if you learn to think logically, then you might even learn enough to work on computers.</p>
<p>Next you&#8217;ll need to keep your reproductive organs in order to put something like this on display:</p>
<p>&quot;My wristwatch is more accurate than Windows.  You guys get ticks every 55ms or more or less and you don&#8217;t even know if it&#8217;s more or less.  The only reason Microsoft even gives you the time of day is because NTP is enabled by default in Windows XP.  Well, my wristwatch is around 300km from the nearest transmitter of atomic clock synchronized time signals, so due to the speed of light my wristwatch is around 1 millisecond behind.  Permanently.  Always.  And how many milliseconds does it take for NTP to get you the time of day from Microsoft?&quot;<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-303293">
				<div id="div-comment-303293" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Michael Fitzpatrick</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050902-00/?p=34333#comment-303293">
			September 5, 2005 at 3:40 am</a>		</div>

		<p>Back in the days of windows 3.1 I used the 8253 timer chip directly and got about 840 nanoseconds of resolution since the clock was 1.19MHz. I found that I could read the timer of a 33MHz 486 in 40uSec. On a periodic event this offset is pretty constant so it washes out. When I ported the code to windows 98, surprize! The timer code still worked. I haven&#8217;t tried porting this to WinNT, and haven&#8217;t had the need. But another project on WinNT showed that the multimedia timer (MMTIMER.DLL) was pretty stable, about +/- 100 usec jitter with a 1 msec interupt/callback on a 486 33MHz.<br />
<br />Anyways, I know that the QueryPerfFreq() API can return different freq&#8217;s, I just have never seen anything different than 1.19MHz (BTW, that&#8217;s where the 55 ms DOS INT 8 tick comes from, 840 ns * 64K ticks =  55 ms)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-303303">
				<div id="div-comment-303303" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Yadayadayada</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050902-00/?p=34333#comment-303303">
			September 5, 2005 at 4:38 am</a>		</div>

		<p>Actually it was accurate to within about two minutes when I read it.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-303313">
				<div id="div-comment-303313" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Huh</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050902-00/?p=34333#comment-303313">
			September 5, 2005 at 8:04 am</a>		</div>

		<p>I would like to point out that the other &#8216;Huh&#8217; posting was not made by me. </p>
<p>That I have to even say this speaks volumes about how selectively the &#8216;no impersonation&#8217; rule is enforced around here: no surprise there.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-oldnewthing bypostauthor even thread-even depth-1" id="comment-303463">
				<div id="div-comment-303463" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Raymond+Chen+-+MSFT' rel='external nofollow' class='url'>Raymond Chen - MSFT</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050902-00/?p=34333#comment-303463">
			September 5, 2005 at 3:55 pm</a>		</div>

		<p>I deleted the fake &#8216;Huh&#8217; posting.</p>
<p>The &quot;no impersonation&quot; rule is enforced when people point out a violation. How am I supposed to know who the real &#8216;Huh&#8217; is?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-303523">
				<div id="div-comment-303523" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Norman Diamond</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050902-00/?p=34333#comment-303523">
			September 5, 2005 at 8:57 pm</a>		</div>

		<p>Monday, September 05, 2005 3:55 PM by oldnewthing<br />
<br />&gt; I deleted the fake &#8216;Huh&#8217; posting.</p>
<p>How do you know it was fake?  When I lived in Toronto there were two Norman Diamonds in the phone book.  (There&#8217;s only one in Ome now though.)</p>
<p>And don&#8217;t forget, in the country where your ancestors emigrated from, one Hu is considering rehabilitating another Hu who was purged or something like that.  Maybe one who was transliterated differently needs rehabilitating too, how do you think, huh?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-303503">
				<div id="div-comment-303503" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ulric</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050902-00/?p=34333#comment-303503">
			September 5, 2005 at 4:44 pm</a>		</div>

		<p>Can you clarify the concluding sentence of the the post?  Do *we* have to do additionnal work for multiprocessors or &#8216;buggy hardware&#8217; or is this handled by Windows?<br />
<br />Why did the other poster have to yank the QPC code from his app?  If you call QueryPerformanceCounter and Frequency properly for short periods, you shouldn&#8217;t have any problems, right?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-303533">
				<div id="div-comment-303533" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">A</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050902-00/?p=34333#comment-303533">
			September 6, 2005 at 4:03 am</a>		</div>

		<p>&quot;Why did the other poster have to yank the QPC code from his app?&quot;</p>
<p>I discovered that on CPUs with variable-speed clocks (e.g. Athlon 64 with its Cool&#8217;n&#8217;Quiet feature enabled) the actual frequency of the performance counter is equal to the current CPU clock frequency &#8212; it is NOT a fixed number.</p>
<p>For example, on a 1.8 GHz Athlon 64 running at full speed the performance counter ticks 1,800,000,000 times per second. But when the load is light, the processor switches to 1.0 GHz, and the performance counter ticks only 1,000,000,000 times per second. As you can probably imagine, this behavior breaks any code that attempts to convert performance counter values into time figures, e.g.:</p>
<p>count_before = QPC;<br />
<br />&#8230; long operation &#8230;<br />
<br />count_after = QPC;<br />
<br />seconds_elapsed = (count_after &#8211; count_before) / QPF;</p>
<p>QPF appears to always return the maximum processor frequency (1,800,000,000), so even if the frequency stays at 1.0 GHz during the entire operation, seconds_elapsed will still be off.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-oldnewthing bypostauthor even thread-even depth-1" id="comment-303843">
				<div id="div-comment-303843" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Raymond+Chen+-+MSFT' rel='external nofollow' class='url'>Raymond Chen - MSFT</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050902-00/?p=34333#comment-303843">
			September 6, 2005 at 1:14 pm</a>		</div>

		<p>&quot;How do you know it was fake?&quot;</p>
<p>Because somebody posting as &#8216;Huh&#8217; said so. If you guys are going to start an impersonation war then I&#8217;ll just turn off comments.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-oldnewthing bypostauthor odd alt thread-odd thread-alt depth-1" id="comment-303923">
				<div id="div-comment-303923" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Raymond+Chen+-+MSFT' rel='external nofollow' class='url'>Raymond Chen - MSFT</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050902-00/?p=34333#comment-303923">
			September 6, 2005 at 4:38 pm</a>		</div>

		<p>Elias: All pointers must be properly aligned (unless explicitly notated to the contrary). That&#8217;s just a fundamental rule of the language (6.2.3.2.7), like &quot;Don&#8217;t use memory after freeing it&quot;.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-303863">
				<div id="div-comment-303863" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.lawfulneutral.com/' rel='external nofollow' class='url'>Chris</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050902-00/?p=34333#comment-303863">
			September 6, 2005 at 1:33 pm</a>		</div>

		<p>Steve Hazel: ok, so I cannot *personally* vouch for whether the MM timers spin, but I worked at a Seattle startup with some ex-Microsoft devs who worked in the MM group.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-305023">
				<div id="div-comment-305023" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://users.forthnet.gr/pat/efotinis/' rel='external nofollow' class='url'>Elias Fotinis</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050902-00/?p=34333#comment-305023">
			September 10, 2005 at 5:44 pm</a>		</div>

		<blockquote><p>
  All pointers must be properly aligned (unless explicitly notated to the contrary). That&#8217;s just a fundamental rule of the language (6.2.3.2.7), like &quot;Don&#8217;t use memory after freeing it&quot;. </p>
<p>True, but the x86 family doesn&#8217;t have any alignment requirements. All the other WinAPI functions work fine with arbitrary pointers on a x86. It seems odd that the QueryPerformance functions are so intolerant. Someone suggested this may be a HAL issue (msgid: &lt;e4stZ1LSDHA.2228@tk2msftngp13.phx.gbl&gt;).
</p></blockquote>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-345863">
				<div id="div-comment-345863" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blogs.msdn.com/oldnewthing/archive/2006/02/15/532524.aspx' rel='external nofollow' class='url'>The Old New Thing : The &quot;symmetric&quot; in symmetric multiprocessing really means &quot;symmetric&quot;</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050902-00/?p=34333#comment-345863">
			February 15, 2006 at 10:00 am</a>		</div>

		<p>PingBack from <a rel="nofollow" target="_new" href="http://blogs.msdn.com/oldnewthing/archive/2006/02/15/532524.aspx" rel="nofollow">http://blogs.msdn.com/oldnewthing/archive/2006/02/15/532524.aspx</a></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-444553">
				<div id="div-comment-444553" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://weblogs.java.net/blog/emcmanus/archive/2006/11/a_helper_class.html' rel='external nofollow' class='url'>Eamonn McManus's Blog</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050902-00/?p=34333#comment-444553">
			November 23, 2006 at 6:31 am</a>		</div>

		<p>I recently wanted to add some performance measurements to an application. To avoid duplicating code everywhere I needed to make measurements, I coded up a small helper class.</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>