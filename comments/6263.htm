<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (18)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-1017663">
				<div id="div-comment-1017663" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blogs.msdn.com/johnstonj_4000_inn_2D00_soft.com/ProfileUrlRedirect.ashx' rel='external nofollow' class='url'>johnstonj@inn-soft.com</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20121024-00/?p=6263#comment-1017663">
			October 24, 2012 at 7:41 am</a>		</div>

		<p>Or just use RegisterWindowMessage and never worry about a conflict&#8230;</p>
<div class="post">[<i>That&#39;s using a global solution to a local problem. There is a limited number of registered messages (and they can never be freed once registered), so if everybody used registered messages any time they wanted a message, the system would soon run out. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1017683">
				<div id="div-comment-1017683" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20121024-00/?p=6263#comment-1017683">
			October 24, 2012 at 10:22 am</a>		</div>

		<p>Wow, dialog boxes really shouldn&#39;t hog the whole WM_USER range. There should be some constant (say around 0x4000) where the rest of the WM_USER range can be used by the specific dialog box.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1017693">
				<div id="div-comment-1017693" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">ChrisR</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20121024-00/?p=6263#comment-1017693">
			October 24, 2012 at 11:11 am</a>		</div>

		<p>@Joshua: &nbsp;The range you seek does exist! &nbsp;It&#39;s just at 0x8000 instead of 0x4000. &nbsp;As Raymond would say, I can&#39;t believe I had to write that.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1017703">
				<div id="div-comment-1017703" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blogs.msdn.com/johnstonj_4000_inn_2D00_soft.com/ProfileUrlRedirect.ashx' rel='external nofollow' class='url'>johnstonj@inn-soft.com</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20121024-00/?p=6263#comment-1017703">
			October 24, 2012 at 11:33 am</a>		</div>

		<p>@Raymond: &nbsp;RegisterWindowMessage &quot;return value is a message identifier in the range 0xC000 through 0xFFFF&quot;. &nbsp;That&#39;s 16384 possibilities. &nbsp;The applications I&#39;ve done this with register a maximum of maybe 5 messages, at most. &nbsp;The names are a hard-coded string with a GUID, so they&#39;ll never conflict with anyone else. &nbsp;And they stay the same on every execution of the program (because I did read MSDN and learn of the low limit). &nbsp;In exchange I get a guarantee that nothing else uses the message &#8211; no 3rd-party library loaded in my program, no external app doing shenanigans hooking my app and using the same ID, etc. &nbsp;Let&#39;s say everyone does this &#8211; then I have to run at least 3277 unique programs before before exhausting the supply of message IDs. &nbsp;I&#39;d say in reality, if someone runs out of message identifiers, I&#39;d look for other offenders registering dozens to hundreds of IDs before looking at my app.</p>
<p>In theory you&#39;re right, but in practice I don&#39;t see the problem if you restrict yourself to only a very small handful of string IDs and always use the same IDs on every execution of your program. &nbsp;There are plenty of other low global user/GDI limits that could be exhausted first, dating back to Win16 in some cases.</p>
<p>In reality, the actual limit I hit first is the low size of the desktop heap. &nbsp;Given my heavy usage patterns, I have to increase the size of the desktop heap on every Windows system I use for development. &nbsp;Thankfully I learned about this issue on Mark Russinovich&#39;s blog, or I would still be puzzling over why programs session-wide seemed to be having trouble allocating user/GDI objects&#8230;</p>
<div class="post">[<i>Right, I was referring more to people who use a registered window message for everything. If every app registered 500 messages, you&#39;re going to run out of space. Also, registered window messages have to share space with registered window classes and registered clipboard formats. It&#39;s not like you have 16384 values exclusively for registered messages. Maybe I&#39;m just paranoid because I had to debug systems that had run out of registered window messages. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1017713">
				<div id="div-comment-1017713" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blogs.msdn.com/johnstonj_4000_inn_2D00_soft.com/ProfileUrlRedirect.ashx' rel='external nofollow' class='url'>johnstonj@inn-soft.com</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20121024-00/?p=6263#comment-1017713">
			October 24, 2012 at 11:38 am</a>		</div>

		<p>Oh &#8211; it seems the developers of .NET Framework use a similar technique for marshaling from a background thread to the user interface thread (which is one of the things I was needing a special message for). &nbsp;From private Control.MarshaledInvoke, which is called by Control.BeginInvoke in System.Windows.Forms (found using Reflector):</p>
<p>&nbsp; &nbsp; &nbsp; &nbsp;if (threadCallbackMessage == 0)</p>
<p>&nbsp; &nbsp; &nbsp; &nbsp;{</p>
<p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;threadCallbackMessage = SafeNativeMethods.RegisterWindowMessage(Application.WindowMessagesVersion + &quot;_ThreadCallbackMessage&quot;);</p>
<p>&nbsp; &nbsp; &nbsp; &nbsp;}</p>
<p>where Application.WindowMessagesVersion is &quot;WindowsForms12&quot;.</p>
<p>I know this isn&#39;t a .NET blog, but I tend to look at their implementations because more often than not they are following &quot;best practices.&quot; &nbsp;Or at the very least, &quot;everyone else is doing it that way&quot; because the framework is so widely used.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1017723">
				<div id="div-comment-1017723" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Peter</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20121024-00/?p=6263#comment-1017723">
			October 24, 2012 at 12:07 pm</a>		</div>

		<p>Interesting comment, James. &nbsp;I suspect that Winforms is using the RegisterWindowMessage technique because it&#39;s a library. &nbsp;It can&#39;t possibly know what hard-coded window message numbers the host app might be using.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1017743">
				<div id="div-comment-1017743" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20121024-00/?p=6263#comment-1017743">
			October 24, 2012 at 1:23 pm</a>		</div>

		<p>@ChrisR: See Dialog Box in DLL.</p>
<p>Forum keeps losing my post.</p>
<div class="post">[<i>It&#39;s not losing the post. It&#39;s blocking it because it looks like spam (too short). -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1017753">
				<div id="div-comment-1017753" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">ChrisR</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20121024-00/?p=6263#comment-1017753">
			October 24, 2012 at 1:50 pm</a>		</div>

		<p>@Joshua: I&#39;m not sure I see the problem. &nbsp;Your dialog box living in a DLL does not change the fact that you own it and hence you define the semantics of all WM_APP range messages that are sent to it.</p>
<p>If you need an interface for sending messages to your dialog box from external code then it is up to you to define that interface, whether it is a chunk of WM_APP carved out or a specific WM_APP+X with WPARAM/LPARAM differentiation.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1017763">
				<div id="div-comment-1017763" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20121024-00/?p=6263#comment-1017763">
			October 24, 2012 at 1:58 pm</a>		</div>

		<p>I&#39;m pretty sure that WM_APP was intended for application-wide broadcast and for subclassing DLL-based windows.</p>
<div class="post">[<i><code>WM_APP</code> is <a href="http://blogs.msdn.com/b/oldnewthing/archive/2003/12/02/55914.aspx" rel="nofollow">for the code that called <code>Create&shy;Window</code></a>. Of course, that code can in turn grant access to those messages to other components if it so wishes. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-fredericmagnyf odd alt thread-odd thread-alt depth-1" id="comment-1017783">
				<div id="div-comment-1017783" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Medinoc' rel='external nofollow' class='url'>Medinoc</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20121024-00/?p=6263#comment-1017783">
			October 25, 2012 at 3:45 am</a>		</div>

		<p>I&#39;ve also seen WM_USER+100 used as a base in various places (and I plead guilty to using it a few times of my own).</p>
<p>Also, about the .Net Framework part: That one registered message will be shared by all programs that use the same version of the Framework, so that sounds reasonable.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1017793">
				<div id="div-comment-1017793" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">MattT</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20121024-00/?p=6263#comment-1017793">
			October 25, 2012 at 4:55 am</a>		</div>

		<p>@Raymond:</p>
<p>&gt;&gt;&gt; &quot;It&#39;s not losing the post. It&#39;s blocking it because it looks like spam (too short). -Raymond&quot;</p>
<p>That&#39;s not my experience. There&#39;s several times when I&#39;ve submitted a post only for it to be silently dropped. I then paste (character-for-character) the exact same comment and it&#39;ll then be accepted (this process sometimes happens two or three times before the comment &quot;sticks&quot;).</p>
<p>I&#39;ve come to accept as a fact of life that I must copy any post I make to your blog to my clipboard before clicking &quot;Post&quot; for fear that the comment gets dropped at random.</p>
<div class="post">[<i>I have the two &quot;spam blocked&quot; messages in my inbox if you want to see them. (I&#39;m just saying that in this case, they were blocked for spam. Maybe there were other issues at other times.) The site also filters dups (I get email for those too), so it&#39;s possible that your first message was simply in holding, and then you submitted it a second time, and the first copy cleared the holding period, and the second copy was blocked for being a dup. It looks like the first copy was blocked and the second was posted, but it was actually the other way around. Again, not saying that&#39;s what happened to you, just saying that it happens. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1017803">
				<div id="div-comment-1017803" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Mordachai</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20121024-00/?p=6263#comment-1017803">
			October 25, 2012 at 6:32 am</a>		</div>

		<p>Sadly, I&#39;ve programmed for Windows since 3.0. &nbsp;And it was only last year that I realized that WM_USER wasn&#39;t for &quot;the code that called createwindow&quot;.</p>
<p>Hindsight 20/20 &#8211; perhaps WM_USER should have been WM_CLASS, and WM_APP -&gt; WM_USER (I think of myself as the programmer of a dialog box as the user. &nbsp;Wrong I may be, but I also intuited that WM_APP would be application-domain and WM_USER would be local-window-domain.</p>
<p>I&#39;m not sure why it took so many years to understand this distinction. &nbsp;I&#39;ve read piles of books and read this blog for quite some time, your book, but for whatever reason, this piece of info never got past my &quot;intuition filter.&quot;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1017813">
				<div id="div-comment-1017813" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">John</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20121024-00/?p=6263#comment-1017813">
			October 25, 2012 at 7:04 am</a>		</div>

		<p>@MattT: &nbsp;I, too, have taken up that behavior of copying my comments before posting. &nbsp;The blog software will silently drop your comment if you don&#39;t post it within a certain amount of time.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1017823">
				<div id="div-comment-1017823" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Mordachai</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20121024-00/?p=6263#comment-1017823">
			October 25, 2012 at 7:13 am</a>		</div>

		<p>In terms of this blog site working: works for me. &nbsp;Just requires patience to wait for Raymond to vet each post. :)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1017863">
				<div id="div-comment-1017863" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Cesar</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20121024-00/?p=6263#comment-1017863">
			October 25, 2012 at 9:20 am</a>		</div>

		<p>@MattT: From my experience, comments only &quot;stick&quot; if you post them quickly after loading the post. So you have to write the comment, copy it to the clipboard, reload the post, and then paste and submit your comment as soon as the page loads completely. If the resulting page after the submit does not have the green confirmation bar (or red, or other colors; green is for when Raymond does not have to approve it), it did not &quot;stick&quot; and you will have to try again. If you got the green (or red, or other color) confirmation bar, it worked; if it was not green, just wait for Raymond to approve the comment.</p>
<p>As people would say on that other site, the real WTF is this forum software&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1017893">
				<div id="div-comment-1017893" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Lee C.</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20121024-00/?p=6263#comment-1017893">
			October 25, 2012 at 10:22 am</a>		</div>

		<p>@MattT, @John: Before I ever started reading Old New Thing, I had come to accept as a fact of the WWW that I had to copy to the clipboard the contents of any text box that I spent more than a minute composing, for fear that something would go wrong with the form submission. I think it was the trauma of spending an hour composing my performance review in some HR web app that lost it all.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1017933">
				<div id="div-comment-1017933" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">James</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20121024-00/?p=6263#comment-1017933">
			October 25, 2012 at 11:35 am</a>		</div>

		<p>@ChrisR: For dialog box in a DLL, one approach that we&#39;ve used is to have the caller supply a window message (or a range of window messages) in the WM_APP space for the dialog box to use.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1017963">
				<div id="div-comment-1017963" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Silly (off topic)</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20121024-00/?p=6263#comment-1017963">
			October 25, 2012 at 4:42 pm</a>		</div>

		<p>At times while working off-site I&#39;ve noticed an inverse correlation between the length of time spent at dinner at the pub and whether one of my comments appears on this site.</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>