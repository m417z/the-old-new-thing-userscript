<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (10)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-1196971">
				<div id="div-comment-1196971" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Gabe</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150803-00/?p=91191#comment-1196971">
			August 3, 2015 at 7:21 am</a>		</div>

		<p>Typo: &quot;First, we calculate the values of x, y and x&quot;</p>
<p>Should be &quot;First, we calculate the values of x, y and z&quot;.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1196961">
				<div id="div-comment-1196961" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Oxford</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150803-00/?p=91191#comment-1196961">
			August 3, 2015 at 7:56 am</a>		</div>

		<p>Actually, it should be &quot;First, we calculate the values of x, y, and z&quot;.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-koldude even thread-even depth-1" id="comment-1196951">
				<div id="div-comment-1196951" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/kantos' rel='external nofollow' class='url'>kantos</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150803-00/?p=91191#comment-1196951">
			August 3, 2015 at 8:44 am</a>		</div>

		<p>I get the general feeling that if they hadn&#39;t bothered with the compiler driven OOO execution the concepts of Itanium make for an awesome architechture</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-fredericmagnyf odd alt thread-odd thread-alt depth-1" id="comment-1196941">
				<div id="div-comment-1196941" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Medinoc' rel='external nofollow' class='url'>Medinoc</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150803-00/?p=91191#comment-1196941">
			August 3, 2015 at 9:11 am</a>		</div>

		<p>So the &quot;parallel&quot; comparisons are exceptions to the rule that both predicates are set to opposite values?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1196931">
				<div id="div-comment-1196931" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Anonymous</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150803-00/?p=91191#comment-1196931">
			August 3, 2015 at 11:26 am</a>		</div>

		<p>In the cmp.xx.unc &nbsp;table is &quot;p = qp &amp;&amp; Â¬(r xx s)&quot; a typo? &nbsp;I think this should be q = &#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1196911">
				<div id="div-comment-1196911" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Julie Koubova</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150803-00/?p=91191#comment-1196911">
			August 3, 2015 at 5:25 pm</a>		</div>

		<p>I love this series, I&#39;ve never really used anything else than x86 and it really puts things into perspective, seeing how different other platforms can be :) Thank you, Raymond!</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1196901">
				<div id="div-comment-1196901" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">boogalooo</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150803-00/?p=91191#comment-1196901">
			August 4, 2015 at 1:00 am</a>		</div>

		<p>@kantos You probably wouldn&#39;t have been able to implement OOO in hardware and include everything else that Itanium had. Itanium was one of Intels more successful follies. Hopefully the better ideas turned up in their x64 backend</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1196891">
				<div id="div-comment-1196891" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Neil</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150803-00/?p=91191#comment-1196891">
			August 4, 2015 at 3:59 am</a>		</div>

		<p>The &quot;really&quot; column is the same as the &quot;meaning&quot; column with operands reversed i.e. p = (a xx b) || p etc.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1196881">
				<div id="div-comment-1196881" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">boogaloo</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150803-00/?p=91191#comment-1196881">
			August 4, 2015 at 4:12 am</a>		</div>

		<p>@Neil What is your point? The difference between the &quot;meaning&quot; and the &quot;really&quot; is that the &quot;meaning&quot; column states that p &amp; q are always updated. The &quot;really&quot; column states that p &amp; q are only updated in one outcome of the evaluation, in the other the register is not updated at all. This means that as long as instructions are only going to set or clear the registers then they can be run at the same time. If one could set and the next could clear then they cannot be run at the same time, they have to be run sequentially. It makes no difference to you as the programmer if p is clear and the comparison is not going to set it, but to hardware it makes a difference.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1196851">
				<div id="div-comment-1196851" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Zack</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150803-00/?p=91191#comment-1196851">
			August 4, 2015 at 7:30 am</a>		</div>

		<p>I was pretty harsh on the memory addressing last week, so I feel I ought to say that the comparison instructions and predicate registers are IMNSHO something Itanium got *right* and it&#39;s too bad no one else has picked up on them. &nbsp;(I only know about two greenfield ISA designs since: AArch64 and RISC-V. &nbsp;AArch64 appears to have a traditional, single flags register, and RISC-V has fused compare-and-branch instructions. &nbsp;If there&#39;s a design I&#39;ve missed I&#39;d be glad to hear about it.)</p>
<p>If you have an OOO core, conditional *execution* of most non-branch instructions turns out to be a net lose, because it wastes fetch and decode bandwidth, and it doesn&#39;t give the branch predictor a chance to work its magic. &nbsp;However, I think a hybrid design with Itanium-like comparisons and predicates, but a limited set of conditional instructions (branch, reg-reg move, set-to-immediate, and maybe load/store) would work out well.</p>
<p>(Also, unconditional load/store of single predicate registers to RAM would be convenient. &nbsp;I don&#39;t remember if Itanium had that.)</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>