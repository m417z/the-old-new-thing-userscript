<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (40)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-237623">
				<div id="div-comment-237623" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://lundie.ca/' rel='external nofollow' class='url'>Chris Lundie</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041227-00/?p=36883#comment-237623">
			December 27, 2004 at 7:16 am</a>		</div>

		<p>Sure enough, I&#8217;ve written an app that will loop forever and ever when it encounters one of these. It&#8217;s on a background thread and you can cancel it, but it will never get any real work done.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-237633">
				<div id="div-comment-237633" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Stuart Brockman</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041227-00/?p=36883#comment-237633">
			December 27, 2004 at 7:29 am</a>		</div>

		<p>Probably the best thing to do would be to totally ignore folders with FILE_ATTRIBUTE_REPARSE_POINT set&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-237643">
				<div id="div-comment-237643" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Jonathan</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041227-00/?p=36883#comment-237643">
			December 27, 2004 at 7:31 am</a>		</div>

		<p>Hehe.  Time for me to make some changes to one of my programs&#8230;. :-)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-237653">
				<div id="div-comment-237653" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Diego</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041227-00/?p=36883#comment-237653">
			December 27, 2004 at 7:38 am</a>		</div>

		<p>Does NTFS support unix-like symbolick links? (It&#8217;s very easy to create recursive directories in unix, just link to yourself)</p>
<p>I though NTFS supported &quot;hard links&quot; but I&#8217;m not sure about &quot;symbolic links&quot;. Any pointers?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-237673">
				<div id="div-comment-237673" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Elliot</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041227-00/?p=36883#comment-237673">
			December 27, 2004 at 8:29 am</a>		</div>

		<p>Nice article! I notice that after recursing 16 times (either from cmd.exe or Explorer), I see an error &quot;The name of the file cannot be resolved by the system&quot;. Where is that safeguard implemented? &quot;Inside Windows 2000&quot; says that Explorer will only browse 32 directories deep, and cmd.exe will only browse paths less than 256 characters, but this seems to be a third safety net built in at a lower level to prevent misbehaved applications from hurting everyone.</p>
<p>Also, it seems like applications that process directory trees could easily detect if any recursive directories exist in the tree they are about to process by making use of the Win32 mount point scanning functions. For a given volume, scan all the mount points, saving away the source path and checking to see if the target path exists in the list of source paths. Any target path that is also contained in a source path is recursive. Using the mount point enumeration functions along with an STL set makes this dead simple, and gives your application much more sophisticated functionality than simply skipping all reparse points as suggested by a previous comment.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-237683">
				<div id="div-comment-237683" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://david.acz.org/' rel='external nofollow' class='url'>David Phillips</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041227-00/?p=36883#comment-237683">
			December 27, 2004 at 8:33 am</a>		</div>

		<p>Diego: Junctions are very similar to symbolic links, but they can only be used with directories.</p>
<p><a target="_new" href="http://www.sysinternals.com/ntw2k/source/misc.shtml#junction" rel="nofollow">http://www.sysinternals.com/ntw2k/source/misc.shtml#junction</a></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-237703">
				<div id="div-comment-237703" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Anonymous Coward</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041227-00/?p=36883#comment-237703">
			December 27, 2004 at 8:54 am</a>		</div>

		<p>More troubling is that you only have 2GB of disk space left.  That is nowhere near enough to swing a computer cat these days :-)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-237713">
				<div id="div-comment-237713" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.livejournal.com/users/merle_/' rel='external nofollow' class='url'>Merle</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041227-00/?p=36883#comment-237713">
			December 27, 2004 at 9:03 am</a>		</div>

		<p>Hey!  I only have ~200M left on each of my three partitions.  It&#8217;s enough if you&#8217;re careful.</p>
<p>It also helps to be running way older OSes. ;-)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-237723">
				<div id="div-comment-237723" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://weblogs.asp.net/oldnewthing/' rel='external nofollow' class='url'>Raymond Chen</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041227-00/?p=36883#comment-237723">
			December 27, 2004 at 9:07 am</a>		</div>

		<p>Elliot: Watch out for mutual recursion, and good luck getting this to work on a network volume&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-237743">
				<div id="div-comment-237743" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://24.odessa.ua/' rel='external nofollow' class='url'>AT</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041227-00/?p=36883#comment-237743">
			December 27, 2004 at 9:13 am</a>		</div>

		<p>Raymond,</p>
<p>I&#8217;ve observed this very-very long time ago.<br />
<br />Mark Rusinovich in his initial version (1.01 or something like this) of junction tool created a link to  &quot;C:Folder&quot; with slash at end. This disallowed to create junction on existing juction &#8211; only on real folder.</p>
<p>I&#8217;ve found that this is trivialy possible to remove a trailing slash and allow creation of junction on junctions.<br />
<br />I.e.<br />
<br />C:Folder  Real rolder<br />
<br />C:Link1   Link to Folder<br />
<br />C:Link2   Now possible to make a link to Link1 &#8211; not only on real folder </p>
<p>I&#8217;ve emailed my finding to Mark and he included my lame C++ hack into his source code at Junction version 1.02 </p>
<p>You can still see my  (recently a little bit modified to use tchar.h) 4 lines of lame source code removing trailing slash by zeroing it out &#8211; for all cases except &quot;&lt;drive&gt;:&quot; in current Junction. </p>
<p>In the same time I&#8217;ve found that NT filesystem driver will follow reparse points at most 16 times.<br />
<br />I.e. in case if you do  Link17 -&gt; Link16 -&gt; Link15 -&gt; &#8230; -&gt; Link2 -&gt; Link1 -&gt; RealFolder  &#8211; this will fail.<br />
<br />As well C:CCCCCCCCCCCC will have same 16 limit as Elliot has found.<br />
<br />This is probably to detect infinite loops in reparse links &#8211; as I&#8217;ve found this is possible to make a link on link and filesystem will follow them.</p>
<p>Even more &#8211; your statement about &quot;infinitely recursive directory tree&quot; is not true due to additional limitation &#8211; MAX_PATH length. For some API this is 255 characters, for native &#8211; this is 32K ( <a target="_new" href="http://msdn.microsoft.com/library/en-us/fileio/base/naming_a_file.asp" rel="nofollow">http://msdn.microsoft.com/library/en-us/fileio/base/naming_a_file.asp</a> )<br />
<br />Correct me if I wrong &#8211; this is related to unsigned 16-bit Length field in UNICODE_STRING structure.</p>
<p>So &#8211; this is not an infinite &#8211; but limited by some exponent (something I agree &#8211; value of this exponent can be more that number of particles in universe ;-)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-237753">
				<div id="div-comment-237753" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.codeproject.com/script/articles/list_articles.asp?userid=152' rel='external nofollow' class='url'>Mike Dunn</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041227-00/?p=36883#comment-237753">
			December 27, 2004 at 9:47 am</a>		</div>

		<p>Diego&gt; NTFS has always supported hard links, but before Win 2K there wasn&#8217;t an easy way to make one. Win 2K added the CreateHardLink() function.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-237773">
				<div id="div-comment-237773" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Peter da Silva</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041227-00/?p=36883#comment-237773">
			December 27, 2004 at 10:13 am</a>		</div>

		<p>If your program descends the directory tree by changing its current directory each step of the way, won&#8217;t it avoid blowing out the path length limits?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-237783">
				<div id="div-comment-237783" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Brent Dax</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041227-00/?p=36883#comment-237783">
			December 27, 2004 at 10:53 am</a>		</div>

		<p>Of course, most Unix tools worth the hard drive space they&#8217;re stored on already know about links&#8211;hard and symbolic&#8211;and are written to handle them&#8230;</p>
<p>&quot;Those who don&#8217;t understand UNIX are doomed to reinvent it, poorly.&quot;<br />
<br />&#8211;Henry Spencer</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-237803">
				<div id="div-comment-237803" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Tim Smith</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041227-00/?p=36883#comment-237803">
			December 27, 2004 at 11:22 am</a>		</div>

		<p>&quot;Of course, most Unix tools worth the hard drive space they&#8217;re stored on already know about links&#8211;hard and symbolic&#8211;and are written to handle them&#8230; &quot;</p>
<p>Easy thing to say when you restrict the set of tools so heavily.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-237813">
				<div id="div-comment-237813" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">asdf</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041227-00/?p=36883#comment-237813">
			December 27, 2004 at 11:22 am</a>		</div>

		<p>What I&#8217;ve been doing is storing dwVolumeSerialNumber, nFileIndexHigh, and nFileIndexLow (from BY_HANDLE_FILE_INFORMATION) of all directories I process to make sure I don&#8217;t revisit them. Too lazy to test it on junctions or over the network (it&#8217;s for an internal tool used for mapping permutations of the same pathname to a unique id, not to protect against infinite recursion anyway). I don&#8217;t really like skipping over (sym|hard)links as opposed to processing them once, but that&#8217;s just me.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-237823">
				<div id="div-comment-237823" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.foxyshadis.com' rel='external nofollow' class='url'>foxyshadis</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041227-00/?p=36883#comment-237823">
			December 27, 2004 at 12:01 pm</a>		</div>

		<p>I wish PHP and Perl had better native support of NTFS filesystem gotchas like this (and reiserFS and advFS as well), at the risk of bloating them even more. (I wouldn&#8217;t mind a mod_ntfs.) Their strength is that they can do many formerly complicated things with ease and efficiency, yet their only support of remotely advanced filesystems is through raw system calls &#8211; thankfully PHP5&#8217;s win32 api finally <em>works</em>.</p>
<p>I would be so glad to leave vbscript behind for specialized windows tasks if I could find anything else that didn&#8217;t feel like writing a compiler in VB3.</p>
<p>Peter, if you change to the folder, such as cd C:CCC, you&#8217;ll find yourself in a folder with that label &#8211; that is, after all, the expected behavior. You&#8217;re trying to trick programs into believing that some other folder is really here, for some convenience.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-237843">
				<div id="div-comment-237843" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joe Dietz</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041227-00/?p=36883#comment-237843">
			December 27, 2004 at 12:08 pm</a>		</div>

		<p>Having actually implemented reparse point support in an IFS file system before, I found somewhat different behavior in the server versions of the OS.  I though that reparse point recursion was limitted to some fairly small number like 8 STATUS_REPARSE_POINT returns from the file system.  Something about how DFS is structured with (8?) levels of nesting when using reparse points also led me to believe this.</p>
<p>Anyways I added my own recusion checking into my reparse point implementation just to be safe so as to not allow such things from happening.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-237863">
				<div id="div-comment-237863" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Memet</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041227-00/?p=36883#comment-237863">
			December 27, 2004 at 12:39 pm</a>		</div>

		<p>AT: Thanks for that info man, it&#8217;s exactly what I needed to know. I&#8217;m wondering if there is some other hack (a-la inheritable permissions etc) that would allow me to limit to a single recurse down.<br />
<br /> I have a website engine for multiple users that can be accessed via either user.example.com or <a href="http://www.example.com/~user" rel="nofollow">http://www.example.com/~user</a>. The way it works is that when a user site is created, the app just symlinks the root folder to itself using ~user. It works great, except that you can write garbage like <a href="http://www.example.com/~user1/~user2/~user22314.." rel="nofollow">http://www.example.com/~user1/~user2/~user22314..</a>. Which is fine, the internal logic recognizes garbage and just returns &quot;site not found&quot;, but I was curious if there&#8217;s a way to limit the recursion depth to a single level.</p>
<p> Anyways, happy new year to you all.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-237873">
				<div id="div-comment-237873" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://pompo500.xs.fi/' rel='external nofollow' class='url'>pompo500</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041227-00/?p=36883#comment-237873">
			December 27, 2004 at 12:44 pm</a>		</div>

		<p>These are the kind of articles I visit your blog for. Interesting, educating and fun. More of these please!</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-237883">
				<div id="div-comment-237883" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Memet</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041227-00/?p=36883#comment-237883">
			December 27, 2004 at 12:49 pm</a>		</div>

		<p>The recursion depth, quite interestingly, is not limited to the number of junctions followed, but rather to the number of directories in the entire path&#8230; at least that&#8217;s the way the command prompt behaves (maybe it&#8217;s a prompt limitation, I haven&#8217;t tested direct API calls).<br />
<br /> So if you start this self recursion at say &quot;z:datafolder~folder&quot;, then you get only 14 junction recursions.<br />
<br /> More interesting: if you create a 16 folder deep directory structure and create a junction at the deepest folder, you can still delve down. But after a while (which I couldn&#8217;t figure out the logic for) cmd.exe returns:<br />
<br />&quot;The name of the file cannot be resolved by the system.&quot;</p>
<p> It seems to me like there was a manual hack added into the NTFS driver that maybe doesn&#8217;t cover all cases?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-237893">
				<div id="div-comment-237893" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Memet</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041227-00/?p=36883#comment-237893">
			December 27, 2004 at 1:06 pm</a>		</div>

		<p>Joe Dietz: did you detect cycles? or did you check if two adjacent symlinks where the same?<br />
<br /> For example, you could have this1 and this2 point to the .<br />
<br /> Would your driver detect .this1this2this1this2&#8230;? (just checking =)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-237903">
				<div id="div-comment-237903" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://geekswithblogs.net/bpaddock' rel='external nofollow' class='url'>Brandon Paddock</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041227-00/?p=36883#comment-237903">
			December 27, 2004 at 1:39 pm</a>		</div>

		<p>&quot;Probably the best thing to do would be to totally ignore folders with FILE_ATTRIBUTE_REPARSE_POINT set&#8230; &quot;</p>
<p>And this is why mounting drives as folders doesn&#8217;t work as expected for some of us =/</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-237913">
				<div id="div-comment-237913" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Peter da Silva</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041227-00/?p=36883#comment-237913">
			December 27, 2004 at 3:33 pm</a>		</div>

		<p>foxyshadis: the label on the directory is only relevant if the program generates a fully qualified path name for the files or directories it&#8217;s traversing.</p>
<p>If, for example, it&#8217;s just looking for files of a certain kind or containing certain information (for example, it&#8217;s looking for files over a certain size, or files indicating that an index is to be created for the directory on a website, or just pulling some information out of configuration files) then it may get in the loop without ever attempting to pass an excessively long file name or path to the OS.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-237953">
				<div id="div-comment-237953" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Surf.</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041227-00/?p=36883#comment-237953">
			December 27, 2004 at 6:33 pm</a>		</div>

		<p>Will it end up in a stack overflow?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-237963">
				<div id="div-comment-237963" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Norman Diamond</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041227-00/?p=36883#comment-237963">
			December 27, 2004 at 7:33 pm</a>		</div>

		<p>I once had to fix up a partition that had an infinitely recursive directory tree.  It was on FAT (16 or 32 I don&#8217;t recall) under Windows 95 B.  I do not know what my then-boss had done to create it.  Windows 95 Explorer and DOS command prompt were all following it as they would any normal directory entry, same as VMS did with its 000000 directory entries.  I did get rid of it, but don&#8217;t remember how.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-237983">
				<div id="div-comment-237983" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ian Argent</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041227-00/?p=36883#comment-237983">
			December 27, 2004 at 7:49 pm</a>		</div>

		<p>Is there any way for me to mount a UNC name (on a network server, not local) so that it appears to be a local directory? Specifically, I need to point documents &amp; Settings&lt;username&gt;My documents to \servenamesharenamedocuments and have this be invisible to a cranky application. (\servernamesharenamedocuments resides on a RAID, but I have a couple of applications that take various forms of exception to &quot;My Documents&quot; beings mapped to a UNC or to a mapped network drive &#8211; those being the options I tried)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-237923">
				<div id="div-comment-237923" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://lazybones.ca/blog/index.php?p=25' rel='external nofollow' class='url'>Anonymous</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041227-00/?p=36883#comment-237923">
			December 27, 2004 at 8:42 pm</a>		</div>

		<p>lazybones &amp;raquo;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-238043">
				<div id="div-comment-238043" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">:-(</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041227-00/?p=36883#comment-238043">
			December 28, 2004 at 8:27 am</a>		</div>

		<p>In real applications it seems that nobody cares about FILE_ATTRIBUTE_REPARSE_POINT flag. I tested some applications like AntiVir and Nero Burning ROM and they all do the recursion.<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-238053">
				<div id="div-comment-238053" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joe Dietz</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041227-00/?p=36883#comment-238053">
			December 28, 2004 at 9:00 am</a>		</div>

		<p>Memet: when writing a file system you are in control of the verticaland the horizontal.  Its actually fairly easy to detect recursion by simply detecting reentrancy.  When you raise status reparse you increment a field of your irp context structure.  If that counter exceeds whatever recusion thresh hold you choose you don&#8217;t raise status reparse, you raise a invalid path status instead.  I actually did this based on what I believe to be NTFS&#8217;s reparse point behaviors at least on the server versions of the OS.  Perhaps I was mistaken about this observation due to all of the reports here to the contrary.  But it is not clear if we are all talking about the same apples here.</p>
<p>Path length checks at least for things like cmd.exe and explorer.exe are all done in the win32 layer btw.   This seems to be for 16-bit compatibility reasons. NTFS and most other file systems have max path checking, as well, but typically on whole integer sized paths (the unicode path length is how this is experienced by win32 apps since all file systems see UTF paths that win32 generates or passes through to the kernel).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-238213">
				<div id="div-comment-238213" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Matt</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041227-00/?p=36883#comment-238213">
			December 28, 2004 at 11:48 am</a>		</div>

		<p>Norman, I&#8217;ll up your ante: I remember playing around with this type of thing on the Commodore 64 disk drive to &#8216;hide&#8217; files.  The file structure was a linnked list and you could edit the link to point back to itself.</p>
<p>Man, I was a geek even back in middle school&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-238343">
				<div id="div-comment-238343" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://weblogs.asp.net/oldnewthing/archive/2004/12/29/343664.aspx' rel='external nofollow' class='url'>The Old New Thing</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041227-00/?p=36883#comment-238343">
			December 29, 2004 at 10:00 am</a>		</div>

		<p>The problem with enumeration is that somebody always loses.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-238743">
				<div id="div-comment-238743" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.jasmusic.com' rel='external nofollow' class='url'>Joshua Schaeffer</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041227-00/?p=36883#comment-238743">
			December 30, 2004 at 4:24 pm</a>		</div>

		<p>I remember deleting a reparse point from within Windows 2000&#8217;s Explorer and rather than simply kill the link, it delved inside and started recursively deleting the guts of the linked folder. I was just a trifle disgusted.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-238953">
				<div id="div-comment-238953" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Peter da Silva</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041227-00/?p=36883#comment-238953">
			January 1, 2005 at 11:22 am</a>		</div>

		<p>&quot;(set &#8216;yak &#8216;(yak)) (rplacd yak yak) yak&quot; &#8212; Lisp 1.5, 1970&#8217;s</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-238983">
				<div id="div-comment-238983" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Stefan Kanthak</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041227-00/?p=36883#comment-238983">
			January 1, 2005 at 9:15 pm</a>		</div>

		<p>Joshua: that&#8217;s one of the nasty sides of Explorer!<br />
<br />If you want to use junctions with the GUI you&#8217;d better install a shell extension like &quot;NTFS Link&quot; from <a target="_new" href="http://www.elsdoerfer.net/" rel="nofollow">http://www.elsdoerfer.net/</a> which implements the necessary hooks and handlers to repair these flaws.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-239093">
				<div id="div-comment-239093" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blogs.sqlxml.org/vinodkumar/archive/2005/01/04/2201.aspx' rel='external nofollow' class='url'>Vinod Kumar's Blog</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041227-00/?p=36883#comment-239093">
			January 4, 2005 at 12:06 am</a>		</div>

		
		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-241613">
				<div id="div-comment-241613" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://jazzynupe.no-ip.com/blog/archive/2005/01/10/578.aspx' rel='external nofollow' class='url'>Deep Thoughts...</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041227-00/?p=36883#comment-241613">
			January 10, 2005 at 7:45 pm</a>		</div>

		
		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-386993">
				<div id="div-comment-386993" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://bloggingabout.net/blogs/jschreuder/archive/2006/06/01/12284.aspx' rel='external nofollow' class='url'>Jan Schreuder on .Net</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041227-00/?p=36883#comment-386993">
			June 1, 2006 at 6:15 am</a>		</div>

		<p>In my previous post I explained how you could build a class that uses recursion to scan through directories&#8230;.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-434413">
				<div id="div-comment-434413" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blogs.msdn.com/oldnewthing/archive/2006/10/25/872891.aspx' rel='external nofollow' class='url'>The Old New Thing</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041227-00/?p=36883#comment-434413">
			October 25, 2006 at 10:00 am</a>		</div>

		<p>Punt.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-435253">
				<div id="div-comment-435253" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://rohand.com/2006/10/26/extremely-important-no-joke/' rel='external nofollow' class='url'>appytizers &raquo; Blog Archive &raquo; Extremely Important - NO JOKE</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041227-00/?p=36883#comment-435253">
			October 26, 2006 at 3:42 am</a>		</div>

		<p>PingBack from <a rel="nofollow" target="_new" href="http://rohand.com/2006/10/26/extremely-important-no-joke/" rel="nofollow">http://rohand.com/2006/10/26/extremely-important-no-joke/</a></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-741143">
				<div id="div-comment-741143" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blog.rebex.net/news/archive/2009/06/02/howto-download-all-files-from-a-remote-ftp-directory-and-save-them-to-a-local-disk.aspx' rel='external nofollow' class='url'>Using Rebex.Net</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041227-00/?p=36883#comment-741143">
			June 2, 2009 at 11:16 am</a>		</div>

		<p>Shows how to download files from a remote FTP server. Demonstrates how to handle files which already exist on the target disk, how to work with symlinks and hardlinks. Shows how to let the user choose what to do when a transfer problem is detected.</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>