<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (11)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-1172723">
				<div id="div-comment-1172723" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150123-00/?p=44843#comment-1172723">
			January 23, 2015 at 7:09 am</a>		</div>

		<p>Well, I never thought I&#39;d see AddRef like that!</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1172733">
				<div id="div-comment-1172733" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Rick C</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150123-00/?p=44843#comment-1172733">
			January 23, 2015 at 7:12 am</a>		</div>

		<p>It&#39;s not the first time Raymond&#39;s done that (I don&#39;t think) and I believe I&#39;ve seen it elsewhere once or maybe twice. &nbsp;You can use that when you can be sure you control the lifetime of the object, IIRC.</p>
<div class="post">[<em>It&#39;s been done <a href="http://www.bing.com/search?q=addref+%22return+2%22">many times</a>. -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1172743">
				<div id="div-comment-1172743" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">foo</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150123-00/?p=44843#comment-1172743">
			January 23, 2015 at 7:19 am</a>		</div>

		<p>&gt; Well, I never thought I&#39;d see AddRef like that!</p>
<p>I reckon it&#39;s called confidence.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-wndsks odd alt thread-odd thread-alt depth-1" id="comment-1172753">
				<div id="div-comment-1172753" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/skSdnW' rel='external nofollow' class='url'>skSdnW</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150123-00/?p=44843#comment-1172753">
			January 23, 2015 at 7:38 am</a>		</div>

		<p>I believe the static IUnknown trick is only safe in exe files and dlls without a DllCanUnloadNow export. The object/function you pass your interface to is allowed to hang on to it as long as they want which means your dll might be unloaded by the time they call Release. I see no reason why IShellFolder would cache the IBindCtx but that does not make it right. The same goes for CBindCtxBuilder on the stack.</p>
<div class="post">[<em>The CBindCtxBuilder is not passed to ParseDisplayName. The bind context created by CreateBindCtx is passed, and that has its own reference count. as for the static object: It&#39;s no less safe than having a reference-counted dummy object, because the code for the dummy object&#8230; is in your DLL! -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-wndsks even thread-even depth-1" id="comment-1172763">
				<div id="div-comment-1172763" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/skSdnW' rel='external nofollow' class='url'>skSdnW</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150123-00/?p=44843#comment-1172763">
			January 23, 2015 at 7:56 am</a>		</div>

		<p>@Raymond. A reference-counted dummy object would Increment/Decrement the counter used by DllCanUnloadNow in its constructor/destructor so the your dll would not be unloaded if somebody decided to cache your dummy object&#8230;</p>
<div class="post">[<em>Good point. The static object (if in an unloadable DLL) would still need a reference count. -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-wndsks odd alt thread-odd thread-alt depth-1" id="comment-1172773">
				<div id="div-comment-1172773" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/skSdnW' rel='external nofollow' class='url'>skSdnW</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150123-00/?p=44843#comment-1172773">
			January 23, 2015 at 8:03 am</a>		</div>

		<p>I see you are using STR_FILE_SYS_BIND_DATA_WIN7_FORMAT so let me dare to ask, what is the difference between a XP, 7 and 8.1 STR_FILE_SYS_FIND_DATA? Is it only a difference in the internal pidl format?</p>
<div class="post">[<em>I don&#39;t know. I just picked that because it illustrated one of the scenarios. -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1172783">
				<div id="div-comment-1172783" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Neil</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150123-00/?p=44843#comment-1172783">
			January 24, 2015 at 3:00 am</a>		</div>

		<p>The static object could increment/decrement the counter used by DllCanUnloadNow in its Addref/Release methods.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-ietest odd alt thread-odd thread-alt depth-1" id="comment-1173023">
				<div id="div-comment-1173023" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/crack+tracker' rel='external nofollow' class='url'>crack tracker</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150123-00/?p=44843#comment-1173023">
			January 28, 2015 at 3:58 am</a>		</div>

		<p>instead of the dummy unknown, for these plain 0-1 option strings I found that passing the bind context ITSELF in RegisterObjectParam does the trick. No need for separate dodgy objects, you can do dodgy IUnknown with IBindCtx itself :)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-ietest even thread-even depth-1" id="comment-1173033">
				<div id="div-comment-1173033" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/crack+tracker' rel='external nofollow' class='url'>crack tracker</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150123-00/?p=44843#comment-1173033">
			January 28, 2015 at 4:47 am</a>		</div>

		<p>PS. not such a good idea after all, that would create circular references to our IBindCtx. It is possible to &quot;undo&quot; these by calling RevokeObjectParam after use but the simplicity of the idea is gone&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1173263">
				<div id="div-comment-1173263" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Anti pattern deluxe</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150123-00/?p=44843#comment-1173263">
			January 28, 2015 at 10:26 pm</a>		</div>

		<p>Is COM ugly or what? Be gone with it!</p>
<div class="post">[<em>You seem to be confusing my showing how to do something with an endorsement of it. This happens a lot when I share a tip on batch file programming. (And of course I have yet to see anybody propose an alternative that is language-independent.) -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1173583">
				<div id="div-comment-1173583" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Anonymous Coward</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150123-00/?p=44843#comment-1173583">
			January 29, 2015 at 3:59 pm</a>		</div>

		<p>@Anti pattern deluxe</p>
<p>Don&#39;t confuse &quot;COM is ugly&quot; with &quot;Some COM objects are ugly&quot;.</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>