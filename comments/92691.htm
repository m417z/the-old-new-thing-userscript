<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (14)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-1220111">
				<div id="div-comment-1220111" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">12BitSlab</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20151222-00/?p=92691#comment-1220111">
			December 22, 2015 at 7:14 am</a>		</div>

		<p>Raymond, I used to see that with .Net 1.1 managed code.  Haven&#8217;t seen that from 2.0 and up.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1220121">
				<div id="div-comment-1220121" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ben Voigt</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20151222-00/?p=92691#comment-1220121">
			December 22, 2015 at 7:20 am</a>		</div>

		<p>I can readily believe that collecting exception details into a string might run out of memory.</p>
<p>That said, they managed to log/display *something*.  I feel that before throwing up one&#8217;s hands in defeat, it would have been better to fall back to just the exception typename, which gives at least some information about what bombed.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1 parent" id="comment-1220131">
				<div id="div-comment-1220131" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://adamrosenfield.com' rel='external nofollow' class='url'>Adam Rosenfield</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20151222-00/?p=92691#comment-1220131">
			December 22, 2015 at 7:29 am</a>		</div>

		<p>Clearly the developer never tested the exception path.  I&#8217;d wager that the custom Exception subclass is NRE&#8217;ing on some field of its.</p>

		
				</div>
		<ol class="children">
		<li class="comment odd alt depth-2 parent" id="comment-1220152">
				<div id="div-comment-1220152" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20151222-00/?p=92691#comment-1220152">
			December 22, 2015 at 9:42 am</a>		</div>

		<p>A search of the internet shows a bunch of random hits with the exact same message text. I&#8217;m led to believe the error message really is in some older version of Exception.ToString() itself, that is, it&#8217;s wrapped in a try-catch and returns that constant string on failure. I checked sourceof.net and it&#8217;s not there now though.</p>

		
				</div>
		<ol class="children">
		<li class="comment even depth-3" id="comment-1220164">
				<div id="div-comment-1220164" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">NTAuthority</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20151222-00/?p=92691#comment-1220164">
			December 22, 2015 at 1:21 pm</a>		</div>

		<p>It&#8217;s still there in the open-source CoreCLR: <a href="https://github.com/dotnet/coreclr/blob/ff328b606c4edad13e9a211a8d89288340952f4c/src/vm/excep.cpp#L5947" rel="nofollow">https://github.com/dotnet/coreclr/blob/ff328b606c4edad13e9a211a8d89288340952f4c/src/vm/excep.cpp#L5947</a> (the reference string is elsewhere, an internet search for the constant shows it&#8217;s said string) :)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-ranta odd alt depth-3" id="comment-1220191">
				<div id="div-comment-1220191" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/ranta' rel='external nofollow' class='url'>ranta</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20151222-00/?p=92691#comment-1220191">
			December 23, 2015 at 12:45 am</a>		</div>

		<p>CoreCLR calls that error message IDS_EE_EXCEPTION_TOSTRING_FAILED: <a href="https://github.com/dotnet/coreclr/blob/bc146608854d1db9cdbcc0b08029a87754e12b49/src/dlls/mscorrc/mscorrc.rc#L1409" rel="nofollow">https://github.com/dotnet/coreclr/blob/bc146608854d1db9cdbcc0b08029a87754e12b49/src/dlls/mscorrc/mscorrc.rc#L1409</a><br />
I don&#8217;t see any code loading that string though. Perhaps it&#8217;s only used in the full .NET Framework.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment even thread-odd thread-alt depth-1" id="comment-1220132">
				<div id="div-comment-1220132" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">DysgraphicProgrammer</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20151222-00/?p=92691#comment-1220132">
			December 22, 2015 at 8:24 am</a>		</div>

		<p>Classic Fail-Fail. The tool fails, then while trying to print an error message, it fails at that. The programmer probably never tested fail cases.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-even depth-1" id="comment-1220142">
				<div id="div-comment-1220142" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">MV</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20151222-00/?p=92691#comment-1220142">
			December 22, 2015 at 8:25 am</a>		</div>

		<p>I&#8217;ve hit something like that, only there was no try/catch around the call to exception.ToString().  Deep down something went wrong, it created a subclassed Exception object, added a set of key/value pairs to (with diagnostic info), then threw it.  Near the top it caught the exception and tried to log it by dumping out the key/value pairs.  Only it used value.ToString(), and if the value was null, the act of ToString()-ing it would throw an exception.  So instead of a nice clear error message, you get an &#8220;impossible&#8221; situation where a throw deep down made it all the way out without being caught (or so it seemed) and the program crashed.  Took FOREVER to figure out what was going on!</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-odd thread-alt depth-1" id="comment-1220151">
				<div id="div-comment-1220151" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Mike S</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20151222-00/?p=92691#comment-1220151">
			December 22, 2015 at 8:43 am</a>		</div>

		<p>My best guess is that whatever threw the exception passed in a null message. ToString() tried to read the message, failed, and fell over.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-fleet-command odd alt thread-even depth-1 parent" id="comment-1220161">
				<div id="div-comment-1220161" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Fleet+Command' rel='external nofollow' class='url'>Fleet Command</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20151222-00/?p=92691#comment-1220161">
			December 22, 2015 at 10:12 am</a>		</div>

		<p>It&#8217;s a .NET Framework error.</p>
<p>And if I had to guess, I&#8217;d say someone didn&#8217;t do a good job of creating an exception object in ASP.NET. But that&#8217;s based on a mere unreliable assumption.</p>

		
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-cheong even depth-2 parent" id="comment-1220182">
				<div id="div-comment-1220182" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/cheong00' rel='external nofollow' class='url'>cheong00</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20151222-00/?p=92691#comment-1220182">
			December 22, 2015 at 5:19 pm</a>		</div>

		<p>Yup. .NET v4.5 introduced a feature that it&#8217;ll delay initialization of all classes until their first usage. Unfortunately it caused bug on static/const strings that assumed the String class is always initialized.</p>
<p>In the second time you run it, the String class (and possibly the class that caused the bug) is initialized hence the code works the second time.</p>
<p>The bug is fixed in other v4.5.x updates and v4.6.</p>

		
				</div>
		<ol class="children">
		<li class="comment odd alt depth-3" id="comment-1220351">
				<div id="div-comment-1220351" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Kathy O'Hara</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20151222-00/?p=92691#comment-1220351">
			December 25, 2015 at 3:22 am</a>		</div>

		<p>If true, turning it off and on again would have actually prevented it from working.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment even thread-odd thread-alt depth-1" id="comment-1220171">
				<div id="div-comment-1220171" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">nobugz</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20151222-00/?p=92691#comment-1220171">
			December 22, 2015 at 2:17 pm</a>		</div>

		<p>IErrorInfo.GetDescription failed with E_FAIL(0x80004005)</p>
<p>Well, that was accurate.  Special kudos to E_UNEXPECTED = &#8220;Catastrophic failure&#8221;, back with a vengeance in WinRT/UWP.  Very accurate, the failure to report a decent error was truly catastrophic.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-even depth-1" id="comment-1220201">
				<div id="div-comment-1220201" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Neil</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20151222-00/?p=92691#comment-1220201">
			December 23, 2015 at 2:16 am</a>		</div>

		<p>Just as well .ToString() worked on the unhandled exception exception, otherwise we could have been in for a long night&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>