<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (13)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-1198501">
				<div id="div-comment-1198501" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">David-T</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20151014-00/?p=91361#comment-1198501">
			October 14, 2015 at 7:11 am</a>		</div>

		<p>It does seem a bit odd that a security policy is implemented in the User Interface&#8230;</p>
<div class="post">[<em>It&#39;s not a security policy. It&#39;s a UI policy. It&#39;s under the Explorer node and controls how Explorer handles ACLs when files are moved in the UI. -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1198491">
				<div id="div-comment-1198491" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ben Voigt</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20151014-00/?p=91361#comment-1198491">
			October 14, 2015 at 7:17 am</a>		</div>

		<p>That KB article has quite a number of problems with it. &nbsp;For example, nearly every item in the bulleted list is not a rule at all, but a convention (so-called &quot;canonical order&quot; for ACE entries), the actual rule is that ACE entries that appear earlier in the ACL take precedence.</p>
<p>But the article actually does show that programs other than Windows Explorer use a different method for controlling ACL preservation, using xcopy command-line arguments as an example.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1198471">
				<div id="div-comment-1198471" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">DWalker</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20151014-00/?p=91361#comment-1198471">
			October 14, 2015 at 8:20 am</a>		</div>

		<p>The term &quot;Windows Explorer&quot; technically means one thing, but to users, it means &quot;Windows&quot;. &nbsp;I would consider a CMD prompt, that was opened by Windows, to be running &quot;under&quot; Windows Explorer. &nbsp;It displays itself in a window, after all. &nbsp;So, a CMD prompt&#39;s command line interface is &quot;part&quot; of Windows Explorer.</p>
<p>The article, while technically correct, is certainly not clear. &nbsp;Thanks for the blog entry, but &quot;someone&quot; ought add a heap of clarifyin&#39; to the MSDN article.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1198441">
				<div id="div-comment-1198441" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Yukkuri</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20151014-00/?p=91361#comment-1198441">
			October 14, 2015 at 10:30 am</a>		</div>

		<p>@DWalker Normally I am sympathetic to pleas for better documentation, but people that don&#39;t understand Windows well enough to know the difference between the command prompt and explorer SHOULD NOT BE people employed to manage them for their entire enterprise. </p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1198411">
				<div id="div-comment-1198411" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Eddie</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20151014-00/?p=91361#comment-1198411">
			October 14, 2015 at 1:41 pm</a>		</div>

		<p>@Yukkuri</p>
<p>Employers don&#39;t know the difference between the command prompt and Explorer either. &nbsp;OK, so they hire a system administrator to handle that. &nbsp;One small problem though, the sys admin who is not qualified for the job convinces the employer that he is awesome.</p>
<p>There really isn&#39;t a solution for this.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1198391">
				<div id="div-comment-1198391" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Cesar</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20151014-00/?p=91361#comment-1198391">
			October 14, 2015 at 5:45 pm</a>		</div>

		<p>Windows Explorer was bolted on over the real filesystem, and it shows. If Windows were designed from scratch, the Windows Explorer layer would be the only way to access the filesystem, and there would be no confusion caused by programs trying to manipulate the real filesystem behind it directly. But the real filesystem came first, and Microsoft can&#39;t remove it from the API.</p>
<p>To make things even worse, from what I have read in this blog you are NOT supposed to use Windows Explorer APIs on services; you are supposed to always go directly through the filesystem API. So Microsoft can&#39;t even tell everyone &quot;always use the Windows Explorer APIs&quot; (say you are writing a library which can be used by both services and user-facing applications). And, of course, there&#39;s the small detail that plenty of applications or libraries are ported from Unix, or written by developers who are more used to the Unix way of doing things, which is more similar to the real filesystem API and completely different from the Windows Explorer APIs&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1198381">
				<div id="div-comment-1198381" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20151014-00/?p=91361#comment-1198381">
			October 14, 2015 at 7:06 pm</a>		</div>

		<p>@Cesar: Believe it or not, I know how to invert the whole thing to make it work the other way around. The ramifications of the system change are nasty as the root problems of COM would have to be really addressed (shell namespace COM extensions would have to /not care/ what threading model they were launched in). It sounds like a crazy impossible thing, but the whole set is in fact achievable. You will run screaming in horror when I tell you that everything you think you know would have to change right down to how the loader itself works. But it&#39;s all possible. FUSE is my witness; we can invert the stack.</p>
<p>But do you really want the kinds of guys who feel most the need to make shell namespace extensions known for their instability writing code that runs at such a level where one screwup can bring down every process in the system so even safe mode doesn&#39;t boot? Probably not.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1198371">
				<div id="div-comment-1198371" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Gabe</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20151014-00/?p=91361#comment-1198371">
			October 14, 2015 at 9:08 pm</a>		</div>

		<p>Cesar: If you think that MS would merge Explorer and filesystem APIs if they were designing the system from scratch, think again.</p>
<p>Over 30 years ago Apple designed a system from scratch where the graphical shell (Finder) was expected to be the only way a user would interact with the filesystem. The system had no command line (nor even a built-in way to create one). It was so all&#8211;encompassing that the user would never even know that the &quot;:&quot; was used as the path separator unless they attempted to type the character into a filename.</p>
<p>Yet even Apple implemented the system with a filesystem layer and Finder as an abstraction on top of that.</p>
<p>If even a tightly-integrated system like Macintosh that was designed with no thought towards compatibility with any other system had separate filesystem APIs, why would anybody see the need to design such a system today?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1198361">
				<div id="div-comment-1198361" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">xpclient</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20151014-00/?p=91361#comment-1198361">
			October 14, 2015 at 11:14 pm</a>		</div>

		<p>There was also a ForceCopyACLwithFile policy that got broken starting with Vista.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1198351">
				<div id="div-comment-1198351" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">dave</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20151014-00/?p=91361#comment-1198351">
			October 15, 2015 at 5:24 am</a>		</div>

		<p>&gt;If Windows were designed from scratch, the Windows Explorer layer would be the only way to access the filesystem,</p>
<p>So every program would have to call Windows Explorer to open a file? &nbsp;(Even an internal temporary file of no interest to the user)</p>
<p>And if a program wanted to move a file, it would have to have Explorer do it.</p>
<p>And if a program wanted to set an ACL on a file, it would have to have Explorer do it.</p>
<p>That seems a little&#8230; inefficient.</p>
<p>So we make an exception that programs can issue file system API calls directly?</p>
<p>That&#39;s exactly the current situation.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1198341">
				<div id="div-comment-1198341" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Kevin</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20151014-00/?p=91361#comment-1198341">
			October 15, 2015 at 6:45 am</a>		</div>

		<p>@dave:</p>
<p>What Cesar is proposing is reminiscent of the microkernel idea: You have a small kernel for handling credentials and other stuff that absolutely *has* to run in kernel mode, and everything else lives in userspace, including most of the filesystem code.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1198301">
				<div id="div-comment-1198301" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">DWalker</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20151014-00/?p=91361#comment-1198301">
			October 15, 2015 at 9:22 am</a>		</div>

		<p>@Yukkuri: &nbsp;I agree that &quot;people employed to manage them [Windows computers] for their entire enterprise&quot; would, or should, be fine with the explanation in this blog post. &nbsp;And, also, clarifying the MSDN article would help everyone! &nbsp;</p>
<p>Computers are hard. &nbsp;Some of us are paid to handle that complexity. &nbsp;:-)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1197981">
				<div id="div-comment-1197981" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Yukkuri</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20151014-00/?p=91361#comment-1197981">
			October 16, 2015 at 10:34 am</a>		</div>

		<p>@Eddie Why do you have to destroy my happy fantasy word? :(</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>