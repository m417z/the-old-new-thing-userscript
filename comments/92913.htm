<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (11)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment byuser comment-author-wndsks even thread-even depth-1" id="comment-1224511">
				<div id="div-comment-1224511" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/skSdnW' rel='external nofollow' class='url'>skSdnW</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160122-00/?p=92913#comment-1224511">
			January 22, 2016 at 7:16 am</a>		</div>

		<p>Probably not that relevant anymore but Convert足Sid足To足String足Sid does not exist on NT4 and IIRC ConvertStringSidToSid does not support abbreviations on 2000.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1 parent" id="comment-1224532">
				<div id="div-comment-1224532" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160122-00/?p=92913#comment-1224532">
			January 22, 2016 at 10:00 am</a>		</div>

		<p>I don&#8217;t think this code works. Consider what happens if it&#8217;s called with S-1-5-? where ? is the start of an unallocated memory block. That is, we arrange so that the SID is truncated, and the truncation is at the end of the file, and aligned to a 4k boundary.</p>

		
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-oldnewthing bypostauthor even depth-2 parent" id="comment-1224551">
				<div id="div-comment-1224551" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Raymond+Chen+-+MSFT' rel='external nofollow' class='url'>Raymond Chen - MSFT</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160122-00/?p=92913#comment-1224551">
			January 22, 2016 at 12:58 pm</a>		</div>

		<p>In that case, cbSize would be less than GetLengthSid(), so we return FALSE at the second test.</p>

		
				</div>
		<ol class="children">
		<li class="comment odd alt depth-3 parent" id="comment-1224561">
				<div id="div-comment-1224561" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">McBucket</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160122-00/?p=92913#comment-1224561">
			January 22, 2016 at 1:53 pm</a>		</div>

		<p>A bit of a Catch-22 here, isn&#8217;t there? From the GetLengthSid function docs:</p>
<p>Return value</p>
<p>If the SID structure is valid, the return value is the length, in bytes, of the SID structure.<br />
If the SID structure is not valid, the return value is undefined. Before calling GetLengthSid, pass the SID to the IsValidSid function to verify that the SID is valid.</p>
<p>OK, so it&#8217;s unlikely that an undefined value will match cbLen, but still.</p>
<p>Frankly, though &#8212; if the SID crosses an allocation boundary, the problem is outside of the scope of IsValidUntrustedSid() function anyhow, is my feeling.</p>

		
				</div>
		<ol class="children">
		<li class="comment even depth-4" id="comment-1224582">
				<div id="div-comment-1224582" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://harryjohnston.wordpress.com' rel='external nofollow' class='url'>Harry Johnston</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160122-00/?p=92913#comment-1224582">
			January 22, 2016 at 3:55 pm</a>		</div>

		<p>I would hazard a guess that in practice GetLengthSid() returns the size the SID would be if the subauthority count was correct, which should also be the maximum number of bytes that IsValidSid() might read.  If so, the code is OK &#8211; in practice.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment byuser comment-author-fleet-command odd alt thread-even depth-1" id="comment-1224563">
				<div id="div-comment-1224563" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Fleet+Command' rel='external nofollow' class='url'>Fleet Command</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160122-00/?p=92913#comment-1224563">
			January 22, 2016 at 2:38 pm</a>		</div>

		<p>Seems to me that the pros of the string type and the cons of the binary type are really negligible.<br />
1. &#8220;Strings are well-known quantities&#8221; but the binary form is dominant data I read and write. (Well, not myself; my apps.) Since I am very Unicode-conscious, I often read the strings as raw binary before calling the proper conversion routines.<br />
2. One has to deal with detecting binary SIDs anyway, so long as they are not consumed in the string form. Apps tend to crash after the conversion, when they are doing something meaningful.<br />
3. What you call tricky is less than the average amount of day-to-day trickiness. I often add a checksum to files that have such important pieces of information.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-odd thread-alt depth-1 parent" id="comment-1224572">
				<div id="div-comment-1224572" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Roman</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160122-00/?p=92913#comment-1224572">
			January 22, 2016 at 2:54 pm</a>		</div>

		<p>The documentation for GetLengthSid says &#8220;Before calling GetLengthSid, pass the SID to the IsValidSid function to verify that the SID is valid.&#8221;. So doesn&#8217;t IsValidUntrustedSid technically invoke undefined behavior?</p>

		
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-oldnewthing bypostauthor odd alt depth-2 parent" id="comment-1224581">
				<div id="div-comment-1224581" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Raymond+Chen+-+MSFT' rel='external nofollow' class='url'>Raymond Chen - MSFT</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160122-00/?p=92913#comment-1224581">
			January 22, 2016 at 3:08 pm</a>		</div>

		<p>It&#8217;s a catch-22. IsValidSid assumes that the memory is valid, but you don&#8217;t know how much memory needs to be valid until you call GetLengthSid. Turns out that GetLengthSid requires only that the header be present. I&#8217;ll see if I can patch up the documentation.</p>

		
				</div>
		<ol class="children">
		<li class="comment even depth-3" id="comment-1224584">
				<div id="div-comment-1224584" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160122-00/?p=92913#comment-1224584">
			January 22, 2016 at 4:07 pm</a>		</div>

		<p>Ah there we go.</p>
<p>On a related note, this is a good example of how easy it is to end up relying on undocumented things.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment byuser comment-author-cheong odd alt thread-even depth-1" id="comment-1224641">
				<div id="div-comment-1224641" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/cheong00' rel='external nofollow' class='url'>cheong00</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160122-00/?p=92913#comment-1224641">
			January 25, 2016 at 1:39 am</a>		</div>

		<p>I&#8217;ve seen people directly validate what would be the cbSize here against &#8220;sizeof(SID)&#8221;, that reading the macro defination of SECURITY_SID_SIZE(), would be equivalent of assuming there will be at least 1 sub authority specified there.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-odd thread-alt depth-1" id="comment-1224751">
				<div id="div-comment-1224751" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://killprog.com' rel='external nofollow' class='url'>Killer{R}</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160122-00/?p=92913#comment-1224751">
			January 25, 2016 at 2:20 pm</a>		</div>

		<p>IMHO if you seriously worried about possibility of SID corruption then using stringsid conversion to guard against that is not best idea. Likely its a worse idea. Hashing should be used against such issues. And hashing able (and should) protect not just single entity (SID) but whole storage where it saved probably with some other important information.</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>