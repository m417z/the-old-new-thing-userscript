<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (8)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-717393">
				<div id="div-comment-717393" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Chuck Norris?</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090316-00/?p=18803#comment-717393">
			March 16, 2009 at 3:25 pm</a>		</div>

		<p>The page from the link &quot;why the MoveWindow function lets you suppress repainting&quot; links to the blog of Zeke Odins-Lucas, which links to the Microspotting website, which has a recent(ish) interview with Raymond&#8230;</p>
<p><a rel="nofollow" target="_new" href="http://www.microspotting.com/2009/01/raymond-chen" rel="nofollow">http://www.microspotting.com/2009/01/raymond-chen</a></p>
<p>which links back to this blog&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-717543">
				<div id="div-comment-717543" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Bob</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090316-00/?p=18803#comment-717543">
			March 16, 2009 at 8:54 pm</a>		</div>

		<p>As a rule, you move windows in response to user input, otherwise you&#8217;re liable to move the window somewhere that will annoy the user.</p>
<p>Therefore &quot;I&#8217;m about to move a bunch of windows&quot; counts as special knowledge of the fact that somehow you have a reason to do that and its what the user will want.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-717563">
				<div id="div-comment-717563" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Alexandre Grigoriev</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090316-00/?p=18803#comment-717563">
			March 16, 2009 at 9:33 pm</a>		</div>

		<p>Bob,</p>
<p>How about resizing of a form or a dialog, with automatic rearrangement of the controls?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-dean-harding odd alt thread-odd thread-alt depth-1" id="comment-717583">
				<div id="div-comment-717583" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Dean+Harding' rel='external nofollow' class='url'>Dean Harding</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090316-00/?p=18803#comment-717583">
			March 16, 2009 at 10:28 pm</a>		</div>

		<p>I think people forget that a &quot;window&quot; in Windows does not just mean top-level windows.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-717533">
				<div id="div-comment-717533" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Alexandre Grigoriev</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090316-00/?p=18803#comment-717533">
			March 16, 2009 at 8:12 pm</a>		</div>

		<p>The &quot;special knowledge&quot; is not the point.</p>
<p>If bRepaint is TRUE, WM_PAINT is *sent* immediately in the MoveWindow context, causing the window to repaint before the function returns, rather than &quot;lazily&quot; in the message loop.</p>
<p>If you are moving or resizing &nbsp;a lot of windows, you may not want them to repaint immediately.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-717603">
				<div id="div-comment-717603" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://gdrprivate.blogspot.com/' rel='external nofollow' class='url'>Leif Strand</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090316-00/?p=18803#comment-717603">
			March 16, 2009 at 11:29 pm</a>		</div>

		<p>It is interesting to compare/contrast the classic Mac here.</p>
<p>In the Macintosh Toolbox, the functionality of Win32&#8217;s MoveWindow is split between two routines, MoveWindow and SizeWindow. &nbsp;Not coincidentally, SizeWindow has the exact same parameter (&quot;fUpdate&quot;) with (almost) the exact same semantics:</p>
<p><a rel="nofollow" target="_new" href="http://developer.apple.com/DOCUMENTATION/mac/Toolbox/Toolbox-251.html" rel="nofollow">http://developer.apple.com/DOCUMENTATION/mac/Toolbox/Toolbox-251.html</a></p>
<p>The difference is, on the Mac, the behavior is always &quot;lazy&quot;. &nbsp;At the same time, they neglected to include an &#8216;fUpdate&#8217; parameter to MoveWindow:</p>
<p><a rel="nofollow" target="_new" href="http://developer.apple.com/DOCUMENTATION/mac/Toolbox/Toolbox-246.html" rel="nofollow">http://developer.apple.com/DOCUMENTATION/mac/Toolbox/Toolbox-246.html</a></p>
<p>Indeed, since the Mac is always lazy, there is no need for an &#8216;fUpdate&#8217; parameter in the &quot;move a bunch of windows&quot; scenario. &nbsp;You just move the windows around with abandon, confident that you will be fed a stream of update events later (one per window &#8212; no redundant drawing will occur).</p>
<p>Nonetheless, the Mac team felt the need to include &#8216;fUpdate&#8217; with SizeWindow. &nbsp;As Raymond alluded to, it probably has to do with coordinates. &nbsp;Maybe I want the content to shift in response to the resize, in which case the default update region would be annoying.</p>
<p>Going even deeper, I wonder if the reason that Windows is *not* lazy has to do with update events. &nbsp;As I recall, Windows doesn&#8217;t have &quot;update events&quot; &#8212; there is WM_PAINT but it&#8217;s not quite the same thing. &nbsp;On the Mac, update events are funny things which are handled specially by the Toolbox. &nbsp;They aren&#8217;t even posted to the queue (otherwise you could get two redundant update events for the same window). &nbsp;Maybe the Windows team decided that update events were an ugly/useless concept&#8230; but were thus forced to make MoveWindow redraw the window immediately when bRepaint=TRUE.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-717623">
				<div id="div-comment-717623" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">streuth</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090316-00/?p=18803#comment-717623">
			March 17, 2009 at 6:36 am</a>		</div>

		<p>This one made me think a bit.</p>
<p>I thought to myself&#8230;. I don&#8217;t think I&#8217;m using move window *anywhere*. SetWindowPos would be a preferable call to my way of thinking. So I did a grep on everything I do, and have written, for the word &quot;MoveWindow&quot;.</p>
<p>You must consider, that I cant remember why all the functions I have written exist!</p>
<p>As it happens I have a prototype for &quot;MoveWindow&quot; that simply calls &quot;SetWindowPos&quot;. Stranger still, my own prototype has a repaint parameter!!!!</p>
<p>I&#8217;d say that I probably coded it, with the idea that I could move multiple windows as children (perhaps overlapping) and then repaint them all in one go on conclusion of the multiple move. My own &quot;MoveWindow&quot; appears to forego activation when called with repaint set to false. When set to true it also foregoes activation but forces both pane and frame painting.</p>
<p>As it turns out, the only time I call &quot;MoveWindow&quot; with repaint set to false, is when I have a windows button control drawn on top of part of a windows edit control. In that instance it seems that I&#8217;m moving the window into position, showing it, and then zing to the fore.</p>
<p>Who knows if it&#8217;s the right way to do it, but I&#8217;m fairly sure it works O.K.</p>
<p>HTH</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-719103">
				<div id="div-comment-719103" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ulric</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090316-00/?p=18803#comment-719103">
			March 20, 2009 at 2:17 pm</a>		</div>

		<p>it&#8217;s common. &nbsp;Not the first case mentionned by Raymond (exploiting special knowledge), but the second. &nbsp;Alexandre Grigoriev above is correct.</p>
<p>it&#8217;s to avoid flicker and embarassing performance, when you move a bunch of child windows, for example when resizing a dialog, you can do a final InvalidateRect( hwnd, NULL ) at the end and get on repaint instead of a bunch of them. &nbsp;</p>
<p>now of course, there is DeferWindowPos, but that function probably came much later (was it even in Windows 3.x?) &#8211; and I think it is generally little known.</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>