<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (200)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-361773">
				<div id="div-comment-361773" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">NBC</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060330-31/?p=31723#comment-361773">
			March 30, 2006 at 10:08 am</a>		</div>

		<p>something to add to tweakui :)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-361783">
				<div id="div-comment-361783" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Jimbo</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060330-31/?p=31723#comment-361783">
			March 30, 2006 at 10:13 am</a>		</div>

		<p>Disable &quot;fast mode&quot; by default</p>
<p>Since Vista is a new product, the last thing it needs is to arrive with &quot;problems&quot;.</p>
<p>Let people turn fast mode on and get and error message if the server has a problem. &nbsp;That way, the user is in control.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-361793">
				<div id="div-comment-361793" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Scott</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060330-31/?p=31723#comment-361793">
			March 30, 2006 at 10:14 am</a>		</div>

		<p>Couldn&#8217;t you auto detect the problem and refresh the list using slow mode? &nbsp;This way you don&#8217;t have to keep a list. &nbsp;The downside would be that the file list would be retrieved even slower than slow mode.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-361803">
				<div id="div-comment-361803" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://willrickards.net/' rel='external nofollow' class='url'>Will Rickards</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060330-31/?p=31723#comment-361803">
			March 30, 2006 at 10:18 am</a>		</div>

		<p>Automatically fix results by rerunning query in slow mode for explorer. &nbsp;Log an event in the system or application event log once per whatever indicating the problem and linking to the knowledgebase article.</p>
<p>Advantages:<br />
<br />Everything works<br />
<br />Administrators who monitor event logs will become aware of the problem and can fix if desired.<br />
<br />Similar behaviour to windows XP.</p>
<p>Disadvantages:<br />
<br />Difficult to implement?<br />
<br />Hack there just for compatibility</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-361813">
				<div id="div-comment-361813" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">David</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060330-31/?p=31723#comment-361813">
			March 30, 2006 at 10:28 am</a>		</div>

		<p>Can&#8217;t &quot;Auto-detect the buggy driver and work around it next time&quot; be modified such that when Explorer detects the error code it immediatly asks for the directory listing using the slow mode again, therefore avoiding the display of any truncated list ever? Something like:</p>
<p>string[] GetDirList()<br />
<br />{<br />
<br /> &nbsp; bool weirdErrorHappened = false;<br />
<br /> &nbsp; string[] fileList = GetFileListUsingFastMode(out weirErrorHappened);<br />
<br /> &nbsp; if(weirdErrorHappened)<br />
<br /> &nbsp; {<br />
<br /> &nbsp; &nbsp; &nbsp;fileList = GetFileListUsingSlowMode();<br />
<br /> &nbsp; }<br />
<br /> &nbsp; return fileList;<br />
<br />}</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-361823">
				<div id="div-comment-361823" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">tony</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060330-31/?p=31723#comment-361823">
			March 30, 2006 at 10:32 am</a>		</div>

		<p>have a filter in the network stack that can overide slow/fast for all apps!</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-361843">
				<div id="div-comment-361843" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">David</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060330-31/?p=31723#comment-361843">
			March 30, 2006 at 10:35 am</a>		</div>

		<p>Ok, I guess you need to let us know, at what point you get the error code that allows you to detect the bad server. I take it now that this only happens AFTER some app might have received the first parts of the file list during enumeration?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-361853">
				<div id="div-comment-361853" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://cs.tlmii.net/' rel='external nofollow' class='url'>Tim</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060330-31/?p=31723#comment-361853">
			March 30, 2006 at 10:36 am</a>		</div>

		<p>Perhaps this sounds a little harsh, but i&#8217;m a fan of the Do Nothing method.</p>
<p>I personally feel (and feel free to tell me I&#8217;m wrong) like its problems like these that lead to the windows codebase being so hard to maintain for backwards compatibility.</p>
<p>Where do these &quot;hacks&quot; to the windows code stop? Why isn&#8217;t the responsibility put on the 3rd party vendors to make their software work properly?</p>
<p>I think the fact that you&#8217;ve recognized the problem, found out that there IS a solution (the update from the vendor) and could put out a KB article describing the problem and solution in detail is PLENTY for Microsoft to be responsible for. And in fact, I&#8217;d argue its probably a lot more than other vedors might do&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-oldnewthing bypostauthor even thread-even depth-1" id="comment-361863">
				<div id="div-comment-361863" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Raymond+Chen+-+MSFT' rel='external nofollow' class='url'>Raymond Chen - MSFT</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060330-31/?p=31723#comment-361863">
			March 30, 2006 at 10:36 am</a>		</div>

		<p>David, Will, Scott: David&#8217;s suspicion is correct. The shell has already returned a partial file list to its caller by the time the error is detected. An<br />
application calls IShellFolder::EnumObjects and the shell issues a fast<br />
query. Each time the application calls IEnumIDList::Next, the next<br />
result is returned. After returning about 100 items, oops, it turns out<br />
that the server is one of those bad servers whose fast query is broken.<br />
Now what? It can&#8217;t go back in time and &#8220;un-return&#8221; all those items that<br />
it had returned up until now in response to IEnumIDList::Next&#8230;</p>
<p>Sorry I didn&#8217;t explain why you can&#8217;t &#8220;refresh&#8221;. I didn&#8217;t think it was important.<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-361873">
				<div id="div-comment-361873" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Moi</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060330-31/?p=31723#comment-361873">
			March 30, 2006 at 10:36 am</a>		</div>

		<p>Considering Vista apparently won&#8217;t ship this decade, why are you worrying about it?</p>
<p>If you must create bugs in your own code, do what David suggests, otherwise tell the vendor to fix their distribution. Of course, instead of putting the message in a message box you could always put it in a log which would be monitored by sysadmins. Nah&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-361883">
				<div id="div-comment-361883" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">David</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060330-31/?p=31723#comment-361883">
			March 30, 2006 at 10:37 am</a>		</div>

		<p>Also, I don&#8217;t like any of the options that show specific UI for that to the user (a la &quot;contact your admin&quot;). But what would be nice is something in the event log. So that at least in well managed environments admins would get tipped off (without involvement of the user).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-361893">
				<div id="div-comment-361893" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Steve Thresher</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060330-31/?p=31723#comment-361893">
			March 30, 2006 at 10:37 am</a>		</div>

		<p>Why not contact the vendor if you know they have a problem?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-361913">
				<div id="div-comment-361913" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">BryanK</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060330-31/?p=31723#comment-361913">
			March 30, 2006 at 10:39 am</a>		</div>

		<p>Depends on what exactly the other server is.</p>
<p>If it&#8217;s Samba, for instance, then report it as a bug with Samba (or fix it yourself and give them the code). &nbsp;Users will eventually upgrade, and the problem will eventually go away. &nbsp;But this is only an option if the server is open-source.</p>
<p>If the server is not open-source, then there&#8217;s really nothing you can do but maintain the back-compat hack database that none of the commenters here seem to like. &nbsp;;-)</p>
<p>As for &quot;an update to the server software was released that claims to fix the bug&quot;: &nbsp;Does it actually fix the bug? &nbsp;Presumably you have a testcase that shows the issue; have your testers tried applying the update to see if the problem is still there? &nbsp;If it does work, then whether or not people have applied the update right now, they will eventually. &nbsp;And once they do, the back-compat hack is useless.</p>
<p>(And an open-source program like Samba will get the fixed version rolled out to more places more quickly, as well &#8212; not least because the average Linux distro seems to update packages much more frequently than the average closed-source OS. &nbsp;For instance, Debian updates (on average) 5-6 packages every day: they will eventually pick up this fix, if it works as advertised. &nbsp;Users who have auto-update mechanisms in place (which is most of them) will then get it installed. &nbsp;Yes, NAS boxes are still an issue &#8212; maybe contacting the known vendors of NAS boxes using this server would be an option. &nbsp;Not sure on that though.)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-361923">
				<div id="div-comment-361923" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://mikenbondi.blogspot.com' rel='external nofollow' class='url'>Mike</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060330-31/?p=31723#comment-361923">
			March 30, 2006 at 10:40 am</a>		</div>

		<p>If the vendor is in Europe, refer it to the European Commission for advice.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-361933">
				<div id="div-comment-361933" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">DrPizza</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060330-31/?p=31723#comment-361933">
			March 30, 2006 at 10:41 am</a>		</div>

		<p>The first question that must be answered is, just how much difference is there between fast mode and slow mode?</p>
<p>If it&#8217;s actually worth having fast mode, then create a new return code from the find file API for &quot;server gave up and needs you to start again&quot;. &nbsp;The network driver need then only remember the error occurred for that session (and mark the session as &quot;slow&quot;), and Explorer will know to requery the directory. &nbsp;Maybe log to the Event Log at the same time, and maybe have a mechanism to globally force the driver to slow mode.</p>
<p>Advantages:<br />
<br />It uses fast mode if it can<br />
<br />It uses slow mode if it must<br />
<br />It doesn&#8217;t need any persistent memory</p>
<p>Disadvantages<br />
<br />Needs adding a new error code which not all apps will deal with; &quot;legacy&quot; apps which don&#8217;t know they need to resubmit will just be left with a broken find, especially as they probably don&#8217;t check error codes properly<br />
<br />Will slow down the first directory listing of a broken server<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-361953">
				<div id="div-comment-361953" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Adam Gates</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060330-31/?p=31723#comment-361953">
			March 30, 2006 at 10:44 am</a>		</div>

		<p>DO NOTHING!!!</p>
<p>Changing your projduct to fixed someone elses problem? You are just asking to open another bug or security hole.</p>
<p>AND&#8230; Why not work with the offending vendor and offer to pay them(for their time) to fix there product?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-361963">
				<div id="div-comment-361963" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">DrPizza</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060330-31/?p=31723#comment-361963">
			March 30, 2006 at 10:44 am</a>		</div>

		<p>(and if it&#8217;s a problem with the client-side driver, simply refuse to let the user load it, saying it&#8217;s unsigned or incompatible or some other similar complaint)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-361973">
				<div id="div-comment-361973" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Bart</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060330-31/?p=31723#comment-361973">
			March 30, 2006 at 10:44 am</a>		</div>

		<p>Scrap &#8216;fast&#8217; mode and add an autodetectable &#8216;faster&#8217; mode and fallback to &#8216;slow&#8217; mode when it isn&#8217;t available.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-361983">
				<div id="div-comment-361983" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">David</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060330-31/?p=31723#comment-361983">
			March 30, 2006 at 10:44 am</a>		</div>

		<p>Ok, so clients call IEnumIDList::Next numerious times to fetch all the names of the files. During one of those calls you guys realise &quot;damn, we can&#8217;t list the complete dir, because we got the strange error back&quot;. Isn&#8217;t that just VERY similiar to say the network connection being dropped in the middle of the enumeration? So, why not return some error from IEnumIDList::Next that would have the meaning &quot;Sorry, can&#8217;t retrieve all items, due to network problem&quot;. Then, if an app wants to try again, you could use your known bad server list to use slow mode the next time.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-362003">
				<div id="div-comment-362003" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Anonymous</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060330-31/?p=31723#comment-362003">
			March 30, 2006 at 10:49 am</a>		</div>

		<p>Tremendous hack: Do the fast query, remember the files returned (up to 100, or the maximum number of files that a bugged fast query can return). If it fails, do the slow one, and don&#8217;t pass the files already reported.</p>
<p>If the server is known to work well, don&#8217;t remember the returned files anymore for that server. If the serves is known not to work, use slow mode always for that server.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-362013">
				<div id="div-comment-362013" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Adam Gates</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060330-31/?p=31723#comment-362013">
			March 30, 2006 at 10:50 am</a>		</div>

		<p>So Do nothing BUT engage the vendor to a get real solution!</p>
<p>Example of failure: Remember the issue with Write Back Cacheing and Exchange 5.5?<br />
<br />Compaq and Microsoft could not agree on a standard on how to report the way memory was written to the disk from cache on the controller card.<br />
<br />Exchange kept expecting to find the data in the last place it wrote the data (the cache) but the data had already gone to disk.<br />
<br />If Microsoft had engaged Compaq just a little more this could have been fixed by Compaq.</p>
<p>Microsoft needs an escalation process to work with the outside Vendors to fix their issues.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-362043">
				<div id="div-comment-362043" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.spidynamics.com/products/devinspect/index.html' rel='external nofollow' class='url'>Tim Farley</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060330-31/?p=31723#comment-362043">
			March 30, 2006 at 10:53 am</a>		</div>

		<p>I second the motion on the modified &quot;work around it next time&quot; scenario that David proposed in the fifth comment.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-362053">
				<div id="div-comment-362053" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Kristoffer</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060330-31/?p=31723#comment-362053">
			March 30, 2006 at 10:55 am</a>		</div>

		<p>Hacking just explorer would be my recommended option; leave the poor network driver unsullied. </p>
<p>First we&#8217;ll need a new option in explorer which has three states:<br />
<br /> &nbsp;1. Use slow queries<br />
<br /> &nbsp;2. Use fast queries<br />
<br /> &nbsp;3. Not set yet (this is the default)<br />
<br />Dropdown only needs 2 entries and should be blank if has not been set yet.</p>
<p>If the option has not been set yet explorer auto detects a truncated listing and automatically changes the option to use slow mode and re-issues the query in slow mode. All queries from now on will be done in slow mode.</p>
<p>If the users change this option to using fast mode then they will see truncated results on buggy servers and a dialog box warning them of such. The dialog box is acceptable in this case since the user had to manually turn on fast queries (if the server claims to support them of course). Explorer can now note this as a bad server and retain X number of bad servers where it should use slow queries instead of bad ones.</p>
<p>Online help for this option should explain why this option may have been set to use slow queries by the system.</p>
<p>Disclaimer: This is all theoretical. I don&#8217;t know if it&#8217;s possible for explorer to re-issue a query without causing issues internally which would invalidate part of my solution.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-362063">
				<div id="div-comment-362063" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">AC</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060330-31/?p=31723#comment-362063">
			March 30, 2006 at 10:56 am</a>		</div>

		<p>Idea 1:<br />
<br />Isn&#8217;t it possible to detect the version of the server, and afterwards to produce slow queries to servers which are known to make errors?<br />
<br />Since it&#8217;s something like &quot;get first/get next&quot; you are supposed to exchange more messages with the server so you can start the session by first asking the version.<br />
<br />Another way around, if you can&#8217;t detect &quot;old bad&quot; can you detect &quot;new fast&quot; servers? Then only those should be asked fast.</p>
<p>Idea 2:<br />
<br />If previous is not possible (why? most of the servers identify their version, or their version can be easily recognized) then even if you have some &quot;get first/get next&quot; you can still &quot;revert to slow&quot; after the error. There&#8217;s a chance that the &quot;list&quot; changed, but if the first 100 entries still exist, you can still deliver the whole list without the error probably much more often than in any other scenario.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-362073">
				<div id="div-comment-362073" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Riva</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060330-31/?p=31723#comment-362073">
			March 30, 2006 at 10:57 am</a>		</div>

		<p>In my opinion, it also depends on how common the particular server is. If it&#8217;s going to cause a problem for say (abitrary low &#8216;insignificant&#8217; number goes here) of Vista users it&#8217;s different than something that affects half your users.</p>
<p>I&#8217;d also vote for &quot;Do nothing exceptt issue a KB&quot; and try to persuade the company/organization to issue their equivalent of a KB to let their users know they need the fix. Less code paths, less testing, more time available to test your own product rather than fix a problem that isn&#8217;t your fault.</p>
<p>Other than that I would go for &quot;Auto-detect the buggy driver and work around it next time&quot; (+ logging in the event log) except there should be some kind of feedback for the user that lets them know the current operation failed. </p>
<p>Raymond: what keeps IEnumIDList::Next from returning say E_FAIL which causes Explorer to clear the items it received so far and pop up a dialog box saying the operation failed? No results are better than inaccurate ones.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-362083">
				<div id="div-comment-362083" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.geekswithblogs.net/bradc' rel='external nofollow' class='url'>Brad Corbin</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060330-31/?p=31723#comment-362083">
			March 30, 2006 at 10:59 am</a>		</div>

		<p>Great real-world question, Raymond.</p>
<p>The fix / workaround is going to depend pretty highly on the technical details of how things work under the covers.</p>
<p>My two initial ideas (both mentioned by others above) were:</p>
<p>1) Before attempting a Fast Query, poll the server OS to see if it falls in a list of versions with this known issue. If it does, use Slow Query instead. Maybe store this on a temporary &quot;good&quot; and &quot;bad&quot; list so later calls to a known server.</p>
<p>Advantages:<br />
<br />It just works</p>
<p>Disadvantages:<br />
<br />Is this even technically possible? Is there a way to identify this system besides actually getting the error itself?<br />
<br />Does this extra call make the Fast Query call SLOWER than just using a Slow Query to begin with?</p>
<p>2) If you get the &quot;weird error&quot; using a fast query, retry immediately with a slow query. Remember that server on a &quot;slow list&quot; so retries use the slow query from now on.</p>
<p>Advantages:<br />
<br />It just works</p>
<p>Disadvantages:<br />
<br />Is this even possible?</p>
<p>From your response to the comments above, it sounds like this doesn&#8217;t really work: that an application doesn&#8217;t do a &quot;getFolderContents&quot; (or whatever) call, but instead does a recursive call to FindNextFile. So any fix along this line would really have to be on the application level. You could fix Windows Explorer, of course, but you have no control over the implementation details of all the millions of other apps out there.</p>
<p>What happens if you do a slow query FindNextFile immediately after receiving an error? Does it &quot;reset&quot; and give you the first file in the directory again? If it does, then you&#8217;re screwed. If it really does give you the correct next file, then idea #2 above should work.</p>
<p>3) Put the above fix into Windows Explorer, and let FindNextFile calls by other applications always use the slow query.</p>
<p>Advantages:<br />
<br />Makes Explorer faster than competitors<br />
<br />It just works</p>
<p>Disadvantages:<br />
<br />Heh. Don&#8217;t let anyone see you do this! :)</p>
<p>Actually, that gives me another idea:</p>
<p>4) Always do a slow query when FindNextFile is called. Make a new API called FindNextFileFast that does the same thing in Fast Query mode, BUT also returns a new error code if this particular problem (or some other similar one)is encountered. Retool the Explorer application with the proper logic to use the fast version when possible, but fail over to the slow version if the error is encountered. Let the application worry about issues like keeping a list of bad servers, etc. </p>
<p>Advantages:<br />
<br />Pushes the logic up a layer to the application<br />
<br />Old apps will just work the way they did in XP (using slow query mode)<br />
<br />Newer apps can be tooled with the proper logic to failover correctly, and will work faster.</p>
<p>Disadvantages:<br />
<br />Probably the most difficult technically<br />
<br />Requires rewriting some deep, important parts of Explorer<br />
<br />The Windows API for Vista is probably already locked, this may not be a valid option.</p>
<p>Please keep us posted on this one, Raymond!!!</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-362103">
				<div id="div-comment-362103" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.csc.calpoly.edu/~bfriesen/' rel='external nofollow' class='url'>Brian Friesen</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060330-31/?p=31723#comment-362103">
			March 30, 2006 at 11:10 am</a>		</div>

		<p>Me personally, I like &quot;Have a configuration setting to put the network client into &#8216;slow mode.&#8217;&quot; &nbsp;The idea of auto-detecting this error makes me cringe. &nbsp;What if you auto-detect it wrong, then what happens? &nbsp;What if in the future the error code you&#8217;re looking for ends up being a valid code, now your &quot;workaround&quot; may cause problems.</p>
<p>You could go with &quot;Disable &#8216;fast mode&#8217; by default&quot; but I don&#8217;t like the idea of dumbing it down to the lowest common denominator just because a minority have a problem. &nbsp;I&#8217;d rather see the minority use a workaround rather than the majority use a workaround to enable the full product capabilities.<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-362113">
				<div id="div-comment-362113" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">derek</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060330-31/?p=31723#comment-362113">
			March 30, 2006 at 11:17 am</a>		</div>

		<p>&quot;The shell has already returned a partial file list to its caller by the time the error is detected. An application calls IShellFolder::EnumObjects and the shell issues a fast query.&quot;</p>
<p>Why not, if the error that the server returns is obvious enough, then issue the slow query and don&#8217;t return the items that have already been sent to the app?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-362123">
				<div id="div-comment-362123" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Andy</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060330-31/?p=31723#comment-362123">
			March 30, 2006 at 11:17 am</a>		</div>

		<p>Raymond,</p>
<p>is it possible to modify IEnumIDList::Next? I know you shouldn&#8217;t handle such a problem on that level, but you make the method behave normal until you get the error after file #100. Instead of returning the error, you&#8217;d recreate the file list using IShellFolder::EnumObjects (but in slow mode), run ::Next a hundred times and return item #101.</p>
<p>Advantages<br />
<br />&#8211; Works on all clients<br />
<br />&#8211; Doesn&#8217;t bother the user with bugs/contact some administrator<br />
<br />&#8211; Doens&#8217;t cause problems on other file servers, so they can take full advantage of the new fast query.</p>
<p>Disadvantages<br />
<br />&#8211; Ugly hack on the &quot;wrong&quot; level in the API<br />
<br />&#8211; Will probably cause a performance hit when querying the problem servers, since the first 100 files will be queried twice (in fast and slow mode).</p>
<p>I don&#8217;t think the last disadvantage is such a problem: most people probably won&#8217;t notice, and you can still post a mskb article about the correct drivers to &quot;improve performance&quot;. Bad performance is still better than missing files.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-362133">
				<div id="div-comment-362133" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Mike Swaim</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060330-31/?p=31723#comment-362133">
			March 30, 2006 at 11:22 am</a>		</div>

		<p>I&#8217;d take several approaches. I&#8217;d default to fast, but be have a configuration setting to set the client to always use slow mode.</p>
<p>FindFirstFile has an unused parameter. (Yes!) Use it to specify whether to use fast or slow mode. (Default to slow mode if the parameter is set to 0.)<br />
<br />Create a new error code to say that the server can&#8217;t handle fast mode. If FindNextFile encounters this bug, it returns the error code, and sticks an event in the event log.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-362143">
				<div id="div-comment-362143" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Mike Swaim</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060330-31/?p=31723#comment-362143">
			March 30, 2006 at 11:22 am</a>		</div>

		<p>I&#8217;d take several approaches. I&#8217;d default to fast, but be have a configuration setting to set the client to always use slow mode.</p>
<p>FindFirstFile has an unused parameter. (Yes!) Use it to specify whether to use fast or slow mode. (Default to slow mode if the parameter is set to 0.)<br />
<br />Create a new error code to say that the server can&#8217;t handle fast mode. If FindNextFile encounters this bug, it returns the error code, and sticks an event in the event log.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-362153">
				<div id="div-comment-362153" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">vsz</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060330-31/?p=31723#comment-362153">
			March 30, 2006 at 11:23 am</a>		</div>

		<p>The &quot;Do nothing&quot; approach would make a lot of favour to the world and MSFT itself, especially on the long run. Let those vendors and developers fix their own stuff.</p>
<p>If this cannot work, I&#8217;d choose this:<br />
<br />&quot;Have a configuration setting to put the network client into slow mode&quot;<br />
<br />+ Put an Event Log entry from Explorer if the bug is detected.</p>
<p>And finally: Document your protocols, so that 3rd parties could possibly avoid these kind of bugs in the first place.<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-362163">
				<div id="div-comment-362163" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Antgiant</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060330-31/?p=31723#comment-362163">
			March 30, 2006 at 11:23 am</a>		</div>

		<p>I personally am a fan of the &quot;Auto-detect the buggy driver and put up a warning dialog&quot; method although I would suggest also creating an event log message each time the error occurs.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-362173">
				<div id="div-comment-362173" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Gene</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060330-31/?p=31723#comment-362173">
			March 30, 2006 at 11:25 am</a>		</div>

		<p>Obviously all the alternatives suck, otherwise you would have picked one and not asked!</p>
<p>I can&#8217;t see why there&#8217;s two different &quot;speed&quot; queries in the first place. Is the &quot;fast&quot; query really that much faster? Why? What does it short-circuit? Does the &quot;slow&quot; query just do &quot;FOR I IN 1 TO 100; NEXT I&quot; after each disk read? :)</p>
<p>Seriously though, what sort of performance hit are we seeing here? I guess it must be significant, otherwise you&#8217;d just not use fast queries and be done with it.</p>
<p>It seem nothing really uses the fast query anyway, since the issue is showing up so late in the game.</p>
<p>I guess the best action would be &quot;disable fast mode by default&quot; since it&#8217;s just plain buggy and nobody seems to care to beat enough ass to get it fixed&#8230; otherwise you&#8217;d pop up a window saying &quot;get yer buggy drivers fixed&quot;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-362183">
				<div id="div-comment-362183" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Brian Stanton</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060330-31/?p=31723#comment-362183">
			March 30, 2006 at 11:29 am</a>		</div>

		<p>Would MS ever consider moving towards a &#8216;certified works on Vista&#8217; model? &nbsp;Only drivers/code/apps/components etc that pass MS tests get the certification. This buggy driver would obviously not get certified. &nbsp;Perhaps if an uncertified component was installed, Vista could display that info to the user in a obvious but unobtrusive manner.</p>
<p>Getting back to this specific instance, I would think most users would favor correctness over performance.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-362193">
				<div id="div-comment-362193" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joe Butler</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060330-31/?p=31723#comment-362193">
			March 30, 2006 at 11:31 am</a>		</div>

		<p>A complete directory listing is desireable over an incomplete listing. &nbsp;An error message should not be presented to the user. &nbsp;Windows should handle the problem transparently so that users get what they expect in terms of the data &#8211; forget the speed issue. &nbsp;If speed is a problem for the user, they&#8217;ll find the kb article detailing the issue and apply the appropriate patch or force Windows to override the compatability fix. &nbsp;Just remember, those missing files could represent mission critical data where limited testing did not test with more than the threshold number of files.</p>
<p>So, why can&#8217;t Windows internally issue a new slow request and merge the slow results with the incomplete results when it receives the fast error message &#8211; the app waiting for the next enumeration may stall for a short while as the new results are returned and merged (but only after file c. 100). &nbsp;At this particular point, all files identified in the internal slow request as not appearing in the incomplete fast list are appened to the, as yet unterminated, original query.</p>
<p>FindFirst&#8230; (1)<br />
<br />FindNext&#8230; (2)<br />
<br />FindNext&#8230; (3)<br />
<br />..<br />
<br />..<br />
<br />FindNext&#8230;<br />
<br />[internally, error returned from server to Windows] (don&#8217;t tell the caller &#8211; issue an internal slow request now)<br />
<br />..<br />
<br />[internal (got that one)]<br />
<br />[internal (got that one)]<br />
<br />[internal (a new one)] FindNext(101)<br />
<br />[internal (got that one)] FindNext(102)<br />
<br />[internal (got that one)]<br />
<br />..<br />
<br />..<br />
<br />[internal (a new one)] FindNext(n)<br />
<br />[internal (no more files)] FindNext (no more files)</p>
<p>Benefit.<br />
<br />XP users are used to slow network listings and can continue to work without issue when using Vista.<br />
<br />Scheme seems to be backwards compatible for all applications using the internally-patched FindFirst.. FindNext&#8230; APIs.<br />
<br />Users don&#8217;t appear to &#8216;mislay&#8217; data.<br />
<br />Microsoft don&#8217;t get reports of &#8216;Vista can&#8217;t see my files&#8217;.</p>
<p>Downside.<br />
<br />Vista is not as fast as the developers know it could be. &nbsp;<br />
<br />Competing OSes that don&#8217;t care about the end user will win in directory listing benchmarks.<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-362203">
				<div id="div-comment-362203" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Justin Bowler</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060330-31/?p=31723#comment-362203">
			March 30, 2006 at 11:32 am</a>		</div>

		<p>I would do exactly what Andy suggests.</p>
<p>Admitedly it is an ugly hack, but it&#8217;s already in an error handling routine so that&#8217;s not that big an issue. In general ugliness is acceptable when you are already in the &quot;Something bad happened&quot; state.</p>
<p>The requery might have to be a little smarter than just &quot;loop 100&quot;, since the returned lista may have chnaged between the two calls.</p>
<p>This is really the best fix, as it allows fast mode to be enabled, and allows it for others. It also provides a nice &quot;forward compaitibility&quot; so that when the file server is fixed things start working fine.<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-362213">
				<div id="div-comment-362213" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">PaulM</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060330-31/?p=31723#comment-362213">
			March 30, 2006 at 11:34 am</a>		</div>

		<p>Am I the only one who is breaking into a cold sweat reading the majority of these suggestions?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-362223">
				<div id="div-comment-362223" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Christian</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060330-31/?p=31723#comment-362223">
			March 30, 2006 at 11:34 am</a>		</div>

		<p>&#8216; Have a configuration setting to put the network client into &quot;slow mode&quot; &#8216;</p>
<p>is the right thing to do!</p>
<p>When we upgraded to XP Sp1 (hope I remember correctly) our Samba server made problems: Clients could not join the domain anymore.</p>
<p>We had to prepare the image with the &quot;RequireSignOrSeal&quot; registry key.</p>
<p>Overall this was not a big problem.</p>
<p>Especially consider that people will roll out Vista (while the old NAS still is there) and can prepare to include that fix in it!</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-362233">
				<div id="div-comment-362233" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Coleman</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060330-31/?p=31723#comment-362233">
			March 30, 2006 at 11:34 am</a>		</div>

		<p>Auto-detect the buggy driver version and put-up a warning dialog with the option to re-run the query in slow-mode and the ability to always do that in this particular scenario (&quot;Always perform this action/Don&#8217;t show again&quot; setting). &nbsp; Default to fast mode. &nbsp;</p>
<p>Note though that the average user won&#8217;t know what this means anyway.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-362253">
				<div id="div-comment-362253" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Jesse</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060330-31/?p=31723#comment-362253">
			March 30, 2006 at 11:44 am</a>		</div>

		<p>Just out of curiosity, why did Windows XP always use the slow mode?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-362263">
				<div id="div-comment-362263" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Marcel</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060330-31/?p=31723#comment-362263">
			March 30, 2006 at 11:45 am</a>		</div>

		<p>If Vista works around this problem transparently, then how could you force the buggy driver developer to fix the driver? What is the point of having this fast query if it can&#8217;t be used?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-362273">
				<div id="div-comment-362273" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Anonymous Coward</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060330-31/?p=31723#comment-362273">
			March 30, 2006 at 11:50 am</a>		</div>

		<p>The only right solution is to tell the developer and not change your code. &nbsp;The developer then has several months to address this with their customer base. &nbsp;If they don&#8217;t do a satisfactory job by the time Vista ships, also create a knowledgebase article saying they are broken and point to them for the solution.</p>
<p>Any other route will make things a lot worse. &nbsp;Any form of workaround will end up with you deciding to go in slow mode even after they have fixed the problem. &nbsp;At that point it won&#8217;t be possible to tell if Microsoft is using the slow mode as an anti-competitive practise or for &quot;compatibility&quot;.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-362283">
				<div id="div-comment-362283" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Martin</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060330-31/?p=31723#comment-362283">
			March 30, 2006 at 11:50 am</a>		</div>

		<p>I would do a combination of<br />
<br />&#8216;Have a configuration setting to put the network client into &quot;slow mode&quot;&#8217; and &#8216;Auto-detect the buggy driver and put up a warning dialog&#8217;</p>
<p>The dialog should say something like this: The server you are accessing only returns the first 100 files when using fast queries. Do you want to turn fast queries off? Y/N.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-362293">
				<div id="div-comment-362293" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Anon</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060330-31/?p=31723#comment-362293">
			March 30, 2006 at 11:50 am</a>		</div>

		<ol>
<li>Always perform the fast query if it is significantly faster, dont change the OS, if you know that not all data came back write a log entry warning, linking to the knowledge article. Sometime in the future the bug will be fixed&#8230;.but if not, the OS is performing to its capability
<p>2. Make the mode (fast/slow) user changeable and if after the first pull the data is incomplete force the mode to slow and inform the user of the change and the reason -&gt; link to article<br />
</li>
</ol>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-362303">
				<div id="div-comment-362303" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Michael B</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060330-31/?p=31723#comment-362303">
			March 30, 2006 at 11:50 am</a>		</div>

		<p>Detect the buggy driver, put up a warning dialog asking them to ask the administrator to upgrade the driver.</p>
<p>Give the user the option to ignore the error and continue with buggy behavior, or retry in degraded mode. &nbsp;Explain what degraded mode is.</p>
<p>RECORD THE ISSUE TO THE EVENT LOG, ALSO REPORT WHAT THE USER CHOOSE, AND RECORD HOW TO UNDO THE CHOICE.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-362313">
				<div id="div-comment-362313" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Paul</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060330-31/?p=31723#comment-362313">
			March 30, 2006 at 11:52 am</a>		</div>

		<p>The first time you get the weird error code for a particular server, let the user choose what to do: either try again (once) in Slow Mode, turn off Fast Mode for this server (i.e. add it to the local Slow Mode cache), turn off Fast Mode for all servers, or Cancel (i.e. live with the reduced list, and ignore any redirects that may allow a DoS attack).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-362323">
				<div id="div-comment-362323" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joe Dietz</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060330-31/?p=31723#comment-362323">
			March 30, 2006 at 11:54 am</a>		</div>

		<p>I&#8217;m going to take the not-so-wild guess that we are talking about Samba here. &nbsp;The Samba folks themselfves are cool and are always interested in fixing problems, and it sounds like they have. &nbsp;However vendors that sound like &#8216;DeadRat&#8217; aren&#8217;t so cool and aren&#8217;t so interested in fixing problems. &nbsp;Given how the DeadRat (and friends) community works socially, I&#8217;ll be reading on /. how this was a MSFT conspiracy to break compatibility with everybody with DeadRat installed. &nbsp;Also the number of embedded systems with Samba installed is scary, some of which have very old versions of Samba that the Samba team would probably rather went away as well.</p>
<p>Perhaps some sort of additional attribute could be added to the server code. &nbsp;If this attribute is present that say identifies the server as W2K3ServerR2SP1 use the fast query mode, if not, act like XP. &nbsp;Someday the Samba folks will implement this new attribute as well and then all &#8216;distributors&#8217; of Samba when they pick upp the fixed Samba bits will automatically start using the fast query mode.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-362333">
				<div id="div-comment-362333" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://raw-output.org' rel='external nofollow' class='url'>Jacobo</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060330-31/?p=31723#comment-362333">
			March 30, 2006 at 11:55 am</a>		</div>

		<p>(joke) Exploit the bug and make the server crash. Then only 100 items will have appeared because the server crashed :-)</p>
<p>Seriously, what I&#8217;d expect Windows to do is to detect the error, repeat the query in slow mode, fast forward the 100-items-or-so behind the scenes, and replace the iterator under the program&#8217;s nose :-)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-362343">
				<div id="div-comment-362343" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://ilyabirman.ru' rel='external nofollow' class='url'>Ilya Birman</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060330-31/?p=31723#comment-362343">
			March 30, 2006 at 11:56 am</a>		</div>

		<p>(Sorry, haven&#8217;t read all the comments above.)</p>
<p>Make the network client, not Explorer, automatically re-query dir list in slow mode when the problem is detected. This should be 100% transparent to every program including Explorer itself.</p>
<p>AND</p>
<p>Store last &quot;16&quot; (I would suggest more) buggy servers not to issue the first fast query at all, to make it all work as fast as you can.</p>
<p>Advantages:<br />
<br /> &nbsp;&#8211; everything just works<br />
<br /> &nbsp;&#8211; it works faster, that XP<br />
<br /> &nbsp;&#8211; user is not asked questions he has no idea about</p>
<p>Disadvantages:<br />
<br /> &nbsp;&#8211; buggy servers, if &quot;17&quot; or more, work even slower then they could if slow mode would have been always enabled (hey, but it&#8217;s a buggy server, but it still works &#8211; cool!)<br />
<br /> &nbsp;&#8211; you need to use couple of bytes of windows registry to store the &quot;16&quot;-server list</p>
<p>As far as I can see, advantages beat out the disadvantages completely.</p>
<p>Oh, and I&#8217;m not sure about implementation issues regarding my solution, just have no idea :-)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-362363">
				<div id="div-comment-362363" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Adam</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060330-31/?p=31723#comment-362363">
			March 30, 2006 at 12:02 pm</a>		</div>

		<p>How would the HTTP redirect DOS attack work?</p>
<p>HTTP doesn&#8217;t have a &quot;fast mode&quot;, so being redirected through a billion web pages can&#8217;t cause this bug to be tickled. It&#8217;s a different protocol to the one that we&#8217;re talking about here, isn&#8217;t it??</p>
<p>Besides, if an app/the HTTP stack doesn&#8217;t have an HTTP redirect limit that stops you being redirected a billion times anyway, you&#8217;ve already got a DOS vulnerability on your hands.<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-msdnarchive odd alt thread-odd thread-alt depth-1" id="comment-362373">
				<div id="div-comment-362373" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">MSDN Archive</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060330-31/?p=31723#comment-362373">
			March 30, 2006 at 12:02 pm</a>		</div>

		<p>My vote:</p>
<p>Explorer should recognize the strange error code and display an error message to the user saying, &quot;The server \servername returned an unexpected error. &nbsp;Contact the administrator of \servername.&quot;</p>
<p>Then, of course, have a KB with THAT EXACT ERROR TEXT in it that people could use to find the root cause of the problem and get the fix.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-362383">
				<div id="div-comment-362383" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Michael B</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060330-31/?p=31723#comment-362383">
			March 30, 2006 at 12:04 pm</a>		</div>

		<p>Yeah, let me underscore that regardless of which camp wins (user&#8217;s blissful ignorance camp vs. punish for bad drivers camp), full logging of this condition is key. &nbsp;It would be of enormous help to the admin who is going to get a vague enough problem report from the user one day if they check the event log and it has useful information about the condition.<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-362393">
				<div id="div-comment-362393" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Anders Munch</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060330-31/?p=31723#comment-362393">
			March 30, 2006 at 12:04 pm</a>		</div>

		<p>My choice would be to auto-detect, then pop up an error dialogue explaining there&#8217;s a bug in the server. &nbsp;In the same dialogue, propose to work around it by switching a global setting to &quot;slow mode&quot;.</p>
<p>Advantages:<br />
<br />&#8211; Simple to implement.<br />
<br />&#8211; Doesn&#8217;t hide the bug, and clearly assigns responsability.<br />
<br />&#8211; Provides a practical workaround when the problem appears.</p>
<p>Disadvantages:<br />
<br />&#8211; A one-time nuisance dialogue.<br />
<br />&#8211; Doesn&#8217;t allow for the use of fast mode with good servers, if the user has met just one bad one.<br />
<br />&#8211; Users will tend to forget the setting is changed and never use fast mode again, even if the server is fixed.</p>
<p>About those clever schemes people are suggesting, where you try fast mode first, then automagically fall back on slow mode? &nbsp;Well, it just ain&#8217;t worth the complexity. Remember that such workarounds tend to stick around longer than the original bug.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-362403">
				<div id="div-comment-362403" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">James W.</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060330-31/?p=31723#comment-362403">
			March 30, 2006 at 12:04 pm</a>		</div>

		<p>Solution below is way too complicated for reality but maybe it will inspire something else.</p>
<p>Default to slow mode to maintain accuracy of the Directory Listing. That 101st file that is inaccessible is unacceptable! </p>
<p>If an error dialog and Event Logging are used as well as disabling Fast mode per Network drive maybe the default can be fast mode. (Probably usability test the difference.) If fast mode is the default the user is more likely to see this situation.</p>
<p> Then allow the user to configure the setting similar to &quot;Optimize for Removal&quot; that is available for USB drives. This can be available on the &quot;General&quot; Tab of network drive Properties. The wording would be similar to the text used on the &quot;Troubleshoot&quot; tab of Advanced Display Properties. &quot;Disabled all accelerations. Use this setting only if your computer (&#8230;) has (&#8230;) severe problems&quot;. &quot;All accelerations are enabled. Use this setting if your computer has no problems. (&#8230;)&quot;<br />
<br />Otherwise maybe another feature in TweakUI is more appropriate. </p>
<p>The first time the error value is received then fast mode is disabled with a message written to the Eventlog. The user should also get an &quot;OK&quot; style dialog because that 101st file may not be visible. Explorer should then Refresh the directory list using slow mode.</p>
<p>Disadvantage:<br />
<br />This really is a full compatibility hack.<br />
<br />Multiple Code paths complicate testing.<br />
<br />If a Drive letter gets assigned to a different drive.</p>
<p>Advantage:<br />
<br />Data integrity.<br />
<br />User confidence. They will be protected as much as possible from data loss.<br />
<br />Low annoyance. (Especially defaulting to slow mode.)<br />
<br />Don&#8217;t write to the eventlog for every occurance because the option is disabled automatically.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-362413">
				<div id="div-comment-362413" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Christian</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060330-31/?p=31723#comment-362413">
			March 30, 2006 at 12:05 pm</a>		</div>

		<p>Raymond, can you please explain a little bit more what this fast mode is?</p>
<p>Can I as developer also use it?</p>
<p>Is there anything magical about the Win32 FindFirst, findnext things?</p>
<p>Or the .NET &nbsp;Directory.GetFiles?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-362423">
				<div id="div-comment-362423" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Peter Ritchie</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060330-31/?p=31723#comment-362423">
			March 30, 2006 at 12:09 pm</a>		</div>

		<p>I would have to agree with the comments suggesting/agreeing-with &quot;Do nothing&quot;.</p>
<p>It&#8217;s noble to want to ensure a reliable user experience; but, when you&#8217;re dealing with third-party software, at what point do you &quot;draw the line&quot;. &nbsp;By adding something to compensate for buggy third-party software not only do you increase the code base with code that (hopefully) will eventually be entirely unrequired, you also bloat the code base with code that not all customers will need.</p>
<p>You&#8217;re also setting a policing precedent suggesting that Explorer will work with all drivers even if they are buggy. &nbsp;Do you really want that weight on your shoulders? &nbsp;What about third-party software bugs you can&#8217;t compensate for? &nbsp;Should a customer be expected to understand that you tweaked explorer for one bug and not another?</p>
<p>I would suggest the &quot;Do nothing&quot; approach, continuing to detect and inform the user of errors. &nbsp;If a user encounters the error they can find a KB article that describes the error and what to do about it. &nbsp;Then, have the ability to force explorer into slow mode via some configuration option.</p>
<p>What about situations where the error occurs and has nothing to do with fast-mode?</p>
<p>Compensating for a third-party bug is just a nightmare: design a fix, create unit tests, create test cases, test the fix, perform full regression testing with the fix in non-failure situations to make sure the fix didn&#8217;t affect anything else, manage the fix, create a task to re-address the fix at a later date when its deemed all third-party software is stable, remove the fix, perform full regression test (again) to make sure removable didn&#8217;t break anything, etc. etc. etc.</p>
<p>&quot;Give me the strength to accept the things I cannot change and change the things I can and give me the wisdom to know the difference.&quot;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-362433">
				<div id="div-comment-362433" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Adam</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060330-31/?p=31723#comment-362433">
			March 30, 2006 at 12:13 pm</a>		</div>

		<p>Depends.</p>
<p>If the buggy server is common (say, has &gt;10% marketshare of servers speaking this protocol in same price range?) then make slow mode default with a configuration to turn fast mode on. It&#8217;s the third rule of optimisation &#8211; Make sure what you have is correct. Then make it fast, if making it fast doesn&#8217;t make it less correct.</p>
<p>If the buggy server is not common, do nothing.</p>
<p>Of the remaining options, Autodetect + warning dialog + syslog message + auto-work-around next time would be next, because it&#8217;s not that bad an option.</p>
<p>Making the user dig around to make things work properly just sucks. It should work properly by itself, and if it notices it&#8217;s not working properly then it should notice and tell you and ask you there and then (which is the previous option)</p>
<p>Doing that per-application is the worst, as the user now has to dig around all over the place to get all their apps to do the right thing, and some apps won&#8217;t even have that option, and those that do might have a buggy &quot;go slow&quot; switch, etc, etc, etc&#8230;<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-362453">
				<div id="div-comment-362453" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Dave Oldcorn</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060330-31/?p=31723#comment-362453">
			March 30, 2006 at 12:17 pm</a>		</div>

		<p>I would suggest the last option; disable fast mode by default, the logic being that since that&#8217;s how it was in XP, nobody knows any different. It&#8217;s not a good solution, but it&#8217;s the most reliable one, most people will be none the wiser, and anyone who knows and cares enough to complain will be able to fix it themselves.</p>
<p>There is no chance that any of the &#8216;break things&#8217; options (including the &#8216;break things, but allow expert users who can use the registry or search the KB to fix it&#8217;) will be acceptable if the software in question is likely to be in use by any but the smallest number of average consumers, particularly if it is inside unpatchable hardware.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-362463">
				<div id="div-comment-362463" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">diegocg</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060330-31/?p=31723#comment-362463">
			March 30, 2006 at 12:19 pm</a>		</div>

		<p>Blacklist the specific version of software which does this and automatically set it to &quot;slow-mode&quot; &#8211; and output a warning to the event log. Being a bit slower is not a critical failure, a popup warning it is overkill for this kind of bug.</p>
<p>But you can prepare your software to work against a buggy version using a blacklist and still get it wrong: other buggy servers may be released in the future, so autodetecting the buggy server and reconnect/relist the directory automatically &#8211; and add a warning to the event log &#8211; is a must aswell.</p>
<p>Storing a list of recent buggy servers is stupid. What if the administrator realizes that the server is broken and fixes it? The client would get it wrong. Either do a blacklist of broken servers or detect and fix it somehow dinamically.</p>
<p>And hey, the &quot;future buggy server&quot; may be one from Microsoft or a broken security upgrade, so you <em>really</em> want to autodetect broken servers regardless of the avalability of broken servers anyway. Is about robustness. (Also add registry keys to tweak all this ie: keys to allow clients to autodisconnect from buggy servers</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-362483">
				<div id="div-comment-362483" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Darren Stone</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060330-31/?p=31723#comment-362483">
			March 30, 2006 at 12:20 pm</a>		</div>

		<p>Easy. </p>
<p>If the server returns an error code, report the error.</p>
<p>If you recognize the error code, provide a link to the knowledge base article that describes the problem.</p>
<p>In the knowledge base article, describe possible solutions (e.g. how to disable fast mode in Explorer.)</p>
<p>Case closed.</p>
<p>&#8212;-</p>
<p>Even non-technical users try to track down problems like this on a regular basis. &nbsp;The worst thing to do is hide the fact that there is a problem. &nbsp;Inform people, provide a possible workaround, and put the onus on the 3rd party to fix their software.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-362503">
				<div id="div-comment-362503" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">J</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060330-31/?p=31723#comment-362503">
			March 30, 2006 at 12:27 pm</a>		</div>

		<p>&quot;About those clever schemes people are suggesting, where you try fast mode first, then automagically fall back on slow mode? &nbsp;Well, it just ain&#8217;t worth the complexity.&quot;</p>
<p>I don&#8217;t know whether the resulting race condition applies to this problem, but I&#8217;m not sure people suggesting this approach have considered it. &nbsp;If you take 2 different snapshots at 2 different times and then combine the snapshots, you may get an impossible combination of data items. &nbsp;This would happen if you make a fast query, detect the error, make a slow query, and just don&#8217;t return the items that you&#8217;ve already returned. &nbsp;What if between the fast and slow query, the directory snapshot has changed?</p>
<p>If your directory listing snapshot becomes invalid the microsecond after you take it, that&#8217;s fine. &nbsp;But if your snapshot shows that File A and File B are existing at the same time, you may run into problems. &nbsp;I don&#8217;t know enough about the problem domain to know whether this is a big deal or not.<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-362513">
				<div id="div-comment-362513" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Mark Sowul</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060330-31/?p=31723#comment-362513">
			March 30, 2006 at 12:27 pm</a>		</div>

		<p>Unfortunately I have to concur with the suggestions which state to cache the first 100 and re-run the query on the 101st if necessary concurrent with a list of &quot;known bad&quot;</p>
<p>It should be unnecessary but the advantages definitely outweight the downsides:</p>
<p>&#8211; You get fast mode when you can<br />
<br />&#8211; Only the stupid servers are punished<br />
<br />&#8211; Stupid servers are not punished as badly when found in the cache<br />
<br />&#8211; You&#8217;ve had to do this kind of crap before, what&#8217;s one more hack? &nbsp;(e.g. the lists of known-bad optical drives, usb devices, etc that I&#8217;ve found in the registry)</p>
<p>Again, it is important that it be written to the event log.</p>
<p>It&#8217;s unfortunate that this crap is necessary but it&#8217;s a necessary evil if you want to play with the retarded kids in the sandbox.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-362533">
				<div id="div-comment-362533" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Mike</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060330-31/?p=31723#comment-362533">
			March 30, 2006 at 12:40 pm</a>		</div>

		<p>If you get the wierd error code log it in the event log (being careful not to spam the event log to much of course). &nbsp;Popping up UI that nobody understands (and they won&#8217;t) sucks.</p>
<p>Having done that doing nothing (else) would be best if you can get away with it.</p>
<p>If not then starting fast and falling back when the error is detected is good. &nbsp;However you said that was problematic because you&#8217;ve already returned partial results. &nbsp;The solution to that would be to just ask for 100 items up front regardless of what the app actually asked for and then return results back from this cache.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-362553">
				<div id="div-comment-362553" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">B.Y.</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060330-31/?p=31723#comment-362553">
			March 30, 2006 at 12:51 pm</a>		</div>

		<p>My first choice: auto-detect the buggy driver and put up a warning dialog.<br />
<br />My second choice: do nothing.</p>
<p>But in either case, I&#8217;d also disable fast mode in explorer (only) by default.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-362573">
				<div id="div-comment-362573" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.unset.net/blog/' rel='external nofollow' class='url'>Patrick Correia</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060330-31/?p=31723#comment-362573">
			March 30, 2006 at 12:58 pm</a>		</div>

		<p>I think the proponents of &quot;do nothing, it&#8217;s the file server&#8217;s fault&quot; and &quot;show an error message to the user&quot; do not fully appreciate the way users view Windows. &nbsp;If there&#8217;s a silent data loss, it WILL be considered by most to be a bug in Windows, and if users are exposed to an error dialog they don&#8217;t understand and probably can&#8217;t fix, it WILL (rightfully) be considered an abusive interface design, regardless of the fact that both are &quot;correct&quot; from a strictly developer&#8217;s point of view. &nbsp;I was initially thinking along the lines of &quot;start with a fast query, and if you get the error silently switch to the slower query&quot; but now I see that this presents insurmountable issues with the possibility that the directory has changed.</p>
<p>I think the only option is to modify the API. &nbsp;Calls to IShellFolder::EnumObjects using the current syntax (meaning legacy programs) should continue to use the slow queries. &nbsp;As &lt;a href=&quot;#564887&quot;&gt;Brad Corbin suggested above&lt;/a&gt;, you should make a new function that allows the application to explicitly request a fast query and that explicitly defines an error for &quot;directory listing truncated&quot; or something (I&#8217;m not sure whether the error should be specific to this case or should describe any case where the listing can&#8217;t be completed). &nbsp;It&#8217;s possible that you could accomplish this with an extra parameter to the existing IShellFolder::EnumObjects function, but this might be too much of a change in what is rightfully considered a stable API by developers.</p>
<p>Advantages:<br />
<br />&#8211; Does not break any existing applications<br />
<br />&#8211; Does not require complex caching, more user-level configuration, abusive error messages, or re-querying of directories<br />
<br />&#8211; Allows new applications to leverage the fast queries, but only on the condition that they are able to handle the possible side effects</p>
<p>Disadvantages:<br />
<br />&#8211; Legacy programs will not benefit from the possible speed increases in Vista (although they will not run any slower) &#8211; this could be perceived as bias on the part of Microsoft<br />
<br />&#8211; Expands the API</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-362583">
				<div id="div-comment-362583" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Anthony</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060330-31/?p=31723#comment-362583">
			March 30, 2006 at 1:01 pm</a>		</div>

		<p>How about adding a parameter or overloaded version of IShellFolder::EnumObjects to implement a fast mode query, have an error code that describes the bug, and let whomever implements this version deal with the bug?</p>
<p>Advantages: </p>
<p>Moves the problem to the application layer, which would need updated anyway.</p>
<p>Less ugly hackery.</p>
<p>No worries for current code.</p>
<p>Disadvantages:</p>
<p>Is it possible? &nbsp;(My gut says that it wouldn&#8217;t make any sense putting the option up at this layer.)</p>
<p>Apps need updated to use fast queries.</p>
<p>Makes one vendor&#8217;s buggy driver everyone&#8217;s problem.<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-362593">
				<div id="div-comment-362593" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.rkuo.com' rel='external nofollow' class='url'>Richard Kuo</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060330-31/?p=31723#comment-362593">
			March 30, 2006 at 1:18 pm</a>		</div>

		<p>Some basic tenets:<br />
<br />Do what&#8217;s expected.<br />
<br />Work by default.</p>
<p>Clearly fall back to slow mode always is a nice floor for this, so we can use that.</p>
<p>One question is how much &quot;better&quot; fast mode is than slow mode. &nbsp;Obviously there must be some reason to use one mode or the other. &nbsp;Is a user or application ever going to notice that slow mode is actually slow?</p>
<p>If there&#8217;s no appreciable difference and fast mode vs slow mode was a design fubar, then &quot;just stop using fast mode&quot; is a possible solution.</p>
<p>Now let&#8217;s say that isn&#8217;t an option. &nbsp;Why can&#8217;t you just restart the enumeration if the fast mode operation fails? &nbsp;Are you displaying the results on the fly and that&#8217;s why the enumeration can&#8217;t be restarted? &nbsp;Perhaps you could buffer the results if that is the case, to allow a restart in slow mode to be possible if a specific error code is detected. &nbsp;I don&#8217;t think merging the results is a good idea due to possible race conditions that the enumerator might be accounting for.</p>
<p>Another idea is to use slow mode all the time initially, and probe when an opportunity presents itself for fast mode compatibility. &nbsp;This would ensure compatibility and allow the speed up to occur pretty quickly.</p>
<p>Can you probe the server via OS prior to any enumerations? &nbsp;That might help.</p>
<p>I do not believe enabling or toggling slow/fast mode via the registry is appropriate. &nbsp;This requires manual user intervention and will still break certain people by default. &nbsp;It&#8217;s our job as programmers and people shipping actual product to take work away from our users, not give it to them.</p>
<p>In all cases, you should notify the vendor and request a fix to be made. &nbsp;And add a regression test if possible.</p>
<p>Richard Kuo<br />
<br /><a rel="nofollow" target="_new" href="http://www.rkuo.com" rel="nofollow">http://www.rkuo.com</a></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-362603">
				<div id="div-comment-362603" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Mike M</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060330-31/?p=31723#comment-362603">
			March 30, 2006 at 1:19 pm</a>		</div>

		<p>If this software has any reasonable market share, then IMO it is absolutely not acceptable to &quot;do nothing.&quot; &nbsp;Vista would be introducing a regression. &nbsp;It doesn&#8217;t matter whose fault it is, the directory listing would work with XP and not work with Vista. &nbsp;That is an unacceptable result from a performance optimization.</p>
<p>Now, if servers running this software are very rare, or you could work with the distributors to get the fix to customers preemtively, then it might be worth the tradeoff to &quot;do nothing.&quot;</p>
<p>Also, several people supporting &quot;do nothing&quot; suggested something along the lines of &quot;get the vendor to fix their product.&quot; &nbsp;Apparently they missed the fact that the bug has already been fixed, but distributers are still shipping the broken version to customers. &nbsp;Getting the developer of the server software to fix the bug doesn&#8217;t magically make that fix available to every customer, for reasons mentioned in the article.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-362613">
				<div id="div-comment-362613" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Darren Stone</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060330-31/?p=31723#comment-362613">
			March 30, 2006 at 1:24 pm</a>		</div>

		<p>I don&#8217;t like the way this problem has been approached. &nbsp;There are really only two possible outcomes:</p>
<p>Option A: The user requested a directory listing; give them their files. &nbsp;This is just a simple matter of coding.</p>
<p>Option B: Fail.</p>
<p>The thing is, this is a largely non-technical decision that no one here is qualified to make. &nbsp;It depends on all sorts of factors we know nothing about: how common the problematic server is, where it&#8217;s used, is it worth the risk to add this specical case in Explorer, etc.</p>
<p>Now let&#8217;s say we want to discuss option B, how to fail. &nbsp;Well, this really becomes a generic discussion, doesn&#8217;t it? &nbsp;The bottom line is that this is a problem for institutions that have a diverse computer network, and solution is to make it as straight forward as possible for IT departments to diagnose and solve to this network problem. &nbsp;For them, that would be either disabling Fast mode on their users&#8217; machines, or updating the problematic servers.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-362623">
				<div id="div-comment-362623" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Xander</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060330-31/?p=31723#comment-362623">
			March 30, 2006 at 1:28 pm</a>		</div>

		<p>If the other software contains a bug, the onus should be on that vendor to fix their software.</p>
<p>Incorporating any kind of workaround into the system means there&#8217;s more code for the system to carry forward, more code in the system that could itself contain bugs, and more behaviours to be honoured when implementing future changes.</p>
<p>Ignoring CS-level OS research, the two most important developments in deployed operating systems over the last 20 years have been the move to abstraction (don&#8217;t expose the implementation, so it can be changed later) and minimising side effects (an API to do X should only do X, not X/Y/Z).</p>
<p>Both Microsoft and Apple started off at one of this spectrum, but over time both are moving to the other.</p>
<p>It&#8217;s a fact of life that you can&#8217;t resolve every interoperability bug, and there will always be situations where buggy software that&#8217;s already shipped has to be broken.</p>
<p>You will obtain a far more reliable system in the long run if the default policy is that broken software can be allowed to break rather than supporting it by any means necessary (there are obviously exceptions, but those should be reserved for &quot;affects 95% of our customers&quot; issues).</p>
<p>So I would do nothing, and treat this as any other kind of error (log it so that it can be noticed, but if the server is faulty then the server is faulty).</p>
<p>If you add extra code to make this particular case work, you&#8217;re just deferring the problem &#8211; the real question is what would you do if, after shipping the workaround, you discover the workaround causes a conflict with something else? Add another workaround?</p>
<p>If Vista is going to be thrown away again in 5 years and rebuilt, that approach is fine. However it&#8217;s intended to be around for a decade or longer, bugs need to be fixed.</p>
<p>You need a solid foundation for any project, and in software terms that means short term pain (&quot;your new OS doesn&#8217;t work with my old server&quot;) for long term gain (fast mode becomes standard, and slow mode can be retired).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-362633">
				<div id="div-comment-362633" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">TK</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060330-31/?p=31723#comment-362633">
			March 30, 2006 at 1:29 pm</a>		</div>

		<p>The solution should be:</p>
<p>-Report the error to the user when it occurs. Simply tell them the result set is incomplete and give a KB #. </p>
<p>-Supply a reg key or something to use the slow (call it high-compatability) mode. Document this in the KB or even the error message.</p>
<p>-Notify the vendor(s) that you will not be fixing it in Vista.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-362643">
				<div id="div-comment-362643" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Scott S.</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060330-31/?p=31723#comment-362643">
			March 30, 2006 at 1:30 pm</a>		</div>

		<p>You could always send this to your marketing department for a solution.</p>
<p>I predict they&#8217;d recommend having Vista servers identify themselves as such, and allow clients to use fast querying. &nbsp;Anything else is stuck in slow mode. &nbsp;One more bullet point for the feature list.</p>
<p>Seriously, I assume we&#8217;re talking about a Linux/Unix system that is causing the problem based on your use of the term &quot;distributors&quot;. &nbsp;</p>
<p>Unfortunately you cannot be the &quot;Good guy&quot; in this scenario and fix it for them and get all that nice publicity for fixing a hole for them since the distributors would need to integrate your fix.</p>
<p>If this is an open source system we&#8217;re discussing, you could always analyze the code and find if there&#8217;s any way to detect this particular system based on other abnormalities &nbsp; &nbsp;that may be more in line with your existing process for handling queries. &nbsp;Hard to say if that would be worthwhile though. &nbsp;You guys may just end up spinning your wheels taking the time to do that.<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-362653">
				<div id="div-comment-362653" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">whinger</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060330-31/?p=31723#comment-362653">
			March 30, 2006 at 1:32 pm</a>		</div>

		<p>Are we talking about Samba here?</p>
<p>If so, then lets not forget that you guys don&#8217;t allow the Samba team useful access to the SMB documentation. Microsoft clearly don&#8217;t want to interoperate with Samba, so isn&#8217;t this more of an opportunity than a problem? The most consistent action would be to detect and blacklist any such servers, refusing to talk to them at all.<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-362663">
				<div id="div-comment-362663" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">guillermov</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060330-31/?p=31723#comment-362663">
			March 30, 2006 at 1:36 pm</a>		</div>

		<p>I know no specifics, but let&#8217;s assume the following:</p>
<p>1. Error can be detected while in slow mode.<br />
<br />2. There&#8217;s no significant performance difference between the two modes while querying directories with a limited number of files.</p>
<p>If that&#8217;s so, why not try the other way around? Start in slow mode, and keep using it until a query is met that could trigger the error. If the query gives no errors, mark the server as fast-mode-enabled and use fast mode in subsequent queries. And if the list can have no arbitrary limit in length, even better.</p>
<p>But most probably I have no clue and I&#8217;m just speaking nonsense.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-362683">
				<div id="div-comment-362683" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Brandon Bloom</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060330-31/?p=31723#comment-362683">
			March 30, 2006 at 1:40 pm</a>		</div>

		<p>I think this could absolutely be done transparently (save for a mention in the event log).</p>
<p>If the fast iterator fails with this weird error, replace it with a slow iterator and simply refresh the view. It seems unnecessary to record the bad server.</p>
<p>Assuming fast queries really are faster, performance will be faster for small queries and the hurt for &gt;100 file results will be unnoticeable.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-362703">
				<div id="div-comment-362703" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">kbiel</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060330-31/?p=31723#comment-362703">
			March 30, 2006 at 2:18 pm</a>		</div>

		<p>Raymond: I think a lot of the commenters are confused about the scenario. &nbsp;Some believe the problem is with a local driver on Vista supplied by the vendor and most do not know what protocol is being used.</p>
<p>Presumptions:<br />
<br />The server is from another company, likely a non-OSS competitor such as Novell. &nbsp;They are emulating SMB for MS clients. &nbsp;SMB natively includes slow and fast modes but the competitors server has a bug in its SMB driver so there is nothing MS can do on the client side to fix or work around the actual bug.</p>
<p>Suggestions:<br />
<br />If a server reports an error to the client, display the error in a dialog. &nbsp;In this dialog, include a the text &quot;The server has reported an error that may be resolved by using a slower access method. &nbsp;Would you like to attempt to access the server using the slower method?&quot; with buttons &quot;Yes&quot;, &quot;No&quot; and &quot;Cancel&quot;. &nbsp;If they click &quot;Yes&quot;, switch to slow mode, store the name of the server for future reference (but only if the server share is mounted to a drive letter; otherwise slow mode is a session only setting) and requery.</p>
<p>Pros:<br />
<br />-This resolves the problem for any server from any vendor that may have a bug in their fast query implementation.<br />
<br />-The user is now aware of the problem and where the problem occurred (i.e. not in Vista).<br />
<br />-A knowledgable user/administrator can now contact their vendor with a complaint and the exact error text.<br />
<br />-Windows has given the user an option that may fix the problem NOW from their perspective.</p>
<p>Cons:<br />
<br />-Nobody likes getting dialogs reporting an error.<br />
<br />-Nontechnical users are more likely to press cancel initially (but will probably try yes eventually and their experience will improve).<br />
<br />-On some other buggy implementation of SMB, the change in setting may not improve the user experience.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-362713">
				<div id="div-comment-362713" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Jen Kilmer</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060330-31/?p=31723#comment-362713">
			March 30, 2006 at 2:24 pm</a>		</div>

		<p>This reminds me of one of the Key Diffrences between the NT &amp; Windows teams. </p>
<p>The NT team would be more likely to stay &quot;pure&quot;: if they got the odd error, they probably wouldn&#8217;t return any data. Instead, an error to the extent of &quot;Your server is incorrectly reporting the files available. Please contact the vendor for an updated version&quot; or some such would be displayed. Or NT would have refused to work with the server anyway. </p>
<p>The Windows team would take the &quot;if it worked before the customer installed Vista it should keep working&quot; and would likely disable &quot;fast mode&quot; by default. </p>
<p>Have I mentioned how much less stressful life is now that I&#8217;m not on the shell team? :D</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-362723">
				<div id="div-comment-362723" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">vsz</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060330-31/?p=31723#comment-362723">
			March 30, 2006 at 2:45 pm</a>		</div>

		<p>Let&#8217;s not overlook the fact that this problem is not something to be <em>fixed</em> (detected: maybe) on the app level (Explorer), as any other (future) applications will be able to use fast directory lookup, introducing the same problem for their end-users (or keeping away developers from using this feature).</p>
<p>Windows/Kernel API level falls out too, because such a single vendor/version related 3rd party bug is not something to be handled by a stable API.</p>
<p>So if Windows OS would like to provide a solution for this, IMO it should be solved on a lower level. Network client code looks like a good candidate here, or maybe a filter driver for those who need it. The latter can even be implemented outside Microsoft.</p>
<p>&#8230;&quot;Do Nothing&quot; still looks the most tempting ;)<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-362743">
				<div id="div-comment-362743" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Josh</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060330-31/?p=31723#comment-362743">
			March 30, 2006 at 2:51 pm</a>		</div>

		<p>Make Explorer requery in slow mode if fast mode gives an error, and turn fast mode off by default for all other applications. Make an application that wants to use fast mode explicity recognize this problem.</p>
<p>Result: Explorer, the most ubiquitous file-related application, can still benefit from fast mode. Other applications that don&#8217;t know about fast mode will be just as fast (or slow) as they were before. New applications that do know about fast mode can take advantage of it.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-362773">
				<div id="div-comment-362773" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://softwaremaniacs.org/blog/' rel='external nofollow' class='url'>Ivan Sagalaev</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060330-31/?p=31723#comment-362773">
			March 30, 2006 at 3:06 pm</a>		</div>

		<p>Advertise all over the internet this bug making sure all vendors, distributors, admins and support people know about it. I bet in this condition distributors would switch to the new fixed version. Given that Vista won&#8217;t be released for about a year it&#8217;s a huge time.</p>
<p>In short, learn how Open Source community deals with these issues by making the problem public.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-362793">
				<div id="div-comment-362793" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Evil Otto</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060330-31/?p=31723#comment-362793">
			March 30, 2006 at 3:25 pm</a>		</div>

		<p>I don&#8217;t think any senerio where the user sees an incomplete list is ever acceptable. &nbsp;That is important.</p>
<p>What is M.S.&#8217;s stance on that?<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-362803">
				<div id="div-comment-362803" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Evil Otto</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060330-31/?p=31723#comment-362803">
			March 30, 2006 at 3:31 pm</a>		</div>

		<p>My comment got eaten, i&#8217;ll try again.</p>
<p>Fix: &nbsp;Don&#8217;t make fast the default. &nbsp;Make it something that can be enabled, by install option, sms whatever. &nbsp;Document the hell out of the problem. &nbsp;Use something akin to the HCL?</p>
<p>Good: &nbsp;Least surprising behavior for the user. Works the way the expect. &nbsp;They NEVER see incorrect data/listings.<br />
<br />managed environments, where the &quot;admins&quot; have a clue about the services on the network, or &quot;power users&quot; who are on their own but know enough to get this stuff can enable on their own terms. &nbsp;Also the act of enabling it can present a disclaimer of known issues with venders/versions.</p>
<p>Bad: someone has to take a bullet point off their powerpoint.<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-362833">
				<div id="div-comment-362833" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Teman Clark-Lindh</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060330-31/?p=31723#comment-362833">
			March 30, 2006 at 3:41 pm</a>		</div>

		<p>variant of do nothing. </p>
<p>If the bad driver is already signed, blacklist it in the driver installation process so it never gets installed (or generates lots of additional warnings). </p>
<p>If it isn&#8217;t signed, well, then it won&#8217;t run on Vista x64. (And I hope x32 will complain bitterly)</p>
<p>Make sure this test case is added to any certification process (so any future drivers don&#8217;t get signed by MS without testing). </p>
<p>For Vista to work well, we need to raise the bar on what we expect vendors to provide.<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-362843">
				<div id="div-comment-362843" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Philip Beber</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060330-31/?p=31723#comment-362843">
			March 30, 2006 at 3:48 pm</a>		</div>

		<p>Is the server in question running Windows? If so perhaps a patch issued through WindowsUpdate would allow windows to detect the dodgy driver and always run in slow mode.</p>
<p>Advantages:<br />
<br /> &#8211; Everything works.<br />
<br /> &#8211; For 99% cases Vista is faster than XP.</p>
<p>Disadvantages:<br />
<br /> &#8211; Assumes server is running windows.<br />
<br /> &#8211; Assumes server is updated regularly.</p>
<p>My second choice would be for fast mode to be disabled by default. Correctness is much much much more important than performance. Remember those blue-screen-of-death t-shirts? Ever seen a t-shirt that says &quot;My Linux server is 1.5% faster than my Windows server&quot;?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-362863">
				<div id="div-comment-362863" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">boxmonkey</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060330-31/?p=31723#comment-362863">
			March 30, 2006 at 3:56 pm</a>		</div>

		<p>The problem with adding a bunch of code to handle this special situation is that the code will likely end up hanging around as long as Microsoft is still in the business of making Operating Systems.</p>
<p>I don&#8217;t know what the best solution is, but the one that sounds good to me is to keep fast on by default, make it user configurable, detect the error and display a message about how to resolve it. As someone pointed out, it doesn&#8217;t have to be a modal dialogue (how annoying!), but it should be present. When Vista becomes more popular, there will be more pressure on vendors or distributors to start using the fixed version of their software. For everyone who can&#8217;t get updates for whatever reason, slow mode still works.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-362873">
				<div id="div-comment-362873" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.scotboyd.net/90percent' rel='external nofollow' class='url'>Scot Boyd</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060330-31/?p=31723#comment-362873">
			March 30, 2006 at 4:01 pm</a>		</div>

		<p>If fast query returns an error, populate the first 100 with an arrow-hourglass cursor and then do a slow query to populate the rest of the list. &nbsp;Then reset the cursor. Cache the name (is 256 any more of a security risk than 16 names?) and slow query from then on. &nbsp;Write the KB article showing where the server list is cached (large networks might want to prepopulate it on Vista rollouts).</p>
<p>And rejoice, because for once there&#8217;s an error code that you don&#8217;t have to bubble up to the user.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-362883">
				<div id="div-comment-362883" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://ilyabirman.ru' rel='external nofollow' class='url'>Ilya Birman</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060330-31/?p=31723#comment-362883">
			March 30, 2006 at 4:04 pm</a>		</div>

		<p>To the ones who think Microsoft should not try to work around bugs in third-party software and punish those bugmakers this way.</p>
<p>You see, Microsoft&#8217;s business is not punishing someone, but making software as good as it can, for users (well, as well-sellable as it can, of course).</p>
<p>Reporting wrong file listings in fast mode is a bug, no doubt. But can Microsoft do anything for user happiness? Finally, users pay money for Windows. This bug is not such a big deal Microsoft can&#8217;t work around. Why not make Windows work even with buggy servers?</p>
<p>I understand that my computer is running tons of useless code, which checks for this and that to ensure everything works right. Maybe 0,1% of this code really does something for me. But for you, another 0,1% does something.</p>
<p>You will be the first to shout at Microsoft when you find that Windows doesn&#8217;t work with whatsoever, even if it&#8217;s buggy.</p>
<p>I, personally, support this practice of working around others&#8217; bugs. Escecially, if every hack is thought-out as thoroughly as this one.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-362893">
				<div id="div-comment-362893" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Fox Cutter</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060330-31/?p=31723#comment-362893">
			March 30, 2006 at 4:15 pm</a>		</div>

		<p>Disable Fast mode by default. It&#8217;s a pain for a few people, you need extra documentation but the option will be there. It might not be worth having the fast mode because of it, but it will at least be there.</p>
<p>Also keep in mind you can&#8217;t assume the 100 file rule will always be 100 files. What in the server fixes the bug, but it happen again and 400 files. If your looking for it to happen only with the 100th file you will be out of luck (and the user will be missing data). You have to assume if it can happen it can happen at any time, at least until it has happened and you can mark it as bad. This also means you can never know if a server is actually good or not, it&#8217;s either bad or not known to be bad, never good.</p>
<p>And remember, popping up a dialog box for the user for this is a very bad thing. You get the combination of an unexpected message that means nothing to them, so the default is to cancel it (probably without reading it).</p>
<p>The only really workable solution is to disable it by default.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-362903">
				<div id="div-comment-362903" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.colinjeanne.net' rel='external nofollow' class='url'>Colin Jeanne</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060330-31/?p=31723#comment-362903">
			March 30, 2006 at 4:23 pm</a>		</div>

		<p>I agree with what has been said before: providing an incomplete file listing is not an option. If it is possible get all the files to the user by requerying (even if it is a lot of work) then do so. It doesnt sound like that is possible so the only options I see are to either return an error to the user or to not use fast querying by default.</p>
<p>I prefer using slow querying by default with the option to use fast querying as a configuration setting. In future versions of Windows when servers have better support for fast querying then turn fast querying on by default.</p>
<p>I believe this solution is similar to what has happened &lt;a href=&quot;<a rel="nofollow" target="_new" href="http://blogs.msdn.com/oldnewthing/archive/2006/03/21/556505.aspx&quot;&gt;with" rel="nofollow">http://blogs.msdn.com/oldnewthing/archive/2006/03/21/556505.aspx&quot;&gt;with</a> Windows File Protection&lt;/a&gt;. Plan for the better solution to be implemented in the future but for now implement the one that is best for today.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-362913">
				<div id="div-comment-362913" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.geekswithblogs.net/bradc' rel='external nofollow' class='url'>Brad Corbin</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060330-31/?p=31723#comment-362913">
			March 30, 2006 at 4:24 pm</a>		</div>

		<p>After thinking about it a bit more and reading the additional comments here, this turns out to be a pretty tricky problem.</p>
<p>Up to now, I was leaning toward the option that I mentioned above, and a few other people have discussed:</p>
<p>4) Always use slow mode for &quot;standard&quot; calls, and introduce a new API for &quot;New Fast Mode&quot;, that is aware of this particular issue, and throws a new error message.</p>
<p>Advantages:<br />
<br />Old apps just work<br />
<br />New apps can be coded to use fast, but failover to slow when necessary<br />
<br />User isn&#8217;t faced with the issue</p>
<p>The more I think about it, though, the more I think that this is a pretty ugly hack. Imagine what the programmer will be thinking 3 years from now when he&#8217;s trying to code his network-aware application:</p>
<p>&quot;Ok, I can do a standard query in slow mode, or I can add a flag for Fast Mode (from the original API), but because of one weird corner case, that perfectly good API flag doesn&#8217;t work! So to REALLY do fast mode I have to use this new flag called PleasePrettyPleaseUseFastModeIReallyMeanItThisTime?? What the heck is this??? MS sucks!!!!&quot;</p>
<p>Ah, I think I got it. In Raymond&#8217;s original article he uses the quote:</p>
<p>&quot;If somebody asks whether a server supports fast queries, always say No, even if the server says Yes.&quot; </p>
<p>Ok, does that mean that the proper way to use the current API is to always ask first if the server supports fast mode?? Then its easy! Just change the CanIUseFastMode routine with additional checks that look for this particular problem! If there is an easy way to query the exact build number of this particular server OS, then that should be easy!</p>
<p>If that kind of version query is not possible, then you&#8217;d probably be stuck. :( &nbsp;With just a server name, you couldn&#8217;t test it experimentally (by reading a big folder and actually see if you hit this error), because everyone sets up their fileshares differently! </p>
<p>You could test it experimentally once the application passes in the network path to query, but that sounds like a massive amount of overhead (read 101 files first to see if we hit the error, then decide whether to use the current results or re-query in slow mode).</p>
<p>I have newfound respect for the work you guys do. Good luck with this one.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-362923">
				<div id="div-comment-362923" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">VickM</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060330-31/?p=31723#comment-362923">
			March 30, 2006 at 4:33 pm</a>		</div>

		<p>Thanks for a great interview question :)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-362933">
				<div id="div-comment-362933" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://doormouse.org/' rel='external nofollow' class='url'>dc</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060330-31/?p=31723#comment-362933">
			March 30, 2006 at 4:44 pm</a>		</div>

		<p>Dunno if anyone&#8217;s posted this yet, but I would do something like:</p>
<p>&#8211; Use fast mode by default<br />
<br />&#8211; If you get the weird error code, add the server to the list of bad servers and remember what the last file returned was<br />
<br />&#8211; Then, re-try with the slow mode, and give the application the rest of the file listing (starting at the file after the last one returned with the fast list)</p>
<p>Is that unfeasible for some reason?</p>
<p>&#8212;</p>
<p>I see Wesha just posted this solution, in code nonetheless! I like it the best. But I&#8217;d also earmark it to be removed from the next version of Windows after Vista (circa, what, 2012?), cause no one likes cruft, and by 2012 the problem of dealing with one buggy version of an obscure decade old third-party server implementation server will be beyond worrying about.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-362943">
				<div id="div-comment-362943" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">MarkL</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060330-31/?p=31723#comment-362943">
			March 30, 2006 at 4:49 pm</a>		</div>

		<p>Do Nothing</p>
<p>I don&#8217;t believe you should taint the OS just because somebody else didn&#8217;t do their job properly. &nbsp;And if you cover it up for them they are a lot less likely to fix the error or even try to avoid making such errors in the future.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-362963">
				<div id="div-comment-362963" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Jerry Pisk</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060330-31/?p=31723#comment-362963">
			March 30, 2006 at 4:54 pm</a>		</div>

		<p>To me this is missing the larger issue &#8211; the logic should not be based on a single weird code specific to this case. If explorer gets an error, any error, during directory listing it needs to handle it appropriately, not simply list what it received so far.</p>
<p>So my take on this is simple &#8211; try fast mode, if it fails, for whatever reason, make an attempt at slow mode and if that one fails as well just show an error message and go on with an unavailable directory. There&#8217;s no point in building a special logic to handle one specific case.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-362983">
				<div id="div-comment-362983" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Stefan Kuhr</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060330-31/?p=31723#comment-362983">
			March 30, 2006 at 5:04 pm</a>		</div>

		<p>Dunno if this is possible: If SMB has a version number, make a certain version number on the server side a requirement for fast queries. Then ship a patch for Windows Server 2003 and 2000 that bumps up this version number, so Vista Clients can use fast queries if they see such an SMB server with high version number.</p>
<p>Lots of people here suggest that a FindFirstFile query should always start in fast mode and query again if it fails with this weird error and match the queries&#8217; results against each other and only issue the diff between the two to the client. Is this at all feasible with regards to the memory that is required to keep at least 100x_MAX_PATHx2 Bytes for each FindFirstFile call in memory on the client side? I guess FindFirstFile is nothing but a function that returns an RPC context handle. So if the client does the same job as the server (keep the state) and then update its state with state that might be completely different after the second call, this would be a perversion of the idea behind context handles and it would need lots more of memory than necessary.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-362993">
				<div id="div-comment-362993" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">John Doty</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060330-31/?p=31723#comment-362993">
			March 30, 2006 at 5:08 pm</a>		</div>

		<p>I recommend different things for different layers of the software. As near as I can tell, you are going to have to work around this problem, as any failure to do so will be a regression in Vista. (By definition: a change was made that breaks existing functionality.) The question is what layer should work around the problem to make everybody happy.</p>
<p>1. Default to &quot;slow mode&quot; below IShellFolder::EnumObjects, i.e., do not change the default behavior of the object from the way it behaved in XP. This allows existing clients to continue to work as written.</p>
<p>2. Provide a &quot;fast mode&quot; switch on the object that implements IShellFolder. This mode issues fast queries. It is otherwise no different. Specifically, it does not attempt to remember whether or not fast mode worked in the past.</p>
<p>3. Allow explorer specifically to use fast mode until fast mode breaks. Teach explorer that sometimes fast mode breaks against certain servers, and it needs to fall back to slow mode in those cases. Presumably explorer is in a position to refresh any data that it has when it encounters this problem. Use caches as required to keep from making too many redundant requests.</p>
<p>4. (Optionally) Teach the same tricks to as many clients of IShellFolder in Vista as you can. Despite this, I would not make a public object model or API set that would automatically work around this particular glitch</p>
<p>5. (Optionally) Document the problem in a KB article somewhere, and possibly in the documentation for the new &quot;go fast mode&quot; API in MSDN.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-363003">
				<div id="div-comment-363003" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.reactos.org' rel='external nofollow' class='url'>Steven Edwards</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060330-31/?p=31723#comment-363003">
			March 30, 2006 at 5:10 pm</a>		</div>

		<p>Here is a wild idea.</p>
<p>Sell two versions of Windows&#8230;.its not like Microsoft does not sell enough versions. </p>
<p>Version 1: Hack free. No buggy third party compatiblity crap compiled in. I am sure you could do something in the source like</p>
<p>#ifdef _VENDOR_HACK<br />
<br />buggy_workaround();<br />
<br />#endif</p>
<p>You guys would then push the crap out of this to the corps that have all of these buggy custom written in house applications. Sell this at a reduced cost via the OpenLicense program you guys have to try to get more businesses to fix the broken apps. Of course some systems would still need the buggy backwards compat version so you have&#8230;..</p>
<p>Version 2: Hacked version</p>
<p>This would still have all of the compatiblity tweaks for the end users Backyard Baseball type games. In fact let me take it a step further. You could make this a simple compatiblity pack if you did not want to invent all new SKUs for another version.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-363023">
				<div id="div-comment-363023" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Adam</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060330-31/?p=31723#comment-363023">
			March 30, 2006 at 5:18 pm</a>		</div>

		<p>Dialogs, switches, and remembering buggy servers are too complex. &nbsp;There&#8217;s a simple solution.</p>
<p>Always try the fast method. &nbsp;If it returns any error that might possibly be fixed by using the slow method, try that. &nbsp;In that case it always works fast for servers which aren&#8217;t buggy. &nbsp;Buggy servers are a little slower, but still correct. &nbsp;Perhaps log the problem for sysadmins who are wondering why their servers are slow.</p>
<p>Buggy servers will be slower that they would if you bothered to remember to skip the fast method, but it&#8217;s much simpler to implement. &nbsp;Also, my guess is that most people will blame the slowness on the server &#8212; if they realize it&#8217;s a different machine. &nbsp;People don&#8217;t generally blame slow websites on their own machines.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-363033">
				<div id="div-comment-363033" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Regan Heath</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060330-31/?p=31723#comment-363033">
			March 30, 2006 at 5:19 pm</a>		</div>

		<p>Assumptions:</p>
<p>1. You have a complete list of known vendors/drivers that suffer from this fault.</p>
<p>2. At some point in the future you will be distributing a fixed driver for the vendor. Possibly via some automatic update system.</p>
<p>Solution:</p>
<p>1. Distribute Vista with &#8216;the list&#8217;.</p>
<p>2. Whenever a driver is installed, check it against the list, if it&#8217;s a known broken driver, set it to slow mode, otherwise set it to fast mode.</p>
<p>(this implies a fast/slow mode option per driver)</p>
<p>3. Allow users to enable/disable fast mode at will.</p>
<p>4. If in fast mode, and you get the error, popup a dialog telling them the problem, disable fast mode, and tell them to close and restart the application.</p>
<p>Pros:</p>
<p>1. The &#8216;workaround&#8217; code runs only during driver install/upgrade and when detecting the error. It doesn&#8217;t run on every list/mount and it doesn&#8217;t need extra memory/processing etc.</p>
<p>2. Users don&#8217;t need to know about fast/slow mode, they will automatically get the best possible mode at all times.<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-363043">
				<div id="div-comment-363043" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Eric</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060330-31/?p=31723#comment-363043">
			March 30, 2006 at 5:22 pm</a>		</div>

		<p>No errors. No new APIs.</p>
<p>Consequently&#8230; run in slow mode unless you can identify a fast mode server prior to requesting data.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-363053">
				<div id="div-comment-363053" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://willrickards.net/' rel='external nofollow' class='url'>Will Rickards</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060330-31/?p=31723#comment-363053">
			March 30, 2006 at 5:22 pm</a>		</div>

		<p>112 comments wow.</p>
<p>Anyway if you didn&#8217;t see in my original comment I said &#8216;in explorer&#8217;. &nbsp;I propose fixing only explorer, not the api&#8217;s themselves. &nbsp;Explorer can certainly detect the error and refresh the directory listing. &nbsp;Maybe other MS programs need to do this too, those that don&#8217;t use the standard file open dialogs and the like.</p>
<p>As for the api&#8217;s used by other apps, that is up to the application developer to fix. &nbsp;But what about the old applications no longer supported? &nbsp; &nbsp;They wouldn&#8217;t be using fast mode anyway, correct? &nbsp;But say they did, maybe then there would need to be a compatibility option for running the program that forced slow mode.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-363093">
				<div id="div-comment-363093" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">microbe</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060330-31/?p=31723#comment-363093">
			March 30, 2006 at 5:48 pm</a>		</div>

		<ol>
<li>Do Nothing is the best amongst the above choices.<br />
<br />2. If you have to keep compatibility, the first time you connect to a new server that claims to support fast query and might be a candidate of having this bug, prompt the user &quot;Fast query is a new feature of Windows Vista to make directory listing faster over network. Server xxxx claims to support fast query but there is a chance it might have bug described in KBxxxxyy. Do you want Windows to verify it? [Yes] [no] [Never prompt again]&quot;</p>
<p>There you go.</p>
<p></li>
</ol>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-363103">
				<div id="div-comment-363103" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">JI</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060330-31/?p=31723#comment-363103">
			March 30, 2006 at 5:58 pm</a>		</div>

		<p>Funny, seems that nobody has thought about this the other way around.</p>
<p>For each connected server, initially set a registry value SupportsFastMode=2 (uncertain).</p>
<p>Then run in slow mode until you happen to see more than 100 files returned.</p>
<p>If that happens, immediately re-run the same query in fast mode and check for The Error.</p>
<p>If you get &gt;100 files set SupportsFastMode=1. If you get The Error set SupportsFastMode=0. If you get &lt;=100 files then presumably you lost a race, and will need to try again next time.</p>
<p>Advantages:<br />
<br />&#8211; Don&#8217;t have to waste time searching for a valid test, you wait until the test finds you.<br />
<br />&#8211; Performance will always be as good or better than XP.<br />
<br />&#8211; Users never experience a fault, thus do not need to be notified.<br />
<br />&#8211; Power users/Admins can set the key manually, if they know that their server is good/bad.<br />
<br />&#8211; Relatively simple implementation.</p>
<p>Disadvantages:<br />
<br />&#8211; Performance will be sub-optimal if user never browses to folder with more than 100 files (but still as good as XP).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-363113">
				<div id="div-comment-363113" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Arnt Witteveen</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060330-31/?p=31723#comment-363113">
			March 30, 2006 at 6:12 pm</a>		</div>

		<p>More than 100 comments, wow. Everyone wants to solve a windows bug (is this a commercial for OSS or what! ;-)</p>
<p>Generally: make it work. I&#8217;m with Richard Kuo here, when he says &quot;Some basic tenets: Do what&#8217;s expected. Work by default.&quot; As a user, I don&#8217;t want to go upgrade stuff so it&#8217;ll work with Vista, I want Vista to work with my stuff. I could not imagine any one who has &#8216;managed&#8217; more than one computer thinking different, in practice. (I really don&#8217;t want to waste my time and frustration on such a problem.) I see that totally I&#8217;m wrong here based on the &#8216;do nothing&#8217; comments.</p>
<p>I was thinking like everyone else: switch to slow mode (impossible, you then specified), or return the rest of the list using slow mode, by keeping the first 100 or by re-querying for them, if a fast query always returns the same 100 files.</p>
<p>Another option, and I saw this one above, but only once: how about whitelisting, instead of blacklisting? Always start with the slow query for a machine not seen before. Evaluate if the conditions for testing this bug are fullfilled (e.g. slow query returns &gt;100 files). Send a message to some the system component asking it to evaluate this machine for fast access, giving it a path this testing can be based on (the one you just found more than 100 files in).<br />
<br />Continue using slow mode, until the system component discovers that fast mode is ok.</p>
<p>(Variation: do this testing in the same thread that does the slow mode accesses, at the same time, if fast mode is really so fast, it won&#8217;t make a dent&#8230;)</p>
<p>Optionally, optimize by whitelisting &#8216;known&#8217; systems (MS OS, Novell OS, Good samba versions if you can detect them, whatever&#8230;) automatically.</p>
<p>Advantages:<br />
<br />&#8211; always works. No weird, non-reproducable behaviour (I swear it returned only 100 files last time! wait I&#8217;ll restart my program and show you.. now it does return them all! &lt;Next day&gt;Turn on computer, there it is again, only 100 files. Go get admin, doesn&#8217;t happen again, &#8230; repeat at infinitum).<br />
<br />&#8211; still uses fast mode most of the time<br />
<br />&#8211; not much slow down at all, not on the first query (except that it uses slow mode, but it doesn&#8217;t have to restart, doesn&#8217;t have to do several querys, doesn&#8217;t have to try a fast query, wait for the error (or not), then do an appropriate query which actually returns results to the suer, or anything like that that would slow down the first query)<br />
<br />&#8211; Vista user knows nothing about it</p>
<p>Disadvantages<br />
<br />&#8211; very ugly hack<br />
<br />&#8211; ungodly amount of code for such a thing, probably<br />
<br />&#8211; &#8216;unexplainable&#8217; directory accessess seen on target machine (and the Vista machine too), possibly by a strange user (if not using impersonation for the test) which you will have to explain after Mark Russinovich fires up filemon and has an hour to kill looking for strange accessess ;-). Then again, this blog entry explains it already!<br />
<br />&#8211; possibly &#8216;brittle&#8217; (is that even a correct english word?), i.e. this may easily go wrong. then again, it&#8217;s fail safe: if it does go wrong, you&#8217;re in slow mode, and everything still just works.<br />
<br />&#8211; Vista user knows nothing about it (=&gt; this will remain unpatched with all the distributors)<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-363123">
				<div id="div-comment-363123" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Arnt</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060330-31/?p=31723#comment-363123">
			March 30, 2006 at 6:16 pm</a>		</div>

		<p>And I see JI has thought of the same thing. (His post wasn&#8217;t there when I started on mine.)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-363133">
				<div id="div-comment-363133" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.indev.no' rel='external nofollow' class='url'>Einar Stangvik</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060330-31/?p=31723#comment-363133">
			March 30, 2006 at 6:16 pm</a>		</div>

		<p>My opinion is that off-the-shelf distributed code should be as low on vendor specific hacks and fixes as possible.</p>
<p>I&#8217;ve had trouble, from time to time, with files being deleted/truncated instead of overwritten when saving them to smb shares. This as a result of the smb connection being reset at an awkward time during the update. In most of these cases I&#8217;ve been able to track it to some hardware failure (misbehaving firewall), and in others it&#8217;s been caused by some random VPN client. Annoying? Yes, of course, but hardly something one expects the OS to handle (&quot;connection dropped? never fear, we&#8217;ll generate random files for you to browse!&quot;). The same goes for this matter, IMHO.</p>
<p>Leave the fast query on by default, and provide a registry setting to switch it off. Perhaps even let users switch it off for specific IPs or NETBIOS names. </p>
<p>Show an alert dialog if the server returns the weird error code you describe, with a link to the proper KB article. This is after all an error, so it should be noted as such. If necessary, drop another registry setting in there to disable specific error messages/codes. I&#8217;m guessing other errors can/will be shown like that, so being able to disable them would be a peach for the advanced users.</p>
<p>The mentioned KB article should of course either contain the description of how to resolve this by using the registry settings, or maybe even have a patch applying some other solution described somewhere else on this page.</p>
<p>Disadvantages:<br />
<br /> &#8211; The user will see the error popup, if he&#8217;s as unlucky to browse the flawed servers, and might be puzzled for a minute or two</p>
<p>Advantages:<br />
<br /> &#8211; The user will know why it happened, and how to fix it<br />
<br /> &#8211; Patches may be distributed by network administrators if it&#8217;s a company wide problem<br />
<br /> &#8211; By being told what happens, the (advanced) users can patch or upgrade their file server software to some decent version<br />
<br /> &#8211; Most users and file server providers will benefit from the fast query mode</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-363153">
				<div id="div-comment-363153" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Mike Fried</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060330-31/?p=31723#comment-363153">
			March 30, 2006 at 6:22 pm</a>		</div>

		<p>So you can&#8217;t test the server for its version or for some kind of flag saying that it has been certified for compatability with Vista?</p>
<p>In that case, make the API behave identically to the Windows XP case, and introduce an EX version of the API with a flag to enable the faster query. Document the bug in a KB article, and put the link to the KB article in the MSDN documentation of the EX API.</p>
<p>Existing code won&#8217;t suddenly change behavior. New code (such as the Vista Shell) can work around the issue if it encounters it. The end user doesn&#8217;t need to be bothered with these details. I know it sucks that you can&#8217;t get perf gain for backwards compat with existing hardware in this case, but it only works if it&#8217;s well tested. That&#8217;s why we have the WHQL.</p>
<p>Better safe than sorry. You never know &#8211; if you don&#8217;t fix this bug, you may end up with a QFE request later.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-361903">
				<div id="div-comment-361903" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Jack Mathews</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060330-31/?p=31723#comment-361903">
			March 30, 2006 at 10:39 am</a>		</div>

		<p>Raymond: Does the error code happen every time a directory listing is gotten, or just when a directory listing is too long?</p>
<p>If it happens every time, then do a quick directory listing of a root directory when the server is mounted. &nbsp;If you get the error or don&#8217;t have permissions to do a directory listing on any of the roots, silently enter slow mode. &nbsp;Otherwise, you can safely use fast mode.</p>
<p>Advantages:<br />
<br />* Everything just works.</p>
<p>Disadvantage:<br />
<br />* Slightly slower mounting time.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-363163">
				<div id="div-comment-363163" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">DmitryKo</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060330-31/?p=31723#comment-363163">
			March 30, 2006 at 6:40 pm</a>		</div>

		<p>Fixing other people&#8217;s errors is just wrong, unless there are virtually no chances of the error to be fixed, so I&#8217;d chose &quot;Auto-detect the buggy driver and put up a warning dialog&quot;</p>
<p>Also write an event log essage stating that the remote server is faulty and needs to be updated; create a new error number for this exact issue. As a workaround, suggest reverting to the slow mode by default (of course, there should be the registry setting to allow that).</p>
<p>However, knowing about multiple various hacks employed by Microsoft in order to fix wrong code, I would suggest the workaround already proposed by Andy, Joe Butler, Michael Cook and probably others. </p>
<p>That is, keep last 100 recent entries in the internal list (or maybe in the file cache) for network requests, and re-query the server in slow mode upon discovery of the error. Then comparie new listing to the saved one so only changed items will be submitted in the next batch. Write the error in the event log, as mentioned above, and provide the means to disable this workaround through the registry.</p>
<p>Advantages: applications get the complete directory listing and gets no error messages</p>
<p>Disadvantages: OS nneeds to cache at least 100 items for every directory listing request to every network server, which impacts performance<br />
<br />(the cache could probably be discarded after first succesful 100 items, but still needs to be recreated on every new request)<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-363173">
				<div id="div-comment-363173" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Neil</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060330-31/?p=31723#comment-363173">
			March 30, 2006 at 6:41 pm</a>		</div>

		<p>Anyway, my suggestion is to release an optional update that makes Windows XP run in fast mode. Add a note to the update that there are more details in the KB article as to how the administrator could test their third-party devices for compatibility. Since people will want to switch to fast mode hopefully people will complain to brand X about their incompatible server.</p>
<p>&gt; (If the list of &quot;known bad&quot; servers were unbounded, then an attacker could consume all the memory on your computer by creating a server that responded to a billion different names and using HTTP redirects to get you to visit all of those servers in turn.)<br />
<br />How is this supposed to work? Redirecting from http:// to file:// perhaps? Does the security team know about this feature?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-361943">
				<div id="div-comment-361943" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">DrPizza</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060330-31/?p=31723#comment-361943">
			March 30, 2006 at 10:42 am</a>		</div>

		<p>(If it happened for every listing, not just &quot;long&quot; ones, then you could just make the network driver do the listing itself; this would have the bonus of not breaking anything, at the expense of *slightly* worse mount performance, and would be far and away the best fix. &nbsp;But I don&#8217;t think that&#8217;s what you&#8217;ve described.)<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-362033">
				<div id="div-comment-362033" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://sab39.dev.netreach.com/' rel='external nofollow' class='url'>Stuart Ballard</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060330-31/?p=31723#comment-362033">
			March 30, 2006 at 10:52 am</a>		</div>

		<p>How about this. I can see that it has &quot;issues&quot; but&#8230;</p>
<p>When you run the query in Fast Mode, keep a hold of all the items you&#8217;ve been given until you&#8217;ve received enough that you can be confident that the server isn&#8217;t one that has this bug.</p>
<p>If you get the error message that indicates it *is* the buggy version, rerun the query in slow mode. For each result that you get from the slow mode, check to see whether it&#8217;s in the list that you already received and filter it out of the results if it is. Return any results that *weren&#8217;t* in that list as if they were just a continuation of the result set of the original query.</p>
<p>The biggest issue is, of course, what happens if the directory contents actually change in the time between the fast request and the slow one? You could end up with a listing that didn&#8217;t accurately represent the contents at any real point in time. Whether that&#8217;s a serious problem will depend on the nature of the API and what it&#8217;s typically used for.</p>
<p>The other problem is that it introduces significantly more overhead even beyond what the &quot;slow mode&quot; would normally be &#8211; doing all the filtering over intermediate results etc. IMHO that&#8217;s fine &#8211; &quot;this server performs excessively slowly when serving to Vista clients&quot; is probably a more compelling upgrade reason for users of the buggy server than any number of theoretical arguments about bugginess.</p>
<p>Finally, there&#8217;s the issue that you need to keep track of the results for *every* fast mode query until you&#8217;re sure the server is okay. Again, the nature of the API will determine whether that&#8217;s a problem or not.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-363193">
				<div id="div-comment-363193" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Amos Houndsbreath.</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060330-31/?p=31723#comment-363193">
			March 30, 2006 at 6:56 pm</a>		</div>

		<p>Wow, I&#8217;ve scrolled through a huge number of suggestions, and most of them would move Windows&#8217;s usability firmly towards that of lesser (and cheaper;-) OSs. Hope you ignore them.</p>
<p>I think the code has to be reliable with any possible server, including ones with the bug. That&#8217;s an absolute must. It shouldn&#8217;t bother the user with information they most likely won&#8217;t understand either.</p>
<p>If possible, check the server capabilities when you connect &#8211; maybe SMB has a way to get OS version/Driver version or something, so you could use that to work out if Fast Mode was usable. Then you&#8217;d only use Fast Mode if you&#8217;d verified the server supported it, and use Slow Mode otherwise.</p>
<p>If not, and there isn&#8217;t a way to recover from Fast Mode fails on the fly without telling the application, I&#8217;d vote for only using Slow Mode.</p>
<p>Or there&#8217;s another possibility. You could start off using Slow Mode. When you find (via a Slow Mode query) a directory big enough to benefit from Fast Mode, do a check to see if Fast Mode gives the same answers. &nbsp;If it does, use Fast Mode from then on. But don&#8217;t return bad data, and don&#8217;t tell the user to upgrade his server software. People that want to work with that kind of OS won&#8217;t use Windows anyway.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-362093">
				<div id="div-comment-362093" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Nekto2</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060330-31/?p=31723#comment-362093">
			March 30, 2006 at 11:07 am</a>		</div>

		<p>/*joke*/<br />
<br />Every time new file server is found you just create there TEST directory with &gt;100 files and read it. If it fails &#8211; mark it as slow :)))<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-363223">
				<div id="div-comment-363223" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">kokorozashi</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060330-31/?p=31723#comment-363223">
			March 30, 2006 at 7:11 pm</a>		</div>

		<p>It seems obvious to me that the right thing to do is test the version of the server or driver and use slow mode if it&#8217;s old and fast mode if it&#8217;s new. This approach is almost all upside. The only downside is that Windows contains a hack which recognizes a particular version of a particular server. I&#8217;ve worked in operating systems before and committed many much worse compatibility hacks than this.</p>
<p>This is so obvious to me that I assume RC would have listed it as a possibility if it were. That must mean it&#8217;s impossible to test such a version.</p>
<p>Barring a version check, I&#8217;d run the query slowly, write a KB entry, and contact the developer to tell them what happened. Tell them to add a way to query the version of the server so you can use fast mode when appropriate. Otherwise, their most important client will ignore all the hard work they did adding fast mode. Tell them their competitors run X% faster &nbsp;because their fast mode doesn&#8217;t have the bug. I&#8217;m not sure there is a downside here because this will motivate them to distribute the fix and you can roll the version hack into a service pack you were going to ship anyway.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-363233">
				<div id="div-comment-363233" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">kokorozashi</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060330-31/?p=31723#comment-363233">
			March 30, 2006 at 7:16 pm</a>		</div>

		<p>And if you get lucky they will have distributed the version capability before Vista freezes so you don&#8217;t have to deal with the service pack.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-363263">
				<div id="div-comment-363263" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Adam Ligas</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060330-31/?p=31723#comment-363263">
			March 30, 2006 at 7:58 pm</a>		</div>

		<p>Solution:<br />
<br />Build in a setting to enable/disable Fast Mode. &nbsp;Ship with the setting disabled. Include the code to detect the problem when Fast Mode is enabled. &nbsp;If the problem is detected, tell the user to disable &quot;Fast Mode&quot;. &nbsp;<br />
<br />Since they enabled it, they&#8217;ll know where to go to turn it off.</p>
<p>Followup:<br />
<br />If the status of the issue changes (i.e. distributors update the code from the vendor and problem goes away), enable Fast Mode in a future update.</p>
<p>Result:<br />
<br />Windows Vista ships working. If the situation changes, then people get a &quot;free&quot; speed increase in a later Service Pack. &nbsp;In an above-average environment &#8211; say a large corporation or knowledgeable person &#8211; they can enable the feature in their installation if they know it will not cause any problems.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-362353">
				<div id="div-comment-362353" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">blah</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060330-31/?p=31723#comment-362353">
			March 30, 2006 at 12:02 pm</a>		</div>

		<p>We&#8217;re all looking at the problem from the wrong end. We really should be looking at the machine on which the file server runs.</p>
<p>What about a &quot;Compatibility Catalogue&quot; of apps / drivers on that machine which haven&#8217;t passed compatibility testing for some reason? That, combined with a Microsoft-side Compatibility News/Update webcenter would be the real way to get Administrators to pick up on the issue and deal with it *as soon as* there is a patch out.</p>
<p>With an official-enough framework to deal with the issue, perhaps you might even find that the Compatibility webcenter becomes a Hall-of-Shame for apps&#8230;so much so that they feel the pressure to fix their issues, and do so.</p>
<p>Nice post!</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-363273">
				<div id="div-comment-363273" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.magicprints.com/' rel='external nofollow' class='url'>Daniel Colascione</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060330-31/?p=31723#comment-363273">
			March 30, 2006 at 8:06 pm</a>		</div>

		<p>I like guillermov&#8217;s auto-whitelist idea. It combines many of the advantages of the other approaches. To reiterate: The difference between the fast and slow methods probaby isn&#8217;t significant for small numbers of files. Always try the slow method until a query returns more than 100 results (using the slow mode). Then (even asynchronously) execute the same query using fast mode.</p>
<p>The directory changing between isn&#8217;t a concern because the results of the second query aren&#8217;t actually used. If the fast query returns less than 100 results, because the directory changed in the interim, do nothing. If it returns 100 or more results, mark the server (using some of the schemes discussed above) as fast-capable, and use the fast method for all subsequent queries. If the test query returns the error, mark the server as being slow and don&#8217;t attempt to test it again for some number of days.</p>
<p>I also don&#8217;t see why the length of the server list has to be so restrictive &#8212; it only has to be consulted at connect time, so why not store it on the filesystem (or in the registry) and consult the list once, when connecting? The cost of doing that would be lost in the noise.</p>
<p>You&#8217;d still need some limit for the size of the server list, but it could be much higher than 16.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-362493">
				<div id="div-comment-362493" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.foobarsoft.com' rel='external nofollow' class='url'>Michael Cook</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060330-31/?p=31723#comment-362493">
			March 30, 2006 at 12:23 pm</a>		</div>

		<p>OK, here are my ideas:</p>
<p>1. When a directory list is required, do it with the fast method. If you don&#8217;t get the error message from the server (lets say there are only 60 files, or there are 200 and the server doesn&#8217;t have the problem) you are done.</p>
<p>If you DO get the error message, you know there are more files and the server is buggy. So as soon as you get the error message you re-query the server using the slow method. The user will already have a list of files (about 100) to look through while the rest are retrieved.</p>
<p>Pros:</p>
<p>* When people don&#8217;t run the buggy server, you use fast mode thus things are faster and there is no penalty (like using slow mode for everything)<br />
<br />* If a user is just browsing in Windows Explorer, they&#8217;d probably never notice you were doing this<br />
<br />* Uses fast mode if there are only a handful of files</p>
<p>Cons:</p>
<p>* It is a double hit on the server when this issue is there. That could be a big problem depending on how often people do this. To fix this, I would propose a registry setting to simply force slow mode that could be documented in a Knowledge Base article for those who need it.<br />
<br />* More complex than just always use one mode or the other</p>
<p>2. Keep an internal cache of server names and whether you can use fast or slow mode. After a certain period of time (haven&#8217;t accessed the server in a week, perhaps) remove the entry of that server (to prevent it from being to big). You can also re-check the server once a month or something to see if it has been updated (or something like that).</p>
<p>When you first connect, you do like in solution #1 to find out if the server suffers from the issue. You save the determination so that next time you can just use fast or slow mode as appropriate and skip the check.</p>
<p>Pros:</p>
<p>* Again, will use the fastest mode possible<br />
<br />* Avoids double-hitting the server every time if it suffers from the issue</p>
<p>Cons:</p>
<p>* Requires a cache, not as elegant (code wise) and just always using one mode</p>
<p>If you like either of my ideas, I&#8217;d love to hear about it. My e-mail address is on my website.</p>
<p>&#8212; Michael Cook</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-362543">
				<div id="div-comment-362543" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">BryanK</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060330-31/?p=31723#comment-362543">
			March 30, 2006 at 12:44 pm</a>		</div>

		<p>PaulM:</p>
<p>&gt; Am I the only one who is breaking into a cold sweat reading the majority of these suggestions?</p>
<p>No, you&#8217;re not the only one.</p>
<p>Speaking as a part-time ECMAscript developer, many of these suggestions (all the ones that involve blacklisting or whitelisting certain software versions) absolutely SUCK.</p>
<p>The canonical example of this kind of thing going wrong is with DOM detection in JS &#8212; if the JS code does its &quot;what feature set can I use?&quot; detection by looking at the user-agent string (in this case, that&#8217;d be the server name and version), then it may work most of the time. &nbsp;But if that same user-agent string (or server name/version) starts working properly in the future, your code suddenly needs to be updated.</p>
<p>Whereas just checking for DOM features that you need before using them, and including a fallback if necessary, is a *much* cleaner solution. &nbsp;Yes, the code is a bit bigger, but often the differences can be abstracted away in a wrapper function. &nbsp;(See the myriad attachEvent / addEventListener JS libraries that are available, for instance.)</p>
<p>In this case, the only two decent options (given the frequency of OS updates from Microsoft) are do nothing, and detect the error *WHEN* *IT* *HAPPENS*. &nbsp;Microsoft can&#8217;t blacklist or whitelist certain server software, because if those servers get fixed in the future, the blacklists will need to be fixed too. &nbsp;Whereas if it just detects the error (or does nothing), it won&#8217;t care about future updates.</p>
<p>After seeing that you&#8217;ve hit this bug, it doesn&#8217;t matter (much) what you do. &nbsp;But you *can&#8217;t* write code that expects to see the bug with certain combinations of software without actually seeing it, because that check will be WRONG in the future.</p>
<p>(Now, blacklisting certain server *DNS names* (or NetBIOS names, either way) isn&#8217;t so bad, as long as the entries get maintained. &nbsp;A server that gets fixed can&#8217;t stay in the list too long.)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-363293">
				<div id="div-comment-363293" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">orcmid</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060330-31/?p=31723#comment-363293">
			March 30, 2006 at 8:53 pm</a>		</div>

		<p>Well, I&#8217;m in favor of &quot;do the right thing&quot; and &quot;don&#8217;t give the user a problem they can&#8217;t do anything about.&quot;</p>
<p>1. I think Patrick Correia&#8217;s thinking, along with Mike Fried, about versioning the API is interesting. &nbsp;It doesn&#8217;t come at the real issue, but it is an interesting idea just the same. &nbsp;It holds a clean interface contract in terms of previous behavior. I do like that.</p>
<p>2. Along with Andy, Joe Butler, Jstin Bowler, Michael Cook, Mike, Richard Kuo, and Arnt Witteveen, I&#8217;m interested in seeing the fast case, if used, deliver correct results whenever possible. &nbsp;</p>
<p>2.1 For me, I would relegate this to a pacing and dataloss problem (even though it&#8217;s really a bug) and solve it as a pacing problem. &nbsp;Caching a flag against a failing fast-responder is fair to avoid incurring restart overheads, just like fixing a transmission window size to curb packet losses. &nbsp; </p>
<p>2.2 For splicing in the tail of a slow query with the lead of a fast one, I&#8217;m assuming that query responses aren&#8217;t atomic and are also immediately stale, so having a potentially inaccurate return is not that frightening in terms of minor discrepancies. &nbsp;There&#8217;s an explosion of new failure modes, though, and that makes me nervous, because they become rarely-seen and easily screwed-up cases.</p>
<p>2.3 I am concerned about how the user experiences what happens. &nbsp;Why is the fact of premature ending of the return not visible to the user now? &nbsp;If a connection is lost or a distant server fails in the middle of a query return (directory enumeration?), what happens now?</p>
<p>2.4 I think I would want to warn an user when a retry is in progress (with some non-modal indicator) so they don&#8217;t think the situation is exactly hung. &nbsp;I&#8217;d want to provide some indication that results may be inaccurate/incomplete if the strange error code occurs and recovery was not attempted or was unsuccessful. &nbsp;I suspect that this depends on what can get through an enumerator interface and what an application does with it. &nbsp;Not encouraging.</p>
<p>3. I keep coming back to wondering what happens now when an enumeration is truncated for any reason. &nbsp;How does that get dealt with, and how is it perceived by users? &nbsp;If it is application specific (don&#8217;t know why not), how does application code learn what it is there is an opportunity to be application-specific about?</p>
<p>If the enumeration is not informative enough, maybe reving the API is ideal for that reason too. &nbsp;You could have a refresh/retry case there, perhaps.</p>
<p>4. OK, I can&#8217;t resolve myself about this, so no pros or cons. &nbsp;Thanks for challenging us with this.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-362563">
				<div id="div-comment-362563" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">mikeb</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060330-31/?p=31723#comment-362563">
			March 30, 2006 at 12:54 pm</a>		</div>

		<p>I am amazed at the number of people who advocate doing nothing special and letting the directory enumerations fail when querying the buggy servers.</p>
<p>Everyone should (but apparently don&#8217;t) realize that Microsoft (and by extension, Raymond) don&#8217;t really care about the producer/vendor/whatever of the server software. &nbsp;If that were the only entity negatively impacted by the failure, then the answer would be easy &#8211; force the buggy server implementation to be fixed in order to get correct results.</p>
<p>However, Microsoft does care about the people who are currently *successfully using* this buggy server implementation. &nbsp;Many, maybe even most, of those people don&#8217;t even know they&#8217;re using it and have no control over how, when, or if the server gets updated. &nbsp;So even if the buggy server implementation gets fixed by the vendor, that doesn&#8217;t mean the deployed buggy implementations will get fixed &#8211; those users are still screwed.</p>
<p>If the directory queries fail, that leaves these people with 2 options:</p>
<p>1) don&#8217;t upgrade to Vista (that&#8217;s if they even realize there&#8217;s a problem)<br />
<br />2) lose data</p>
<p>Neither of which is an acceptable solution for Microsoft, even if it makes Vista&#8217;s directory query implementation impure.</p>
<p>So, please stop suggesting that these directory queries just fail (particularly silently).<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-362673">
				<div id="div-comment-362673" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Riva</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060330-31/?p=31723#comment-362673">
			March 30, 2006 at 1:38 pm</a>		</div>

		<p>I was just reminded of the way XP deals with UDMA errors. If a device acts acts up a set number of times, XP will degrade performance by dropping down to PIO from then on.</p>
<p>Enabling fast by default, obviously at some point an enumaration might fail and from then only slow is ever used again for everything. As someone else pointed out: why not deal with it in a similar way as a sudden network outage? It wouldn&#8217;t be terribly accurate, but it would simply cause the user to retry the action in almost all causes, and the next time around it succeeds so they will shrug and be none the wiser as to what happened behind the scenes.</p>
<p>Advantage:<br />
<br />* no confusing error messages and no user interaction required at any point<br />
<br />* fair tradeoff between using the fast mode and workaround (which is no slower than what&#8217;s in XP today)</p>
<p>Disadvantage:<br />
<br />* the user will still encounter a problem once (but only once)<br />
<br />* even if the server gets patched, the user might not know or remember to enable fast queries</p>
<p>I would say that the first disadvantage is acceptable. After all, the server is defective in a way and as long as the failure doesn&#8217;t happen silently, no harm is done.<br />
<br />For the second disadvantage I think the UDMA behaviour is a valid precedent. Argueably using PIO when a device supports UDMA is a terrible performance decision, but if it acted up in the past, you have little choice until the user fixes the problem and tells the OS to revert to the default &#8211; faster &#8211; setting.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-363313">
				<div id="div-comment-363313" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Vince P</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060330-31/?p=31723#comment-363313">
			March 30, 2006 at 9:42 pm</a>		</div>

		<p>My solution is to run a diagnostic at driver installation time. &nbsp;Test for a failure situation after the relevent driver is installed. &nbsp;If there&#8217;s a failure set that box to do slow mode. If it passes, set the box to be fast. &nbsp;</p>
<p>Simplicity :)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-363333">
				<div id="div-comment-363333" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">cola</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060330-31/?p=31723#comment-363333">
			March 30, 2006 at 9:56 pm</a>		</div>

		<p>Oh boy, a chance to give advice!</p>
<p>It might or might not be a good idea to leave out the list of buggy servers, and just try every single call in fast mode. &nbsp;(If you get the error, retry in slow mode, as explained in detail by everyone else.) &nbsp;Someone should find out how often directories have more than 100 files.</p>
<p>Also, put this bug fix all in one file, except for the calls to the functions in that file. &nbsp;That way the developers won&#8217;t forget about it. &nbsp;&quot;What&#8217;s in this file?&quot; is a more common question than, like, &quot;What happens for this error code in this function in this 30K file?&quot; :P</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-362693">
				<div id="div-comment-362693" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://dukeytoo.blogspot.com' rel='external nofollow' class='url'>Steve Campbell</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060330-31/?p=31723#comment-362693">
			March 30, 2006 at 1:58 pm</a>		</div>

		<p>It is unacceptable to nag the user regarding some driver issue which they do not care about. &nbsp;Not their problem. &nbsp;Don&#8217;t make it theirs. &nbsp;So, no $#%* modal user-dialog. &nbsp;I mean it! &nbsp;Don&#8217;t make me come over there! &nbsp;</p>
<p>Nothing wrong with an Event Log entry though, so that a tech-savvy user can investigate.</p>
<p>Next, what to do about the error. &nbsp;Again, we don&#8217;t want to bother the user. &nbsp;Not their problem, don&#8217;t make it theirs. &nbsp;Detect the problem (this is not a hack, it is just making robust code), and re-act. &nbsp;Switch to slow mode if necessary. &nbsp;Display a (non modal!) message if you like, just keep it unobtrusive and clear. &nbsp;&quot;Switched to slow network mode. &nbsp;See this url for help.&quot;</p>
<p>Think outside the box. &nbsp;Don&#8217;t tell me anything about &quot;well half the result is already processed and um&#8230;&quot;. &nbsp;Deal with it. &nbsp;</p>
<p>If only we lived in a perfect world! &nbsp;Just do what you can in the time you have. &nbsp;But don&#8217;t kid yourself into thinking your problem is a buggy 3rd party driver, because that&#8217;s just a symptom. &nbsp;Your problem is your design&#8217;s inability to handle protocol errors in a transparent and well-defined way. &nbsp;</p>
<p>And while I&#8217;m ranting, what&#8217;s with the whole &quot;shell and networking teams cooperated to find the problem&quot; thing. &nbsp;If some stupid component ate an error, then *thats* a problem. &nbsp;Has anyone even suggested addressing that?</p>
<p>I&#8217;m in a bad mood. &nbsp;Has anyone got any chocolate?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-363353">
				<div id="div-comment-363353" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Mike</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060330-31/?p=31723#comment-363353">
			March 30, 2006 at 10:11 pm</a>		</div>

		<p>If the error displays after a mere 100 (or so) entries, why not simply cache them (if doing a &quot;fast query&quot;), and on failure do a non-&quot;fast query&quot; and simply cull the already &quot;fast query&quot; gotten results already returned to the &quot;client&quot;? I mean, it&#8217;s not like Explorer is the hallmark of lean-and-mean anyway, why adding something like (up to) 25-30KB for each &quot;live&quot; Explorer dodah wouldn&#8217;t even be measureable in the megabytes after megabytes it consumes.</p>
<p>I do however wonder what a &quot;fast query&quot; is. At first I thought you were talking about SMB, but then you added HTTP to the discussion. I suggest you stop the riddles and simply tell us what protocol we&#8217;re dealing with here. Trying to find a solution for a half-specified problem in an unspecified domain is about as easy as lifting yourself by the hair.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-363363">
				<div id="div-comment-363363" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Phil Bevan</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060330-31/?p=31723#comment-363363">
			March 30, 2006 at 10:20 pm</a>		</div>

		<p>I would suggest the following:</p>
<p>1. Use whatever method is reliable to detect the buggy driver.<br />
<br />2. If buggy driver detected inform the current user that buggy driver detected and that they should notify the system admin, with a note to check event log.<br />
<br />3. Write a detailed event log message that the buggy driver was detected along with a link to a MSKB article on the problem with links to the fix.<br />
<br />4. Disable &quot;fast mode&quot;<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-363373">
				<div id="div-comment-363373" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Stephen</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060330-31/?p=31723#comment-363373">
			March 30, 2006 at 10:31 pm</a>		</div>

		<p>It appears the program in question is indeed Samba, and the problem is described at:<br />
<br /><a rel="nofollow" target="_new" href="https://bugzilla.samba.org/show_bug.cgi?id=3526" rel="nofollow">https://bugzilla.samba.org/show_bug.cgi?id=3526</a></p>
<p>This bug certainly sounds like the one Raymond is talking about, at least. &nbsp;It was apparently fixed in Samba 3.0.21c, released on 25 February 2006.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-362783">
				<div id="div-comment-362783" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.crazyontap.com' rel='external nofollow' class='url'>Almost H. Anonymous</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060330-31/?p=31723#comment-362783">
			March 30, 2006 at 3:14 pm</a>		</div>

		<p>A few people seemed to have missed Raymond&#8217;s comment that requerying isn&#8217;t really possible (at least not without a lot of work). &nbsp;There are a few principles at work here:</p>
<p>a) The user should *never* get an incomplete list of files from the server without any indication. &nbsp;This is bad. &nbsp;I don&#8217;t think there needs to be any special error handling here &#8212; there&#8217;s probably an existing error code that can be returned to the caller to handle a similar error condition. &nbsp;In addition, adding something more informative to the event log is a good idea.</p>
<p>b) The user should have some way to enable &quot;slow mode&quot; so if upgrading the server isn&#8217;t possible they can still run Vista. &nbsp;Include a knowledge base article about it. &nbsp;If a server administrator encounters this problem during testing they will be able to figure it out (either by contacting their vendor &#8212; who will surely know the fix &#8212; or by consulting the MS knowledge base).</p>
<p>Since there&#8217;s no good way to reasonably detect the problem and retry it &#8212; this seems like the best answer. &nbsp;The driver will get upgraded and this problem will eventually be long forgetten &#8212; no need to hack some complicated solution to it in the short term.<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-362813">
				<div id="div-comment-362813" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.winstep.net' rel='external nofollow' class='url'>Jorge Coelho</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060330-31/?p=31723#comment-362813">
			March 30, 2006 at 3:31 pm</a>		</div>

		<p>I think the solution here is a combination of possible methods, which have basically all been described here.</p>
<p>First: it&#8217;s not the user&#8217;s fault. He can&#8217;t do anything about it, so don&#8217;t bother him. Put an entry in the event log, if you want, but leave it at that.</p>
<p>Second: It&#8217;s obvious the vendor doesn&#8217;t want his software to be classified as &#8216;slow&#8217;, so they will fix the problem ASAP. Unfortunately, it will still take time for the new version to filter through to the distributors and finally to the customers. This is not the vendor&#8217;s fault, so there is no need to punish him by displaying an error message either.</p>
<p>The solution to the problem, under the above circumstances, has already been described here:</p>
<p>Use fast mode to query, maintaining a list of the first 100 entries. When you get to entry 101st and receive an error, switch to slow mode and re-query. Match the slow mode entries with the ones previously obtained in fast mode and return only those that do not match. This is an enumeration, btw, so, as with all enumerations, things might change while you are doing it &#8211; but that&#8217;s a different problem altogether.</p>
<p>Now add that server to your &#8216;last 16 buggy servers&#8217; list. Next time you need to query that server, you will not have the overhead of doing fast mode first and then repeating in slow mode.</p>
<p>Time stamp each entry in the &#8216;bad servers&#8217; list so that each buggy server is removed from the list after one month or so. Why? Because the server software might have been updated in the mean time. Who cares if once per month *one* query will be a little slower than usual?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-363383">
				<div id="div-comment-363383" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://aundh.blogspot.com/' rel='external nofollow' class='url'>JamesW</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060330-31/?p=31723#comment-363383">
			March 30, 2006 at 11:32 pm</a>		</div>

		<p>Problem:<br />
<br />Third party software implements a Microsoft protocol incorrectly.</p>
<p>Solution:<br />
<br />Microsoft fully documents the protocol.</p>
<p>Advantages:<br />
<br />Third party software doesn&#8217;t have to be developed in the dark.<br />
<br />Users get to live in a blissful world of system interoperability.<br />
<br />Happy users won&#8217;t be moaning that Vista doesn&#8217;t work come 20??.<br />
<br />Might get the EU of Microsoft&#8217;s back.</p>
<p>Disadvantages:<br />
<br />Users can use non-Microsoft solutions with less fear, uncertainty and doubt in their minds.<br />
<br />People will want NTFS documented next!</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-john-c-kirk even thread-even depth-1" id="comment-362823">
				<div id="div-comment-362823" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/John+C.+Kirk' rel='external nofollow' class='url'>John C. Kirk</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060330-31/?p=31723#comment-362823">
			March 30, 2006 at 3:34 pm</a>		</div>

		<p>I&#8217;d favour a combination of the suggestions from some previous posters.</p>
<p>1. Document this compatibility problem in the Microsoft Knowledge Base.</p>
<p>2. Have a setting for &quot;always use slow mode&quot;, which is turned off by default. This is controlled through Group Policy (on/off/not configured).</p>
<p>3. If &quot;always use slow mode&quot; is on, then do what it says on the tin, and there&#8217;s no error.</p>
<p>4. If &quot;always use slow mode&quot; is off, and an error occurs, don&#8217;t display an error message to the user, but do write an error in the system log, which includes a link to the aforementioned KB article.<br />
<br />a) If Group Policy for this setting says &quot;not configured&quot;, then set &quot;always use slow mode&quot; to on (writing another entry to the system log), and repeat the query.<br />
<br />b) If Group Policy says &quot;stay off&quot;, then do what it says, i.e. stay off and leave the user with an incomplete list of files.</p>
<p>Advantages:</p>
<p>* The user interface doesn&#8217;t get cluttered with extra options.</p>
<p>* A home user can use Group Policy to control their local machine.</p>
<p>* A corporate admin can avoid schlepping round to 100 machines making this change; they can turn on slow mode when they know about the problem (which avoids other PCs on the network having to repeat the test), then turn it off when they know that the NAS box has been patched.</p>
<p>* If people aren&#8217;t affected by this bug, then they get an immediate speed improvement, without having to go out and buy one of those magazines with dubious &quot;tips and tricks to boost your PC!&quot;</p>
<p>* Anyone who knows what they&#8217;re doing will notice the problem in Event Viewer. Anyone who doesn&#8217;t know what they&#8217;re doing will (hopefully!) not have been screwing around with this setting in the first place, so they&#8217;ll get the default behaviour of silently succeeding after a small delay.</p>
<p>* This doesn&#8217;t delay a roll-out of Vista for anyone who is affected by this bug.</p>
<p>Disadvantages:</p>
<p>* It is possible for someone to sabotage their own (or someone else&#8217;s) machine, if they have admin privileges. This could be done on their behalf by malware. In this situation, they will probably blame Microsoft.</p>
<p>* Vista has to be sullied by code to work around someone else&#8217;s bodge job, and this may lead to accusations of &quot;bloatware&quot;.</p>
<p>&#8212;</p>
<p>Personally, I would like to go for the option of &quot;do nothing&quot;. However, as a customer, I wouldn&#8217;t do a rollout of Vista if I knew that it was incompatible with one of my servers. So, I&#8217;d push for a bug-fix from the server vendor/manufacturer/whoever, but in the meantime I would delay taking up Vista.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-363393">
				<div id="div-comment-363393" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Mark Sowul</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060330-31/?p=31723#comment-363393">
			March 30, 2006 at 11:36 pm</a>		</div>

		<p>Wow, what an ugly bug. &nbsp;You can apparently throw out all the suggestions about retrying the operation, because they would fail too:</p>
<p>The next NtQueryDirectoryFile [fast] call after getting the first 128 directory entries returns STATUS_INVALID_LEVEL.<br />
<br />If we switch to using the FileBothDirectoryInformation [slow] after getting this error, that call returns STATUS_NO_MORE_FILES. &nbsp;This does not happen when using the FileBothDirectoryInformation [slow] level right from the start.<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-363403">
				<div id="div-comment-363403" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">BillK</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060330-31/?p=31723#comment-363403">
			March 30, 2006 at 11:42 pm</a>		</div>

		<p>This may have been said, but it seems to me that any solution that solves </p>
<p>&quot;&#8230;Users will interpret it as a bug in Windows Vista.&quot;</p>
<p>will involve extra code or workarounds that will be a liability and eventually become a bug in another version or two of Windows.</p>
<p>(then again I love a day where I manage to end up with a negative net line count)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-362853">
				<div id="div-comment-362853" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Wesha</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060330-31/?p=31723#comment-362853">
			March 30, 2006 at 3:54 pm</a>		</div>

		<p>/* oversimplified for clarity */</p>
<p>static int currentPos;<br />
<br />static mode = MODE_FAST;<br />
<br />static struct dir_item *buffer[101];<br />
<br />static struct dir_item *nextItem[1];</p>
<p>function MoveFirst() {<br />
<br /> &nbsp; int res = ReadUsingFastMode(&amp;buffer, 101);<br />
<br /> &nbsp; if (res == WEIRD_ERROR_CODE) mode = MODE_SLOW;<br />
<br /> &nbsp; currentPos = 0;<br />
<br /> &nbsp; }</p>
<p>function MoveNext() {<br />
<br /> &nbsp; struct dir_item *res;</p>
<p> &nbsp; if (mode == MODE_FAST) {<br />
<br /> &nbsp; &nbsp; if(currentPos &lt;= 100) res = buffer[currentPos];<br />
<br /> &nbsp; &nbsp; else {<br />
<br /> &nbsp; &nbsp; &nbsp; ReadUsingFastMode(nextItem, 1);<br />
<br /> &nbsp; &nbsp; &nbsp; res = nextItem;<br />
<br /> &nbsp; &nbsp; &nbsp; }<br />
<br /> &nbsp; &nbsp; }<br />
<br /> &nbsp; else {<br />
<br /> &nbsp; &nbsp; ReadUsingSlowMode(nextItem, 1);<br />
<br /> &nbsp; &nbsp; res = nextItem;<br />
<br /> &nbsp; &nbsp; }</p>
<p> &nbsp; currentPos++;<br />
<br /> &nbsp; return res;<br />
<br />}<br />
<br /> &nbsp;<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-363413">
				<div id="div-comment-363413" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Anonymous Coward</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060330-31/?p=31723#comment-363413">
			March 31, 2006 at 12:19 am</a>		</div>

		<p>How about simply crash? Either explorer, or the calling app, or some dummy process that doesn&#8217;t do anything other than die for the purposes of sending in a crash report. Then the user gets to send in an error report, and you can point them to a response page telling them to upgrade the offending driver. You can also set a regkey to use slow mode for the rest of the session, in case the user tries again. Clear the regkey once every few weeks so that people get reminded to upgrade their stuff eventually.<br />
<br />Benefits:<br />
<br /> &#8211; users that don&#8217;t get to deal with buggy servers always get the fast behavior<br />
<br /> &#8211; users of buggy servers know what the problem is and maybe will fix it (and aren&#8217;t totally hosed in the meantime)<br />
<br /> &#8211; kernel stays (relatively) clean<br />
<br /> &#8211; noone sees incomplete results<br />
<br />Drawbacks:<br />
<br /> &#8211; Vista crashes sometimes :(<br />
<br /> &#8211; Users that hit a buggy server sometimes will live in slow mode for a few weeks (can it be that bad if that&#8217;s all that exists in XP though?)<br />
<br /> &#8211; Vista crashes a lot if there&#8217;s a bug in the code that identifies buggy servers</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-363423">
				<div id="div-comment-363423" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">makoto</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060330-31/?p=31723#comment-363423">
			March 31, 2006 at 12:38 am</a>		</div>

		<p>Whatever you do, please don&#8217;t &quot;do nothing.&quot;</p>
<p>It might be old samba, which my cheap NAS hdd box maight use.<br />
<br />Even if so, I don&#8217;t think the vender cares about that.<br />
<br />I think, if it can be used by XP, it should be used by Vista.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-363433">
				<div id="div-comment-363433" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">John C.</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060330-31/?p=31723#comment-363433">
			March 31, 2006 at 12:50 am</a>		</div>

		<p>My creative (ahem) solution: Shame the vendor into solving the problem.</p>
<p>You&#8217;re absolutely right that users will interpret this as a Windows Vista bug. Not solving it leaves a bad impression, even if it&#8217;s not your fault. But as you describe it, this fundamentally seems like a social problem rather than a technology problem. The desirable outcome is to have the vendor fix the problem rather than to implement some nasty technical workaround. </p>
<p>It&#8217;s as if the tires on a car were substandard; the car manufacturer could come up with all kinds of workarounds (limit speed to 65 mph if the temperature is over 70F, except when you turn on the hazard blinkers to indicate an emergency), but the real solution is to get the supplier to fix the underlying problem. Of course, the relationship is rather different here: this isn&#8217;t a supplier over whom you wield direct economic power. So what other kinds of power could you bring to bear? Legal is unlikely, but social might be possible. My social engineering skills are somewhat weak so I&#8217;m certainly the wrong guy to suggest tactics, but I bet you could find people who could figure out how to apply the right kind of pressure to make this problem go away without writing code on your end.</p>
<p>Thinking in purely mercenary terms, perhaps you could even pay the vendor to fix the problem on their end? Yes, you&#8217;d have to rely on the installed base actually installing patches and whatnot, which might be totally unrealistic; still, I can&#8217;t help but thinking that their might be ways to resolve this that are not fundamentally technical hacks on Microsoft&#8217;s part.</p>
<p></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-363443">
				<div id="div-comment-363443" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joe Butler</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060330-31/?p=31723#comment-363443">
			March 31, 2006 at 12:59 am</a>		</div>

		<p>I don&#8217;t think it&#8217;s viable to offer a &#8216;classic&#8217; directory listing and a new improved &#8216;rapid&#8217; directory listing for apps to choose. &nbsp;All that will happen if this option is given is a lot of application developers will simply choose the &#8216;fast&#8217; method without realising the implications. &nbsp;This, again, puts the end user at the mercy of sloppy developers. &nbsp;Haven&#8217;t we learnt anything from Raymond&#8217;s posts &#8211; give the developer the ability to do the wrong thing, and will jump right in &#8211; just look at how many people here are talking about &#8216;buggy drivers&#8217;.</p>
<p>&lt; :-) &gt; An alternative fix would be to release Vista SP2. &nbsp;This would really be XP SP2 with a Vista theme. &nbsp;99% of Vista users would not notice that they had been regressed. &lt;/ :-) &gt;<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-362973">
				<div id="div-comment-362973" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Jeff G</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060330-31/?p=31723#comment-362973">
			March 30, 2006 at 5:02 pm</a>		</div>

		<p>Upon first interaction with a server, run a query to test if they have the fixed code. &nbsp;If no such test exist, write one into the the next version of the server software and consider all current versions as failing. &nbsp;Cache the return value in a short list* (both positive and negative results) and use that to guide the call to the directory query functions. &nbsp;Expire the cache between connection resets or at known times the server software could be changed (I assume connections have to be reset to upgrade/downgrade the file server software). &nbsp;If your cache is full, do not add an entry. &nbsp;If the cache value is missing during a directory operation, use slow mode. &nbsp;</p>
<p>Advantages:<br />
<br />No user interaction<br />
<br />Everything works always (assuming the connection stuff i mentioned)<br />
<br />Fast mode preserved in common** use case</p>
<p>Disadvantages:<br />
<br />Requires potential change to server software***<br />
<br />Slow mode dominant if you regularly interact w/ large (&gt; cache size) numbers of servers.<br />
<br />Overhead on establishing a connection.</p>
<p>*Expose the cache size param via tools/articles where interaction with a large # of untrusted file servers is expected, maybe the &#8216;Optimizing Bittorrent for Windows Vista Development Journal&#8217;.</p>
<p>**Common given my understanding of how people use file servers, if this isn&#8217;t the case this solution is suspect.</p>
<p>***If necessary, this might be unreasonable to ask of a group you may/may not have political clout with and would kill this solution.</p>
<p>Oh, and kudos to your test/shell/networking and team for finding and identifying this issue. &nbsp;Perhaps step 0 of this solution is giving whoever decided &#8216;we really need to test against X version of the file system software&#8217; a promotion.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-363013">
				<div id="div-comment-363013" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Miral</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060330-31/?p=31723#comment-363013">
			March 30, 2006 at 5:12 pm</a>		</div>

		<p>My pick: do &quot;Auto-detect the buggy driver and work around it next time&quot;, but requery *immediately*, not next time.</p>
<p>Remember the server is &quot;bad&quot;, but periodically try fast mode on it again anyway, just in case they&#8217;ve upgraded.</p>
<p>While the requery is going on in the background, pop up a warning dialog saying that a buggy driver was detected and that they should upgrade their server, pointing them at the relevant KB article.<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-363463">
				<div id="div-comment-363463" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Mark Sowul</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060330-31/?p=31723#comment-363463">
			March 31, 2006 at 1:20 am</a>		</div>

		<p>I admit I usually side with MS on most things, and I also don&#8217;t know whether this is a result of MS not fully opening up its SMB information, but this seems like a case of reaping what you sow. &nbsp;If MS had opened its network protocols in the first place, Samba wouldn&#8217;t have had to reverse-engineer them. &nbsp;I feel like a Slashdot troll. &nbsp;It&#8217;s a very unpleasant feeling.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-363473">
				<div id="div-comment-363473" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">malachi</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060330-31/?p=31723#comment-363473">
			March 31, 2006 at 1:26 am</a>		</div>

		<p>Here are the ideas and assumptions that shape my point of view.</p>
<p>1. Breaking something by default in a new OS that worked in the prior version in unacceptable. &nbsp;</p>
<p>This means &quot;default to fast and do nothing&quot; is out. &nbsp;This option is seductive. It seems like &quot;doing the right thing&quot;, but the theory has to be carefully balanced against reality. &nbsp;Doing nothing might be fine, but only if you can get away with it. &nbsp;I don&#8217;t think Vista can get away with it.</p>
<p>2. Showing the users a technical error message in response to what would be percieved as an arbitrary condition and when things work fine 99.9% of the time is not acceptable. &nbsp;(If it would confuse my father and cause him to call me, it is not user friendly enough.) &nbsp;It&#8217;s even worse if they have to make a decision. &nbsp;Always remember: USERS CAN&#8217;T READ.</p>
<p>This means that any message box that the end user sees is out. </p>
<p>3. Assuming that the faulty number of files will be constant is a bad idea. &nbsp;Sure, today it might be 100, but there is no way to know if the code might be modified at some point in the future to break in the same way at 50 files or 500 files etc. &nbsp;</p>
<p>This means both the &quot;cache the first 100&#8230;&quot; and the &quot;default to slow until you come across a directory with more than 100 files&#8230;&quot; plans are both out.</p>
<p>4. Black or white listing server versions is a bad idea. &nbsp;While you might be able to build a comprehensive list of all faulty implementations in the wild today, it is possible that tomorrow a new faulty implementation will be released and it can not be assumed that the user will ever update the OS to recieve any additions or subtractions to the blacklist/whitelist. &nbsp;It is fairly irksome when I stumble upon a web page that doesn&#8217;t recognize my browser version it tells me to &quot;upgrade&quot; to a prior version because it only knows about browser versions x and y and I have upgraded to z. </p>
<p>So, the static black/white lists are out.</p>
<p>5. It can not be assumed that the user can do anything to fix the faulty server version. &nbsp;Expecting the user to fix the server is bad in so many ways, it is hard to know where to start. &nbsp;First of all, many people use computers in enviornments where they have no control over the server(s) they use. &nbsp;For that matter, some sys admins do not have any control over the server version for various reasons ranging from auditing paranoia to black box systems with recalcitrant vendors or out of business vendors. &nbsp;Not to mention cases where the server is under the control of another party that the user cannot force change upon, even if that change is possible.</p>
<p>This means suggesting upgrading of the server as the only possible workaround or solution is out.</p>
<p>6. It cannot be assumed that the broken versions will eventually die out or be upgraded in a useful time frame. &nbsp;If this is OSS code then it is possible that a company has a branch of the broken implementation that they might not fix, for whatever reason, but which they may incorporate into a future product. &nbsp;</p>
<p>This means we may be stuck with this hack for a long, long time. &nbsp;Not to mention the fact that if the OS siliently works around the problem not only is there no incentive to fix it, but other products may someday intentionally implement the bad behavior for whatever silly reason. &nbsp;If you don&#8217;t think this might be true, go read all of the old entries on this site.</p>
<p>7. If performance is really a concern, blacklisting 16 bad servers is not a great plan for a couple of reasons. &nbsp;If the user never accesses more than 16 bad servers, and the servers are fixed later then they will be stuck in slow mode forever. &nbsp;Also, if the problem only exists for lists that are over 100 (well, n, because I don&#8217;t believe that 100 is a hard limit) files long, then having one instance on a server of 101 files could forever relegate that server to slow mode even if there is never another instance of a directory with more than 100 files on that server. &nbsp;Even if there is some automatic method to clear out this cache, that will just have a negative performance impact on the people that frequently have to access large directories on a server that is not upgraded.</p>
<p>This takes out the option of keeping a black/white list of servers that are known to be good/bad.</p>
<p>8. Logging the error to the event log is acceptable, but putting a url or KB number in the text is not desirable. &nbsp;Describe the error and the problem as well as possible, but don&#8217;t assume that the KB number will be useful several years from now. &nbsp;From my point of view, this would be hard coding something that should not be hard coded. &nbsp;There is a possible future where the same exception is raised and logged for a different reason, making the hard coded KB number very misleading. &nbsp;It is also no fun to end up viewing KB404.</p>
<p>This doesn&#8217;t rule out messages in the event log, but it rules out being overly specific about the assumed cause.</p>
<p>9. It is not acceptable to produce a file list that is not reflective of the directory at one single point in time. &nbsp;</p>
<p>This rules out the &quot;cache the first n records and requery merging the new results&#8230;&quot; plans. &nbsp;I must admit that this is a somewhat attractive option in that it would make the issue invisible, but the problems outweigh the benefits.</p>
<p>So, after all of that (and I&#8217;m sure I forgot something along the way), I would have to go with slow mode by default with a configuration option to enable it. &nbsp;Depending on how it is implemented, it may be accompanied by a warning that results may not always be reliable. &nbsp;(This is acceptable, by the way, because it is presented in a context in which it is more likely to make sense to the user and in response to a direct user action that does not have the historical expectation of &quot;just working&quot;.) &nbsp;It would also be good to log the error to the event log. &nbsp;</p>
<p>This would allow sys admins in controlled enviornments to enable it as well as &quot;power users&quot; (even if it isn&#8217;t a good idea, these types of users are more tolerant of broken behavior because they tend to cause it) who want the &quot;speed boost&quot;. &nbsp;This keeps normal users from being exposed to strange and confusing behavior in almost all cases, and it limits the number of people who will assume that Vista is at fault. &nbsp;</p>
<p>This approach reminds me of DMA settings for IDE devices in Windows 98. &nbsp;Since you&#8217;ve bothered to read this far, I&#8217;ll punish you with a reminder of an irritating bug in Windows 98. &nbsp;Every time I checked the DMA box for a hard drive for the first time, I had to go back into the properties and set it again for the setting to &quot;stick&quot;. &nbsp;I&#8217;m not really sure how I ever figured that out.</p>
<p>Advantages<br />
<br />&#8211; No failures by default (&quot;it just works&quot;)<br />
<br />&#8211; Very few failures total<br />
<br />&#8211; Allows for fast mode, but it is a conscious decision that someone has to make<br />
<br />&#8211; Doesn&#8217;t require a gross hack</p>
<p>Disadvantages<br />
<br />&#8211; Slow by default<br />
<br />&#8211; Malware could, in theory, tweak the setting and cause problems, intentionally or unintentionally (but I see this as a problem with almost all approaches, and there are bigger malware fish to fry anyway)<br />
<br />&#8211; Fast mode is less useful because it will be rarely used<br />
<br />&#8211; I think the anticompetitive disadvantage is a straw man, as long as everything is treated equally. &nbsp;I think it only really becomes a problem when only some specific servers start working slowly for some ineffable reason.</p>
<p>I apologize for any spelling or grammar mistakes.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-363083">
				<div id="div-comment-363083" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">John McCormick</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060330-31/?p=31723#comment-363083">
			March 30, 2006 at 5:44 pm</a>		</div>

		<p>In no case is a silently incomplete file list acceptable. The shell must either fail with an error or return the entire list in some way.</p>
<p>Is there no place in IEnumIDList::Next()&#8217;s contract where an error can be indicated? </p>
<p>If so, applications that ignore the possibility of the shell returning an error are already doing so at their own risk, and you can obviously update Explorer to respond to it properly.</p>
<p>If not, your contract *requires* a full list, so you must guarantee the existence of such a list before you allow someone to start iterating through results, which may defeat the purpose of a fast query&#8230;. (Also, in that case, why does it use the same interface?)</p>
<p>Like everyone else here, I&#8217;d love to know more about the problem before making wild guesses about what solution is best.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-363483">
				<div id="div-comment-363483" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">peterchen</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060330-31/?p=31723#comment-363483">
			March 31, 2006 at 2:08 am</a>		</div>

		<p>You&#8217;ve got us cornered here!</p>
<p>Whatever you do, you must make it trackable to the respecitve vendor + update. Event log + KB article + link in error message (if any)</p>
<p>Fix automatically only if you can fix it perfectly (b detecting the driver version, or executing a requery &#8211; which I still don&#8217;t understand why this isn&#8217;t possible)</p>
<p>Try to find a way to tell &quot;good&quot; from &quot;bad&quot; servers. </p>
<p>If nothing works, pass through the error in the API. Maybe use a more friendly way than a message box to handle this in explorer (like the &quot;popup blocked&quot; in IE?) but LINK TO THE KB ARTICLE!</p>
<p>MHO for the other options:</p>
<p>&quot;Do Nothing&quot; camp:<br />
<br />In two years there will be equally many shouting &quot;Windows sucks because they still doesn&#8217;t use fast mode which has been fixed ages ago&quot;</p>
<p>The problem is not the vendor fixing it, but distribution. An Error message does promote distribution, but moreover it is a &quot;It worked in XP, it broke in Vista&quot;. Customers don&#8217;t care who is guilty. They care about features, and the software industry getting their act together.</p>
<p>&quot;Explorer Option&quot;<br />
<br />Suitable only if this is a major product. I guess if MS always took this way, we&#8217;d have 65032 explorer options by now.<br />
<br />One possibility would be a single checkbox &quot;Compatibility Mode&quot;, aggregating multiple fixes, with help linking to a KB article that describes which things it fixes in detail</p>
<p>&quot;Certification&quot;<br />
<br />Please no. Development for Windows is getting harder and harder for small shops. Required certification may be the death for many applications written with passion, and move us toward 9-5 drone software. Voluntary certification (as it is NOW with drivers) will not stop people installing crap and blaming MS &#8211; but maybe that&#8217;s what it takes.<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-363493">
				<div id="div-comment-363493" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">peterchen</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060330-31/?p=31723#comment-363493">
			March 31, 2006 at 2:10 am</a>		</div>

		<p>Coax the vendor into a fix that allows you to detect which version is running.</p>
<p>If you can&#8217;t detect, run in slow mode.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-363503">
				<div id="div-comment-363503" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Cheong</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060330-31/?p=31723#comment-363503">
			March 31, 2006 at 2:26 am</a>		</div>

		<p>Having read the thread, here&#8217;s my vote:</p>
<p>I&#8217;d rather have Windows detect the buggy driver, then popup bubble to alert users about this&#8230; much like what you would get when you plug a USB 2.0 device to a USB 1.1 port.</p>
<p>I see no problem for this. Just make sure the warning message contains specific string that&#8217;ll make it easily searchable in search engines.(With KB article number, maybe)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-363513">
				<div id="div-comment-363513" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Jonathan Wilson</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060330-31/?p=31723#comment-363513">
			March 31, 2006 at 2:36 am</a>		</div>

		<p>One idea is that when you detect the error, re-enumerate. Then, return the item they asked for (i.e. keep a record of what item you would have returned if the error hadnt been detected and return that from IEnumIDList::Next after you re-enumerate)</p>
<p>Only slowdown then is once when the error happens and the directory has to be enumerated again with slow mode.<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-363523">
				<div id="div-comment-363523" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Radeldudel</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060330-31/?p=31723#comment-363523">
			March 31, 2006 at 2:42 am</a>		</div>

		<p>I&#8217;d say disable fast mode for the initial release of Vista and have an option to enable it. Put the story why it is disabled in the help for the option.</p>
<p>Enable it later on (SP1?) so it will not be blamed on Vista itself but on some service pack.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-363543">
				<div id="div-comment-363543" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://wendyhome.com' rel='external nofollow' class='url'>::Wendy::</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060330-31/?p=31723#comment-363543">
			March 31, 2006 at 2:51 am</a>		</div>

		<p>apologies if I&#8217;ve misunderstood the problem and for not reading the 153 responses.</p>
<p>The problem is temporary based on a 3rd-part bug. &nbsp;Prioritise designing for the ideal &#8211; no 3rd party bug. &nbsp;Then prioritise letting the user know that they are not getting standard results in a manner that acts as a pressure for the 3rd party to improve its business by removing the bug/problem and moving towards the ideal.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-363183">
				<div id="div-comment-363183" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Yuhong Bao</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060330-31/?p=31723#comment-363183">
			March 30, 2006 at 6:51 pm</a>		</div>

		<p>I recommend that you:<br />
<br />* Include this issue in the Release Notes or a Read Me file and a KB article<br />
<br />* Add a check box somewhere that disable fast mode.<br />
<br />Advantages:<br />
<br />* People can read the Release Notes or a read me file or search in the KB for it and find the issue.<br />
<br />* People can disable fast mode, if nesserary.<br />
<br />Disadvantages:<br />
<br />* Not everyone read the Release Notes or aware of the KB.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-363563">
				<div id="div-comment-363563" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Steve</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060330-31/?p=31723#comment-363563">
			March 31, 2006 at 3:25 am</a>		</div>

		<p>A lot of noisy people here. I&#8217;ve seen probably a total of 5 largely different solutions, and those are the original ones Raymond put up.</p>
<p>Lay off the vendor. Raymond said in his second paragraph that the vendor fixed the problem and the distributors haven&#8217;t picked it up yet. If you&#8217;re not going to read the comments before replying, at least read the original post!</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-363573">
				<div id="div-comment-363573" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Paul de Vrieze</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060330-31/?p=31723#comment-363573">
			March 31, 2006 at 3:41 am</a>		</div>

		<p>There are a number of things that must be remembered:<br />
<br />&#8211; For users it must just work<br />
<br />&#8211; The problem should be limited as much<br />
<br /> &nbsp;as possible:<br />
<br /> &nbsp;&#8211; Make a difference between new stuff<br />
<br /> &nbsp; &nbsp;and old stuff.<br />
<br /> &nbsp;&#8211; If you automagically work around<br />
<br /> &nbsp; &nbsp;issues such that they don&#8217;t have a<br />
<br /> &nbsp; &nbsp;backlash, no-one will fix them.<br />
<br />&#8211; While things should just work, they can<br />
<br /> &nbsp;be slow. Users can also be given<br />
<br /> &nbsp;unobtrusive warnings (in the statusbar,<br />
<br /> &nbsp;not a dialogbox)</p>
<p>If it would be possible to detect the broken servers that would be preferred. If not, I&#8217;m in favour of (if possible) having two APIs. The compatible one for existing code that is slow, but works always. The new API should return an error if the fast access fails, that suggests the application to retry. (I suppose that dll&#8217;s support versioned symbols).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-363593">
				<div id="div-comment-363593" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">8</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060330-31/?p=31723#comment-363593">
			March 31, 2006 at 4:22 am</a>		</div>

		<p>Wow, lot&#8217;s of comments on this one. I just browsed through most of them.</p>
<p>Anonymous: &quot;Tremendous hack: Do the fast query, remember the files returned (up to 100, or the maximum number of files that a bugged fast query can return). If it fails, do the slow one, and don&#8217;t pass the files already reported.&quot;</p>
<p>That could cause non-obvious strange behaviour years from now, I can see the tont blog entry coming in the far future (&quot;When drivers don&#8217;t support something they claim to&quot;)</p>
<p>AC: &quot;Isn&#8217;t it possible to detect the version of the server, and afterwards to produce slow queries to servers which are known to make errors?<br />
<br />Since it&#8217;s something like &quot;get first/get next&quot; you are supposed to exchange more messages with the server so you can start the session by first asking the version.<br />
<br />Another way around, if you can&#8217;t detect &quot;old bad&quot; can you detect &quot;new fast&quot; servers? Then only those should be asked fast.&quot;</p>
<p>Almost exactly what I thought. Try to find a signature to detect the broken server.</p>
<p>Advantage: It&#8217;ll &quot;just work&quot;</p>
<p>Disadvantages: Ugly BC hack in the code, slightly slower query time</p>
<p>Brad Corbin: number 4 entered my mind in the first part of your solution too, and indeed having a new API is a tremendous bummer, especially now that it&#8217;s been partially delayed again.</p>
<p>Joe Butler: interesting solution, let&#8217;s hope a security bug doesn&#8217;t crawl in</p>
<p>To those that say the vendor should be contacted or the driver should be fixed and BryanK, read the friendly article, it was already fixed but there&#8217;s still need for BC. (How on earth would you track down who uses or is going to use the buggy version?)</p>
<p>BTW adding any sort of UI, be it an error or configuration setting is costly (requiring a help text, a translation, a translation of the help, possibly a KB article to explain it, etc.), especially now that Vista is in a late stage of development. And this one<br />
<br />is especially funny:</p>
<p>Martin: &quot;The dialog should say something like this: The server you are accessing only returns the first 100 files when using fast queries. Do you want to turn fast queries off? Y/N.&quot;<br />
<br />Some users aren&#8217;t gonna read or understand it and just press No, Raymond has pointed that out already: <a rel="nofollow" target="_new" href="http://blogs.msdn.com/oldnewthing/archive/2004/04/26/120193.aspx" rel="nofollow">http://blogs.msdn.com/oldnewthing/archive/2004/04/26/120193.aspx</a></p>
<p>And I agree with JamesW, although bugs can happen while there&#8217;s proper documentation provided too.<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-363283">
				<div id="div-comment-363283" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Robert B. Anonymous</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060330-31/?p=31723#comment-363283">
			March 30, 2006 at 8:23 pm</a>		</div>

		<p>Do &quot;almost nothing.&quot;</p>
<p>Create a new field in installs that allow the installer to specify who the mystical entities (such as &quot;Network Administrator&quot;) are, complete with E-mail or some other contact information. &nbsp;Have this also be built into the framework for Active Directory/whatever you want to call the Vista Server implementation, so enterprises can customize this (and update it) site side, in a single place. &nbsp;This way, the end user will know who to contact in a corporation. &nbsp;At home, they&#8217;ll know who to contact as well. &nbsp;If they don&#8217;t, I&#8217;m going to make the rash assumption that they probably don&#8217;t need this server sitting in home.</p>
<p>If you do much else, what are you harboring? &nbsp;If I knew that I could make an *almost working* game/driver/program, and publish it, having Microsoft more or less &quot;complete&quot; the code for me, think of all the man hours I&#8217;d save.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-363603">
				<div id="div-comment-363603" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">AC</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060330-31/?p=31723#comment-363603">
			March 31, 2006 at 5:03 am</a>		</div>

		<p>Everybody, take a look at the posts from Mark Sowul.</p>
<p>He specifies which calls are in question:</p>
<p>NtQueryDirectoryFile</p>
<p>returns STATUS_INVALID_LEVEL after first 128 entries.</p>
<p>After STATUS_INVALID_LEVEL is received, calling</p>
<p>FileBothDirectoryInformation</p>
<p>returns STATUS_NO_MORE_FILES.</p>
<p>Now both are NTDLL calls, and both are (well of course, why do you ask :) ) undocumented.</p>
<p>So it look obvious that such bug should not be &quot;fixed&quot; just in Explorer.</p>
<p>Moreover Explorer should not even use these calls, but use &quot;FindFirstFile&quot; that&#8217;s the only thing that anybody else can use. Anything else would be cheating. And unfair advantage compared to any iother third party application which can only use the Win32 API.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-363613">
				<div id="div-comment-363613" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Chris Becke</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060330-31/?p=31723#comment-363613">
			March 31, 2006 at 5:59 am</a>		</div>

		<p>Skip the error messages or dialogs.</p>
<p>Add a configuration option to the Network Client to &quot;Allow Fast Mode&quot;. Default it to Off, but put it there. Obviously XP&#8217;s slow mode wasn&#8217;t all that slow, so defaulting people to slow mode isnt a problem.</p>
<p>In the mean time, work with the vendor to upgrade their server. At some point in the future, simply change the default for the network client from Off to On for this option &#8211; once its deemed that the risk of users hitting old servers is minimized.</p>
<p>Cons:<br />
<br />Everyone is punished and forced to use slow mode &#8211; unless they happen to be aware of fast mode and how to enable it.</p>
<p>Why I dont care about the con:<br />
<br />XPs exclusive use of slow mode means that slow mode isnt THAT slow.</p>
<p>Pro:<br />
<br />The ability (and intention) to enable fast mode means the vendors can get fast mode compliant drivers tested and out there.<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-363623">
				<div id="div-comment-363623" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Asd</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060330-31/?p=31723#comment-363623">
			March 31, 2006 at 6:39 am</a>		</div>

		<p>I vote for retrying and continuing using the slow request when you catch this error. There have been some comments saying this is complex and nasty but I would think it is a lot simpler and cleaner to implement than a specific error message.<br />
<br />And I think version checking is almost always the wrong way to do things. Check for functionality not a specific version.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-363653">
				<div id="div-comment-363653" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Laura T.</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060330-31/?p=31723#comment-363653">
			March 31, 2006 at 8:58 am</a>		</div>

		<p>I think almost everything as been said on this topic. </p>
<p>Anyone remeber the infamous OPLocks? They were enabled by default, and what we got..? The Fast Mode (whatever it is) seems something similar.<br />
<br />They both have/had compatibility problems. The root causes are different (in most cases) but the point is, the new, a lot faster system was enabled by default. It was not a success.</p>
<p>This and other reasonings brings me to say &quot;Disable &quot;fast mode&quot; by default&quot;, at least on the business editions. Home editions might not.<br />
<br />But let me an easy way to switch it on or off with the correct advises (&quot;This option might&#8230;&quot;). The system might even advise if automatically after a while (like performance center does) if no problems encountered. But that&#8217;s another problem.<br />
<br />And lastly, because this seems to be, only the FIRST appearance of a problem with this new type of query. It might, and might not, be more &nbsp; pervasive that it seems now. The use data preservation is the first priority of an operating system. If I cannot find files, it&#8217;s not so secure, whoever the blame is.</p>
<p>Laura</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-363663">
				<div id="div-comment-363663" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">dave</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060330-31/?p=31723#comment-363663">
			March 31, 2006 at 9:00 am</a>		</div>

		<p>As a developer in this particular problem space, the solution I prefer for the good of mankind is &quot;do nothing and let the buggy file server get fixed&quot;. &nbsp;There are enough hacks and workarounds associated with SMB already.</p>
<p>For bonus points, have Someone Important get on the phone right now to the CEO of Electronic Notworking Moving Control Appliances, or whoever they are, right now, and point out how embarrassed they&#8217;re going to be when Vista comes out.</p>
<p>Care to describe what &#8216;fast mode&#8217; and &#8216;slow mode&#8217; really are in SMB terms? I&#8217;m curious.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-363673">
				<div id="div-comment-363673" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Christoph Richter</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060330-31/?p=31723#comment-363673">
			March 31, 2006 at 9:20 am</a>		</div>

		<p>would use Centaur&#8217;s solution.<br />
<br />i know the reason, why microsoft is doing so much &quot;compatibility&quot; code, but for buisiness, where the company is still alive and has a workaround, it should not be &quot;hidden silently&quot;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-363683">
				<div id="div-comment-363683" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">8</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060330-31/?p=31723#comment-363683">
			March 31, 2006 at 9:32 am</a>		</div>

		<p>BTW, I do think it&#8217;s really cool that Microsoft is actually catering for a bug in Samba. I&#8217;d expect MS to do everything possible to undermine Samba, and Samba to do everything possible to stay compatible.</p>
<p>This is a major leap forward in that regard, thanks mr Chen! This is good for MS.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-363693">
				<div id="div-comment-363693" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blogs.msdn.com/oldnewthing/archive/2006/03/31/565878.aspx' rel='external nofollow' class='url'>The Old New Thing : The network interoperability compatibility problem, first follow-up of many</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060330-31/?p=31723#comment-363693">
			March 31, 2006 at 10:00 am</a>		</div>

		<p>PingBack from <a rel="nofollow" target="_new" href="http://blogs.msdn.com/oldnewthing/archive/2006/03/31/565878.aspx" rel="nofollow">http://blogs.msdn.com/oldnewthing/archive/2006/03/31/565878.aspx</a></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-363973">
				<div id="div-comment-363973" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Igor Shmukler</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060330-31/?p=31723#comment-363973">
			March 31, 2006 at 1:15 pm</a>		</div>

		<p>Do a slow mode by default, but try to see whether the fast mode can be properly supported.<br />
<br />Keep bounded LRU splay tree with servers that support fast mode</p>
<p>Do a lookup and if your server is not in the tree, do a slow mode.</p>
<p>This should yield same practical results, as fast mode by default.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-363983">
				<div id="div-comment-363983" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">David Walker</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060330-31/?p=31723#comment-363983">
			March 31, 2006 at 1:18 pm</a>		</div>

		<p>For the comments that say the following: &nbsp;&quot;You can apparently throw out all the suggestions about retrying the operation, because they would fail too: </p>
<p>The next NtQueryDirectoryFile [fast] call after getting the first 128 directory entries returns STATUS_INVALID_LEVEL.<br />
<br />If we switch to using the FileBothDirectoryInformation [slow] after getting this error, that call returns STATUS_NO_MORE_FILES. &nbsp;This does not happen when using the FileBothDirectoryInformation [slow] level right from the start. &quot;</p>
<p>Right, if you SWITCH to using the slow version after getting the STATUS_INVALID_LEVEL error. &nbsp;</p>
<p>How about closing the connection, and then reopening it in slow mode? (Starting completely over after seeing the error.) &nbsp;</p>
<p>If &quot;closing the connection&quot; isn&#8217;t the right term, then start over and do whatever you would have done if fast mode didn&#8217;t exist.</p>
<p>Why hasn&#8217;t anyone mentioned that possibility?</p>
<p>David W</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-364013">
				<div id="div-comment-364013" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://jamessummerlin.blogspot.com' rel='external nofollow' class='url'>James Summerlin</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060330-31/?p=31723#comment-364013">
			March 31, 2006 at 1:28 pm</a>		</div>

		<p>Some of you are just plain killing me. &nbsp;It appears you don&#8217;t understand the economics of writing software.</p>
<p>James</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-364223">
				<div id="div-comment-364223" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://macbirdie.net' rel='external nofollow' class='url'>macbirdie</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060330-31/?p=31723#comment-364223">
			March 31, 2006 at 4:35 pm</a>		</div>

		<p>My take is: Do Nothing.<br />
<br />All NAS devices are upgradable and all un*x server admins can upgrade their software as well. Can&#8217;t see why there should be another backcompat/bugcompat hack in Windows.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-363643">
				<div id="div-comment-363643" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Centaur</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060330-31/?p=31723#comment-363643">
			March 31, 2006 at 8:51 am</a>		</div>

		<p>So…</p>
<p>* There is a buggy server that claims to support fast mode but does not.<br />
<br />* The bug is fixed in the server software.<br />
<br />* Distributors are distributing the old version.<br />
<br />* Windows Vista is going to use fast mode.<br />
<br />* Some time will pass until Windows Vista ships.</p>
<p>Therefore,</p>
<p>* Contact distributors, urging them to update to the new version.<br />
<br />* Give them a sensible time frame.<br />
<br />* After that period passes, issue a public advisory (or cause a public advisory to be issued), probably to a security-related mailing list such as Bugtraq (since the symptoms look like the condition of denial of service to the user who wants the 101st file). State that the bug is fixed in version X.YY.<br />
<br />* When the error condition is detected, log an event with a descriptive details text that administrators and advanced users can google for.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-363783">
				<div id="div-comment-363783" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.morganalley.com' rel='external nofollow' class='url'>Dewi Morgan</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060330-31/?p=31723#comment-363783">
			March 31, 2006 at 10:40 am</a>		</div>

		<p>[Summary: I suggest a mix of &quot;autodetect with dialog&quot;, plus &quot;config setting for SMB client&quot;, plus &quot;knowledgebase article&quot;, plus &quot;syslog&quot; plus&#8230;]</p>
<p>Allowing developers to turn on (or off) fast mode in their code is important, but won&#8217;t fix the problem, so isn&#8217;t a relevant response. </p>
<p>A &quot;go slow&quot; setting should be provided for the SMB client. Won&#8217;t fix the problem when it happens, but allows a fix for the general class of &quot;problems from fast mode&quot;, rather than the specific class of &quot;problems from samba returning a bizarre error code&quot;.</p>
<p>This does not address the user experience, though.</p>
<p>Requiring apps to deal with this will still make people say &quot;Vista bug!&quot;, which it is. All my apps break except those upgraded by Vista? Vista bug.</p>
<p>Anyway, you can&#8217;t code for every incompatibility caused by fast mode, whether you put your workaround in explorer or the SMB client.</p>
<p>You also can&#8217;t rely on the server being fixed unless you tell people it needs fixing.</p>
<p>So the answer is probably found in the answer to the question &quot;how does SMB deal with the network being dropped before a findnextfile&quot;? Users are used to networking issues. They don&#8217;t (generally) blame networking issues on MS. Do what you normally do then, but with a different message and (imperative) a pointer to the KB article. Log it in the syslog (also imperative).</p>
<p>The KB article should list how to turn fast mode off systemwide, how to upgrade the server so they don&#8217;t have to, and importantly, how to remove the files you can see in order to see the others.</p>
<p>And as people pointed out earlier, open up and document the SMB standard now that there are clear financial and development costs to having it a closed standard.</p>
<p>Advantages:<br />
<br /> * Operating system remains &quot;pure&quot;, unsullied by specific compatibility hacks.<br />
<br /> * SMB client now has the ability to deal with all unexpected error codes and direct people to a relevant KB article, which gives a generic answer, and directs them to a specific subpage for each known unexpected error (this samba bug being the only one, for now).<br />
<br /> * Customers with this problem will know that they have it.<br />
<br /> * Customers are given a specific place to look for the solution.<br />
<br /> * Customers can turn off fast mode clientside, so support contracts are unaffected and the problem can be resolved even without firmware upgrades or talking to an admin.<br />
<br /> * The customer is told how to reduce the number of files in the folder and recover all data even without resolving the problem on either end, even if they&#8217;ve no access to the SMB client settings on their own machine.<br />
<br /> * A clear enough message causes users not to interpret it as a bug in Windows Vista.<br />
<br /> * Administrators can choose not to upgrade, and instead tell all users to configure their clients for slow mode, or just to not store more than N files per dir.<br />
<br /> * None of the disadvantages of the autodetect/blacklist methods.</p>
<p>Disadvantages:<br />
<br /> * Programming and testing required, and it&#8217;s very late in the day for Vista.<br />
<br /> * It doesn&#8217;t silently &quot;just work&quot;.<br />
<br /> * Makes all servers use slow queries if there&#8217;s a single buggy server (unless the client can be given something like a &quot;slowservers.ini&quot;, which accepts wildcards &#8211; a manual whitelist).<br />
<br /> * Users have to read an error dialog, understand it, and follow it.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-364303">
				<div id="div-comment-364303" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Stefan Kanthak</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060330-31/?p=31723#comment-364303">
			March 31, 2006 at 7:23 pm</a>		</div>

		<p>Do the same as described in MSKB article 896427!</p>
<p>Stefan</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-364023">
				<div id="div-comment-364023" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Jules</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060330-31/?p=31723#comment-364023">
			March 31, 2006 at 1:50 pm</a>		</div>

		<p>A number of people have been saying something like the following:</p>
<p>There is no real option. &nbsp;Explorer must either show a list of all the files all of the time, or an error message. &nbsp;Everything else is just details.</p>
<p>These people are right. &nbsp;Showing an incomplete list without explaining to the user that something is wrong is broken behaviour, and must be fixed. &nbsp;Further, the order of preference is clearly &quot;show a complete list&quot; followed by &quot;show an error message&quot;, because a working tool is better than one that tells you it isn&#8217;t working.</p>
<p>Version checking doesn&#8217;t work. &nbsp;Comments have made it clear that the software at fault is samba; samba has a feature that allows the user to customise the system name and version number returned, hence there are probably thousands of different cases here, many of them indistinguishable from working ones (e.g. I&#8217;ve seen samba servers installed that claim to be W2K servers). &nbsp;At the very least, every single NAS appliance manufacturer who uses it will have their own custom system name and version number scheme.</p>
<p>So, for me there are only two possible solutions:</p>
<p>1. &nbsp;Make it work. &nbsp;The best way of doing this depends on the precise nature of the problem, but it seems clear from Raymond&#8217;s comment above that the current API is not adequate for the purposes. &nbsp;This doesn&#8217;t make it impossible to make the file listing work by switching to slow mode on receiving the error: it just makes it harder.</p>
<p>Deprecate the current API and make the current version behave identically to XP (i.e. it should use a slow query if that is what XP does); introduce a new version with a new contract that allows fast queries but requires the user to check and reissue a slow query if the fast one fails. &nbsp;Update Explorer to use this new API.</p>
<p>This is by far the best solution possible. &nbsp;Advantages: Explorer works and is fast in most cases, other new apps work and are fast in most cases, old apps continue to work if they currently do.</p>
<p>Disadvantages: Old apps don&#8217;t benefit from the speed increase. &nbsp;C&#8217;est la vie. &nbsp;Requires inclusion and maintanence of legacy code (a deprecated API). &nbsp;Windows doesn&#8217;t have a strategy for removing deprecated APIs and seems unlikely to introduce one in the foreseeable future, so this is a cost that will be ongoing indefinitely. &nbsp;It&#8217;s likely only a small cost: the old API can probably be implemented as a special case of the new API with only a few lines difference. &nbsp;What&#8217;s the cost of (e.g.) 50 lines of code? &nbsp;Not a lot, all things considered.</p>
<p>2. The other option is display an error message. &nbsp;This is Raymond&#8217;s second option, and by far the best he presents. &nbsp;It can be combined with a config option that makes either Explorer or the system degrade to slow queries, and this option can be mentioned in the text of the error message.</p>
<p>Other things that should be considered: should Explorer show some UI to indicate what has happened if option 1 is implemented? &nbsp;I think yes; perhaps something in the status bar like &quot;139 objects (using slow mode &#8211; click here for details)&quot;. &nbsp;Another alternative is logging the failure in the event log. &nbsp;My opinion is that at least one of these should be done, although I wouldn&#8217;t say it is incorrect to do neither. &nbsp;Doing nothing about the whole problem, though, or fixing it only by adding an option to work around it but being silent about its existence, *is* incorrect.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-364493">
				<div id="div-comment-364493" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">developer</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060330-31/?p=31723#comment-364493">
			April 1, 2006 at 4:53 am</a>		</div>

		<p>use try catch &amp; see the error thrown</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-364413">
				<div id="div-comment-364413" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://samba.org/~jra' rel='external nofollow' class='url'>Jeremy Allison</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060330-31/?p=31723#comment-364413">
			April 1, 2006 at 12:24 am</a>		</div>

		<p>This is a bug someone reported to us 19th feb 2006. I fixed it the same day (it was an error in my code, missing a couple of entries in a switch statement). The bug &#8211; here :</p>
<p><a rel="nofollow" target="_new" href="https://bugzilla.samba.org/show_bug.cgi?id=3526" rel="nofollow">https://bugzilla.samba.org/show_bug.cgi?id=3526</a></p>
<p>was fixed in 3.0.21c. By the time Vista ships I expect most vendors to have moved to at least this version. If the Microsoft engineers came to the CIFS conference along with all the other CIFS engineers this problem would have been found and fixed in earlier versions of Samba. I urge Microsoft&#8217;s engineers to communicate directly with the Samba Team when they find problems like this. We have good relations with all our vendors and have the ability to push expidited bugfixes to people who are shipping Samba code.</p>
<p>To quote Steve McQueen, This is simply a failure to communicate :-). Let&#8217;s hope we all do a better job in future.</p>
<p>Jeremy Allison,<br />
<br />Samba Team.</p>
<p>PS. I forgot to mention. The bug was open in our bug db for a grand total of *three* minutes before I had the fix committed into the SVN tree. I don&#8217;t think we could have reacted faster in getting a fix done than that.</p>
<p>As I said, if it&#8217;s causing a problem with Vista deployments let us know and we&#8217;ll poke our vendors with a stick to make sure the fix gets widely updated. It&#8217;s two extra lines in a switch statement so I don&#8217;t think it&#8217;s a problem for people to review it for correctness :-).</p>
<p>Jeremy Allison,<br />
<br />Samba Team. </p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-364643">
				<div id="div-comment-364643" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Steve Loughran</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060330-31/?p=31723#comment-364643">
			April 1, 2006 at 9:54 am</a>		</div>

		<p>As an aside, the Apache Axis SOAP Stack has some patches to deal with .NET 1.0&#8217;s SOAP stack which doesn&#8217;t handle all forms of XML. It went in, although its slightly more inefficient in terms of bandwidth, because the apache team knew they&#8217;d get the support calls for the interop problem. Saying &quot;.NET SOAP doesnt handle all XML&quot; may be true, but it doesnt meet customer needs of having things talk to each other. </p>
<p>Pragmatism beats ideology when it comes to network interoperability.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-364883">
				<div id="div-comment-364883" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Hayden</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060330-31/?p=31723#comment-364883">
			April 2, 2006 at 3:01 am</a>		</div>

		<p>It seems to me that yet more &quot;state&quot; is a bad idea. blcklisting buggy SMB servers won&#8217;t really scale.</p>
<p>The user needs to know that he&#8217;s not looking at the whole list, when the server fails on a &quot;fast&quot; list. All these extra error dialogs and such are just a cop-out &#8211; &quot;help, it&#8217;s gone funny, not my problem any more&quot;.<br />
<br />So:<br />
<br />1) Only Explorer uses &quot;fast&quot; mode, as it has the wit to work round it. Other programs should be (silently?) made to use slow mode.<br />
<br />2) When the &quot;weird error&quot; happens, the hourglass changes to &quot;pointer-plus-hourglass&quot; &#8211; in other words, you can select and work with any files shown, but you get the idea that things aren&#8217;t quite done yet.<br />
<br />3) Meanwhile, Explorer re-queries using slow mode. When the number of returned entries exceeds the number displayed (or there are no more entries) the Explorer view refreshes. Which would un-select any current selection, of course, but then you had the idea that things where&#8217;s quite done. This simple refresh idea removes any inconsistencies caused by the directory contents changing in between queries.</p>
<p>So, what you see is: list, pause, list refreshes bigger.<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-364823">
				<div id="div-comment-364823" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">silkio</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060330-31/?p=31723#comment-364823">
			April 1, 2006 at 7:28 pm</a>		</div>

		<p>I&#8217;d honestly be surprised if there wasn&#8217;t a better way to diagnose this problem. That&#8217;s what I&#8217;d spend time looking into to. Especially if the Samba team is happy to help, I&#8217;m sure some sort of solution can be realised so that you can do a version check and solve all the problems.</p>
<p>Clearly you can&#8217;t &quot;do nothing&quot; and the worst, but most likely, result would be to force fast mode =&#8217;s off always.</p>
<p>*shrug*</p>
<p>I do find it hard to believe you can&#8217;t work with the Samba team to figure out a way to do a version check.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-364843">
				<div id="div-comment-364843" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blogs.securiteam.com/' rel='external nofollow' class='url'>Matthew Murphy</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060330-31/?p=31723#comment-364843">
			April 1, 2006 at 9:31 pm</a>		</div>

		<p>How about&#8230;</p>
<p>1) Default &#8216;off&#8217; fast mode in Vista, perhaps with a GUI setting to turn it on.</p>
<p>2) Make fast mode have a big bold link &quot;WARNING: This may cause problems with&#8230;&quot; that leads to a KB article shaming the vendor(s) involved for their bad code.</p>
<p>3) Work with third-party vendors to get fixed code out and give the broken code some time to exit the marketplace (read: be updated or have its parent device die).</p>
<p>4) Enable fast mode by default when a higher percentage of the marketplace runs non-buggy code, perhaps in the next release.</p>
<p>5) Issue an event log entry (with a cap of once a day or so) that indicates if a buggy server is found while fast mode is on.</p>
<p>Advantages:<br />
<br /> &nbsp; &nbsp;* Vista &quot;just works&quot;.</p>
<p> &nbsp; &nbsp;* Vista is at the same speed/compat by default as XP.</p>
<p> &nbsp; &nbsp;* If the speed differential is significant, some users will complain to their buggy NAS/software vendors to force them to upgrade if it doesn&#8217;t work with the new Vista feature.</p>
<p> &nbsp; &nbsp;* Users who run into the problem will likely have an idea of the cause and be more able to fix it.</p>
<p> &nbsp; &nbsp;* Not as much of a compat hack as re-issuing the query and legitimately adds to the flexibility of the product.</p>
<p> &nbsp; &nbsp;* Allows users to adjust a setting if OTHER products have similar problems with the new feature.</p>
<p>Disadvantages:</p>
<p> &nbsp; &nbsp;* Vista doesn&#8217;t use its full speed potential.</p>
<p> &nbsp; &nbsp;* No proactive way of handling broken servers &#8212; would probably require an administrative change to restore compatibility after fast mode was turned on.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-364893">
				<div id="div-comment-364893" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">DmitryKo</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060330-31/?p=31723#comment-364893">
			April 2, 2006 at 7:25 am</a>		</div>

		<p>I find it funny how people propose that Explorer should use undidclosed API functions&#8230; weren&#8217;t suspected OS-specific &quot;ties&quot; considered a gravely bad thing and a reason for major criticisms of Microsoft products?<br />
<br />Look here <a rel="nofollow" target="_new" href="http://blogs.msdn.com/larryosterman/archive/2004/08/12/213681.aspx" rel="nofollow">http://blogs.msdn.com/larryosterman/archive/2004/08/12/213681.aspx</a> for just one single example&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-364953">
				<div id="div-comment-364953" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Morrog</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060330-31/?p=31723#comment-364953">
			April 2, 2006 at 8:54 pm</a>		</div>

		<p>It was noted that there is some sort of enumeration going on here, which prevents a total refresh of the data already sent to the querying function, so that supposedly ruled out the possiblity of switching to fast mode. But how about this.<br />
<br />If this strange error is encountered, at the 100th entry (or 101), why not switch to slow mode, query up and throw away the first 100 results, and then continue on returning results from the slow query?</p>
<p>Rough code:</p>
<p>NextItem()<br />
<br />{<br />
<br /> &nbsp; &nbsp; QueryServer();<br />
<br /> &nbsp; &nbsp; if(There Was That Weird Error)<br />
<br /> &nbsp; &nbsp; {<br />
<br /> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;Disconnect();<br />
<br /> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;Reconnect();<br />
<br /> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;StartSlowQuery();<br />
<br /> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;for(i = 0; i &lt; results_so_far; i++)<br />
<br /> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; QueryServer();<br />
<br /> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;QueryServer();<br />
<br /> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;return Result;<br />
<br /> &nbsp; &nbsp; }<br />
<br /> &nbsp; &nbsp; else<br />
<br /> &nbsp; &nbsp; {<br />
<br /> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;return Result;<br />
<br /> &nbsp; &nbsp; }<br />
<br />}</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-365013">
				<div id="div-comment-365013" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.cse.iitb.ac.in/~kart' rel='external nofollow' class='url'>Kartik Vaddadi</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060330-31/?p=31723#comment-365013">
			April 3, 2006 at 6:53 am</a>		</div>

		<p>Sorry, I haven&#8217;t read all the comments.</p>
<p>Firstly, did you discuss it with the Samba guys? If it was a misunderstanding of the protocol arising from lack of documentation, I think Windows should work properly with Samba.</p>
<p>But if the Samba guys agree it&#8217;s a bug in their server, I&#8217;m strongly in favor of Do Nothing (or, if that&#8217;s not acceptable, Put up a dialog). Windows should not accumulate (even more) cruft to compensate for bugs in third-party apps.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-365103">
				<div id="div-comment-365103" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">ms speciality</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060330-31/?p=31723#comment-365103">
			April 3, 2006 at 9:27 am</a>		</div>

		<p>Do what M$ is best at: Sue &#8217;em!</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-365233">
				<div id="div-comment-365233" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://jeffsolomon.com/blog' rel='external nofollow' class='url'>Jeff</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060330-31/?p=31723#comment-365233">
			April 3, 2006 at 12:05 pm</a>		</div>

		<p>Disable fast mode by default. &nbsp;Inform the vendor that this is the default setting in Windows and that fast mode can and should be enabled by the vendor&#8217;s software installer when a newer (and functional) version of the driver is installed.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-365553">
				<div id="div-comment-365553" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Sjoerd Verweij</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060330-31/?p=31723#comment-365553">
			April 3, 2006 at 2:28 pm</a>		</div>

		<p>Slow mode is default.</p>
<p>Network driver detects server version. (If there is no way to do this, add it to server code, and e-mail the Samba people how to do it as well).</p>
<p>If server version is bad (this should be in Explorer of course, because here&#8217;s where we go into kludge territory), add to &quot;Bad server&quot; list (keep 256 or so) so you don&#8217;t have to repeat your inquiries, warn the user (once): &quot;Retrieving file listings is not as fast as it could be. Please upgrade the server you are connecting to or contact your administrator&quot; &#8212; but only in business versions; this is exactly the kind of message that could freak a home user out, log in the event log (ALWAYS) and stay in slow mode.</p>
<p>If server version is good, add to &quot;Good server&quot; list (keep 256 or so) so you don&#8217;t have to repeat your inquiries and kick to fast mode.</p>
<p>Advantages:</p>
<p>&#8211; Transparent to user<br />
<br />&#8211; Never any missing files<br />
<br />&#8211; No problem if a server </p>
<p>Disadvantages:</p>
<p>&#8211; Slight perf hit for the detection.<br />
<br />&#8211; If there is no way to detect the server version, all will be slow until the newer, blessed versions of servers roll out.<br />
<br />&#8211; Clients stay in slow mode even with a server upgrade (although you can work around that by making the Bad Server list entries time out every month or so).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-365563">
				<div id="div-comment-365563" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Sjoerd Verweij</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060330-31/?p=31723#comment-365563">
			April 3, 2006 at 2:29 pm</a>		</div>

		<ul>
<li>No problem if a server falls out of the cache. It will be redetected and added to the good or bad list.<br />
</li>
</ul>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-366403">
				<div id="div-comment-366403" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">MajorGlory</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060330-31/?p=31723#comment-366403">
			April 5, 2006 at 4:26 am</a>		</div>

		<p>Keeping things transparent to the user is all well and good, but if you mask the issue on then how will the administrators know to perform the upgrade unless they happen to read the client event logs?</p>
<p>The user needs to know about the issue. &nbsp;Raise a warning which says contact your admin and links to a KB article. &nbsp;Use some sort of reg key to configure it and have an option to set this via group policy for the rest of the clients on the network.</p>
<p>Then I&#8217;d follow this advice:</p>
<p>Sunday, April 02, 2006 8:54 PM by Morrog<br />
<br />It was noted that there is some sort of enumeration going on here, which prevents a total refresh of the data already sent to the querying function, so that supposedly ruled out the possiblity of switching to fast mode. But how about this.<br />
<br />If this strange error is encountered, at the 100th entry (or 101), why not switch to slow mode, query up and throw away the first 100 results, and then continue on returning results from the slow query? </p>
<p>Rough code: </p>
<p>NextItem()<br />
<br />{<br />
<br /> &nbsp; &nbsp;QueryServer();<br />
<br /> &nbsp; &nbsp;if(There Was That Weird Error)<br />
<br /> &nbsp; &nbsp;{<br />
<br /> &nbsp; &nbsp; &nbsp; &nbsp; Disconnect();<br />
<br /> &nbsp; &nbsp; &nbsp; &nbsp; Reconnect();<br />
<br /> &nbsp; &nbsp; &nbsp; &nbsp; StartSlowQuery();<br />
<br /> &nbsp; &nbsp; &nbsp; &nbsp; for(i = 0; i &lt; results_so_far; i++)<br />
<br /> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;QueryServer();<br />
<br /> &nbsp; &nbsp; &nbsp; &nbsp; QueryServer();<br />
<br /> &nbsp; &nbsp; &nbsp; &nbsp; return Result;<br />
<br /> &nbsp; &nbsp;}<br />
<br /> &nbsp; &nbsp;else<br />
<br /> &nbsp; &nbsp;{<br />
<br /> &nbsp; &nbsp; &nbsp; &nbsp; return Result;<br />
<br /> &nbsp; &nbsp;}<br />
<br />}<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-366443">
				<div id="div-comment-366443" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blogs.msdn.com/oldnewthing/archive/2006/04/05/568944.aspx' rel='external nofollow' class='url'>The Old New Thing</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060330-31/?p=31723#comment-366443">
			April 5, 2006 at 10:00 am</a>		</div>

		<p>How many flags do you want?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-366773">
				<div id="div-comment-366773" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Norman Diamond</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060330-31/?p=31723#comment-366773">
			April 6, 2006 at 4:28 am</a>		</div>

		<p>The base note lacks some important information, but I gather from several replies that APIs such as FindNextFile are affected as well as user-visible applications such as Windows Explorer. &nbsp;When the API sees that an error occured, I agree with several replies that the API must inform the caller that the error occured AND the API must log the event.</p>
<p>If Windows Explorer gets an error return from the API in retrieving information that it is supposed to display, then Windows Explorer should display a message box to inform the user instead of displaying incorrect results. &nbsp;(More on this later.) &nbsp;If other applications get an error return from the API, their coders can decide what to do, such as getting the error text from the system and displaying the error text, or deciding how they want to do a retry.</p>
<p>It should be moderately easy for the user to configure what to do.</p>
<p>I agree with another poster that the fallback from DMA/UDMA to PIO is a partial precedent. &nbsp;The obstacles that users encounter in discovering that they&#8217;re suddenly running PIO, and finding why, and finding how to undo it, are not good precedents. &nbsp;Good logging is needed.</p>
<p>I agree with another poster that the choice of turning write caching on or off is another precedent.</p>
<p>A third precedent would be digital audio from CD-ROM drives. &nbsp;By default it&#8217;s off, the user can turn it on, and the user can turn it back off if it doesn&#8217;t work.</p>
<p>A fourth precedent would be the control panel applet that lets users set and store some usernames and passwords for access to various network servers.</p>
<p>I think that in principle the above precedents do not limit the system to remembering 16 most recently used devices or servers. &nbsp;If the insufficiently described problem in this case is Samba, then a limit of 16 will likely be too small. &nbsp;There should not be a limit.</p>
<p>Now which should be the default, fast queries or slow queries, I cannot really say. &nbsp;The above precedents include good precedents for both possible decisions about the default.</p>
<p>Now, here are some precedents which should not be copied.</p>
<p>In the command-line version of FTP, if an mget command is used, it stops after retrieving 511 files. &nbsp;Suppose the server&#8217;s directory had 520 files including some starting with a capital Z and suppose the server&#8217;s sort ordering puts capital Z in the middle of the list. &nbsp;The user will look at the result, see Z-filenames at the bottom, and will not notice that some of the lower-case z-filenames and y-filenames weren&#8217;t copied because they came after the 511 point. &nbsp;If the FTP command would display a warning (copying stopped after 511 files) then the user would know to look for the missing files and do a retry, but no, who wants to let command line users have an easy time of it. &nbsp;Windows Explorer should not copy this precedent. &nbsp;When it can&#8217;t retrieve the entire list, it should tell the user.</p>
<p>If Windows Explorer can&#8217;t expand a folder in the tree view in the left-hand pane, it simply deletes the &quot;[+]&quot; box and doesn&#8217;t display an error message. &nbsp;The user doesn&#8217;t guess that they needed to input a user name and password in order to view the network resource. &nbsp;This precedent should not be copied. &nbsp;When Windows Explorer can&#8217;t display the contents, it should tell the user.</p>
<p>In Windows XP prior to SP2, and Windows Server 2003 prior to SP1, if the user connected or disconnected a USB hard drive or DVD drive then sometimes Windows Explorer did not update its display of drive letters. &nbsp;This precedent should not be copied. &nbsp;In a few cases (not enough) Windows Explorer overlays the drive&#8217;s icon with a red question mark or something like that. &nbsp;When a drive letter is in use, Windows Explorer should show the drive letter, and if Windows Explorer has encountered a problem with that drive letter then it should show the fact.</p>
<p>When Virtual PC 2004 is installed, with Windows XP SP2 installed on both the host and the guests, and a directory on the host is shared on a guest using VM Additions, Windows Explorer on the guest often gets a corrupted view of the share. &nbsp;Sometimes the corruption has resulted in virtual BSODs in a guest but usually it&#8217;s invisibility of some files or corruption in their contents. &nbsp;Either Samba is not involved or Virtual PC 2004 uses Samba. &nbsp;Either way this precedent should not be copied.</p>
<p>The reason why users would tend to blame Vista for bugs is that we&#8217;ve seen enough cases where other Windows versions (up to and including XP SP2, 2003 SP1, XP x64 SP1, and Vista betas) have lost files due to their bugs. &nbsp;Part of the way to stop users from blaming Vista for bugs which Microsoft knows to be non-Microsoft bugs is for Vista to log the errors when they occur, and the source of the error. &nbsp;For example maybe &quot;Files could not be listed properly because \someserversomepartition returned invalid error code 993.&quot; &nbsp;Another part of the way is for Windows Explorer to display the error so that the user who was expecting to look at a list of files will know not to believe the list, instead of getting a rude surprise months later.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-367053">
				<div id="div-comment-367053" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">luser</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060330-31/?p=31723#comment-367053">
			April 6, 2006 at 1:42 pm</a>		</div>

		<p>Users don&#8217;t read errormessages, that has been proven time after time. If the directory contents is wrong, ms will be blamed.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-367383">
				<div id="div-comment-367383" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Norman Diamond</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060330-31/?p=31723#comment-367383">
			April 6, 2006 at 11:44 pm</a>		</div>

		<p>Thursday, April 06, 2006 1:42 PM by luser<br />
<br />&gt; Users don&#8217;t read errormessages, that has<br />
<br />&gt; been proven time after time.</p>
<p>True. &nbsp;But presenting an incorrect list without an error message is unconscionable. &nbsp;Present an error message that 99% of users won&#8217;t read. &nbsp;If the error message is short and to the point (&quot;Files could not be listed properly because \someserversomepartition returned invalid error code 993.&quot;) then you&#8217;ve done your job.</p>
<p>Of course if the error message is 18 pages of gobbledegook then you haven&#8217;t done your job. &nbsp;If you don&#8217;t say &quot;files could not be listed&quot; then you&#8217;re actively deceiving your user when you present a fake list.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-367413">
				<div id="div-comment-367413" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.dematte.org' rel='external nofollow' class='url'>Lorenzo</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060330-31/?p=31723#comment-367413">
			April 7, 2006 at 2:55 am</a>		</div>

		<p>I&#8217;d go for a solution like Auto-detect the buggy driver and work around it next time, but in not &quot;next time&quot;. An error code is returnedafter fast? 1) (Optional: make user aware, expecially if this procedure can lead to time waiting, with a &quot;do not display again&quot; checkbox) 2) REDO the query in slow mode. Do this every time, no registry, nothing. It will eventually force admins reconsider upgrading samba, it will work, it will not poison registry, works like XP and Vista uses the new features</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-368073">
				<div id="div-comment-368073" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Irimi</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060330-31/?p=31723#comment-368073">
			April 9, 2006 at 11:59 pm</a>		</div>

		<p>Have explorer use fast mode, if fast mode fails for some &quot;unusual&quot; reason, then have it try slow mode.</p>
<p>Advantages:</p>
<p>* it will work. Drivers/versions that aren&#8217;t buggy will still work in fast mode.</p>
<p>Disadvantages:</p>
<p>* queries on buggy drivers will take a little longer due to the failed fast mode attempt.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-368183">
				<div id="div-comment-368183" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blogs.msdn.com/oldnewthing/archive/2006/04/10/572491.aspx' rel='external nofollow' class='url'>The Old New Thing : Be very careful if you decide to change the rules after the game has ended</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060330-31/?p=31723#comment-368183">
			April 10, 2006 at 10:00 am</a>		</div>

		<p>PingBack from <a rel="nofollow" target="_new" href="http://blogs.msdn.com/oldnewthing/archive/2006/04/10/572491.aspx" rel="nofollow">http://blogs.msdn.com/oldnewthing/archive/2006/04/10/572491.aspx</a></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-368863">
				<div id="div-comment-368863" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ian Boyd</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060330-31/?p=31723#comment-368863">
			April 11, 2006 at 4:57 pm</a>		</div>

		<p>&gt; Have a configuration setting to put the network client into &quot;slow mode&quot;</p>
<p>It&#8217;s not a bug with Windows, it&#8217;s not a bug with most file servers, and it&#8217;s not a bug with fast mode. It&#8217;s a bug with *some* file servers that lie about what they can do.</p>
<p>If the error happens to pop up, then they user will get an error message. They google the error, find the KB article, add the registry key to disable fast mode everywhere, and all is well.</p>
<p>Otherwise, they get to *SEE* that a device they have purchased is behavingly badly, and get to bitch out the real culprit, demanding updates, or sulking &#8211; all while having a temporary workaround.</p>
<p>At best they see their Linux box needs to be updated because it&#8217;s buggy, at worst they know that the device they bought is buggy and they&#8217;ll know it&#8217;s inferior and want to get rid of it. </p>
<p>Either way, i would rather Windows didn&#8217;t keep working around everything else. Go ahead, break it. If you hide it, i don&#8217;t get to know if my stuff is broken. If you work around it, things get slower. i don&#8217;t want things slower, i want them faster.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-371303">
				<div id="div-comment-371303" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blogs.msdn.com/oldnewthing/archive/2006/04/19/578991.aspx' rel='external nofollow' class='url'>The Old New Thing : Adding a new flag to enable behavior that previously was on by default</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060330-31/?p=31723#comment-371303">
			April 19, 2006 at 10:00 am</a>		</div>

		<p>PingBack from <a rel="nofollow" target="_new" href="http://blogs.msdn.com/oldnewthing/archive/2006/04/19/578991.aspx" rel="nofollow">http://blogs.msdn.com/oldnewthing/archive/2006/04/19/578991.aspx</a></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-391573">
				<div id="div-comment-391573" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://methylblue.com/blog/?p=30' rel='external nofollow' class='url'>The Future Comes Second &raquo; Blog Archive &raquo; Windows Just Works</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060330-31/?p=31723#comment-391573">
			June 14, 2006 at 12:42 pm</a>		</div>

		<p>PingBack from <a rel="nofollow" target="_new" href="http://methylblue.com/blog/?p=30" rel="nofollow">http://methylblue.com/blog/?p=30</a></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-467023">
				<div id="div-comment-467023" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blogs.msdn.com/oldnewthing/archive/2007/02/01/1573160.aspx' rel='external nofollow' class='url'>The Old New Thing</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060330-31/?p=31723#comment-467023">
			February 1, 2007 at 10:00 am</a>		</div>

		<p>Too many incompatible devices.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-467213">
				<div id="div-comment-467213" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://gabrielstein.org/?p=67' rel='external nofollow' class='url'>Steady Ocean of Good Things &raquo; Interoperabilidade - Ainda ?? poss??vel?</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060330-31/?p=31723#comment-467213">
			February 1, 2007 at 12:38 pm</a>		</div>

		<p>PingBack from <a rel="nofollow" target="_new" href="http://gabrielstein.org/?p=67" rel="nofollow">http://gabrielstein.org/?p=67</a></p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>