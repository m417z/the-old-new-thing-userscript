<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (54)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-382843">
				<div id="div-comment-382843" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">BryanK</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060522-08/?p=31113#comment-382843">
			May 22, 2006 at 10:25 am</a>		</div>

		<p>It&#8217;s also fairly hard to match a date (in any of the valid ways of creating it &#8212; Mm/Dd, Mm/Dd/YY, Mm/Dd/YYYY, Mm-Dd, Mm-Dd-YY, Mm-Dd-YYYY, and don&#8217;t get me started on the Dd/Mm variants &#8212; oh, and my &quot;syntax&quot; here is that uppercase letters are required, and lowercase are not) in a single regex.</p>
<p>I had a set of web pages with a client-side validation framework set up using regexes (they worked well for everything else). &nbsp;Then I had to figure out how to validate a date (and also to ensure it didn&#8217;t fall on a weekend!); I quickly decided that I needed to extend the validation framework. &nbsp;(The validation was repeated on the server end, because clients may not have JS enabled. &nbsp;But for the ones that did, the client-side validation provided faster feedback.)</p>
<p>(The framework basically consisted of setting up a JS object whose top-level properties were IDs of textboxes. &nbsp;The values of these properties were each JS objects in turn, with &quot;regex&quot;, &quot;message&quot;, and &quot;uppercase&quot; properties (&quot;regex&quot; was the regex to match against, &quot;message&quot; was the message to display if the validation failed, and &quot;uppercase&quot; was whether to convert to uppercase before doing the validation). &nbsp;Basically I added a &quot;func&quot; property to these objects, that took a function to call with the field being validated; the function could do anything. &nbsp;If it returned true, the validation succeeded, otherwise it failed. &nbsp;The function gets called if the &quot;regex&quot; property is undefined.)</p>
<p>Anyway, yes, regexes are not a panacea. &nbsp;They are often helpful, though.</p>
<p>(I&#8217;ve seen that page-long regex for matching a valid RFC822 email address somewhere. &nbsp;Let&#8217;s see if I can find it&#8230; &nbsp;Ah yes, here: <a rel="nofollow" target="_new" href="http://ex-parrot.com/~pdw/Mail-RFC822-Address.html" rel="nofollow">http://ex-parrot.com/~pdw/Mail-RFC822-Address.html</a> &#8212; I had no idea that email addresses could contain comments!)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-382863">
				<div id="div-comment-382863" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">JimB</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060522-08/?p=31113#comment-382863">
			May 22, 2006 at 10:49 am</a>		</div>

		<p>&quot;Don&#8217;t make operating systems do what they&#8217;re not good at&#8230;&quot;<br />
<br />&quot;Don&#8217;t make vehicles do what they&#8217;re not good at&#8230;&quot;</p>
<p>Nice philososphy, but erroneous. &nbsp;One has to weigh the benefit of using one tool against the issues when that tool is not the best one for the job. &nbsp;I won&#8217;t argue the specific example here, but the general case is severely flawed. </p>
<p>If my company operated this way, we&#8217;d have our applications written in a half dozen or dozen languages, running on a half dozen platforms in a half dozen locations. &nbsp; &nbsp;</p>
<p>The better rule is:</p>
<p>One must sometimes sub-optimize parts of the item in order to optimize the item as a whole.</p>
<p>Jim</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-382873">
				<div id="div-comment-382873" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Richie Hindle</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060522-08/?p=31113#comment-382873">
			May 22, 2006 at 11:25 am</a>		</div>

		<p>Time for a hackneyed quotation:</p>
<p>&quot;Some people, when confronted with a problem, think &quot;I know, I&#8217;ll use regular expressions.&quot; Now they have two problems.&quot; &nbsp;&#8212; Jamie Zawinski<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-382883">
				<div id="div-comment-382883" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://q.queso.com/' rel='external nofollow' class='url'>Jason</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060522-08/?p=31113#comment-382883">
			May 22, 2006 at 11:46 am</a>		</div>

		<p>Richie, can you find a single original instance of Zawinski saying that? &nbsp;It&#8217;s something that&#8217;s very commonly attributed to him, but from a post in a nonexistent newsgroup (comp.lang.emacs, which doesn&#8217;t and hasn&#8217;t ever existed). &nbsp;I only ask because this is one of those things that I have now seen enough to start wondering where it got legs &#8212; if it&#8217;s really a JWZ posting from the past, or whether it&#8217;s just apocryphal.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-382903">
				<div id="div-comment-382903" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Nekto2</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060522-08/?p=31113#comment-382903">
			May 22, 2006 at 11:57 am</a>		</div>

		<p><a rel="nofollow" target="_new" href="http://regexlib.com/Search.aspx?k=e-mail" rel="nofollow">http://regexlib.com/Search.aspx?k=e-mail</a><br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-382913">
				<div id="div-comment-382913" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.colinneller.com/blog/PermaLink,guid,7acc7886-9e5d-4f43-b5ec-d8bfb03be2b0.aspx' rel='external nofollow' class='url'>Colin Neller</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060522-08/?p=31113#comment-382913">
			May 22, 2006 at 12:36 pm</a>		</div>

		
		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-382923">
				<div id="div-comment-382923" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Sits</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060522-08/?p=31113#comment-382923">
			May 22, 2006 at 12:44 pm</a>		</div>

		<p>Jason:</p>
<p>(I originally had a long reply here but a tab was accidently closed). Yes JWZ said it but google groups no longer carries the post (it did but there was a reshuffle and it disappeared. I&#8217;ve mailed Google and they can&#8217;t find it either and suggested perhaps someone asked for it to be deleted) and I have been unable to find the post in context since on the interweb.</p>
<p>However when digging again I turned up this post which if the date was right would predate jwz&#8217;s:</p>
<p>&quot;When faced with a problem, some people say &#8216;Let&#8217;s use AWK.&#8217; &nbsp;Now they have two problems.&quot;<br />
<br /> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&#8211; Zalman Stern </p>
<p><a rel="nofollow" target="_new" href="http://groups.google.com/group/alt.quotations/browse_thread/thread/a008433940861d4e/dcee3d3682dd0470?lnk=st+stern&amp;rnum=2&amp;hl=en#dcee3d3682dd0470" rel="nofollow">http://groups.google.com/group/alt.quotations/browse_thread/thread/a008433940861d4e/dcee3d3682dd0470?lnk=st+stern&#038;rnum=2&#038;hl=en#dcee3d3682dd0470</a></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-382933">
				<div id="div-comment-382933" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Irate Lout</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060522-08/?p=31113#comment-382933">
			May 22, 2006 at 12:44 pm</a>		</div>

		<p>Raymond, does anybody know why or how CAtlRegExp came to have such bizarrely incompatible syntax? And why some assclown^Warguably misguided individual decided to use that syntax in the DevStudio 2003 IDE? That&#8217;s the only thing I really hate about that IDE. Well, that and the fact that if you copy text from MSDN and paste it into a .js file, the IDE pastes the HTML formatted text from the clipboard rather than the plain text (e.g. I just copied &quot;ownerDocument&quot; from the help file that SHIPS WITH THE IDE, and it pasted &#8216;&lt;A href=&quot;xmproownerdocument.htm&quot;&gt;ownerDocument&lt;/A&gt;&#8217;). &nbsp;But never mind that.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-382943">
				<div id="div-comment-382943" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Carlos</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060522-08/?p=31113#comment-382943">
			May 22, 2006 at 12:58 pm</a>		</div>

		<p>Re the jwz quote; it appears on his website:<br />
<br /><a rel="nofollow" target="_new" href="http://www.jwz.org/hacks/marginal.html" rel="nofollow">http://www.jwz.org/hacks/marginal.html</a></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-382953">
				<div id="div-comment-382953" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://keyj.s2000.ws/' rel='external nofollow' class='url'>KeyJ</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060522-08/?p=31113#comment-382953">
			May 22, 2006 at 1:03 pm</a>		</div>

		<p>To my knowledge, the shortest (and arguably fastest) way to check an IPv4 numerical address is parsing it with inet_aton() and check the return value. Or do I miss something?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-382963">
				<div id="div-comment-382963" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">mikeb</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060522-08/?p=31113#comment-382963">
			May 22, 2006 at 1:22 pm</a>		</div>

		<p>The &quot;two problems&quot; quotation can be found (refering to sed instead of regular expressions) in &quot;The Unix Hater&#8217;s Handbook&quot; which was published in 1994:</p>
<p><a rel="nofollow" target="_new" href="http://research.microsoft.com/~daniel/uhh-download.html" rel="nofollow">http://research.microsoft.com/~daniel/uhh-download.html</a></p>
<p>In it the author (Daniel Weise?) does not claim to have come up with the saying &#8211; instead the book indicates that he &#8216;should have rememberd that profound truism&#8217;. &nbsp;I bet it was kicking around for a while before &#8217;93.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-382973">
				<div id="div-comment-382973" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.accidentalscientist.com' rel='external nofollow' class='url'>Simon Cooke</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060522-08/?p=31113#comment-382973">
			May 22, 2006 at 1:22 pm</a>		</div>

		<p>KevJ &#8211; inet_aton() appears to be unix-only.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-oldnewthing bypostauthor even thread-even depth-1" id="comment-382983">
				<div id="div-comment-382983" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Raymond+Chen+-+MSFT' rel='external nofollow' class='url'>Raymond Chen - MSFT</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060522-08/?p=31113#comment-382983">
			May 22, 2006 at 1:24 pm</a>		</div>

		<p>KeyJ: That works great if your language/framework lets you call inet_aton in the first place. Also, this question is often asked in the larger context of &quot;I have a string and I want to extract any IP addresses from it.&quot; In this case, inet_aton isn&#8217;t much help.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-maurits odd alt thread-odd thread-alt depth-1" id="comment-382993">
				<div id="div-comment-382993" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Maurits+%5BMSFT%5D' rel='external nofollow' class='url'>Maurits [MSFT]</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060522-08/?p=31113#comment-382993">
			May 22, 2006 at 1:28 pm</a>		</div>

		<p>Sweet :)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-383003">
				<div id="div-comment-383003" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.darklock.com/blog/' rel='external nofollow' class='url'>Caliban Darklock</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060522-08/?p=31113#comment-383003">
			May 22, 2006 at 1:57 pm</a>		</div>

		<blockquote><p>
  when digging again I turned up this post </p>
<p>This saying apparently predates computers. </p>
<p>My grandfather likes to say that when people have a problem, they always go get a hammer, and soon they have two problems. </p>
<p>My mother tells me he&#8217;s said this since the fifties, and I&#8217;ll bet he heard it sometime before that. He&#8217;s a plumber and steelworker. Never touched a computer in his life. He can barely read.</p>
<p>So I can imagine one Cro-Magnon man saying to another, &quot;most neanderthals have a problem and grab a rock, but then they have two problems.&quot; </p>
<p>Because sometimes you need a stick, too.<br />
  
</p></blockquote>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-maurits odd alt thread-odd thread-alt depth-1" id="comment-383013">
				<div id="div-comment-383013" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Maurits+%5BMSFT%5D' rel='external nofollow' class='url'>Maurits [MSFT]</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060522-08/?p=31113#comment-383013">
			May 22, 2006 at 1:58 pm</a>		</div>

		<p>Followed &quot;d matches any decimal digit&quot; link&#8230;<br />
<br />Followed &quot;More examples&quot; link&#8230;<br />
<br /><a rel="nofollow" target="_new" href="http://samples.gotdotnet.com/quickstart/howto/doc/regexcommon.aspx" rel="nofollow">http://samples.gotdotnet.com/quickstart/howto/doc/regexcommon.aspx</a></p>
<p>Ugh, some of those are horrible.</p>
<p>The left side of an email address commonly contains many more characters than just w or &#8211;<br />
<br />Some examples that I have seen: . &amp; + &#8216;</p>
<p>Credit cards can have as few as 12 digits (American Express cards frequently do.)</p>
<p>I&#8217;m not even going to comment on the Internet URL one. &nbsp;I&#8217;ll just point out it doesn&#8217;t match <a rel="nofollow" target="_new" href="http://microsoft.com/" rel="nofollow">http://microsoft.com/</a></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-383023">
				<div id="div-comment-383023" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://jonahedwards.com' rel='external nofollow' class='url'>j.edwards</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060522-08/?p=31113#comment-383023">
			May 22, 2006 at 2:20 pm</a>		</div>

		<p>Rather humorously, in Google&#8217;s just-released &lt;a href=&quot;<a rel="nofollow" target="_new" href="http://www.google.com/coop&quot;&gt;Co-op&lt;/a&gt;" rel="nofollow"></a><a href="http://www.google.com/coop&quot;&gt;Co-op&lt;/a&#038;gt" rel="nofollow">http://www.google.com/coop&quot;&gt;Co-op&lt;/a&#038;gt</a>; they have an example &lt;a href=&quot;<a rel="nofollow" target="_new" href="http://www.google.com/coop/docs/guide_subscribed_links.html#special&quot;&gt;of" rel="nofollow">http://www.google.com/coop/docs/guide_subscribed_links.html#special&quot;&gt;of</a> matching an IP with a regex&lt;/a&gt; and they use &quot;(\d{1,3})&#46;(\d{1,3})&#46;(\d{1,3})&#46;(\d{1,3})&quot;.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-383033">
				<div id="div-comment-383033" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Cooney</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060522-08/?p=31113#comment-383033">
			May 22, 2006 at 2:32 pm</a>		</div>

		<p>Ick, Ick, Ick</p>
<p>1. you can&#8217;t capture an email address in a regexp. At most, you can exclude invalid addresses.</p>
<p>2. yeah, and amex splits its numbers up oddly. also, some people don&#8217;t add dashes, so ignoring spaces and dashes would allow for a fairly simple regexp.</p>
<p>3. yeah, the internet URL thing is atrocious &#8211; what, all http addresses start with www?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-383053">
				<div id="div-comment-383053" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Cooney</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060522-08/?p=31113#comment-383053">
			May 22, 2006 at 2:34 pm</a>		</div>

		<p>&quot;(\d{1,3})&#46;(\d{1,3})&#46;(\d{1,3})&#46;(\d{1,3})&quot; works fine if you post process with a range check and possibly some sanity checking (like making sure that it isn&#8217;t a network address or a broadcast address).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-383063">
				<div id="div-comment-383063" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://apipes.blogspot.com' rel='external nofollow' class='url'>Tim Lesher</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060522-08/?p=31113#comment-383063">
			May 22, 2006 at 2:46 pm</a>		</div>

		<p>Cooney, I think that&#8217;s what Raymond meant by &quot;&#8230;just use a hammer and a screwdriver&quot;: use the regex to mask the dotted fields, then use range-checking to test the fields themselves.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-383073">
				<div id="div-comment-383073" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://mailto://blogcomments@biel.us' rel='external nofollow' class='url'>kbiel</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060522-08/?p=31113#comment-383073">
			May 22, 2006 at 3:15 pm</a>		</div>

		<p>There is no math to be done and dotted-decimal IPs are simple patterns.</p>
<p>Assuming that you are passing in a string that has one IP address per line:</p>
<p>((^|.)(2[0-5]{2}|[01][0-9]{2}|[0-9]{1,2})(?=.|$)){4}</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-383083">
				<div id="div-comment-383083" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">foxyshadis</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060522-08/?p=31113#comment-383083">
			May 22, 2006 at 3:32 pm</a>		</div>

		<p>Perl 6 has been brewing since early 2001, though, and doesn&#8217;t show any signs of nearing completion soon. Nor does PCRE seem to be including Perl 6 regexes. Maybe it just doesn&#8217;t have enough appeal to people. Sad, it seemed like a great improvement when I checked it out a while back.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-383093">
				<div id="div-comment-383093" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">schwiet</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060522-08/?p=31113#comment-383093">
			May 22, 2006 at 3:34 pm</a>		</div>

		<p>IPv4 addresses don&#8217;t necessarily have periods in them.</p>
<p>For instance, you can use <a rel="nofollow" target="_new" href="http://2637578507 in" rel="nofollow"></a><a href="http://2637578507" rel="nofollow">http://2637578507</a> in IE just as well as <a rel="nofollow" target="_new" href="http://157.54.65.11" rel="nofollow">http://157.54.65.11</a>.</p>
<p>In win32, you can use gethostbyname with NI_NUMERICHOST to determine if a string can be interpreted as an IP address.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-383103">
				<div id="div-comment-383103" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Cooney</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060522-08/?p=31113#comment-383103">
			May 22, 2006 at 4:32 pm</a>		</div>

		<blockquote><p>
  For instance, you can use <a rel="nofollow" target="_new" href="http://2637578507 in" rel="nofollow"></a><a href="http://2637578507" rel="nofollow">http://2637578507</a> in IE just as well as <a rel="nofollow" target="_new" href="http://157.54.65.11" rel="nofollow">http://157.54.65.11</a>. </p>
<p>Is this part of the standard or just IE weirdness? The only place I&#8217;ve ever heard of this is in relation to IE, and it usually has &#8216;exploit&#8217; somewhere in the sentence.
</p></blockquote>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-oldnewthing bypostauthor even thread-even depth-1" id="comment-383123">
				<div id="div-comment-383123" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Raymond+Chen+-+MSFT' rel='external nofollow' class='url'>Raymond Chen - MSFT</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060522-08/?p=31113#comment-383123">
			May 22, 2006 at 5:19 pm</a>		</div>

		<p>It&#8217;s not IE weirdness. Linux works the same way:</p>
<p>$ ping -c 1 2130706433<br />
<br />PING 2130706433 (127.0.0.1): 56 data bytes<br />
<br />64 bytes from 127.0.0.1: icmp_seq=0 ttl=64 time=0.8 ms</p>
<p>$ lynx <a rel="nofollow" target="_new" href="http://2130706433" rel="nofollow">http://2130706433</a><br />
<br />(web page appears)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-383133">
				<div id="div-comment-383133" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Dean Earley</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060522-08/?p=31113#comment-383133">
			May 22, 2006 at 6:10 pm</a>		</div>

		<p>To Cooney:</p>
<p>1) Theres only two addresses you can filter out (without local knowledge) as network and broadcast addresses, 0.0.0.0 and 255.255.255.255. Everything else is perfectly valid (despite MS assuming that everything ending in .255 MUST be a broadcast address)</p>
<p>1) See the MSDN page on inet_addr()<br />
<br />The unix man page doesn&#8217;t mention the allowed formats but does say it is deprecated.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-383143">
				<div id="div-comment-383143" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">bmm6o</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060522-08/?p=31113#comment-383143">
			May 22, 2006 at 7:10 pm</a>		</div>

		<p>kbiel: that doesn&#8217;t match 249.249.249.249, does it?</p>
<p>A similar problem comes up in practice when using the Google Analytics. &nbsp;I had to help a coworker write a regex that matched on our assigned IP addresses (to differentiate public traffic from internal traffic).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-maurits odd alt thread-odd thread-alt depth-1" id="comment-383163">
				<div id="div-comment-383163" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Maurits+%5BMSFT%5D' rel='external nofollow' class='url'>Maurits [MSFT]</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060522-08/?p=31113#comment-383163">
			May 22, 2006 at 7:48 pm</a>		</div>

		<p>kbiel&#8217;s regex is fixable&#8230; for example,<br />
<br />^((^|.)(25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])){4}$</p>
<p>is a variant that solves the ^-anchoring issue.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-383173">
				<div id="div-comment-383173" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Cooney</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060522-08/?p=31113#comment-383173">
			May 22, 2006 at 8:13 pm</a>		</div>

		<p>Dean:</p>
<p>Theres only two addresses you can filter out (without local knowledge) as network and broadcast addresses, 0.0.0.0 and 255.255.255.255.</p>
<p>Actually, it&#8217;s more complicated than that &#8211; 0.x.x.x is not a valid inet address, except for 0.0.0.0, which means &#8216;I don&#8217;t know my name&#8217;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-dean-harding odd alt thread-odd thread-alt depth-1" id="comment-383183">
				<div id="div-comment-383183" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Dean+Harding' rel='external nofollow' class='url'>Dean Harding</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060522-08/?p=31113#comment-383183">
			May 22, 2006 at 8:20 pm</a>		</div>

		<p>Maurits: That still matches &quot;.1.1.1.1&quot; for me.</p>
<p>Besides, my point wasn&#8217;t that it&#8217;s unfixable, my point is that it is still not a &quot;simple&quot; pattern.</p>
<p>I think that &quot;d{1,3}.d{1,3}.d{1,3}.d{1,3}&quot; is going to be &quot;good enough&quot; because I don&#8217;t think you should be trying to get a regex to do all of your validation anyway &#8211; it should do just enough that you can be sure the &quot;common&quot; errors are taken care of quickly.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-383043">
				<div id="div-comment-383043" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Gabe</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060522-08/?p=31113#comment-383043">
			May 22, 2006 at 2:32 pm</a>		</div>

		<p>I&#8217;m surprised that nobody has chimed in with specific quantifiers:</p>
<p>/^0*([1-9]?d|1dd|2[0-4]d|25[0-5])(.0*([1-9]?d|1dd|2[0-4]d|25[0-5])){3}$/</p>
<p>One of the biggest problems with regexes is that they are inadequate for most parsing tasks, so for quite a while now they have stopped describing only regular languages (those that can be decided with finite state automata). They are creeping slowly towards more advanced grammars (things like backreferences are not possible in regular languages).</p>
<p>Perl 6 is solving this by replacing the &quot;regular&quot; expression engine with one that can describe push-down automata and can have code embedded in it (sort of like a YACC grammar). This means that you could write the parser more like this:</p>
<p>rule quad { &nbsp;(d&lt;1,3&gt;) :: &lt;($1 &lt; 256)&gt; &nbsp;};<br />
<br />$str =~ m/ &lt;quad&gt; &lt;dot&gt; &lt;quad&gt; &lt;dot&gt; &lt;quad&gt; &lt;dot&gt; &lt;quad&gt; /x;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-383193">
				<div id="div-comment-383193" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://xnandox@hotmail.com' rel='external nofollow' class='url'>Raptor</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060522-08/?p=31113#comment-383193">
			May 22, 2006 at 9:38 pm</a>		</div>

		<p>Hi, I&#8217;ve always been thinking instead of everybody trying to figure out how to do regular expressions why don&#8217;t just (someone at MS) publish the regular expressions that are used inside the compilers or .NET? like the one used for:</p>
<p>Double.Parse(), DateTime.Parse() or, just like this case, IPAddress.Parse()?</p>
<p>I mean that would something for sure. &nbsp;And yes I know that not necesarily MS use the regular expression Match() method to parse strings into the required data types. &nbsp;But PLEASE someone publish them as they are stated in the specification document for the C++, C# or VB.NET compilers. &#8217;cause it must be stated some where!</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-dean-harding even thread-even depth-1" id="comment-383213">
				<div id="div-comment-383213" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Dean+Harding' rel='external nofollow' class='url'>Dean Harding</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060522-08/?p=31113#comment-383213">
			May 22, 2006 at 10:13 pm</a>		</div>

		<p>Raptor: That&#8217;s what Reflector is for anyway.</p>
<p>An interesting aside, most of ASP.NET is parsed using regular expressions. Have a look at the System.Web.UI.TemplateParser class&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-maurits odd alt thread-odd thread-alt depth-1" id="comment-383113">
				<div id="div-comment-383113" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Maurits+%5BMSFT%5D' rel='external nofollow' class='url'>Maurits [MSFT]</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060522-08/?p=31113#comment-383113">
			May 22, 2006 at 5:02 pm</a>		</div>

		<p>&gt; Is this part of the standard?</p>
<p>No &#8212; the HTTP/1.1 standard (RFC 2616) depends on RFC 2396, which has this to say:<br />
<br />hostport &nbsp; &nbsp; &nbsp;= host [ &quot;:&quot; port ]<br />
<br />host &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;= hostname | IPv4address<br />
<br />hostname &nbsp; &nbsp; &nbsp;= *( domainlabel &quot;.&quot; ) toplabel [ &quot;.&quot; ]<br />
<br />domainlabel &nbsp; = alphanum | alphanum *( alphanum | &quot;-&quot; ) alphanum<br />
<br />toplabel &nbsp; &nbsp; &nbsp;= alpha | alpha *( alphanum | &quot;-&quot; ) alphanum<br />
<br />IPv4address &nbsp; = 1*digit &quot;.&quot; 1*digit &quot;.&quot; 1*digit &quot;.&quot; 1*digit<br />
<br />port &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;= *digit</p>
<p>Note that neither <a rel="nofollow" target="_new" href="http://2637578507 nor" rel="nofollow"></a><a href="http://2637578507" rel="nofollow">http://2637578507</a> nor <a rel="nofollow" target="_new" href="http://66%2e102%2e7%2e99" rel="nofollow">http://66%2e102%2e7%2e99</a> match this syntax.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-383223">
				<div id="div-comment-383223" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Archangel</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060522-08/?p=31113#comment-383223">
			May 23, 2006 at 1:50 am</a>		</div>

		<p>Dean: I agree. A basic regex that catches silly things like &quot;206.132..123.1&quot; is probably going to be quite adequate; most of the issues are things you can&#8217;t save your user from anyway, like them transposing a couple of digits.</p>
<p>And a regex that&#8217;s too gentle is far preferable to one that&#8217;s too strict; I&#8217;ve had my fill of websites that insist on a single period in a domain name (yes, some of us do live outside the US) or 5-digit postcodes (ditto!) &#8211; you can tell that some webmaster read about regular expressions but didn&#8217;t realise what a minefield they were getting into.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-dean-harding odd alt thread-odd thread-alt depth-1" id="comment-383153">
				<div id="div-comment-383153" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Dean+Harding' rel='external nofollow' class='url'>Dean Harding</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060522-08/?p=31113#comment-383153">
			May 22, 2006 at 7:25 pm</a>		</div>

		<p>kbiel: That matches &quot;.1.2.3.4&quot;</p>
<p>Regular expressions, I believe, are really only good for &quot;sanity&quot; checking. *Especially* for email addresses when the only REAL way to check for a valid email address is by actually sending an email to it.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-383233">
				<div id="div-comment-383233" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Mike</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060522-08/?p=31113#comment-383233">
			May 23, 2006 at 3:13 am</a>		</div>

		<p>A wise woman once told me her S.O. once told her &quot;Parsers parse&quot;. I think this is a prime example of just that.</p>
<p>Parsers parse.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-oldnewthing bypostauthor odd alt thread-odd thread-alt depth-1" id="comment-383203">
				<div id="div-comment-383203" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Raymond+Chen+-+MSFT' rel='external nofollow' class='url'>Raymond Chen - MSFT</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060522-08/?p=31113#comment-383203">
			May 22, 2006 at 10:02 pm</a>		</div>

		<p>Clearly those methods don&#8217;t use regular expressions since there&#8217;s more to parsing than matching; you have to parse it too!</p>
<p>class Double {<br />
<br /> public double Parse(string s, NumberStyles styles)<br />
<br /> {<br />
<br /> &nbsp;Match match = Regex.Match(&#8230;, s);<br />
<br /> &nbsp;if (match.Success) {<br />
<br /> &nbsp; &nbsp;return /* what goes here? */<br />
<br /> &nbsp; &nbsp; Double.Parse(match.Value, styles);<br />
<br /> &nbsp;}<br />
<br /> &nbsp;&#8230;<br />
<br /> }<br />
<br />}</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-383253">
				<div id="div-comment-383253" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">IanA</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060522-08/?p=31113#comment-383253">
			May 23, 2006 at 6:00 am</a>		</div>

		<p>Any use for sscanf here? ..&quot;%hu.%hu.%hu.%hu&quot;..?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-383283">
				<div id="div-comment-383283" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://bogol.blogspot.com' rel='external nofollow' class='url'>HA HA HA</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060522-08/?p=31113#comment-383283">
			May 23, 2006 at 8:55 am</a>		</div>

		<p>IANA &#8211; no. theres no use for sscanf anyhwaer. evar. unles u coutnt dalibrate sabotage.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-maurits even thread-even depth-1" id="comment-383293">
				<div id="div-comment-383293" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Maurits+%5BMSFT%5D' rel='external nofollow' class='url'>Maurits [MSFT]</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060522-08/?p=31113#comment-383293">
			May 23, 2006 at 9:02 am</a>		</div>

		<p>Dean: hmmm, you&#8217;re right, it matches .1.1.1.1<br />
<br />But it no longer matches:</p>
<p>Once upon a time in the faraway land of 1.2.3.4 there lived a magical wizard&#8230;</p>
<p>There&#8217;s probably a way to use lookahead to match a digit after the first ^ and fix the leading-. issue.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-383383">
				<div id="div-comment-383383" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.morganalley.com' rel='external nofollow' class='url'>Dewi Morgan</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060522-08/?p=31113#comment-383383">
			May 23, 2006 at 10:34 am</a>		</div>

		<p>&quot;There&#8217;s probably a way to use lookahead to match a digit after the first ^ and fix the leading-. issue.&quot;</p>
<p>Yup. I&#8217;ve used b instead of ^ here, done a forward positive assertion that the first character is a number, and a backward negative assertion that the preceding character was not a dot. So, it&#8217;d match the first four octets of a longer string of octets, like so: </p>
<p>1.2.3.4.5.6.7.8 &#8211; would match 1.2.3.4</p>
<p>b(?&lt;!.)(?=d)((^|.)(25[0-5]|2[0-4]d|1dd|[1-9]?d)){4}$</p>
<p>Of course, this still doesn&#8217;t really work, and still needs program logic, since it doesn&#8217;t fail on invalid ranges 0.0.0.0/24, 127.0.0.0/24, 224.0.0.0/29 and known broadcast addresses. </p>
<p>Some apps will also want to fail on private ranges: 10.0.0.0/24, 192.168.0.0/16, and 172.16.0.0/20.</p>
<p>Personally, I&#8217;d do as Raymond suggests: break it into bytes. If it looked like valid IP syntax, I&#8217;d keep a sorted table of known-invalid ranges, and use a binary search to find if the given IP was valid.</p>
<p>But that&#8217;s just me.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-383413">
				<div id="div-comment-383413" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">kbiel</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060522-08/?p=31113#comment-383413">
			May 23, 2006 at 10:43 am</a>		</div>

		<p>Yes, Maurits, look-ahead and look-behind would have solved the problems and kept it uncomplicated. &nbsp;That was how I started, but I had to rearrange and strip out the look-behind to be ECMA compliant. &nbsp;It appears that I failed to account for one case, but in the whole it works well as a sanity check with your changes.</p>
<p>Of course, if you are already inside of a .Net assembly, you might use a Regex to help parse the a string or just to check it but at some point you will have to actually write code to parse it if it is going to be any use to you.</p>
<p>I very much like your hammer and screwdriver analogy. &nbsp;On the other hand, sometimes you are only given a hammer (javascript) and it works to some degree on screws too if you pound hard enough (sanity checking values before POST/GET).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-383423">
				<div id="div-comment-383423" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Nick Lamb</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060522-08/?p=31113#comment-383423">
			May 23, 2006 at 11:20 am</a>		</div>

		<p>It&#8217;s hard to guess what this could possibly be intended for, but any range checks are unwise in the general case. IPv4 addresses really are just 32-bit values, and with a very small number of exceptions (0.0.0.0 being one of them) they are only as magic as the administrators of the network choose to make them.</p>
<p>e.g. Dewi mentioned 224.0.0.0/29 but that&#8217;s not invalid at all, it&#8217;s actively in use for multicast traffic. If Dewi&#8217;s hypothetical &quot;fail on invalid ranges&quot; code were used in a DNS configuration manager, or a router traffic log then he&#8217;d have just removed multicast support from software that didn&#8217;t need any extra work to support it. Outstanding.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-384063">
				<div id="div-comment-384063" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blogs.msdn.com/mgrier' rel='external nofollow' class='url'>Michael Grier [MSFT]</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060522-08/?p=31113#comment-384063">
			May 24, 2006 at 12:03 am</a>		</div>

		<p>Everyone&#8217;s forgetting that the base requirement was that the pattern match IPV4 addresses, not that it doesn&#8217;t match strings which are not IPV4 addresses!!!</p>
<p>.*<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-maurits odd alt thread-odd thread-alt depth-1" id="comment-384313">
				<div id="div-comment-384313" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Maurits+%5BMSFT%5D' rel='external nofollow' class='url'>Maurits [MSFT]</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060522-08/?p=31113#comment-384313">
			May 24, 2006 at 11:46 am</a>		</div>

		<p>I see two broad possible uses here&#8230;</p>
<p>1) Given a string, determine whether it is an IP address</p>
<p>2) Extract IP addresses from a larger chunk of text</p>
<p>The two questions go together, but are subtly different.</p>
<p># returns 1 for yes, 0 for no<br />
<br />sub is_ip4($) {<br />
<br />    my $purported_ip = shift;</p>
<p>    $purported_ip =~ /^(d+).(d+).(d+).(d+)$/ or return 0;</p>
<p>    my @octets = ($1, $2, $3, $4);</p>
<p>    for my $octet (@octets) { $octet &lt; 255 or return 0; }</p>
<p>    return 1;<br />
<br />}</p>
<p># returns an array of things that, at first sight, look like IPs<br />
<br /># in the order they first appear in the text<br />
<br />sub extract_ips_naively($) {<br />
<br />    my $text = shift;</p>
<p>    my @purported_ips = ();<br />
<br />    my %seen = ();</p>
<p>    while ($text =~ s/(d+.d+.d+.d+)//) {<br />
<br />        my $purported_ip = $1;<br />
<br />        unless ($seen{$1}++) {<br />
<br />            push @purported_ips, $purported_ip;<br />
<br />        }<br />
<br />    }</p>
<p>    return @purported_ips;<br />
<br />}</p>
<p># returns an array of IPs<br />
<br />sub extract_ips_fershure($)<br />
<br />{<br />
<br />    my $text = shift;</p>
<p>    return grep { is_ip4($_) } extract_ips_naively($text);<br />
<br />}</p>
<p>my $text = join &quot;&quot;, &lt;STDIN&gt;;</p>
<p>print &quot;Naive:n&quot;;<br />
<br />print join &quot;n&quot;, extract_ips_naively($text);<br />
<br />print &quot;nnValidated:n&quot;;<br />
<br />print join &quot;n&quot;, extract_ips_validate($text);<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-maurits even thread-even depth-1" id="comment-384333">
				<div id="div-comment-384333" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Maurits+%5BMSFT%5D' rel='external nofollow' class='url'>Maurits [MSFT]</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060522-08/?p=31113#comment-384333">
			May 24, 2006 at 11:50 am</a>		</div>

		<p>Oops, should be $octet &lt;= 255, not $octet &lt; 255</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-385103">
				<div id="div-comment-385103" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">work2do</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060522-08/?p=31113#comment-385103">
			May 25, 2006 at 10:51 pm</a>		</div>

		<p>Why can&#8217;t MS invent a new EASY expression-matching language?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-385203">
				<div id="div-comment-385203" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Chris Brien</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060522-08/?p=31113#comment-385203">
			May 26, 2006 at 5:35 am</a>		</div>

		<p>I just saw <a rel="nofollow" target="_new" href="http://makingflan.blogspot.com/2006/03/regular-expressionescence.html" rel="nofollow">http://makingflan.blogspot.com/2006/03/regular-expressionescence.html</a></p>
<p>The type system described, being basically a recursive descent parser, makes it easy to match an IP address. It boils down to the one line of code:</p>
<p>@ipAddress = (/str0to255,&#8217;.&#8217;):3, /str0to255;</p>
<p>where the type str0to255 is defined as code:</p>
<p>is @string0to255( [digit:1..3] @s )<br />
<br />{<br />
<br />..s.toNumber().is( &gt;=0 &lt;=255 );<br />
<br />}</p>
<p>Which is a pretty neat way to do it, I think.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-385413">
				<div id="div-comment-385413" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://gpoul.strain.at' rel='external nofollow' class='url'>Gerhard Poul</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060522-08/?p=31113#comment-385413">
			May 26, 2006 at 1:31 pm</a>		</div>

		<p>I guess you&#8217;d not have thought how short the regex for parsing e-mail addresses really is, huh? :-)</p>
<p><a rel="nofollow" target="_new" href="http://ex-parrot.com/~pdw/Mail-RFC822-Address.html" rel="nofollow">http://ex-parrot.com/~pdw/Mail-RFC822-Address.html</a></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-385893">
				<div id="div-comment-385893" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Norman Diamond</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060522-08/?p=31113#comment-385893">
			May 28, 2006 at 8:52 pm</a>		</div>

		<p>Friday, May 26, 2006 5:35 AM by Chris Brien<br />
<br />&gt; It boils down to the one line of code:<br />
<br />&gt; @ipAddress = (/str0to255,&#8217;.&#8217;):3, /str0to255;<br />
<br />&gt; where the type str0to255 is defined as code:<br />
<br />&gt; is @string0to255( [digit:1..3] @s )<br />
<br />&gt; {<br />
<br />&gt; ..s.toNumber().is( &gt;=0 &lt;=255 );<br />
<br />&gt; } </p>
<p>Let&#8217;s uncount comments and braces.<br />
<br />&gt; @ipAddress = (/str0to255,&#8217;.&#8217;):3, /str0to255;<br />
<br />&gt; is @string0to255( [digit:1..3] @s ) { ..s.toNumber().is( &gt;=0 &lt;=255 ); } </p>
<p>Two is still respectable, it&#8217;s just not one.</p>
<p>Meanwhile&#8230;</p>
<p>&gt; As commenter Maurits put it, &quot;The trick is<br />
<br />&gt; not to spend time developing a combination<br />
<br />&gt; hammer/screwdriver,</p>
<p>If all you have is a combination hammer/screwdriver, then everything starts looking like a combination thumb/eye.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-398803">
				<div id="div-comment-398803" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://kanaan.info/2006/07/11/how-do-i-write-a-regular-expression-that-matches-an-ipv4-dotted-address/' rel='external nofollow' class='url'>kanaan.info &raquo; How do I write a regular expression that matches an IPv4 dotted address?</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060522-08/?p=31113#comment-398803">
			July 11, 2006 at 6:59 am</a>		</div>

		<p>PingBack from <a rel="nofollow" target="_new" href="http://kanaan.info/2006/07/11/how-do-i-write-a-regular-expression-that-matches-an-ipv4-dotted-address/" rel="nofollow">http://kanaan.info/2006/07/11/how-do-i-write-a-regular-expression-that-matches-an-ipv4-dotted-address/</a></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-452183">
				<div id="div-comment-452183" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.colinneller.com/blog/RegExANDCodeIsGood.aspx' rel='external nofollow' class='url'>Colin Neller</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060522-08/?p=31113#comment-452183">
			December 11, 2006 at 2:05 pm</a>		</div>

		
		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-452193">
				<div id="div-comment-452193" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.colinneller.com/blog/RegExANDCodeIsGood.aspx' rel='external nofollow' class='url'>Colin Neller - RegEx AND code is good</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060522-08/?p=31113#comment-452193">
			December 11, 2006 at 2:05 pm</a>		</div>

		<p>PingBack from <a rel="nofollow" target="_new" href="http://www.colinneller.com/blog/RegExANDCodeIsGood.aspx" rel="nofollow">http://www.colinneller.com/blog/RegExANDCodeIsGood.aspx</a></p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>