<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (9)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-1186723">
				<div id="div-comment-1186723" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">JamesJohnston</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150424-00/?p=44163#comment-1186723">
			April 24, 2015 at 7:10 am</a>		</div>

		<p>Another reason might be that variadic functions aren&#39;t supported for stdcall calling convention&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1186733">
				<div id="div-comment-1186733" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Logan</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150424-00/?p=44163#comment-1186733">
			April 24, 2015 at 7:30 am</a>		</div>

		<p><a rel="nofollow" target="_new" href="https://msdn.microsoft.com/en-us/library/windows/hardware/ff553183(v=vs.85).aspx">msdn.microsoft.com/&#8230;/ff553183(v=vs.85).aspx</a></p>
<p>You can have variadic functions in &quot;lightweight COM&quot; though!</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1186753">
				<div id="div-comment-1186753" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">wqw</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150424-00/?p=44163#comment-1186753">
			April 24, 2015 at 12:12 pm</a>		</div>

		<p>So are these &quot;scripting&quot; [varargs] [in], [out] or [in/out] for the std marshaller?</p>
<div class="post">[<em>[in] and [out] are not just for scripting. The standard marshaler uses those. But some of the attributes like [varargs] and [retval] and [optional] are purely for scripting since they affect how the method is exposed to scripting languages, not how it marshals. -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-alexcohn odd alt thread-odd thread-alt depth-1" id="comment-1186783">
				<div id="div-comment-1186783" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Alex+Cohn' rel='external nofollow' class='url'>Alex Cohn</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150424-00/?p=44163#comment-1186783">
			April 25, 2015 at 12:35 am</a>		</div>

		<p>For all practical purposes, SAFEARRAY of VARIANTs is equivalent to variadic parameters list. The overhead which may be important for printf() and her kin, is negligible when COM marshalling is involved.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1186773">
				<div id="div-comment-1186773" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Cesar</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150424-00/?p=44163#comment-1186773">
			April 24, 2015 at 6:41 pm</a>		</div>

		<p>There are two variadic conventions which would be easy to support: counter (a specially-marked input parameter has the number of parameters in the &quot;&#8230;&quot; part) and sentinel (the parameters in the &quot;&#8230;&quot; part are all pointers, and the last one is always a NULL pointer). Of course, it would also need a way to specify the size every parameter in the &quot;&#8230;&quot; part must have (machine word, a pair of machine words, pointer, float, or double), and they would have to be all the same size.</p>
<p>The other common variadic convention, which I&#39;ll call &quot;printf&quot;, would be much harder to support in the marshaller; not only you have to parse the format string to know how many parameters there are, the format string also specifies the *size* of each parameter individually.</p>
<p>(The gcc compiler, by the way, has a way to mark in the prototype of a variadic function that it uses a sentinel or that it uses a printf-style format string; it also knows several kinds of format strings. That information is used to warn the developer when a variadic function is misused.)</p>
<div class="post">[<em>Also requires that all the parameters be of the same type (or if not, you need some way of telling the marshaller the type of each parameter. -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1186813">
				<div id="div-comment-1186813" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ben Voigt</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150424-00/?p=44163#comment-1186813">
			April 26, 2015 at 12:49 pm</a>		</div>

		<p>@Cesar: It&#39;s not enough to know there is a list of pointers, that all pointers are the same size, and where the list ends.</p>
<p>The content pointed-to must also be marshaled (potentially in both directions), and therein lies the problem.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1186823">
				<div id="div-comment-1186823" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Deanna</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150424-00/?p=44163#comment-1186823">
			April 26, 2015 at 12:55 pm</a>		</div>

		<p>It&#39;s the same as VB6&#39;s &quot;ParamArray ByRef xxx() As Variant&quot;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1187054">
				<div id="div-comment-1187054" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Axel Rietschin</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150424-00/?p=44163#comment-1187054">
			April 27, 2015 at 11:13 am</a>		</div>

		<p>@Logan: only on [local] interfaces or methods, i.e. not marshaled.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1187374">
				<div id="div-comment-1187374" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">acq</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150424-00/?p=44163#comment-1187374">
			April 29, 2015 at 7:25 am</a>		</div>

		<p>I just want to use this opportunity to thank Raymond for all his &quot;highly technical&quot; articles (like this one). I consider the amount of the insight and clarity in them unprecedented to any other source handling the same topics.</p>
<p>A personal anecdote: Until up to a few days ago, I&#39;ve never had to do anything with the &quot;shell namespace&quot; objects. As soon as I&#39;ve discovered the OldNewThing articles I&#39;ve had a good examples for the start.</p>
<p>This article now I really, really respect for its depth:</p>
<p><a rel="nofollow" target="_new" href="http://blogs.msdn.com/b/oldnewthing/archive/2013/12/20/10483672.aspx">blogs.msdn.com/&#8230;/10483672.aspx</a></p>
<p>Thanks Raymond.</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>