<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (4)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-1044593">
				<div id="div-comment-1044593" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Jonathan</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130311-00/?p=5003#comment-1044593">
			March 11, 2013 at 8:28 am</a>		</div>

		<p>In my previous project, which was c/c++, we had a smart pointer class called CAutoNetApiBufferFree for such pointers. Actually, we had such classes for most kind of frees (free, delete, delete[], LocalFree, HeapFree, CoTaskMemFree, etc).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1044663">
				<div id="div-comment-1044663" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Carl D</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130311-00/?p=5003#comment-1044663">
			March 11, 2013 at 10:17 am</a>		</div>

		<p>Ah, my old friends the NetXxxxx functions. &nbsp;These are some of the most unwieldy functions in Win32 when it comes to building P/Invoke wrappers for .NET clients. &nbsp;Good times.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1044673">
				<div id="div-comment-1044673" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua S.</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130311-00/?p=5003#comment-1044673">
			March 11, 2013 at 12:13 pm</a>		</div>

		<p>@Carl D: The NetXxx functions aren&#39;t that clumsy to P/Invoke because the returned buffers tend not to have self-referencing pointers. Just remember to use a SafeHandle or CriticalHandle derivative for the returned buffer pointer.</p>
<p>If you really want to separate the men from the boys, build a C#5 GetAwaiter() pattern around GetAddrInfoEx in async mode on Windows 8.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1044713">
				<div id="div-comment-1044713" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Neil</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130311-00/?p=5003#comment-1044713">
			March 12, 2013 at 3:27 am</a>		</div>

		<p>Ages ago when I used WNetEnumResource on Windows 95 I was disappointed that one client did not always tell me the necessary size of the buffer the first time around. (No I don&#39;t remember which client it was.)</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>