<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (5)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment byuser comment-author-koldude even thread-even depth-1 parent" id="comment-1321616">
				<div id="div-comment-1321616" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/kantos' rel='external nofollow' class='url'>kantos</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180119-00/?p=97845#comment-1321616">
			January 19, 2018 at 7:03 am</a>		</div>

		<p>Sadly the C++ implementation of <code>std::condition_variable</code> in the 15.* toolset is <a href="https://stackoverflow.com/questions/47349751/stdconditional-variablewait-for-stdthreadsleep-for-on-windows-are-affec#comment81672181_47349751" rel="nofollow">broken</a> so if you want it to work correctly you&#8217;ll need to use the WIN32 version until that&#8217;s fixed in a breaking release.</p>

		
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-oldnewthing bypostauthor odd alt depth-2 parent" id="comment-1321675">
				<div id="div-comment-1321675" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Raymond+Chen+-+MSFT' rel='external nofollow' class='url'>Raymond Chen - MSFT</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180119-00/?p=97845#comment-1321675">
			January 19, 2018 at 10:15 am</a>		</div>

		<p>Bonus sadness is that the Win32 condition variable does not meet all the requirements of the C++ standard condition variable, so the runtime folks can&#8217;t just use it directly.</p>

		
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-yuhong-bao even depth-3 parent" id="comment-1321676">
				<div id="div-comment-1321676" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Yuhong+Bao' rel='external nofollow' class='url'>Yuhong Bao</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180119-00/?p=97845#comment-1321676">
			January 19, 2018 at 12:43 pm</a>		</div>

		<p>I wonder why SignalObjectAndWaitMultiple was never created.</p>

		
				</div>
		<ol class="children">
		<li class="comment odd alt depth-4 parent" id="comment-1321705">
				<div id="div-comment-1321705" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">JAS</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180119-00/?p=97845#comment-1321705">
			January 19, 2018 at 5:48 pm</a>		</div>

		<p>I wonder when there is going to be a serious effort to use coroutines to spiritually break out of Kernel Land. You can have faster, more advanced versions of all of these constructs.</p>

		
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-koldude even depth-5" id="comment-1322885">
				<div id="div-comment-1322885" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/kantos' rel='external nofollow' class='url'>kantos</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180119-00/?p=97845#comment-1322885">
			January 29, 2018 at 5:25 am</a>		</div>

		<p>The next version of the Windows SDK contains the CPP/WinRT components that support (and encourage) co-routines. Having already used them for some sockets code it was an absolute dream.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>