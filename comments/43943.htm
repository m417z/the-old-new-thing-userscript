<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (30)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment byuser comment-author-alegrigoriev even thread-even depth-1" id="comment-1153453">
				<div id="div-comment-1153453" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/alegr1' rel='external nofollow' class='url'>alegr1</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20141001-00/?p=43943#comment-1153453">
			October 1, 2014 at 7:17 am</a>		</div>

		<p>CreateEvent/Mutex/etc documentation needs to have a note that says: DO NOT NAME THE OBJECT UNLESS YOU USE IT ACROSS PROCESSES!</p>
<p>But then, again, nobody reads the documentation.</p>
<div class="post">[<em>There are valid cases for naming objects for intra-process use, so the note would be incorrect. The important thing is that if a name is given, the object can be accessed by CreateXxx or OpenXxx. This is already mentioned in the documentation. -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1153473">
				<div id="div-comment-1153473" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Count Zero</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20141001-00/?p=43943#comment-1153473">
			October 1, 2014 at 7:20 am</a>		</div>

		<p>I&#39;m kind of surprised that Raymond did not mention the kernel object namespaces which could also ease the troubles caused by unnecessary object naming.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-fredericmagnyf even thread-even depth-1" id="comment-1153483">
				<div id="div-comment-1153483" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Medinoc' rel='external nofollow' class='url'>Medinoc</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20141001-00/?p=43943#comment-1153483">
			October 1, 2014 at 7:20 am</a>		</div>

		<p>When I name a kernel object for the explicit purpose of interprocess communication, whenever possible I try to generate a unique name and send it to the other process (through command line if I start it, or some other means of IPC if I don&#39;t). The name always includes the creator thread&#39;s ID, ensuring no other thread generates an identical name.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1153493">
				<div id="div-comment-1153493" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joker_vD</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20141001-00/?p=43943#comment-1153493">
			October 1, 2014 at 7:36 am</a>		</div>

		<p>@Medinoc: You really should include the thread&#39;s starting time, because thread IDs are reused. Also, you may consider appending a freshly generated GUID or two to the event&#39;s name, just to be sure (When I was tasked to come up with a name of a super-secret cookie, I glued three GUIDs together&#8230;. so far it seems to work).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1153503">
				<div id="div-comment-1153503" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Count Zero</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20141001-00/?p=43943#comment-1153503">
			October 1, 2014 at 7:51 am</a>		</div>

		<p>@Joker_vD &#8211; One GUID should be more than enough. That is why they are called Globally Unique IDentifiers. Theoretically the chance of GUID collision in 2-3 million years is still less than something you can represent as a single precision float.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-fredericmagnyf odd alt thread-odd thread-alt depth-1" id="comment-1153513">
				<div id="div-comment-1153513" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Medinoc' rel='external nofollow' class='url'>Medinoc</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20141001-00/?p=43943#comment-1153513">
			October 1, 2014 at 8:37 am</a>		</div>

		<p>@Joker_vD: Usually I use the thread ID and the object creation time (plus some more values if there&#39;s a non-negligible possibility of the same thread creating two such objects in the same millisecond).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1153523">
				<div id="div-comment-1153523" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20141001-00/?p=43943#comment-1153523">
			October 1, 2014 at 8:41 am</a>		</div>

		<p>I know, I&#39;ll name my kernel object Klutz.</p>
<p>/ducks</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1153543">
				<div id="div-comment-1153543" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Gabe</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20141001-00/?p=43943#comment-1153543">
			October 1, 2014 at 9:21 am</a>		</div>

		<p>Medinoc: &quot;Usually&quot;? How often do you find yourself creating objects that need to be accessible outside of your process but without a well-known name? I&#39;m having trouble contriving such a use case.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1153553">
				<div id="div-comment-1153553" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Floyd</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20141001-00/?p=43943#comment-1153553">
			October 1, 2014 at 9:36 am</a>		</div>

		<p>@Gabe: Consider implementing an IPC mechanism for exclusive use by two or more of your processes, that signal available data by means of name kernel objects. These objects need names so that they can be shared between participating processes. The names, however, should not be well-know, to limit access.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-john-ludlow odd alt thread-odd thread-alt depth-1" id="comment-1153573">
				<div id="div-comment-1153573" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/John+Ludlow' rel='external nofollow' class='url'>John Ludlow</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20141001-00/?p=43943#comment-1153573">
			October 1, 2014 at 9:43 am</a>		</div>

		<p>Has the friend in this story watched Herbie movies a few too many times?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-bboorman even thread-even depth-1" id="comment-1153603">
				<div id="div-comment-1153603" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Brian_EE' rel='external nofollow' class='url'>Brian_EE</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20141001-00/?p=43943#comment-1153603">
			October 1, 2014 at 10:27 am</a>		</div>

		<p>@Joshua, I think Klink would be funnier.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1153613">
				<div id="div-comment-1153613" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">lefty</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20141001-00/?p=43943#comment-1153613">
			October 1, 2014 at 10:42 am</a>		</div>

		<p>This is why I name all my kernel objects &quot;GeorgeForeman&quot;.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1153633">
				<div id="div-comment-1153633" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Roger</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20141001-00/?p=43943#comment-1153633">
			October 1, 2014 at 11:10 am</a>		</div>

		<p>&quot;Don&#39;t give them a name unless you intend them to be shared.&quot;</p>
<p>Good parenting advice too!</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1153673">
				<div id="div-comment-1153673" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">use GUID in name</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20141001-00/?p=43943#comment-1153673">
			October 1, 2014 at 12:30 pm</a>		</div>

		<p>Seems like if you simply include a GUID in the name, that should cut down on accidental name collision?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1153693">
				<div id="div-comment-1153693" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">640k</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20141001-00/?p=43943#comment-1153693">
			October 1, 2014 at 2:42 pm</a>		</div>

		<p>2^128 kernel names is enough for everyone.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1153563">
				<div id="div-comment-1153563" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">poizan42</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20141001-00/?p=43943#comment-1153563">
			October 1, 2014 at 9:38 am</a>		</div>

		<p>Medinoc: Unless you are stuck with badly designed libraries *cough* .NET *cough*, you shouldn&#39;t pass the name of objects to your child processes for IPC &#8211; instead make a non-shareable (including non-inheritable) object and use DuplicateHandle to give your child process access to it.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1153713">
				<div id="div-comment-1153713" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Horrible Person</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20141001-00/?p=43943#comment-1153713">
			October 1, 2014 at 8:37 pm</a>		</div>

		<p>I want you to do a story about the Windows 9 name rumors, or at least cover some programs that are this lazy</p>
<p><a href="https://twitter.com/mikko/status/517358472715710465" rel="nofollow" target="_new">twitter.com/&#8230;/517358472715710465</a></p>
<p>Please? Pretty Please?</p>
<div class="post">[<em>Check out the second word in the title of the blog. Wait five years, then ask again. -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-yuhong-bao odd alt thread-odd thread-alt depth-1" id="comment-1153723">
				<div id="div-comment-1153723" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Yuhong+Bao' rel='external nofollow' class='url'>Yuhong Bao</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20141001-00/?p=43943#comment-1153723">
			October 1, 2014 at 11:45 pm</a>		</div>

		<p>@Horrible Person: That is pretty simple, Java has code to translate the raw version info into marketing names:</p>
<p><a rel="nofollow" target="_new" href="http://hg.openjdk.java.net/jdk8/jdk8/jdk/file/tip/src/windows/native/java/lang/java_props_md.c">hg.openjdk.java.net/&#8230;/java_props_md.c</a></p>
<p>Unfortunately, people managed to use the marketing names to create incorrect version checks, as mentioned above on twitter.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1153763">
				<div id="div-comment-1153763" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">poizan42</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20141001-00/?p=43943#comment-1153763">
			October 2, 2014 at 6:47 am</a>		</div>

		<p>@Medinoc: Write it to the process&#39;s stdin? </p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-maurits odd alt thread-odd thread-alt depth-1" id="comment-1153773">
				<div id="div-comment-1153773" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Maurits+%5BMSFT%5D' rel='external nofollow' class='url'>Maurits [MSFT]</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20141001-00/?p=43943#comment-1153773">
			October 2, 2014 at 6:51 am</a>		</div>

		<p>Is there a way to enumerate named events? I&#39;m curious to see what the programs I have running are using.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1153783">
				<div id="div-comment-1153783" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">poizan42</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20141001-00/?p=43943#comment-1153783">
			October 2, 2014 at 7:02 am</a>		</div>

		<p>@Maurits: NtQuerySystemInformation with the undocumented SystemHandleInformation (0x10) or SystemExtendedHandleInformation (0x40) value for SystemInformationClass.</p>
<p>Usual disclaimers about using undocumented features applies ofc.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1153803">
				<div id="div-comment-1153803" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">OldFart</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20141001-00/?p=43943#comment-1153803">
			October 2, 2014 at 7:06 am</a>		</div>

		<p>Or, you can use the Sysinternals &quot;handle&quot; program to get a list of kernel objects.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-john-ludlow even thread-even depth-1" id="comment-1153853">
				<div id="div-comment-1153853" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/John+Ludlow' rel='external nofollow' class='url'>John Ludlow</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20141001-00/?p=43943#comment-1153853">
			October 2, 2014 at 8:17 am</a>		</div>

		<p>Or Process Explorer if you prefer a GUI</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-fredericmagnyf odd alt thread-odd thread-alt depth-1" id="comment-1153743">
				<div id="div-comment-1153743" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Medinoc' rel='external nofollow' class='url'>Medinoc</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20141001-00/?p=43943#comment-1153743">
			October 2, 2014 at 3:04 am</a>		</div>

		<p>@poizan42: And then I have to communicate my new, duplicated handle to the child process, using some *other* means because I can no longer use the command line.</p>
<p>Not a problem for a Windowed application (just SendMessage() it), but harder for a console-based app.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1153913">
				<div id="div-comment-1153913" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">JamesJohnston</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20141001-00/?p=43943#comment-1153913">
			October 2, 2014 at 12:25 pm</a>		</div>

		<p>@Medinoc: And this is what the &quot;bInheritHandle&quot; member of the &quot;SECURITY_ATTRIBUTES&quot; structure passed to CreateEvent is for. &nbsp;Naming the event is still wrong if you need an event sharable between your process and a child process.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1153943">
				<div id="div-comment-1153943" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Carl D</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20141001-00/?p=43943#comment-1153943">
			October 2, 2014 at 12:50 pm</a>		</div>

		<p>&#8230; Or you can use Resource Monitor (CPU tab &#8211; associated handles pane) if you want to use something built-in to Windows itself.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1153953">
				<div id="div-comment-1153953" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">ChrisR</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20141001-00/?p=43943#comment-1153953">
			October 2, 2014 at 1:28 pm</a>		</div>

		<p>@JamesTJohnston: I&#39;m not disagreeing that you don&#39;t need to name the event, but I don&#39;t think you got Medinoc&#39;s point. &nbsp;The handle value itself still has to be communicated to the child process for the child process to know which inherited handle value it is supposed to use for the event. &nbsp;This can be either through the command line, environment or other IPC according to MSDN [1]. &nbsp;So if you rule out the command line, as per poizan42, then you are left with environment or other IPC, which is what Medinoc is begrudging. &nbsp;[1] <a rel="nofollow" target="_new" href="http://msdn.microsoft.com/en-us/library/windows/desktop/ms683463(v=vs.85).aspx">msdn.microsoft.com/&#8230;/ms683463(v=vs.85).aspx</a></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1154083">
				<div id="div-comment-1154083" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Jasper</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20141001-00/?p=43943#comment-1154083">
			October 3, 2014 at 9:22 am</a>		</div>

		<p>That seems like an unfortunate choice in the API. I don&#39;t blame the original developers. I also would have expected that a method called &quot;Create&quot;, would indeed, &quot;Create&quot; something.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-kwadwomi even thread-even depth-1" id="comment-1154303">
				<div id="div-comment-1154303" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Master+Programmer' rel='external nofollow' class='url'>Master Programmer</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20141001-00/?p=43943#comment-1154303">
			October 4, 2014 at 3:22 pm</a>		</div>

		<p>You can also use WinObj. It shows the object manager&#39;s namespace. That&#39;s where all the named kernel objects are kept.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1154353">
				<div id="div-comment-1154353" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joker_vD</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20141001-00/?p=43943#comment-1154353">
			October 6, 2014 at 1:17 am</a>		</div>

		<p>@Jasper: It does create a new handle, which has a brand new record in the process&#39;s handle table. Is it good enough?</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>