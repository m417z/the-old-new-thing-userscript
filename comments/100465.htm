<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (20)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment byuser comment-author-wndsks even thread-even depth-1" id="comment-1373235">
				<div id="div-comment-1373235" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/skSdnW' rel='external nofollow' class='url'>skSdnW</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20181212-00/?p=100465#comment-1373235">
			December 12, 2018 at 7:08 am</a>		</div>

		<p>Why would waiting for everything else to &#8220;complete&#8221; be better than having their UI covered by other things? If the UI is visible immediately then the user can deal with it when they want to, either by switching directly to it or deal with the other tasks first.</p>
<p>To deal with CPU usage they could just run at idle priority the first couple of minutes if they are started from the startup shortcut. Or don&#8217;t run at all until their window gets activated.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-dwalker-wk odd alt thread-odd thread-alt depth-1 parent" id="comment-1373255">
				<div id="div-comment-1373255" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/DWalker' rel='external nofollow' class='url'>DWalker</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20181212-00/?p=100465#comment-1373255">
			December 12, 2018 at 7:21 am</a>		</div>

		<p>What&#8217;s wrong with using &#8220;Delayed Start&#8221;?  That does just about what was described here.</p>

		
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-mzzt even depth-2" id="comment-1373305">
				<div id="div-comment-1373305" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/The+MAZZTer' rel='external nofollow' class='url'>The MAZZTer</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20181212-00/?p=100465#comment-1373305">
			December 12, 2018 at 7:59 am</a>		</div>

		<p>That is for services, which cannot have UI.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-aadsso-1live-com0003bffd09811eab odd alt depth-2 parent" id="comment-1373315">
				<div id="div-comment-1373315" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Paul_Topping2' rel='external nofollow' class='url'>Paul_Topping2</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20181212-00/?p=100465#comment-1373315">
			December 12, 2018 at 8:15 am</a>		</div>

		<p>Ok, but the idea seems sound. The program should simply wait some reasonable length of time before presenting its UI. Avoids the philosophical problems.</p>

		
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-aadsso-1live-com00037ffea32154b5 even depth-3 parent" id="comment-1373385">
				<div id="div-comment-1373385" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Aged+.Net+Guy' rel='external nofollow' class='url'>Aged .Net Guy</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20181212-00/?p=100465#comment-1373385">
			December 12, 2018 at 4:53 pm</a>		</div>

		<p>A &#8220;reasonable&#8221; length of time could be far too short on a malware choked old box and far too long on a quick clean box. For example:</p>
<p>I have a malware-free but aged laptop running Win10 home that takes 4 minutes from cold boot until the 5400 RPM mechanical disk stops thrashing. PerfMon shows disk queue lengths in the mid 30s for most of that time. During that wakeup time, even after several UI windows are fully painted, any mouse click that forces a foreground task switch won&#8217;t be visibly responded to for at least 15 seconds.</p>
<p>I have a newer machine with the same config that&#8217;s ready to rock and roll in more like 45 seconds from cold boot.</p>
<p>Neither machine has any fancy services, drivers, VPNs, remote drives, etc. These are vanilla wired-LAN office worker boxes running vanilla office worker start-up exes.</p>

		
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-wswiktor odd alt depth-4" id="comment-1373495">
				<div id="div-comment-1373495" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Azarien' rel='external nofollow' class='url'>Azarien</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20181212-00/?p=100465#comment-1373495">
			December 13, 2018 at 2:17 pm</a>		</div>

		<p>Windows 10 doesn&#8217;t like to be run from HDD (as opposed to SSD). When all those oh-so-important services like defender, runtime broker, windows update, and what not all trigger at startup, older pcs with slow HDDs are completely unusable until at least some of those services are disabled for good. I&#8217;ve seen this happen more than once.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment byuser comment-author-igoeja even thread-even depth-1" id="comment-1373285">
				<div id="div-comment-1373285" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/James+Igoe' rel='external nofollow' class='url'>James Igoe</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20181212-00/?p=100465#comment-1373285">
			December 12, 2018 at 7:44 am</a>		</div>

		<p>Although still uncertain, one could wrap the code in a launcher that monitored CPU and disk IO, and possibly keyboard interaction, to decide to start. Not ideal, but likely better than a simple wait n seconds, and could even be combined, wait period with an activity monitor to decide to launch. Maybe include keyboard interaction, so if the user is willing and able to start launching apps, the system might be &#8216;ready&#8217;.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-inactu odd alt thread-odd thread-alt depth-1 parent" id="comment-1373295">
				<div id="div-comment-1373295" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Inactu' rel='external nofollow' class='url'>Inactu</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20181212-00/?p=100465#comment-1373295">
			December 12, 2018 at 7:53 am</a>		</div>

		<p>Unfortunately that does not help!<br />
Our customers are urgently looking for a solution.<br />
Autostart is one of the most common here.<br />
Unfortunately, Windows is not ready at the time.<br />
DCOM,Services,SQL,&#8230;<br />
When is the entire system available?</p>
<p>Our Workaround:<br />
Use the tasks planner, attach to the start event, and give a delay, which must be determined empirically.<br />
As Windows is getting slower and slower, over time, put on a few seconds for delay.<br />
Sorry, that is anything but not satisfying.<br />
IfIf you had a solution for that, that would be great.</p>

		
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-joshudson even depth-2" id="comment-1373355">
				<div id="div-comment-1373355" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Joshua_______' rel='external nofollow' class='url'>Joshua_______</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20181212-00/?p=100465#comment-1373355">
			December 12, 2018 at 9:28 am</a>		</div>

		<p>Since you list SQL, you should design so that you try every few seconds until your stuff actually is up. SQL might be on another box so service dependencies won&#8217;t help you.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment byuser comment-author-pierrebai odd alt thread-even depth-1 parent" id="comment-1373325">
				<div id="div-comment-1373325" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/pierrebai' rel='external nofollow' class='url'>pierrebai</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20181212-00/?p=100465#comment-1373325">
			December 12, 2018 at 8:54 am</a>		</div>

		<p>There is no paradox.</p>
<p>If there was a WaitUntilIdle() function, by definition its caller is idle while waiting in the function. It thus does not contribute to the system not being idle. If two programs did this, they&#8217;d both be waiting inside this hypothetical function, both waking up when everything else is done.</p>
<p>Yes of course, if the implementation is naive, once they both wake up the system would not be idle, but the implementation could easily wake them up one by one.</p>
<p>The fact that the system is no longer idle when the program starts to run again is not relevant.</p>
<p>One could envision having options to the call to specify the idle criterion: CPU usage, disk usage, network usage, &#8230; and a maximum timeout.</p>
<p>There, design done.</p>

		
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-warrenelven-ca even depth-2" id="comment-1373365">
				<div id="div-comment-1373365" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/warrens' rel='external nofollow' class='url'>warrens</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20181212-00/?p=100465#comment-1373365">
			December 12, 2018 at 9:59 am</a>		</div>

		<p>Oh my goodness, no, no, NO.  Why do people with the worst ideas, have the most confidence in them? Why are so many humans like this?</p>
<p>We have multi-core processors and multi-process operating systems for a very good reason:  They are capable of doing multiple things at once.  Serializing tasks that can be parallelized worsens actual real-world performance!  The longer you wait to start, the longer it&#8217;ll take to finish.</p>
<p>The user isn&#8217;t going to be any happier with this.</p>
<p>Worse still, as soon as you offer some kind of &#8220;wait until idle&#8221; function, -everyone- will start using it, because every software developer believes their code will run faster if it doesn&#8217;t have to share CPU or disk time with someone else.  Then you end up with classic &#8220;all children are special&#8221; problem (if everyone is special, then nobody is special).</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment byuser comment-author-joshudson odd alt thread-odd thread-alt depth-1" id="comment-1373345">
				<div id="div-comment-1373345" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Joshua_______' rel='external nofollow' class='url'>Joshua_______</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20181212-00/?p=100465#comment-1373345">
			December 12, 2018 at 9:26 am</a>		</div>

		<p>Solution 1: Automatic (Delayed Start)</p>
<p>Solution 2: Take dependencies on all services that provide anything you remotely care about. I know service dependencies aren&#8217;t use much outside of MS; doesn&#8217;t mean there aren&#8217;t use cases.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-henke even thread-even depth-1" id="comment-1373375">
				<div id="div-comment-1373375" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Henke37' rel='external nofollow' class='url'>Henke37</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20181212-00/?p=100465#comment-1373375">
			December 12, 2018 at 1:52 pm</a>		</div>

		<p>Better solution: don&#8217;t pop ui at boot at all. If the user wanted to talk to you, then they would&#8217;ve opened you.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-cheong odd alt thread-odd thread-alt depth-1 parent" id="comment-1373395">
				<div id="div-comment-1373395" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/cheong00' rel='external nofollow' class='url'>cheong00</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20181212-00/?p=100465#comment-1373395">
			December 12, 2018 at 7:07 pm</a>		</div>

		<p>I wonder if monitoring the Explorer process for &#8220;input idle&#8221; would be a good advice.</p>
<p>Not exactly fully addressing the problem described by this customer, but I often found that it&#8217;s desirable to let the application start by the time the HDD activity goes to &#8220;low&#8221;, the antivirus is not busy, and therefore your application will become more responsive. That should somehow relieve the &#8220;slowness&#8221; felt by the customer.</p>

		
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-cheong even depth-2" id="comment-1373405">
				<div id="div-comment-1373405" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/cheong00' rel='external nofollow' class='url'>cheong00</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20181212-00/?p=100465#comment-1373405">
			December 12, 2018 at 7:10 pm</a>		</div>

		<p>Or I should just monitor the CPU usage with WMI.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment byuser comment-author-fleet-command odd alt thread-even depth-1" id="comment-1373415">
				<div id="div-comment-1373415" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Fleet+Command' rel='external nofollow' class='url'>Fleet Command</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20181212-00/?p=100465#comment-1373415">
			December 12, 2018 at 11:45 pm</a>		</div>

		<p>Deja Vu? I could swear I read a blog post with this subject from you. A customer wanted to run its CPU-intensive program after the system finished starting up. I think you (or the writer, if it was in another blog) suggested that the customer should use Task Scheduler.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-mike_diack even thread-odd thread-alt depth-1" id="comment-1373425">
				<div id="div-comment-1373425" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Mike+Diack' rel='external nofollow' class='url'>Mike Diack</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20181212-00/?p=100465#comment-1373425">
			December 13, 2018 at 1:23 am</a>		</div>

		<p>Warrens: Problem is your reply sounds equally overconfident&#8230;.<br />
Quoting you &#8220;Oh my goodness, no, no, NO&#8221;<br />
But some of your confident replies need their own rebuttal:<br />
1) Although it is now very likely that a Windows program is running on a multi core system, it is NOT certain. Particularly for embedded windows systems, they may be running on surprisingly old and slow (clock speed) single core CPUs.<br />
2) Likewise saying &#8220;parallelize&#8221; is great, until your several running tasks face I/O contention &#8211; i.e. all accessing the same harddrive concurrently. This is greatly exacerbated on non SSD systems. When you get I/O contention with lots of seeking, Windows can often behave horribly, not unlike the thrashing if swap is in heavy use.<br />
3) So in short, there are rare cases where this approach is needed, in spite of you saying no. I&#8217;ve needed to do it myself &#8211; its particularly true if you are trying to achieve soft realtime type behaviour on Windows (i.e. reasonably consistent latency) and on a lowish spec PC. If you don&#8217;t wait for the system to settle, latency behaviour can often go bananas.</p>
<p>In short, always design to behave well on LOWEST common denominator target platforms, is one thing that 20+ years of Windows development has taught me. Too many people these days seem to make too many assumptions about their target environment IMHO.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-kirbyfcf2 odd alt thread-even depth-1" id="comment-1373435">
				<div id="div-comment-1373435" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Harold+H20' rel='external nofollow' class='url'>Harold H20</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20181212-00/?p=100465#comment-1373435">
			December 13, 2018 at 5:17 am</a>		</div>

		<p>The *REAL* problem is found in this sentence:  &#8220;there is so much activity during startup that when their program displays a prompt to the user, it often gets covered by other things that run at startup.&#8221;  Do you *REALLY* need that many things running at startup?  Can they just start silently without cluttering up the screen with useless information?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-watsonjcampbell even thread-odd thread-alt depth-1" id="comment-1373505">
				<div id="div-comment-1373505" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/The6P4C' rel='external nofollow' class='url'>The6P4C</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20181212-00/?p=100465#comment-1373505">
			December 13, 2018 at 10:04 pm</a>		</div>

		<p>Classic XY question?</p>
<p>&#8220;We need to make sure  has completed before we start our app, so we&#8217;ve got to wait until the system has booted.&#8221; -&gt; &#8220;How do we wait until the system has booted?&#8221;, instead of &#8220;How do we wait until  has completed?&#8221;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-tyler-szabo odd alt thread-even depth-1" id="comment-1373785">
				<div id="div-comment-1373785" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Tyler+Szabo' rel='external nofollow' class='url'>Tyler Szabo</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20181212-00/?p=100465#comment-1373785">
			December 16, 2018 at 4:10 pm</a>		</div>

		<p>To go off of skSdnW&#8217;s comment with a bit of Henke37&#8217;s point: start yourself without showing a UI until you&#8217;re good and ready &#8211; get all of that behind-the-scenes stuff squared away, render your UI without showing it yet (slowly) and finally, when you&#8217;re ready to do stuff, regardless of how hard the system is working you&#8217;ll be ready to be interactive with minimal additional work needed. As far as the user knows you &#8220;started&#8221; when your window popped up and they don&#8217;t know you&#8217;ve been slowly working to initialize for the last minute after startup.</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>