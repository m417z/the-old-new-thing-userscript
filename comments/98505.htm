<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (8)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1 parent" id="comment-1333035">
				<div id="div-comment-1333035" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Antonio Rodríguez</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180413-00/?p=98505#comment-1333035">
			April 13, 2018 at 8:52 am</a>		</div>

		<p>Most (all?) 8-bit processors store the displacement of relative jumps in a single byte, so they are limited to a range of ±127 *bytes* (more like -126 to +129, taking into account the instruction&#8217;s two bytes). In my days of programming the Apple II in machine code and assembler, I didn&#8217;t found that limited range to be a big problem (I rarely had to use a trampoline). And I&#8217;d say that it&#8217;s good, because it forces to think about your code: if your functions are so big that you have to ask what the relative addressing limit is, then you are doing something wrong.</p>

		
				</div>
		<ol class="children">
		<li class="comment odd alt depth-2 parent" id="comment-1333075">
				<div id="div-comment-1333075" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180413-00/?p=98505#comment-1333075">
			April 13, 2018 at 5:09 pm</a>		</div>

		<p>I encountered the x86 byte limit too frequently. Mid-function trampolines. Joy.</p>
<p>On an unrelated note a size-speed optimization is available: all the nops between the trampolines of the second form can be omitted for a minor speed penalty if the trampoline was correctly predicted. The nops after the last one has to remain or something other than the at register gets corrupted.</p>

		
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-oldnewthing bypostauthor even depth-3" id="comment-1333135">
				<div id="div-comment-1333135" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Raymond+Chen+-+MSFT' rel='external nofollow' class='url'>Raymond Chen - MSFT</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180413-00/?p=98505#comment-1333135">
			April 14, 2018 at 8:48 am</a>		</div>

		<p>On the other hand, packing the trampolines too tightly means that you have jump instructions so close to each other that they occupy the same slot in the branch predictor, so one of them will always mispredict. Hopefully your trampolines are not in high-performance code paths.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment odd alt depth-2" id="comment-1333105">
				<div id="div-comment-1333105" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Neil</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180413-00/?p=98505#comment-1333105">
			April 14, 2018 at 3:18 am</a>		</div>

		<p>Aggressive inlining perhaps?</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment byuser comment-author-fjeldse even thread-odd thread-alt depth-1 parent" id="comment-1333555">
				<div id="div-comment-1333555" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Erik+F' rel='external nofollow' class='url'>Erik F</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180413-00/?p=98505#comment-1333555">
			April 18, 2018 at 8:50 am</a>		</div>

		<p>Would the old 8086 &#8220;anti-test&#8221; pattern be used by the compiler anymore, or does that mess up the branch predictor (e.g. instead of &#8220;JZ&#8221;, you use &#8220;JNZ $+xx&#8221; followed by &#8220;JMP yyyy&#8221;)? (BTW, is that basically a trampoline? I really never heard of that term until the late 1990s.)</p>

		
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-oldnewthing bypostauthor odd alt depth-2 parent" id="comment-1333595">
				<div id="div-comment-1333595" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Raymond+Chen+-+MSFT' rel='external nofollow' class='url'>Raymond Chen - MSFT</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180413-00/?p=98505#comment-1333595">
			April 18, 2018 at 9:47 am</a>		</div>

		<p>If the branch target is another function, the distance isn&#8217;t known until link time, at which point it&#8217;s too late to re-run the compiler to say, &#8220;Hey, could you use the anti-test pattern for this specific BGEZAL instruction?&#8221; (Has no effect on the branch predictor since you merely exchanged one conditional branch for another with the exact opposite taken/not-taken pattern. All branch predictors I&#8217;ve seen are symmetric with respect to taken and not-taken. And the unconditional branch doesn&#8217;t need to be predicted at all.)</p>

		
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-fjeldse even depth-3" id="comment-1333615">
				<div id="div-comment-1333615" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Erik+F' rel='external nofollow' class='url'>Erik F</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180413-00/?p=98505#comment-1333615">
			April 18, 2018 at 11:22 am</a>		</div>

		<p>That&#8217;s fair: I was only thinking of intra-function (and possibly intra-module without LTO) jumps.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt depth-3" id="comment-1333875">
				<div id="div-comment-1333875" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">smf</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180413-00/?p=98505#comment-1333875">
			April 23, 2018 at 12:07 am</a>		</div>

		<p>It&#8217;s not too late, that is what Link Time Optimisation is for. I guess nobody thought it was worth the investment back in the R4000 days.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>