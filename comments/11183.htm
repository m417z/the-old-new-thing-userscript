<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (15)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-902123">
				<div id="div-comment-902123" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Niels</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110318-00/?p=11183#comment-902123">
			March 18, 2011 at 7:15 am</a>		</div>

		<p>From the documentation for pszHeaderTitle: &quot;If dwFlags does not include the PSP_USEHEADERTITLE value, this member is ignored.&quot;</p>
<p>What I&#39;m guessing is that the system doesn&#39;t even attempt to access the fields if the appropriate flags aren&#39;t set, and an application built against an old version of the struct won&#39;t have those flags set.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-902133">
				<div id="div-comment-902133" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Niels</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110318-00/?p=11183#comment-902133">
			March 18, 2011 at 7:17 am</a>		</div>

		<p>As an aside, does this trick work for all structs that have a dwSize, cbSize or similar member? Or should we assume that the size field is generally used for struct versioning?</p>
<div class="post">[<i><a href="http://blogs.msdn.com/b/oldnewthing/archive/2003/12/12/56061.aspx" rel="nofollow">The trick does not work in general</a>. The property sheet manager gets away with it because it uses a different method for version checking. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-902143">
				<div id="div-comment-902143" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">configurator</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110318-00/?p=11183#comment-902143">
			March 18, 2011 at 7:20 am</a>		</div>

		<p>So, same as OVERLAPPED, really, except it&#39;s being copied around and not remaining at the same address. Are there other commonly-used structures that enable the same technique? It seems very useful to be able to provide extra data with everything, although it does remind me of the .net Tag property which I never ever use.</p>
<p>To answer your exercise: Id guess there&#39;s a flag specifying if pszHeaderTitle, pszHeaderSubTitle, and hActCtx are being used, possibly in the dwFlags you mentioned.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-902153">
				<div id="div-comment-902153" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Dan Bugglin</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110318-00/?p=11183#comment-902153">
			March 18, 2011 at 7:22 am</a>		</div>

		<p>Niels: I always assumed that the size would determine which fields would be accessed by the OS. &nbsp;And in fact this seems to be the underlying assumption of Raymond&#39;s Exercise.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-902163">
				<div id="div-comment-902163" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Dan Bugglin</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110318-00/?p=11183#comment-902163">
			March 18, 2011 at 7:23 am</a>		</div>

		<p>@configurator I use Tag all the time, usually to link UI items with the underlying code objects they represent.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-902173">
				<div id="div-comment-902173" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Alex Grigoriev</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110318-00/?p=11183#comment-902173">
			March 18, 2011 at 7:30 am</a>		</div>

		<p>I can&#39;t believe my eyes. Raymond recommends using a kludge that potentially breaks future compatibility, and depends generally on internal implementation and non-guaranteed behavior.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-902183">
				<div id="div-comment-902183" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">laonianren</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110318-00/?p=11183#comment-902183">
			March 18, 2011 at 7:39 am</a>		</div>

		<p>+1 Alex. &nbsp;Not only is this undocumented (as far as I can tell), the PROPSHEETPAGE documentation even says that you can&#39;t do this: &quot;Size, in bytes, of this structure. The property sheet manager uses this member to determine which version of the PROPSHEETHEADER structure you are using.&quot; &nbsp;(Assuming that PROPSHEETHEADER was intended to read PROPSHEETPAGE; it makes no sense at all as it is.)</p>
<div class="post">[<i>Clearly a documentation error (bad copy/paste from PROPSHEETHEADER). The correct text is in <a href="http://msdn.microsoft.com/en-us/library/aa815151(VS.85).aspx" rel="nofollow">this version of PROPSHEETPAGE</a>. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-902193">
				<div id="div-comment-902193" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Adam Rosenfield</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110318-00/?p=11183#comment-902193">
			March 18, 2011 at 7:48 am</a>		</div>

		<p>@Alex, couldn&#39;t agree more. The documentation for lstrcpyn even says to use StringCchCopy instead of it, which I know I&#39;ve seen Raymond use before. Are we sure that Raymond hasn&#39;t secretly been replaced by an imposter?</p>
<div class="post">[<i>Dude, calm down. It&#39;s just a sample. Using StringCchCopy would have made the sample bigger and distracted from the point. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-902213">
				<div id="div-comment-902213" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Typical Microsoft Dev</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110318-00/?p=11183#comment-902213">
			March 18, 2011 at 8:21 am</a>		</div>

		<p>&quot;Consider a program written for Windows 95 that uses this technique. How does the shell know that the cWidgets is really bonus data and not a pszHeaderTitle?&quot;</p>
<p>Because it&#39;s using the &quot;MS Shell&quot; Font and not Tahoma?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-902233">
				<div id="div-comment-902233" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Absotively</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110318-00/?p=11183#comment-902233">
			March 18, 2011 at 8:34 am</a>		</div>

		<p>The first search result for PROPSHEETPAGE is <a rel="nofollow" target="_new" href="http://msdn.microsoft.com/en-us/library/aa815151%28VS.85%29.aspx" rel="nofollow">msdn.microsoft.com/&#8230;/aa815151%28VS.85%29.aspx</a> for some reason. &nbsp;It says dwSize is &quot;Size, in bytes, of the PROPSHEETPAGE structure. The size includes any extra application-defined data at the end of the structure.&quot; &nbsp;But it also links to the main PROPSHEETPAGE documentation quoted by laonianren. &nbsp;Perhaps the main documentation is a victim of careless copying and pasting from the documentation for PROPSHEETHEADER?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-902243">
				<div id="div-comment-902243" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">configurator</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110318-00/?p=11183#comment-902243">
			March 18, 2011 at 10:00 am</a>		</div>

		<p>Your reasoning for why the trick doesn&#39;t work in general makes perfect sense &#8211; it can cause bugs. So why enable it in this case? Was there a distinct advantage that doesn&#39;t exist elsewhere? Or perhaps just because it already existed this way and is now needed for compatibility?</p>
<div class="post">[<i>There was already a different version-detection algorithm in place (flags) so the size was no longer meaningful for version detection. Remember, this stuff was designed back in the days when saving 4KB of memory was a huge deal. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-902253">
				<div id="div-comment-902253" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ben</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110318-00/?p=11183#comment-902253">
			March 18, 2011 at 10:06 am</a>		</div>

		<p>COMCTL32 uses a different method of versioning, you have to request which behaviour/version you want, using InitCommonControls.</p>
<p>That&#39;s how it knows whether that extra data is yours, or whether it is pszHeaderTitle, not the size.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-902273">
				<div id="div-comment-902273" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">dllver</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110318-00/?p=11183#comment-902273">
			March 18, 2011 at 11:06 am</a>		</div>

		<p>Some Shell functions (methods) also reads the calling assembly&#39;s DLLVERSIONINFO and exposes different behaviour depending on what the caller happens to be compiled with.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-902283">
				<div id="div-comment-902283" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Anonymous</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110318-00/?p=11183#comment-902283">
			March 18, 2011 at 11:15 am</a>		</div>

		<p>Could be through the size of the header:</p>
<p>&nbsp;PROPSHEETHEADER psh = { 0 };</p>
<p>&nbsp;psh.dwSize = sizeof(psh);</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-902303">
				<div id="div-comment-902303" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Roman</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110318-00/?p=11183#comment-902303">
			March 18, 2011 at 3:02 pm</a>		</div>

		<p>So I guess TRWTF is that there are two descriptions of PROPSHEETPAGE in the MSDN library, that contradict each other. And the one that seems more legitimate is wrong.</p>
<div class="post">[<i>My theory is that when I originally reported the error in PROPSHEETPAGE to the documentation team, they fixed only one of the copies of PROPSHEETPAGE. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>