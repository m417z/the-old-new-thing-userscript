<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (4)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-1274975">
				<div id="div-comment-1274975" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ken in NH</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20161125-00/?p=94795#comment-1274975">
			November 25, 2016 at 8:26 am</a>		</div>

		<p>It looks like your while loop is missing something. Is this what you meant?</p>
<p>PSLIST_ENTRY completedEntry = null;<br />
while (entry != null) {<br />
  ProcessWorkItem(static_cast(entry));<br />
  completedEntry = entry;<br />
  entry = completedEntry-&gt;next;<br />
  delete completedEntry;<br />
 }</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1274956">
				<div id="div-comment-1274956" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Clockwork-Muse</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20161125-00/?p=94795#comment-1274956">
			November 25, 2016 at 11:47 am</a>		</div>

		<p>Although with the current design, if more work is queued while some is being processed, it&#8217;s going to take a new invocation of ConsumeWork to process the new stuff.  This is in contrast to the earlier examples, which would process further queued work in the same invocation, and only signal to wake (or, well, it might have been processing the last one).  It operates under the same constraints as the bonus chatter from two days ago.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1275035">
				<div id="div-comment-1275035" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">David Haim</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20161125-00/?p=94795#comment-1275035">
			November 26, 2016 at 10:45 am</a>		</div>

		<p>So, is this how the Win32 work queue works behind the scenes?<br />
I always wondered what makes the enqueuing of tasks via SubmitThreadPoolWork so fast. </p>
<p>Also, this code is not exception safe (although utilizes C++)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-john-schroedl odd alt thread-odd thread-alt depth-1" id="comment-1275235">
				<div id="div-comment-1275235" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/schroedl' rel='external nofollow' class='url'>schroedl</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20161125-00/?p=94795#comment-1275235">
			November 29, 2016 at 8:50 am</a>		</div>

		<p>Bored? No. Loved this series.</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>