<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (15)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-270313">
				<div id="div-comment-270313" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Jonathan</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050413-56/?p=35913#comment-270313">
			April 13, 2005 at 9:38 am</a>		</div>

		<p>I think there&#8217;s a mistake in that last code block (example of the other way to do it).  That block looks like if the major and minor match, the build match is ignored.</p>
<p>This should have the desired result:</p>
<p>  return Major &gt; MajorDesired ||<br />
<br />   (Major == MajorDesired &amp;&amp;<br />
<br />    (Minor &gt; MinorDesired ||<br />
<br />     (Minor == MinorDesired &amp;&amp; Build &gt;= BuildDesired)));</p>
<p>Of course, maybe you just did that to illustrate your point&#8230;.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-270343">
				<div id="div-comment-270343" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://Ken@Alverson.net' rel='external nofollow' class='url'>Ken</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050413-56/?p=35913#comment-270343">
			April 13, 2005 at 12:45 pm</a>		</div>

		<p>If you are in C++ land, you can do:</p>
<p>return !std::lexicographical_compare(<br />
<br />          version.begin(),version.end(),<br />
<br />          desired.begin(),desired.end()<br />
<br />          );</p>
<p>or simply:</p>
<p>return !(version &lt; desired);</p>
<p>This assumes the version numbers are packaged up in a standard container, but lexicographical_compare can operate on raw arrays just as well as it can containers, it&#8217;s just a little wordy&#8230;</p>
<p>return !std::lexicographical_compare(<br />
<br />          version,version+VERSION_ELEMENTS,<br />
<br />          desired,desired+VERSION_ELEMENTS<br />
<br />          );</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-270353">
				<div id="div-comment-270353" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">asdf</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050413-56/?p=35913#comment-270353">
			April 13, 2005 at 2:13 pm</a>		</div>

		<p>MAKELONG is signed though, you either need another macro or decrease the range of the minor version to 32767.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-270363">
				<div id="div-comment-270363" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">asdf</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050413-56/?p=35913#comment-270363">
			April 13, 2005 at 2:19 pm</a>		</div>

		<p>Err major version, I&#8217;m really not a fan of the ordering of those parameters.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-270423">
				<div id="div-comment-270423" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.jasmusic.com' rel='external nofollow' class='url'>Joshua Schaeffer</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050413-56/?p=35913#comment-270423">
			April 13, 2005 at 3:55 pm</a>		</div>

		<p>It&#8217;s a neat trick, but hailing it as &quot;Using the powers of mathematics!&quot; just sounds waaay too corny.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-270433">
				<div id="div-comment-270433" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Diego</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050413-56/?p=35913#comment-270433">
			April 13, 2005 at 4:55 pm</a>		</div>

		<p>I wanted to ask a question; I don&#8217;t know if you&#8217;ve answered to it already in your huge blog (it&#8217;s not a easy search): Why can&#8217;t a file be read when someone has opened it? (ie: typical buggy video codecs which don&#8217;t allow you to delete the video after you closed all the apps)</p>
<p>I&#8217;m shoked that it doesn&#8217;t works that way, it&#8217;d make updates more easy &#8211; just overwrite the file, and restart the service like other OSes do. I guess there&#8217;s a reason for it but I never have found it, only you could answer such question! ;)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-oldnewthing bypostauthor even thread-even depth-1" id="comment-270443">
				<div id="div-comment-270443" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Raymond+Chen+-+MSFT' rel='external nofollow' class='url'>Raymond Chen - MSFT</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050413-56/?p=35913#comment-270443">
			April 13, 2005 at 5:14 pm</a>		</div>

		<p>Please use the suggestion box for off-topic questions. (Look at the dwShareMode parameter to CreateFile for the answer.)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-270473">
				<div id="div-comment-270473" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.livejournal.com/users/zorbathut' rel='external nofollow' class='url'>Ben Wilhelm</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050413-56/?p=35913#comment-270473">
			April 13, 2005 at 7:20 pm</a>		</div>

		<p>My technique for doing the last code block:</p>
<p>if( Major &lt; MajorDesired ) return false;<br />
<br />if( Major &gt; MajorDesired ) return true;<br />
<br />if( Minor &lt; MinorDesired ) return false;<br />
<br />if( Minor &gt; MinorDesired ) return true;<br />
<br />if( Build &lt; BuildDesired ) return false;<br />
<br />if( Build &gt; BuildDesired ) return true;<br />
<br />return true;</p>
<p>Simple pattern, easy to see, easy to understand, trivially extendable to as many comparisons as you want.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-270513">
				<div id="div-comment-270513" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.jasondoucette.com/' rel='external nofollow' class='url'>Jason Doucette</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050413-56/?p=35913#comment-270513">
			April 13, 2005 at 9:26 pm</a>		</div>

		<p>I believe this is what I suggested in your original post:<br />
<br /><a rel="nofollow" target="_new" href="http://blogs.msdn.com/oldnewthing/archive/2004/02/13/72476.aspx#72543" rel="nofollow">http://blogs.msdn.com/oldnewthing/archive/2004/02/13/72476.aspx#72543</a></p>
<p>To take this a step further&#8230; I required such a solution a long time ago for a video game.  It required about 10 or 12 levels of such compares.  I decided to use two floating point numbers.  They started with the most significant factor.  I iteratively went through all the remaining factors, from most significant to least.  In the loop, I multiplied the floats by the current factorâ€™s maximum possible value, and then added the value of the factor.  The result was two floats that I could compare.  As long as each factor never overflowed its known maximum value, it worked.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-270523">
				<div id="div-comment-270523" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Centaur</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050413-56/?p=35913#comment-270523">
			April 14, 2005 at 12:29 am</a>		</div>

		<p>With floats, you can also apply some kind of a monotonous function to fit any float into a finite range. For example, (arctan(x)/pi)+0.5 will map (-infinity, infinity) to (0, 1).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-270543">
				<div id="div-comment-270543" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Chris Becke</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050413-56/?p=35913#comment-270543">
			April 14, 2005 at 4:58 am</a>		</div>

		<p>Oh please dont use floats like that. Theyre lossy. Which means two things: First that two identical version numbers could &#8211; depending on the calculation &#8211; have slightly different, and thus unequal representations. Next, using a lossy datatype like a float means that your least significant components could drop right off the end, and you&#8217;d never know &#8211; until the check failed in some horrible way.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-270553">
				<div id="div-comment-270553" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Thomas Anderson</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050413-56/?p=35913#comment-270553">
			April 14, 2005 at 5:10 am</a>		</div>

		<p>is there anything special in this code?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-270813">
				<div id="div-comment-270813" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blogs.msdn.com/oldnewthing/archive/2005/04/15/408507.aspx' rel='external nofollow' class='url'>The Old New Thing</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050413-56/?p=35913#comment-270813">
			April 15, 2005 at 9:03 am</a>		</div>

		<p>Combining two tricks into one big trick.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-271083">
				<div id="div-comment-271083" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.livejournal.com/users/merle_/' rel='external nofollow' class='url'>Merle</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050413-56/?p=35913#comment-271083">
			April 15, 2005 at 9:10 pm</a>		</div>

		<p>Ben Wilhelm: while your code doesn&#8217;t use astounding tricks or anything, I much prefer it.  I was trying to decide how to better indent the &quot;complicated<br />(and teetering-towards unreadable) chain of comparisons&quot; (which I think could be fixed with proper indentation), but your way is much simpler.</p>
<p>And I would much rather debug yours.  No integer-size issues, either&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-272723">
				<div id="div-comment-272723" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ben Cooke</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050413-56/?p=35913#comment-272723">
			April 25, 2005 at 10:40 am</a>		</div>

		<p>Similarly, it&#8217;s much easier to compare dates if you represent them as year, month, day. How you encode the exact values is up to you, but most people seem to like the idea of using a string of the form YYYY-MM-DD, or an integer which looks like YYYYMMDD when in base 10. You can also pack the binary values into a 32-bit integer if you like that sort of thing.</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>