<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (7)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-133533">
				<div id="div-comment-133533" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Florian</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20031208-00/?p=41583#comment-133533">
			December 8, 2003 at 4:35 pm</a>		</div>

		<p>I suppose the implementation of that function is hidden in some library and is made staying there by shaking a large stick at it. (As you may be able to tell I have no clue about Windows programming.)<br />
Because normally such an empty function would be optimized away by any half-decent compiler, wouldn&#8217;t it?<br />
Actually what I was wondering about was how to look at the implementation without being employed by MS.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-133543">
				<div id="div-comment-133543" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Anonymous</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20031208-00/?p=41583#comment-133543">
			December 8, 2003 at 6:38 pm</a>		</div>

		<p>FlushInstructionCache is in kernel32.dll I think. No way the C++ compiler/linker can optimize a function it doesn&#8217;t know about till run time. Just step into the function in the debugger but then you only get the assembly listing or you can join a college/company that gets access to the windows source code (I&#8217;d imagine it&#8217;s not cheap).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-133553">
				<div id="div-comment-133553" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Jordan Russell</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20031208-00/?p=41583#comment-133553">
			December 8, 2003 at 7:46 pm</a>		</div>

		<p>So the documentation is inaccurate, then?</p>
<p>&quot;Windows Me/98/95:  The FlushInstructionCache function has no effect&quot;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-133563">
				<div id="div-comment-133563" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.virtualdub.org/' rel='external nofollow' class='url'>phaeron</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20031208-00/?p=41583#comment-133563">
			December 9, 2003 at 12:43 am</a>		</div>

		<p>Are you sure you&#8217;re not thinking of the prefetch queue, Raymond?  Control transfers were needed to flush the prefetch queue on CPUs up to the 486, which is why &quot;jmp short $+2&quot; was used after self-modifying code&#8230; but the Pentium was the first CPU to not require this.  I would hope that the CPU wouldn&#8217;t flush the cache on a simple indirect call!</p>
<p>I thought the reason for FlushInstructionCache() was for the NT kernel to execute inter-processor interrupts to ensure that all CPUs in a system saw code changes (cross-modifying code), which would mean that it isn&#8217;t required in Win95/98 since those OSes don&#8217;t support SMP.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-133573">
				<div id="div-comment-133573" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blogs.gotdotnet.com/raymondc/' rel='external nofollow' class='url'>Raymond Chen</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20031208-00/?p=41583#comment-133573">
			December 9, 2003 at 1:07 pm</a>		</div>

		<p>Hm, maybe you&#8217;re right on the prefetch. I must be getting my processors confused. I know that some processor somewhere required a jump to flush the prefetch, I assumed it applied to the Pentium as well, but perhaps not.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-133583">
				<div id="div-comment-133583" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.ozemail.com.au/~markhurd/' rel='external nofollow' class='url'>Mark Hurd</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20031208-00/?p=41583#comment-133583">
			December 12, 2003 at 4:08 am</a>		</div>

		<p>Sounds similar to the .NET GC.KeepAlive() routine that doesn&#8217;t do anything, but just calling it stops its argument from being seen by the compiler as ready for garbage collection.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-291073">
				<div id="div-comment-291073" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blogs.msdn.com/oldnewthing/archive/2005/07/18/439939.aspx' rel='external nofollow' class='url'>The Old New Thing</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20031208-00/?p=41583#comment-291073">
			July 18, 2005 at 10:00 am</a>		</div>

		<p>Because it&#8217;s the fact that you cared.</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>