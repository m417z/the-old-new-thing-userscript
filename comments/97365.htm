<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (6)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-1315186">
				<div id="div-comment-1315186" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Antonio Rodríguez</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20171108-00/?p=97365#comment-1315186">
			November 8, 2017 at 7:44 am</a>		</div>

		<p>Exercise 1: in the EnterFunction method, detect wether the item is a ZIP folder, and in that case, return S_FALSE. Otherwise, return S_OK.</p>
<p>Exercise 2: create a counter and initialize it to zero. In every call to FoundItem, increment the counter. If the counter goes over 100, return a COM error. Otherwise, return S_OK.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1 parent" id="comment-1315205">
				<div id="div-comment-1315205" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ray Koopa</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20171108-00/?p=97365#comment-1315205">
			November 8, 2017 at 8:08 am</a>		</div>

		<p>Sounds like the walk methods I implemented once in a .NET node hierarchy for a game engine. I feel like I&#8217;ve done something right for once after reading this!</p>

		
				</div>
		<ol class="children">
		<li class="comment even depth-2 parent" id="comment-1315216">
				<div id="div-comment-1315216" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Martin Bonner</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20171108-00/?p=97365#comment-1315216">
			November 8, 2017 at 11:00 am</a>		</div>

		<p>Ideally FoundItem and LeaveFolder should also treat S_FALSE as &#8220;stop searching, successfully&#8221; (You can always implement that with a customer error code that means &#8220;gave up early for some reason&#8221;, but that&#8217;s really the sort of thing S_FALSE is for.)</p>

		
				</div>
		<ol class="children">
		<li class="comment odd alt depth-3 parent" id="comment-1315247">
				<div id="div-comment-1315247" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Antonio Rodríguez</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20171108-00/?p=97365#comment-1315247">
			November 8, 2017 at 3:45 pm</a>		</div>

		<p>IIRC, COM error codes are based, for historical reasons, on old Win16 error codes, which themselves were based on DOS codes, which include some sort of &#8220;aborted by the user&#8221; code. But I&#8217;m too lazy to look up that O:-) . If it&#8217;s true, you can use it in the case you mention.</p>

		
				</div>
		<ol class="children">
		<li class="comment even depth-4 parent" id="comment-1315255">
				<div id="div-comment-1315255" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20171108-00/?p=97365#comment-1315255">
			November 8, 2017 at 5:09 pm</a>		</div>

		<p>I just set a global boolean that means ignore that error.</p>

		
				</div>
		<ol class="children">
		<li class="comment odd alt depth-5" id="comment-1315315">
				<div id="div-comment-1315315" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Antonio Rodríguez</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20171108-00/?p=97365#comment-1315315">
			November 9, 2017 at 9:05 am</a>		</div>

		<p>Given that you are already using an object to control the recursion, and that the object must be created before calling the INamespace­Walk::Walk method (and thus, should be destroyed after returning), I think it&#8217;s better to put that flag in the control object. CS courses teach not to use global variables under any circumstances. I think you should use them only for global configuration and for singular objects (like the ones representing your application or your main window). Or, as Raymond says it, don&#8217;t use a global resource to solve a local problem.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>