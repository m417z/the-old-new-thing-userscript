<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (13)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment byuser comment-author-wndsks even thread-even depth-1 parent" id="comment-1309376">
				<div id="div-comment-1309376" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/skSdnW' rel='external nofollow' class='url'>skSdnW</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170913-00/?p=97015#comment-1309376">
			September 13, 2017 at 7:12 am</a>		</div>

		<p>No more. No less?  WindowsPreallocateStringBuffer&#8217;s example code on MSDN asks for 10 characters and writes noting. The page itself also says &#8220;You must write exactly length characters into the buffer.&#8221; so the interns writing the example code don&#8217;t even read the documentation for the function they are writing the example for?</p>

		
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-oldnewthing bypostauthor odd alt depth-2 parent" id="comment-1309386">
				<div id="div-comment-1309386" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Raymond+Chen+-+MSFT' rel='external nofollow' class='url'>Raymond Chen - MSFT</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170913-00/?p=97015#comment-1309386">
			September 13, 2017 at 7:23 am</a>		</div>

		<p>I am the intern in question. What you&#8217;re seeing is the absence of a time machine. The &#8220;exactly length characters&#8221; text was added several years after the sample was written. When the text was updated, the sample wasn&#8217;t.</p>

		
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-wndsks even depth-3" id="comment-1309395">
				<div id="div-comment-1309395" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/skSdnW' rel='external nofollow' class='url'>skSdnW</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170913-00/?p=97015#comment-1309395">
			September 13, 2017 at 7:47 am</a>		</div>

		<p>It creates a string with undefined contents. The additional documentation made the example worse by not following the requirements but the example never made any sense.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt depth-3" id="comment-1309415">
				<div id="div-comment-1309415" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Rick C</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170913-00/?p=97015#comment-1309415">
			September 13, 2017 at 9:16 am</a>		</div>

		<p>By contrast, WindowsPromoteStringBuffer has a &#8220;fill in the buffer&#8221; comment.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even depth-3 parent" id="comment-1309425">
				<div id="div-comment-1309425" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Antonio Rodríguez</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170913-00/?p=97015#comment-1309425">
			September 13, 2017 at 9:21 am</a>		</div>

		<p>Why did the rules get changed after the API was created? Maybe because of mixed-language projects, when mixing null-terminated runtimes with length-content runtimes caused the garbage after the first null come afloat and cause bugs?</p>
<p>Anyway, it could be easily solved: just fill with nulls the unused part of the string. You get a &#8220;normalized&#8221; string which is equally valid as null-terminated and length-content (albeit a bit strange in the later case).</p>

		
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-wndsks odd alt depth-4" id="comment-1309436">
				<div id="div-comment-1309436" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/skSdnW' rel='external nofollow' class='url'>skSdnW</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170913-00/?p=97015#comment-1309436">
			September 13, 2017 at 9:35 am</a>		</div>

		<p>Filling with null messes up things that verify and reject based on WindowsStringHasEmbeddedNull.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-oldnewthing bypostauthor even depth-4 parent" id="comment-1309445">
				<div id="div-comment-1309445" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Raymond+Chen+-+MSFT' rel='external nofollow' class='url'>Raymond Chen - MSFT</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170913-00/?p=97015#comment-1309445">
			September 13, 2017 at 10:15 am</a>		</div>

		<p>The rules didn&#8217;t change. The documentation stated the pre-existing rules incorrectly.</p>

		
				</div>
		<ol class="children">
		<li class="comment odd alt depth-5" id="comment-1309525">
				<div id="div-comment-1309525" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">640k</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170913-00/?p=97015#comment-1309525">
			September 14, 2017 at 1:01 am</a>		</div>

		<p>Please replace the msdn docs with a link to your post above, it&#8217;s 1000x better.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment even thread-odd thread-alt depth-1 parent" id="comment-1309396">
				<div id="div-comment-1309396" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Paul Topping</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170913-00/?p=97015#comment-1309396">
			September 13, 2017 at 9:12 am</a>		</div>

		<p>So what&#8217;s the typical use case for WindowsPreallocateStringBuffer?</p>

		
				</div>
		<ol class="children">
		<li class="comment odd alt depth-2" id="comment-1309435">
				<div id="div-comment-1309435" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Antonio Rodríguez</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170913-00/?p=97015#comment-1309435">
			September 13, 2017 at 9:30 am</a>		</div>

		<p>Performance. Let&#8217;s say you have an algorithm that generates a 100-point string. You could allocate a temporary buffer, generate the string into the buffer, call WindowsCreateString() to create the actual string, and finally free the temporary buffer. WindowsPreallocateStringBuffer(), on the other hand, avoids allocating/freeing the temporary buffer and copying its contents to the final buffer. If you create a lot of strings, or they are large, it can make a big difference.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1 parent" id="comment-1309465">
				<div id="div-comment-1309465" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">mikeb</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170913-00/?p=97015#comment-1309465">
			September 13, 2017 at 11:22 am</a>		</div>

		<p>I am confused by these two statements (but that might be because I haven&#8217;t looked into HSTRINGs at all, really) which don&#8217;t seem to agree with each other:</p>
<p>  &#8211; &#8220;Since the representation of an HSTRING of length zero is the null pointer&#8221;<br />
  &#8211; &#8220;the system uses a single preallocated buffer (consisting of just a null terminator) to represent all zero-length strings&#8221;</p>

		
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-oldnewthing bypostauthor odd alt depth-2 parent" id="comment-1309475">
				<div id="div-comment-1309475" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Raymond+Chen+-+MSFT' rel='external nofollow' class='url'>Raymond Chen - MSFT</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170913-00/?p=97015#comment-1309475">
			September 13, 2017 at 11:41 am</a>		</div>

		<p>&#8220;the system uses a single preallocated buffer (consisting of just a null terminator) to represent <b>the buffer for</b> all zero-length strings”. Will fix.</p>

		
				</div>
		<ol class="children">
		<li class="comment even depth-3" id="comment-1309485">
				<div id="div-comment-1309485" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ted M</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170913-00/?p=97015#comment-1309485">
			September 13, 2017 at 2:02 pm</a>		</div>

		<p>Raymond, I sent a ping to the good people at the @docsmsft twitter account, they can take care of any MSDN inconsistencies your other readers may find. Just wanted to pass that on to you and anybody interested.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>