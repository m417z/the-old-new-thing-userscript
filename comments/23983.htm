<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (124)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-583143">
				<div id="div-comment-583143" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blogs.ugidotnet.org/lbarbieri/archive/2007/12/31/90510.aspx' rel='external nofollow' class='url'>Normal people bore me!</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071231-00/?p=23983#comment-583143">
			December 31, 2007 at 10:20 am</a>		</div>

		<p>Perch</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-583153">
				<div id="div-comment-583153" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">osexpert</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071231-00/?p=23983#comment-583153">
			December 31, 2007 at 10:26 am</a>		</div>

		<p>drag &amp; drop into cmd is a great loss and its one of the most annoying things in Vista. Vista is so protective with its high security, protecting the user from getting the work done. Nice work.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-583163">
				<div id="div-comment-583163" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">CGomez</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071231-00/?p=23983#comment-583163">
			December 31, 2007 at 11:26 am</a>		</div>

		<p>No, I&#8217;d much rather go back to when users were in charge of protecting themselves and running as non-admin.</p>
<p>I mean, back then, MSFT took all kinds of blame for every virus and trojan horse known to man, and it spawned a set of Mac commercials that routinely stretch the truth to the breaking point of lying.</p>
<p>But at least then I could drag a file onto the cmd window that I hardly ever use so the file name would show up. &nbsp;In fact, I&#8217;m not sure I ever did it. &nbsp;But things were better then!</p>
<div class="post">[<i>Okay, so if somebody finds a security issue like &#8220;Dropping a carefully crafted data object onto a command prompt could allow local elevation of privilege&#8221;, I&#8217;ll say &#8220;Sure that&#8217;s a security vulnerability, but CGomez likes it that way.&#8221; -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-583183">
				<div id="div-comment-583183" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Triangle</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071231-00/?p=23983#comment-583183">
			December 31, 2007 at 11:52 am</a>		</div>

		<p>You never know how much you have until it&#8217;s taken away.</p>
<p>[Okay, so if somebody finds a security issue like &#8220;Dropping a carefully crafted data object onto a command prompt could allow local elevation of privilege&#8221;, I&#8217;ll say &#8220;Sure that&#8217;s a security vulnerability, but CGomez likes it that way.&#8221; -Raymond]</p>
<p>No, that&#8217;s not what you&#8217;ll say. You&#8217;ll say &#8220;We&#8217;ll fix this bug in CSRSS right away!&#8217;, or &#8216;We&#8217;ll move the console handling code out of CSRSS right away!&#8217;.</p>
<div class="post">[<i>The bug in CSRSS was allowing data object code to execute. And that&#8217;s what was fixed in Vista. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-583193">
				<div id="div-comment-583193" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://xenon.arcticus.com' rel='external nofollow' class='url'>Chris 'Xenon' Hanson</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071231-00/?p=23983#comment-583193">
			December 31, 2007 at 12:08 pm</a>		</div>

		<p>A followup question that may be on many peoples&#8217; minds is &#8212; why exactly does the console have to run under CSRSS, when other shell-like program-launching tools (like, oh, the shell/Explorer) don&#8217;t need to? Essentially, what&#8217;s different about a console that requires additional services from a high-security subsystem like CSRSS, necessitating all these limitations.</p>
<p>Bummer about drag &amp; drop to the CMD prompt. That would be a real loss in functionality. Maybe third-party command prompt tools will make up for this, or perhaps a service pack could provide a registry setting for daring and responsible users to re-enable it.</p>
<div class="post">[<i>If you did that it wouldn&#8217;t be a console subsystem any more now would it. Okay, fine, consoles run unprivileged. Now any program can kill the console system. That doesn&#8217;t sound good either. (The window manager runs as privileged code after all and nobody complains about that.) But I didn&#8217;t design it and I wasn&#8217;t there when it was designed and I haven&#8217;t even had lunch with the people who did design it, so I&#8217;m just speculating. I think I should stop speculating now. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-583203">
				<div id="div-comment-583203" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Sitten Spynne</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071231-00/?p=23983#comment-583203">
			December 31, 2007 at 12:37 pm</a>		</div>

		<p>Would one be correct to assume that the reason why clipboard operations have to go through the console window&#8217;s menu is the reason discussed here? &nbsp;I&#8217;ve been cursing the lack of CTRL + V into the command prompt for a while and if this is the case I can at least accept that it&#8217;s not technically a good idea.</p>
<div class="post">[<i>It would suck if you couldn&#8217;t type Ctrl+V into any console programs, wouldn&#8217;t it? -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-583213">
				<div id="div-comment-583213" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Richard Avila</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071231-00/?p=23983#comment-583213">
			December 31, 2007 at 12:43 pm</a>		</div>

		<p>&quot;restricted administrator&quot; &#8212; what a lovely oxymoron. :)</p>
<p>The whole concept of the user being an administrator in the first place is flawed but that&#8217;s off topic.</p>
<ul>
<li>
<p>And yes, why does CMD need to run under CSRSS?</p>
</li>
</ul>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-583223">
				<div id="div-comment-583223" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">grumpy</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071231-00/?p=23983#comment-583223">
			December 31, 2007 at 12:44 pm</a>		</div>

		<p>So the (bastardized) &quot;solution&quot; is to run explorer as admin; I am only slightly joking. &nbsp;You know, eventually Windows will be so secure that we won&#8217;t be able to actually do anything useful with it.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-583233">
				<div id="div-comment-583233" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Triangle</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071231-00/?p=23983#comment-583233">
			December 31, 2007 at 12:45 pm</a>		</div>

		<p>[The bug in CSRSS was allowing data object code to execute. And that&#8217;s what was fixed in Vista. -Raymond]</p>
<p>The real bug is that implementing copy and paste requires letting a data object execute code. Since Vista is all about improving security, how come that hasn&#8217;t been changed? It looks like Microsoft is trying to fix the wrong thing.</p>
<div class="post">[<i>? Copy and paste works just fine in console windows. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-583243">
				<div id="div-comment-583243" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://innova-partners.com/blog/' rel='external nofollow' class='url'>Jon Canady</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071231-00/?p=23983#comment-583243">
			December 31, 2007 at 12:49 pm</a>		</div>

		<p>I don&#8217;t want to come off as a dick here or anything, but this is a standard theme (no pun) of Microsoft design.</p>
<p>Instead of sticking it out and finding a good way to theme command prompt windows while allowing messages like Drag and Drop to pass through securely, you hide behind the &#8220;that&#8217;s just how it is.&#8221; excuse.</p>
<p>Also, as Xenon already asked: why the devil do your command prompts have to be run by a special subsystem. &nbsp;All decent operating systems don&#8217;t have such crazy requirements about their terminal windows.</p>
<div class="post">[<i>GUI apps run under their own subsystem, too. But nobody complains about that. Go figure. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-583253">
				<div id="div-comment-583253" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">he who is not him</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071231-00/?p=23983#comment-583253">
			December 31, 2007 at 12:51 pm</a>		</div>

		<p>He didn&#8217;t design it, he wasn&#8217;t there when it was designed, and he hasn&#8217;t even had lunch with the people who did design it.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-583263">
				<div id="div-comment-583263" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Triangle</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071231-00/?p=23983#comment-583263">
			December 31, 2007 at 12:54 pm</a>		</div>

		<p>&quot;He didn&#8217;t design it, he wasn&#8217;t there when it was designed, and he hasn&#8217;t even had lunch with the people who did design it.&quot;</p>
<p>Nobody said he did. You&#8217;re misunderstanding the question, which goes along the lines of &quot;Why are you defending this obviously broken design, and why is more effort being put into working around it than fixing it?&quot;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-583273">
				<div id="div-comment-583273" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Triangle</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071231-00/?p=23983#comment-583273">
			December 31, 2007 at 12:55 pm</a>		</div>

		<p>[? Copy and paste works just fine in console windows. -Raymond]</p>
<p>I meant drag &amp; drop. Typo, sorry.</p>
<div class="post">[<i>Think of that the next time you drop an Excel chart into an email message. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-583283">
				<div id="div-comment-583283" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://innova-partners.com/blog/' rel='external nofollow' class='url'>Jon Canady</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071231-00/?p=23983#comment-583283">
			December 31, 2007 at 12:58 pm</a>		</div>

		<p>[GUI apps run under their own subsystem, too. But nobody complains about that. Go figure. -Raymond]</p>
<p>Nobody is complaining that CMD windows run under their own subsystem. &nbsp;Nobody cares. &nbsp;What people are complaining about is that (in XP) console windows aren&#8217;t themed or (in Vista) console windows don&#8217;t accept Drag and Drop messages. &nbsp;</p>
<p>The reasons given, however technically valid, seem like a cop-out. &nbsp;</p>
<p>And I still have no understanding of why CMD windows run in a different subsystem anyway. &nbsp;That&#8217;s probably a much more involved topic than befits a blog comment field though.</p>
<p>(This is not flamebait or anything, I&#8217;m not trying to start any Internet Drama, I&#8217;m just a curious use.)</p>
<div class="post">[<i>It&#8217;s called &#8220;defense in depth&#8221;. Sure there may not be something wrong today, but somebody might discover a clever attack tomorrow. Better not to leave open the opportunity. I find it fascinating that people hate it when Windows takes a defensive security posture while at the same time lambasting it for having taken a more trusting security posture in the past. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-583303">
				<div id="div-comment-583303" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">CGomez</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071231-00/?p=23983#comment-583303">
			December 31, 2007 at 1:19 pm</a>		</div>

		<p>Raymond, I humbly apologize for not making the sarcasm drip enough in my comment. &nbsp;I just could not believe the words posted by osexpert. &nbsp;It just reeked of a &quot;things were better when we had wood burnin&#8217; stoves&quot; argument. &nbsp;I do not have one word of disagreement with your post.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-583313">
				<div id="div-comment-583313" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Eric</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071231-00/?p=23983#comment-583313">
			December 31, 2007 at 1:25 pm</a>		</div>

		<p>[GUI apps run under their own subsystem, too. But nobody complains about that. Go figure. -Raymond]</p>
<p>Yes, but that doesn&#8217;t create interference since we (almost) only interact with GUI programs. The console is in many ways a GUI to the command interpreter and whatever magic emulates a DOS box. Why not have the message go to the GUI, and GUI &quot;types&quot; it in ?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-583323">
				<div id="div-comment-583323" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://innova-partners.com/blog/' rel='external nofollow' class='url'>Jon Canady</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071231-00/?p=23983#comment-583323">
			December 31, 2007 at 1:33 pm</a>		</div>

		<p>[It&#8217;s called &#8220;defense in depth&#8221;. Sure there may not be something wrong today, but somebody might discover a clever attack tomorrow. Better not to leave open the opportunity. I find it fascinating that people hate it when Windows takes a defensive security posture while at the same time lambasting it for having taken a more trusting security posture in the past. -Raymond]</p>
<p>This explains nothing.</p>
<p>Why are console windows treated differently? &nbsp;I understand that they are run at a higher security level and that tighter security is required, but nobody knows why the console is run at the higher security in the first place.</p>
<p>And again, the issue of usability is ignored. &nbsp;Could nobody come up with a way to determine if an object dropped on a command window is a file on a local or remote filesystem and if so insert the local/UNC path? &nbsp;Forgive my ignorance, I&#8217;ve never coded any OLE drag-and-drop stuff, but if simply checking the type of a dropped object and possibly generating a path to a file involves letting the object execute custom code, that seems a little brokeish. &nbsp;(Of course, I still don&#8217;t know why CMD windows have special privileges in the first place. &nbsp;If they didn&#8217;t the whole issue would be moot.)</p>
<p>(Again, if this comes off as personally offensive please do not take it that way, this is not my intent.)</p>
<div class="post">[<i>Please read up on OLE data transfer. The way to figure out what something is is to ask it, which is itself a risky operation. Console windows are all owned by the console subsystem, and since it&#8217;s a subsystem, it runs with high privileges. Could this be changed? Beats me. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-583333">
				<div id="div-comment-583333" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://innova-partners.com/blog/' rel='external nofollow' class='url'>Jon Canady</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071231-00/?p=23983#comment-583333">
			December 31, 2007 at 1:40 pm</a>		</div>

		<p>In case I wasn&#8217;t clear &#8212; Microsoft taking a more defensive security posture is great. &nbsp;There&#8217;s nothing inherently wrong with it. &nbsp;But when it gets in the users way, it&#8217;s not being done right.</p>
<p>For example, if installing an application as an unprivileged user takes anything more than typing my (or an administrator&#8217;s) password into a dialog, it&#8217;s broken. &nbsp;If certain types of windows run under different privilege levels, that&#8217;s fine. &nbsp;If I can&#8217;t drag things into that window, though, it&#8217;s broken. &nbsp;</p>
<p>(Yes, I&#8217;m aware that the &#8220;drag and drop a file into a console window&#8221; example is trivial, but it&#8217;s highly indicative of the type of decisions that seem to go into Microsoft products.)</p>
<div class="post">[<i>Low-security processes used to be able to send messages to high-security windows. It was declared a security vulnerability. See &#8220;shatter attack&#8221;. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-583343">
				<div id="div-comment-583343" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Tom</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071231-00/?p=23983#comment-583343">
			December 31, 2007 at 1:42 pm</a>		</div>

		<p>I&#8217;ve missed being able to drag and drop files onto elevated Visual Studio instances on Vista. &nbsp;It&#8217;s probably my biggest incentive to not run Visual Studio elevated. &nbsp;A lot of stuff in Visual Studio works without requiring elevation, but not everything.</p>
<p>I suppose, based on my last experience commenting here, there could be a checkbox in the group policy editor somewhere saying &quot;don&#8217;t screw with my drag and drop!&quot; :)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-583353">
				<div id="div-comment-583353" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">David Brooks</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071231-00/?p=23983#comment-583353">
			December 31, 2007 at 1:48 pm</a>		</div>

		<p>What&#8217;s more, console windows running under Vista <em>Basic</em> seem to have acquired an extra-thick and squared-off window border that reminds me of the worst pixel-hungry excesses of OSF/Motif (which I helped design).</p>
<p>Just sayin&#8217;.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-583363">
				<div id="div-comment-583363" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://gaia.iamcode.net' rel='external nofollow' class='url'>Matt Lewandowky</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071231-00/?p=23983#comment-583363">
			December 31, 2007 at 1:49 pm</a>		</div>

		<p>Heh. At least now I know that I gnash my teeth at intentional behavior. ;) It&#8217;s just too bad that the context menu doesn&#8217;t have a &quot;Copy full path&quot; item&#8230; That&#8217;d resolve the current many clicks to get something useable. (Of course, if things would stop using GUIDs, I wouldn&#8217;t have to worry quite so much about typos! ;) )</p>
<p>Maybe I&#8217;ll add such an item to my registry, now that I think about it&#8230; It would actually be more generally useful than drag-n-drop, anyhow. (Example: You&#8217;re editing a text document in Notepad. You decide to include the default path to a file. You drag, then drop. &quot;Oops&#8230;&quot;)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-583393">
				<div id="div-comment-583393" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">DriverDude</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071231-00/?p=23983#comment-583393">
			December 31, 2007 at 2:22 pm</a>		</div>

		<p>Thank you, Raymond, for explaining why colsone drag-drop stopped working in Vista! (Now why couldn&#8217;t the shell team explain this on their own blog when people complained last year&#8230;)</p>
<p>And thank you, MSFT, for actually doing something to improve security. I thought that &quot;Vista is the most secure OS&quot; line was just marketing, but I&#8217;m surprised things actually changed under the hood.</p>
<p>Of course I also want drag-n-drop into the cmd.exe, so now I&#8217;ve gotta figure out something that doesn&#8217;t involve CRSS&#8230;</p>
<p>&quot;You know, eventually Windows will be so secure that we won&#8217;t be able to actually do anything useful with it.&quot;</p>
<p>No, it will be so secure that it will be just like Unix. I say that half-jokingly, because the last time I checked, I couldn&#8217;t drag a file into a emulated DOS program either.</p>
<p>Being able to run a DOS program from the &#8217;90s is a good thing. But being able to &quot;trust&quot; that a closed-source &amp; propritary OS is reliable/secure out-of-the-box, is a much greater value.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-583423">
				<div id="div-comment-583423" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://gaia.iamcode.net' rel='external nofollow' class='url'>Matt Lewandowsky</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071231-00/?p=23983#comment-583423">
			December 31, 2007 at 2:36 pm</a>		</div>

		<p>Gah. How&#8217;d I miss your Windows Confidential on &quot;Explorer Doesn&#8217;t Do Text&quot;? One of the best things about Vista is that it seems almost everything that&#8217;s been &quot;taken away&quot; has been replaced by somethig &quot;new and shiny&quot;. And I&#8217;m not one to complain about new and shiny! (If it works&#8230;)</p>
<p>(For others who missed Raymond&#8217;s column, shift-right-click a file. See that new &quot;Copy as Path&quot;? That&#8217;s far more useful than drag-and-drop, in general, no? :D )</p>
<p>Regarding the subsystems, I believe the POSIX subsystem still quite exists in Vista. And the OS/2 subsystem started getting dismantled in 2000. (Though you could mount HPFS volumes if you wanted to take some files from NT 4&#8230;) I&#8217;m sure MSDN has a very good list of subsystems and their features, somewhere&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-aaron-margosis odd alt thread-odd thread-alt depth-1" id="comment-583433">
				<div id="div-comment-583433" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Aaron+Margosis' rel='external nofollow' class='url'>Aaron Margosis</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071231-00/?p=23983#comment-583433">
			December 31, 2007 at 2:39 pm</a>		</div>

		<p>@Matt Lewandowky: &nbsp;You want &quot;Copy full path&quot;? &nbsp;You&#8217;ve got it! &nbsp;Hold down the Shift key while right-clicking on a file or folder object in the right pane. &nbsp;See &quot;Copy as Path&quot; appear in the context menu. &nbsp;And if it&#8217;s a folder, you&#8217;ll also get &quot;Open Command Window Here&quot;. &nbsp;(Why doesn&#8217;t it appear by default? &nbsp;My guess is that it&#8217;s to avoid creating menu clutter for most users, but still make the options easily available for power users.)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-583443">
				<div id="div-comment-583443" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Keith Patrick</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071231-00/?p=23983#comment-583443">
			December 31, 2007 at 2:40 pm</a>		</div>

		<p>Is the same true of PowerShell? (I don&#8217;t have a machine running it handy right now, so I can&#8217;t check)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-aaron-margosis odd alt thread-odd thread-alt depth-1" id="comment-583453">
				<div id="div-comment-583453" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Aaron+Margosis' rel='external nofollow' class='url'>Aaron Margosis</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071231-00/?p=23983#comment-583453">
			December 31, 2007 at 2:43 pm</a>		</div>

		<p>@Keith Patrick: &nbsp;Yes, it&#8217;s true of any console windows &#8211; they&#8217;re all owned by csrss.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-583463">
				<div id="div-comment-583463" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Grant</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071231-00/?p=23983#comment-583463">
			December 31, 2007 at 3:25 pm</a>		</div>

		<p>[Instead of sticking it out and finding a good way to theme command prompt windows while allowing messages like Drag and Drop to pass through securely, you hide behind the &quot;that&#8217;s just how it is.&quot; excuse.]</p>
<p>I find it hilarious that people accuse Microsoft of not working hard enough to meet users&#8217; needs, when at the same time, others accuse Microsoft of working too hard to meet users&#8217; needs (for example, the amount of work that goes into ensuring 12 year old Windows apps work in Windows Vista).</p>
<p>If Microsoft devoted X person-hours to finding a way to safely theme the console window, someone else would ask why Microsoft didn&#8217;t spend those X person-hours fixing some other problem they perceive to be the biggest problem they encounter instead of making the console window look fancy, which is &quot;just fluff&quot;.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-583473">
				<div id="div-comment-583473" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Martin</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071231-00/?p=23983#comment-583473">
			December 31, 2007 at 3:29 pm</a>		</div>

		<p>[I find it fascinating that people hate it when Windows takes a defensive security posture while at the same time lambasting it for having taken a more trusting security posture in the past.]</p>
<p>Really? Fascinating? Which part of it is that you find fascinating? That people critize your because it takes long time to add basic security mechanisms, or because users get annoyed that they need to re-learn how your system works because you didn&#8217;t get it right when you did it the first time?</p>
<div class="post">[<i>Apparently, the only acceptable solution in your mind is to <a href="http://blogs.msdn.com/oldnewthing/archive/2006/04/03/567318.aspx" rel="nofollow">invent a time machine</a>. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-583493">
				<div id="div-comment-583493" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Triangle</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071231-00/?p=23983#comment-583493">
			December 31, 2007 at 3:44 pm</a>		</div>

		<p>If Microsoft devoted X person-hours to finding a way to safely theme the console window, someone else would ask why Microsoft didn&#8217;t spend those X person-hours fixing some other problem they perceive to be the biggest problem they encounter instead of making the console window look fancy, which is &quot;just fluff&quot;.</p>
<p>In case you haven&#8217;t noticed: This blog entry was about console windows. Complaining about a different problem would be off topic.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-583503">
				<div id="div-comment-583503" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">ccutrer</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071231-00/?p=23983#comment-583503">
			December 31, 2007 at 3:56 pm</a>		</div>

		<p>I don&#8217;t get it. &nbsp;CSRSS = Client/Server Runtime SubSystem&#8230; a.k.a. Win32 subsystem. &nbsp;There are several subsystems in windows, but few are actually used. &nbsp;lsass.exe (Local Security Authority System Service) and lsm.exe (Local Session Manager Service) run under the native API (i.e. they link to ntdll.dll, instead of kernel32.dll). &nbsp;There&#8217;s also the POSIX subsystem and the OS/2 subsystem that are very rarely used. &nbsp;CSRSS/Win32 is the subsystem used by 99.9% of all Windows applications, and essentially encompasses linking against kernel32.dll (always loaded immediately after ntdll.dll after starting a win32 process), user32.dll and gdi32.dll, as well as advapi32.dll. &nbsp;The actual csrss.exe process is run as SYSTEM, one process per session, and all other win32 processes communicate with the csrss.exe using LPC (Local Procedure Call). &nbsp;The csrss.exe process hosts GDI and USER objects (windows, menus, atom tables, brushes, device contexts, etc.). &nbsp;Some functionality is implemented in win32k.sys (win32 kernel mode). &nbsp; &nbsp; &nbsp;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-583513">
				<div id="div-comment-583513" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Martin</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071231-00/?p=23983#comment-583513">
			December 31, 2007 at 4:13 pm</a>		</div>

		<p>[Apparently, the only acceptable solution in your mind is to invent a time machine. -Raymond]</p>
<p>Sorry, you got it wrong &#8211; I have never complained about Microsoft forcing me to re-learn stuff. I think most of the changes you make are to the better and improving your software. I almost can&#8217;t wait to download the new Windows Vista version torrent.</p>
<p>What&#8217;s I described as fascinating (you&#8217;ll see if you re-read my post) is that you find the &#8220;complaining user&#8221;-behavior fascinating. You&#8217;re dealing with people. People complain if they have to do an extra mouse click, regardless of reason. End of fascination.</p>
<div class="post">[<i>Well, yeah, people aren&#8217;t rational. But it surprises me how that irrationality is manifested. How people complain about exactly the thing they demanded, and then proceed to justify the complaining with &#8220;Well the only way to make me stop complaining is to invent time travel.&#8221; -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-583523">
				<div id="div-comment-583523" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Foolhardy</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071231-00/?p=23983#comment-583523">
			December 31, 2007 at 4:17 pm</a>		</div>

		<p>Back when NT 3.1 was designed, the idea was that the OS would support multiple APIs, i.e. Win32, OS/2, and POSIX in a modular way. Each of these environment subsystems had a server process running as SYSTEM to coordinate the environment: csrss.exe, os2ss.exe and psxss.exe, respectively. These are launched by the session manager. See HKLMSYSTEMCurrentControlSetControlSession ManagerSubSystems</p>
<p>csrss seems to be a modular host for subsystem &nbsp;servers, loading DLLs to do most of the work. When the session manager launches csrss, it tells it to load basesrv.dll and winsrv.dll. winsrv.dll is called twice: UserServerDllInitialization (the window manager) and ConServerDllInitialization (the console server).</p>
<p>A process uses a console window by sending LPC messages to CSR.</p>
<p>I think some of the features of having a common, privileged console server is that it allows multiple processes to share a console window, even if they&#8217;re running at different privilege levels. SYSTEM integrity the only level that everyone can trust. Also, it makes it easier for a non-win32 GUI process to have a console window, since you don&#8217;t need to load user32.dll or be a full Win32 client if another process owns the actual window.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-583533">
				<div id="div-comment-583533" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Triangle</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071231-00/?p=23983#comment-583533">
			December 31, 2007 at 4:17 pm</a>		</div>

		<blockquote><p>
  People complain if they have to do an extra mouse click, regardless of reason. End of fascination.
</p></blockquote>
<p><a rel="nofollow" target="_new" href="http://en.wikipedia.org/wiki/Muscle_memory" rel="nofollow">http://en.wikipedia.org/wiki/Muscle_memory</a></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-583543">
				<div id="div-comment-583543" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">aargh</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071231-00/?p=23983#comment-583543">
			December 31, 2007 at 4:19 pm</a>		</div>

		<p>I think the reason people are complaining is that other OSes don&#8217;t have a console subsystem, so the only way to make a console window is to manually code it with windowing APIs. That&#8217;s why other consoles don&#8217;t let you switch the video card into text mode and back (Alt+Enter), let every program have its own command history, or have per-exe macros.</p>
<p>If Microsoft were to go and implement an xterm-style console, they would lose all the other features. Then everybody would say that they don&#8217;t care about drag-drop filenames, they just want their command history back.</p>
<p>So those that want to be able to execute arbitrary code in the console program are free to implement it themselves, or just use cygwin&#8217;s xterm. Everybody else will have to live with using the clipboard.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-dean-harding even thread-even depth-1" id="comment-583553">
				<div id="div-comment-583553" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Dean+Harding' rel='external nofollow' class='url'>Dean Harding</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071231-00/?p=23983#comment-583553">
			December 31, 2007 at 4:32 pm</a>		</div>

		<p>@Aaron Margosis: I understand that is changing, though&#8230; It&#8217;s only for version 1.0.</p>
<p>One of the things people are complaining about is that cmd.exe (which was introduced in NT 3.1) has some design flaws and that changing those design flaws would essentially require a re-write. PowerShell IS a rewrite, and so decoupling it from (legacy) cmd.exe would seem like a good move.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-583563">
				<div id="div-comment-583563" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">anonymous</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071231-00/?p=23983#comment-583563">
			December 31, 2007 at 4:41 pm</a>		</div>

		<p>[Apparently, the only acceptable solution in your mind is to invent a time machine. -Raymond]</p>
<p>Even that wouldn&#8217;t necessarily work, as it is commonly theorized that a time machine would not be able to travel further back in time than when it was built.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-583573">
				<div id="div-comment-583573" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">ccutrer</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071231-00/?p=23983#comment-583573">
			December 31, 2007 at 4:42 pm</a>		</div>

		<p>Ah yes&#8230; AttachConsole API function. &nbsp;So I suppose that the console object is owned by CSRSS. &nbsp;Multiple processes (cmd.exe) can share consoles (try having a Win32 GUI app attach to it&#8217;s parent console, and then write output to it; &nbsp;it gets interleaved with the output from cmd.exe). &nbsp;In this sense, the console is simply the character input and output. &nbsp;The commands are still processed by cmd.exe (or whatever sub-process is currently currently), presumably by using ReadConsoleInput API. &nbsp;It all begins to make sense.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-583583">
				<div id="div-comment-583583" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Gabe</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071231-00/?p=23983#comment-583583">
			December 31, 2007 at 4:48 pm</a>		</div>

		<p>The basic problem is that a process&#8217; message loop has to run somewhere. For an ordinary Windows program, the message loop obviously runs within the program&#8217;s process. For a console program, the choice is to run the loop within the program&#8217;s process or CSRSS&#8217;s process. Since a console program might not be Win32, the message loop has to run within CSRSS.</p>
<p>Of course you could then have a CSRSS console surrogate process, running as the console program&#8217;s users, whose job was to run the message loop. Implementing that would be a lot of work to just to get themed windows and drag-and-drop. Keep in mind that you would need a separate surrogate process for each user token that runs console programs, which would still prevent your non-admin programs from communicating with your admin programs, and such.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-583593">
				<div id="div-comment-583593" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Gazpacho</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071231-00/?p=23983#comment-583593">
			December 31, 2007 at 4:58 pm</a>		</div>

		<p>&quot;What defines these &quot;different subsystems&quot;? How are they different from each other?&quot;</p>
<p><a rel="nofollow" target="_new" href="http://www.google.com/search?q=%22nt+subsystem%22" rel="nofollow">http://www.google.com/search?q=%22nt+subsystem%22</a></p>
<p>NT was originally supposed to be the core of 32-bit OS/2, but Bill Gates also wanted something that could be adapted if OS/2 didn&#8217;t work out, which it didn&#8217;t. That&#8217;s why we now have one OS that can run Win32, Win16, and DOS apps at the same time.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-583623">
				<div id="div-comment-583623" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Mihai</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071231-00/?p=23983#comment-583623">
			December 31, 2007 at 5:39 pm</a>		</div>

		<p>&#8220;How people complain about exactly the thing they demanded&#8221;</p>
<p>You are mixing things. People ask better security, and complain about loosing drag-and-drop. Not the same thing.</p>
<p>It might be a technical reason why creating a folder in &#8220;Program Files&#8221; asks for permission 4 times. But from user perspective is still idiotic.</p>
<p>When adding something breaks somethings else it means the system is brittle.</p>
<div class="post">[<i>They may not look like the same thing but they are connected. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-583643">
				<div id="div-comment-583643" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Miral</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071231-00/?p=23983#comment-583643">
			December 31, 2007 at 6:16 pm</a>		</div>

		<p>I&#8217;m a bit dubious about console handling in CSRSS anyway. &nbsp;I was recently testing a console app in a VM and discovered that simply running the app could quite repeatably cause the entire VM to spontaneously reboot.</p>
<p>Turned out the problem was with the Vista manifest (the VM was running unpatched XP SP2), which update KB926255 fixes. &nbsp;But arguably the console windows ought to be isolated better than this, so that at worst the single console window affected will close without taking out the whole computer.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-583663">
				<div id="div-comment-583663" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">jd2066</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071231-00/?p=23983#comment-583663">
			December 31, 2007 at 7:09 pm</a>		</div>

		<p>Reading this post makes me wonder how WindowBlinds could theme console windows in XP.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-jamesnt even thread-even depth-1" id="comment-583673">
				<div id="div-comment-583673" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/JamesNT' rel='external nofollow' class='url'>JamesNT</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071231-00/?p=23983#comment-583673">
			December 31, 2007 at 7:48 pm</a>		</div>

		<p>jd2066,</p>
<p>Because WindowsBlinds breaks about every rule written regarding how to write software for Windows.</p>
<p>JamesNT</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-583683">
				<div id="div-comment-583683" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">ChrisMcB</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071231-00/?p=23983#comment-583683">
			December 31, 2007 at 8:02 pm</a>		</div>

		<p>I don&#8217;t get it. People want to use GUI concepts on a COMMAND PROMPT? A Commend Prompt is NOT a GUI.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-583703">
				<div id="div-comment-583703" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">BOFH</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071231-00/?p=23983#comment-583703">
			December 31, 2007 at 9:17 pm</a>		</div>

		<p>I didn&#8217;t even realize that any drag&#8217;n&#8217;drop-feature was gone in the Vista Command Prompt.</p>
<p>The question is what it was doing there in the first place, the command prompt is by definition a keyboard input interface.</p>
<p>I have just kept pressing alt+space,e,p,enter when I want to insert text from the clipboard into my command prompt, and that works the same in Vista, just as it should.</p>
<p>An annoyance related to this, is the new &quot;address bar&quot; or whatever it&#8217;s called, in Vista Windows.</p>
<p>It doesn&#8217;t show and automatically highlight the text of the path to that window anymore.</p>
<p>Now when I want to add a long and cumbersome path into a command prompt, there is an additional step:</p>
<ol>
<li>Press alt+tab from the command prompt to the window in question.</li>
<li>
<p>Press tab until focus is moved to the address bar.</p>
</li>
<li>
<p>(new step) Press enter to change the field to show the actual path and automatically highlight the whole string.</p>
</li>
<li>
<p>Press ctrl+c to copy it to the clipboard.</p>
</li>
<li>
<p>Press alt+tab back to the command prompt.</p>
</li>
<li>
<p>Press alt+space,e,p,enter to insert the path into the command prompt.</p>
</li>
</ol>
<p>Sounds like a lot of typing, you think.</p>
<p>Onlookers just see a brief flickering of windows on the screen for a second when I do this, it&#8217;s fast and instinctive.</p>
<p>Although now the additional step is forcing me to learn new tricks whenever I have to touch a Vista box.</p>
<p>I usually work with Windows Server and don&#8217;t have Vista on any main work or home computers.</p>
<p>If I can find a way to make the address bar default to the original view, I would be more willing to switch to Vista, it&#8217;s the last UI-annoyance I haven&#8217;t found a solution for.</p>
<p>If anyone has a suggestion on how to accomplish this, I&#8217;d be glad to hear it.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-583713">
				<div id="div-comment-583713" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Consolas</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071231-00/?p=23983#comment-583713">
			December 31, 2007 at 9:17 pm</a>		</div>

		<p>You may not be able to use Ctrl+V to paste into a Command Prompt but you can still paste using only the keyboard, it just takes a couple more keystrokes: Alt+Space E P.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-583723">
				<div id="div-comment-583723" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Max</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071231-00/?p=23983#comment-583723">
			December 31, 2007 at 9:36 pm</a>		</div>

		<p>BOFH,</p>
<p>&quot;It doesn&#8217;t show and automatically highlight the text of the path to that window anymore.&quot;</p>
<p>Just hit Alt+d. It&#8217;ll focus on that address bar just like in IE and will highlight the whole string for you. ;)</p>
<p>As much as I use keyboard shortcuts and hot keys I would hate to keep hitting tab or alt+tab to get to the address bar.</p>
<p>Max</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-583733">
				<div id="div-comment-583733" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">jd2066</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071231-00/?p=23983#comment-583733">
			December 31, 2007 at 9:43 pm</a>		</div>

		<p>@JamesNT: Really? How do you know that? From what I&#8217;ve read Stardock is a certified Microsoft partner and WindowBlinds is Windows Logo Certified so it doesn&#8217;t seem like it could be breaking every rule on writing Windows software.</p>
<div class="post">[<i>Logo certification doesn&#8217;t mean that it has been mathematically proven to follow every rule for writing Windows software. There are an infinite number of &#8220;dubious ideas&#8221; and only a finite number of logo rules. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-583743">
				<div id="div-comment-583743" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">osexpert</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071231-00/?p=23983#comment-583743">
			December 31, 2007 at 9:48 pm</a>		</div>

		<p>I see many say its ok to remove existing functionality when security is improved. If so, i hope MS removes IE, Messenger and ActiveX next. Most security problems solved.</p>
<p>They should have fixed it the hard way by fixing csrss. This old relic from the microkernel wannabe days, where win32 once lived, deserve to die. So long old pal. RIP</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-583383">
				<div id="div-comment-583383" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Karellen</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071231-00/?p=23983#comment-583383">
			December 31, 2007 at 2:20 pm</a>		</div>

		<p>OK, this may be one of those questions that I should know the answer to before reading this blog, but I&#8217;m not sure so here goes.</p>
<p>What defines these &#8220;different subsystems&#8221;? How are they different from each other?</p>
<p>Is it like a fixed enumeration of possible subsystems in the kernel (e.g. console, gui) and every process gets assigned one? If so, what does the kernel subsequently *do* with this information? (How is it assigned? Is it defined by the executable type)</p>
<p>Looking around msdn, I get a number of different hits for subsystem (disk subsystem, SUA, MAPI subsystem, Exchange event notification subsystem, print subsystem) that seem to be talking about a number of different types of thing.</p>
<p>Links to a relevant MSDN (or other) page giving more details about what we&#8217;re actually talking about here gladly appreciated.</p>
<div class="post">[<i>I don&#8217;t know either, but it is my recollection that there used to be more subsystems (POSIX, OS/2)&#8230; -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-583753">
				<div id="div-comment-583753" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">joel</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071231-00/?p=23983#comment-583753">
			December 31, 2007 at 10:24 pm</a>		</div>

		<p>Someone above misunderstood how terminals work on Unix (at least modern Unix). &nbsp;It&#8217;s not that different from Windows, but it allows ANY process to be the equivalent of CSRSS.EXE. &nbsp; Basically, there is a file called /dev/ptmx (the pseudo-terminal master) which can be opened by a terminal emulator. &nbsp;This operation creates a file in /dev/pts (usually), such as /dev/pts/0. &nbsp;A program that wishes to use the terminal opens /dev/pts/0. &nbsp;All communication occurs over the pipe between /dev/pts/0 and the terminal master (stdin and stdout). &nbsp;Additionally, ioctls can be used to modify the workings of the terminal.</p>
<p>The nice feature of this system is that anybody can create a console and connect any number of programs to it (by manipulating their stdin and stdout file descriptors to point to /dev/pts/X). &nbsp;Consoles can be contained with consoles, such as is used with SCREEN. &nbsp;By changing permissions on the /dev/pts/X files, you can control access on a user/group basis to the terminal.</p>
<div class="post">[<i>And to read from the screen buffer you&#8230; oh wait, you can&#8217;t read from the screen buffer. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-583763">
				<div id="div-comment-583763" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">BOFH</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071231-00/?p=23983#comment-583763">
			January 1, 2008 at 12:17 am</a>		</div>

		<p>&gt; Just hit Alt+d. It&#8217;ll focus on that address bar just like in IE and will highlight the whole string for you. ;)</p>
<p>Ah yes, much better than the stupid F4, and it works in WinXP too.</p>
<p>But still a deviation from my finely honed, current practise&#8230;</p>
<p>&gt; As much as I use keyboard shortcuts and hot keys I would hate to keep hitting tab or alt+tab to get to the address bar.</p>
<p>It&#8217;s actually just one tab in XP to switch to the address bar, and hitting tab is easier than moving my thumb to Alt and simultaneously reaching for D. :)</p>
<p>Well, I guess I&#8217;ll have to learn some new fastfinger-routines eventually, and this Alt+D looks like a good alternative, since it works in current Windows Server and XP too.</p>
<p>I couldn&#8217;t handle having different keyboard shortcuts in different editions of Windows, so that seems like a good compromise.</p>
<div class="post">[<i>I can&#8217;t believe anybody used anything <u>other than</u> Alt+D to get to the address bar. That&#8217;s why the D is underlined in &#8220;A<u>d</u>dress&#8221;&#8230; -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-583603">
				<div id="div-comment-583603" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://gaia.iamcode.net' rel='external nofollow' class='url'>Matt Lewandowsky</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071231-00/?p=23983#comment-583603">
			December 31, 2007 at 5:18 pm</a>		</div>

		<p>aargh,</p>
<p>You must not use Vista much, else you&#8217;d be familiar with &quot;This system does not support fullscreen mode&quot; by now. ;)</p>
<p>But you brought up the core of the issue: Windows != X. Oddly, I never seem to *need* to drag/drop onto console windows in OS/2 (never thought about why, but now I&#8217;m curious as to how my usage pattern differs&#8230;), so I don&#8217;t know what its behavior is off the top of my head. (OS/2 would really be the only fair comparison here, considering the shared, sordid, history.)</p>
<p>But, as I said/implied/whatever, in an earlier comment: I prefer being able to get the path easily over being able to drag/drop the icon. After all, dragging an icon into an app usually implies that you want the app to &quot;open&quot; the file/folder. And that is most definitely not what one wants their command interpreter to do with $randomFile, as a rule&#8230;</p>
<p>So, in this case, Microsoft&#8217;s done the &quot;Right Thing&quot; by not ony removing drag and drop into consoles, but by adding a new (if obscure) feature which is actually more powerful overall.</p>
<p>(If only I could have a full-screen command prompt again. And if only mode.com allowed one to set the number of lines, still&#8230;)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-583633">
				<div id="div-comment-583633" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">josh</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071231-00/?p=23983#comment-583633">
			December 31, 2007 at 5:58 pm</a>		</div>

		<p>[It would suck if you couldn&#8217;t type Ctrl+V into any console programs, wouldn&#8217;t it? -Raymond]</p>
<p>That would happen if Ctrl+V was implemented at the console layer, but you could still get Ctrl+V at the command prompt by implementing it in cmd.exe. &nbsp;It wouldn&#8217;t work for all console-mode applications, but that&#8217;s how it works for windowed apps anyway.</p>
<p>But I guess it might be important *somewhere* to be able to enter character code 22 on the command line someplace.</p>
<div class=post>[<i>Are you willing to give up command history for this feature? (Command history uses line mode, but reacting to Ctrl+V at the time of entry can&#8217;t be done in line mode; it would require character mode.) -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-583773">
				<div id="div-comment-583773" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Nathan</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071231-00/?p=23983#comment-583773">
			January 1, 2008 at 2:20 am</a>		</div>

		<p>I have a question..</p>
<p>Why doesn&#8217;t the microsoft symbol server include symbols for ALL versions of dlls. It seems to only have them for RETAIL builds.</p>
<p>Nathan</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-583653">
				<div id="div-comment-583653" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Gazpacho</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071231-00/?p=23983#comment-583653">
			December 31, 2007 at 6:30 pm</a>		</div>

		<p>&quot;But I guess it might be important *somewhere* to be able to enter character code 22 on the command line someplace.&quot;</p>
<p>Only in little-used programs like emacs ;)</p>
<p>You can&#8217;t seriously believe that &quot;that&#8217;s how it works for windowed apps&quot; is an acceptable answer for programs that, by definition, want nothing to do with windowing.</p>
<p>(and we haven&#8217;t even mentioned the problems of not being able to type ctrl-C)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-583793">
				<div id="div-comment-583793" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Pim</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071231-00/?p=23983#comment-583793">
			January 1, 2008 at 4:37 am</a>		</div>

		<p>Most of the postings on this blog remind me of Douglas Adams&#8217; &#8220;story of reason.&#8221; The parallel here is that there are always very good reasons behind every lamentable behavior in Windows, reasons that sometimes span back decades or can be linked to earlier criticisms. It is somewhat stunning to see how a chain of completely sensible decisions can, over time, lead to ludicrous results.</p>
<p>Pointing back to these decisions sounds like a tempting way to defend the current state of affairs, but it carries the presumption that each of those decisions was the only correct one to make. Since there are (and have been) plenty of desktops that implement a command line window that accepts DND without running into even theoretical security issues, this presumption cannot be held true.</p>
<p>What this boils down to is, I think, the level of conservatism that has been upheld over the years building Windows. I can appreciate the &#8220;damned if we don&#8217;t, damned if we do&#8221; scenarios you have to deal with when juggling a large installed base, but the choice between &#8216;backwards compatible&#8217; and &#8216;completely changing everything&#8217; is never binary. Assuming that it is so leads to shipping a command prompt that can still run lode runner but can&#8217;t accept drag&amp;drop.</p>
<p>Happy new year!</p>
<div class="post">[<i>Drag and drop is built out of many small pieces. At the top is the console window, but underneath that is OLE, and underneath that is COM, and underneath that is marshalling&#8230; Sure the console might say &#8220;Okay, screw it, this is out of control. We&#8217;re going to use a different drag and drop model that doesn&#8217;t have as many risks&#8221; but how do you get all other programs to switch to the new model? Everybody thinks that the console gets to decide how drag and drop works (and therefore can redesign drag and drop to avoid whatever problems it&#8217;s worried about) but in fact it&#8217;s the top of a very complicated food chain. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-583803">
				<div id="div-comment-583803" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Pim</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071231-00/?p=23983#comment-583803">
			January 1, 2008 at 4:53 am</a>		</div>

		<p>[And to read from the screen buffer you&#8230; oh wait, you can&#8217;t read from the screen buffer. -Raymond]</p>
<p>That&#8217;s an implementation issue. It&#8217;s not hard to imagine a Unix console device that would allow reading back the screen. Nobody bothered because unix console software sort of builds on the assumption that it&#8217;s talking to a dumb terminal. Programs that have a valid need for knowing what is on the screen tend to do this by remembering what they printed to it. Added advantage is that this concept also works sanely over a serial line (or an interactive network connection), pray tell how do you read from the screen buffer on the other side of a serial link?:).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-583813">
				<div id="div-comment-583813" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://gaia.iamcode.net' rel='external nofollow' class='url'>Matt Lewandowsky</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071231-00/?p=23983#comment-583813">
			January 1, 2008 at 4:55 am</a>		</div>

		<p>Joel, while your analysis is (somewhat) correct, it&#8217;s not really relevant. The appropriate &quot;Unixy&quot; equivalent to a &quot;Command Prompt window&quot; would be an &quot;xterm&quot;.</p>
<p>Since one cannot drag-and-drop files into an xterm (I&#8217;m ignoring Konsole/gnome-terminal/et al, as they are not directly comparable), the argument could be made that there is now &quot;feature-parity&quot; between platforms. Indeed, losing drag/drop to gain &quot;Copy as Path&quot;, may well be worth it, as the former Command Prompt behavior differed from practically every other Windows application.</p>
<p>Since the Command Prompt can&#8217;t &quot;open&quot; a file, the drag-n-drop metaphor is broken to start with. It was simply a convenience for those of us who really needed something like &quot;Copy as Path&quot;. Now that we have &quot;Copy as Path&quot;, I see little reason to mourn the loss of something which doesn&#8217;t make much sense when analyzed.</p>
<p>BOFH, Alt-D ought to work on 9x, as well&#8230; And NT 4 if you manage to get Active Desktop installed. ;) It is generally better to rely upon &quot;official&quot; shortcuts rather than trying to remember the tab order in each OS revision. Less thinking, more speed. I&#8217;m sure that once you&#8217;re used to it, Alt-D will be faster than thinking &quot;Which OS am I on again?&quot; :)</p>
<p>Osexpert, that comment&#8217;s irrelevant. Why mourn the loss of functionality which was essentially &quot;broken&quot;? Especially when we can celebrate that security enhancements made it finally disappear? And, by your reasoning presented, Microsoft may as well just pull executables from the OS altogether. IMO, locking down the environment&#8217;s saner than ripping things out wholesale. (Guess what Microsoft&#8217;s done with Vista? Hint: it takes specific elevation and confirmation to install a new ActiveX control&#8230;)</p>
<p>And, RE: microkernels, Windows is still a &quot;macrokernel&quot;, even though the importance of the Win32 subsystem increased in NT 4&#8230; At least they&#8217;re starting to emphasize the POSIX subsystem again&#8230; (The UNIX subsystem is really the POSIX subsystem, right? I&#8217;m not running Ultimate on this machine, to check&#8230;)</p>
<p>I know Raymond&#8217;s much more capable than I am of describing these things. But I felt like responding. ;)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-583823">
				<div id="div-comment-583823" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">aargh</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071231-00/?p=23983#comment-583823">
			January 1, 2008 at 5:14 am</a>		</div>

		<p>Matt Lewandowsky: I don&#8217;t use Vista much, but the very first time I used it, I did get a full-screen console. It&#8217;s a question of the graphics driver &#8212; some can do it, some can&#8217;t.</p>
<p>osexpert: How do you propose &quot;fixing&quot; csrss?</p>
<p>joel: Consoles (the UI element, not the OS construct) are completely different on Unix than they are on Windows. On Unix, some process (like xterm) acts as a terminal emulator and draws the window. It sends mouse commands and keystrokes to the child program via the pty hooked up to the child&#8217;s stdin. The child sends cursor positioning and color change commands along with output on stdout which comes in to the emulator&#8217;s pty. On Windows, CSRSS draws all the console windows. There are APIs which do things like get mouse events and set cursor position, which are separate from stdin and stdout.</p>
<p>These fundamental differences manifest like this: If a Win32 program wants to open a console window, it calls AllocConsole() or AttachConsole(). A Unix program has to be attached to a console when it&#8217;s started in order to get its stdout displayed. If a Win32 program in the middle of a pipeline wants to change the window title (perhaps to report progress), it calls SetConsoleTitle(). A Unix program must send control codes to stdout to change the window title, but a process in the middle of a pipeline does not have its output going to the terminal emulator, so it cannot change the title.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-583833">
				<div id="div-comment-583833" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Pim</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071231-00/?p=23983#comment-583833">
			January 1, 2008 at 5:15 am</a>		</div>

		<p>Matt, it&#8217;s not hard to imagine a way to implement drag&amp;drop in an event-based windowing system in a way that the terminal window can do something sensible with it. I have no idea how windows does it internally, but the sanest approach would be to implement a DROP event that includes a &#8216;content-type&#8217; tag. UI regions that can receive drops can then set some properties to indicate what kind of content they accept. Within that set-up, dropping a file would trigger an event with a &#8216;url&#8217; content-type. The terminal window could then handle drops of this type by sending the path as keyboard events to the terminal layer. It wouldn&#8217;t surprise me if this is exactly what happens if you drag a file to, say, gnome-terminal on a Linux desktop.</p>
<p>Now I&#8217;m sure that stuff like OLE complicated drag&amp;drop under Windows, but surely the basic scenario of dragging a file wouldn&#8217;t need to be so complicated?</p>
<div class="post">[<i>So there should be two types of drag and drop, one for files and one for everything else? OLE data objects already have &#8220;content types&#8221; (called &#8220;formats&#8221;), so it already does what you want. The issue is that it also does more, and it&#8217;s the &#8220;more&#8221; that is risky. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-583843">
				<div id="div-comment-583843" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.apptranslator.com' rel='external nofollow' class='url'>Serge Wautier</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071231-00/?p=23983#comment-583843">
			January 1, 2008 at 5:40 am</a>		</div>

		<p>Raymond,</p>
<p>Thanks for answering my question from the suggestion box.</p>
<p>I don&#8217;t quite get the logic that backs up your rant about people not checking if their topic is already in the box.</p>
<p>1. The Serge Wautier set doesn&#8217;t include the Everybody set.</p>
<p>2. A double suggestion may also mean that the poster wasn&#8217;t able to find the first occurence of that suggestion. Which is the case here. I carefully re-did the exercice and failed again.</p>
<p>You may conclude that people are stupid since they&#8217;re not able to find a related topic worded using different keywords in a list of 400+ posts (although I would send you back to #1 above). </p>
<p>But I reject your conclusion about me being negligent. It&#8217;s just plain wrong. And it&#8217;s unfair to all people who do their homework, including those who are better than me at doing it.</p>
<p>Happy New Year,</p>
<div class="post">[<i>I argue that it&#8217;s my readers&#8217; fault for failing to exercise restraint in posting suggestions that has led to the 400+ entry suggestion box. That&#8217;s why I closed the suggestion box. And yes, I know that Serge Wautier != everybody. It&#8217;s called rhetoric. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-583853">
				<div id="div-comment-583853" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://gaia.iamcode.net' rel='external nofollow' class='url'>Matt Lewandowsky</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071231-00/?p=23983#comment-583853">
			January 1, 2008 at 5:42 am</a>		</div>

		<p>aargh: AFAIK, no LDDM drivers support full-screen consoles. If you happen to be running an older &quot;XP-compliant&quot; driver, you can certainly get a full-screen console. But the expense is Vista-only functionality&#8230;</p>
<p>Pim: But the point I was trying to make is that drag-and-drop of an icon into a program 99.999% of the time means, &quot;Hey, Program! Open this file for me, would ya?&quot; I think it&#8217;s broken for that 0.001% of the time to be your console. It&#8217;s counter-intuitive. Practically every other program that can&#8217;t &quot;open&quot; whatever file you drop onto it will simply silently refuse or pop up a dialog telling you so.</p>
<p>Since a console window should not be actually opening files (on any platform!), Vista&#8217;s behavior is now consistent with the rest of the OS. Since Microsoft&#8217;s provided a way to achieve the previously-missing functionality that drag-n-drop worked around, I welcome the change.</p>
<p>No more &#8216;echo &lt;drag-n-drop file with obnoxious path&gt; &gt; %TEMP%1234.txt&#8217; and opening the file in a buffer and copy/pasting that into the text document I&#8217;m editing, for example. Sadly, that is faster than the GUI alternative of showing the file&#8217;s location, copying that into my editor, then copying the filename into my editor.</p>
<p>Generally, I need a file&#8217;s path in more than just a command prompt. So, the new way of doing it is far more flexible, and welcomed by me.</p>
<p>Also, as mentioned earlier, your approach still requires &quot;opening&quot; the file to dicover what sort of content it is. I personally want to trust my console windows, so I&#8217;m not all that big on them accessing arbitrary files directly (or even indirectly&#8230;). That&#8217;s what the interpreter&#8217;s for, not the console itself.</p>
<p>And just because GNOME does something doesn&#8217;t make it right. (See &quot;they are not directy comparable&quot;&#8230;) I could point out dozens of things they do &quot;wrong&quot;, and I try to only use GNOME on Solaris so my experience is purposely limited&#8230; (And even then, I try to do everything under CDE&#8230;)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-583863">
				<div id="div-comment-583863" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Pim</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071231-00/?p=23983#comment-583863">
			January 1, 2008 at 5:58 am</a>		</div>

		<p>Matt, my point wasn&#8217;t that Gnome was doing everything right. I haven&#8217;t used it in ages, X11 depresses me. I was just laying out a way you could implement drag&amp;drop of files that would allow any program to decide for itself what the &#8216;proper thing&#8217; would be. In the case of file drags, you are right that the type of the file itself also needs consideration. It would still make more sense to take that meta-data into consideration than to go for a model where you bluntly dump the binary contents of the file on the receiving application. To me, a more sensible interpretation of a drop-event would be &quot;perform the most sensible action for the combination of object type, receiving application and drop area&quot;. That doesn&#8217;t always have to mean &quot;open for editing&quot;.</p>
<p>The fact that there is a workaround doesn&#8217;t make up for the loss of coherence introduced. In my experience, the usability of drag&amp;drop is a direct function of the user&#8217;s success ratio in dragging things in the interface and having the expected thing happen. This is one area where the Mac has always had an edge over windows and X11. At the risk of making my own anecdotal experience here bigger than it is worth, on X11 and Windows I find myself rarely bothering with drag&amp;drop precisely because I can&#8217;t predict whether it will work, whereas on Mac (classic or OSX) I use drag&amp;drop without restraint.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-583873">
				<div id="div-comment-583873" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">BOFH</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071231-00/?p=23983#comment-583873">
			January 1, 2008 at 6:04 am</a>		</div>

		<blockquote><p>
  I can&#8217;t believe anybody used anything other than Alt+D to get to the address bar. That&#8217;s why the D is underlined in &quot;Address&quot;&#8230; -Raymond
</p></blockquote>
<p>You&#8217;re right, it is.</p>
<p>Unfortunately I came to use the current method from another perspective.</p>
<p>I was and am a big tab user already, for example by pressing ctrl+esc,esc to put focus on the Start button, and from there cycle through the toolbars, start bar, notification area (pressing shift+F10 on anything needed to quit or change here), to the desktop, and back to the Start button again.</p>
<p>And then also via the tab command line expansion, which I would manually enable in WinNT and Win2K, but luckily it has been enabled since then.</p>
<p>Alt+[shift+]tab and ctrl+[shift+]tab is second nature since long ago.</p>
<p>About six years ago I trained myself off from using the rather awkward alt+F4 to the much more ergonomically convenient ctrl+w instead.</p>
<p>That took strangely enough a long while to get used to.</p>
<p>On the other hand, I was trained on Windows 3 + 3.11 back in 1992, where a part of the final exam was a practical test where I had to operate Windows without a mouse through a series of scenarios, and those old ways have stuck with me ever since. :)</p>
<p>I almost never use anything else than alt+space,x and alt+space,enter to switch windows to and from maximized view, for example.</p>
<p>Call me old-fashioned if you like&#8230;</p>
<p>Another annoyance in Vista is that pressing ctrl+esc,esc,shift+F10 no longer produces a right-click menu on the Start button.</p>
<p>I use the method to quickly gain access to the personal- and the all users-profiles.</p>
<p>The Start button is not even a button anymore in Vista, it&#8217;s some strange oblong that doesn&#8217;t give any indication at all if it has focus or not.</p>
<p>And what&#8217;s with backspace no longer navigating the window back through the folder tree?</p>
<p>Sorry that I&#8217;m getting way off-topic here, but all these details that have suddenly changed in Vista make you wonder if they are the result of careful study of focus groups, or just a bunch of young whippersnappers at MS let to roam free and change whatever they wanted in the product.</p>
<p>I&#8217;m surprized that there still hasn&#8217;t been a TweakUI released for Vista, it&#8217;s sorely needed.</p>
<p>Just the other day I noted that I needed the &quot;rebuild icons&quot; feature from TweakUI on my only Vista notebook, when I noticed that it was impossible to create a shortcut from a VPN-connection to the desktop and have the shortcut maintain its icon after a reboot.</p>
<p>It reverts back to the old &quot;no icon&quot; icon from the Windows 3 Program Manager every time.</p>
<p>Nostalgic perhaps, but certainly unwanted.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-583883">
				<div id="div-comment-583883" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">jd2066</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071231-00/?p=23983#comment-583883">
			January 1, 2008 at 6:06 am</a>		</div>

		<p>@Matt Lewandowsky:</p>
<blockquote><p>
  I&#8217;m ignoring Konsole/gnome-terminal/et al, as they are not directly comparable
</p></blockquote>
<p>Just wondering, why not?</p>
<blockquote><p>
  just because GNOME does something doesn&#8217;t make it right.
</p></blockquote>
<p>It&#8217;s not just gnome, Konsole supports DND and it&#8217;s a KDE app.</p>
<blockquote><p>
  everything under CDE&#8230;
</p></blockquote>
<p>Do you mean KDE?</p>
<p>@Raymond: Why do you respond inside the original comment instead of using a separate comment?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-583893">
				<div id="div-comment-583893" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Pim</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071231-00/?p=23983#comment-583893">
			January 1, 2008 at 6:14 am</a>		</div>

		<p>Matt, I&#8217;m also interested in your point about xterm being somehow different from gnome-terminal or Konsole. I didn&#8217;t actually see that statement the first time because it doesn&#8217;t seem to make sense. Both are applications that open a pseudo-terminal and emulate a terminal proper in X11. The only difference is that Konsole and gnome-terminal adhere to the Open Desktop standards set for things like drag-and-drop where xterm is an example program that came with X11 back when hippies were in vogue. Am I missing something?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-583903">
				<div id="div-comment-583903" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Gabe</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071231-00/?p=23983#comment-583903">
			January 1, 2008 at 6:37 am</a>		</div>

		<p>Pim, you have correctly surmised how dragging a file works. The difference is that it was decided for Vista that high-integrity windows would not accept input from low-integrity windows.</p>
<p>That means your malware can&#8217;t send keystrokes saying &quot;uninstall AntiVirus&quot; to the elevated command prompt. Unfortunately it also means that Explorer can&#8217;t send a message saying that the user just dropped &quot;C:filename.exe&quot; to the command prompt. Afterall, what if the malware had infected Explorer and C:filename.exe was the command to uninstall your AV software?</p>
<p>This is different from other implementations (like X) in that the console windows are handled by a high-integrity process in Windows and by a regular user process under X; and X doesn&#8217;t have a way of preventing an attacking process from sending malicious messages (like &quot;rm -rf /&quot;) to unsuspecting terminal windows with root privs. Presumably X doesn&#8217;t have this restriction because such attacks aren&#8217;t common. We used to do this sort of thing in college to people whose xhosts were misconfigured.</p>
<p>As I said before, all it would take is to run the console message loop inside a process that runs as the current user to get themed windows and drag-n-drop. I just don&#8217;t think it&#8217;s worth the effort for such trivial features, though.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-583913">
				<div id="div-comment-583913" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Pim</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071231-00/?p=23983#comment-583913">
			January 1, 2008 at 6:51 am</a>		</div>

		<p>Gabe,</p>
<p>Whether it is or isn&#8217;t worth it is always a hard choice to make. I would personally err on the side of DND-coherence. But perhaps I don&#8217;t exactly understand the security implications here. Do DOS prompts run at a higher privilege level? Does that mean there&#8217;s no DOS prompt for non-administrators? In the context of X11 there would be little point in subverting a user xterm; if the user can delete a file a simple call to unlink() would be more straightforward, unless if the user could be enticed to have a root shell open.</p>
<p>I somehow get the feeling that a large source of this problem is the fact that no real distinction has ever been made between &quot;the application you use to run legacy DOS apps on&quot; and &quot;the command line interface to Windows&quot;.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-583933">
				<div id="div-comment-583933" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Mihai</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071231-00/?p=23983#comment-583933">
			January 1, 2008 at 7:14 am</a>		</div>

		<p>A happy new year!</p>
<p>And sorry for my annoying comments.</p>
<p>I love your blog, I really do. And I am ok when you try to defend MS, I really do.</p>
<p>But don&#8217;t go overboard. Don&#8217;t serve your readers some stuff that you would also not take in a rational discussion.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-583943">
				<div id="div-comment-583943" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Gabe</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071231-00/?p=23983#comment-583943">
			January 1, 2008 at 7:16 am</a>		</div>

		<p>Pim, as was mentioned before, the command prompt program (cmd.exe) runs in a different process from the message loop (csrss.exe). This is much the same as in X11 where maybe your shell (csh) runs in a different process from your terminal emulator (xterm).</p>
<p>The difference here is that CSRSS runs with system privileges, so programs that run as you (like Explorer) can&#8217;t talk to it. Why is the system designed that way? I don&#8217;t know, but it means that implementing d-n-d is a whole lot more trouble than it&#8217;s worth.</p>
<p>You could ask similar questions about X: Why does my X server have to run as root? Why can&#8217;t I get a console to switch between windowed and fullscreen mode? Why does my screen become unlocked when my screensaver crashes? Why does my screensaver have to run as root? And the answer to them all is the same: it&#8217;s because of an architectural decision that&#8217;s too difficult to change.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-583953">
				<div id="div-comment-583953" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Pim</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071231-00/?p=23983#comment-583953">
			January 1, 2008 at 7:19 am</a>		</div>

		<p>To be fair, after giving Gabe&#8217;s explanation a bit of thought, I can see how from where we are now this choice could even be defended as the <em>most</em> sensible, at least when you get to the point of inter-application trust. If the current state of affairs is that you cannot trust, say, explorer.exe to not be compromised, listening to events can become a dangerous game. I&#8217;d still say that it is regrettable that the DOS prompt is not &#8216;just another windows shell&#8217; in the same way that explorer.exe is, in as far as they are both interfaces to the same environment you would want them to be at the same privilege level, where damage to explorer.exe already carries the same risks (being able to start C:malware.exe) as those exposed by accepting keyboard events for &quot;malwaren&quot; in the DOS box.</p>
<p>If it were purely to amuse people who like dropping files on the DOS window, fixing that part would not be worth the cost. But it seems to me that getting rid of this elevation scenario would lead to a better design. If I understand it correctly, the reason behind the elevated privilege level of the DOS box has all to do with DOS programs that form the 0.001% part of the spectrum of actual real world usage.</p>
<p>The same goes for not binding Ctrl-V to paste: console programs that accept meta-keys are part of the 0.001%, the other 99.999% of the cases you just want to paste. This is even true on Unix (of course Mac users got off light here, since there are have never been console programs that used the &#8216;command&#8217; meta key).</p>
<p>It seems to me that Microsoft has a philosophy where they will choose for the 99.999% solution if it saves work, unless if the other 0.001% can be tied to the totem of backwards compatibility. I may be overgeneralizing, or perhaps this choice may even have been worth it, in a business sense kind of way. But I still think it is regrettable.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-583963">
				<div id="div-comment-583963" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Pim</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071231-00/?p=23983#comment-583963">
			January 1, 2008 at 7:34 am</a>		</div>

		<p>Gabe,</p>
<p>Every architecture has skeletons in its closet I am sure. The older the foundations of a code base, the worse it gets. I&#8217;ve just been silently hoping for Windows to grow a pair at some point and toss some of the worse ideas to the side.</p>
<p>The &#8216;X runs as root&#8217; factor is something I recall as a longstanding issue that has been tackled from various sides for a long time. You can, in fact, run X11 as a mortal user on top of the linux frame buffer device. People are constantly experimenting with ways to layer up stuff like hardware acceleration in a way that makes sense both in terms of performance and security.</p>
<p>I&#8217;m not saying this to pooh-pooh your very valid point that sometimes you&#8217;re stuck on a foundation of earlier work that isn&#8217;t worth the effort to rip out. It&#8217;s just that these legacy-related problems in Windows seem to always be related to such an interconnected cluster of other parts that the whole process inevitably leads to architectural inertia.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-583973">
				<div id="div-comment-583973" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">luca</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071231-00/?p=23983#comment-583973">
			January 1, 2008 at 8:10 am</a>		</div>

		<p>I never user drag&amp;drop in a cmd windows, so I don&#8217;t care about it. Security is more important, and I like the integrity levels.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-583783">
				<div id="div-comment-583783" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Gazpacho</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071231-00/?p=23983#comment-583783">
			January 1, 2008 at 2:47 am</a>		</div>

		<p>That&#8217;s off-topic, but I&#8217;ll take a stab:</p>
<p>* The VC library symbols are uploaded with a tool that other groups in the company use.</p>
<p>* That tool is hardcoded to use only retail symbols, so that someone won&#8217;t accidentally upload decompilable code.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-584013">
				<div id="div-comment-584013" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joel</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071231-00/?p=23983#comment-584013">
			January 1, 2008 at 11:33 am</a>		</div>

		<p>&#8220;These fundamental differences manifest like this: If a Win32 program wants to open a console window, it calls AllocConsole() or AttachConsole(). A Unix program has to be attached to a console when it&#8217;s started in order to get its stdout displayed. If a Win32 program in the middle of a pipeline wants to change the window title (perhaps to report progress), it calls SetConsoleTitle(). A Unix program must send control codes to stdout to change the window title, but a process in the middle of a pipeline does not have its output going to the terminal emulator, so it cannot change the title.&#8221;</p>
<p>Two things. &nbsp;One, it&#8217;s always possible to redirect stdout in the middle of a program to a terminal. &nbsp;At the very least, the program can exec() an xterm and send its output there&#8230;if it really needs to do something like this. &nbsp;In practice, I can&#8217;t really think of a case where a program would need to do what you suggest. &nbsp;If someone wants stdout from a graphical app, they would run it from a terminal (the standard practice as far as I&#8217;m aware).</p>
<p>Secondly, it wouldn&#8217;t make sense for a program in the middle of a pipeline to be changing the console title because it might also be run from a script, which might not even be attached to a console at all and shouldn&#8217;t care in any case. &nbsp;However, if you really wanted to change the title, you could get the name of the file representing the terminal (probably by walking down the pipeline by looking in /proc/XXX/fd for each process further down the pipeline than your own), and then send the commands directly into the file, instead of into stdout. &nbsp;Again, why one would want to do that is beyond me, but it&#8217;s not impossible.</p>
<p>Raymond: for virtual consoles, as opposed to pseudo-ttys, you can get the contents of the screen buffer by opening /dev/vcsX and /dev/vcsaX (the former is just character data, the latter is color and character data).</p>
<p>Since most programs that would actually need access to the screen buffer use a library like ncurses, which has its own buffer, there&#8217;s really no need to be able to directly read what&#8217;s stored inside the terminal emulator. &nbsp;It&#8217;s also faster to look inside a local copy instead of grabbing something that lives in the memory space of another process. &nbsp;</p>
<div class="post">[<i>Title change by a program in the middle of the pipeline: In order to show progress without disrupting stdout. This is popular in batch files for long-running processes. And you can&#8217;t consult a private screen buffer you didn&#8217;t create, e.g. if you want to save the screen contents when your program starts, do some fullscreen editing, and then restore it when you exit. I guess people on unix simply accept that some things cannot be done. Too bad people on Windows can&#8217;t do the same. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-584023">
				<div id="div-comment-584023" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">anonymous</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071231-00/?p=23983#comment-584023">
			January 1, 2008 at 12:10 pm</a>		</div>

		<p>You stilled missed to answer the most obvious question: Has this also been fixed on Windows XP?</p>
<p>(After all, Windows Vista is an unusable disaster with many design-based security vulnerabilities.)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-584053">
				<div id="div-comment-584053" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">osexpert</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071231-00/?p=23983#comment-584053">
			January 1, 2008 at 1:11 pm</a>		</div>

		<p>args: I don&#8217;t have the answer how to fix csrss, but a radical idea from KJK::Hyperion comes to mind: <a rel="nofollow" target="_new" href="http://www.reactos.org/pipermail/ros-kernel/2003-October/000168.html" rel="nofollow">http://www.reactos.org/pipermail/ros-kernel/2003-October/000168.html</a></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-584063">
				<div id="div-comment-584063" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">osexpert</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071231-00/?p=23983#comment-584063">
			January 1, 2008 at 1:13 pm</a>		</div>

		<p>typo: reply to aargh, not args:-)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-584083">
				<div id="div-comment-584083" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Bobris</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071231-00/?p=23983#comment-584083">
			January 1, 2008 at 1:23 pm</a>		</div>

		<p>I want to know why the windows console is so many lightyears behind when compared to one of any other OS&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-584143">
				<div id="div-comment-584143" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Triangle</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071231-00/?p=23983#comment-584143">
			January 1, 2008 at 2:41 pm</a>		</div>

		<blockquote><p>
  Why mourn the loss of functionality which was essentially &quot;broken&quot;?
</p></blockquote>
<p>Because it isn&#8217;t just the console. <em>Any</em> evelated program can nolonger be D&amp;D&#8217;ed with by <em>any</em> nonelevated program.</p>
<blockquote><p>
  X doesn&#8217;t have a way of preventing an attacking process from sending malicious messages (like &quot;rm -rf /&quot;) to unsuspecting terminal windows with root privs.
</p></blockquote>
<p>Are you sure about this? I seem to recall something about there being a member of the message struct that is set when it&#8217;s a real message, and cleared when it&#8217;s a fake message.</p>
<p>AFAICT, Windows has nothing like this.</p>
<blockquote><p>
  UI regions that can receive drops can then set some properties to indicate what kind of content they accept. Within that set-up, dropping a file would trigger an event with a &#8216;url&#8217; content-type.
</p></blockquote>
<p>I personally think it might be a better idea to &nbsp;directly pass the handle to the object instead of a URL/URI. Imagine the following scenario: Program A has a file drop target, and Program B has a file picker. But program B has different rights than program A, and it shows some files that A would be unable to access. The user drags one of those files into B, and gets an incomprehensible &quot;Access denied&quot; error.</p>
<blockquote><p>
  The terminal window could then handle drops of this type by sending the path as keyboard events to the terminal layer.
</p></blockquote>
<p>No. This is <em>exactly</em> the security issue that was fixed in vista. The window manager has to control the entire operation, not the app.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-583923">
				<div id="div-comment-583923" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Mihai</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071231-00/?p=23983#comment-583923">
			January 1, 2008 at 7:06 am</a>		</div>

		<p>&#8220;They may not look like the same thing but they are connected.&#8221;</p>
<p>They are connected. But not only they &#8220;not look like the same thing,&#8221; they really *are not* the same thing.</p>
<p>You want a spa in your home. I come to install it, and in the process I break the door (good reason: it was not big enough to fit the spa).</p>
<p>And if you complain, I can also say: &#8220;How people complain about exactly the thing they demanded&#8221;?</p>
<p>The two are connected. But they are not the same. And they don&#8217;t look the same. This is definitely not what you asked for.</p>
<p>I don&#8217;t care much about the loss of drag and drop. But you arguments bothers me the same way you are bothered by nitpicking.</p>
<p>Read this again, and this time imagine you read &nbsp;it in a random post, attacking MS:</p>
<p>&#8220;How people complain about exactly the thing they demanded&#8221;?</p>
<p>&#8220;They may not look like the same thing but they are connected.&#8221;</p>
<p>Does it sound logical?</p>
<div class="post">[<i>&#8220;How people complain about things that, at the end of the day, and perhaps in ways they may not realize, are connected.&#8221; How&#8217;s that, Mr. Nitpicker? Because the mechanism that drag and drop uses can potentially be used by bad guys to do other things. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-584203">
				<div id="div-comment-584203" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Directx</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071231-00/?p=23983#comment-584203">
			January 1, 2008 at 3:31 pm</a>		</div>

		<p>Windows platform guts were by design insecure, developed on a very different perspective, mostly targeting Home PCs and easy-of-use (that’s what made Windows famous). Even Windows NT failed to change that design attitude, and Vista just made things worst trying to strength-secure an insecure architecture -“UAC” for example is the first to turn-off after a Vista installation -really pity!</p>
<p>However, I still believe (or hope) that there must be a way to implement all the needed security balancing the benefits of the Windows architecture in heritage instead of crippling some nice system features.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-584213">
				<div id="div-comment-584213" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joel</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071231-00/?p=23983#comment-584213">
			January 1, 2008 at 3:45 pm</a>		</div>

		<p>&quot;[Title change by a program in the middle of the pipeline: In order to show progress without disrupting stdout. This is popular in batch files for long-running processes.&quot;</p>
<p>I think the reason this never shows up in Unix is that people don&#8217;t expect batch processes to require a console to run. &nbsp;If you want status reports, that&#8217;s usually done via log files, which can then be parsed and manipulated from programs outside of the pipeline, as needed by the user. &nbsp;I feel sure, however, that if there really was a strong need to change the console title from within a pipeline stage, an ioctl would have been introduced for such.</p>
<p>&quot;And you can&#8217;t consult a private screen buffer you didn&#8217;t create, e.g. if you want to save the screen contents when your program starts, do some fullscreen editing, and then restore it when you exit. I guess people on unix simply accept that some things cannot be done. Too bad people on Windows can&#8217;t do the same. -Raymond]&quot;</p>
<p>This is solved by having multiple screen pages. &nbsp;When a program goes into fullscreen mode, the terminal saves the contents of line-mode. &nbsp;Then, returning to line mode results in those contents being restored. &nbsp;This is standard on most graphical terminals these days.</p>
<p>I admit some Unix solutions are a little hacky, but so are some Windows solutions, as we&#8217;ve been discussing. &nbsp;The reality is that by the time we had systems capable enough to offer advanced terminals, the computing world had already moved on to purely graphical interfaces. &nbsp;Sure, Unix could have offered access to the screen buffer for all terminals, instead of just consoles, but ncurses already does all the work except for a few very small edge cases that you mention.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-584223">
				<div id="div-comment-584223" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Neil</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071231-00/?p=23983#comment-584223">
			January 1, 2008 at 4:04 pm</a>		</div>

		<p>Joel, /dev/tty always represents the terminal, assuming you have one.</p>
<p>Raymond, there are apparently xterm codes to save and restore the screen; &lt;ESC&gt;?1047h and &lt;ESC&gt;?1047l</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-584233">
				<div id="div-comment-584233" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Gabe</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071231-00/?p=23983#comment-584233">
			January 1, 2008 at 4:11 pm</a>		</div>

		<p>Pim, I do not think you understand correctly. You seem to be confused about the elevation happens. This has nothing to do with the command processor running elevated. It&#8217;s that the process drawing the window is elevated.</p>
<p>Why is an elevated process drawing the window? No reason in particular, it&#8217;s just that the most convenient place to do the drawing is in an elevated process. This has an unfortunate side-effect of preventing the window from communicating with other windows.</p>
<p>This has nothing to do with the age of the codebase, it&#8217;s just an artifact of the design. Microsoft could certainly redesign the system so it doesn&#8217;t suffer from this flaw, but then it would suffer from some other flaw(s) instead. Since the program is old enough to acquired millions of users, introducing other flaws would not be welcome to them.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-mike-dimmick even thread-even depth-1" id="comment-584283">
				<div id="div-comment-584283" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Mike+Dimmick' rel='external nofollow' class='url'>Mike Dimmick</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071231-00/?p=23983#comment-584283">
			January 1, 2008 at 7:43 pm</a>		</div>

		<p>I suspect that the reason the console WindowProc runs as part of the highly-privileged CSRSS process is historical.</p>
<p>Back in NT 3.1, graphics drivers ran in user mode, in the CSRSS process. It would therefore make some kind of sense, if you accept that the WindowProc should not run in the actual process that created the console (which you might not want to do, for security reasons &#8211; do you really want different console-mode processes to do IPC to the console-creating process to do their output?) that it should run in the same process as the graphics driver.</p>
<p>I can also see that the idea of an arbitrary process being able to switch into full screen text mode might not be desirable either. That said, DirectX programs can of course switch into other full-screen graphics modes.</p>
<p>When graphics drivers were shifted into kernel mode for NT 4.0, this decision wasn&#8217;t revisited. As is often the case, you want to avoid disturbing code that already works fine. Possibly moving the console support to also be a driver could have worked, but drivers being able to create windows is a massive, massive layering violation.</p>
<p>As for the comparison with Unix and X, it&#8217;s simply that the process writing to the console (e.g. csh) is performing IPC with the xterm/other terminal emulator via a &#8216;pseudo-terminal&#8217; device (xterm is then doing IPC/RPC to the X server!) The Unix model is built entirely around terminal devices because that&#8217;s what there was when Unix was invented for the PDP-11. X is a much later arrival and has to be backwards-compatible with what went before.</p>
<p>A better approach for Windows would probably be to strip the console management code out of csrss and into a new program, say &#8216;console.exe&#8217;. The Win32 subsystem would launch that (running as the session user) the first time a console was required, and reuse that process for future consoles required in the same session. For UAC you might launch a new console.exe for the different UI privilege levels, with the appropriate permissions, to prevent shatter attacks.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-584333">
				<div id="div-comment-584333" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">osexpert</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071231-00/?p=23983#comment-584333">
			January 1, 2008 at 9:42 pm</a>		</div>

		<p>Mike: &#8220;Possibly moving the console support to also be a driver could have worked, but drivers being able to create windows is a massive, massive layering violation&#8221;</p>
<p>No, the driver would not create windows. It would &#8220;only&#8221; handle console objects containing textformatting. The new cmd.exe would then create consoles and do IOIOCTLs agains the console handle. cmd.exe would draw the text and handle window messages and stuff. The only thing I&#8217;m concerned about is console textmemory &#8220;living&#8221; in kernel mode (with maximum screen buffering: as much as 190MB per console), but this may not be problem at all.</p>
<div class="post">[<i>Oh great. &#8220;Hello world&#8221; doesn&#8217;t work because you don&#8217;t have a message pump. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-dean-harding even thread-even depth-1" id="comment-584353">
				<div id="div-comment-584353" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Dean+Harding' rel='external nofollow' class='url'>Dean Harding</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071231-00/?p=23983#comment-584353">
			January 1, 2008 at 10:25 pm</a>		</div>

		<p>&quot;There is no cmd.exe anywhere.&quot;</p>
<p>Actually, I was thinking more along the lines of Mike Dimmick&#8217;s idea of a &quot;console.exe&quot; running as current user to replace the functions that csrss.exe does for consoles.</p>
<p>I still say it&#8217;s not worth the bother of re-implementing it all anyway&#8230; just to get drag &amp; drop!</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-584363">
				<div id="div-comment-584363" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Triangle</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071231-00/?p=23983#comment-584363">
			January 1, 2008 at 10:44 pm</a>		</div>

		<p>[What if there is no cmd.exe? E.g. you Start.Run a console program directly. There is no cmd.exe anywhere. Who runs the message pump? -Raymond]</p>
<p>Just a guess: kernel32, since that&#8217;s where AllocConsole, AttachConsole, etc. all come from. Although that wouldn&#8217;t be as efficient as Mike Dimmicks&#8217; suggestion.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-584433">
				<div id="div-comment-584433" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Gabe</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071231-00/?p=23983#comment-584433">
			January 2, 2008 at 2:42 am</a>		</div>

		<p>Mike made the same suggestion as I did, only he called it console.exe instead of just a surrogate process. The problem is that the surrogate for elevated consoles would still not be able to receive messages from Explorer. It would need a low-integrity surrogate-surrogate (console-low.exe) to communicate with regular processes like Explorer and send the data back to console.exe, which would interpret the input and send it to the program running in the console (like cmd.exe).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-dean-harding odd alt thread-odd thread-alt depth-1" id="comment-584443">
				<div id="div-comment-584443" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Dean+Harding' rel='external nofollow' class='url'>Dean Harding</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071231-00/?p=23983#comment-584443">
			January 2, 2008 at 3:17 am</a>		</div>

		<p>&quot;It would need a low-integrity surrogate-surrogate (console-low.exe)&quot;</p>
<p>I don&#8217;t think you&#8217;d want that. You can&#8217;t drag&amp;drop onto any other elevated windows, so you wouldn&#8217;t expect it to be possible to elevated command prompts either.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-584453">
				<div id="div-comment-584453" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Pim</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071231-00/?p=23983#comment-584453">
			January 2, 2008 at 3:40 am</a>		</div>

		<p>[So there should be two types of drag and drop, one for files and one for everything else? OLE data objects already have &quot;content types&quot; (called &quot;formats&quot;), so it already does what you want. The issue is that it also does more, and it&#8217;s the &quot;more&quot; that is risky. -Raymond]</p>
<p>It would still be the same event, only it would have a content-type of &#8216;url&#8217;. If I&#8217;m not mistaken that&#8217;s the way OSX and the open desktop standard deal with drops. X11 has many quirks and I&#8217;m not advocating OSX to be perfect, but where it concerns drag&amp;drop you can&#8217;t get much shinier.</p>
<p>It makes sense to distinguish dropped files (that have a permanent presence outside of RAM) and dropped content out of other applications (that is temporary in nature). At very least I wonder what effect the idea of always sending the full content to the other side has when you drop a 2TB file on an application?</p>
<p>I do realize that having a certain way of handling drag&amp;drop is something that is tricky to change after the fact.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-584463">
				<div id="div-comment-584463" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Pim</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071231-00/?p=23983#comment-584463">
			January 2, 2008 at 3:45 am</a>		</div>

		<p>[Pim, I do not think you understand correctly. You seem to be confused about the elevation happens. This has nothing to do with the command processor running elevated. It&#8217;s that the process drawing the window is elevated.]</p>
<p>Ok, at least that makes a bit more sense, but not in the context of the examples I was given (dropping &#8220;uninstall antivirusn&#8221; on the dos box), the presumption here was that dropping was dangerous because the shell had privileges. So now I understand the elevation but I no longer understand the vulnerability.</p>
<div class="post">[<i>The drop event goes to the frame window. The frame window receives the dropped object from OLE and asks it for its &#8220;hdrop&#8221; content type (hdrop = &#8220;list of file names&#8221;). The dropped object is an object in the object-oriented sense (data + code), and it&#8217;s the code that&#8217;s the scary part. I&#8217;ll make a note to cover data object code-behind later this year. Maybe that&#8217;ll help.&nbsp; I think people fail to understand how general-purpose drag/drop really is. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-584483">
				<div id="div-comment-584483" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Pim</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071231-00/?p=23983#comment-584483">
			January 2, 2008 at 4:37 am</a>		</div>

		<p>[The drop event goes to the frame window. The frame window receives the dropped object from OLE and asks it for its &#8220;hdrop&#8221; content type (hdrop = &#8220;list of file names&#8221;). The dropped object is an object in the object-oriented sense (data + code), and it&#8217;s the code that&#8217;s the scary part.]</p>
<p>Fair enough. Why is it hard to propagate this &#8220;object+code&#8221; chunk, as-is, to the unprivileged shell?</p>
<div class="post">[<i>When you run a program directly, <u>there is no shell</u>. There is nothing to propagate to.</i>]</p>
<div>
<p>[I&#8217;ll make a note to cover data object code-behind later this year. Maybe that&#8217;ll help. &nbsp;I think people fail to understand how general-purpose drag/drop really is. -Raymond]</p>
<p>Please do! I realize I have a large pair of Unix-colored glasses on here that do not account for OLE, which I already suspected to be the source of this difficulty.</p>
<div class="post">[<i>I find it frustrating that people keep suggesting &#8220;fixes&#8221; without first understanding what is going on. -Raymond</i>]</div>
</div>
</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-dean-harding odd alt thread-odd thread-alt depth-1" id="comment-584343">
				<div id="div-comment-584343" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Dean+Harding' rel='external nofollow' class='url'>Dean Harding</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071231-00/?p=23983#comment-584343">
			January 1, 2008 at 10:10 pm</a>		</div>

		<p>&#8220;&#8221;Hello world&#8221; doesn&#8217;t work because you don&#8217;t have a message pump.&#8221;</p>
<p>Presumably, the message pumping would be handled by a thread in cmd.exe, not whatever program that is running in the console. The program running in the console would still just write to it&#8217;s standard output, and cmd.exe would intercept that and write it to the console window. It would also intercept all the other console-related functions (basically, instead of talking to csrss.exe, those functions would talk to cmd.exe)</p>
<p>Of course, we&#8217;re all just guessing at how it *could* be done, having absolutely no (of very little anyway) idea of how it&#8217;s currently done&#8230;</p>
<p>Anyway, that&#8217;s a lot of refactoring just to get drag&amp;drop back!!</p>
<div class="post">[<i>What if there is no cmd.exe? E.g. you Start.Run a console program directly. There is no cmd.exe anywhere. Who runs the message pump? -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-584703">
				<div id="div-comment-584703" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Gabe</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071231-00/?p=23983#comment-584703">
			January 2, 2008 at 12:55 pm</a>		</div>

		<p>I don&#8217;t know anything about programming Macs, but I&#8217;ve done my time with X11. There are at least 3 d-n-d standards, however Xt&#8217;s is probably the only one supported by terminal emulators.</p>
<p>As with most things in X11, it is quite simple: once you indicate that you want to accept things dragged to you, you will get an event when an item is dropped on you, and you then process it. When the drag has completed you have the opportunity to find out the type of data and can ask the Xserver for the bits.</p>
<p>The type of data can be roughly one of: plain text, file(s), or other. There is one global drag buffer, so if somebody does a drag operation before the disk finishes paging in your drop event handler, you get the wrong data. In other words, this DnD facility was designed primarily as a means of transferring filenames from one window to another. No wonder it always seems to work so well.</p>
<p>Windows has a more generic facility, designed for dragging things like tables, formatted text, charts, and bitmaps. For example, dragging a block of cells from a spreadsheet might show up as a block of cells in another spreadsheet, a mini-spreadsheet in a word processor, a table in an email, tab-delimited text in an editor, a metafile in a vector drawing program, and a bitmap in a paint program. In other words, the mechanism has to be very flexible to be able to deal with formats that might be very complicated. This could mean dynamically loading a library into the drop process to do some of the processing.</p>
<p>Of course this is all complete overkill for something as simple as copying a filename from one process to another, but transferring filenames is just one of many things the facility was designed for.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-584713">
				<div id="div-comment-584713" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Pim</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071231-00/?p=23983#comment-584713">
			January 2, 2008 at 12:58 pm</a>		</div>

		<p>[The process that replaced cmd.exe is the program you wrote. So you&#8217;re saying that every console program needs to have a message pump? -Raymond]</p>
<p>I see what you&#8217;re hinting at. So what makes it hard is that the message pump <em>and</em> the privileged display system are in the same layer. Tricky to solve without adding an extra layer equivalent to the Unix &#8216;getty&#8217; program.</p>
<p>[I find it frustrating that people keep suggesting &quot;fixes&quot; without first understanding what is going on. -Raymond]</p>
<p>I wouldn&#8217;t be so presumptuous. It just baffled me how this could be a problem. Console handling in windows is pretty counter-intuitive for someone who looked at Unix for too long ;)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-dean-harding even thread-even depth-1" id="comment-584493">
				<div id="div-comment-584493" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Dean+Harding' rel='external nofollow' class='url'>Dean Harding</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071231-00/?p=23983#comment-584493">
			January 2, 2008 at 5:06 am</a>		</div>

		<p>&quot;Why is it hard to propagate this &quot;object+code&quot; chunk, as-is, to the unprivileged shell?&quot;</p>
<p>Because, as Raymond pointed out above, there may not *BE* a shell (ie. cmd.exe). You wouldn&#8217;t expect drag&amp;drop to work only when cmd.exe was involved would you?</p>
<p>As a quick example, run cmd.exe, then type powershell.exe. That starts up the powershell shell. Next, click Start, then Run and type in powershell.exe. It also starts the powershell shell, but no cmd.exe. You wouldn&#8217;t expect drag&amp;drop to work in the first case, but not the second, right?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-584503">
				<div id="div-comment-584503" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Pim</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071231-00/?p=23983#comment-584503">
			January 2, 2008 at 5:37 am</a>		</div>

		<p>[Because, as Raymond pointed out above, there may not *BE* a shell (ie. cmd.exe). You wouldn&#8217;t expect drag&amp;drop to work only when cmd.exe was involved would you?]</p>
<p>No, but I would expect whatever process you can think of to replace cmd.exe as running under the DOS terminal to be equally unprivileged and, thus, equally eligible to receiving propagated events.</p>
<div class="post">[<i>The process that replaced cmd.exe is <u>the program you wrote</u>. So you&#8217;re saying that every console program needs to have a message pump? -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-dean-harding even thread-even depth-1" id="comment-584523">
				<div id="div-comment-584523" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Dean+Harding' rel='external nofollow' class='url'>Dean Harding</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071231-00/?p=23983#comment-584523">
			January 2, 2008 at 6:01 am</a>		</div>

		<p>@Pim: But then you would need to add drag&amp;drop support to every console program, instead of just whatever handles the actual console window itself. Not to mention all the console programs that *already* been written.</p>
<p>It doesn&#8217;t have to a &quot;shell&quot; &#8212; I only used PowerShell as an example. You could equally run <a href="http://ftp.exe" rel="nofollow">http://ftp.exe</a> or even edit.com.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-584753">
				<div id="div-comment-584753" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Gazpacho</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071231-00/?p=23983#comment-584753">
			January 2, 2008 at 2:03 pm</a>		</div>

		<p>&quot;I want to know why the windows console is so many lightyears behind when compared to one of any other OS&#8230;&quot;</p>
<p>Well golly gee, let&#8217;s put every other feature of the OS on hold so Microsoft can hack on a feature that terrifies 99.9% of users, to make it more acceptable to people who consider the VT100 the gold standard of user interfaces.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-584783">
				<div id="div-comment-584783" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">osexpert</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071231-00/?p=23983#comment-584783">
			January 2, 2008 at 2:40 pm</a>		</div>

		<p>[[The process that replaced cmd.exe is the program you wrote. So you&#8217;re saying that every console program needs to have a message pump? -Raymond]</p>
<p>I see what you&#8217;re hinting at. So what makes it hard is that the message pump <em>and</em> the privileged display system are in the same layer. Tricky to solve without adding an extra layer equivalent to the Unix &#8216;getty&#8217; program.]</p>
<p>I don&#8217;t see the problem. Cant the message pump and communication with the &quot;console device&quot; be in the same process as &lt;any console app here&gt;? AllocConsole would create a message pumpthread and handle the works.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-584833">
				<div id="div-comment-584833" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Pim</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071231-00/?p=23983#comment-584833">
			January 2, 2008 at 3:53 pm</a>		</div>

		<p>[I don&#8217;t see the problem. Cant the message pump and communication with the &quot;console device&quot; be in the same process as &lt;any console app here&gt;? AllocConsole would create a message pumpthread and handle the works.]</p>
<p>The issue here, if I understand things correctly, is that &#8216;console apps&#8217;, being mostly just DOS apps, have no knowledge of drag-and-drop so the only plausible place to handle it would be one layer up.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-584853">
				<div id="div-comment-584853" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Pim</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071231-00/?p=23983#comment-584853">
			January 2, 2008 at 3:55 pm</a>		</div>

		<p>[It doesn&#8217;t have to a &quot;shell&quot; &#8212; I only used PowerShell as an example. You could equally run <a href="http://ftp.exe" rel="nofollow">http://ftp.exe</a> or even edit.com.]</p>
<p>Not all of those applications would have a use for dropping file urls. For cmd.exe allowing this would make sense. It would actually even be more useful than Unix, where you get extra surprise features if you drop a file url on a window running, say, pine :)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-584863">
				<div id="div-comment-584863" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Pim</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071231-00/?p=23983#comment-584863">
			January 2, 2008 at 4:01 pm</a>		</div>

		<p>[Well golly gee, let&#8217;s put every other feature of the OS on hold so Microsoft can hack on a feature that terrifies 99.9% of users, to make it more acceptable to people who consider the VT100 the gold standard of user interfaces.]</p>
<p>I think that in the business world there are droves of people that would have been really thankful if Windows had spawned a command line shell that was less of a third class customer in the larger ecosphere. But that&#8217;s not really a technical discussion and the only statistics I have on this would require a doctor with a flashlight to pull them out.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-584953">
				<div id="div-comment-584953" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">steveg</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071231-00/?p=23983#comment-584953">
			January 2, 2008 at 6:32 pm</a>		</div>

		<p>[I can&#8217;t believe anybody used anything other than Alt+D to get to the address bar. That&#8217;s why the D is underlined in &quot;Address&quot;&#8230; -Raymond]</p>
<p>I&#8217;ve always used F6 (that&#8217;s a Win3.0 habit I&#8217;ve kept). Never even noticed the underlined D (not that IE7 has the word A&amp;ddress anymore).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-585073">
				<div id="div-comment-585073" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blog.dotsmart.net/' rel='external nofollow' class='url'>Duncan Smart</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071231-00/?p=23983#comment-585073">
			January 3, 2008 at 8:56 am</a>		</div>

		<p>Try this &#8211; it&#8217;s a great wrapper for any console-based shell such as cmd.exe or PowerShell and supports drag &amp; drop: <a rel="nofollow" target="_new" href="http://sourceforge.net/projects/console" rel="nofollow">http://sourceforge.net/projects/console</a></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-585273">
				<div id="div-comment-585273" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">anonymous</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071231-00/?p=23983#comment-585273">
			January 3, 2008 at 11:48 am</a>		</div>

		<p>So that&#8217;s the reason why. I was wondering. Btw, almost the entire article <a href="http://en.wikipedia.org/wiki/Features_removed_from_Windows_Vista" target="_new" rel="nofollow">http://en.wikipedia.org/wiki/Features_removed_from_Windows_Vista</a> was written by me. Can you explain all the removals gradually over time in your blog posts?</p>
<div class="post">[<i>I know you may find it hard to believe, but I am not consulted on every Vista feature decision. (I wasn&#8217;t consulted on the theming one either.) I in fact know nothing about any of the things listed in that page. You&#8217;ll have to find somebody else to do your Wikipedia research for you. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-585323">
				<div id="div-comment-585323" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">anomymous</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071231-00/?p=23983#comment-585323">
			January 3, 2008 at 1:03 pm</a>		</div>

		<p>Once again: Has this been fixed on Windows XP? Or does Microsoft intentionally leave a known security hole open to push its lousy Vista?</p>
<div class="post">[<i>There is no known security hole here. The change in Vista was a &#8220;defense in depth&#8221; measure, not a defense against an actual vulnerability. Belt and suspenders. Seat belt and air bag. Life jacket and floating seat cushion. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-dean-harding even thread-even depth-1" id="comment-585473">
				<div id="div-comment-585473" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Dean+Harding' rel='external nofollow' class='url'>Dean Harding</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071231-00/?p=23983#comment-585473">
			January 3, 2008 at 5:34 pm</a>		</div>

		<p>That &quot;Features removed from Windows Vista&quot; (wouldn&#8217;t &quot;Features removed IN Windows Vista&quot; be a better name? The current name implies that those features had been intended for Vista, but were later removed) demonstrates just how important backwards-compatibility is. Remove a couple of minor features, and someone writes up a whole Wikipedia article about it!</p>
<p>I mean, who seriously considers the fact that there were multiple status icons for each network adapter a &quot;feature&quot; of XP? I spent more time trying to turn the damn things off than I did actually looking at them&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-585503">
				<div id="div-comment-585503" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Gazpacho</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071231-00/?p=23983#comment-585503">
			January 3, 2008 at 5:54 pm</a>		</div>

		<p>You&#8217;d be amazed the kind of things Wikipedia editors care about.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-585583">
				<div id="div-comment-585583" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">jd2066</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071231-00/?p=23983#comment-585583">
			January 3, 2008 at 9:03 pm</a>		</div>

		<p>@Dean Harding: I don&#8217;t think all of the things on that list are minor. For instance the Sound Recorder is now missing the ability to open and edit audio files. Which sucks if you want to record something as a test to see if an input is working and then play what was recorded.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-585603">
				<div id="div-comment-585603" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">jd2066</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071231-00/?p=23983#comment-585603">
			January 3, 2008 at 9:12 pm</a>		</div>

		<p>Hmm. Actually thinking about it. That might be a minor thing too.</p>
<p>Anyways it does make since for the article to be there as it&#8217;s about Windows Vista and it&#8217;s feature history. If it was shorter it would probably be on the main Windows Vista wikipedia page.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-585693">
				<div id="div-comment-585693" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Miral</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071231-00/?p=23983#comment-585693">
			January 3, 2008 at 11:22 pm</a>		</div>

		<p>As I said before, I think a better &#8220;defense in depth&#8221; strategy would have been to get all the console-handling code out of the system-level process to begin with. &nbsp;Then this sort of thing (and the crash bug I mentioned that takes out the whole system) wouldn&#8217;t have been a problem.</p>
<p>Ideally, when an app wants to create a new console, the system could just inject a common DLL into the process and get it to run a thread to handle the rendering and other Windows messages at the same security level as the process itself.</p>
<p>One complication of this idea is that I think it&#8217;s possible for a console to survive past the lifetime of the creating app (by passing handles between processes), so &#8220;ownership&#8221; of the console would have to be passed on to another process when the owning process exits if that&#8217;s the case.</p>
<p>So maybe having the dedicated &#8220;console.exe&#8221; is a better idea after all. &nbsp;Have one console process per security level (ie. one for low-integrity, one for normal-integrity non-elevated, another for high-integrity elevated, etc) that does all the work, rather than keeping it in CSRSS. &nbsp;It should be simple enough to make the existing code in CSRSS pass requests down to the console-handling processes, or spawn a new one if needed.</p>
<div class="post">[<i>A redesign of the console system is a rather drastic move for a defense in depth measure, don&#8217;t you think? Who knows what security vulnerabilities the rewrite may inadvertently introduce. Change has risk. Big change has big risk. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-585763">
				<div id="div-comment-585763" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">jd2066</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071231-00/?p=23983#comment-585763">
			January 4, 2008 at 4:15 am</a>		</div>

		<p>@Dean Harding: I don&#8217;t know, I haven&#8217;t used that program. I just mainly used Sound Recorder as a quick test to see if audio inputs were working before using other programs with it. Since I could just use a different program to test audio inputs it&#8217;s not really a big deal. I was just used to doing it with Sound Recorder.</p>
<p>Back on topic I used Drag and Drop to Command Prompt quite a bit with XP and I still try it in Vista since I&#8217;m used to it and forget it&#8217;s not there anymore.</p>
<p>One reason it&#8217;s better then the copy path to clipboard item is because then you can you can keep something else in your clipboard.</p>
<p>There were times when I wanted to set a new path but not override my clipboard so DND was quite useful there.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-dean-harding even thread-even depth-1" id="comment-585623">
				<div id="div-comment-585623" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Dean+Harding' rel='external nofollow' class='url'>Dean Harding</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071231-00/?p=23983#comment-585623">
			January 3, 2008 at 9:26 pm</a>		</div>

		<p>jd2066: What&#8217;s wrong with Audacity?</p>
<p>Of course, the issue that affects you personally is never &quot;minor&quot; but you&#8217;ve got to wonder how many people actually ever even *used* sound recorder (I tried it once or twice back in Windows 95 and then never touched it again).</p>
<p>I think we&#8217;re drifting a bit too far off topic now anyway :-)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-585823">
				<div id="div-comment-585823" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.veridique.nl' rel='external nofollow' class='url'>Matthieu</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071231-00/?p=23983#comment-585823">
			January 4, 2008 at 9:11 am</a>		</div>

		<p>I don&#8217;t get it. People want to use GUI concepts on a COMMAND PROMPT? A Commend Prompt is NOT a GUI.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-585853">
				<div id="div-comment-585853" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">anonymous</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071231-00/?p=23983#comment-585853">
			January 4, 2008 at 11:00 am</a>		</div>

		<p>&#8220;There is no known security hole here.&#8221;</p>
<p>According to your description, there is. Csrss seems to be vulnerable to a shatter attack, since it allows to recieve OLE objects and automatically executes embedded in there.</p>
<p>Now if this is not a security hole, then either Csrss doesn&#8217;t execute code in OLE objects it receives, or it doesn&#8217;t accept any OLE objects received, or isn&#8217;t able to receive OLE objects at all. Which one is it?</p>
<div class="post">[<i>Note the word &#8220;known&#8221; in &#8220;no <u>known</u> security hole&#8221;. This is &#8220;defense in depth&#8221;, where you add an additional layer of protection in case there is an <u>unknown</u> security hole. CSRSS accepted OLE objects but did not execute code from them. There is no actual vulnerability, but there is <u>potential</u> for a vulnerability (if a bug in CSRSS, OLE, or some other layer causes the code to execute by mistake). I believe I&#8217;ve already noted that I will take up the topic of &#8220;defense in depth&#8221; in a later entry, since it seems people don&#8217;t quite get it. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-586043">
				<div id="div-comment-586043" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">jd2066</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071231-00/?p=23983#comment-586043">
			January 4, 2008 at 6:14 pm</a>		</div>

		<p>@Matthieu: But the Command Prompt is a GUI interface to a command line so it does make since to apply some GUI concepts to it.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-587263">
				<div id="div-comment-587263" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://alt-tab.com.ar/cul-es-el-lmite-para-ntfs/' rel='external nofollow' class='url'>Limite NTFS | alt-tab</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071231-00/?p=23983#comment-587263">
			January 9, 2008 at 7:27 am</a>		</div>

		<p>PingBack from <a rel="nofollow" target="_new" href="http://alt-tab.com.ar/cul-es-el-lmite-para-ntfs/" rel="nofollow">http://alt-tab.com.ar/cul-es-el-lmite-para-ntfs/</a></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-595153">
				<div id="div-comment-595153" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blogs.msdn.com/oldnewthing/archive/2008/01/30/7315957.aspx' rel='external nofollow' class='url'>The Old New Thing : Even without a nitpicker's corner, I have to worry about nitpickers</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071231-00/?p=23983#comment-595153">
			January 30, 2008 at 12:49 pm</a>		</div>

		<p>PingBack from <a rel="nofollow" target="_new" href="http://blogs.msdn.com/oldnewthing/archive/2008/01/30/7315957.aspx" rel="nofollow">http://blogs.msdn.com/oldnewthing/archive/2008/01/30/7315957.aspx</a></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-597783">
				<div id="div-comment-597783" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://isuraj.com/2008/02/04/the-terminal-condition-of-windows-console-part-1/' rel='external nofollow' class='url'>The terminal condition of windows console (Part #1) - isuraj.com</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071231-00/?p=23983#comment-597783">
			February 3, 2008 at 9:03 pm</a>		</div>

		<p>PingBack from <a rel="nofollow" target="_new" href="http://isuraj.com/2008/02/04/the-terminal-condition-of-windows-console-part-1/" rel="nofollow">http://isuraj.com/2008/02/04/the-terminal-condition-of-windows-console-part-1/</a></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-721353">
				<div id="div-comment-721353" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://richardberg.net/blog/?p=58' rel='external nofollow' class='url'>BUGBUG: poor title &raquo; Blog Archive &raquo; Easily manage files in Powershell ISE CTP3</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071231-00/?p=23983#comment-721353">
			March 27, 2009 at 9:01 pm</a>		</div>

		<p>PingBack from <a rel="nofollow" target="_new" href="http://richardberg.net/blog/?p=58" rel="nofollow">http://richardberg.net/blog/?p=58</a></p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>