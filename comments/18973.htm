<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (8)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-712963">
				<div id="div-comment-712963" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://technage.blogspot.com' rel='external nofollow' class='url'>Technage</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090302-01/?p=18973#comment-712963">
			March 2, 2009 at 4:14 pm</a>		</div>

		<p>Well, that is just dandy &#8230; now if I only knew when I would ever use that.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-713003">
				<div id="div-comment-713003" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">MadQ</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090302-01/?p=18973#comment-713003">
			March 2, 2009 at 5:29 pm</a>		</div>

		<p>For performance testing, CPU cycle counts are a lot more interesting than CPU time. The alternative is to use the RDTSC instruction &nbsp;(<a rel="nofollow" target="_new" href="http://en.wikipedia.org/wiki/RDTSC" rel="nofollow">http://en.wikipedia.org/wiki/RDTSC</a> ) but then you usually have to modify the code you&#8217;re testing, and you also have to know the exact speed of the CPU during the measured interval. Which can suck on laptops.</p>
<p>With CPU cycle counts, it doesn&#8217;t matter which power state the CPU is in.</p>
<p>With QueryProcessCycleTime and QueryThreadCycleTime you can just profile the process. Of course, in the real world, nothing is ever quite that easy.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-713103">
				<div id="div-comment-713103" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Anonymous</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090302-01/?p=18973#comment-713103">
			March 3, 2009 at 1:54 am</a>		</div>

		<p>Using the CPU cycle count as a unit of time in this century is not smart. &nbsp;If you&#8217;re on a laptop the clock speed varies based on power usage. &nbsp;If you&#8217;re on a multi-CPU or multi-core machine, your thread can get switched to a different core in between measurements, rendering your last read of the cycle count useless.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-713133">
				<div id="div-comment-713133" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">MadQ</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090302-01/?p=18973#comment-713133">
			March 3, 2009 at 4:36 am</a>		</div>

		<p>The cycle count for any given instruction stream on a particular CPU will always be the same, regardless of the CPU&#8217;s speed or power state (let&#8217;s ignore pipelining issues for the moment.) Also, both Intel and AMD have published articles explaining how to avoid Time Stamp Count drift between cores (or CPUs on multi-CPU systems.) The OS does all the bookkeeping for you now, so you don&#8217;t have to.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-713243">
				<div id="div-comment-713243" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://K.Hagan@thermoteknix.com' rel='external nofollow' class='url'>Ken Hagan</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090302-01/?p=18973#comment-713243">
			March 3, 2009 at 2:55 pm</a>		</div>

		<p>&quot;Using the CPU cycle count as a unit of time in this century is not smart.&quot;</p>
<p>But using memory cycle count might be. Increasingly, the rate limiting factor on a process is the time spent waiting for data to reach the CPU. The actual computation is pretty much free.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-713623">
				<div id="div-comment-713623" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ben Voigt [C++ MVP]</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090302-01/?p=18973#comment-713623">
			March 4, 2009 at 1:55 pm</a>		</div>

		<p>Yes, using the cycle count to measure time is a bad idea. &nbsp;It all depends on what you are trying to measure. &nbsp;Usually you are trying to determine what part of your program is the bottleneck, for this measuring the number of CPU cycles consumed (not the number of instructions retired because branching and cache effects may dominate cost) is better than measuring wall clock because of dynamic clock rates. &nbsp;Using the cycle count as your unit of time for cost of performing operations is not a bad idea at all, as long as you understand that you aren&#8217;t measuring wall clock time.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-714403">
				<div id="div-comment-714403" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">,oko</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090302-01/?p=18973#comment-714403">
			March 8, 2009 at 1:09 pm</a>		</div>

		<p>Btw, those registry entries for CPU frequency are well off. They should be calibrated properly.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-714393">
				<div id="div-comment-714393" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">|Qewtq</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090302-01/?p=18973#comment-714393">
			March 8, 2009 at 1:02 pm</a>		</div>

		<p>Categorising it as a bad idea pretty much renders the Query*** apis a bad idea. Of course, you have have to read up and be aware of the caveats and implement it correctly.</p>
<p>But in an NT OS where resolution of tick count is usually c16ms (and please do not say it is 1ms for MM timers etc, it is a hack), you have no choice for less than 10ms or ms resolution.</p>
<p>Why is the QPC and QPF a better than bad idea then? What are the alternatives and especially what are efficient alternatives. Unix and other OS-es do not have this problem. Thus it is rather a necessity for lots of things and with lots of caveats (re:like everyting MS and Intel).</p>
<p>Heck, you could not even retreieve a corect number of cores or CPUs on XP and 2003.. </p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>