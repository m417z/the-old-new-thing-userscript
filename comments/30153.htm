<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (10)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-408283">
				<div id="div-comment-408283" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Stu</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060811-20/?p=30153#comment-408283">
			August 11, 2006 at 8:17 pm</a>		</div>

		<p>The biggest problem with the Win32 API: It was designed to be source compatible with Win16, yet Win16 had a completely different set of assumptions: co-operative multitasking, shared address space, 16-bit pointers&#8230;</p>
<p>Win16 compatability should have been shoved in a seperate library and marked deprecated in it&#8217;s entirety.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-408393">
				<div id="div-comment-408393" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">peterchen</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060811-20/?p=30153#comment-408393">
			August 12, 2006 at 9:28 am</a>		</div>

		<p>RVA? </p>
<p>Stu: Compatibility, source code and otherwise, drove Microsoft where it is today.</p>
<div CLASS=post>[<i>Sorry. RVA = relative virtual address. The offset in virtual address space from the start of the module to the start of the hook function. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-408403">
				<div id="div-comment-408403" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Gabe</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060811-20/?p=30153#comment-408403">
			August 12, 2006 at 9:31 am</a>		</div>

		<p>The whole reason that there are millions of Windows apps today is that Win32 is almost completely source compatible with Win16. If Win32 weren&#8217;t compatible, people wouldn&#8217;t bother porting their apps, and Win32 would just be another OS/2.</p>
<p>Do you think there would be any Win64 apps if it weren&#8217;t source compatible with Win32?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-408413">
				<div id="div-comment-408413" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">ShayEr</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060811-20/?p=30153#comment-408413">
			August 12, 2006 at 11:03 am</a>		</div>

		<p>TopSecret: The OldNewThing “Why did XXX does YYY?” Template</p>
<p>{In/Before} {Windows 16-bit/Windows 3.1/Windows 95} we {run on the same address space/the size of int/pointer was 16 bit/check a legacy program/game} and discover that/therefore {crashing randomly/use undocumented future/no memory protection/no preemptive multitasking} &nbsp;so we {reproduce that behavior/kept the old APIs} so that is why. But now you can run that crapy^H^H^H^H^H software/game even today in {Windows Vista/64 bit platform} :)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-408443">
				<div id="div-comment-408443" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Arno Schoedl</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060811-20/?p=30153#comment-408443">
			August 13, 2006 at 2:17 pm</a>		</div>

		<p>With respect to the source compatibility argument, Microsoft is bending over backwards to make things source-compatible when going from Win16 to 32 to 64, with documentation and compiler support to prepare developers for the change. Yet when it comes to introducing new APIs, chaos reigns, with no smooth migration path anywhere in sight. As the worst example so far, C++ and Win32 is completely swapped out for C# and first Windows Forms and now WPF, and without excessive interop code, there is little chance for existing native code to use the new features or have the &quot;look&quot; of a Vista application. Even Microsoft&#8217;s own Office 2007 core apps are still native and seemingly use a proprietary native graphics engine rather than WPF.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-dean-harding odd alt thread-odd thread-alt depth-1" id="comment-408473">
				<div id="div-comment-408473" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Dean+Harding' rel='external nofollow' class='url'>Dean Harding</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060811-20/?p=30153#comment-408473">
			August 14, 2006 at 12:35 am</a>		</div>

		<blockquote><p>
  Even Microsoft&#8217;s own Office 2007 core apps are still native and<br />
  <br />&gt; seemingly use a proprietary native graphics engine rather than WPF.</p>
<p>Well of course it does, WPF isn&#8217;t even FINISHED yet, how could expect otherwise?
</p></blockquote>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-408503">
				<div id="div-comment-408503" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Arno Schoedl</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060811-20/?p=30153#comment-408503">
			August 14, 2006 at 6:12 am</a>		</div>

		<p>Dean, if Office 2007 would use WPF, I would expect Office 2007 Beta 2 to install some WinFX runtime, which it does not, I checked the registry. I would also expect it to use resolution-independent XAML pictures as icons, but the current Office 2007 icons are clearly pixel-based (set screen DPI to 192 and see yourself). Some documentation also said that RibbonX is still COM-based, with interop to allow managed add-ins.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-408513">
				<div id="div-comment-408513" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Justin Tay</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060811-20/?p=30153#comment-408513">
			August 14, 2006 at 7:19 am</a>		</div>

		<p>Arno, I think you misunderstand what Dean is saying. He&#8217;s not saying that Office 2007 uses WPF. He&#8217;s saying that Office 2007 core apps are still native because WPF isn&#8217;t finished. &nbsp;You can&#8217;t build an application reliably based on something that is itself work in progress.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-408643">
				<div id="div-comment-408643" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Arno Schoedl</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060811-20/?p=30153#comment-408643">
			August 14, 2006 at 11:12 am</a>		</div>

		<p>Office XP uses GDI+ for painting shapes, although it was not shipped as GDIPLUS.DLL, but instead compiled into MSO.DLL. So it looks like for Office XP, Microsoft spawned off an early internal version of GDI+. Office 2003 then switched to the regular GDIPLUS.DLL. So it is quite conceivable that Office 2007 would use an early branch of WinFX/WPF, in particular since it targets &gt;=Windows XP, for which WinFX is available.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-409163">
				<div id="div-comment-409163" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Frank Hileman</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060811-20/?p=30153#comment-409163">
			August 15, 2006 at 10:10 am</a>		</div>

		<p>If Office used WPF, it would probably consume so much memory, and be so slow, as to be unusable.</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>