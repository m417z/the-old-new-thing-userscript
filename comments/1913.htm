<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (11)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-1103923">
				<div id="div-comment-1103923" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140131-00/?p=1913#comment-1103923">
			January 31, 2014 at 7:07 am</a>		</div>

		<p>I have this nasty habit of keeping a usize right next to an asize. If you don&#39;t know the idiom you get stuck. Then again, if you leak I don&#39;t check. It comes down to at that point &quot;Why the heck did you call one of the methods after unloading my DLL.&quot;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1103993">
				<div id="div-comment-1103993" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">aaron</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140131-00/?p=1913#comment-1103993">
			January 31, 2014 at 9:16 am</a>		</div>

		<p>&quot;As a general rule, code is not intentionally written to be impossible to understand. The person who wrote it meant well.&quot;</p>
<p>Oh, if only that were true&#8230;. so much of my company code has utterly indecipherable names.</p>
<p>SupplyLocationViewGrouperForm (is neither a View, a Form, nor a Location. And it only has a member that is a &quot;Group&quot;. &nbsp;It is not a Group itself. I think &quot;Groupers&quot; are things that have groups in them, but I&#39;m not sure. There is more bad code out there than most people can imagine.</p>
<div class="post">[<em>But was it written to be intentionally obtuse? Or did the original author mean well but not have a clue? -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1104003">
				<div id="div-comment-1104003" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">mikeb</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140131-00/?p=1913#comment-1104003">
			January 31, 2014 at 9:30 am</a>		</div>

		<p>@Joshua:</p>
<p>&gt;&gt; If you don&#39;t know the idiom</p>
<p>I don&#39;t know the idiom. In case I ever come across it, what would `usize` and `asize` mean?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1104013">
				<div id="div-comment-1104013" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Gabe</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140131-00/?p=1913#comment-1104013">
			January 31, 2014 at 10:01 am</a>		</div>

		<p>mikeb: I don&#39;t know the idiom either, but I would guess that &quot;usize&quot; means &quot;used size&quot; and &quot;asize&quot; means &quot;allocated size&quot;. I would also expect that the used size would be no more than the allocated size.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1104033">
				<div id="div-comment-1104033" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140131-00/?p=1913#comment-1104033">
			January 31, 2014 at 10:55 am</a>		</div>

		<p>Gabe guesses well. It&#39;s the array growth idiom for amortizing resizes.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-aadsso-1live-com00034001a5381f07 odd alt thread-odd thread-alt depth-1" id="comment-1104113">
				<div id="div-comment-1104113" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Georg_Rottensteiner' rel='external nofollow' class='url'>Georg_Rottensteiner</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140131-00/?p=1913#comment-1104113">
			January 31, 2014 at 9:20 pm</a>		</div>

		<p>But he shouldn&#39;t have to guess. That&#39;s the aforementioned well meaning :)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1104123">
				<div id="div-comment-1104123" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Azarien</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140131-00/?p=1913#comment-1104123">
			February 1, 2014 at 2:03 am</a>		</div>

		<p>&quot;code is not intentionally written to be impossible to understand&quot; unless you&#39;re dealing with DRM, activation or similarly evil things.</p>
<div class="post">[<em>That&#39;s specifically why I added the weasel words &quot;as a general rule&quot;, thanks for ignoring them. -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1104133">
				<div id="div-comment-1104133" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Neil</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140131-00/?p=1913#comment-1104133">
			February 1, 2014 at 3:29 am</a>		</div>

		<p>If only there was some way of querying the allocated size from the allocator&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1104143">
				<div id="div-comment-1104143" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joker_vD</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140131-00/?p=1913#comment-1104143">
			February 1, 2014 at 7:24 am</a>		</div>

		<p>@Joshua: Why not &quot;used_size&quot; and &quot;alloc_size&quot;? I believe modern compilers support identifiers longer than 6 symbols.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1104163">
				<div id="div-comment-1104163" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140131-00/?p=1913#comment-1104163">
			February 1, 2014 at 8:47 am</a>		</div>

		<p>@Joker_vd: When you&#39;ve done most of your programming without autocomplete you develop habits that involve short symbol names. The resulting idioms don&#39;t change without active effort even though names may now be plenty long.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1104183">
				<div id="div-comment-1104183" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joker_vD</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140131-00/?p=1913#comment-1104183">
			February 1, 2014 at 11:26 am</a>		</div>

		<p>@Joshua: Try to use properly configured emacs? Or are you stuck with nano/Notepad?</p>
<p>@Azarien: AFAIK, this stuff is usually &quot;put on top&quot; (like, obfuscators and protectors, such as Armadillo).</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>