<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (15)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-930353">
				<div id="div-comment-930353" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Alex Grigoriev</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110816-00/?p=9893#comment-930353">
			August 16, 2011 at 7:21 am</a>		</div>

		<p>What permission mask is necessary to create an obj id? Would it be WRITE_EA? WHat if an unprivileged user creates the shortcut? Will it be tracked?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-930383">
				<div id="div-comment-930383" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blogs.msdn.com/stikves_4000_hotmail.com/ProfileUrlRedirect.ashx' rel='external nofollow' class='url'>stikves@hotmail.com</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110816-00/?p=9893#comment-930383">
			August 16, 2011 at 3:25 pm</a>		</div>

		<p>@Joshua, this should not be a big deal, because it does not make random changes, but sets the last modified time to current time. Unless you have files from the &quot;future&quot;, it will never set the time to earlier, thus only causing extra notifications for backup like software with &quot;empty&quot; changes.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-930393">
				<div id="div-comment-930393" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">640k</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110816-00/?p=9893#comment-930393">
			August 16, 2011 at 4:17 pm</a>		</div>

		<p>A backup program should compute a hash on it&#39;s own to determine if a file has changed. Not some random file system metadata. No need to backup the content of a file if the content haven&#39;t been modified since last backup.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-930403">
				<div id="div-comment-930403" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joseph Koss</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110816-00/?p=9893#comment-930403">
			August 16, 2011 at 6:41 pm</a>		</div>

		<p>@640K:</p>
<p>Comparing hashes can only prove that a file was modified.. they can never prove that it wasn&#39;t.</p>
<p>These spurious changes to the last modified time-stamp are false positives.</p>
<p>Hashing is open to false negatives.</p>
<p>You cannot combine these two things to remove the possibility of error.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-cheong even thread-even depth-1" id="comment-930413">
				<div id="div-comment-930413" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/cheong00' rel='external nofollow' class='url'>cheong00</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110816-00/?p=9893#comment-930413">
			August 16, 2011 at 6:46 pm</a>		</div>

		<p>Will there, at some point of time in future, be a switch in &quot;fsutil behavior&quot; command that allow us to set &quot;create object id for every file on file creation&quot; for the NTFS volumes so in this case we&#39;ll get more consistent result?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-930373">
				<div id="div-comment-930373" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110816-00/?p=9893#comment-930373">
			August 16, 2011 at 12:34 pm</a>		</div>

		<p>*shudder*</p>
<p>I wonder if this is what&#39;s causing intermittent failures in the document cache my product has.</p>
<p>This is the second time Raymond blogged about something that chewed up the modification time. I wonder if it should be treated as unreliable.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-930423">
				<div id="div-comment-930423" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Alan Malloy</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110816-00/?p=9893#comment-930423">
			August 16, 2011 at 9:41 pm</a>		</div>

		<p>@sukru-t Suppose I compile app.c to produce app.exe. I modify app.c, and then remember I want a shortcut: I create a shortcut to app.exe somewhere. Now I run make, and&#8230;app.exe is newer than app.c, so no compilation occurs?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-930433">
				<div id="div-comment-930433" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Mich</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110816-00/?p=9893#comment-930433">
			August 17, 2011 at 4:14 am</a>		</div>

		<p>lnk-files are broken by design. Every additional file system feature added to compensate for it will fail.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-930453">
				<div id="div-comment-930453" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Simon</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110816-00/?p=9893#comment-930453">
			August 17, 2011 at 6:49 am</a>		</div>

		<p>@Joseph Koss:</p>
<blockquote><p>
  Comparing hashes can only prove that a file was modified.. they can never prove that it wasn&#39;t.
</p></blockquote>
<p>Sure. &nbsp;But what you can do is reduce the chances to a level where you can have hashed as many files as there are stars in the known universe and still have a collision probability comfortably under a trillionth of a trillionth of a percent. (That&#39;s using a 256-bit hash). &nbsp;</p>
<p>At some point you have to stop worrying about collisions, and when the chance of a collision before the heat-death of the universe gets comfortably under that of the developer being struck by lightning while simultaneously winning the lottery before s/he can commit the hashing code, you&#39;re probably past it.</p>
<p>(This is assuming that no-one&#39;s broken your hash algorithm and is deliberately trying to generate a collision, of course. &nbsp;But while that&#39;s a worry for a cryptographer, for a backup program, I don&#39;t see a reason to lose sleep over it).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-930483">
				<div id="div-comment-930483" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joseph Koss</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110816-00/?p=9893#comment-930483">
			August 17, 2011 at 7:53 am</a>		</div>

		<p>@Simon:</p>
<blockquote><p>
  At some point you have to stop worrying about collisions
</p></blockquote>
<p>You can backup the file that the metadata claims was changed on the grounds that it really might have been, as well as the file that the hash knows was changed on the grounds that it definitely was changed. If you do both these things, you most definitely do not /have/ to accept the risk of collisions.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-930513">
				<div id="div-comment-930513" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110816-00/?p=9893#comment-930513">
			August 17, 2011 at 8:05 am</a>		</div>

		<p>@sukru-t: It&#39;s a cache, not the master. Bumping the timestamp to higher than the master by some external operation breaks the cache manager.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-930473">
				<div id="div-comment-930473" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Adam Rosenfield</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110816-00/?p=9893#comment-930473">
			August 17, 2011 at 7:46 am</a>		</div>

		<p>@640k: Do you really want a backup program to read *every* file on disk in order to compute a hash to test if the file has changed? &nbsp;That requires an order of magnitude more disk I/O than just checking the modification times on every file, which only requires reading all of the directories on disk.</p>
<p>You could only hash the file if its modification time has changed, but that&#39;s just making the program more complicated without much benefit. &nbsp;You&#39;d have to read in the file twice if it changed (once to hash it, once to copy it to the backup volume), though that would almost certainly be cached by the OS in memory, assuming it&#39;s not ginormous.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-930623">
				<div id="div-comment-930623" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Evan</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110816-00/?p=9893#comment-930623">
			August 17, 2011 at 12:16 pm</a>		</div>

		<p>@Alan Malloy: &quot;Suppose I compile app.c to produce app.exe. I modify app.c, and then remember I want a shortcut: I create a shortcut to app.exe somewhere. Now I run make, and&#8230;app.exe is newer than app.c, so no compilation occurs?&quot;</p>
<p>My somewhat-trolling answer is &quot;stop using make and get a better build system.&quot; :-)</p>
<p>@Adam: &quot;You could only hash the file if its modification time has changed, but that&#39;s just making the program more complicated without much benefit.&quot;</p>
<p>On the contrary, I feel that this is *very* reasonable behavior for a backup system. &quot;False positives&quot; aren&#39;t the only reason that an mtime may change but the file wouldn&#39;t. So either you already have the backup system backing up stuff it doesn&#39;t need to, in which case a few more because of this shortcut issue is likely to be the least of your concerns, or you have to have something that looks at the file contents anyway.</p>
<p>(Not to say that it couldn&#39;t cause other problems, e.g. the aforementioned &#39;make&#39; answer.)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-931173">
				<div id="div-comment-931173" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Nick Ross</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110816-00/?p=9893#comment-931173">
			August 20, 2011 at 7:34 am</a>		</div>

		<p>@640k:</p>
<p>There&#39;s already a meta data flag in the directory for backup programs. It&#39;s called the archive flag.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-931193">
				<div id="div-comment-931193" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">640k</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110816-00/?p=9893#comment-931193">
			August 20, 2011 at 11:06 am</a>		</div>

		<p>The archive attribute is broken by design. Even in single tasking DOS.</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>