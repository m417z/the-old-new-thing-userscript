<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (19)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-153853">
				<div id="div-comment-153853" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Larry Osterman</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040312-00/?p=40273#comment-153853">
			March 12, 2004 at 7:15 am</a>		</div>

		<p>How about AccessCheckWithTypedResultListAuditAlarm?  </p>
<p>Thats my personel favorite,<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-153863">
				<div id="div-comment-153863" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Matt</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040312-00/?p=40273#comment-153863">
			March 12, 2004 at 7:20 am</a>		</div>

		<p>Raymond,</p>
<p>Can you go into more detail about what the &quot;Generic All&quot; permissions to &quot;Local System&quot; means and its ramifications?  Even with the documentation you linked, it&#8217;s a little ambiguous, and I&#8217;m rather certain there are serious security ramifications when one holds a generic allow to local system.</p>
<p>I also assume that you&#8217;re an administrator on your machine and that you wouldn&#8217;t have this generic allow to local system if you weren&#8217;t.  (I&#8217;d test it but I don&#8217;t have a comiler handy and I&#8217;m being lazy.)</p>
<p>I think many of us would find a followup narrative on this topic to be quite informative.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-153873">
				<div id="div-comment-153873" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Michael</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040312-00/?p=40273#comment-153873">
			March 12, 2004 at 7:30 am</a>		</div>

		<p>Amen to Matt&#8217;s comment. We could definitely need more information on this subject.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-153883">
				<div id="div-comment-153883" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://weblogs.asp.net/oldnewthing' rel='external nofollow' class='url'>Raymond Chen</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040312-00/?p=40273#comment-153883">
			March 12, 2004 at 7:32 am</a>		</div>

		<p>A;GA;;;SY means what it says: The Local System account has full access to your process and the things it creates. You typically want to grant SY access to your stuff so services can do things like content-index it or repair a broken shortcut.</p>
<p>And no, I am not local administrator.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-153903">
				<div id="div-comment-153903" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Matt</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040312-00/?p=40273#comment-153903">
			March 12, 2004 at 7:40 am</a>		</div>

		<p>Doh. I was thinking backward.  I was thinking that it mean that my object had full access to local system.  (Particularly, I was thinking my process/thread had full access to localsystem.)</p>
<p>Your clarification makes a lot more sense.  Thanks!</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-153913">
				<div id="div-comment-153913" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://weblogs.asp.net/oldnewthing' rel='external nofollow' class='url'>Raymond Chen</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040312-00/?p=40273#comment-153913">
			March 12, 2004 at 7:45 am</a>		</div>

		<p>Objects don&#8217;t access things; users do. So users have access to objects, not the other way around.</p>
<p>I can write a little more but I&#8217;m not an expert on how this all works, so what I write will not really go as deeply in-depth as some of my other stuff.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-153973">
				<div id="div-comment-153973" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">David Kafrissen</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040312-00/?p=40273#comment-153973">
			March 12, 2004 at 12:22 pm</a>		</div>

		<p>I know what Hungarian notation is but what is:<br />
<br />NT variable naming convention </p>
<p>Regards,</p>
<p>Dave</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-153983">
				<div id="div-comment-153983" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Larry Osterman</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040312-00/?p=40273#comment-153983">
			March 12, 2004 at 2:04 pm</a>		</div>

		<p>It&#8217;s the naming conventions laid out in the NT OS/2 Design Workbook :)<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-153993">
				<div id="div-comment-153993" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Peter Montgomery</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040312-00/?p=40273#comment-153993">
			March 12, 2004 at 3:33 pm</a>		</div>

		<p>I appreciate the non-Hungarian approach for this entry.  It makes the code much cleaner to my eyes.</p>
<p>     Thanks,<br />
<br />     PeterM</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-154013">
				<div id="div-comment-154013" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.redwoodroot.org' rel='external nofollow' class='url'>Peter Evans</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040312-00/?p=40273#comment-154013">
			March 13, 2004 at 5:31 am</a>		</div>

		<p>I always liked ImpersonateSelf. ;)</p>
<p>You tell me who You are and I will check if I want to trust you.</p>
<p>Gotta love the reflexive nature of security.<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-154023">
				<div id="div-comment-154023" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">runtime</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040312-00/?p=40273#comment-154023">
			March 13, 2004 at 8:22 am</a>		</div>

		<p>Don&#8217;t forget the COM APIs CoMarshallInterThreadInterfaceInStream() and CoGetInterfaceAndReleaseStream(). :-)<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-154053">
				<div id="div-comment-154053" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Tom</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040312-00/?p=40273#comment-154053">
			March 13, 2004 at 9:36 am</a>		</div>

		<p>Whilst on the subject of naming conventions, is there an interesting story behind the name of the &quot;mouse_event&quot; function?<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-154063">
				<div id="div-comment-154063" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://weblogs.asp.net/oldnewthing/' rel='external nofollow' class='url'>Raymond Chen</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040312-00/?p=40273#comment-154063">
			March 13, 2004 at 9:40 am</a>		</div>

		<p>mouse_event: Not really. It was the function used by the old mouse driver to inform USER that there was input back in Windows 1.0.  It has long since been deprecated in favor of SendInput.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-154113">
				<div id="div-comment-154113" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Fuggles</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040312-00/?p=40273#comment-154113">
			March 14, 2004 at 9:39 am</a>		</div>

		<p>Speaking of naming conventions, how did one api get structures named PROCESS_INFORMATION and STARTUPINFO?</p>
<p>Is this some kind of cruel joke?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-154123">
				<div id="div-comment-154123" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Pavel Lebedinsky</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040312-00/?p=40273#comment-154123">
			March 14, 2004 at 3:18 pm</a>		</div>

		<p>&gt; I think many of us would find a followup narrative on this topic to be quite informative</p>
<p>Read Programming Windows Security (<a target="_new" href="http://www.develop.com/books/pws" rel="nofollow">http://www.develop.com/books/pws</a>).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-156493">
				<div id="div-comment-156493" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://weblogs.asp.net/ptorr/' rel='external nofollow' class='url'>Peter Torr</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040312-00/?p=40273#comment-156493">
			March 20, 2004 at 12:13 am</a>		</div>

		<p>&gt; Objects don&#8217;t access things; users do. So users have access to objects, not the other way around. &lt;</p>
<p>In Windows security, which is based on principals. In the CLR, or IE, or other environments with code access security, objects access objects and can have fewer permissions than the user running the code (but never more permissions!). </p>
<p>Kind of OT for a non-.NET blog, I know :-)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-156533">
				<div id="div-comment-156533" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://weblogs.asp.net/oldnewthing' rel='external nofollow' class='url'>Raymond Chen</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040312-00/?p=40273#comment-156533">
			March 20, 2004 at 6:18 am</a>		</div>

		<p>This works as long as you don&#8217;t allow arbitrary code to run. Once you allow that, you lose code access security because you can never be sure who your caller is.</p>
<p><a target="_new" href="http://weblogs.asp.net/oldnewthing/archive/2004/01/01/47042.aspx" rel="nofollow">http://weblogs.asp.net/oldnewthing/archive/2004/01/01/47042.aspx</a></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-156613">
				<div id="div-comment-156613" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://weblogs.asp.net/ptorr/' rel='external nofollow' class='url'>Peter Torr</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040312-00/?p=40273#comment-156613">
			March 20, 2004 at 2:15 pm</a>		</div>

		<p>Well yeah&#8230; you *can* have fewer permissions than the user, but that doesn&#8217;t necessarily mean you actually *do* :-). Native / FullTrust code has whatever you have including the ability to completely mess up the stack or other important  memory structures. </p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-272573">
				<div id="div-comment-272573" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.donews.net/zwell/archive/2005/04/24/349352.aspx' rel='external nofollow' class='url'>zwell</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040312-00/?p=40273#comment-272573">
			April 24, 2005 at 9:26 am</a>		</div>

		<p>Ping Back来自：www.donews.net</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>