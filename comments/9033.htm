<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (18)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-949613">
				<div id="div-comment-949613" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20111125-00/?p=9033#comment-949613">
			November 25, 2011 at 7:38 am</a>		</div>

		<p>I read this, thinking yeah I&#39;ve built the 40,000 item tree before (it takes about 30 seconds on a 2GHz PIV).</p>
<p>Then I realized you&#39;re talking about &gt;10,000 nodes at any one level. Yeah, that&#39;s too big.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-949623">
				<div id="div-comment-949623" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">KS</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20111125-00/?p=9033#comment-949623">
			November 25, 2011 at 7:39 am</a>		</div>

		<p>&quot;list box with tens of thousands of items&quot;? Look at IE&#39;s &quot;Add to Favorites&quot; dialog -&gt; Create in. There it is. Maybe you could enlighten the IE team that this is a &quot;horrible user interface&quot;? Maybe then they listen.</p>
<div class="post">[<i>? Mine has only six items, not ten thousand. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-949633">
				<div id="div-comment-949633" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">acq</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20111125-00/?p=9033#comment-949633">
			November 25, 2011 at 8:39 am</a>		</div>

		<p>&quot;treeview needs to verify that the hInsert&shy;After is a valid child of the hParent&quot;</p>
<p>Wow, I&#39;ve never seen in the documentation that the hInsert&shy;After must be a child of hParent. The only thing I&#39;ve read was: &quot;hInsertAfter: Handle to the item after which the new item is to be inserted.&quot; I always beleived it&#39;s the last inserted item independent of parent/child relationship.</p>
<div class="post">[<i>Not sure what you mean by &quot;the last inserted item independent of parent/child relationship&quot;. If you say &quot;Insert C as a new child of A after B&quot;, then B has to be a child of A also; otherwise you have a tree situation where C == NextSibling(B), yet Parent(C) != Parent(B). -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-949663">
				<div id="div-comment-949663" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">AsmGuru62</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20111125-00/?p=9033#comment-949663">
			November 25, 2011 at 9:19 am</a>		</div>

		<p>Tree view where more than 32K of items got expanded can&#39;t properly navigate &#8211; scrollbars are using old style 16-bit type of navigation.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-949673">
				<div id="div-comment-949673" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">640k</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20111125-00/?p=9033#comment-949673">
			November 25, 2011 at 9:41 am</a>		</div>

		<p>And that&#39;s why windows7&#39;s explorer doesn&#39;t use treeview any more. Navigating to a folder with 100k+ files/folder nearly hangs previous OS, at least it pause IIS for a while (websites temporary down).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-949693">
				<div id="div-comment-949693" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Leo Davidson</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20111125-00/?p=9033#comment-949693">
			November 25, 2011 at 9:57 am</a>		</div>

		<p>@640k: Spy++ tells me Windows Explorer is still using a SysTreeView32 control.</p>
<p>(At least in Windows 7. I don&#39;t have Win8 to hand.)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-949703">
				<div id="div-comment-949703" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">jon</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20111125-00/?p=9033#comment-949703">
			November 25, 2011 at 10:38 am</a>		</div>

		<p>@Leo Davidson: A SysTreeView32 control with lots of undocumented features, you mean :)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-949713">
				<div id="div-comment-949713" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">acq</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20111125-00/?p=9033#comment-949713">
			November 25, 2011 at 12:03 pm</a>		</div>

		<p>&quot;Given that a treeview is, well, a tree structure, it&#39;s not clear what &quot;after&quot; means when applied to a tree as a whole&quot;</p>
<p>I agree. For me it was also unclear that hInsertAfter can even be &quot;TVI_ROOT: Add the item as a root item.&quot; Why that?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-949723">
				<div id="div-comment-949723" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">CarlD</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20111125-00/?p=9033#comment-949723">
			November 25, 2011 at 12:51 pm</a>		</div>

		<p>&quot;You&#39;ll probably want to consider a better way of presenting the information than in a tree view that goes on for hundreds of screens.&quot;</p>
<p>Or a combo box that tries to cram 10,000 items into a scrollable, non-searchable drop-down!</p>
<p>Unfortuantely, sometimes you have no choice: e.g. a query-based parameter in SSRS allows for one UI representation: &nbsp;a combo box, regardless of how many items might be presented. &nbsp;It is truly a horrible UI experience.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-949733">
				<div id="div-comment-949733" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Phaeron</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20111125-00/?p=9033#comment-949733">
			November 25, 2011 at 1:19 pm</a>		</div>

		<p>Having run into this problem before, the counterpoints I would make are that:</p>
<p>1) You can see this performance issue with about a thousand nodes, which isn&#39;t that bad to browse if the tree view is full screen height.</p>
<p>2) You don&#39;t always have enough control over the data that you receive.</p>
<p>3) In my view, it&#39;s sub-optimal design for a UI control to have O(N^2) insertion performance when populated in natural order.</p>
<p>The danger with having an O(N^2) situation like this is that it doesn&#39;t just make the program slow as N grows large but instead it makes the program unusable. Since a tree view is often used for the top-level view of data, the alternatives for shortening the node list aren&#39;t great &#8212; both chunking into intermediate nodes and &quot;display more&quot; links seem more awkward to me from a usability standpoint.</p>
<p>I did notice that this performance issue is now documented in MSDN, though, which is good.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-949653">
				<div id="div-comment-949653" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">acq</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20111125-00/?p=9033#comment-949653">
			November 25, 2011 at 9:17 am</a>		</div>

		<p>&quot;Not sure what you mean by &quot;the last inserted item independent of parent/child relationship&quot;</p>
<p>Now I understand that what is maintained internally with InsertItem is a single-linked list of all children of the same parent and that hInsert&shy;After is in the context of that list. However, I just assumed that what I change is &quot;a treeview&quot; and hInsert&shy;After is a handle to the element in a treeview, not necessarily a child. So now I&#39;m not surprised that</p>
<p>&quot;a lot of programs pass garbage for hInsert&shy;After&quot;</p>
<p>since I know that code I&#39;ve maintained used the wrong assumption of giving the last inserted item *in a treeview* not the last inserted item of the given parent. I can imagine more people didn&#39;t understand what was supposed to be passed there. Documentation also notes that TVI_LAST is bad, but not that it&#39;s again only about the children, not about all the items in a treeview.</p>
<p>Thanks a lot for this insight!</p>
<div class="post">[<i>Given that a treeview is, well, a tree structure, it&#39;s not clear what &quot;after&quot; means when applied to a tree as a whole, since the nodes in a tree are not linear. Even if you mean &quot;after in inorder traversal&quot;, that&#39;s not precise enough: Given the tree with A as the root, B as the child, C as grandchild, then inserting item D &quot;after&quot; C could result in D as a sibling of C or B; both would result in the same inorder traversal. The &quot;after&quot; terminology matches <code>Set&shy;Window&shy;Pos</code>&#39;s <code>hwnd&shy;Insert&shy;After</code> parameter, and also matches <code>Tree&shy;View_Get&shy;Next&shy;Item(TVGN_NEXT)</code>. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-949803">
				<div id="div-comment-949803" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Neil</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20111125-00/?p=9033#comment-949803">
			November 27, 2011 at 2:29 am</a>		</div>

		<p>If you thought a large combobox was bad, then consider the case of a large popup menubutton &#8211; you don&#39;t have a scrollbar, nor any indication of the current item in the list. (Yes, this was an application badly ported from the Mac.)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-949823">
				<div id="div-comment-949823" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Mehrdad</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20111125-00/?p=9033#comment-949823">
			November 27, 2011 at 11:18 am</a>		</div>

		<p>Cool post!</p>
<p>But why is it _slower_ to destroy the window afterward, if you insert things backward?</p>
<div class="post">[<i>The order of insertion should have no effect on destruction performance. The treeview doesn&#39;t remember what order you inserted them. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-949843">
				<div id="div-comment-949843" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Kelden</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20111125-00/?p=9033#comment-949843">
			November 28, 2011 at 7:00 am</a>		</div>

		<p>In VB6, you can insert 50k items in about 1 second. But if you try to close the window, it takes about 25 seconds to destroy the window.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-949963">
				<div id="div-comment-949963" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Adrian</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20111125-00/?p=9033#comment-949963">
			November 28, 2011 at 1:33 pm</a>		</div>

		<p>When writing a backwards counting loop, you have to be careful if your loop index is unsigned. &nbsp;As more programmers use STL containers, which use std::size_t for size(), it becomes more common for indexes to be unsigned types. &nbsp;A downward counting loop is a tad safer written as:</p>
<p>for (i = array.Count(); i &gt; 0; ) {</p>
<p>&nbsp;&#8211;i;</p>
<p>&nbsp;// loop body here</p>
<p>}</p>
<p>This idiom works whether the index is signed or unsigned.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-950053">
				<div id="div-comment-950053" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">KS</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20111125-00/?p=9033#comment-950053">
			November 29, 2011 at 7:51 am</a>		</div>

		<p>@Raymond: You have only 6 Favorites? Good for you. The average user has a few hundred (not tens of thousands, of course), sometimes organized in several folder levels. Now imagine what happens in a combobox with all that expanded &#8230;</p>
<div class="post">[<i>I have plenty of favorites. But the combo box in question doesn&#39;t show all the favorites; only the folders. And I organize my favorites into just 6 folders. If you created hundreds of folders to organize your favorites, then you&#39;ve basically said &quot;You know what, I like seeing hundreds of things at once &#8211; bring it on!&quot; -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-950273">
				<div id="div-comment-950273" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">.dan.g.</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20111125-00/?p=9033#comment-950273">
			November 29, 2011 at 2:43 pm</a>		</div>

		<p>Thanks Raymond, I implemented your suggested solution (requiring changes to 6 lines of code) and whatever the speed benefits are it&#39;s got to be better than nothing!</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-950553">
				<div id="div-comment-950553" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">JA</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20111125-00/?p=9033#comment-950553">
			December 1, 2011 at 6:35 am</a>		</div>

		<p>And this is why I am burning out on Windows programming, having to know minutia such as this in order to excel is getting old.</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>