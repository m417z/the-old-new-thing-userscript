<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (14)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-268733">
				<div id="div-comment-268733" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.apptranslator.com' rel='external nofollow' class='url'>Serge Wautier</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050331-00/?p=36003#comment-268733">
			March 31, 2005 at 7:27 am</a>		</div>

		<p>According to the docs, DS_NOFAILCREATE is a Win9x-only thingie. Too bad&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-268753">
				<div id="div-comment-268753" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">KiwiBlue</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050331-00/?p=36003#comment-268753">
			March 31, 2005 at 9:23 am</a>		</div>

		<p>Raymond wrote:<br />
<br />For example, there&#8217;s a program out there that relies on the subtle placement and absence of the WS_BORDER style to decide whether a control is a combo box or a listbox.</p>
<p>Is this program trying to implement resizable dialogs?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-268773">
				<div id="div-comment-268773" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Adrian</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050331-00/?p=36003#comment-268773">
			March 31, 2005 at 9:29 am</a>		</div>

		<p>I&#8217;m thrilled to get all these dialog manager details in this series.  I spent a long time figuring out how it all works for various custom things I&#8217;ve had to do in the past.  I&#8217;ll be curious to see if I&#8217;ve missed anything as Raymond illuminates this mysterious and misuderstood part of Windows.</p>
<p>Here&#8217;s a painful lesson I&#8217;ve learned about dialog units:</p>
<p>When converting dialog units to pixels, there&#8217;s a subtle difference between converting the corners of the rectangle (as MapDialogRect does) and converting the top-left corner and the dimensions (as Raymond has shown).  In the former approach, the exact size can depend on where the control is placed on the dialog.  The way Raymond has shown it, the sizes will always be consistent, regardless of where on the dialog the control is placed.  It both schemes, it can be impossible to get consistent spacing between controls in a long list (like a stack of radio buttons or checkboxes).</p>
<p>As your dimensions get larger, the truncated division remainders become significant.</p>
<p>I wish UI designers better understood these limitations, so they&#8217;d realize that we simply can&#8217;t place items to the pixel.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-268763">
				<div id="div-comment-268763" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Brian</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050331-00/?p=36003#comment-268763">
			March 31, 2005 at 9:33 am</a>		</div>

		<p>I&#8217;m curious, in the code do you mark the appcompat stuff really clearly?</p>
<p>Something like:</p>
<p>HWND hwndDefaultFocus = GetNextDlgTabItem(hdlg, NULL, FALSE);<br />
<br />// BEGIN APP COMPAT &#8212; WidgetCo&#8217;s Widget Extreme 2000 assumes this is null<br />
<br />if ( app == WIDGETEXTREME2000 ) {<br />
<br />hwndDefaultFocus = NULL;<br />
<br />}<br />
<br />// END APP COMPAT<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-268793">
				<div id="div-comment-268793" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Jon Potter</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050331-00/?p=36003#comment-268793">
			March 31, 2005 at 12:37 pm</a>		</div>

		<p>A long time ago I designed a dialog manager for the Amiga which used two sets of coordinates for every object. One was a &quot;character coordinate&quot; that scaled with the font, and the other was a &quot;pixel coordinate&quot; that was absolute. It made it a lot more complicated designing dialogs (especially since I never bothered to write a graphical dialog editor for it) but it did let you position things with pixel accuracy if you wanted.<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-268813">
				<div id="div-comment-268813" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">John Elliott</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050331-00/?p=36003#comment-268813">
			March 31, 2005 at 3:13 pm</a>		</div>

		<p>That Amiga dialog manager sounds like the way GEM stores object trees in its resource files; objects have a position in characters and an optional offset in pixels. The resource editor distinguishes between &#8216;dialogs&#8217; (everything snaps to a character grid) and &#8216;panels&#8217; (pixel offsets are allowed) but this is just an editing convenience; they both end up as a TREE resource. So, for that matter, do menus.<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-268823">
				<div id="div-comment-268823" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.abstractspoon.com' rel='external nofollow' class='url'>daniel godson</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050331-00/?p=36003#comment-268823">
			March 31, 2005 at 3:22 pm</a>		</div>

		<p>could you expand a little on why Windows enforces the WS_EX_NOPARENTNOTIFY flag.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-268833">
				<div id="div-comment-268833" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blogs.msdn.com/oldnewthing/' rel='external nofollow' class='url'>Raymond Chen</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050331-00/?p=36003#comment-268833">
			March 31, 2005 at 3:22 pm</a>		</div>

		<p>WS_EX_NOPARENTNOTIFY: I think you can guess.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-268843">
				<div id="div-comment-268843" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.abstractspoon.com' rel='external nofollow' class='url'>daniel godson</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050331-00/?p=36003#comment-268843">
			March 31, 2005 at 3:32 pm</a>		</div>

		<p>because the parent is the dialog who just created the controls? doh!</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-268883">
				<div id="div-comment-268883" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Norman Diamond</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050331-00/?p=36003#comment-268883">
			March 31, 2005 at 8:53 pm</a>		</div>

		<blockquote><p>
  (For example, you forgot to call the<br />
  <br />&gt; InitCommonControlsEx function</p>
<p>Now that was good for a chuckle.  Case sensitivity slipped it under the covers, but reading the linked page revealed it:</p>
<p>&gt; BOOL InitCommonControlsEx(<br />
  <br />&gt; LPINITCOMMONCONTROLSEX lpInitCtrls<br />
  <br />&gt; );</p>
<p>A short pointer is inadequate to init common control sex, right?
</p></blockquote>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-268893">
				<div id="div-comment-268893" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">gkdada</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050331-00/?p=36003#comment-268893">
			March 31, 2005 at 10:16 pm</a>		</div>

		<p>May be this is the wrong place, but this is not really all THAT off-topic, considering you are discussing dialogs.</p>
<p>Why do dialog controls refuse to use the provided Rgn and insist on using the rectangle instead? Recently I ran into solid problem with these and had to invent a CNonButton class.<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-268903">
				<div id="div-comment-268903" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.accidentalscientist.com' rel='external nofollow' class='url'>Simon Cooke [exMSFT]</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050331-00/?p=36003#comment-268903">
			April 1, 2005 at 12:43 am</a>		</div>

		<p>gkdada &#8211; Refuse to use the provided Rgn for&#8230; erm&#8230; what, precisely?</p>
<p>If you&#8217;re talking about painting buttons, and wondering why they don&#8217;t draw their frames in the same shape as their regions, it&#8217;s because it would look butt ugly in most cases, and you as a developer should provide your own special-case code.</p>
<p>Besides, XP Themes would cause problems with this.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-268913">
				<div id="div-comment-268913" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">asp fan</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050331-00/?p=36003#comment-268913">
			April 1, 2005 at 5:07 am</a>		</div>

		<p>Please explain the reason for WS_EX_NOPARENTNOTIFY. It&#8217;s useful for mouse events and not only for creation/destruction of the child window.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-269143">
				<div id="div-comment-269143" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">gkdada</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050331-00/?p=36003#comment-269143">
			April 1, 2005 at 1:09 pm</a>		</div>

		<p>Simon,</p>
<p>Here are the steps:</p>
<p>1. I do a SetWindowRgn to set a round-rect rgn (for example) to a button.</p>
<p>2. In OnPaint(of the subclassed button class), I do a GetWindowRgn and FillRgn with a color or pattern or something.</p>
<p>3. I then call FrameRgn to paint a border onto the button (using the same Rgn that GetWindowRgn returned in step 2)</p>
<p>In the case of a CButton derived class, this results in step 2 filling a RECTANGULAR region, while step 3 framing a ROUND-RECT region. In other words, the paint spills outside the framed area.</p>
<p>If you derive your button class directly from CWnd (and do all the button things painstakingly) with the exact same steps mentioned above, the button comes out nice and clean. No spills.<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>