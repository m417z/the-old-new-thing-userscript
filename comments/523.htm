<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (10)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-1137763">
				<div id="div-comment-1137763" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140711-00/?p=523#comment-1137763">
			July 11, 2014 at 7:07 am</a>		</div>

		<p>I&#39;ve only duplicated handles with the intent to keep the original with pipes.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-alegrigoriev odd alt thread-odd thread-alt depth-1" id="comment-1137783">
				<div id="div-comment-1137783" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/alegr1' rel='external nofollow' class='url'>alegr1</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140711-00/?p=523#comment-1137783">
			July 11, 2014 at 7:31 am</a>		</div>

		<p>One thing separate for duplicated handles is a file lock. At least when the duplication happens as a result of handle inheritance. The LockFile documentation doesn&#39;t say what happens for explicitly duplicated handles.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1137793">
				<div id="div-comment-1137793" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Jeff</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140711-00/?p=523#comment-1137793">
			July 11, 2014 at 8:31 am</a>		</div>

		<p>I duplicate handles to make the object easier to hold&#8230;</p>
<p>&#8230;better weight distribution and all that.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1137813">
				<div id="div-comment-1137813" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">dave</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140711-00/?p=523#comment-1137813">
			July 11, 2014 at 8:45 am</a>		</div>

		<p>&gt;One thing separate for duplicated handles is a file lock.</p>
<p>LockFile allegedly acquires the range lock &#39;for the calling process&#39;. </p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1137823">
				<div id="div-comment-1137823" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140711-00/?p=523#comment-1137823">
			July 11, 2014 at 9:24 am</a>		</div>

		<p>&gt; LockFile allegedly acquires the range lock &#39;for the calling process&#39;. </p>
<p>Since when are duplicated handles guaranteed to be in the same process?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1137843">
				<div id="div-comment-1137843" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">John Doe</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140711-00/?p=523#comment-1137843">
			July 11, 2014 at 10:43 am</a>		</div>

		<p>@Joshua, I&#39;ve done the same for the standard handles in the same process.</p>
<p>Since there&#39;s no way to open the console for overlapped or asynchronously IO (the console is not actually a file-like kernel object), and since the standard handles, console or not, are synchronous for historical reasons, you have to delegate console reads to another thread to avoid blocking. &nbsp;Duplicating means you can use _open_osfhandle, if you need to use some higher-level reader linked with the C runtime that will _close the C file descriptor when it finishes, or in fact any function of any framework on which you must provide file-like thing (based on the duplicated handle) that gets closed.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1137873">
				<div id="div-comment-1137873" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Myria</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140711-00/?p=523#comment-1137873">
			July 11, 2014 at 12:44 pm</a>		</div>

		<p>DuplicateHandle is why the PROCESS_DUP_HANDLE permission is like PROCESS_VM_WRITE in that it allows god access to a process: you can duplicate a process&#39;s GetCurrentProcess handle (reinterpret_cast&lt;HANDLE&gt;(-1)) to make a full-access handle to another process.</p>
<p>Is WSADuplicateSocketW the proper way to duplicate a socket, even when it&#39;s known to be a kernel handle? &nbsp;And does WSADuplicateSocketW work on the same process?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-alegrigoriev odd alt thread-odd thread-alt depth-1" id="comment-1137883">
				<div id="div-comment-1137883" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/alegr1' rel='external nofollow' class='url'>alegr1</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140711-00/?p=523#comment-1137883">
			July 11, 2014 at 3:18 pm</a>		</div>

		<p>@Myria:</p>
<p>WinSockets state that the handles cannot (should not) be duplicated to another process. I think it&#39;s because of using completion ports.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1137913">
				<div id="div-comment-1137913" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Harry Johnston</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140711-00/?p=523#comment-1137913">
			July 11, 2014 at 9:25 pm</a>		</div>

		<p>@alegr1: you can duplicate socket handles across processes using WSADuplicateSocket, you just can&#39;t use DuplicateHandle. &nbsp;The documentation says &quot;A socket handle should not be used with the DuplicateHandle function. The presence of layered service providers (LSPs) can cause this to fail and there is no way for the destination process to import the socket handle.&quot;</p>
<p>As a side note, and to provide some context, socket handles are surprisingly complicated beasts &#8211; for a start, there are two completely different kinds. &nbsp;From what I&#39;ve gathered, IFS socket handles put the transport service provider directly in the driver stack, whereas with non-IFS socket handles the file system drivers have to call the provider on the user&#39;s behalf if you use non-winsock I/O functions such as ReadFile. &nbsp;Apparently that requires a transition back to user mode, impacting performance, which is why &quot;it is recommended that socket handles be used only with Winsock functions.&quot;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1137953">
				<div id="div-comment-1137953" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">KJK::Hyperion</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140711-00/?p=523#comment-1137953">
			July 14, 2014 at 7:30 am</a>		</div>

		<p>ReOpenFile doesn&#39;t work with pipes: a re-open counts as a different connection on the same pipe, it will not result in two file objects sharing the same connection. This means you can&#39;t do overlapped I/O on an anonymous pipe, because CreatePipe always opens both ends of the pipe in synchronized mode</p>
<p>DuplicateHandle safely works with sockets IF you are absolutely sure that the socket&#39;s provider stack is entirely composed of kernel mode (IFS) components. I&#39;m not sure what happens if you try to re-open a socket, though (never tried)</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>