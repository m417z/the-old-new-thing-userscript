<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (10)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1 parent" id="comment-1285255">
				<div id="div-comment-1285255" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">DWalker07</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170216-00/?p=95455#comment-1285255">
			February 16, 2017 at 9:46 am</a>		</div>

		<p>Exactly; the documentation is unclear, and the flag (in hindsight) could have been named WT_EXECUTE­IN­THE THREADPOOLSONEANDONLYPERSISTEN­THREAD.</p>

		
				</div>
		<ol class="children">
		<li class="comment odd alt depth-2 parent" id="comment-1285276">
				<div id="div-comment-1285276" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">IChrisI</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170216-00/?p=95455#comment-1285276">
			February 16, 2017 at 11:35 am</a>		</div>

		<p>How about WT_EXECUTEBLOCKING?</p>

		
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-oldnewthing bypostauthor even depth-3" id="comment-1285286">
				<div id="div-comment-1285286" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Raymond+Chen+-+MSFT' rel='external nofollow' class='url'>Raymond Chen - MSFT</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170216-00/?p=95455#comment-1285286">
			February 16, 2017 at 12:32 pm</a>		</div>

		<p>&#8220;Why yes, my task is blocking. I&#8217;ll set this flag so the thread pool knows that my task will block for a long time.&#8221;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt depth-3" id="comment-1285335">
				<div id="div-comment-1285335" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170216-00/?p=95455#comment-1285335">
			February 16, 2017 at 4:00 pm</a>		</div>

		<p>WT_HOGENTIREPOOL</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment even thread-odd thread-alt depth-1 parent" id="comment-1285296">
				<div id="div-comment-1285296" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Piotr</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170216-00/?p=95455#comment-1285296">
			February 16, 2017 at 12:50 pm</a>		</div>

		<p>Why does the execution time matter in a thread pool? Shouldn&#8217;t it be irrelevant? Shouldn&#8217;t a thread pool be just an array of pre-created threads waiting for work no matter how long it takes? Like a thread pool waiting for HTTP requests &#8211; some may finish in less than a second, while some may stall due to a long SQL query.</p>

		
				</div>
		<ol class="children">
		<li class="comment odd alt depth-2" id="comment-1285305">
				<div id="div-comment-1285305" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Wear</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170216-00/?p=95455#comment-1285305">
			February 16, 2017 at 1:46 pm</a>		</div>

		<p>Because if everyone used the thread pool to run long tasks there would be no threads in the thread pool. You also wouldn&#8217;t get any benefit over creating your own threads. The purpose of thread pool is to avoid the overhead of creating a new thread when you only need one for a short time. Rent-a-Thread.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even depth-2" id="comment-1285315">
				<div id="div-comment-1285315" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Brian</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170216-00/?p=95455#comment-1285315">
			February 16, 2017 at 2:55 pm</a>		</div>

		<p>Thread pools work best when the work dispatched to the pool threads all takes roughly the same amount of time (give or take, for some definition of roughly).  Consider the case where you have two generators of work that dispatch to the same thread pool, but the work from each generator is off by, say, three orders of magnitude (some work takes 1 second and some work takes 1000 seconds).  Eventually, all (for some definition of all) of the threads will be occupied doing the 1000 second tasks.<br />
Now, in real life, you get a mix of work dispatched to the thread pool, at a mix of frequencies.  But, if you start getting really long work (where really long is measured in comparison to the other tasks dispatched), bad things start to happen.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment byuser comment-author-wndsks odd alt thread-even depth-1" id="comment-1285325">
				<div id="div-comment-1285325" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/skSdnW' rel='external nofollow' class='url'>skSdnW</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170216-00/?p=95455#comment-1285325">
			February 16, 2017 at 3:39 pm</a>		</div>

		<p>I know this is slightly off topic but it would be fun if you could talk a bit about the original shlwapi threadpool from Win2000, it has several interesting reserved parameters (Id, Tag, Priority) that did not survive the move to the new threadpool in XP. And then the threadpool was changed again in Vista.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-odd thread-alt depth-1 parent" id="comment-1285365">
				<div id="div-comment-1285365" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Will</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170216-00/?p=95455#comment-1285365">
			February 17, 2017 at 5:05 am</a>		</div>

		<p>I saw this in the doc for RegNotifyChangeKeyValue, so what is it trying to say? &#8220;For the original thread pool API, specify WT_EXECUTEINPERSISTENTTHREAD using the QueueUserWorkItem function.&#8221;</p>

		
				</div>
		<ol class="children">
		<li class="comment odd alt depth-2" id="comment-1285665">
				<div id="div-comment-1285665" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">JDG</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170216-00/?p=95455#comment-1285665">
			February 21, 2017 at 12:02 pm</a>		</div>

		<p>It does indeed appear to be incorrectly documented on the MSDN page. So, the client was probably doing it that way because they were told to, simple as that. :-P</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>