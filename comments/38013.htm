<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (7)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-206603">
				<div id="div-comment-206603" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Dan Shechter</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040830-00/?p=38013#comment-206603">
			August 30, 2004 at 8:23 am</a>		</div>

		<p>Actually, this is not entirely true.<br />
<br />Operations (such as Interlocked*) are using the lock# signal on the bus.<br />
<br />According to Intel&#8217;s documentation, IA-32 System programming guide, section 7.1.2.2:<br />
<br />&quot;The integrity of a bus lock is not affected by the alignment of the memory field. The LOCK<br />
<br />semantics are followed for as many bus cycles as necessary to update the entire operand.&quot;</p>
<p>In addition, for PERFORMANCE reasons:<br />
<br />&quot;&#8230; it is recommend that locked accesses be aligned on their natural boundaries for better<br />
<br />system performance:<br />
<br />• Any boundary for an 8-bit access (locked or otherwise).<br />
<br />• 16-bit boundary for locked word accesses.<br />
<br />• 32-bit boundary for locked doubleword access.<br />
<br />• 64-bit boundary for locked quadword access.<br />
<br />&quot;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-206643">
				<div id="div-comment-206643" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://weblogs.asp.net/larryosterman' rel='external nofollow' class='url'>Larry Osterman</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040830-00/?p=38013#comment-206643">
			August 30, 2004 at 10:28 am</a>		</div>

		<p>This may be true for the most recent IA-32 processors, but it certainly was NOT true in the past.  There have been very real bugs (even as far back as the 8088) where unaligned use of the LOCK instruction caused inconsistant results.<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-206673">
				<div id="div-comment-206673" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Jordan Russell</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040830-00/?p=38013#comment-206673">
			August 30, 2004 at 12:03 pm</a>		</div>

		<p>FYI, I checked an old Pentium Pro manual and it includes the same statement.</p>
<p>But one has to wonder whether it holds true on non-Intel x86 processors. I wouldn&#8217;t count on it&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-206683">
				<div id="div-comment-206683" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.virtualdub.org/' rel='external nofollow' class='url'>Phaeron</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040830-00/?p=38013#comment-206683">
			August 30, 2004 at 1:33 pm</a>		</div>

		<p>I wouldn&#8217;t worry about any current non-Intel x86 CPUs. The clones have to maintain a very high level of compatibility or else lots of software, particularly OS kernels, will break. This includes handling a page fault which causes the CPU to attempt invoke a fault handler from an interrupt vector that is on a non-resident page&#8230;.</p>
<p>Digging around a bit on Google Groups, however, I found an article that describes systems that don&#8217;t support unaligned locked transactions (<a target="_new" href="http://groups.google.com/groups?hl=en&amp;lr=&amp;ie=UTF-8&amp;selm=7ulma9%24sg%241%40nnrp1.deja.com" rel="nofollow">http://groups.google.com/groups?hl=en&#038;lr=&#038;ie=UTF-8&#038;selm=7ulma9%24sg%241%40nnrp1.deja.com</a>). It seems that even if the CPU supports such transactions, older multiprocessor glue logic may not. The article also says that such systems aren&#8217;t very compatible in general, though.<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-206723">
				<div id="div-comment-206723" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Mack</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040830-00/?p=38013#comment-206723">
			August 30, 2004 at 2:46 pm</a>		</div>

		<p>I thought the times when people would derogatorily call AMD&#8217;s CPUs &quot;clones&quot; of Intel designs are past&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-206763">
				<div id="div-comment-206763" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Norman Diamond</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040830-00/?p=38013#comment-206763">
			August 30, 2004 at 6:33 pm</a>		</div>

		<p>8/30/2004 10:28 AM Larry Osterman</p>
<p>&gt; There have been very real bugs (even as far<br />
<br />&gt; back as the 8088) where unaligned use of the<br />
<br />&gt; LOCK instruction caused inconsistant<br />
<br />&gt; results. </p>
<p>Something is odd here.</p>
<p>The 8086 did 16-bit bus accesses and it&#8217;s easy to imagine how unaligned addresses might not mix well with the LOCK prefix.  (It&#8217;s also easy to imagine that Intel might have already considered and decided to make it work, so this guess is just a guess.)</p>
<p>The 8088 did 8-bit bus accesses so a 16-bit operand required 2 bus accesses.  There was no meaning to 16-bit alignment.</p>
<p>8/30/2004 1:33 PM Phaeron</p>
<p>&gt; I wouldn&#8217;t worry about any current non-Intel<br />
<br />&gt; x86 CPUs.</p>
<p>Neither did one of my co-workers about 3 years ago.  His code accessed fields of .BMP structures as defined and unaligned.  I don&#8217;t remember if Windows CE recovered after killing the application, or if Windows CE hanged.  Anyway I tried to teach him about alignment and the memcpy() function.  It turned out that my boss had told him that all the fields were aligned and he shouldn&#8217;t worry about unaligned accesses.  Oops.</p>
<p>Personally I think it&#8217;s better if the hardware does handle unaligned operands automatically.  Applications don&#8217;t always get to specify the data layout, and graceful degradation of hardware performance is still tons faster than calling memcpy().</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-206773">
				<div id="div-comment-206773" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Cooney</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040830-00/?p=38013#comment-206773">
			August 31, 2004 at 6:58 am</a>		</div>

		<p>Mack:<br />
<br />&gt;  I thought the times when people would derogatorily call AMD&#8217;s CPUs &quot;clones&quot; of Intel designs are past&#8230;</p>
<p>Well, they <em>are</em> clones, just not design clones. Whether you like it or not Intel still calls the shots on x86-32 behavior. AMD may manages to grab the wheel for x86-64, but only time will tell.</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>