<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (6)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1 parent" id="comment-1332555">
				<div id="div-comment-1332555" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Simon Clarkstone</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180410-00/?p=98475#comment-1332555">
			April 10, 2018 at 11:22 am</a>		</div>

		<p>It occurs to me that the kernel performing a SC before returning to user mode also stops user-mode programs from probing anything about the kernel by executing SC on various locations and seeing which succeed and which fail (or how they fail).</p>
<p>I also like how the SC instruction unconditionally erasing its input value register encourages you (in the case of failure) not to just re-try writing the old value without paying attention to what you got from re-reading. I know the limited size of the instruction word pretty much forces SC to be that way, but it&#8217;s still nice.</p>

		
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-bboorman odd alt depth-2 parent" id="comment-1332595">
				<div id="div-comment-1332595" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Brian_EE' rel='external nofollow' class='url'>Brian_EE</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180410-00/?p=98475#comment-1332595">
			April 11, 2018 at 6:54 am</a>		</div>

		<p>I would think that you couldn&#8217;t probe the kernel memory at all (regardless of how SC behaves). As Raymond mentions in Part 1 of this series, the kernel space / user space division is architectural in the hardware. Base assumption would be that the MMU does its job.</p>

		
				</div>
		<ol class="children">
		<li class="comment even depth-3 parent" id="comment-1332695">
				<div id="div-comment-1332695" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ben Voigt</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180410-00/?p=98475#comment-1332695">
			April 11, 2018 at 9:52 am</a>		</div>

		<p>That stopped being a defensible assumption when Meltdown (and Spectre, but Meltdown is more relevant here) became public.</p>

		
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-bboorman odd alt depth-4" id="comment-1332765">
				<div id="div-comment-1332765" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Brian_EE' rel='external nofollow' class='url'>Brian_EE</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180410-00/?p=98475#comment-1332765">
			April 11, 2018 at 2:01 pm</a>		</div>

		<p>Don&#8217;t confuse the MIPS architecture with x86/x64. You are thinking about speculative execution exploits, which are of a different class.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-bboorman even depth-4 parent" id="comment-1332785">
				<div id="div-comment-1332785" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Brian_EE' rel='external nofollow' class='url'>Brian_EE</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180410-00/?p=98475#comment-1332785">
			April 11, 2018 at 2:34 pm</a>		</div>

		<p>Directly from MIPS: <a href="https://www.mips.com/blog/mips-response-on-speculative-execution-and-side-channel-vulnerabilities/" rel="nofollow">https://www.mips.com/blog/mips-response-on-speculative-execution-and-side-channel-vulnerabilities/</a></p>

		
				</div>
		<ol class="children">
		<li class="comment odd alt depth-5" id="comment-1332855">
				<div id="div-comment-1332855" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ben Voigt</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180410-00/?p=98475#comment-1332855">
			April 12, 2018 at 8:45 am</a>		</div>

		<p>I wasn&#8217;t confusing x86_* with MIPS, I was saying that since such a defect has been discovered in one architecture, it&#8217;s no longer safe for any architecture to simply assert the MMU works, it requires actual analysis and proof.  Apparently the MIPS people agree, because you linked to the response that wouldn&#8217;t even exist if the assumption were made blindly.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>