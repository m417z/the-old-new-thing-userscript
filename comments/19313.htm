<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (38)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-704623">
				<div id="div-comment-704623" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Michael Price</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090130-00/?p=19313#comment-704623">
			January 30, 2009 at 10:47 am</a>		</div>

		<p>&quot;Imagine if you told everybody that the product was late because we pulled the development team off of fixing bugs and told them to write documentation.&quot;</p>
<p>Ahh, this assumes that lack of documentation is not a bug/flaw. &nbsp;It is all about what you view as the &quot;product&quot;. &nbsp;I would venture to say that a far superior approach is to elevate documentation to the position of a first-class feature of the &quot;product&quot;, much in the same fashion that the SDL has supposedly done with software security.</p>
<p>Thus, the missing documentation is an incomplete feature or it is a bug, and can be treated as such.</p>
<p>Of course I have completely glossed over the fact that your post was about the Imaginary Month-Long Documentation Drive (or as I will affectionately name it&#8230; the IMLDD). &nbsp;Nothing to see here&#8230; please move along.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-704633">
				<div id="div-comment-704633" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">ScottB</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090130-00/?p=19313#comment-704633">
			January 30, 2009 at 10:56 am</a>		</div>

		<p>That would make more sense if everyone were good at writing documentation. &nbsp;You shouldn&#8217;t take me off the product I&#8217;m working on to create images for buttons. &nbsp;It&#8217;s not in my skillset. &nbsp;You shouldn&#8217;t pull everyone off to work on technical documentation.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-704643">
				<div id="div-comment-704643" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Bryan</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090130-00/?p=19313#comment-704643">
			January 30, 2009 at 11:12 am</a>		</div>

		<p>I think this boils down to just because you can do X doesn&#8217;t mean that X will actually solve the problem.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-704653">
				<div id="div-comment-704653" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">steve matlock</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090130-00/?p=19313#comment-704653">
			January 30, 2009 at 11:22 am</a>		</div>

		<p>Well, a good point perhaps, but the problem with documentation is scope creep: what do you tell, and who&#8217;s your audience? Do you tell <em>everything</em> to <em>every possible audience</em>? It simply can&#8217;t be done.</p>
<p>Define what you mean by documentation first, then we can decide if a month is sufficient.</p>
<p>No amount of documentation is the right amount until the scope and audience are decided &#8211; it will always be too much and too little, too elementary and too hard, and almost always at the same time.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-704673">
				<div id="div-comment-704673" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Lee</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090130-00/?p=19313#comment-704673">
			January 30, 2009 at 11:28 am</a>		</div>

		<p>I don&#8217;t think a month would be require for a review; I think the reviews for most new technologies could be complete in a day. I agree that the developers shouldn&#8217;t be asked to write the docs, but reviewing the public docs should be a requirement before RTM.</p>
<p>The Windows developer doc teams used to have a &quot;Long Last Look&quot; before major releases where doc team members would look through as much of someone else&#8217;s project(s) as possible (the goal being to put eyes to every page). With current staffing levels this doesn&#8217;t happen regularly any more.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-704693">
				<div id="div-comment-704693" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">James Schend</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090130-00/?p=19313#comment-704693">
			January 30, 2009 at 11:47 am</a>		</div>

		<p>People who criticize Microsoft generally assume either that Microsoft is a mom-and-pop software developer with 4 employees, or that Microsoft has never heard of &quot;specialization&quot; and all their employees are equally good at everything.</p>
<p>Just ignore criticisms like that, they&#8217;re obviously from people who have no clue about software development, or how to make large projects work.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-704703">
				<div id="div-comment-704703" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Daniel</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090130-00/?p=19313#comment-704703">
			January 30, 2009 at 12:41 pm</a>		</div>

		<p>&quot;Imagine if you told everybody that the product was late because we pulled the development team off of fixing bugs and told them to write documentation.&quot;</p>
<ul>
<li>I think common management practice is to tell people &quot;This is the month where everyone focuses on documentation/security/whatever, but do this without delaying any of your other work.&quot;</li>
</ul>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-704733">
				<div id="div-comment-704733" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">I'm old.</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090130-00/?p=19313#comment-704733">
			January 30, 2009 at 1:25 pm</a>		</div>

		<p>&quot;Well, part of it is that most people suck at technical writing. The technical part, maybe, but the writing almost definitely not. Writing is hard (as I&#8217;ve learned firsthand), and technical writing is a special genre of writing that requires a comparatively rare skill set, combining technical background with strong writing skills.&quot;</p>
<p>Sounds like a totally lame excuse to me. In the first post you linked to you said, the doc team relies on the devs for info and that the devs dont write it themselves. You have two sets of people one good at writing, one good at the technical stuff. So whats the problem here?</p>
<p>Also does anyone else get the feel that Raymonds writing has a tinge of the &quot;victim-complex&quot;? I&#8217;ve been reading this for a while but Its one of those things that you don&#8217;t notice because it happens gradually over time. Maybe I&#8217;m wrong.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-704743">
				<div id="div-comment-704743" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">godlzila</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090130-00/?p=19313#comment-704743">
			January 30, 2009 at 1:41 pm</a>		</div>

		<p>@I&#8217;m Old</p>
<p>&quot;Also does anyone else get the feel that Raymonds writing has a tinge of the &quot;victim-complex&quot;? I&#8217;ve been reading this for a while but Its one of those things that you don&#8217;t notice because it happens gradually over time. Maybe I&#8217;m wrong.&quot;</p>
<p>Not for nothing but what does it matter what &quot;tinge&quot; he may have? Does it somehow make you feel good to point that out? Maybe we could all sit around and poke fun at Raymond? Kick sand in the guys face?</p>
<p>I have to admit the personal attacks on Raymond really wear thin over time. I mean seriously does it make you feel good to &quot;stick it to the man&quot; or something? +1 against evil M$</p>
<p>Lame excuse? Boy I would sure love to audit your code someday. I am sure you&#8217;ve never made any poor decisions ever, regardless of intention. I am sure you never had to drop a feature to meet a deadline. Never had to skimp on documentation, if you even write it at all.</p>
<p>He&#8217;s pointing out difficulties we all have when tasked with writing documentation. Point blank, it&#8217;s hard, and you&#8217;re not going to be able to please everyone all the time.</p>
<p>Microsoft, like any company, like your company if you even write code in a collaborative environment will have various strengths and weaknesses that ebb and flow over time.</p>
<p>I for one am happy to read every so often that we&#8217;re not the only ones who have tough decisions to make, and occassionally making a wrong one comes with the territory.</p>
<p>Raymond, please continue to write in whatever tone you feel like. Your interaction is appreciated and not taken for granted.</p>
<p>Sorry for the rant.</p>
<p>Godzila</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-704783">
				<div id="div-comment-704783" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">I'm Old</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090130-00/?p=19313#comment-704783">
			January 30, 2009 at 2:30 pm</a>		</div>

		<p>&quot;Not for nothing but what does it matter what &quot;tinge&quot; he may have? Does it somehow make you feel good to point that out? Maybe we could all sit around and poke fun at Raymond? Kick sand in the guys face?</p>
<p>I have to admit the personal attacks on Raymond really wear thin over time. I mean seriously does it make you feel good to &quot;stick it to the man&quot; or something? +1 against evil M$&quot;</p>
<p>Yeah, it makes me feel good. Shows how cool I am. I get instant geek cred. Right? Yawn.</p>
<p>&quot;Lame excuse? Boy I would sure love to audit your code someday. I am sure you&#8217;ve never made any poor decisions ever, regardless of intention. I am sure you never had to drop a feature to meet a deadline. Never had to skimp on documentation, if you even write it at all.&quot;</p>
<p>I don&#8217;t need to display my credentials to you or anyone else to make a point. Sort of like, I don&#8217;t have to be good at baseball to make an observation on a players or teams performance. It might carry more weight if I was a player, but doesn&#8217;t invalidate the point on that basis.</p>
<p>&quot;He&#8217;s pointing out difficulties we all have</p>
<p>when tasked with writing documentation. Point blank, it&#8217;s hard, and you&#8217;re not going to be able to please everyone all the time.&quot;</p>
<p>I guess you decided to skip logic (or reading what I wrote) here. Go and re-read. The perceived &quot;difficulty&quot; is a circular chain of logic.</p>
<ol>
<li>Devs dont write code, doc team does.</li>
<li>
<p>Doc team gets their information from devs.</p>
</li>
</ol>
<p>(so raymond cant force them to improve docs)</p>
<ol>
<li>So why doesnt MS ration out time for improving docs?</li>
</ol>
<li>
<p>Because writing technical docs is hard ! Also developers are not good at writing !</p>
</li>
<li>
<p>Um.. &lt;wtf&gt;</p>
</li>
<p>Also, this isn&#8217;t a mom and pop shop we&#8217;re talking about. This is a huge giant corporate, the most successful software company. Hell yeah, I expect them to hire a few people and get the docs straight.</p>
<p>A word of advice &#8211; fanboy rantings get old.. real quick. Next time try and come up with something that doesnt look like a 2 yr old wrote it.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-704793">
				<div id="div-comment-704793" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Jim</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090130-00/?p=19313#comment-704793">
			January 30, 2009 at 2:46 pm</a>		</div>

		<p>It&#8217;s all about the priority. The doc should be a joint effort between the Marketing and Product Development. If the Marketing does not care about the product description, what the hell nobody cares about the doc. For the MS product, it&#8217;s the monoply, you can not live without it so no use to spend too much the time with doc period.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-704833">
				<div id="div-comment-704833" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Duke of New York</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090130-00/?p=19313#comment-704833">
			January 30, 2009 at 3:37 pm</a>		</div>

		<p>@I&#8217;m Old:</p>
<p>Raymond&#8217;s post isn&#8217;t about whether documentation should be written.</p>
<p>It&#8217;s not about whether someone should be dedicated to the task of writing documentation.</p>
<p>It&#8217;s about whether DEVS should be dedicated to the task of writing documentation. Get it?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-704843">
				<div id="div-comment-704843" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">chrismcb</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090130-00/?p=19313#comment-704843">
			January 30, 2009 at 3:40 pm</a>		</div>

		<p>@I&#8217;m Old&#8230; Did you read what Chen wrote? He wasn&#8217;t saying Microsoft shouldn&#8217;t fix the documentation. He was saying it was pointless to take people who don&#8217;t have a particular skillset and make them perform that skill.</p>
<p>If something is broken, the way to fix it isn&#8217;t to get people who don&#8217;t know how to fix it to fix it.</p>
<p>It isn&#8217;t so much that writing documentation is hard. The problem is that, generally, programmers don&#8217;t write good documentation. The current perception is the documentation isn&#8217;t good, so the solution is to make people who aren&#8217;t good at writing documentation, write the documentation. How does this solve the problem?</p>
<p>Even if the programmer is good at writing, Raymond pointed out another issue, in that it isn&#8217;t always obvious. The programmer, who knows the code backwards and forwards, may not realize that the documentation doesn&#8217;t really say what he thinks it says.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-704853">
				<div id="div-comment-704853" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">I'm Old</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090130-00/?p=19313#comment-704853">
			January 30, 2009 at 3:55 pm</a>		</div>

		<p>&#8220;It&#8217;s not about whether someone should be dedicated to the task of writing documentation.&#8221;</p>
<p>It&#8217;s about whether DEVS should be dedicated to the task of writing documentation. Get it?&#8221;</p>
<p>That would make sense if the very first link didnt cite his own words saying doc team NEEDS devs to write technical docs.</p>
<p>Let me place it here for your benefit.</p>
<p>&#8220;The documentation group relies on the development teams to provide the technical information in the first place; it&#8217;s not like they can just write the docs without any help. And I suspect they have higher priorities than touching up ancient Win32 documentation.&#8221;</p>
<p>&#8211;</p>
<p>Actually I don&#8217;t expect bitching about it here to change anything. Only hope is someone from the bloated middle management sees this and agrees with it. I mean they cant <em>all</em> be delivering crappy products and at the same time leeching on Windows/Office revenue stream, right :P (OK that was not necessary, and can be removed if moderator-snarky-filter is set too low) </p>
<div class=post>[<i>My mistake. I had assumed &#8220;focuses on improving&#8221; was an active thing, like writing, rather than a passive thing like reviewing. Requests for review are rather common. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-704893">
				<div id="div-comment-704893" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Lawrence</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090130-00/?p=19313#comment-704893">
			January 30, 2009 at 5:51 pm</a>		</div>

		<p>Good post, Raymond. Although it seems &#8216;obvious&#8217; to me that not everyone is good at writing technical documentation and it would be a bad idea to force them to do it, apparently it isn&#8217;t obvious to everyone.</p>
<p>@I&#8217;m old: Someone not being good at something is a &quot;lame excuse&quot; for not paying them to spend all of their time doing it? Really?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-704903">
				<div id="div-comment-704903" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Tom</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090130-00/?p=19313#comment-704903">
			January 30, 2009 at 6:56 pm</a>		</div>

		<p>People, ignore the troll. &nbsp;Ignore the troll. &nbsp;Don&#8217;t feed the troll. &nbsp;As soon as someone starts replying line-by-line, or calling other people a &quot;2 yr old&quot;, it&#8217;s time to move on.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-704663">
				<div id="div-comment-704663" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">dave</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090130-00/?p=19313#comment-704663">
			January 30, 2009 at 11:23 am</a>		</div>

		<p>&quot;What&#8217;s more, technical people tend to write documentation for other technical people, on the assumption that the reader is already familiar with the material.&quot;</p>
<p>For the documentation that developers refer to every day, this is a Good Thing; if you&#8217;re wondering what the order of arguments to CreateProcess is, you don&#8217;t want to have to wade through five pages of explanation of the underlying principles to find it.</p>
<p>The problem comes when that&#8217;s the *only* documentation you have, since it&#8217;s hard to get anything other than &quot;What does that argument mean again? &nbsp;And how do I deallocate resources this allocates?&quot; out of it.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-704683">
				<div id="div-comment-704683" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ray</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090130-00/?p=19313#comment-704683">
			January 30, 2009 at 11:43 am</a>		</div>

		<p>Textbite: Good documentation leaves no doubt.</p>
<p>It may not be reachable, but that&#8217;s what you should aim for.</p>
<p>One major pitfall, as already mentioned, are the peer to peer assumptions&#8211;acceptable in peer to peer communication, but time consuming for everyone else.</p>
<p>I have thought about this a lot when documenting file formats, in which there are many assumptions at work today that may be require time in the future; like what kind of signed integer encoding is assumed (one&#8217;s complement, two&#8217;s complement), endianess, whether a byte is eight binary digits or nine in a given context, what a &#8216;word&#8217; is, etc.</p>
<p>There&#8217;s still something skilled technical writers miss often, and that&#8217;s understanding a present context (like &quot;now I *have* to do *this*, how should I do *this*&quot;, where a section is made for that *this*).</p>
<p>In API documentation, however, you already have a structure, but may miss how to logically group the things it represents, such as the protocol for using the API, separated from the concept it represents. &nbsp;Being clear on the limitations from the start, such as ranges; common pitfalls that the developers have experienced, and are aware of may be vague&#8211;anything to save time&#8211;time that the IT industry killed enough of during one today as is.</p>
<p>The most important is the fundament&#8211;the philosophy&#8211;why it was done this way instead of that way, what the designer was thinking. Writers will skip the philosophy part, because they&#8217;ll avoid attacks on their exposed decisions, once put into words. The reason they should write the why is because it helps the learning process, and the broader understanding, which will make it easier to fit the information in your head.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-704923">
				<div id="div-comment-704923" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Antonio</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090130-00/?p=19313#comment-704923">
			January 30, 2009 at 9:21 pm</a>		</div>

		<p>Documentation is hard to write. Agreed. I programmed in many different environments and must say that the most of Win32 is exceptionally well documented. Most of .NET is well documented. There may be areas where MSDN does not shed enough light but the problem I encounter most often is developer not <em>reading</em> the MSDN documentation before implementing their code. When I debug some broken areas heavily interfacing with Microsoft, more often than not reading the MSDN documentation is sufficient to clear up the bugs.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-704723">
				<div id="div-comment-704723" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Duke of New York</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090130-00/?p=19313#comment-704723">
			January 30, 2009 at 1:24 pm</a>		</div>

		<p>If you let devs write documentation, then you can expect &quot;documentation&quot; like this:</p>
<p>DWORD SnapWindow(HWND hwnd): Snaps a window</p>
<p>No s***, Sherlock!</p>
<p>When I run into documentation like this on MSDN, it&#8217;s usually on some ancient COM interface. I&#8217;ve seen it in a few open-source Java packages as well.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-704933">
				<div id="div-comment-704933" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Alexander Grigoriev</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090130-00/?p=19313#comment-704933">
			January 30, 2009 at 10:36 pm</a>		</div>

		<p>I have to admit that DDK/SDK documentation is getting better. And thanks to the feedback links in it, it&#8217;s quite easy to submit a doc bug. That said, the docviewer got worse. Search in it is even slower than search on internet. BUT, it&#8217;s still not as bad as vista/Win2008 help. Boy, this thing is UNUSABLE. While in XP help you could find pretty much what you wanted, in Win2008/Vista you get a whole bunch of arbitrary crap. Search, for example, for cmd. Looks like full text search is not a good solution. (Vista bash redux!)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-704943">
				<div id="div-comment-704943" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Duke of New York</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090130-00/?p=19313#comment-704943">
			January 30, 2009 at 10:40 pm</a>		</div>

		<p>Dijkstra told a story about the tendency of programmers make up names for concepts as they design a system:</p>
<p><a rel="nofollow" target="_new" href="http://www.cs.utexas.edu/users/EWD/transcriptions/EWD06xx/EWD648.html" rel="nofollow">http://www.cs.utexas.edu/users/EWD/transcriptions/EWD06xx/EWD648.html</a></p>
<p>(starting at &quot;When the design is complete&quot;)</p>
<p>I think it illustrates the problems the developers of a system can have when writing documentation for it By the time a system is finished, the terminology used within the code can be a complete lie, based on assumptions the developers made 6 months ago that turned out to be wrong.</p>
<p>By that time the devs are spoiled for writing documentation, because they have accepted the inaccurate terminology as a fact of the system. You want to bring in an outsider who can document the system in terms the rest of the world understands.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-aaron-margosis even thread-even depth-1" id="comment-704953">
				<div id="div-comment-704953" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Aaron+Margosis' rel='external nofollow' class='url'>Aaron Margosis</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090130-00/?p=19313#comment-704953">
			January 30, 2009 at 10:42 pm</a>		</div>

		<p>I spoke at a &quot;Career Day&quot; at my daughter&#8217;s school (ages ~11 to 14) last November. &nbsp;When asked what classes would be important for a career in technology, I pointed out the obvious, like typing and computer classes, but I put a HUGE emphasis on learning how to communicate effectively, particularly in writing. &nbsp;That&#8217;s not just for technical writers or salespeople, but also for the work-in-the-dungeon-by-candlelight uber-nerd developer types (like me).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-704973">
				<div id="div-comment-704973" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Grumpy</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090130-00/?p=19313#comment-704973">
			January 31, 2009 at 5:43 am</a>		</div>

		<p>I largely agree with Raymond, both from the fact that most coders can&#8217;t communicate (relevant comments are sometimes few and far between) and that there&#8217;s got to be a relevance limit somewhere. Some features are meant for 0.00001% of the users and someone has to draw the line where documenting is not going to pay off.</p>
<p>Unfortunately, when you&#8217;re in that 0.00001% you really, really NEED the info because even &lt;preferred search engine&gt; can&#8217;t help you. I&#8217;m currently delving into &lt;database product&gt; and trying to figure out why certain performance parameters are plummeting when nothing special is going on. I can&#8217;t find help on the numbers and functions I&#8217;m using anywhere &#8211; I&#8217;m out fishing and have no idea what I&#8217;m catching. If there was some way I could identify myself to &lt;vendor&gt; and say &quot;Hey, I&#8217;m beyond 3rd level support, give this question to someone who REALLY know&#8217;s her/his stuff&quot;, I&#8217;d be more than happy to accept the state of the docs. I can&#8217;t, I have to take it all the way up from 1st through 3rd through complaints and beyond before there&#8217;s even a glimmer of hope of getting something I don&#8217;t already know, and the customer will have converted to &lt;other vendor&gt; before I&#8217;m through.</p>
<p>So the whole docs/no docs question boils down to: how can we efficiently serve enough knowledge to enough of our customers to make money in the long run? Some can be served by docs, others need a developer site, forums, Raymond&#8230; And then there&#8217;s the group in need of special care, for whom docs may not be the right medium. But how to filter the rest out with a &quot;Read The Fine Manual&quot; without pissing them off is quite beyond me. I&#8217;m a coder, not a manager&#8230; :-)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-704993">
				<div id="div-comment-704993" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Arno</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090130-00/?p=19313#comment-704993">
			January 31, 2009 at 7:52 am</a>		</div>

		<p>I think improving documentation would be fairly easy if MSDN would be more Wiki-style. So far, there are few user comments to the articles. I don&#8217;t know why this is, but it would make an awful lot of sense to try to get developers to leave their comments and problems with the articles they are concerned with. So far, there are user forums, but they are quite apart from the main articles.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-705003">
				<div id="div-comment-705003" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">wtroost</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090130-00/?p=19313#comment-705003">
			January 31, 2009 at 8:41 am</a>		</div>

		<p>We&#8217;ve actually had a &quot;week of documentation&quot; at work. &nbsp;A lot of work was done, but years after &nbsp;the &quot;last accessed&quot; date showed hardly any documentation had ever been opened. Even new hires turned directly to the source code.</p>
<p>Documentation for the sake of documentation is fruitless.</p>
<p>I wonder if it&#8217;s possible to use the data from the &quot;Customer Experience Improvement Program&quot; to see how documentation is used?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-704963">
				<div id="div-comment-704963" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joseph Koss</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090130-00/?p=19313#comment-704963">
			January 31, 2009 at 5:34 am</a>		</div>

		<p>Most developers think that they are good documenters, when they bother to document. This is similar to how most poker players think that they are good poker players, when they bother to try to play well.</p>
<p>The reality is that comments such as..</p>
<p>i++; /*increment i*/ </p>
<p>..are more common than seems reasonable, and this is because people have been taught that they SHOULD document, but not WHAT THEY SHOULD document.</p>
<p>Good documentation documents THE DATA and when important, THE REASON BEHIND IT. </p>
<p>This is because, for the most part, CODE should be self-documenting! The code itself should be a concise description of the algorithm used. Proper naming of variable and functions goes a very very long way WRT self-documenting code. </p>
<p>There was a time, not so long ago, that there was an attempt to also document the data by using clever variable decoration gimicks.. AKA hungarian notation. This failed to stick for many different reasons, but primarily it was because it didn&#8217;t do a good job of it. </p>
<p>Its just noise because when I am looking at the code itself, i&#8217;m trying to discern the algorithm, not data specific details which shouldn&#8217;t have issues when employing proper type safety.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-705023">
				<div id="div-comment-705023" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.pretentiousname.com' rel='external nofollow' class='url'>Leo Davidson</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090130-00/?p=19313#comment-705023">
			February 1, 2009 at 8:51 am</a>		</div>

		<p>I think Doxygen is the worst thing that ever happened to API documentation.</p>
<p>Now many programmers think they have documented their APIs when all they&#8217;ve done is convert their header files into HTML.</p>
<p>(Or, if we&#8217;re talking Java, convert their source into the equivalent of header files, then convert that into HTML.)</p>
<p>It&#8217;s just annoying. You go looking for more information and just find the same thing you already had from the source in a slightly different format. Something that any decent IDE could produce for you on-the-fly as well.</p>
<p>MSDN Library isn&#8217;t perfect but I think it is very good considering the amount of stuff it has to document. My biggest complaint with it is more a Visual Studio issue: Push F1 on a message or function name in a Win32 C++ project and you&#8217;ll be taken to a page about MFC, .Net, Windows CE or just about anything other than the actual thing you wanted help on. This is despite the IDE clearly knowing it&#8217;s looking at a Win32 C++ project. So frustrating. But not as frustrating as most Doxygen garbage.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-705043">
				<div id="div-comment-705043" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.trumgottist.com/' rel='external nofollow' class='url'>Rikard</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090130-00/?p=19313#comment-705043">
			February 1, 2009 at 4:51 pm</a>		</div>

		<p>@Leo Davidson: Agreed on MSDN.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-705083">
				<div id="div-comment-705083" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.rangerpretzel.com' rel='external nofollow' class='url'>Pretzel</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090130-00/?p=19313#comment-705083">
			February 1, 2009 at 11:56 pm</a>		</div>

		<p>1) In general, Writing gets easier with practice. I hated English class in HS, but because I stuck with it and wanted to get good grades I tried my best to write well. I also realized it would translate into better grades in other classes like History, etc. The more you write, the better you will get. (Assuming that you actually have someone read your writing and give you feedback.)</p>
<p>2) Technical Writing requires that you first define your scope (or target audience) before you start writing. I generally assume that most people reading my technical writing have the most basic of programming/technical skills, but don&#8217;t really understand anything outside of that. So perhaps at times, my writing seems a bit verbose or even simplistic, but it is only so that I can easily transfer my knowledge to others who need it without having to slog thru stuff that I did.</p>
<p>3) While writing about technical subjects, it is important to remember what it was like before obtaining said knowledge. This is tricky as once one becomes knowledgeable in a field, it&#8217;s hard to remember what it was like to be ignorant.</p>
<p>4) Standard template/Structure. I find it helpful to have a standard structure to fill when I write documentation. It allows me to figure out the flow of what I&#8217;m writing and then outline when needs to be said. After this is done, it&#8217;s frequently just a matter of filling in the details.</p>
<p>5) When all else fails, get an intern or a junior programmer to read through all your undocumented code and document it for you. Not only will you now have a second person who knows your code, but chances are he/she will have discovered some bugs in your code which you can stomp. &nbsp;:)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-705063">
				<div id="div-comment-705063" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://lambert.geek.nz/' rel='external nofollow' class='url'>Miral</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090130-00/?p=19313#comment-705063">
			February 1, 2009 at 7:27 pm</a>		</div>

		<p>@Leo Davidson: Agreed, on all three points (MSDN docs are generally good, Doxyggen docs are generally bad, F1 context is generally idiotic).</p>
<p>I don&#8217;t think that developers should be *writing* docs, as a general rule (for exactly the reasons Raymond specified), but where public documentation is already part of the project (eg. for a library API) then the devs should at least periodically review the docs and make sure that they&#8217;re up to date, or that they get marked to be fixed up. &nbsp;Then the tech writer can get together with the appropriate dev to translate the dev-speak changes into proper documentation.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-705093">
				<div id="div-comment-705093" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">modeless</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090130-00/?p=19313#comment-705093">
			February 2, 2009 at 6:20 am</a>		</div>

		<p>The designer of a system is the worst possible person to write the documentation, even if they are great at technical writing. &nbsp;The designer is too close to see the forest for the trees. &nbsp;The ideal people to write documentation are new users, writing as as they go along learning the system. &nbsp;</p>
<p>Wiki documentation makes that ideal situation not only possible, but common. &nbsp;Antonio got it right; &nbsp;MSDN should be a Wiki. &nbsp;The &quot;community area&quot; at the bottom is a tiny step in the right direction, but it&#8217;s not nearly enough.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-705103">
				<div id="div-comment-705103" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">modeless</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090130-00/?p=19313#comment-705103">
			February 2, 2009 at 6:20 am</a>		</div>

		<p>The designer of a system is the worst possible person to write the documentation, even if they are great at technical writing. &nbsp;The designer is too close to see the forest for the trees. &nbsp;The ideal people to write documentation are new users, writing as as they go along learning the system. &nbsp;</p>
<p>Wiki documentation makes that ideal situation not only possible, but common. &nbsp;Antonio got it right; &nbsp;MSDN should be a Wiki. &nbsp;The &quot;community area&quot; at the bottom is a tiny step in the right direction, but it&#8217;s not nearly enough.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-705123">
				<div id="div-comment-705123" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Andrei</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090130-00/?p=19313#comment-705123">
			February 2, 2009 at 10:07 am</a>		</div>

		<p>[quote]The designer of a system is the worst possible person to write the documentation, even if they are great at technical writing. &nbsp;The designer is too close to see the forest for the trees.[/quote]</p>
<p>That&#8217;s a bad excuse for avoiding &quot;unpleasant&quot; work, however, some developers seem to like it.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-705463">
				<div id="div-comment-705463" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">BC</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090130-00/?p=19313#comment-705463">
			February 2, 2009 at 8:55 pm</a>		</div>

		<p>I think it is a good idea to have developers write documentation, but it should be broken into a few cycles where developers spend a day or two providing input to the doc-writers, who punch it up and feed it back to the developers, who are then able to see how their input was transformed, what information they were assuming was known, and can perhaps improve their input for the next cycle. &nbsp;</p>
<p>Those developers who turn out to be not-bad at documentation probably would be good candidates for other positions that require interfacing with external groups, so this exercise can help management match people to positions, as well as give people an opportunity to shine outside of their currently-defined roles.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-705523">
				<div id="div-comment-705523" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Cheong</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090130-00/?p=19313#comment-705523">
			February 3, 2009 at 12:01 am</a>		</div>

		<p>Just some idea&#8230;</p>
<p>I think it&#8217;s best to have the doc writers write the documentation, then assign some summer interns to review it and see if they need more clarification, and add remarks and/or links where applicable.</p>
<p>Afterall, most &quot;new developers&quot; are CS students, and &quot;new developers&quot; are supposed to be the major audience for these documentations.</p>
<p>======</p>
<p>Actually, for those who don&#8217;t satisfy with MSDN documentation quality, why don&#8217;t you just leave your feeback in that pages&#8217; suggestion box? In certain sense, it works just like a moderated version of wiki.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-705603">
				<div id="div-comment-705603" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">blkt</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090130-00/?p=19313#comment-705603">
			February 3, 2009 at 2:45 am</a>		</div>

		<p>Well, I was just wondering&#8230; (I could be wrong), but I think most developers avoided writing documentation for other reasons too. Writing skills are part of the factor but I think the most significant factor is job security.</p>
<p>It&#8217;s a bit shallow, but I fear a valid human concern. I think most developers feel threatened if someone can just take away what they have worked so hard to achieve. By creating a dependence, it ensures that you have a value in the company. It is not a good mentality but people does do it. That is why there is such a thing called obfuscation of code. They will tell you things, but not everything you need to know.</p>
<p>just my two cents. :)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-706163">
				<div id="div-comment-706163" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://nobugleftbehind.com/software-quality-digest-2009-02-04/' rel='external nofollow' class='url'>Software Quality Digest &ndash; 2009-02-04 | No bug left behind</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090130-00/?p=19313#comment-706163">
			February 4, 2009 at 2:51 pm</a>		</div>

		<p>PingBack from <a rel="nofollow" target="_new" href="http://nobugleftbehind.com/software-quality-digest-2009-02-04/" rel="nofollow">http://nobugleftbehind.com/software-quality-digest-2009-02-04/</a></p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>