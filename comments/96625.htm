<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (10)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1 parent" id="comment-1302195">
				<div id="div-comment-1302195" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Bradley</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170717-00/?p=96625#comment-1302195">
			July 17, 2017 at 7:22 am</a>		</div>

		<p>Personally, I love CLR week.</p>

		
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-cheong odd alt depth-2" id="comment-1302266">
				<div id="div-comment-1302266" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/cheong00' rel='external nofollow' class='url'>cheong00</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170717-00/?p=96625#comment-1302266">
			July 17, 2017 at 7:59 pm</a>		</div>

		<p>So do I.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment even thread-odd thread-alt depth-1" id="comment-1302245">
				<div id="div-comment-1302245" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170717-00/?p=96625#comment-1302245">
			July 17, 2017 at 12:55 pm</a>		</div>

		<p>I am no longer embarrassed at passing List.Add() to a function expecting a delegate.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-even depth-1" id="comment-1302265">
				<div id="div-comment-1302265" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Nico</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170717-00/?p=96625#comment-1302265">
			July 17, 2017 at 2:40 pm</a>		</div>

		<p>I, for one, welcome our temporary CLR overlord.</p>
<p>That&#8217;s interesting about the for loop variable closure.  I had kind of assumed (oops) that when they changed the behavior of foreach it also applied to for, so thanks for calling it out.</p>
<p>For anyone who wants to see this in action:  <a href="https://dotnetfiddle.net/GtAZ32" rel="nofollow">https://dotnetfiddle.net/GtAZ32</a></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-odd thread-alt depth-1 parent" id="comment-1302285">
				<div id="div-comment-1302285" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ivan K</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170717-00/?p=96625#comment-1302285">
			July 17, 2017 at 9:53 pm</a>		</div>

		<p>I remember that ReSharper would emit a warning / suggestion for any method that could be made static (whether called from another static or not). Googling, I see that FxCop did too. I found the warning helpful for design, but also thought based on the documentation that making the method static improved performance a teeny tiny bit (eliminate the null this check). I guess that turns out to not be the case anymore, maybe with x64 more common? I&#8217;m not really an x86 assembly person so don&#8217;t know the clock counts, etc of the instructions on new cpu&#8217;s.<br />
<a href="https://www.jetbrains.com/help/resharper/MemberCanBeMadeStatic.Local.html" rel="nofollow">https://www.jetbrains.com/help/resharper/MemberCanBeMadeStatic.Local.html</a></p>

		
				</div>
		<ol class="children">
		<li class="comment odd alt depth-2" id="comment-1302286">
				<div id="div-comment-1302286" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Zarat</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170717-00/?p=96625#comment-1302286">
			July 18, 2017 at 12:18 am</a>		</div>

		<p>Note that the articles didn&#8217;t make any statement over the performance of static methods in general, only for the case where you take a *delegate* to a static methods. If you call the static method yourself the compiler can actually see the method call and optimize for it (instead of it being hidden in a delegate)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even depth-2" id="comment-1302295">
				<div id="div-comment-1302295" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Zarat</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170717-00/?p=96625#comment-1302295">
			July 18, 2017 at 12:21 am</a>		</div>

		<p>Also, Raymonds article is about forwarding calls. He explains that these are always faster when the signature matches exactly (because then no extra work needs to be done). Again this doesn&#8217;t make a general statement over the performance static methods.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment odd alt thread-even depth-1" id="comment-1302306">
				<div id="div-comment-1302306" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">640k</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170717-00/?p=96625#comment-1302306">
			July 18, 2017 at 4:17 am</a>		</div>

		<p>All these alternatives are at least better than what powershell has implemented (in .net clr!), both as default but also even considering that it&#8217;s possible to close (an re-close) the function explicitly in powershell.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-odd thread-alt depth-1" id="comment-1302345">
				<div id="div-comment-1302345" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Martin Bonner</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170717-00/?p=96625#comment-1302345">
			July 18, 2017 at 10:31 am</a>		</div>

		<p>I followed the &#8220;null check&#8221; link.  I think the behaviour of the typical commenter has got better over the last decade (or maybe I&#8217;m not reading enough comments).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-even depth-1" id="comment-1303325">
				<div id="div-comment-1303325" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Kris Vandermotten</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170717-00/?p=96625#comment-1303325">
			July 24, 2017 at 3:22 am</a>		</div>

		<p>This is why the U2U Consult code analyzer has a rule to warn about static methods that are used in delegate constructors. See <a href="https://github.com/u2uconsult/codeanalyzers/blob/master/docs/U2U1003.md" rel="nofollow">https://github.com/u2uconsult/codeanalyzers/blob/master/docs/U2U1003.md</a> for an explanation and a benchmark, and <a href="https://marketplace.visualstudio.com/items?itemName=vs-publisher-363830.U2UConsultPerformanceCodeAnalyzersforC7" rel="nofollow">https://marketplace.visualstudio.com/items?itemName=vs-publisher-363830.U2UConsultPerformanceCodeAnalyzersforC7</a> for the Visual Studio extension.</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>