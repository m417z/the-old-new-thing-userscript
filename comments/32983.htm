<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (27)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-330073">
				<div id="div-comment-330073" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Kuwanger</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20051214-15/?p=32983#comment-330073">
			December 14, 2005 at 10:18 am</a>		</div>

		<p>&#8216;In the original C standard, malloc(0) is permitted to return NULL or &quot;a unique pointer&quot;. &#8230; Can I assert(malloc(0) == malloc(0))?&#8217;</p>
<p>How I read that (unless you&#8217;ve included more ambiguity) is malloc(0) could return NULL one time and &quot;a unique pointer&quot; another, so even if &quot;a unique pointer&quot; was always the same value, you couldn&#8217;t &#8216;assert(malloc(0) == malloc(0))&#8217;.</p>
<p>Or am I over quibbling?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-330083">
				<div id="div-comment-330083" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">mike</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20051214-15/?p=32983#comment-330083">
			December 14, 2005 at 11:03 am</a>		</div>

		<p>How about finding someone who can write?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-oldnewthing bypostauthor even thread-even depth-1" id="comment-330093">
				<div id="div-comment-330093" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Raymond+Chen+-+MSFT' rel='external nofollow' class='url'>Raymond Chen - MSFT</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20051214-15/?p=32983#comment-330093">
			December 14, 2005 at 11:20 am</a>		</div>

		<p>Kuwanger: Yes, it could return NULL sometimes and a unique pointer sometimes, but try capturing that in a single expression that doesn&#8217;t ruin the flow of the paragraph. &quot;Can I void *p1=malloc(0), p2=malloc(0), assert(!p1 || !p2 || p1==p2)?&quot; doesn&#8217;t quite have the same ring to it. Everybody knew what I meant, no need to get bogged down in details.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-330103">
				<div id="div-comment-330103" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">dave</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20051214-15/?p=32983#comment-330103">
			December 14, 2005 at 11:26 am</a>		</div>

		<blockquote><p>
  My suggestion: Don&#8217;t use the word &quot;unique&quot;.<br />
  <br />&gt;It&#8217;s too ambiguous.</p>
<p>That&#8217;s a reasonable default :-)</p>
</blockquote>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-330113">
				<div id="div-comment-330113" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://ramblings.aaronballman.com' rel='external nofollow' class='url'>Aaron Ballman</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20051214-15/?p=32983#comment-330113">
			December 14, 2005 at 11:40 am</a>		</div>

		<p>What a unique way of putting things.  :: grins ::  Sorry, I couldn&#8217;t resist.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-oldnewthing bypostauthor odd alt thread-odd thread-alt depth-1" id="comment-330133">
				<div id="div-comment-330133" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Raymond+Chen+-+MSFT' rel='external nofollow' class='url'>Raymond Chen - MSFT</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20051214-15/?p=32983#comment-330133">
			December 14, 2005 at 11:59 am</a>		</div>

		<p>Yeesh. Like I said, &quot;No need to get bogged down in details&quot;. Did somebody declare today to be &quot;nitpick day&quot; without telling me? (Besides, I already set the context to &quot;malloc(0) returns a non-NULL value&quot; in the previous paragraph and re-emphasized it in the previous sentence. Do I have to worry about every single sentence being taken out of context?)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-330143">
				<div id="div-comment-330143" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">James Schend</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20051214-15/?p=32983#comment-330143">
			December 14, 2005 at 12:06 pm</a>		</div>

		<p>I hereby declare December 14th, 2005 as Worldwide Nitpick Day!</p>
<p>Sorry you didn&#8217;t get that memo, Raymond.</p>
<p>And Aaron:  Leave the comedy to DJ Noname and the 107.7 The End morning show.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-330163">
				<div id="div-comment-330163" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Lance Fisher</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20051214-15/?p=32983#comment-330163">
			December 14, 2005 at 1:11 pm</a>		</div>

		<p>Aaron, there are those who appreciate cheesy puns and those who don&#8217;t.  I do.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-330173">
				<div id="div-comment-330173" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">K. Henriksen</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20051214-15/?p=32983#comment-330173">
			December 14, 2005 at 1:39 pm</a>		</div>

		<p>I&#8217;d write something like &quot;GetHashCode provided by the String class returns a deterministic hash code when used on a string value.&quot;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-330183">
				<div id="div-comment-330183" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">James</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20051214-15/?p=32983#comment-330183">
			December 14, 2005 at 1:47 pm</a>		</div>

		<p>Did the MSDN documentation even really need to say &quot;unique hash codes&quot;?  Why not just say &quot;hash codes&quot;?  It seems like a standard definition of hashing to me, and the extra verbiage just makes it confusing.  Do people ever make hashing implementations that /aren&#8217;t/ deterministic?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-330213">
				<div id="div-comment-330213" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">jon</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20051214-15/?p=32983#comment-330213">
			December 14, 2005 at 2:14 pm</a>		</div>

		<p>It&#8217;s very annoying that GetHashCode() doesn&#8217;t return a unique hash code! What if I wanted to be able to uniquely identify a string via its hash code??? Could you please add a GetHashCodeUnique() method into the next version of .NET please??? Thank you!!!<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-330233">
				<div id="div-comment-330233" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Frank Richter</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20051214-15/?p=32983#comment-330233">
			December 14, 2005 at 2:36 pm</a>		</div>

		<p>&quot;Could you please add a GetHashCodeUnique()&quot;</p>
<p>The very nature of hashes makes this impossible &#8211; you&#8217;re mapping a string of arbitrary length to a number of fixed size. You just can&#8217;t give every string a unique numbers, you don&#8217;t have enough.</p>
<p>A point to start further research: <a rel="nofollow" target="_new" href="http://en.wikipedia.org/wiki/Hashing" rel="nofollow">http://en.wikipedia.org/wiki/Hashing</a></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-330243">
				<div id="div-comment-330243" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">jon</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20051214-15/?p=32983#comment-330243">
			December 14, 2005 at 2:45 pm</a>		</div>

		<p>Here&#8217;s one for you: <a rel="nofollow" target="_new" href="http://en.wikipedia.org/wiki/Irony" rel="nofollow">http://en.wikipedia.org/wiki/Irony</a>  :)<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-330263">
				<div id="div-comment-330263" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Anonymous Coward</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20051214-15/?p=32983#comment-330263">
			December 14, 2005 at 2:56 pm</a>		</div>

		<p><a rel="nofollow" target="_new" href="http://burtleburtle.net/bob/hash/perfect.html" rel="nofollow">http://burtleburtle.net/bob/hash/perfect.html</a></p>
<p>It is possible to produce unique hashes for all valid inputs to a function &#8211; provided, of course, that you choose a suitable subset of inputs to define as &#8216;valid&#8217;.</p>
<p>Not a general purpose tool, obviously, but still interesting.</p>
<p>(And it&#8217;s always nitpick day on the internet.)<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-330273">
				<div id="div-comment-330273" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Jonathan</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20051214-15/?p=32983#comment-330273">
			December 14, 2005 at 2:57 pm</a>		</div>

		<p>Here&#8217;s how I would write it:</p>
<p>[T]he implementation of GetHashCode provided by the String class returns hash codes for string values. Identical string values are guaranteed to return identical hash codes.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-330283">
				<div id="div-comment-330283" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Wang-Lo</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20051214-15/?p=32983#comment-330283">
			December 14, 2005 at 2:58 pm</a>		</div>

		<p>&quot;Could you please add a GetHashCodeUnique()&quot;</p>
<p>I once coded this function for a minicomputer operating system.  My implementation worked without error but was rarely used due to its poor static efficiency.</p>
<p>However for those developers who could afford the space, my function could generate a domain-unique hash key for strings up to 2^10 bytes long using only 1024 bytes for the key.</p>
<p>-Wang-Lo.<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-330123">
				<div id="div-comment-330123" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.trikaliotis.net/' rel='external nofollow' class='url'>strik</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20051214-15/?p=32983#comment-330123">
			December 14, 2005 at 11:49 am</a>		</div>

		<p>OldNewThing: Make it &quot;void *p1=malloc(0), *p2=malloc(0);  assert(!p1 || !p2 || p1==p2)&quot; to do what you most probably intended (note the missing &quot;*&quot; before p2 and the replacement of &quot;;&quot; for &quot;,&quot; before the assert().</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-oldnewthing bypostauthor odd alt thread-odd thread-alt depth-1" id="comment-330193">
				<div id="div-comment-330193" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Raymond+Chen+-+MSFT' rel='external nofollow' class='url'>Raymond Chen - MSFT</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20051214-15/?p=32983#comment-330193">
			December 14, 2005 at 1:58 pm</a>		</div>

		<p>MSDN has a wide audience. Usually I get complaints from people that MSDN doesn&#8217;t state *enough* obvious things, not that it states too many&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-330383">
				<div id="div-comment-330383" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Norman Diamond</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20051214-15/?p=32983#comment-330383">
			December 14, 2005 at 11:02 pm</a>		</div>

		<p>But the word &quot;unique&quot; isn&#8217;t ambiguous enough.  If you want it too ambiguous, you need uniques.  And if you have get even more of them you have multiques.</p>
<p>Reinder:  malloc(10) isn&#8217;t malloc(0) so the particular question here doesn&#8217;t arise.  Though now I feel compelled to reread that section of the standard to see if there&#8217;s another ambique statement along the lines you mentioned.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-330323">
				<div id="div-comment-330323" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.edhanced.com/ask-mred/?q=oracle-blog' rel='external nofollow' class='url'>Mr. Ed</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20051214-15/?p=32983#comment-330323">
			December 14, 2005 at 5:34 pm</a>		</div>

		<p>Oracle databases have UNIQUE indexes.  But people have a very hard time understanding that an Oracle UNIQUE index can still contain *multiple* NULL values.<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-330343">
				<div id="div-comment-330343" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Reinder</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20051214-15/?p=32983#comment-330343">
			December 14, 2005 at 6:43 pm</a>		</div>

		<p>It is good to hear that it is &quot;Worldwide Nitpick Day&quot;.</p>
<p>&quot;Or does it mean that the non-NULL return value is a value distinct from any other return value from malloc()?&quot;</p>
<p>Regardless of the parameter passed to it, malloc never guarantees that its return value is distinct from any other return value from malloc. Consider the following:</p>
<p>    void * p = malloc( 10);<br />
<br />    free(p);<br />
<br />    void * q = malloc( 10);</p>
<p>I doubt that it was ever the intention of the C standards committee to require p and q to be different here.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-330393">
				<div id="div-comment-330393" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ritchie</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20051214-15/?p=32983#comment-330393">
			December 15, 2005 at 5:13 am</a>		</div>

		<p>Why would you want to call malloc(0)? It doesn&#8217;t seem to do anything useful, unless it&#8217;s to coerce  your implementation of malloc() to do something weird behind the scenes stuff.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-330403">
				<div id="div-comment-330403" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Stu</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20051214-15/?p=32983#comment-330403">
			December 15, 2005 at 7:35 am</a>		</div>

		<p>Ritchie: Why would you want to call malloc(0)?</p>
<p>So you can realloc() later&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-330673">
				<div id="div-comment-330673" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Alex Blekhman</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20051214-15/?p=32983#comment-330673">
			December 15, 2005 at 12:40 pm</a>		</div>

		<p>James Schend wrote:<br />
<br />&gt; I hereby declare December 14th, 2005 as<br />
<br />&gt; Worldwide Nitpick Day! </p>
<p>Don&#8217;t be so light-hearted about that day. 66 years ago, on December 14 Soviet Union was expelled from League of Nations because violations of treaties with Finland and attacking it. That was a heck of a lot of nitpicking!</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-330653">
				<div id="div-comment-330653" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">RevMike</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20051214-15/?p=32983#comment-330653">
			December 15, 2005 at 12:02 pm</a>		</div>

		<p>&quot;Oracle databases have UNIQUE indexes. But people have a very hard time understanding that an Oracle UNIQUE index can still contain *multiple* NULL values.&quot;</p>
<p>This makes perfect sense.  NULL is not a value, but the absence of value.  Once people properly understand this, SQL&#8217;s NULL handling is sensible.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-331513">
				<div id="div-comment-331513" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">MB</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20051214-15/?p=32983#comment-331513">
			December 20, 2005 at 7:40 am</a>		</div>

		<p>&quot;Oracle databases have UNIQUE indexes. But people have a very hard time understanding that an Oracle UNIQUE index can still contain *multiple* NULL values.&quot;<br />
<br />&quot;This makes perfect sense. NULL is not a value, but the absence of value. Once people properly understand this, SQL&#8217;s NULL handling is sensible.&quot;</p>
<p>Sql Server doesn&#8217;t allow multiple NULL values in a unique constraint&#8230;and the reasoning is the same. NULL is not only the abscense of a value, but is an UNKNOWN value. Therefore, it is UNKNOWN whether 2 NULLs are equal. So, 2 (possibly) equal NULL values can&#8217;t be allowed into a unique constraint.</p>
<p>For those solid reasons that you want Oracle behavior in Sql Server 2000, create an indexed view on the table that excludes nulls and enforce a unique constraint on the view.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-332153">
				<div id="div-comment-332153" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">nil</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20051214-15/?p=32983#comment-332153">
			December 21, 2005 at 7:30 am</a>		</div>

		<p>null in oracle sux, can&#8217;t save an empty string without it becoming null.</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>