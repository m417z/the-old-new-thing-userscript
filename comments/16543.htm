<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (7)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-773113">
				<div id="div-comment-773113" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blogs.msdn.com/matthew_van_eerde' rel='external nofollow' class='url'>Maurits</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090930-01/?p=16543#comment-773113">
			October 1, 2009 at 5:54 am</a>		</div>

		<p>(Posting anonymously because the spam filter apparently hates me)</p>
<blockquote><p>
  &nbsp;why the anti-phishing filter operates on the original URL instead of a hash</p>
<p>  I will start by assuming that Microsoft itself is not malicious
</p></blockquote>
<p>He lost me there. &nbsp;It seems to me that he&#8217;s blowing off the possibility that Microsoft employees with access to the original URLs will use or release that data even though it is against Microsoft policy.</p>
<p><a rel="nofollow" target="_new" href="http://en.wikipedia.org/wiki/AOL_search_data_scandal" rel="nofollow">http://en.wikipedia.org/wiki/AOL_search_data_scandal</a></p>
<p>I don&#8217;t find any of the &quot;but we wanna use the original URL&quot; arguments as compelling.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-773123">
				<div id="div-comment-773123" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blog.wisefaq.com' rel='external nofollow' class='url'>Dale</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090930-01/?p=16543#comment-773123">
			October 1, 2009 at 8:11 am</a>		</div>

		<p>Off topic I know, but I met Betsy at Oz TechEd 2005, not that she&#8217;d remember me. &nbsp;Classy lady.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-773143">
				<div id="div-comment-773143" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Random832</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090930-01/?p=16543#comment-773143">
			October 1, 2009 at 9:36 am</a>		</div>

		<p>@Maurits, did you <em>read the</em> article? An employee acting against Microsoft policy is not &quot;Microsoft itself&quot;, and he specifically mentions the possibility of malicious insiders.</p>
<p>Since you didn&#8217;t read the article, I don&#8217;t find your opinion on the arguments presented in the article compelling.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-773343">
				<div id="div-comment-773343" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Gabe</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090930-01/?p=16543#comment-773343">
			October 1, 2009 at 9:18 pm</a>		</div>

		<p>Maurits, if you had understood the article, you would know that hashing doesn&#8217;t protect privacy. Figuring out who you are based on what URLs you visit is not likely to be easier than figuring out what URLs you visit based on the hashes you send.</p>
<p>Furthermore, any phisher could just add a random component to the URL and be able to make unique hashes to evade detection. So not only does sending hashes not prevent abuse of the information, but it makes the whole system useless by being trivial to circumvent.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-773353">
				<div id="div-comment-773353" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">640k</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090930-01/?p=16543#comment-773353">
			October 1, 2009 at 9:27 pm</a>		</div>

		<p>MS is making up excuses for retrieving the full url, this is not a unsolvable problem IF YOU WANT. At least the protocol and the domain/site/ipnumber part of the url could be hashed.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-773363">
				<div id="div-comment-773363" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Worf</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090930-01/?p=16543#comment-773363">
			October 2, 2009 at 1:37 am</a>		</div>

		<p>What&#8217;s the point of hashing?</p>
<p>So instead of reporting you went to <a href="http://www.google.com" rel="nofollow">http://www.google.com</a>, it reports you went to 0x7e1b567a?</p>
<p>Since anti-phishing requires known sites, then hashing requires the bad URL. Well, it&#8217;s trivial when storing the hashes to store the original URL that goes with it (say, a more efficient lookup method is found). Oh wait, when we ;og the hash, we can translate it to the real URL too! It&#8217;s just another column in the database, so it comes &quot;for free&quot;.</p>
<p>Also makes it hard to do similarity matches. If bankofamerica.example.com is bad, maybe bankofamerica.example.net is too?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-773873">
				<div id="div-comment-773873" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Random832</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090930-01/?p=16543#comment-773873">
			October 2, 2009 at 8:32 pm</a>		</div>

		<p>Of course, the <em>real</em> problem with the argument is that the sort of attacker that most people are worried about aren&#8217;t necessarily going to be the kind that need to &quot;confirm that you&#8217;ve been to a specific site&quot; as he assumes.</p>
<p>Another possibility would be to have the client download a massive list of bad urls (or a section of it &#8211; maybe all the &quot;g&quot;&#8217;s) every time you visit a website, or as part of a periodic update.</p>
<p>Of course, another possibility is that we shouldn&#8217;t all be having this discussion on Raymond Chen&#8217;s blog when he didn&#8217;t write the article.</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>