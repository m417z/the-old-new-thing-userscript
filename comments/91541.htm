<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (58)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-1202841">
				<div id="div-comment-1202841" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Xv8</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150922-00/?p=91541#comment-1202841">
			September 22, 2015 at 7:10 am</a>		</div>

		<p>And then the vendor doesn&#39;t patch it, and every complains that ++Windows is broken and useless.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1202821">
				<div id="div-comment-1202821" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Anon</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150922-00/?p=91541#comment-1202821">
			September 22, 2015 at 7:35 am</a>		</div>

		<p>Wow, never thought you&#39;d have a link to a KYM page in one of your posts. </p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1202811">
				<div id="div-comment-1202811" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">CarlMess</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150922-00/?p=91541#comment-1202811">
			September 22, 2015 at 7:39 am</a>		</div>

		<p>No matter how many lines of code it would have been on MS side, I&#39;m sure it would have had far more consequences in the use base than them figuring out a fix for themselves&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1202801">
				<div id="div-comment-1202801" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Eddie</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150922-00/?p=91541#comment-1202801">
			September 22, 2015 at 7:59 am</a>		</div>

		<p>@Xv8:</p>
<p>It gets worse, some will complain that Microsoft is a monopoly and they purposely broke the app so as to compete with it.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-john-ludlow even thread-even depth-1" id="comment-1202791">
				<div id="div-comment-1202791" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/John+Ludlow' rel='external nofollow' class='url'>John Ludlow</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150922-00/?p=91541#comment-1202791">
			September 22, 2015 at 8:07 am</a>		</div>

		<p>@Xv8:</p>
<p>The alternative would be to build in yet another workaround for the fact that some people are stupid, which makes life harder for everyone else. Half the posts on this blog are of the form &quot;functionality X is misleading, but if we correct it, something somewhere may break&quot;, or &quot;When you ask for X, we automagically translate that to Y because we think that&#39;s more appropriate&quot;.</p>
<p>Eventually, I think MS will have to spend a release cycle untangling this nonsense, breaking everything in the world ever, because this stuff will build up to the point where it&#39;s impossible to predict what any given call to anything will ever do, which will make it impossible to develop and maintain applications.</p>
<p>Personally, I like the idea of major releases being allowed to break stuff, because it avoids that kind of situation.</p>
<div class="post">[<em>All that means is that people will say &quot;Don&#39;t upgrade to the next major release. It breaks stuff.&quot; -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1202781">
				<div id="div-comment-1202781" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">@John Ludlow</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150922-00/?p=91541#comment-1202781">
			September 22, 2015 at 8:32 am</a>		</div>

		<p>The application developers wouldn&#39;t have any issues if they STUCK WITH THE CONTRACT. &nbsp;Microsoft upholds their end of the published contract(API).</p>
<p>The problem is the people who decide &quot;that&#39;s not good enough&quot; and go digging around in the internals of Windows, using stuff that&#39;s not publicly documented or supported, and then complaining when that stuff changes, demanding Microsoft fix it, even though Microsoft does not provide support for those internals, and has the right to change them at any time.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1202771">
				<div id="div-comment-1202771" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150922-00/?p=91541#comment-1202771">
			September 22, 2015 at 8:44 am</a>		</div>

		<p>I reported one awhile back where GetAddrInfoW would accept trailing whitespace (at least a trailing newline) in pServiceName on XP through 7 but stopped doing so on Windows 8. I reported it via the MSDN article comments so I never found out if it was an intended change or not. Thankfully I wasn&#39;t in the case of having to support that headache on existing versions because the installer died pretty hard on Windows 8 (there&#39;s still a kernel32.dll version check* for &gt;= 6.2 in the installer today because the right thing on 8 doesn&#39;t work at all on 7) and we discovered this during testing of the first version to work on Windows 8.</p>
<p>*We use kernel32.dll version checks because GetVersion() lies always now. Yeah sure I should be using VerifyVersionInfo but it&#39;s a worse headache than a version ladder in the installers&#39;s procedural language. Also, the ladders check for hotfixes (install on XPSP2 below a specific hotfix version -&gt; bluescreen loop), which VerifyVersionInfo can&#39;t do.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-john-ludlow odd alt thread-odd thread-alt depth-1" id="comment-1202761">
				<div id="div-comment-1202761" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/John+Ludlow' rel='external nofollow' class='url'>John Ludlow</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150922-00/?p=91541#comment-1202761">
			September 22, 2015 at 9:18 am</a>		</div>

		<p>&gt; The problem is the people who decide &quot;that&#39;s not good enough&quot; and go</p>
<p>&gt; digging around in the internals of Windows, using stuff that&#39;s not publicly</p>
<p>&gt; documented or supported, and then complaining when that stuff changes</p>
<p>Not sure if you realise this, but we&#39;re in agreement here. I don&#39;t think people should root around in undocumented areas for &quot;clever&quot; solutions to problems.</p>
<p>My point was that MS cause problems, not by changing stuff in potentially breaking ways, but by trying to avoid breaking stuff. There&#39;s plenty of examples in this blog. &nbsp;Arguably, some of these are examples of Microsoft breaking the contract on their side.</p>
<p>One example: The Windows API lies about what version of Windows you&#39;re running on to cater for some old, poorly written applications. That means the documented method of finding out what version of Windows you&#39;re on **does not work** because it returns an incorrect value.</p>
<div class="post">[<em>But why do you need to find out what version of Windows you&#39;re on? You should be doing feature detection, not version detection. -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1202741">
				<div id="div-comment-1202741" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ooh</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150922-00/?p=91541#comment-1202741">
			September 22, 2015 at 10:07 am</a>		</div>

		<p>@John Ludlow: First, as Raymond noted in the meantime, why do you need to know the version at all?</p>
<p>Second, why does it not work for you? What&#39;s the incorrect value you&#39;re talking about? It works fine for our products, also on Windows 10. Only thing to remember is to declare compatibility in the application&#39;s manifest, which you should do anyway (of course only after you&#39;ve successfully tested it).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1202731">
				<div id="div-comment-1202731" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150922-00/?p=91541#comment-1202731">
			September 22, 2015 at 10:17 am</a>		</div>

		<p>[But why do you need to find out what version of Windows you&#39;re on? You should be doing feature detection, not version detection. -Raymond]</p>
<p>pkgmgr vs. dism</p>
<p>The way you install .NET if it&#39;s missing</p>
<p>Detecting presence or absence of mandatory hotfixes (such as KB3081436)</p>
<p>The way you install the IIS compatibility framework is different between IIS versions</p>
<p>The only times I got feature detection for Windows components to work reliably optional Windows components and 32 vs 64 bit. We just don&#39;t end up using Windows core features that aren&#39;t there on older Windows versions much.</p>
<div class="post">[<em>I don&#39;t know what the issues you have with pkgmgr, dism, and IIS are, so I won&#39;t try to address those. The way to install .NET is to run the installer. The installer will do the rest of the work. Version checking to detect presence of hotfixes is incorrect, because hotfix application is nonlinear. You should <a href="https://msdn.microsoft.com/en-us/library/windows/desktop/aa387101(v=vs.85).aspx">ask Windows Update if hotfix X needs to be applied</a>. -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-john-ludlow even thread-even depth-1" id="comment-1202721">
				<div id="div-comment-1202721" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/John+Ludlow' rel='external nofollow' class='url'>John Ludlow</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150922-00/?p=91541#comment-1202721">
			September 22, 2015 at 10:23 am</a>		</div>

		<p>&gt; [But why do you need to find out what version of Windows you&#39;re on? You should be doing feature detection, not version detection. -Raymond]</p>
<p>Because I want to know what version of Windows I&#39;m on. That&#39;s a valid answer in and of itself. Being able to report to a user &quot;hey, I think you&#39;re on this version of Windows&quot; is a valid thing to want to do. It&#39;s also valid for me to restrict you from installing on versions of Windows I haven&#39;t tested my app on, regardless of what *features* may be installed. </p>
<p>And, of course, in newer versions, MS will add new (fully documented) functionality to the API which is not in a feature like IIS or PowerShell, and my application relies on that functionality. I need to mandate that this functionality is present (because my application relies on it) and I can&#39;t do it in a feature check (because it&#39;s not a feature).</p>
<p>I&#39;m also not entirely clear how the feature detection is supposed to work &#8211; how can I mandate that IIS version 10 is installed, for example?</p>
<p>But really, you&#39;re missing the point, I&#39;m afraid. It doesn&#39;t matter why I want that information. What matters is that the information is reported correctly. And it&#39;s not. I understand why that is, but I disagree that it was the correct thing to do.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-john-ludlow odd alt thread-odd thread-alt depth-1" id="comment-1202711">
				<div id="div-comment-1202711" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/John+Ludlow' rel='external nofollow' class='url'>John Ludlow</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150922-00/?p=91541#comment-1202711">
			September 22, 2015 at 10:32 am</a>		</div>

		<p>@Ooh</p>
<p>The 2 main things that spring to mind</p>
<p>1: VistaRTMVersionLie</p>
<p><a rel="nofollow" target="_new" href="https://technet.microsoft.com/en-us/library/cc748938(v=ws.10).aspx">technet.microsoft.com/&#8230;/cc748938(v=ws.10).aspx</a></p>
<p>This makes it difficult to have custom version detection logic in installers.</p>
<p>2: Changes to App Compat, discussed here by Heath Stewart:</p>
<p><a rel="nofollow" target="_new" href="https://youtu.be/W8jYsXWP0D4?t=1244">youtu.be/W8jYsXWP0D4</a></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-alegrigoriev even thread-even depth-1" id="comment-1202701">
				<div id="div-comment-1202701" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/alegr1' rel='external nofollow' class='url'>alegr1</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150922-00/?p=91541#comment-1202701">
			September 22, 2015 at 11:00 am</a>		</div>

		<p>At this time, there is no good way for an MSI package to detect it&#39;s rinning on Windows 10. Because Microsoft forgot to add Windows 10 manifest to msiexec.exe. So if you want to install different driver packages for Windows 8.x and Windows 10, you&#39;re SOL.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1202691">
				<div id="div-comment-1202691" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">jon</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150922-00/?p=91541#comment-1202691">
			September 22, 2015 at 11:35 am</a>		</div>

		<p>Would be less of a problem if Microsoft weren&#39;t so obsessed with having so many undocumented APIs. Just get some interns to write the docs, they wouldn&#39;t do a worse job than most of the stuff that has been documented lately.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1202681">
				<div id="div-comment-1202681" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Brian</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150922-00/?p=91541#comment-1202681">
			September 22, 2015 at 11:40 am</a>		</div>

		<p>@John Ludlow:</p>
<p>&gt;&gt;Eventually, I think MS will have to spend a release cycle untangling this nonsense, breaking everything in the world ever, because this stuff will build up to the point where it&#39;s impossible to predict what any given call to anything will ever do, which will make it impossible to develop and maintain applications.</p>
<p>Vista kinda-sorta did that (as a follow-on to XPsp2, where the trend started). &nbsp;Remember how much fun Vista was and what a great success it was for MSFT.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1202671">
				<div id="div-comment-1202671" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Anon</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150922-00/?p=91541#comment-1202671">
			September 22, 2015 at 11:42 am</a>		</div>

		<p>@John Ludlow</p>
<p>No, it isn&#39;t valid for you to tell me what versions of Windows I can install the product I purchased on. It is valid for you to tell me what versions of Windows you *support*, but when your company goes out of business next week, I may have mission-critical apps that rely on your product that suddenly don&#39;t run because you thought you magically knew your application wouldn&#39;t run on Windows 10.2</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1202661">
				<div id="div-comment-1202661" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Benjamin</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150922-00/?p=91541#comment-1202661">
			September 22, 2015 at 11:52 am</a>		</div>

		<p>It never ceases to amaze me how many times this same conversation can be had. &nbsp;As if Microsoft is going to say &quot;You know, the last 20 years of market experience, during which we have sold more OSes than anyone else on the planet, mean nothing! &nbsp;Instead, let&#39;s follow the advice of commenters on the Interwebz and break everything for the sake of satisfying some programmers&#39; obsessive desire for API elegance!&quot;</p>
<p>The API are undocumented not because nobody has time to document them, but because once it gets documented, it has to be supported for all time. It&#39;s like some people have never read this blog before&#8230;</p>
<div class="post">[<em>See, for example, the long-forgotten (but documented) <a href="http://blogs.msdn.com/b/oldnewthing/archive/2006/06/08/622194.aspx">MenuHelp</a> function. -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1202651">
				<div id="div-comment-1202651" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">dasuxullebt</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150922-00/?p=91541#comment-1202651">
			September 22, 2015 at 11:59 am</a>		</div>

		<p>Hm. The one thing I liked when I learned Java &#8211; which was a while ago when it renamed itself from &quot;Java 1.2&quot; to &quot;Java 2&quot; &#8211; was downward compatibility. And in fact, the standard API is still downward compatible. But it is never sufficient, and everything else assumes at least some additional things about the system layout.</p>
<p>Am I the only person who somehow gets scared when thinking about the probably existing towers of lost-source-software that run in maybe important systems?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1202641">
				<div id="div-comment-1202641" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Yukkuri</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150922-00/?p=91541#comment-1202641">
			September 22, 2015 at 12:01 pm</a>		</div>

		<p>&gt;&gt;It&#39;s also valid for me to restrict you from installing on versions of Windows I haven&#39;t tested my app on</p>
<p>Is this a feature you expect to get a big bonus for from management?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-john-ludlow odd alt thread-odd thread-alt depth-1" id="comment-1202621">
				<div id="div-comment-1202621" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/John+Ludlow' rel='external nofollow' class='url'>John Ludlow</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150922-00/?p=91541#comment-1202621">
			September 22, 2015 at 12:13 pm</a>		</div>

		<p>@alegr1:</p>
<p>Yup.</p>
<p>@Brian:</p>
<p>Every major version of Windows did that to the extent that Vista did. XP was every inch as bad as Vista. And they didn&#39;t strip out nearly as much of the compat stuff, which is why we still read posts about app compat fixes for Win 9x-era apps.</p>
<p>@Anon:</p>
<p>Of course it&#39;s valid! You can take your ball and go home (AKA, don&#39;t buy my application) if you don&#39;t like the fact that I did that. But it&#39;s still valid for me to do it. You make a fair point about support, but if I allow you to install on Windows 95, you can guarantee that someone will try that regardless of what I support. The install should actively prevent that situation.</p>
<p>Your comment suggests you&#39;re building mission-critical apps based on an assumption that my application will work on some magic future version of Windows. Sorry, I can&#39;t guarantee that. That&#39;s not how time works, and I&#39;d suggest you rethink how you build mission-critical apps.</p>
<p>Generally, though, I wouldn&#39;t restrict the upper bound, but I would restrict the lower bound. In other words, unless I had some specific reason to restrict you from installing on Windows 10.2, I wouldn&#39;t.</p>
<div class="post">[<em>Word on the street is &quot;Don&#39;t upgrade to Windows 10. John Ludlow&#39;s app won&#39;t install.&quot; My guess is that the single largest source of version compatibility hacks is apps which do a version check and refuse to run, even though they run just fine. (Instead of refusing to run, why not warn the user &quot;Hey, I haven&#39;t been tested on this version of Windows, so it may not work. Install me anyway?&quot; That way you don&#39;t block the corporation who is trying to deploy Windows 10 to its 5,000 employees.) -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1202601">
				<div id="div-comment-1202601" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Anon</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150922-00/?p=91541#comment-1202601">
			September 22, 2015 at 12:35 pm</a>		</div>

		<p>@Brian</p>
<p>Other than fixing the security model, the big breaking change in Vista was the kernel version, which broke any code stupid enough to depend on the kernel version for&#8230; well, anything at all.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1202591">
				<div id="div-comment-1202591" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Anon</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150922-00/?p=91541#comment-1202591">
			September 22, 2015 at 12:44 pm</a>		</div>

		<p>@John Ludlow</p>
<p>I&#39;m building mission-critical apps based on an assumption that third-party apps won&#39;t stop working for trivialities. If the application *breaks*, that&#39;s on me &#8212; you didn&#39;t test it against the future. If the application *intentionally stops working*, that&#39;s on you.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-wndsks even thread-even depth-1" id="comment-1202581">
				<div id="div-comment-1202581" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/skSdnW' rel='external nofollow' class='url'>skSdnW</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150922-00/?p=91541#comment-1202581">
			September 22, 2015 at 1:44 pm</a>		</div>

		<p>Feature detection does not work in all cases. You cannot detect if your desktop app can use the share contract without checking the Windows version number. It only works (for desktop apps) on Win10 but the COM interfaces exist on Win8 and even go as far as returning S_OK on the final share method call but nothing is actually shared!</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1202571">
				<div id="div-comment-1202571" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Chris</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150922-00/?p=91541#comment-1202571">
			September 22, 2015 at 1:50 pm</a>		</div>

		<p>Raymond, I think you might be trying to be helpful, but seriously, you need to consider what question you are being asked when providing an answer. &nbsp;If there is an API that says it provides a version, why in the world would you ask someone why they need the version? &nbsp;Why does their reason matter? &nbsp;If they have a really, really good reason, would you consider fixing a broken API? &nbsp;If the reason doesn&#39;t meet your criteria, are you suddenly comfortable with a broken API?</p>
<p>And as far as why not install, the same applies. &nbsp;Maybe they have a good reason. &nbsp;Maybe they don&#39;t want to deal with support calls regarding something they don&#39;t support! &nbsp;Maybe customers really do tend to be stupid and so they need hand holding to make sure they do the right thing (for example, providing a broken API and then asking customers why they want to use the broken API is not hand holding).</p>
<p>And @John Ludlow, you are doing the right thing. &nbsp;Tell your customers that the app works on versions X, Y and Z of OS. &nbsp;If they want it to work, they should get version X, Y or Z of the OS. &nbsp;I&#39;m guessing that you know this and I&#39;m guessing that your boss is sick of having to spend money dealing with calls from customers saying that the app won&#39;t work on version Z of the OS and can someone please help them.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1202551">
				<div id="div-comment-1202551" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">A regular viewer</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150922-00/?p=91541#comment-1202551">
			September 22, 2015 at 2:13 pm</a>		</div>

		<p>This argument is as old as the term &quot;EDP&quot;. Product or Service. A product is feature-bound at only a specific time. In other times the feature set can differ. A service is feature bound for only a specific feature-set; irrespective of the time when that feature is called into action.</p>
<p>Is MS Windows a product or a service (for application developers, that is)?</p>
<p>More to the point. What should it be?</p>
<p>Being both is well nigh impossible.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-aadsso-1live-com00037ffe8545d1b7 odd alt thread-odd thread-alt depth-1" id="comment-1202541">
				<div id="div-comment-1202541" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/David+Totzke' rel='external nofollow' class='url'>David Totzke</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150922-00/?p=91541#comment-1202541">
			September 22, 2015 at 2:17 pm</a>		</div>

		<p>@Chris Microsoft has been quite vocal about Windows 10 being the last version of Windows. &nbsp;From here on out it&#39;s feature enhancement/addition/whatever. &nbsp;Version detection, such as it is, is no longer a viable option for controlling the behavior of your program/installer/component/thing. &nbsp;@John Ludlow et al can make up all the excuses and reasons they like for why they MUST do version detection, but that&#39;s not going to work from here on out.</p>
<p>I think there is some confusion around feature detection as well. &nbsp;It&#39;s not capital &quot;F&quot; &quot;Feature&quot; detection as in Windows Features that are installed. &nbsp;It&#39;s features with a lower case &quot;f&quot;. &nbsp;I prefer the term &quot;capabilities&quot;. &nbsp;Can the system do &quot;x&quot;? &nbsp;If so, then certain functionality &quot;lights up&quot; in your program. &nbsp;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-kirbyfcf2 even thread-even depth-1" id="comment-1202531">
				<div id="div-comment-1202531" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Kirby+FC' rel='external nofollow' class='url'>Kirby FC</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150922-00/?p=91541#comment-1202531">
			September 22, 2015 at 2:27 pm</a>		</div>

		<p>@John Ludlow</p>
<p>&quot;You make a fair point about support, but if I allow you to install on Windows 95, you can guarantee that someone will try that regardless of what I support. The install should actively prevent that situation.&quot;</p>
<p>Why? &nbsp;Have you actually tested your program on Windows 95 and verified that it doesn&#39;t work properly? &nbsp;If you have, then fair enough. &nbsp;If you haven&#39;t, and you just don&#39;t want to be bothered supporting your application on Windows 95 then tell people up front &quot;This product is only guaranteed to run on Windows XX and YY and anything &nbsp;else is not supported&quot;.</p>
<p>Real life example: &nbsp;A couple of months ago I tried to install an application on Windows 10. &nbsp;It displayed a message &quot;Not supported on this version of Windows&quot;. &nbsp;I ran it anyway and it worked fine.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1202521">
				<div id="div-comment-1202521" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Harry Johnston</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150922-00/?p=91541#comment-1202521">
			September 22, 2015 at 2:52 pm</a>		</div>

		<p>@John, personally, I think the changes to the version API weren&#39;t in order to support &quot;old, poorly written applications&quot; (the compatibility engine can handle them) but in order to make it harder for programmers to make the same mistakes in the future. &nbsp;(It reminds me of UAC in that respect.)</p>
<p>Since you&#39;re *trying* to make one of those mistakes, i.e., refusing to install unless the version number meets your approval, it isn&#39;t surprising that the changes are annoying to you. &nbsp;On the other hand, there is still a documented procedure for getting the &quot;real&quot; version number, so you&#39;re not stuck &#8211; you can still break your software, you just have to put a little extra effort in! :-)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1202511">
				<div id="div-comment-1202511" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Wear</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150922-00/?p=91541#comment-1202511">
			September 22, 2015 at 2:54 pm</a>		</div>

		<p>@John Ludlow Stop DDoSing yourself. You are literally spending hours of your life making your own application not run.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1202501">
				<div id="div-comment-1202501" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150922-00/?p=91541#comment-1202501">
			September 22, 2015 at 2:58 pm</a>		</div>

		<p>[The way to install .NET is to run the installer.]</p>
<p>The pre-Windows 8 Installer and the Windows 8+ installers for .NET framework versions are completely different, and the compatibility shim that picked up the pre-8 version didn&#39;t work right when I tried it (I think it ran asynchronously or something like that, which is really bad when you invoke a .NET program 5 seconds after the framework install seems to finish.) Also, starting with Windows 8, the best way to install .NET appears to be invoking dism.exe.</p>
<p>[You should ask Windows Update if hotfix X needs to be applied. -Raymond]</p>
<p>Too many of our customers like to run w/o any internet connectivity, so I can&#39;t ask Windows Update reliably. By checking myself (I read the update KB files to determine branch ranges so I really can handle nonlinear checks), I can at least error out cleanly.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1202491">
				<div id="div-comment-1202491" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Harry Johnston</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150922-00/?p=91541#comment-1202491">
			September 22, 2015 at 6:24 pm</a>		</div>

		<p>@Joshua: you might want to double-check that; I believe the bits of the Windows Update API relating to which updates are already installed will work w/o internet connectivity. &nbsp;(I&#39;m not certain.)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1202471">
				<div id="div-comment-1202471" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Erik</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150922-00/?p=91541#comment-1202471">
			September 22, 2015 at 6:31 pm</a>		</div>

		<p>How do I do a &quot;feature&quot; check to see whether the OS will block ATA DATA SET MANAGEMENT and instead required me to use the (broken, but that&#39;s another story) FSCTL_FILE_LEVEL_TRIM? How about determining which of the Volume Snapshot Service executables(XP, 2003, others) I&#39;ve bundled that needs to be executed?</p>
<p>Feature checks does not cover all cases. A reliable version check is needed, so that we don&#39;t have to resort to probing what works.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-john-ludlow even thread-even depth-1" id="comment-1202461">
				<div id="div-comment-1202461" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/John+Ludlow' rel='external nofollow' class='url'>John Ludlow</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150922-00/?p=91541#comment-1202461">
			September 22, 2015 at 6:37 pm</a>		</div>

		<p>@All (including Raymond): </p>
<p>You are aware that this is a hypothetical scenario, right? Hypothetical app with hypothetical (but totally realistic) dependencies.</p>
<p>On a more serious note:</p>
<p>I&#39;d expect that most applications are used by a relatively small percentage of the computing population, and that my application&#39;s compatibility issues should not drive policy for everyone. Which means that, as a user, &nbsp;I&#39;d rather that an application break than cause ridiculous workarounds to be subjected onto the rest of humankind just so that I shouldn&#39;t be forced to (shock! horror!) upgrade or find an alternative.</p>
<p>I treat this no differently than upgrading to a newer version of an IDE, such as Visual Studio. I should always be on the latest version of everything. As soon as an upgrade for something I rely on is released, I should adopt that version. Unless there are good reasons not to. A library failing to compile under the latest version of Visual Studio is not a reason not to upgrade, as that library should be upgraded or replaced. We recently learned this to our cost, since we put off an upgrade of VS for a very long time, and it took a year and a team of 6 skilled engineers to upgrade our code.</p>
<p>Similarly, an application breaking on the latest version of Windows is not a good reason to avoid an upgrade &#8211; that application should be upgraded or replaced.</p>
<p>&gt; Why? &nbsp;Have you actually tested your program on Windows 95 and verified that it doesn&#39;t work properly?</p>
<p>Maybe, maybe not. Maybe I know that I need stuff that isn&#39;t in Windows 95 (which is a heck of a lot of stuff!). Maybe I just don&#39;t want support calls from versions of Windows that MS won&#39;t support. Maybe I **just don&#39;t want to test it**.</p>
<p>&gt; Real life example: &nbsp;A couple of months ago I tried to install an application on Windows 10. &nbsp;</p>
<p>&gt; It displayed a message &quot;Not supported on this version of Windows&quot;. &nbsp;I ran it anyway and it worked fine.</p>
<p>You got lucky. The app said &quot;don&#39;t do this, it don&#39;t work&quot; and it worked. You appear to be asking for things to be the other way around.</p>
<p>&gt; Is this a feature you expect to get a big bonus for from management?</p>
<p>It&#39;s usually a manager who asks me to make a change like that. If it came from someone else (such as QA), I&#39;d get a manager&#39;s approval first. As for a bonus, since it&#39;s usually trivial I wouldn&#39;t expect a bonus as they are handed out for major pieces of work. However, since it seems to be getting more difficult, maybe I will expect a bonus for this sort of thing in future!</p>
<p>&gt; [The way to install .NET is to run the installer.]</p>
<p>Basically, what Joshua said. If you run the .NET 3.5 installer on Windows 8, it fails. You have to use the Programs And Features control panel applet (or the Roles And Features wizard if you&#39;re on 2012 R2) to install it.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1202451">
				<div id="div-comment-1202451" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Phil McKerracher</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150922-00/?p=91541#comment-1202451">
			September 22, 2015 at 6:54 pm</a>		</div>

		<p>Am I the only one who finds the tone of this rather condescending and arrogant? It&#39;s effectively saying &quot;you&#39;ll get what we give you and like it, son&quot;, without even having the courage to say it to the customer&#39;s face, relying instead on &quot;customer liaison&quot; to sugar coat it with some lie. The customer is just trying to earn a living like all of us and you seem to be preventing that without a second thought &#8211; in a closed source operating system, no less.</p>
<p>Let&#39;s hope &quot;customer liaison&quot; had more of a clue and either helped the customer do what they were trying to do with supported APIs, achieve a better result some other way, realise that what they were doing was never actually as useful as they thought it was, or apologised profusely for turning a useful product (for them) into a useless one for the greater good of other customers.</p>
<p>Maybe I&#39;m being unfair and the debate did happen but was omitted from the summary above. But as described it sounds as if a customer has unnecessarily been lost along with a good chance to improve the product.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1202421">
				<div id="div-comment-1202421" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Stephen</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150922-00/?p=91541#comment-1202421">
			September 22, 2015 at 7:39 pm</a>		</div>

		<p>I actually ran into the version thing while working on management firmware. &nbsp;There is a very simple program that runs on the host that provides the OS version to the management controller. &nbsp;A remote administrator can then (while the system is powered off) query the last used OS (with version information).</p>
<p>The intent is to be used for software inventory purposes.</p>
<p>If a remote admin wants to ask &quot;what version of Windows is that system running?&quot;, the version of Windows is absolutely relevant. &nbsp;Feature detection is not useful in this case.</p>
<p>The API change *prevents* a well-written program using only supported APIs from working on future releases of Windows.</p>
<p>We ended up finding a different supported API to get the Windows version (the purpose isn&#39;t to get the Windows version, it just happens to include it), but I&#39;ll not post it here to help prevent it from getting &quot;fixed&quot; as well.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1202411">
				<div id="div-comment-1202411" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Viila</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150922-00/?p=91541#comment-1202411">
			September 22, 2015 at 8:10 pm</a>		</div>

		<p>&quot;[But why do you need to find out what version of Windows you&#39;re on? You should be doing feature detection, not version detection. -Raymond]&quot;</p>
<p>In my case telemetry. I would very much like to know that if my application starts reporting failures whether it really IS failing on Windows X or Windows X+1. I would like to think that this is a perfectly valid and acceptable use case for knowing accurate version you&#39;re on, even (especially) if it&#39;s a future one.</p>
<p>In the end I dug it out from WMI, or from an ugly hack if WMI is not available.</p>
<div class="post">[<em>Yes, telemetry is a valid use case for this. Your program won&#39;t change its behavior; it&#39;s just using this for analytics information. Interestingly, the Windows Runtime API for getting analytics information is <a href="http://stackoverflow.com/questions/29273063/how-to-get-the-device-platform-on-windows-10">already being abused to make programmatic decisions</a>. -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-cheong even thread-even depth-1" id="comment-1202401">
				<div id="div-comment-1202401" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/cheong00' rel='external nofollow' class='url'>cheong00</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150922-00/?p=91541#comment-1202401">
			September 22, 2015 at 8:43 pm</a>		</div>

		<p>@Phil McKerracher: IMO &quot;Unsupported API is unsupported&quot; is a reasonable response.</p>
<p>Think about it. There is a empty land area in the town where some people try to place their goods there. The government keeps saying people should place their goods there but they won&#39;t listen.</p>
<p>One they the government decided that they need a new building on the empty land so they build it. Now people complain that they no longer be able to store their goods there so the government should demolish the building so that they can store the goods there again.</p>
<p>Do you think those people storing goods resonable or not?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-cheong odd alt thread-odd thread-alt depth-1" id="comment-1202391">
				<div id="div-comment-1202391" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/cheong00' rel='external nofollow' class='url'>cheong00</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150922-00/?p=91541#comment-1202391">
			September 22, 2015 at 9:04 pm</a>		</div>

		<p>@Viila: In your case you&#39;ll want to know the DLL version number of the DLL containing API that is failing, not the Windows version.</p>
<p>Your way prevent your program to work even if a later fix corrected the behaviour.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1202381">
				<div id="div-comment-1202381" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Yukkuri</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150922-00/?p=91541#comment-1202381">
			September 22, 2015 at 9:43 pm</a>		</div>

		<p>I see my comment went sailing right over someone&#39;s head&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-yuhong-bao odd alt thread-odd thread-alt depth-1" id="comment-1202371">
				<div id="div-comment-1202371" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Yuhong+Bao' rel='external nofollow' class='url'>Yuhong Bao</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150922-00/?p=91541#comment-1202371">
			September 22, 2015 at 9:46 pm</a>		</div>

		<p>There was at least one major app where a shim was created for Win10 because of a buggy .NET Framework version check in the installer, where to fix it properly the media would have to be remastered, and that major app does yearly releases.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1202351">
				<div id="div-comment-1202351" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Scarlet Manuka</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150922-00/?p=91541#comment-1202351">
			September 23, 2015 at 1:15 am</a>		</div>

		<p>After reading the &quot;Now we don&#39;t need to create a compatibility shim&quot; paragraph, I was expecting the kicker to be that they did have to create a compatibility shim for it anyway in the end (e.g. due to the vendor being unable – or perhaps just unwilling – to get a patch out in time).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1202311">
				<div id="div-comment-1202311" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Anon</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150922-00/?p=91541#comment-1202311">
			September 23, 2015 at 5:40 am</a>		</div>

		<p>@John Ludlow</p>
<p>If you run a .NET 3.5 app on Win8, it will offer to install .NET 3.5 for you.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1202171">
				<div id="div-comment-1202171" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">John Doe</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150922-00/?p=91541#comment-1202171">
			September 23, 2015 at 9:37 am</a>		</div>

		<p>@Anon, how convenient, I&#39;m sure someone will be there to answer the prompt when the service starts after installation. &nbsp;Oh&#8230;</p>
<p>@Phil McKerracher, although it is condescending, using undocumented APIs is just that. &nbsp;Imagine someone using undocumented exported functions from your native DLLs, or internal or private definitions from your .NET assemblies. &nbsp;If you were Microsoft, would you be willing to change your internals because of 1 customer that knowingly does The Wrong Thing™?</p>
<p>So, there should be a reliable way of getting the actual version, a reliable way of getting the emulated/shimmed version and a reliable way to ask for capabilities/features. &nbsp;Is this all in place?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1202141">
				<div id="div-comment-1202141" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">640k</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150922-00/?p=91541#comment-1202141">
			September 23, 2015 at 10:16 am</a>		</div>

		<p>EU might be interested in hearing more about this uncompetitive behaviour.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-mngoldeneagle even thread-even depth-1" id="comment-1202121">
				<div id="div-comment-1202121" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/MNGoldenEagle' rel='external nofollow' class='url'>MNGoldenEagle</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150922-00/?p=91541#comment-1202121">
			September 23, 2015 at 10:43 am</a>		</div>

		<p>@640k: How is this discouraging competition? &nbsp;We don&#39;t even know that the API in question is. &nbsp;Heck, we don&#39;t even know what the app is.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1202111">
				<div id="div-comment-1202111" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">morlamweb</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150922-00/?p=91541#comment-1202111">
			September 23, 2015 at 10:46 am</a>		</div>

		<p>@John Ludlow:</p>
<p>&quot;&gt; Real life example: &nbsp;A couple of months ago I tried to install an application on Windows 10. &nbsp;</p>
<p>&gt; It displayed a message &quot;Not supported on this version of Windows&quot;. &nbsp;I ran it anyway and it worked fine.</p>
<p>You got lucky. The app said &quot;don&#39;t do this, it don&#39;t work&quot; and it worked. You appear to be asking for things to be the other way around.&quot;</p>
<p>Are you reading the same message as I am? &nbsp;How do you turn the message &quot;Not supported on this version of Windows&quot; into &quot;it don&#39;t work&quot;? &nbsp;I work in tech support and I am keenly aware of the difference between unsupported and broken. &nbsp;They are not even close to the same thing. &nbsp;In my business, &#39;unsupported&#39; means that you won&#39;t get help from the company for technical questions; &#39;broken&#39; or &#39;it don&#39;t work&#39; means that we&#39;ve tested the software in that configuration and we know that it doesn&#39;t work.</p>
<p>The app was right in displaying a message about the unsupported OS. &nbsp;It&#39;s likely that the app hasn&#39;t (yet) been tested on Windows 10. &nbsp;However, since unsupported != broken, the installer was allowed to continue, and it sounds like the app worked. &nbsp;(Hopefully because the developer(s) stuck to the published APIs).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1202101">
				<div id="div-comment-1202101" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Microsoft OSes are the Best!</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150922-00/?p=91541#comment-1202101">
			September 23, 2015 at 11:13 am</a>		</div>

		<p>The greatest thing about Microsoft Windows (and DOS!) is that programs from years and years ago still work! &nbsp;I trusted in Microsoft to not break backwards compatibility &#8211; and they followed through! &nbsp;If an app uses the documented API, then there is no reason to version-detect. &nbsp;The fact that the OS may lie about its version means some apps still work (so much backwards compatibility effort from Microsoft and Raymond, Thank You Very Much!!) </p>
<p>Apps that purposely DoS themselves after a Microsoft Customer upgrades to a new OS&#8230; wow. &nbsp;Maybe on some OSes, but not on Microsoft Windows. &nbsp;</p>
<p>Of course, exceptions to every rule, the general case being that &quot;no API exists, we have to use undocumented details&quot;. &nbsp;In which case, version detect is not the solution, one has to detect the feature. &nbsp;How to detect a feature? &nbsp;Well, that&#39;s the fun part! &nbsp;There are no rules for that. &nbsp;The OS version is not the way to detect a feature. </p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1202081">
				<div id="div-comment-1202081" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">James Sutherland</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150922-00/?p=91541#comment-1202081">
			September 23, 2015 at 12:05 pm</a>		</div>

		<p>It is a shame the answer amounted to &quot;don&#39;t use xyz&quot; rather than something more helpful, like &quot;instead of using the undocumented function xyz, you can get that information by calling FrobnicateBadgersEx passing the FBE_XYZ flag&quot;. Otherwise, I think we all know they&#39;re going to end up with &quot;if winver() &lt; 410 xyz(a,b,c) else xyz(42,c,b,a)&quot;, and if a subsequent patch backports the new xyz implementation, someone&#39;s going to complain that patch breaks that application now&#8230;</p>
<p>I know users can be demanding &#8211; it wasn&#39;t that long ago I got a plaintive email reporting that a free utility of mine had stopped working on Windows 2000 &#8230; and in 2012, a request for Windows &#39;98 support on another one. (Now I test against a Win2k VM for the first, and I went and added DOS support to the second one, since it was an interesting challenge: DOS 6 to Win10 x64 in a single EXE&#8230;)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1202041">
				<div id="div-comment-1202041" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">@James Sutherland</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150922-00/?p=91541#comment-1202041">
			September 23, 2015 at 3:01 pm</a>		</div>

		<p>We don&#39;t have enough information to know if that would have been a good response. They may have been calling an undocumented API for changing a setting that should only be controlled by the user or a hardware event. If Microsoft locked down the function in a later release, perhaps making sure that calls only come from something like CSRSS, then it would break their code and there would be no supported API to achieve the same goal. In that case the liaison likely knew that it is a setting that no one should be screwing with, but did due diligence by following up with the people responsible for it.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1202031">
				<div id="div-comment-1202031" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Katie</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150922-00/?p=91541#comment-1202031">
			September 23, 2015 at 3:01 pm</a>		</div>

		<p>That last comment was from me if you want to respond. I noticed as I submitted that I put the @ reply in the name field.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1201971">
				<div id="div-comment-1201971" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Max</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150922-00/?p=91541#comment-1201971">
			September 24, 2015 at 1:30 am</a>		</div>

		<p>&quot;Your comment suggests you&#39;re building mission-critical apps based on an assumption that my application will work on some magic future version of Windows.&quot;</p>
<p>Think of it from a user&#39;s perspective. The user expects the program to run, period, regardless of what they do with any other piece of software on their system. You&#39;re free to inform them that a particular configuration isn&#39;t supported, but they&#39;ll probably try it anyway, and most of the time it&#39;ll probably work fine &#8211; after all, the app-compat guys go to a lot of trouble to minimize breakage. </p>
<p>From a developer&#39;s perspective, this is potentially very annoying, but from a user perspective, you&#39;re preventing users from upgrading other software they own because you don&#39;t want to deal with them complaining about bugs you haven&#39;t fixed yet. This can have potentially wide-ranging impacts: one of the biggest technology scourges of the 00s was platform lock-in caused by developers who dragged their feet on modernizing their software and chained users to old versions of platforms &#8211; IE6 and Java 6 stuck around far too long, mostly because of legacy enterprise applications refusing to work properly on newer versions of those platforms.</p>
<p>&quot;Similarly, an application breaking on the latest version of Windows is not a good reason to avoid an upgrade &#8211; that application should be upgraded or replaced.&quot;</p>
<p>Upgrading or replacing an application is expensive &#8211; for certain kinds of software, particularly in the enterprise space, even upgrades can cost quite a bit of money. And of course replacing a program that&#39;s running on every computer in your globe-spanning multinational business is absurdly costly. Even if it&#39;s not a business-critical application that you literally can&#39;t keep the doors open without, it&#39;s still a considerable inconvenience and cost to have to buy a new program because the old one just decided it&#39;s not going to work on new platforms and the developer was too much of a purist to care about their users&#39; problems.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1201891">
				<div id="div-comment-1201891" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Anon</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150922-00/?p=91541#comment-1201891">
			September 24, 2015 at 8:03 am</a>		</div>

		<p>@John Doe</p>
<p>You can use dism or Powershell to get the status of any Windows feature during installation, and/or change the state of any Windows feature during installation.</p>
<p>A better method, of course, is to stop using .NET 3.5. .NET 3.5 is no longer supported. Hell, .NET 4.0, 4.5 and 4.5.1 only have ~3 months left.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1201651">
				<div id="div-comment-1201651" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Pete</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150922-00/?p=91541#comment-1201651">
			September 26, 2015 at 7:12 am</a>		</div>

		<p>MSDN itself suggests version checking for WP stuff, e.g.:</p>
<p>Do not use ReaderWriterLockSlim on Windows Phone 8 devices that are running a version of the Windows Phone 8 operating system earlier than Windows Phone 8 (8.0.10322.0). Prior to Windows Phone 8 (8.0.10322.0), this class throws a MethodAccessException exception when two readers enter the lock. In most cases, use the Monitor class instead. </p>
<p>For a code sample that shows how to check the operating system version and build number, see Adding Windows Phone 8 and Windows Phone 7.8 Tile functionality to Windows Phone OS 7.1 apps.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1201611">
				<div id="div-comment-1201611" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">James Sutherland</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150922-00/?p=91541#comment-1201611">
			September 27, 2015 at 11:50 am</a>		</div>

		<p>@Katie: That&#39;s possible, but the complaint was that MS &#39;changed&#39; the function, not that they disabled it, which suggested something like a change in the numbering of some option number &#8211; so FrobnicateBadger(7) on previous versions became FrobnicateBadger(11) on the new version due to adding some new badger frobnication methods.</p>
<p>If it had been a &quot;user-only setting&quot; (a concept I&#39;ve always disliked &#8211; after all, the software is running on behalf of the user; if there is an on-screen checkbox for enabling something, applications *can* change that, it&#39;s just a question of how awkward and obfuscated the mechanism is, ranging from a proper documented and supported API to a hideous kludge of having to simulate user input and manipulate the UI to achieve it) the reply really should have said that. Maybe it&#39;s implied, from the lack of suggesting a better route, but either way I&#39;d have expected a bit more effort to steer them to a way less likely to create compatibility headaches for both sides later on&#8230;</p>
<div class="post">[<em>Not a user setting. It&#39;s an internal interface that the shell uses for keeping track of XYZ. The interface changed for internal reasons, and they want to change it back. Basically &quot;Please change your interface back to the old way. Sure, you&#39;re adding back dead code and have to continue supporting an old interface, but that way we can still call it.&quot; -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1201541">
				<div id="div-comment-1201541" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Anon</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150922-00/?p=91541#comment-1201541">
			September 28, 2015 at 6:44 am</a>		</div>

		<p>@Pete</p>
<p>Relevant as soon as Raymond starts up his Windows Phone blog.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1201531">
				<div id="div-comment-1201531" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Anon</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150922-00/?p=91541#comment-1201531">
			September 28, 2015 at 6:47 am</a>		</div>

		<p>@jon</p>
<p>Undocumented APIs are unsupported, that&#39;s why they&#39;re undocumented. They&#39;ve intentionally not been documented to discourage anyone from attempting to use them, so having people document them would be counter-productive.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1201441">
				<div id="div-comment-1201441" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">morlamweb</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150922-00/?p=91541#comment-1201441">
			September 28, 2015 at 1:48 pm</a>		</div>

		<p>@Pete: as Anon has pointed out, this is a win32 blog, not Windows Phone, and the rules regarding version checks may be different for that OS. &nbsp;Is version-checking the acceptable way in the WP world to check for phone features or APIs? &nbsp;Or is it something recommended by MSDN only for specific cases where an API had a known bug in older versions of the OS? &nbsp;Whatever the case may be, the answer has no bearing (yet) on Win32 and version checks. &nbsp;Examining the OS version in win32 to determine support for features will only lead you down a bad path.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1201411">
				<div id="div-comment-1201411" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Anon</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150922-00/?p=91541#comment-1201411">
			September 28, 2015 at 8:49 pm</a>		</div>

		<p>Windows seems to generate a lot of &quot;blah blah isn&#39;t compatible ENOUGH&quot; traffic. Worth a reminder that Windows is the only OS that even *tries* to be backwards-compatible.</p>
<p>If you don&#39;t like Windows&#39; backward- and forward-compatibility efforts, feel free to move development to OSX, where every point-release breaks everything, and the dev-support response is &quot;So?&quot;</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>