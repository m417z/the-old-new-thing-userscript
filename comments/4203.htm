<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (9)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment byuser comment-author-joshuaganes even thread-even depth-1" id="comment-1059193">
				<div id="div-comment-1059193" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Joshua+Ganes' rel='external nofollow' class='url'>Joshua Ganes</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130531-00/?p=4203#comment-1059193">
			May 31, 2013 at 9:16 am</a>		</div>

		<p>I like your dual-queue explanation better than the MSDN pseudo-priority-queue explanation. I find it simpler to conceptualize and I find that it is more intuitive when it comes to posted messages disguised as input messages. Otherwise I would think that the false input messages might follow the same rules as true input messages.</p>
<p><!-- p>Typo: processed ahead of input msesages
</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-bboorman odd alt thread-odd thread-alt depth-1" id="comment-1059213">
				<div id="div-comment-1059213" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Brian_EE' rel='external nofollow' class='url'>Brian_EE</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130531-00/?p=4203#comment-1059213">
			May 31, 2013 at 10:22 am</a>		</div>

		<p>&quot;Time has gone backward.&quot;</p>
<p>Either that or these are indications to Microsoft Research&#39;s time machine that Raymond hints is being developed. Where are the conspiracy theorists when you need them?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1059223">
				<div id="div-comment-1059223" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">D-Coder</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130531-00/?p=4203#comment-1059223">
			May 31, 2013 at 11:39 am</a>		</div>

		<p>&quot;Where are the conspiracy theorists when you need them?&quot;</p>
<p>Go to CNN.com and read the comments. &nbsp;At least an aleph-zero of them.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1059233">
				<div id="div-comment-1059233" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130531-00/?p=4203#comment-1059233">
			May 31, 2013 at 4:40 pm</a>		</div>

		<p>I found this piece of library code we obtained from a third party who does not deserve to be named who was doing SendMessage(&#8230;, WM_MOUSEDOWN, &#8230;) to a system control. I was able to slightly reduce the undocumented and unspecified behavior by following it with WM_MOUSEUP. It&#39;s still a bad idea I couldn&#39;t easily remove. (Trying to defer-create textbox until it is needed sounds like a good idea until you realize it can&#39;t get the WM_MOUSEDOWN that caused it to exist.)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-aadsso-1live-com00034001a5381f07 even thread-even depth-1" id="comment-1059243">
				<div id="div-comment-1059243" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Georg_Rottensteiner' rel='external nofollow' class='url'>Georg_Rottensteiner</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130531-00/?p=4203#comment-1059243">
			May 31, 2013 at 10:56 pm</a>		</div>

		<p>This is missing the &quot;takeway&quot; or &quot;learnings&quot; :)</p>
<p>Do NOT post input messages, it will not do what you might think it does.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1059253">
				<div id="div-comment-1059253" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Jonathan</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130531-00/?p=4203#comment-1059253">
			May 31, 2013 at 11:54 pm</a>		</div>

		<p>Out of curiosity: How is the message queue actually implemented: Preferential queue, or 2 separate queues? My money is on the latter.</p>
<p><!-- p>Typo: s/new/knew/
</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1059263">
				<div id="div-comment-1059263" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Alois Kraus</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130531-00/?p=4203#comment-1059263">
			June 1, 2013 at 1:44 am</a>		</div>

		<p>You said that for simulating keyboard input we should use SendInput. You also said there are still many issues left with this solution. Is there any guidance available which documents the other issues with proposed workarounds? I am sure there are millions UI interaction tests running each day and thousands of them are failing sporadically. It is a very tedious undertaking to find issues others had as well. UI automation tests are still necessary even with all these nice isolated unit tests with mocked interfaces and behaviour testing.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1059273">
				<div id="div-comment-1059273" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Neil</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130531-00/?p=4203#comment-1059273">
			June 1, 2013 at 3:37 am</a>		</div>

		<p>As I recall, old versions of the Flash plugin used to post itself messages all over the shop, which was really annoying because Netscape 7 wanted to process input messages by preference. They ended up peeking keyboard, ime and mouse messages in order to subvert the priority system: <a rel="nofollow" target="_new" href="http://mxr.mozilla.org/mozilla1.7/source/widget/src/windows/nsAppShell.cpp#123" rel="nofollow">mxr.mozilla.org/&#8230;/nsAppShell.cpp</a> although Firefox 23 (!) will revert to mostly the default message order (except apparently for certain mouse wheel messages).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1059313">
				<div id="div-comment-1059313" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">sirin</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130531-00/?p=4203#comment-1059313">
			June 3, 2013 at 4:30 am</a>		</div>

		<p>Is there a way to post a low priority message with the same priority as an input message?</p>
<div class="post">[<em>All posted messages are treated like posted messages. -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>