<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (8)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-215743">
				<div id="div-comment-215743" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Cooney</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041011-00/?p=37603#comment-215743">
			October 11, 2004 at 7:25 am</a>		</div>

		<blockquote><p>
  you can take advantage of the fact that the return value from the GetClassInfoEx function is the atom for the class, cast to a BOOL.</p>
<p>Is this guaranteed, or is it subject to change in future versions?
</p></blockquote>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-215753">
				<div id="div-comment-215753" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ivo</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041011-00/?p=37603#comment-215753">
			October 11, 2004 at 11:08 am</a>		</div>

		<p>Yeah, I was wondering the same thing about casting to BOOL yesterday. The dialog procedure is supposed to handle some messages by casting the return value to BOOL instead of using DWL_MSGRESULT (WM_CTLCOLORBTN, WM_CTLCOLORSTATIC, etc, probably others). How does that translate to 64 bit? Is BOOL 64 bit, or is HBRUSH 32 bit on a 64 bit system?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-215763">
				<div id="div-comment-215763" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://weblogs.asp.net/oldnewthing' rel='external nofollow' class='url'>Raymond Chen</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041011-00/?p=37603#comment-215763">
			October 11, 2004 at 11:10 am</a>		</div>

		<p><a target="_new" href="http://weblogs.asp.net/oldnewthing/archive/2004/01/15/58973.aspx#59082" rel="nofollow">http://weblogs.asp.net/oldnewthing/archive/2004/01/15/58973.aspx#59082</a></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-215783">
				<div id="div-comment-215783" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">superclasser</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041011-00/?p=37603#comment-215783">
			October 11, 2004 at 1:12 pm</a>		</div>

		<p>GetClassInfoEx is useful for superclassing.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-215793">
				<div id="div-comment-215793" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://weblogs.asp.net/oldnewthing' rel='external nofollow' class='url'>Raymond Chen</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041011-00/?p=37603#comment-215793">
			October 11, 2004 at 1:20 pm</a>		</div>

		<p>Right, but why would you superclass a class that you yourself registered? Wouldn&#8217;t you just fix your original class?  I can see superclassing somebody else&#8217;s class, but in that case you don&#8217;t have their atom since you didn&#8217;t call RegisterClass originally.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-215803">
				<div id="div-comment-215803" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">doynax</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041011-00/?p=37603#comment-215803">
			October 11, 2004 at 1:25 pm</a>		</div>

		<p>I&#8217;m using the ATOM as a handle when writing my win32 wrapper classes. Saves having to deal with string allocation, especially since the names were auto generated anyway.</p>
<p>But why can&#8217;t I patch a window class without creating an actual window instance?<br />
<br />This feels kinda strange since I can get a handle (i.e. the ATOM) and even retreive it&#8217;s data (GetClassInfoEx) without having a window around. Not to mention that I have to create a dummy window to subclass standard controls.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-215823">
				<div id="div-comment-215823" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ryan Myers</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041011-00/?p=37603#comment-215823">
			October 11, 2004 at 3:30 pm</a>		</div>

		<p>I use it for a similar reason to doynax.  If you&#8217;re making a C++ wrapper for a window class and want to delete the wrapper as part of the destructor, you have to keep around either the name of the class or the atom returned by RegisterClassEx.  Although I didn&#8217;t know about the legacy reasons for atoms &#8212; that might lead me to store it as a string instead.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-215833">
				<div id="div-comment-215833" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">teebee</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20041011-00/?p=37603#comment-215833">
			October 11, 2004 at 5:35 pm</a>		</div>

		<p>I find it terribly helpful/useful to use the GCW_ATOM to determine the window class during the WM_NOTIFY processing of my C appication.  Prior to using GCW_ATOM we used a strcmp loop through all the currently supported window classes we&#8217;ve implemented.  The overhead of 30 or more strcmp and a strcpy seems much worse that a loop comparing 30 ATOMS.<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>