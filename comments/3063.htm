<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (10)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-1080783">
				<div id="div-comment-1080783" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20131001-00/?p=3063#comment-1080783">
			October 1, 2013 at 9:40 am</a>		</div>

		<p>It occurred to me awhile back that anybody who designed a system in 16 bit Windows that depended on the DATA segment of a DLL being shared by all processes that loaded that DLL would be in a world of hurt in porting to 32 bit Windows.</p>
<div class="post">[<em>Actually, it worked out mostly okay. Each DLL thinks that it is being used by only one process in the system. -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1080803">
				<div id="div-comment-1080803" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20131001-00/?p=3063#comment-1080803">
			October 1, 2013 at 10:11 am</a>		</div>

		<p>[Actually, it worked out mostly okay. Each DLL thinks that it is being used by only one process in the system. -Raymond]</p>
<p>Not if two processes were using the shared DLL for shared state.</p>
<div class="post">[<em>Each DLL then thought that it was being used by only one process. The other process using the DLL was invisible. (It was running in another VM, you might say.) The shared state was not shared because there was nobody to share it with. In general, this worked out okay. -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1080823">
				<div id="div-comment-1080823" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Neil</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20131001-00/?p=3063#comment-1080823">
			October 2, 2013 at 3:16 am</a>		</div>

		<p>And in 32-bit land, hPrevInstance was always NULL. Each process then thought that it was the first instance. In general, this worked out okay.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-gregm odd alt thread-odd thread-alt depth-1" id="comment-1080843">
				<div id="div-comment-1080843" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/GregM' rel='external nofollow' class='url'>GregM</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20131001-00/?p=3063#comment-1080843">
			October 2, 2013 at 7:00 am</a>		</div>

		<p>Raymond, I think Joshua was just saying that anyone that depended on the sharing to happen would have to completely replace that way of communicating when porting to Win32, not that something bad would happen when the programs ran. &nbsp;So the world of hurt is during development, not at runtime.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1080853">
				<div id="div-comment-1080853" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">laonianren</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20131001-00/?p=3063#comment-1080853">
			October 2, 2013 at 7:35 am</a>		</div>

		<p>@GregM: Win32 supports shared data sections in DLLs, so you wouldn&#39;t have to completely replace the functionality. &nbsp;Of course, that creates a synchronisation problem, but you could probably fix that by attaching the input of your processes.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1080873">
				<div id="div-comment-1080873" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Deduplicator</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20131001-00/?p=3063#comment-1080873">
			October 2, 2013 at 12:14 pm</a>		</div>

		<p>@laonianren:</p>
<p>You know that&#39;s not a &quot;Get out of Jail&quot; but a &quot;Let&#39;s merge those Jails (so noone feels responsible for anything)&quot; card?</p>
<p>Raymond had a few posts about the evils of attached Input queues. The treatment is worse than the disease.</p>
<p>Just accept you have to redesign your IPC.</p>
<p>&quot;In general, this worked out okay.&quot; That&#39;s true, in general, this feature was not used, though sometimes it might be used as a shortcut, and the few remaining cases can be ignored.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1080923">
				<div id="div-comment-1080923" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Chris</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20131001-00/?p=3063#comment-1080923">
			October 3, 2013 at 7:08 am</a>		</div>

		<p>I&#39;ve just spent two months remediating a suite of 16-bit programs that massively shared data using DLLs between programs. &nbsp;Pointers to blocks of storage were shared in INI files so that small VB3 programs could be used as common dialogs to other VB3 programs. &nbsp;It&#39;s been a journey as they say, mostly solved by using an ActiveX singleton EXE.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1080963">
				<div id="div-comment-1080963" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">laonianren</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20131001-00/?p=3063#comment-1080963">
			October 3, 2013 at 9:01 am</a>		</div>

		<p>@Deduplicator: We&#39;re talking about porting 16-bit apps, so they already expect to have their input queues attached. &nbsp;This isn&#39;t a great long-term solution, but sometimes a legitimate goal is to get your app ported as quickly as possible.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1081103">
				<div id="div-comment-1081103" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20131001-00/?p=3063#comment-1081103">
			October 5, 2013 at 12:41 pm</a>		</div>

		<p>@Chris: Wow, somebody actually *did* it. I saw a database engine proposed that way sooo many years ago but I never thought one would see the light of day.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1081133">
				<div id="div-comment-1081133" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blogs.msdn.com/chris.reynolds_4000_chrisrey.demon.co.uk/ProfileUrlRedirect.ashx' rel='external nofollow' class='url'>chris.reynolds@chrisrey.demon.co.uk</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20131001-00/?p=3063#comment-1081133">
			October 7, 2013 at 1:07 am</a>		</div>

		<p>It sort of happened. &nbsp;An object oriented data framework was written in C, nicely supporting aggregation, inheritance and implementation hiding. &nbsp;The handles to the objects were returned to the caller (VB3 typically) as longs which were actually pointers to the meta-data for the object instance. &nbsp;One of the teams using the framework noticed this and then used it as an IPC mechanism. &nbsp;For VB3 on old Win 3.1. machines it probably worked well as it avoided costly refresh trips to the mainframe (through HLLAPI back then). </p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>