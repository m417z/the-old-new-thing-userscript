<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (7)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1 parent" id="comment-1342935">
				<div id="div-comment-1342935" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Antonio Rodr√≠guez</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180528-00/?p=98845#comment-1342935">
			May 28, 2018 at 7:39 am</a>		</div>

		<p>After introducing the index, it became clear that you can only use those 256 combination of opcodes. But, before that, was it legal to use any combination, or were the options limited from the beginning?</p>

		
				</div>
		<ol class="children">
		<li class="comment odd alt depth-2 parent" id="comment-1342995">
				<div id="div-comment-1342995" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Fabian Giesen</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180528-00/?p=98845#comment-1342995">
			May 28, 2018 at 2:42 pm</a>		</div>

		<p>There are 3 binary inputs (source, pattern, destination). Therefore, there are 2^3 = 8 possible input bit patterns, and the 8-bit (256-value) op code is sufficient for a full truth table that specifies the (1-bit) output for all possible combinations of inputs. All binary-valued functions of 3 binary inputs can be written in this form, and since the older encoding only lets you produce functions of those 3 input bits, everything the expression-style encoding can produce has a corresponding truth table.</p>
<p>It&#8217;s not immediately obvious to me whether the expression-like encoding is sufficient to express all possible functions of the 3 bits (although it probably is). The easiest way to do so would probably be to enumerate all 2^16 options and determine the truth table for all of them, and then you can see whether you hit all 256 possible truth tables.</p>
<p>The 8-bit encoding of 3-input truth tables turns turns out to be convenient for hardware &#8211; the implementation is regular, quite small, and fast. It shows up in other places like the Amiga blitter <a href="http://amigadev.elowar.com/read/ADCD_2.1/Hardware_Manual_guide/node011C.html" rel="nofollow">http://amigadev.elowar.com/read/ADCD_2.1/Hardware_Manual_guide/node011C.html</a> or, much more recently, the &#8220;VPTERNLOGD&#8221; / &#8220;VPTERNLOGQ&#8221; instructions in Intel&#8217;s AVX-512. Larger truth tables (4 or 6 bits input, typically) are used as primary building blocks in FPGAs.</p>

		
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-oldnewthing bypostauthor even depth-3" id="comment-1343095">
				<div id="div-comment-1343095" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Raymond+Chen+-+MSFT' rel='external nofollow' class='url'>Raymond Chen - MSFT</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180528-00/?p=98845#comment-1343095">
			May 29, 2018 at 7:12 am</a>		</div>

		<p>Clearly the expression-based version was able to encode all 256 operations, seeing as that&#8217;s how it was done before indices were added, and <a href="https://msdn.microsoft.com/en-us/library/windows/desktop/dd145130(v=vs.85).aspx" rel="nofollow">there&#8217;s a proof via explicit enumeration</a>.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment odd alt depth-2" id="comment-1343045">
				<div id="div-comment-1343045" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Neil</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180528-00/?p=98845#comment-1343045">
			May 29, 2018 at 3:32 am</a>		</div>

		<p>For each bit there are two values for each of P, S and D. You can therefore build a truth table with 8 rows showing the resulting bit for the input bits of P, S and D. (If you design the truth table correctly, you can then read up the result column to obtain the binary raster operation index.) Since there are 2 output values for each of those 8 rows, there are therefore 256 different truth tables and raster operation indexes.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-oldnewthing bypostauthor even depth-2" id="comment-1343105">
				<div id="div-comment-1343105" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Raymond+Chen+-+MSFT' rel='external nofollow' class='url'>Raymond Chen - MSFT</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180528-00/?p=98845#comment-1343105">
			May 29, 2018 at 7:14 am</a>		</div>

		<p>You had to use the official operation codes, because, as I noted in the article, drivers in practice did not parse the operation code. They just looked it up in a table. So your operation code had better be in the table.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1 parent" id="comment-1343075">
				<div id="div-comment-1343075" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joker_vD</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180528-00/?p=98845#comment-1343075">
			May 29, 2018 at 6:09 am</a>		</div>

		<p>I am so glad I don&#8217;t have to know any of this stuff, so I can read it for a mere entertainment value, to learn how people of the yore had to blit their bits uphill both ways in the snow, and they liked it!</p>

		
				</div>
		<ol class="children">
		<li class="comment even depth-2" id="comment-1343305">
				<div id="div-comment-1343305" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">R P (MSFT)</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180528-00/?p=98845#comment-1343305">
			May 29, 2018 at 10:04 am</a>		</div>

		<p>In practice, most of us people of yore just used the predefined values like SRCCOPY or DSTINVERT or whatever. There&#8217;s almost no call for any other ROP codes, but if we needed them we could find them in that table. </p>
<p>So we didn&#8217;t need to know this stuff, which was good because we didn&#8217;t know this stuff. If it was documented anywhere it was only in the DDK (which was more difficult to get in those days.)</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>