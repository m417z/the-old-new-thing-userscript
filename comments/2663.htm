<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (19)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-1088823">
				<div id="div-comment-1088823" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Anon</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20131114-00/?p=2663#comment-1088823">
			November 14, 2013 at 7:08 am</a>		</div>

		<p>The error passed unit testing because &#39;Optimism&#39; is the word of the day. No one would ever dare be so pessimistic as to believe that the message might not exist in the preferred language (And, of course, even if it isn&#39;t, we clearly don&#39;t support that other language, just tell the customer to use OUR preferred language!).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-bboorman odd alt thread-odd thread-alt depth-1" id="comment-1088843">
				<div id="div-comment-1088843" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Brian_EE' rel='external nofollow' class='url'>Brian_EE</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20131114-00/?p=2663#comment-1088843">
			November 14, 2013 at 7:18 am</a>		</div>

		<p>A. The unit test was incomplete and didn&#39;t test the second conditional call to FormatMessage&#8230;</p>
<p>or</p>
<p>B. The test string used didn&#39;t require any va args</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1088883">
				<div id="div-comment-1088883" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Gabe</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20131114-00/?p=2663#comment-1088883">
			November 14, 2013 at 8:15 am</a>		</div>

		<p>You don&#39;t go to the hassle of creating a &quot;WithFallback&quot; version of a function and not test the fallback feature, so I&#39;m going to assume that the unit test didn&#39;t require any insertion parameters.</p>
<p>Further, the first thing I assumed would be the problem was that the fallback string was out of sync and had the wrong number of insertions (e.g. including a %2 when only one parameter was passed). So I think that&#39;s the other thing that can go wrong with this function.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-fredericmagnyf odd alt thread-odd thread-alt depth-1" id="comment-1088893">
				<div id="div-comment-1088893" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Medinoc' rel='external nofollow' class='url'>Medinoc</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20131114-00/?p=2663#comment-1088893">
			November 14, 2013 at 8:54 am</a>		</div>

		<p>Unit-testing the fallback mechanism requires purposely de-synching the two languages (adding a string that&#39;s present in the fallback language but not the preferred one). AND said extra string must have inserts.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-maurits even thread-even depth-1" id="comment-1088903">
				<div id="div-comment-1088903" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Maurits+%5BMSFT%5D' rel='external nofollow' class='url'>Maurits [MSFT]</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20131114-00/?p=2663#comment-1088903">
			November 14, 2013 at 9:05 am</a>		</div>

		<p>Perhaps better still:</p>
<p>DWORD g_langIdsInOrderOfPreference[] =</p>
<p>{</p>
<p> &nbsp; &nbsp;g_preferredLangId,</p>
<p> &nbsp; &nbsp;g_fallbackLangId,</p>
<p>};</p>
<p>BOOL FormatWithFallbackLanguage(</p>
<p> &nbsp; &nbsp;DWORD dwMessageId, PCTSTR pszBuffer, SIZE_T cchBuffer, &#8230;)</p>
<p>{</p>
<p> &nbsp; &nbsp;DWORD cchResult = 0;</p>
<p> &nbsp; &nbsp;// try the languages in order of preference</p>
<p> &nbsp; &nbsp;for (int i = 0; i &lt; ARRAYSIZE(g_langIdsInOrderOfPreference); i++)</p>
<p> &nbsp; &nbsp;{</p>
<p> &nbsp; &nbsp; &nbsp; &nbsp;va_list ap;</p>
<p> &nbsp; &nbsp; &nbsp; &nbsp;va_start(ap, cchBuffer);</p>
<p> &nbsp; &nbsp; &nbsp; &nbsp;cchResult = FormatMessage(</p>
<p> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; FORMAT_MESSAGE_FROM_HMODULE,</p>
<p> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; g_hinst, dwMessageId, g_langIdsInOrderOfPreference[i],</p>
<p> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; pszBuffer, cchBuffer, &amp;ap);</p>
<p> &nbsp; &nbsp; &nbsp; &nbsp;va_end(ap);</p>
<p> &nbsp; &nbsp; &nbsp; &nbsp;if (cchResult != 0)</p>
<p> &nbsp; &nbsp; &nbsp; &nbsp;{</p>
<p> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;// got it</p>
<p> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;break;</p>
<p> &nbsp; &nbsp; &nbsp; &nbsp;}</p>
<p> &nbsp; &nbsp;}</p>
<p> &nbsp; &nbsp;return (cchResult != 0);</p>
<p>}</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-bboorman odd alt thread-odd thread-alt depth-1" id="comment-1088913">
				<div id="div-comment-1088913" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Brian_EE' rel='external nofollow' class='url'>Brian_EE</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20131114-00/?p=2663#comment-1088913">
			November 14, 2013 at 9:59 am</a>		</div>

		<p>@Gabe: &quot;You don&#39;t go to the hassle of creating a &quot;WithFallback&quot; version of a function and not test the fallback feature,&quot;</p>
<p>I&#39;m glad to know that you work with all top-notch developers, but don&#39;t let that color your vision that there aren&#39;t sloppy developers out there. SW has it&#39;s share of lazy people just like every other profession.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1088923">
				<div id="div-comment-1088923" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Mark</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20131114-00/?p=2663#comment-1088923">
			November 14, 2013 at 2:09 pm</a>		</div>

		<p>Maurits, can&#39;t you get your own blog to post all this stuff on?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1088833">
				<div id="div-comment-1088833" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Adam Rosenfield</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20131114-00/?p=2663#comment-1088833">
			November 14, 2013 at 7:16 am</a>		</div>

		<p>The code passed the unit tests because the implementation of va_arg() likely just slurps the next value off of the stack, and the stack frames from the unit test code likely had particular values at the right spots that happened to not crash. &nbsp;Undefined Behavior can rear its head in any way, including appearing to succeed without any ill effects.</p>
<p>Whenever I write a variadic function, I always make two versions, one which takes arbitrary arguments with an ellipsis and one which takes a va_list, like the *printf/v*printf family of functions. &nbsp;With this implementation, it&#39;s impossible to forward a va_list from another function into FormatWithFallbackLanguage(), at least not without resorting to fragile platform-specific hacks like the avcall module of the GNU ffcall library.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1088933">
				<div id="div-comment-1088933" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Yuri Khan</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20131114-00/?p=2663#comment-1088933">
			November 14, 2013 at 5:04 pm</a>		</div>

		<p>&gt; Exercise: What else can go wrong in this function?</p>
<p>In the worst case, it will work as intended and give users localized error messages that are impossible to google for.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1088943">
				<div id="div-comment-1088943" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Gabe</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20131114-00/?p=2663#comment-1088943">
			November 14, 2013 at 6:08 pm</a>		</div>

		<p>Brian_EE: Don&#39;t be ridiculous &#8212; the people I work with wouldn&#39;t even be doing unit testing!</p>
<p>To figure out the answer, you just have to think about the question. The real answer to &quot;How did this error elude unit testing?&quot; could easily be &quot;We don&#39;t do unit testing&quot;, or &quot;The unit test doesn&#39;t cover that code path&quot;, or &quot;The test is correct but the guy running the test didn&#39;t notice that it failed&quot;. If we assume incompetent unit testers then any of those answers are equally likely &#8212; and equally uninteresting.</p>
<p>But if the unit testers were that bad, Raymond wouldn&#39;t have bothered to ask the question. The reason he mentioned unit testing in the first place is presumably because it was being done correctly (all code paths covered and producing expected results), yet still didn&#39;t catch this particular case.</p>
<p>And that&#39;s the only answer that makes it interesting enough to be worth asking.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1088953">
				<div id="div-comment-1088953" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20131114-00/?p=2663#comment-1088953">
			November 14, 2013 at 6:31 pm</a>		</div>

		<p>Ah yes someone writes a not-completely-thought-out fallback and it goes bad.</p>
<p>Seen it too often.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1088963">
				<div id="div-comment-1088963" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">foo</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20131114-00/?p=2663#comment-1088963">
			November 14, 2013 at 6:42 pm</a>		</div>

		<p>Wow. MSVC 2013 implements va_copy (C99). Learn something new everyday.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1088983">
				<div id="div-comment-1088983" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Neil</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20131114-00/?p=2663#comment-1088983">
			November 15, 2013 at 2:53 am</a>		</div>

		<p>Are you supposed to be able to determine how big the buffer needs to be?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1089003">
				<div id="div-comment-1089003" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">AndreiM</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20131114-00/?p=2663#comment-1089003">
			November 15, 2013 at 5:16 am</a>		</div>

		<p>Quote from MSDN: &quot;If this lpSource handle is NULL, the current process&#39;s application image file will be searched. &quot;</p>
<p>My guess is that they had some fallback resources in the main EXE, but different language in another dll. When testing, they had only the exe, which means that the function could exit with error before touching va_list ap.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1089023">
				<div id="div-comment-1089023" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">dave</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20131114-00/?p=2663#comment-1089023">
			November 15, 2013 at 7:49 am</a>		</div>

		<p>&gt;Are you supposed to be able to determine how big the buffer needs to be?</p>
<p>If you want to. Or you can let FormatMessage do the buffer allocation. Both are supported, see the doc.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1089043">
				<div id="div-comment-1089043" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Pessimistic</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20131114-00/?p=2663#comment-1089043">
			November 15, 2013 at 12:26 pm</a>		</div>

		<p>What else could go wrong?</p>
<p>&#8211; more replacement strings (%2, %3) than insertion parameters, possibly only in fallback string</p>
<p>&#8211; overlapped buffers of result and insertion parameters</p>
<p>&#8211; required result buffer size is bigger than 64kByte</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1089053">
				<div id="div-comment-1089053" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Pessimistic</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20131114-00/?p=2663#comment-1089053">
			November 15, 2013 at 12:29 pm</a>		</div>

		<p>And: the whole printf-pandora of non-matching format spec to argument type, if %n!format-string! style is used.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1089073">
				<div id="div-comment-1089073" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Michael</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20131114-00/?p=2663#comment-1089073">
			November 16, 2013 at 3:37 am</a>		</div>

		<p>Why does FormatMessage take a pointer to a va_list anyway? Why not a &quot;value&quot; va_list, like vprintf and friends? If they can do the magic without having a pointer, then so could FormatMessage? That could have &quot;preempted&quot; this crash.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1089363">
				<div id="div-comment-1089363" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">@Michael</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20131114-00/?p=2663#comment-1089363">
			November 19, 2013 at 12:07 am</a>		</div>

		<p>&quot;Why does FormatMessage take a pointer to a va_list anyway?&quot; It takes a pointer, not necessary a va_list pointer.</p>
<p>This is the only way this function can be used from any program which is not compiled with Microsoft C, like Delphi, VisualBasic, etc etc</p>
<p>MSDN: &quot;If you do not have a pointer of type va_list*, then specify the FORMAT_MESSAGE_ARGUMENT_ARRAY flag and pass a pointer to an array of DWORD_PTR values; those values are input to the message formatted as the insert values. Each insert must have a corresponding element in the array.&quot;</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>