<html>
<head>
<title>Use the #error directive to check whether the compiler even sees you</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>Use the #error directive to check whether the compiler even sees you</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>April 9, 2008 / year-entry #117</td></tr>
<tr><td><b>Tags:</b></td><td>code</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20080409-00/?p=22803</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>47</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">You may find yourself in a twisty maze of #ifdefs. Or you may be wondering why your macros aren't working. I have these lines in my header file: #define MM_BUSY 0x0001 #define MM_IDLE 0x0002 but when I try to use them, I get errors. sample.cpp(23): error C2065: 'MM_BUSY': undeclared identifier sample.cpp(40): error C2065: 'MM_IDLE': undeclared...</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>
You may find yourself in a twisty maze of <code>#ifdef</code>s.
Or you may be wondering why your macros aren't working.
</p>
<blockquote CLASS=m>
<p>
I have these lines in my header file:
</p>
<pre>
#define MM_BUSY     0x0001
#define MM_IDLE     0x0002
</pre>
<p>
but when I try to use them, I get errors.
</p>
<pre>
sample.cpp(23): error C2065: 'MM_BUSY': undeclared identifier
sample.cpp(40): error C2065: 'MM_IDLE': undeclared identifier
</pre>
<p>
Any idea why this is happening?
</p>
</blockquote>
<p>
First, make sure the compiler even sees you.
Notice that for macros, generating a preprocessed file
doesn't accomplish anything since <code>#define</code>s don't
show up in the preprocessor output.
(They are preprocessor <i>input</i>.)
What I do is use the <code>#error</code> directive.
Add it to the header file and recompile.
</p>
<pre>
#define MM_BUSY     0x0001
#define MM_IDLE     0x0002
#error Did we get here?
</pre>
<p>
If you get
</p>
<pre>
sample.h(80) : error C1189: #error :  Did we get here?
</pre>
<p>
then you know that the line is indeed being compiled
and that somebody after you is doing an <code>#undef MM_BUSY</code>.
If not, then you get to investigate why the lines in the header
file are being ignored.
For example,
they might be hidden by an <code>#ifdef</code>,
or (if you're using Visual Studio with precompiled headers),
your <code>#include</code> directive might be ignored due to an
overriding precompiled header directive.
You can scatter <code>#error</code> directives into other parts
of the header file (or other header files) to narrow down why
your lines are being skipped.</p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (47)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-617043">
				<div id="div-comment-617043" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Name required</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080409-00/?p=22803#comment-617043">
			April 9, 2008 at 10:17 am</a>		</div>

		<p>I used to do something similar, but my messages were never so polite.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-617053">
				<div id="div-comment-617053" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">scott</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080409-00/?p=22803#comment-617053">
			April 9, 2008 at 10:19 am</a>		</div>

		<p>Too much real typing required, I prefer this method:</p>
<p>#define MM_BUSY &nbsp; &nbsp; 0x0001</p>
<p>#define MM_IDLE &nbsp; &nbsp; 0x0002</p>
<p>asdasdasd</p>
<p>The compiler will choke on the garbage and you&#8217;ll know if you&#8217;re there.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-617073">
				<div id="div-comment-617073" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">SRS</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080409-00/?p=22803#comment-617073">
			April 9, 2008 at 10:48 am</a>		</div>

		<p>I&#8217;m raising a request to have:</p>
<p>#define asdasdasd</p>
<p>added to windows.h</p>
<p>Ha! That&#8217;ll teach you not to use #error</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-617093">
				<div id="div-comment-617093" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Matthias</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080409-00/?p=22803#comment-617093">
			April 9, 2008 at 10:56 am</a>		</div>

		<p>Mmh, compile-time printf debugging. &nbsp;It&#8217;s always nice to have a low-tech fallback when the power tools are failing.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-617103">
				<div id="div-comment-617103" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">GregM</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080409-00/?p=22803#comment-617103">
			April 9, 2008 at 11:04 am</a>		</div>

		<p>I&#8217;ve used this type of trick many times, it&#8217;s really handy.</p>
<p>If putting in the error text is too much typing, this works just as well:</p>
<p>#error</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-617113">
				<div id="div-comment-617113" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">mikeb</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080409-00/?p=22803#comment-617113">
			April 9, 2008 at 12:00 pm</a>		</div>

		<blockquote><p>
  &gt; Mmh, compile-time printf debugging. &nbsp;It&#8217;s always nice to have a low-tech fallback when the power tools are failing.
</p></blockquote>
<p>Unfortunately, there are pretty much no &#8216;high-tech&#8217; ways to debug preprocessor actions.</p>
<p>I was so very happy when MS added the /showIncludes option to the compiler. &nbsp;That feature helped several times on projects that had very complex include directory requirements.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-617123">
				<div id="div-comment-617123" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.dancingbunnies.com' rel='external nofollow' class='url'>Sjoerd Verweij</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080409-00/?p=22803#comment-617123">
			April 9, 2008 at 12:00 pm</a>		</div>

		<p>Or&#8230; open up the header in Visual Studio. If it&#8217;s grayed out, an #ifdef is hiding it.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-617133">
				<div id="div-comment-617133" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Koro</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080409-00/?p=22803#comment-617133">
			April 9, 2008 at 12:27 pm</a>		</div>

		<p>What? There is a /showIncludes switch?</p>
<p>Damn, I spent half a day writing an &quot;include checker&quot; once which would follow includes in C files and show them, to debug some complex cyclic headers dependencies&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-617143">
				<div id="div-comment-617143" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://jbazuzi.blogspot.com' rel='external nofollow' class='url'>Jay Bazuzi</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080409-00/?p=22803#comment-617143">
			April 9, 2008 at 12:29 pm</a>		</div>

		<p>Sjoerd: that only works if you&#8217;re using a Visual Studio project to compile. &nbsp;Sadly, there are plenty of makefile-based and custom build systems out there. &nbsp;</p>
<p>(I say sadly because they miss out on so much cool stuff.)</p>
<p>For example, for a long time, most Microsoft software was built with a custom build system, because the Visual C++ project system didn&#8217;t scale to the very large sizes of Microsoft software. &nbsp;</p>
<p>With the advent of msbuild and the adoption of C#, that is changing at Microsoft. &nbsp;Yay!</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-617153">
				<div id="div-comment-617153" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">scott</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080409-00/?p=22803#comment-617153">
			April 9, 2008 at 12:30 pm</a>		</div>

		<blockquote><p>
  I&#8217;m raising a request to have:</p>
<h1>define asdasdasd</h1>
<p>  added to windows.h</p>
<p>  Ha! That&#8217;ll teach you not to use #error
</p></blockquote>
<p>OK, fine, I&#8217;ll generate a GUID and use that as my compiler poison pill. Let the arms race begin!</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-617163">
				<div id="div-comment-617163" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://flatpack.microwavepizza.co.uk/' rel='external nofollow' class='url'>Ben A L Jemmett</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080409-00/?p=22803#comment-617163">
			April 9, 2008 at 12:31 pm</a>		</div>

		<p>Sjoerd: as clever as Visual Studio&#8217;s syntax highlighting is, it surely can&#8217;t tell you accurately which #if or #ifdef statements are in effect &#8212; the condition could easily evaluate differently in different source files.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-617173">
				<div id="div-comment-617173" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Evil</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080409-00/?p=22803#comment-617173">
			April 9, 2008 at 12:34 pm</a>		</div>

		<p>&#8230;</p>
<p>until somebody doesn&#8217;t do</p>
<p>#define asdasdasd ;</p>
<p>:)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-617203">
				<div id="div-comment-617203" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">IgorD</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080409-00/?p=22803#comment-617203">
			April 9, 2008 at 1:24 pm</a>		</div>

		<p>It took me a while to understand what are you talking about and I&#8217;m still not sure how to word my question.</p>
<p>In my IDE, if something is defined and the source has already compiled, syntax coloring will catch all declared macros and they turn from black to some color, in my settings it is dark blue.</p>
<p>So if I have:</p>
<p>#define MM_BUSY</p>
<p>.. as I type &#8216;MM_BUS&#8217;, the word is black, but as I add &#8216;Y&#8217; the whole word turns blue and I know I typed it right.</p>
<p>Right-click on the word can show me where it was defined. What is it that I&#8217;m missing here?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-617213">
				<div id="div-comment-617213" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">DB</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080409-00/?p=22803#comment-617213">
			April 9, 2008 at 1:24 pm</a>		</div>

		<p>The Microsoft compiler supports similiar options:</p>
<p>cl.exe /P &#8211; generates preprocessed output files (*.i)</p>
<p>cl.exe /EP &#8211; outputs preprocessed output to stdout</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-617223">
				<div id="div-comment-617223" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Evan</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080409-00/?p=22803#comment-617223">
			April 9, 2008 at 1:44 pm</a>		</div>

		<p>@Sjoerd Verweij: &quot;Or&#8230; open up the header in Visual Studio. If it&#8217;s grayed out, an #ifdef is hiding it.&quot;</p>
<p>Good heuristic, but not absolutely reliable. For instance, I worked on a project where there was a situation something like there was a file with additional command line options used with cl &#8230; @file; the file forced the inclusion of a certain header in each file; this header modified the macros in force. The upshot was that VS was wrong about what code was active, which was both misleading and may have suppressed intellisense in the disabled part (I forget if it does that). The solution was to turn that feature off in the editor.</p>
<p>@Miguel Duarte: &quot;Raymond, I use another approach which may be more complex than your hint, but it may be more useful when dealing with more complex macro problems.&quot;</p>
<p>This is also a useful trick, but it&#8217;s helpful in different situations. The #error trick is useful if you want to figure out if a particular piece of code is being compiled. Looking at the preprocessed source is useful if you&#8217;re having macro expansion problems, and less useful if you want to find out if code is there.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-617233">
				<div id="div-comment-617233" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Tom_</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080409-00/?p=22803#comment-617233">
			April 9, 2008 at 1:44 pm</a>		</div>

		<p>The Visual Studio IDE doesn&#8217;t always get the status of #defines correct, so sometimes you can find parts of code greyed out or coloured in, when they shouldn&#8217;t be. The same goes for &quot;go to definition&quot;, which will find something irrelevant just often enough to be annoying. With this in mind, #error is still useful.</p>
<p>(This is more of an issue with multi platform projects that contain a lot of files that are irrelevant for any given platform. The IDE seems to have a tendency to look inside these files sometimes, even though they&#8217;re excluded from build, or #ifdef&#8217;d out, or the project excluded, or however it is you like to do this stuff.)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-617253">
				<div id="div-comment-617253" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">pingpong</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080409-00/?p=22803#comment-617253">
			April 9, 2008 at 1:52 pm</a>		</div>

		<p>@IgorD: assuming that your IDE perfectly highlights all #defines, Raymond&#8217;s post refers to the scenario when MM_BUSY remains black when you complete typing it(because header file was not included, probably due to #ifdef/#endif guards surrounding it).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-617263">
				<div id="div-comment-617263" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.BrianKowald.com' rel='external nofollow' class='url'>Brian K</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080409-00/?p=22803#comment-617263">
			April 9, 2008 at 2:07 pm</a>		</div>

		<p>We use these macros for inserting warnings like &quot;fix this later&quot;:</p>
<p>#define <strong>STR2</strong>(x) #x</p>
<p>#define <strong>STR1</strong>(x) <strong>STR2</strong>(x)</p>
<p>#define <strong>LOC</strong> <strong>FILE</strong> &quot;(&quot;<strong>STR1</strong>(<strong>LINE</strong>)&quot;) : warning: &quot;</p>
<p>#define <strong>LOC2</strong> <strong>FILE</strong> &quot;(&quot;<strong>STR1</strong>(<strong>LINE</strong>)&quot;) : &quot;</p>
<p>#define COMPILE_WARN(s) message(<strong>LOC</strong> s)</p>
<p>#define COMPILE_ERROR(d,s) message(<strong>LOC2</strong> &quot;error &quot; d &quot;: &quot; s)</p>
<p>Then in the source code use:</p>
<p>#pragma COMPILE_WARN(&quot;Check it here&quot;)</p>
<p>#pragma COMPILE_ERROR(&quot;C9999&quot;,&quot;Don&#8217;t forget to code here!&quot;)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-617273">
				<div id="div-comment-617273" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.dancingbunnies.com' rel='external nofollow' class='url'>Sjoerd Verweij</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080409-00/?p=22803#comment-617273">
			April 9, 2008 at 2:17 pm</a>		</div>

		<p>I agree, the IDE is not perfect &#8212; but it does well enough 99% of the time.</p>
<p>And yes, /showIncludes is an absolute blessing; I have it on all the time. It really helps with the little things, like, oh, how STLport (don&#8217;t ask) needs an #undef __in_range to compile with the latest SDK. Reason 1,349,088 why I switched to C# (except for maintenance). C++ is just too time-consuming.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-617283">
				<div id="div-comment-617283" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Evan</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080409-00/?p=22803#comment-617283">
			April 9, 2008 at 2:33 pm</a>		</div>

		<p>@Sjoerd Verweij: &quot;I agree, the IDE is not perfect &#8212; but it does well enough 99% of the time.&quot;</p>
<p>Oh, I agree. But you still need a technique for dealing with the remaining 1%, and this is it. ;-)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-617293">
				<div id="div-comment-617293" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">IgorD</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080409-00/?p=22803#comment-617293">
			April 9, 2008 at 2:51 pm</a>		</div>

		<p>@pingpong: Raymond&#8217;s post refers to the scenario when MM_BUSY remains black</p>
<p>Well yes, and now I see why VS team needed some &#8216;official&#8217; recomendation they could put into VS manual for such cases when 90% of regular guys just type &#8216;asdfasdf&#8217; as SRS suggested above.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-617303">
				<div id="div-comment-617303" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">IgorD</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080409-00/?p=22803#comment-617303">
			April 9, 2008 at 2:54 pm</a>		</div>

		<p>AH!</p>
<p>&#8230; as scott sugested above! SRS was mocking him!</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-617313">
				<div id="div-comment-617313" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Peter</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080409-00/?p=22803#comment-617313">
			April 9, 2008 at 4:47 pm</a>		</div>

		<p>Reminds me of &#8216;debugging&#8217; ASP waaaay back in a past life; pretty much the only tool you had was to response.write things (often obscene or ridiculous ones) to find if it was working.</p>
<p>It&#8217;s possible that #error might even be slightly cruder though&#8230; isn&#8217;t the preprocessor great :-)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-617323">
				<div id="div-comment-617323" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Marc K</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080409-00/?p=22803#comment-617323">
			April 9, 2008 at 5:55 pm</a>		</div>

		<p>I&#8217;ve used this before. &nbsp;Most often I&#8217;m trying to use an API in which the SDK says it should be available in Windows X, but the header has it enabled only for Windows Y and newer. &nbsp;It would so nice if there was a feature in the IDE that would show you what (nested) pre-processor conditions are in effect for the selected line.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-madq42 even thread-even depth-1" id="comment-617333">
				<div id="div-comment-617333" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/MadQ1' rel='external nofollow' class='url'>MadQ1</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080409-00/?p=22803#comment-617333">
			April 9, 2008 at 6:14 pm</a>		</div>

		<p>The problem with IntelliSense graying out excluded code is that it doesn&#8217;t seem to to take into account pre-defined macros, or those defined with the /D command line switch.</p>
<p>For example:</p>
<p>#if !defined(_CPPRTTI)</p>
<h1>&nbsp; &nbsp;error C++ Run-Time Type Information must be enabled.</h1>
<p>#else</p>
<h1>&nbsp; &nbsp;pragma message(&quot;C++ Run-Time Type Information is enabled.&quot;)</h1>
<p>#endif</p>
<p>works as expected when compiled, but the message pragma is always grayed out. It&#8217;s not really a big deal, but it has confused me a couple of times.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-617343">
				<div id="div-comment-617343" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">steveg</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080409-00/?p=22803#comment-617343">
			April 9, 2008 at 8:05 pm</a>		</div>

		<p>@Sjoerd Verweij: &quot;C++ is just too time-consuming.&quot;</p>
<p>Totally, utterly agree. Once the complexity of the application goes beyond a certain point C++ becomes more a game of fighting the compiler than actually doing work.</p>
<p>Last big C++ project I did took 6 hours to compile (GCC runs like molasses compared to Intel&#8217;s or MS&#8217;s compilers). Very intricate hierarchy of templated classes (and macros that generated macros that generated templated classes &#8212; &lt;aside&gt;Patterns gone mad &#8212; Big 4 patterns generate Too Many Classes. Consider a data/table-driven approach with 50000% less code to maintaint&lt;/aside&gt;. Only to find that right at the end you had 73 template-related compile errors &#8212; have you ever seen one of those suckers? They&#8217;re dozens of lines long and don&#8217;t simply don&#8217;t help!</p>
<p>Which is why I like C#. I spend more time solving a work-related problem than solving a &quot;WTF was Bjourne thinking&quot;.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-617193">
				<div id="div-comment-617193" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.linkedin.com/in/malduarte' rel='external nofollow' class='url'>Miguel Duarte</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080409-00/?p=22803#comment-617193">
			April 9, 2008 at 1:11 pm</a>		</div>

		<p>Raymond, I use another approach which may be more complex than your hint, but it may be more useful when dealing with more complex macro problems.</p>
<p>I just instruct the compiler to generate all the code that would be compiled after the preprocessing stage and inspect the output.</p>
<p>With gcc(*) you can achieve that with -E compiler option</p>
<p>from the help:</p>
<p> &nbsp; &nbsp; -E &nbsp;Stop after the preprocessing stage; do not run the</p>
<p> &nbsp; &nbsp; &nbsp; &nbsp; compiler proper. &nbsp;The output is in the form of</p>
<p> &nbsp; &nbsp; &nbsp; &nbsp; preprocessed source code, which is sent to the standard</p>
<p> &nbsp; &nbsp; &nbsp; &nbsp; output.</p>
<p> &nbsp; &nbsp; &nbsp; &nbsp; Input files which don&#8217;t require preprocessing are</p>
<p> &nbsp; &nbsp; &nbsp; &nbsp; ignored.</p>
<p>I&#8217;m not really familiar with Microsoft(*) tools, but I&#8217;m sure all compilers should have similar options.</p>
<p>By the way, although I&#8217;m not familiar with Windows development, I really like your blog! Thank you for sharing the hairy details!</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-617243">
				<div id="div-comment-617243" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Evan</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080409-00/?p=22803#comment-617243">
			April 9, 2008 at 1:45 pm</a>		</div>

		<p>@IgorD: &quot;Right-click on the word can show me where it was defined. What is it that I&#8217;m missing here?&quot;</p>
<p>In part, that if they are not defined (so they don&#8217;t turn blue and go to definition doesn&#8217;t work), those features don&#8217;t do anything to help you figure out why the definition you *think* should be in force is not.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-617353">
				<div id="div-comment-617353" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">chrismcb</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080409-00/?p=22803#comment-617353">
			April 9, 2008 at 8:56 pm</a>		</div>

		<p>@Miguel Duarte &quot;I just instruct the compiler to generate all the code that would be compiled after the preprocessing stage and inspect the output.&quot;</p>
<p>Miquel, did you read what Raymond wrote?</p>
<p>&quot;Notice that for macros, generating a preprocessed file doesn&#8217;t accomplish anything since #defines don&#8217;t show up in the preprocessor output.&quot;</p>
<p>The problem is you think you&#8217;ve #defined MM_BUSY to 1, but it doesn&#8217;t show up as 1 in the code. You know this because you have an error.Looking at the precompiled output only confirms it. But it doesn&#8217;t give you a clue why the #define isn&#8217;t working.</p>
<p>@steveg how big are your C# projects compared to your C++ projects? I imagine 10 years from now when the C# codebase approaches the complexity of the C++ codebase you&#8217;ll be seening similar issues.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-617363">
				<div id="div-comment-617363" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://lambert.geek.nz/' rel='external nofollow' class='url'>Miral</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080409-00/?p=22803#comment-617363">
			April 9, 2008 at 9:25 pm</a>		</div>

		<p>@MadQ: &quot;The problem with IntelliSense graying out excluded code is that it doesn&#8217;t seem to to take into account pre-defined macros, or those defined with the /D command line switch.&quot;</p>
<p>Thing is, if you&#8217;re looking inside a .h file, it can&#8217;t. &nbsp;For any given line in the .h file, the defined symbols could vary significantly, depending on the compiler options and earlier include files and #defines made in the including .cpp file. &nbsp;And since a .h file can be included from more than one .cpp (each of which having different patterns of definitions), you&#8217;re SOL.</p>
<p>In fact a header file can even be intentionally included more than once in a single .cpp in certain cases (which can be a useful technique &#8212; it gives you a poor-man&#8217;s-codegen), which practically guarantees the definitions will be different each time.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-617373">
				<div id="div-comment-617373" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Peter</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080409-00/?p=22803#comment-617373">
			April 9, 2008 at 9:37 pm</a>		</div>

		<p>steveg: I&#8217;d argue it&#8217;s more about program design. At work we&#8217;ve got (among many other things&#8230;) a moderately large C++ app and a fairly small C# app. The C# app takes me heaps more time to come to grips with every time I have to use it, because it&#8217;s poorly structured and very not obvious how anything actually works. The C++ one has some nice hierarchies of templated excitement, but I&#8217;d rather figure out technical compiler messages (which are my fault anyway&#8230;) that at least have logic behind them rather than try to figure out what some programmer intended, which very probably had no logic at all.</p>
<p>My experience with GCC isn&#8217;t so negative either. My copy of VS2005 has two modes: slow and fast, and some days it will randomly enter slow mode, in which case it is far, far slower than GCC (or pretty much anything&#8230;).</p>
<p>I don&#8217;t believe that increasing project size has to automatically make things <em>that</em> much worse in C++ if it&#8217;s done properly; it may be difficult to do do but who ever said this programming game would be easy?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-617393">
				<div id="div-comment-617393" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Dave</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080409-00/?p=22803#comment-617393">
			April 10, 2008 at 1:16 am</a>		</div>

		<blockquote><p>
  My copy of VS2005 has two modes: slow and fast, and some days it will</p>
<p>  randomly enter slow mode, in which case it is far, far slower than</p>
<p>  GCC (or pretty much anything&#8230;).
</p></blockquote>
<p>Have you tried disabling IntelliSense? &nbsp;(Google for something like &quot;intellisense&quot; + &quot;slow&quot; to find endless posts on this). &nbsp;I&#8217;ve found it so bad on some machines that it rendered them more or less unusable (as have numerous others), but disabling IntelliSense by removing the necessary DLL fixes it.</p>
<p>ObSnarkyComment (for Raymond): MS sucks, can&#8217;t even write a decent compiler, blah blah blah :-).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-617403">
				<div id="div-comment-617403" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Xepol</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080409-00/?p=22803#comment-617403">
			April 10, 2008 at 1:43 am</a>		</div>

		<p>required &quot;that that&#8217;s why xxxx is better than yyyy&quot; religious language war comment here&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-617413">
				<div id="div-comment-617413" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">steveg</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080409-00/?p=22803#comment-617413">
			April 10, 2008 at 2:02 am</a>		</div>

		<p>Peter &amp; chrismcb: okay, I&#8217;ll give some ground on design vs language. My job after the C++ one was a contract maintaining a Delphi application that was written by accountants (and used by around a million people) that was the worst structured program I&#8217;ve ever encountered (ooh look a function 3km long. With gotos). We tried to model it three times and gave up; there is no modelling technique I&#8217;m aware of that can generate useful documentation from a quantumly entagled n-dimension hypercube.</p>
<p>The C++ app had a CORBA ACE/TAO layer of template fun in the mix with all its memory-management-related joys. Add in GCCs incomplete/non-standard template support with occassional bonus invalid generated code it was a whole bunch of fun. By the end even the C++ bigots who designed the system gave up on C++ and started writing new modules in Java &#8212; basically all roads from C++ lead to a managed environment.</p>
<p>But to keep this approximately on topic (sorry Raymond) when you&#8217;re generating templates with multiple layers of macros the #error trick is REALLY handy. Or trying to work out how MFCs macros work.</p>
<p>Interestingly, C# is limited to simple macro support, you can only #define FOO.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-617423">
				<div id="div-comment-617423" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Worf</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080409-00/?p=22803#comment-617423">
			April 10, 2008 at 2:02 am</a>		</div>

		<p>My one wish is that #warning would be supported. (Similar to #error, but it generates a warning during the build, rather than an error.)</p>
<p>That way, when doing libraries, you can use various tricks to warn when people use deprecated APIs or do even rudimentary checks that won&#8217;t halt the build, but hopefully someone notices.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-617433">
				<div id="div-comment-617433" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Miguel Duarte</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080409-00/?p=22803#comment-617433">
			April 10, 2008 at 3:58 am</a>		</div>

		<p>@chrismcb Miquel, did you read what Raymond wrote?</p>
<p>Silly me&#8230; Expanding preprocessor macros if the compiler won&#8217;t really help if the compiler is already telling you that the macro has been undefined. In that case I would just grep for #undef MACRONAME. But the #error directive is really helpful since you&#8217;ll probably discover more subtle problems</p>
<p>But undefined macros are just one kind of macro problems. &nbsp;The macro may have been expanded to some unexpected value. If you know the value the macro has been expanded to, you can easily grep for it in all your project includes and discover the culprit easily.</p>
<p>@steveg how big are your C# projects compared to your C++ projects? (..)</p>
<p>I&#8217;m with you on this one. C++ has a steep learning curve, but as soon one is able to grasp the concepts it&#8217;s actually better for complex problems.</p>
<p>Most of the bad reputation with C++ comes from historically bad programming education and poor compiler support (one only has too look into what the Boost team had to do to achieve some sort of portability between compilers). The fact the standard library doesn&#8217;t include all sorts of stuff developers take for granted nowadays doesn&#8217;t help either&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-617443">
				<div id="div-comment-617443" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Miguel Duarte</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080409-00/?p=22803#comment-617443">
			April 10, 2008 at 4:16 am</a>		</div>

		<p>Replying to myself</p>
<p>&quot;In that case I would just grep for #undef MACRONAME&quot;</p>
<p>This doesn&#8217;t work in the scenario Raymond presented either :-) The macro may have never been defined as far as the compiler is concerned.</p>
<p>Yeah&#8230; the #error directive is really the only way to go. I guess I&#8217;m having caffeine withdrawal symptoms :-)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-617473">
				<div id="div-comment-617473" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">pingpong</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080409-00/?p=22803#comment-617473">
			April 10, 2008 at 7:35 am</a>		</div>

		<p>Regarding C# vs. C++: observe the steady decline in quality of VStudio, directly proportional to amount of managed code in it. VC6 IDE FTW!</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-617483">
				<div id="div-comment-617483" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Curious Observer</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080409-00/?p=22803#comment-617483">
			April 10, 2008 at 9:38 am</a>		</div>

		<p>It&#8217;s declined how? I&#8217;ve been coding in Visual Studio since &#8217;97. The IDE has improved by leaps and bounds IMHO.</p>
<p>Your post reads like the typical &quot;it&#8217;s m$ it&#8217;s junk blah blah&quot;.</p>
<p>I know it sounds like I&#8217;m picking on you, but I&#8217;m not. But for the benefit of the rest of us could you elaborate a little on how manage code has negatively affected the quality of visual studio?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-617493">
				<div id="div-comment-617493" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">name required</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080409-00/?p=22803#comment-617493">
			April 10, 2008 at 10:00 am</a>		</div>

		<blockquote><p>
  (ooh look a function 3km long. With gotos)
</p></blockquote>
<p>If you&#8217;re looking for a new contract I see you have the kind of experience we are looking for&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-617543">
				<div id="div-comment-617543" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">pingpong</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080409-00/?p=22803#comment-617543">
			April 10, 2008 at 10:56 am</a>		</div>

		<p>@Curious: If I&#8217;d be typical &quot;m$ junk blah blah&quot; type I wouldn&#8217;t use VC6 for comparison, would I?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-madq42 odd alt thread-odd thread-alt depth-1" id="comment-617623">
				<div id="div-comment-617623" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/MadQ1' rel='external nofollow' class='url'>MadQ1</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080409-00/?p=22803#comment-617623">
			April 10, 2008 at 12:11 pm</a>		</div>

		<p>@Miral: The only header file I&#8217;m aware of in the Windows SDK that can be included twice in the manner you describe is SchemaDef.h, which is included by tmschema.h (the second pass defines the visual styles strings,) and it&#8217;s obsolete as of Longhorn.</p>
<p>IMO, including header files multiple times with different effects is one of those tricks that&#8217;s just too clever for its own good.</p>
<p>I don&#8217;t recall ever coming across another example in anything I&#8217;ve ever worked on, so for me at least it&#8217;s not much of an issue.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-617653">
				<div id="div-comment-617653" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Curious Observer</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080409-00/?p=22803#comment-617653">
			April 10, 2008 at 12:46 pm</a>		</div>

		<p>@pingpong</p>
<p>Touche&#8217; but you still didn&#8217;t elaborate. I&#8217;m honestly curious. I meant what I said about not picking on your post. How has it declined? Maybe it&#8217;s something you found in features I don&#8217;t use&#8230; who knows? But as a fellow dev these things do spark my interest. So if you could elaborate it would be appreciated, if not I understand.</p>
<p>Curious</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-617823">
				<div id="div-comment-617823" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">pingpong</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080409-00/?p=22803#comment-617823">
			April 10, 2008 at 3:17 pm</a>		</div>

		<p>@Curious: I&#8217;m using VStudio for native C/C++ development. From my point of view, the quality went down &#8211; the IDE feels sluggish, the crashes are more frequent. And don&#8217;t get me started of &#8216;Find in files&#8217; dialog ;)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-617973">
				<div id="div-comment-617973" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Peter</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080409-00/?p=22803#comment-617973">
			April 10, 2008 at 6:21 pm</a>		</div>

		<p>pingpong: I won&#8217;t argue on any of those points. But I&#8217;ll suffer a lot in exchange for the ability to peek inside STL containers in the debugger in VS2005.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-618043">
				<div id="div-comment-618043" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">pingpong</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080409-00/?p=22803#comment-618043">
			April 11, 2008 at 6:40 am</a>		</div>

		<p>@Peter: I admit, the debugger has evolved nicely. What do you think about IntelliSense in VS2005? ;)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-741803">
				<div id="div-comment-741803" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blogs.msdn.com/ruoldnewthing/archive/2009/05/29/error.aspx' rel='external nofollow' class='url'>Блог Рэймонда Чена (перевод)</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080409-00/?p=22803#comment-741803">
			June 3, 2009 at 5:38 pm</a>		</div>

		<p>В ответ на мое описание того, как вы можете использовать директиву #error , чтобы проверить, что компилятор</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

