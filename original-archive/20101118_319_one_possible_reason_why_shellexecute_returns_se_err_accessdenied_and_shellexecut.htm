<html>
<head>
<title>One possible reason why ShellExecute returns SE_ERR_ACCESSDENIED and ShellExecuteEx returns ERROR_ACCESS_DENIED</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>One possible reason why ShellExecute returns SE_ERR_ACCESSDENIED and ShellExecuteEx returns ERROR_ACCESS_DENIED</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>November 18, 2010 / year-entry #320</td></tr>
<tr><td><b>Tags:</b></td><td>code</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20101118-00/?p=12253</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>15</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">(The strangely-phrased subject line is for search engine optimization.) A customer reported that when they called ShellExecute, the function sometimes fails with SE_ERR_ACCESSDENIED, depending on what they are trying to execute. (If they had tried ShellExecuteEx they would have gotten the error ERROR_ACCESS_DENIED.) After a good amount of back-and-forth examing file type registrations, a member...</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>(The strangely-phrased subject line is for search engine optimization.)</p>
<p> A customer reported that when they called <code>ShellExecute</code>, the function sometimes fails with <code>SE_ERR_ACCESSDENIED</code>, depending on what they are trying to execute. (If they had tried <code>ShellExecuteEx</code> <a href="http://blogs.msdn.com/oldnewthing/archive/2004/11/26/270710.aspx#270767"> they would have gotten the error <code>ERROR_ACCESS_DENIED</code></a>.) </p>
<p> After a good amount of back-and-forth examing file type registrations, a member of the development team had psychic insight to ask, "Are you calling it from an MTA?" </p>
<p> "Yes," the customer replied. "ShellExecute is being called from a dedicated MTA thread. Would that cause the failure?" </p>
<p> Why yes, as a matter of fact, and it's called out in the documentation for <code>ShellExecute</code>. </p>
<blockquote class="m"><p> Because <b>ShellExecute</b> can delegate execution to Shell extensions (data sources, context menu handlers, verb implementations) that are activated using Component Object Model (COM), COM should be initialized before <b>ShellExecute</b> is called. Some Shell extensions require the COM single-threaded apartment (STA) type. </p>
</blockquote>
<p> As a general rule, <a href="http://support.microsoft.com/kb/287087"> shell functions require STA</a>. Recall that <a href="http://blogs.msdn.com/oldnewthing/archive/2008/04/24/8420242.aspx"> MTA implies no user interface</a>. If you try to use an apartment-threaded object from your MTA thread, a marshaller is required, and <a href="http://blogs.msdn.com/oldnewthing/archive/2004/12/13/281910.aspx"> if no such marshaller exists, the call fails</a>. </p>
<p> This also explains why the failure occurs only for certain file types: If handling the file type happens not to involve creating a COM object, then the MTA/STA mismatch situation never occurs. </p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (15)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-875163">
				<div id="div-comment-875163" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">John</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101118-00/?p=12253#comment-875163">
			November 18, 2010 at 7:10 am</a>		</div>

		<p>Yep. &nbsp;An error code of &quot;access denied&quot; is OBVIOUSLY related to COM marshalling. &nbsp;Only an idiot couldn&#39;t have figured that out.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-875183">
				<div id="div-comment-875183" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Stuart</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101118-00/?p=12253#comment-875183">
			November 18, 2010 at 7:19 am</a>		</div>

		<p>Would it have made sense to make the ShellExecute function fail aggressively if called from an MTA thread? That way programmers would discover their mistake right away rather than having it fail &quot;apparently randomly&quot; for certain file types, or start failing later if the handler for a particular file type gets changed to require COM in the future.</p>
<p>Obviously I understand that for backward compatibility it&#39;s impossible to change that NOW. Just curious about your opinion on whether or not it would have made sense to define ShellExecute that way when it was first implemented&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-875193">
				<div id="div-comment-875193" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">SI</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101118-00/?p=12253#comment-875193">
			November 18, 2010 at 7:26 am</a>		</div>

		<p>Did MTA&#39;s exist back when ShellExecute was first implemented?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-875203">
				<div id="div-comment-875203" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Yuhong Bao</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101118-00/?p=12253#comment-875203">
			November 18, 2010 at 7:55 am</a>		</div>

		<p>SI: No, in fact it was added after 32-bit COM/OLE2 was originally released with DCOM95 and NT 4.0. For that matter, ShellExecute itself was created before the creation of COM/OLE2, which makes the claim &quot;Because ShellExecute can delegate execution to Shell extensions (data sources, context menu handlers, verb implementations) that are activated using Component Object Model (COM), COM should be initialized before ShellExecute is called. &quot; quite odd.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-875213">
				<div id="div-comment-875213" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101118-00/?p=12253#comment-875213">
			November 18, 2010 at 8:22 am</a>		</div>

		<p>Please tell me that using ShellExecute to spawn an EXE image does not require COM.</p>
<p>If this is not the case than UAC is broken to the point of requiring being completely ripped out.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-875233">
				<div id="div-comment-875233" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">configurator</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101118-00/?p=12253#comment-875233">
			November 18, 2010 at 8:30 am</a>		</div>

		<p>@Joshua: It doesn&#39;t. It requires COM when the execution is delegated to shell extensions (data sources, context menu handlers, verb implementations) that are activated using COM.</p>
<p>What does it have to do with UAC though?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-875243">
				<div id="div-comment-875243" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Pierre B.</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101118-00/?p=12253#comment-875243">
			November 18, 2010 at 8:36 am</a>		</div>

		<p>What I usually take from post of the COM / appartment related posts is that low-level design decisions that seem sane at their level can make things hard when you look at the big picture. Here, all it comes down to, in the end, is the dual facts that windows&#39; handles are thread-specific and that win32 message passing is intimately linked to threads.</p>
<p>Example alternative design would be to have an explicit message port to send and receive, with an implicit default port for backward compatibility. Then multiple thread could share a single source of messages. The Amiga had that model. Well, except the implicit default since it didn&#39;t need backward compatibility. MACH, the left-head of the two-headed MacOSX kernel, is also port-based.</p>
<p>Hindsight is 100%</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-875263">
				<div id="div-comment-875263" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ben Voigt</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101118-00/?p=12253#comment-875263">
			November 18, 2010 at 9:22 am</a>		</div>

		<p>@Pierre: Windows have thread affinity, but window handles are machine-global, across processes and I believe even login sessions.</p>
<p>@Joshua, configurator: On a plain Windows install no COM objects are involved in launching executables, but that can be changed (in the registry). &nbsp;Scenarios where starting programs through ShellExecute use COM typically involve virus infection.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-875273">
				<div id="div-comment-875273" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">blah</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101118-00/?p=12253#comment-875273">
			November 18, 2010 at 9:23 am</a>		</div>

		<p>MTA implies poor service and fare hikes.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-875293">
				<div id="div-comment-875293" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">John</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101118-00/?p=12253#comment-875293">
			November 18, 2010 at 10:27 am</a>		</div>

		<p>@Larry: &nbsp;The documentation makes no mention of specific error codes in regards to COM initialization. &nbsp;Furthermore, how would you tell the difference between &quot;COM is not properly initialized&quot; and &quot;access to the file is denied&quot;? &nbsp;Using the same error code for multiple failures is bad; not being able to differentiate between them is worse. &nbsp;This is just poor API design. &nbsp;If you don&#39;t have COM initialized as STA, calling this function is pretty much a crap-shoot. &nbsp;The documentation more-or-less states as much, but I think it needs to be worded more strongly. &nbsp;That still doesn&#39;t address the problem with the error code, though.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-875373">
				<div id="div-comment-875373" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">W</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101118-00/?p=12253#comment-875373">
			November 18, 2010 at 2:17 pm</a>		</div>

		<p>@Joshua</p>
<p>To spawn an .exe you probably should use CreateProcess instead of ShellExecute. That way it is launched as a PE image regardless of file-extension. ShellExecute is convenient because it allows the opening of documents with the associated program which isn&#39;t necessary for PE images.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-875283">
				<div id="div-comment-875283" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Larry Lard</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101118-00/?p=12253#comment-875283">
			November 18, 2010 at 9:39 am</a>		</div>

		<p>@John that&#39;s not the obviousness. The obviousness is that an error calling ShellExecute suggests (closely) reading **the documentation for ShellExecute**.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-875383">
				<div id="div-comment-875383" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101118-00/?p=12253#comment-875383">
			November 18, 2010 at 6:32 pm</a>		</div>

		<p>If you spawn a process that requires elevation, CreateProcess errors with ERROR_ELEVATION_REQUIRED but ShellExecute will display the password prompt and succeed if permission is granted.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-875593">
				<div id="div-comment-875593" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Pierre B.</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101118-00/?p=12253#comment-875593">
			November 19, 2010 at 10:15 am</a>		</div>

		<p>Ben: yes, sorry, I used the wrong term. The handles have to be globally unique. I meant the window.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-875693">
				<div id="div-comment-875693" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">640k</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101118-00/?p=12253#comment-875693">
			November 22, 2010 at 6:06 am</a>		</div>

		<p>@ Yuhong Bao: No, in fact it was added after 32-bit COM/OLE2 was originally released with DCOM95 and NT 4.0.</p>
<p>ShellExecuteEx doesn&#39;t have to be broken because of ShellExecute is broken.</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

