<html>
<head>
<title>How can I get a signature for a Windows system that will remain unchanged even if the user reinstalls Windows?</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>How can I get a signature for a Windows system that will remain unchanged even if the user reinstalls Windows?</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>January 31, 2018 / year-entry #28</td></tr>
<tr><td><b>Tags:</b></td><td>code</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20180131-00/?p=97945</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>11</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">The SystemIdentification class will give you something.</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>
The
<a HREF="https://docs.microsoft.com/en-us/uwp/api/Windows.System.Profile.SystemIdentification">
<code>System&shy;Identification</code>
runtime class</a>
(introduced in the Windows 10 Anniversary Update)
gives you a signature for a Windows system that
will remain unchanged even if the user reinstalls Windows.
There are some caveats, though.
</p>
<p>
To obtain a value that is consistent across reinstalls of Windows,
the method uses the Trusted Platform Module (TPM),
or if a TPM is not available, the
Unified Extensible Firmware Interface (UEFI).
If neither is available,
then starting in the Fall Creators Update,
the method creates a unique ID and saves it in the registry.
The registry value is preserved across upgrades, but is lost
if the user performs a clean install of Windows.
You can use the <code>Source</code> property to determine how
the signature was generated.
</p>
<p>
The value you receive is specific to the publisher
specified in your application manifest.
If you are a classic Win32 app with no manifest,
then the system will use a generic "publisher"
that is used for all publisher-less apps.
Signatures generated for apps with the same publisher
will match.
Signatures generated for apps with different publishers
will not match.
</p>
<p>
Here's some sample code:
</p>
<pre>
// JavaScript

var buffer = Windows.System.Profile.SystemIdentification.
                                      getSystemIdForPublisher();
var id  = buffer.id;
var asHex = Windows.Security.Cryptography.CryptographicBuffer.
                                      encodeToHexString(id);
var asBase64 = Windows.Security.Cryptography.CryptographicBuffer.
                                      encodeToBase64String(id);

// C#

var buffer = Windows.System.Profile.SystemIdentification.
                                      GetSystemIdForPublisher();
var id = buffer.Id;
var asHex = Windows.Security.Cryptography.CryptographicBuffer.
                                      EncodeToHexString(id);
var asBase64 = Windows.Security.Cryptography.CryptographicBuffer.
                                      EncodeToBase64String(id);

// C++/CX

auto buffer = Windows::System::Profile::SystemIdentification::
                                      GetSystemIdForPublisher();
auto id = buffer-&gt;Id;
auto asHex = Windows::Security::Cryptography::CryptographicBuffer::
                                      EncodeToHexString(id);
auto asBase64 = Windows::Security::Cryptography::CryptographicBuffer.
                                      EncodeToBase64String(id);
// C++/WinRT

auto buffer = Windows::System::Profile::SystemIdentification::
                                      GetSystemIdForPublisher();
auto id = buffer.Id();
auto asHex = Windows::Security::Cryptography::CryptographicBuffer::
                                      EncodeToHexString(id);
auto asBase64 = Windows::Security::Cryptography::CryptographicBuffer.
                                      EncodeToBase64String(id);

// Raw C++ with WRL

using namespace ABI::Windows::Storage::Streams;
using namespace ABI::Windows::System::Profile;
using namespace Microsoft::WRL;
using namespace Microsoft::WRL::Wrappers;

ComPtr&lt;ISystemIdentificationStatics&gt; systemIdStatics;
RoGetActivationFactory(HStringReference(
    RuntimeClass_Windows_System_Profile_SystemIdentification).Get(),
    IID_PPV_ARGS(&amp;systemIdStatics));

ComPtr&lt;ISystemIdentificationInfo&gt; info;
systemIdStatics-&gt;GetSystemIdForPublisher(&amp;info);

ComPtr&lt;IBuffer&gt; id;
info->get_Id(&amp;id);

ComPtr&lt;ICryptographicBufferStatics&gt; cryptoBufferStatics;
RoGetActivationFactory(HStringReference(
    RuntimeClass_Windows_Security_Cryptography_CryptographicBuffer).Get(),
    IID_PPV_ARGS(&amp;cryptoBufferStatics));

HString asHex;
cryptoBufferStatics-&gt;EncodeToHexString(id.Get(),
                                       asHex.GetAddressOf());

HString asBase64;
cryptoBufferStatics-&gt;EncodeToBase64String(id.Get(),
                                          asBase64.GetAddressOf());
</pre>
<p>
If you want to operate with the raw bytes instead of just
encoding them into hex or base64,
you can
<a HREF="https://stackoverflow.com/q/11853838/902497">
use the <code>IBufferByteAccess</code> interface
or the <code>Cryptographic&shy;Buffer.</code><code>Copy&shy;To&shy;Byte&shy;Array</code> method</a>.
</p></p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (12)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1 parent" id="comment-1323265">
				<div id="div-comment-1323265" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Mason Wheeler</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180131-00/?p=97945#comment-1323265">
			January 31, 2018 at 8:40 am</a>		</div>

		<p>You ask how, I ask why.</p>
<p>What is the legitimate use case for this technology?  I can think of plenty of reasons why I&#8217;d love to see something like this if I was writing malware, (or advertising, but I repeat myself,) but no reasons to want to do it that don&#8217;t involve causing problems for the person on whose computer this code is running.</p>

		
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-oldnewthing bypostauthor odd alt depth-2 parent" id="comment-1323397">
				<div id="div-comment-1323397" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Raymond+Chen+-+MSFT' rel='external nofollow' class='url'>Raymond Chen - MSFT</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180131-00/?p=97945#comment-1323397">
			February 1, 2018 at 9:28 am</a>		</div>

		<p>From what I can gather, the intended audience is mobile device management. If the phone gets wiped and then re-enrolls, the enrollment utility can detect this and reuse the provisioning resources.</p>

		
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-bboorman even depth-3" id="comment-1323415">
				<div id="div-comment-1323415" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Brian_EE' rel='external nofollow' class='url'>Brian_EE</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180131-00/?p=97945#comment-1323415">
			February 1, 2018 at 10:49 am</a>		</div>

		<p>Could this also be used for &#8220;Trial-Ware&#8221; where time-limited versions of programs can&#8217;t have the clock reset by reinstalling?</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment odd alt depth-2" id="comment-1323505">
				<div id="div-comment-1323505" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.silverbacknetworks.tech' rel='external nofollow' class='url'>Joshua Bowman</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180131-00/?p=97945#comment-1323505">
			February 1, 2018 at 11:35 pm</a>		</div>

		<p>Licensing. Like it or not, Windows, Quickbooks, Oracle, and so many others pin activation to some magic mix of hardware and software; no one has to use it, but at least Microsoft is providing a transparent API instead of some wholly private one.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment even thread-odd thread-alt depth-1" id="comment-1323305">
				<div id="div-comment-1323305" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180131-00/?p=97945#comment-1323305">
			January 31, 2018 at 2:13 pm</a>		</div>

		<p>Thou has summoned the third rail.</p>
<p>About 20 years ago Intel wanted to put a per-CPU identifier in the processor and the consumer market said NO!</p>
<p>This time it got done silently. Expect in a couple of years a consumer demand at the system level to break this trick.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-even depth-1" id="comment-1323315">
				<div id="div-comment-1323315" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Nik</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180131-00/?p=97945#comment-1323315">
			January 31, 2018 at 3:24 pm</a>		</div>

		<p>How is this different from Intel&#8217;s processor ID that made everyone so angry in the 1990s ?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-odd thread-alt depth-1 parent" id="comment-1323325">
				<div id="div-comment-1323325" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Thiago Macieira</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180131-00/?p=97945#comment-1323325">
			January 31, 2018 at 9:46 pm</a>		</div>

		<p>How does that compare to HKLM\Software\Microsoft\Cryptography\MachineGuid? That has been available for longer</p>

		
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-wndsks odd alt depth-2" id="comment-1323455">
				<div id="div-comment-1323455" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/skSdnW' rel='external nofollow' class='url'>skSdnW</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180131-00/?p=97945#comment-1323455">
			February 1, 2018 at 1:05 pm</a>		</div>

		<p>This is one of two things people call &#8220;the machine guid&#8221; and you can reset this one by deleting the registry value (you will probably loose the ability to decrypt certain secrets already stored on the machine by crypto stuff). It might also be the same value on different machines when a machine is cloned etc.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1 parent" id="comment-1323335">
				<div id="div-comment-1323335" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">SomeGuyOnTheInternet</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180131-00/?p=97945#comment-1323335">
			January 31, 2018 at 10:39 pm</a>		</div>

		<p>What would be the implications if the identifier was the same for all publishers, rather than being publisher-specific?</p>

		
				</div>
		<ol class="children">
		<li class="comment odd alt depth-2" id="comment-1324205">
				<div id="div-comment-1324205" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">JDG</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180131-00/?p=97945#comment-1324205">
			February 6, 2018 at 3:16 pm</a>		</div>

		<p>The code libraries published by advertisers for inclusion in sundry applications would be able to positively identify when different instances in different apps were in fact running on the same device. That in turn would allow the advertiser to aggregate information across uses and interests spanning different apps by different publishers, which by many is seen as a violation of  individuals&#8217; expectations of privacy.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment even thread-odd thread-alt depth-1" id="comment-1323355">
				<div id="div-comment-1323355" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Jeroen</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180131-00/?p=97945#comment-1323355">
			February 1, 2018 at 1:18 am</a>		</div>

		<p>I can sort of see the argument, Real Men Use Raw C++</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-even depth-1" id="comment-1323365">
				<div id="div-comment-1323365" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">hyperman</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180131-00/?p=97945#comment-1323365">
			February 1, 2018 at 2:29 am</a>		</div>

		<p>The times they are a-changing.  I remember when the Pentium CPU introduced a serial number to identify customers at the end of the nineties.  A huge backlash caused Intel to disable it.  20 years later, no one seems to care.</p>
<p>Anyway, <a href="https://en.wikipedia.org/wiki/Pentium_III#Controversy_about_privacy_issues" rel="nofollow">https://en.wikipedia.org/wiki/Pentium_III#Controversy_about_privacy_issues</a> if you want to know more</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

