<html>
<head>
<title>Why can't I GetProcAddress a function I dllexport'ed?</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>Why can&#8217;t I GetProcAddress a function I dllexport&#8217;ed?</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>January 12, 2004 / year-entry #14</td></tr>
<tr><td><b>Tags:</b></td><td>code</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20040112-00/?p=41083</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>17</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">The dllexport attribute tells the linker to generate an export table entry for the specified function. This export entry is decorated. This is necessary to support dllexporting of overloaded functions. But it also means that the string you pass to GetProcAddress needs to be decorated. As we learned earlier, the decoration scheme varies from architecture...</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p><a href="http://msdn.microsoft.com/library/en-us/vccelng/htm/msmod_20.asp"> The dllexport attribute tells the linker to generate an export table entry for the specified function.  This export entry is <b>decorated</b>. This is necessary to support <code>dllexport</code>ing of overloaded functions. But it also means that the string you pass to <code>GetProcAddress</code> needs to be decorated.</p>
<p><a href="http://weblogs.asp.net/oldnewthing/archive/2004/01/07/48303.aspx"> As we learned earlier</a>, the decoration scheme varies from architecture to architecture and from calling convention to calling convention. So, for example, if the function is exported from a PPC DLL, you would have to do <code>GetProcAddress(hinst, "..SomeFunction")</code>, but if it is exported from an 80386 DLL as extern "C" __stdcall, you would need <code>GetProcAddress(hinst, "_SomeFunction@8")</code>, but if it's __fastcall you would need <code>GetProcAddress(hinst, "@SomeFunction@8")</code>.</p>
<p>What's more, C++ decoration varies from compiler vendor to compiler vendor. A C++ exported function might require <code>GetProcAddress(hinst, "?SomeFunction@@YGXHH@Z")</code> if compiled with the Microsoft C++ compiler, but some other decorated string if compiled with the Borland C++ compiler.</p>
<p>So if you intend people to be able to <code>GetProcAddress</code> for functions and you intend your code to be portable to multiple platforms, or if you intend them  to be able to use your DLL from a language other than C/C++ or use a C++ compiler different from Microsoft Visual Studio, then you must export the function by its undecorated name.</p>
<p>When a DLL is generated, the linker produces a matching LIB file which translates the decorated names to undecorated names. So, for example, the LIB file has an entry that says, "If somebody asks for the function _GetTickCount@0, send them to kernel32!GetTickCount."</p>
<p> Exercise: If <code>dllexport</code> ties you to an architecture, compiler, and language (by exporting decorated names), then why does MSVCRT.DLL use it? </p>
<p></a></p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (17)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-135523">
				<div id="div-comment-135523" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Doug</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040112-00/?p=41083#comment-135523">
			January 12, 2004 at 8:07 am</a>		</div>

		<p>Re: Exercise: If dllexport ties you to an architecture, compiler, and language (by exporting decorated names), then why does MSVCRT.DLL use it?</p>
<p>Because a C runtime library is tied to an CPU, compiler and language.  You tend to use a CRT for the development setup which it was intended.  Doesn&#8217;t Borland provide their own CRT?</p>
<p>If you intend for a function to be used as an API, you need to take care of the calling convention.</p>
<p>I had to import a function from a DLL that was exported using an IBM only calling convention, and I was using the Borland compiler. (On OS2.)  Was, umm, interesting to work around.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-135563">
				<div id="div-comment-135563" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">anon</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040112-00/?p=41083#comment-135563">
			January 12, 2004 at 8:52 am</a>		</div>

		<p>What&#8217;s the best way to export a function usings its undecorated name? &#8230; maybe .def files?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-135573">
				<div id="div-comment-135573" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://weblogs.asp.net/oldnewthing/' rel='external nofollow' class='url'>Raymond Chen</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040112-00/?p=41083#comment-135573">
			January 12, 2004 at 8:54 am</a>		</div>

		<p>Yes, in order to export undecorated, you need a DEF file.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-135583">
				<div id="div-comment-135583" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">KiwiBlue</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040112-00/?p=41083#comment-135583">
			January 12, 2004 at 11:17 am</a>		</div>

		<p>I&#8217;m usually exporting like this:</p>
<p>extern &quot;C&quot; __declspec(dllexport)<br />
<br />Foo* __cdecl GetFoo()</p>
<p>AFAIR, it has to be both extern &quot;C&quot; and __cdecl to avoid name mangling.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-135643">
				<div id="div-comment-135643" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">asdf</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040112-00/?p=41083#comment-135643">
			January 12, 2004 at 2:39 pm</a>		</div>

		<p><a target="_new" href="http://www.mingw.org" rel="nofollow">http://www.mingw.org</a> (basically, gcc for windows) can use msvcrt.dll. There are only a handful of C++ decorated stuff exported from it, every function from the C side is nicely named.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-135703">
				<div id="div-comment-135703" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.digitalfanatics.org' rel='external nofollow' class='url'>e8johan</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040112-00/?p=41083#comment-135703">
			January 12, 2004 at 11:33 pm</a>		</div>

		<p>Is the decoration themes the only thing that separates the different compilers (when it comes to binary compatibility, otherwise there are tons of differences, I know)? In that case, why not make it possible, to tell from what compiler an imported lib comes from and thus get it to work?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-135733">
				<div id="div-comment-135733" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Florian</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040112-00/?p=41083#comment-135733">
			January 13, 2004 at 7:13 am</a>		</div>

		<p>No, different compilers do also use a different format for the virtual function table and put it in different places.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-136203">
				<div id="div-comment-136203" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">BTannenbaum</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040112-00/?p=41083#comment-136203">
			January 14, 2004 at 1:29 pm</a>		</div>

		<p>For those who don&#8217;t want yet another file to keep current, you can use a #pragma to generate a linker directive:</p>
<p>// Linker directive to export MyExportedFunction, and in its completely<br />
<br />// undecorated form<br />
<br />#if defined(_WIN64)<br />
<br />#pragma comment(linker, &quot;/EXPORT:MyExportedFunction&quot;)<br />
<br />#else<br />
<br />#pragma comment(linker, &quot;/EXPORT:MyExportedFunction=_MyExportedFunction@4&quot;)<br />
<br />#endif</p>
<p>extern &quot;C&quot;<br />
<br />bool __stdcall MyExportedFunction (int i)<br />
<br />{<br />
<br />     :<br />
<br />}</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-136213">
				<div id="div-comment-136213" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://weblogs.asp.net/oldnewthing/' rel='external nofollow' class='url'>Raymond Chen</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040112-00/?p=41083#comment-136213">
			January 14, 2004 at 1:55 pm</a>		</div>

		<p>Of course as support for new architectures gets added you&#8217;ll have to keep tweaking your #pragma. A DEF file doesn&#8217;t have this problem, plus I like having all my exports in one place &#8211; makes it obvious where the interop points are for the DLL.</p>
<p>(Note also that you probably should use &quot;BOOL&quot; instead of &quot;bool&quot; since &quot;bool&quot; is a C++-specific type.)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-149273">
				<div id="div-comment-149273" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Scott Rogers</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040112-00/?p=41083#comment-149273">
			March 2, 2004 at 5:35 pm</a>		</div>

		<p>Can you show me an example of a DEF file using an   undecorated name?</p>
<p>I have:<br />
<br />&gt;&gt;&gt; BEGIN DEF FILE &lt;&lt;&lt;<br />
<br />LIBRARY engine1<br />
<br />EXPORTS<br />
<br />enginecommand _enginecommand@8<br />
<br />&gt;&gt;&gt; END DEF FILE &lt;&lt;&lt;<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-149293">
				<div id="div-comment-149293" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://weblogs.asp.net/oldnewthing/' rel='external nofollow' class='url'>Raymond Chen</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040112-00/?p=41083#comment-149293">
			March 2, 2004 at 5:49 pm</a>		</div>

		<p>LIBRARY engine1<br />
<br />EXPORTS<br />
<br />  enginecommand</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-149323">
				<div id="div-comment-149323" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Scott Rogers</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040112-00/?p=41083#comment-149323">
			March 2, 2004 at 6:05 pm</a>		</div>

		<p>That is too simple :) </p>
<p>Thanks for the help!</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-153813">
				<div id="div-comment-153813" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">agraeper</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040112-00/?p=41083#comment-153813">
			March 12, 2004 at 4:34 am</a>		</div>

		<p>When i use explicit binding, can i still use a .def file? The only alternative but the #pragma workaround seems to be the use of ordinal numbers for the import, correct?<br />
<br />regards, arne</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-153843">
				<div id="div-comment-153843" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://weblogs.asp.net/oldnewthing' rel='external nofollow' class='url'>Raymond Chen</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040112-00/?p=41083#comment-153843">
			March 12, 2004 at 7:00 am</a>		</div>

		<p>Not sure what you mean by &quot;explicit binding&quot;. Do you mean manually using GetProcAddress? In that case, then sure you can use a DEF file. In fact, you probably *want* to use a DEF file in order to avoid the decoration.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-190573">
				<div id="div-comment-190573" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://weblogs.asp.net/oldnewthing/' rel='external nofollow' class='url'>Raymond Chen</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040112-00/?p=41083#comment-190573">
			July 5, 2004 at 8:57 am</a>		</div>

		<p>Commenting on this entry has been closed.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-400873">
				<div id="div-comment-400873" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blogs.msdn.com/oldnewthing/archive/2006/07/14/665669.aspx' rel='external nofollow' class='url'>The Old New Thing</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040112-00/?p=41083#comment-400873">
			July 14, 2006 at 10:00 am</a>		</div>

		<p>Two tables.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-666993">
				<div id="div-comment-666993" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://msmvps.com/blogs/vandooren/archive/2008/09/12/how-dll-exports-really-work.aspx' rel='external nofollow' class='url'>Cluebat-man to the rescue</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040112-00/?p=41083#comment-666993">
			September 12, 2008 at 6:51 am</a>		</div>

		<p>I found this list of article on Raymond&amp;#39;s blog . Raymond&amp;#39;s blog is one of the more interesting</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

