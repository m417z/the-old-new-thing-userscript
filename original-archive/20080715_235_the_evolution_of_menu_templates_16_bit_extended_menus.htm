<html>
<head>
<title>The evolution of menu templates: 16-bit extended menus</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>The evolution of menu templates: 16-bit extended menus</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>July 15, 2008 / year-entry #236</td></tr>
<tr><td><b>Tags:</b></td><td>history</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20080715-00/?p=21613</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>12</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">Windows 95 introduced a new menu format, known as "extended menus". You declare these in a resource file with the MENUEX keyword. The 16-bit extended menu is really just a temporary stopping point on the way to the 32-bit extended menu, since the 16-bit form is supported only by the Windows 95 family of operating systems. It's...</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>
Windows&nbsp;95 introduced a new menu format,
known as "extended menus".
You declare these in a resource file with the <code>MENUEX</code> keyword.
The 16-bit extended menu is really just a temporary stopping point
on the way to the 32-bit extended menu,
since the 16-bit form is
supported only by the Windows&nbsp;95 family of operating
systems.
It's sort of the missing link of menu templates.
</p>
<p>
Things start off the same as
<a HREF="http://blogs.msdn.com/oldnewthing/archive/2008/07/09/8711897.aspx">
the 16-bit classic menu</a>,
with a structure I've been calling <code>MENUHEADER16</code>:
</p>
<pre>
struct MENUHEADER16 {
 WORD wVersion;
 WORD cbHeaderSize;
 BYTE rgbExtra[cbHeaderSize-4];
};
</pre>
<p>
The version number for extended menus is one instead of zero,
and the <code>cbHeaderSize</code> now includes the size of the
<code>wVersion</code> and <code>cbHeaderSize</code> fields in
the header size count; therefore, the number of interstitial bytes
four less than the value specified by the <code>cbHeaderSize</code> member.
</p>
<p>
Due to a bug in Windows&nbsp;95 (and its descendants),
the <code>cbHeaderSize</code> is ignored, and its value is assumed
to be four.
Fortunately, every version of the 16-bit resource compiler that
supports 16-bit extended menu templates sets the <code>cbHeaderSize</code>
to four.
Consequently, nothing goes wrong in practice.
And I suspect nobody has noticed this bug in the over fifteen years
(not twenty-five
<a HREF="http://blogs.msdn.com/oldnewthing/archive/2008/07/15/8732375.aspx#8733629">
as I had originally written</a>)
the code has been in existence.
</p>
<p>
Unlike the classic menu, there is a prefix structure that
comes before the list of menu items.
</p>
<pre>
struct MENUPREFIX16 {
 DWORD dwContextHelpID;
};
</pre>
<p>
New to extended menus is the addition of context help&nbsp;IDs.
These values can be set and retrieved
programmatically with the
<code>GetMenuContextHelpId</code> and
<code>SetMenuContextHelpId</code> functions.
</p>
<p>
The template then continues with a packed array of structures
I will call <code>MENUITEMEX16</code>:
</p>
<pre>
struct MENUITEMEX16 {
 DWORD dwType;
 DWORD dwState;
 WORD  wID;
 BYTE  bFlags;
 CHAR  szText[]; // null terminated ANSI string
};
</pre>
<p>
Whereas the members of the classic <code>MENUITEM16</code>
were designed to be passed to the function
<code>InsertMenu</code>,
the members of the extended <code>MENUITEMEX16</code> were
designed to be passed to the function
<code>InsertMenuItem</code>.
The <code>dwType</code>, <code>dwState</code>, and
<code>wID</code> members correspond to
the <code>fType</code>, <code>fState</code>, and
<code>wID</code>
members of the 16-bit <code>MENUITEMINFO</code> structure.
Similarly, the <code>szText</code> goes into the
<code>dwItemData</code> if the item requires a string.
(If the item doesn't require a string, then the
<code>szText</code> should be an empty string; i.e.,
should consist solely of the null terminator.)
</p>
<p>
Notice that a new feature of extended menus is that pop-up menus
can have IDs as well as normal menu items.
</p>
<p>
The <code>bFlags</code> describes other information about the
menu item,
information that in the classic menu was hidden in spare bits
in the <code>wFlags</code>.
But here, the <code>bFlags</code> is where this information is kept.
The following flags are currently defined:
</p>
<table BORDER=0>
<tr>
<td><code>0x01</code></td>
<td>This item is a pop-up submenu</td>
</tr>
<tr>
<td><code>0x80</code></td>
<td>This item is the last item in the menu</td>
</tr>
</table>
<p>
If indeed the bottom bit is set, then after the <code>MENUITEMEX16</code>
comes a description of the submenu, recursively.
(Note that the submenu does not have
a <code>MENUHEADER16</code>.)
</p>
<p>
As before, we'll illustrate this format with an example.
</p>
<pre>
1 MENUEX 1000
BEGIN
  POPUP "&amp;File", 200,,, 1001
  BEGIN
    MENUITEM "&amp;Open\tCtrl+O", 100
    MENUITEM "", -1, MFT_SEPARATOR
    MENUITEM "&amp;Exit\tAlt+X",  101
  END
  POPUP "&amp;View", 201,,, 1002
  BEGIN
    MENUITEM "&amp;Status Bar", 102,, MFS_CHECKED
  END
END
</pre>
<p>
The resulting 16-bit extended menu template begins with the header:
</p>
<pre>
0000  01 00          // wVersion = 1
0002  04 00          // cbHeaderSize = 4
</pre>
<p>
Since this is the start of a menu, we get a context help ID:
</p>
<pre>
0004  E8 03 00 00    // dwContextHelpID = 1000
</pre>
<p>
After the context help ID come the menu items.
Our first is a pop-up submenu,
so the <code>bFlags</code> indicates that a submenu is coming:
</p>
<pre>
0008  00 00 00 00    // dwType = MFT_STRING
000C  00 00 00 00    // dwState = 0
0010  C8 00          // wID = 200
0012  01             // bFlags = "pop-up submenu"
0013  26 46 69 6C 65 00 // "&amp;File" + null terminator
</pre>
<p>
Since we have a pop-up submenu, we recursively include
a template for that submenu directly after the menu item template.
Consequently, we begin with the context help&nbsp;ID:
</p>
<pre>
0019  E9 03 00 00    // dwContextHelpID = 1001
</pre>
<p>
And then the contents of the submenu:
</p>
<pre>
001D  00 00 00 00    // dwType = MFT_STRING
0021  00 00 00 00    // dwState = 0
0025  64 00          // wID = 100
0027  00             // bFlags = 0
0028  26 4F 70 65 6E 09 43 74 72 6C 2B 4F 00
                     // "&amp;Open\tCtrl+O" + null terminator

0035  00 08 00 00     // dwType = MFT_SEPARATOR
0039  00 00 00 00     // dwState = 0
003D  FF FF           // wID = -1
003F  00              // bFlags = 0
0040  00              // ""

0041  00 00 00 00     // dwType = MFT_STRING
0045  00 00 00 00     // dwState = 0
0049  65 00           // wID = 101
004B  80              // bFlags = "this is the last menu item"
004C  26 45 78 69 74 09 41 6C 74 2B 58 00
                     // "&amp;Exit\tAlt+X" + null terminator
</pre>
<p>
When we reach the end of the pop-up submenu, we 
pop up a level.
Therefore, the next entries describe more top-level menu items.
</p>
<pre>
0058  00 00 00 00     // dwType = MFT_STRING
005C  00 00 00 00     // dwState = 0
0060  C9 00           // wID = 201
0062  81              // bFlags = "pop-up submenu" |
                      //          "this is the last menu item"
0063  26 56 69 65 77 00 // "&amp;View" + null terminator
</pre>
<p>
Ah, no sooner do we pop up than we push back down with
another submenu.
And the "last menu item" flag is set,
which means that once the submenu is finished,
we are done with the extended menu template.
</p>
<pre>
0069  EA 03 00 00    // dwContextHelpID = 1002

006D  00 00 00 00    // dwType = MFT_STRING
0071  08 00 00 00    // dwState = MFS_CHECKED
0075  66 00          // wID = 102
0077  80             // bFlags = "this is the last menu item"
0078  26 53 74 61 74 75 73 20 42 61 72 00
                     // "&amp;Status Bar" + null terminator
</pre>
<p>
After the context help ID, we have the sole menu item for
this pop-up submenu, so the first item is also the last item.
</p>
<p>
Next time, we'll wrap up by looking at the final menu template format,
the 32-bit extended menu.
I bet you all can't wait.</p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (12)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-646753">
				<div id="div-comment-646753" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Yuhong Bao</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080715-00/?p=21613#comment-646753">
			July 15, 2008 at 10:09 am</a>		</div>

		<p>In fact, this is the reason why 16-bit extended templates exist in the first place:</p>
<p><a rel="nofollow" target="_new" href="http://blogs.msdn.com/oldnewthing/archive/2008/07/08/8705314.aspx#8709887" rel="nofollow">http://blogs.msdn.com/oldnewthing/archive/2008/07/08/8705314.aspx#8709887</a></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-646763">
				<div id="div-comment-646763" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Medinoc</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080715-00/?p=21613#comment-646763">
			July 15, 2008 at 11:12 am</a>		</div>

		<p>I beg your pardon, but there is an inconsistency:</p>
<p>The field named &#8220;dwType&#8221; in the structure declaration is called &#8220;dwFlags&#8221; in the hex dump&#8230;</p>
<div class="post">[<i>Oops, fixed. Thanks. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-646773">
				<div id="div-comment-646773" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Don't like to pick...</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080715-00/?p=21613#comment-646773">
			July 15, 2008 at 11:37 am</a>		</div>

		<p>&#8230;but do you really mean twenty-five years?</p>
<div class="post">[<i>Oops. can&#8217;t do math. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-maurits odd alt thread-odd thread-alt depth-1" id="comment-646823">
				<div id="div-comment-646823" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Maurits+%5BMSFT%5D' rel='external nofollow' class='url'>Maurits [MSFT]</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080715-00/?p=21613#comment-646823">
			July 15, 2008 at 2:10 pm</a>		</div>

		<p>I would be tremendously indebted to you if I could convince you to change your &quot;Exit&quot; entry to:</p>
<p>004C &nbsp;45 26 78 69 74 09 41 6C 74 2B 58 00 // &quot;E&amp;xittAlt+X&quot; + null terminator</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-maurits even thread-even depth-1" id="comment-646833">
				<div id="div-comment-646833" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Maurits+%5BMSFT%5D' rel='external nofollow' class='url'>Maurits [MSFT]</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080715-00/?p=21613#comment-646833">
			July 15, 2008 at 2:24 pm</a>		</div>

		<p>Or better still:</p>
<p>004C &nbsp;45 26 78 69 74 09 41 6C 74 2B 46 34 00 // &quot;E&amp;xittAlt+F4&quot; + null terminator</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-646863">
				<div id="div-comment-646863" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joe</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080715-00/?p=21613#comment-646863">
			July 15, 2008 at 4:54 pm</a>		</div>

		<p>I always wished the popup menus had an ID for the purpose of dynamically modifying a menu (e.g. adding an MRU list to the File menu). &nbsp;Without the ID you have to do a string compare on the label which doesn&#8217;t hold up to translations and customizations.</p>
<p>Too bad the VS resource editor doesn&#8217;t support IDs for popup menus. &nbsp;The Visual Studio 2008 menu editor shows the ID property with a grayed out &#8220;ID cannot be edited&#8221; message. &nbsp;If I manually set the id in the rc file it gets overwritten with 65535 the next time the file is saved by the visual menu editor.</p>
<p>Hopefully the VS team will add support for this along with allowing toolbars with 256 color images.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-646903">
				<div id="div-comment-646903" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">steveg</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080715-00/?p=21613#comment-646903">
			July 15, 2008 at 7:57 pm</a>		</div>

		<p>Context Help IDs? They&#8217;re cool, but not exactly a new feature, more a convenience thing. In 3.x you could achieve (mostly) the same thing by tracking if the menus were open (WM_ENTERMENULOOP + WM_EXITMENULOOP, undocumented at the time, IIRC) in a global variable, and as each menu item was highlighted track the current menu ID in a different ID, and then use them when F1 was pressed.</p>
<p>Well, that&#8217;s what I remember anyway, I don&#8217;t have the code lying around at work.</p>
<p>Well-behaved apps of the day (well for a time, anyway) would also put help text in the status bar as each item was selected which was a dumb idea even when 640&#215;480 was an astonishingly high resolution &#8212; except for one app, I forget which, put the menu help text in the title bar. Genius. Ugly, but genius. Tooltips saved the day.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-646953">
				<div id="div-comment-646953" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blog.koroirc.com/' rel='external nofollow' class='url'>Koro</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080715-00/?p=21613#comment-646953">
			July 16, 2008 at 12:22 am</a>		</div>

		<p>steveg: I&#8217;ve seen this app. I think it was WordPerfect, or failing that, Lotus 1-2-3.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-646973">
				<div id="div-comment-646973" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Worf</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080715-00/?p=21613#comment-646973">
			July 16, 2008 at 2:01 am</a>		</div>

		<p>Maybe the ID for the popup menu allows one to pop up something if the popup itself is chosen rather than the submenu item?</p>
<p>E.g., you can have Windows show Control Panels in a submenu to open individual control panels, or just click on Control Panels to see the normal window with all of &#8217;em</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-646983">
				<div id="div-comment-646983" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Neil</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080715-00/?p=21613#comment-646983">
			July 16, 2008 at 4:41 am</a>		</div>

		<p>The versions of the NetWare Administrator that I have do this, although they paint the text themselves which was a minor problem when only 16-bit versions were available, as they only assumed the presence of two window controls. (I haven&#8217;t tried the latest versions to see how well or otherwise they cope with Vista.)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-646993">
				<div id="div-comment-646993" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Medinoc</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080715-00/?p=21613#comment-646993">
			July 16, 2008 at 4:59 am</a>		</div>

		<p>So, SB_SIMPLE + SB_SETTEXT(SB_SIMPLEID) for menu help are no longer welcome ?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-647013">
				<div id="div-comment-647013" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">steveg</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080715-00/?p=21613#comment-647013">
			July 16, 2008 at 11:52 am</a>		</div>

		<p>Apparently I made up the WM_ENTERMENULOOP thing above, I can&#8217;t find them in the source code in app I was thinking of (I know I used the WM_*LOOP items somewhere). Instead good old WM_MENUSELECT was where the status bar action happened.</p>
<pre class="brush: plain; title: ; notranslate" title="">

case WM_MENUSELECT:

if (lParam == 0)

&lt;pre&gt;&lt;code&gt;dwCurrentHelpId = ID_NONE;
&lt;/code&gt;&lt;/pre&gt;

else if (HIWORD(wParam) &amp;amp; MF_POPUP)

{

}

else

&lt;pre&gt;&lt;code&gt;dwCurrentHelpId = LOWORD(wParam);
&lt;/code&gt;&lt;/pre&gt;

if (!(HIWORD(wParam) &amp;amp; MF_SEPARATOR) &amp;amp;&amp;amp; !(HIWORD(wParam) &amp;amp; MF_POPUP))

{

&lt;pre&gt;&lt;code&gt;LoadString(hInst, LOWORD(wParam), (LPSTR) szBuf, 80);

g_theBumBar.SetText(0, (LPSTR) szBuf);

}
&lt;/code&gt;&lt;/pre&gt;

return(0L);

</pre>
<p>(the SetText call is when we ported to 32 bit and sporadic C++. The custom status bar (BumBar) was replaced with the commdlg status bar)).</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

