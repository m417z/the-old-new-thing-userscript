<html>
<head>
<title>How do I disable Windows 8 touch contact visualizations for my application?</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>How do I disable Windows 8 touch contact visualizations for my application?</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>October 22, 2014 / year-entry #250</td></tr>
<tr><td><b>Tags:</b></td><td>code</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20141022-00/?p=43793</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>13</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">You might have an application (like a game) where the default touch contact visualizations are a distraction. In WinRT, you can disable the contact visualizations by simply saying // JavaScript Windows.UI.Input.PointerVisualizationSettings. getForCurrentView(). isContactFeedbackEnabled = false; // C# Windows.UI.Input.PointerVisualizationSettings. GetForCurrentView(). IsContactFeedbackEnabled = false; // C++ Windows::UI::Input::PointerVisualizationSettings:: GetForCurrentView()-> IsContactFeedbackEnabled = false; In Win32, you use the Set­Window­Feedback­Setting...</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>
You might have an application (like a game) where the default
touch contact visualizations are a distraction.
In WinRT, you can disable the contact visualizations by simply saying
</p>
<pre>
// JavaScript
Windows.UI.Input.PointerVisualizationSettings.
    getForCurrentView().
    isContactFeedbackEnabled = false;

// C#
Windows.UI.Input.PointerVisualizationSettings.
    GetForCurrentView().
    IsContactFeedbackEnabled = false;

// C++
Windows::UI::Input::PointerVisualizationSettings::
    GetForCurrentView()-&gt;
    IsContactFeedbackEnabled = false;
</pre>
<p>
In Win32, you use the
<code>Set&shy;Window&shy;Feedback&shy;Setting</code> function.
To demonstrate that, let's take our
<a HREF="http://blogs.msdn.com/b/oldnewthing/archive/2003/07/23/54576.aspx">
scratch program</a>
and make
this simple change:
</p>
<pre>
BOOL
OnCreate(HWND hwnd, LPCREATESTRUCT lpcs)
{
 <font COLOR=blue>BOOL fEnabled = FALSE;
 SetWindowFeedbackSetting(hwnd,
    FEEDBACK_TOUCH_CONTACTVISUALIZATION,
    0, sizeof(fEnabled), &amp;fEnabled);</font>
 return TRUE;
}
</pre>
<p>
The touch visualizations are white and the default
window color is white, so the visualizations are hard to see
in the scratch program.
Let's change the color to something that the visualizations will
be more visible against.
</p>
<pre>
    wc.hbrBackground = (HBRUSH)(COLOR_WINDOW<font COLOR=blue>TEXT</font> <a HREF="http://blogs.msdn.com/b/oldnewthing/archive/2014/03/05/10505179.aspx">+ 1</a>);
</pre>
<p>
Run the program, and you'll see that if you touch the window
and drag your finger around,
there is no little white circle
and no white streak that follows your finger.
(Note, however, that the
<i>Optimize visual feedback for projection to an external monitor</i>,
setting overrides the
<code>FEEDBACK_<wbr>TOUCH_<wbr>CONTACT&shy;VISUALIZATION</code> setting,
so if you have projection contacts enabled, then you still get the
dark circles.
Another way to get dark circles is to stay up late and not get enough
sleep.)
</p>
<p>
Although we disabled contact visualizations,
we still get visualizations for gestures like tap
or tap-and-hold.
We can turn those off, too:
</p>
<pre>
BOOL
OnCreate(HWND hwnd, LPCREATESTRUCT lpcs)
{
 BOOL fEnabled = FALSE;
 SetWindowFeedbackSetting(hwnd,
    FEEDBACK_TOUCH_CONTACTVISUALIZATION,
    0, sizeof(fEnabled), &amp;fEnabled);
 <font COLOR=blue>SetWindowFeedbackSetting(hwnd,
    FEEDBACK_TOUCH_TAP,
    0, sizeof(fEnabled), &amp;fEnabled);
 SetWindowFeedbackSetting(hwnd,
    FEEDBACK_TOUCH_DOUBLETAP,
    0, sizeof(fEnabled), &amp;fEnabled);
 SetWindowFeedbackSetting(hwnd,
    FEEDBACK_TOUCH_PRESSANDHOLD,
    0, sizeof(fEnabled), &amp;fEnabled);
 SetWindowFeedbackSetting(hwnd,
    FEEDBACK_TOUCH_RIGHTTAP,
    0, sizeof(fEnabled), &amp;fEnabled);</font>
 return TRUE;
}
</pre>
<p>
The complete list of things you can disable is given
by
<a HREF="http://msdn.microsoft.com/library/hh707350.aspx">
the
<code>FEEDBACK_<wbr>TYPE</code> enumeration</a>.</p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (13)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-1156883">
				<div id="div-comment-1156883" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20141022-00/?p=43793#comment-1156883">
			October 22, 2014 at 7:04 am</a>		</div>

		<p>My first thought was &quot;by being a command line application&quot;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1156923">
				<div id="div-comment-1156923" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Danny</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20141022-00/?p=43793#comment-1156923">
			October 22, 2014 at 9:56 am</a>		</div>

		<p>&quot;How do I disable Windows 8&quot;. as in period.</p>
<p>That&#39;s the perfect answer.</p>
<div class="post">[<em>Okay, so let&#39;s put it a different way. &quot;You have been forced against your will to write a program that runs on Windows 8. How do you&#8230;&quot; -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-tautvydas-zilys even thread-even depth-1" id="comment-1156933">
				<div id="div-comment-1156933" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Tautvydas+Zilys' rel='external nofollow' class='url'>Tautvydas Zilys</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20141022-00/?p=43793#comment-1156933">
			October 22, 2014 at 10:52 am</a>		</div>

		<p>Is there a reason why two separate APIs exist, and neither can be used on both WinRT and Desktop applications? Our product supports many platforms, including Windows Phone, Windows Store Apps and Windows Desktop. It&#39;s somewhat annoying that we have to write the same functionality multiple times for similar platforms. In some cases, those WinRT APIs end up individually calling the underlying method anyway, but god forbid we do it ourselves, or our application will fail WACK. And it seems like it has already become a habit &#8211; I&#39;m not sure what&#39;s the point of forbidding the use of code that has been written many years ago, works perfectly well, and instead forcing to use the &quot;new&quot; API, which implements the same thing the same way!</p>
<p>In this case, setting Windows::UI::Input::PointerVisualizationSettings::GetForCurrentView()-&gt;IsContactFeedbackEnabled eventually calls _NtUserSetWindowFeedbackSetting, and SetWindowFeedbackSetting looks to be an alias (or redirection?) to _NtUserSetWindowFeedbackSetting as well.</p>
<div class="post">[<em>_NtUserSetWindowFeedbackSetting doesn&#39;t exist on Phone. That&#39;s why there is a WinRT wrapper that redirects the call to the correct underlying OS primitive. -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-davebacher odd alt thread-odd thread-alt depth-1" id="comment-1156953">
				<div id="div-comment-1156953" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Dave+Bacher' rel='external nofollow' class='url'>Dave Bacher</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20141022-00/?p=43793#comment-1156953">
			October 22, 2014 at 12:13 pm</a>		</div>

		<p>@Tautvydas:</p>
<p>That&#39;s crazy talk. &nbsp;The next thing you&#39;ll be saying that there shouldn&#39;t be two separate touch keyboards, two separate ways of adding a wifi access point, two different (and neither complete) ways of adding devices, that there should be just one interface for Windows Update, etc. &nbsp;If the two libraries ever cross each other, the universe ends in a giant blinding blue screen &#8212; it&#39;s UNIVERSE_ENDED_WINRT_TOUCHED_WIN64.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-tautvydas-zilys even thread-even depth-1" id="comment-1156983">
				<div id="div-comment-1156983" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Tautvydas+Zilys' rel='external nofollow' class='url'>Tautvydas Zilys</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20141022-00/?p=43793#comment-1156983">
			October 22, 2014 at 12:54 pm</a>		</div>

		<p>@Raymond: on phone, setting IsContactFeedbackEnabled throws an exception: &nbsp;&quot;The specified procedure could not be found.&quot;. Digging deeper suggests that the error happens when it dynamically tries to find a procedure in ntdll.dll. I couldn&#39;t find out whether it was _NtUserSetWindowFeedbackSetting that it was looking for. So I don&#39;t buy that was the reason :). More probably, since you can&#39;t get yours hands on HWND manually on WinRT apps, the win32 API would be useless, however, that doesn&#39;t explain situations why it&#39;s forbidden to call win32 APIs when it&#39;s perfectly valid.</p>
<p>@Dave: I think I was misunderstood. I&#39;m not complaining that there are two different ways of doing something. I just think that it&#39;s a bit silly to not allow calling certain functions when they are there and instead invent new APIs that wrap them. Why not allow them, even if the wrapper exists?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1156993">
				<div id="div-comment-1156993" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Myria</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20141022-00/?p=43793#comment-1156993">
			October 22, 2014 at 1:13 pm</a>		</div>

		<p>Windows 10 actually splits up win32k.sys into the core parts and the main desktop parts. &nbsp;I presume that Xbone and WinPhone will only use the core win32k.sys, while Windows RT 10 and Windows 10 will use the desktop one as well.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1157003">
				<div id="div-comment-1157003" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Danny</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20141022-00/?p=43793#comment-1157003">
			October 22, 2014 at 1:27 pm</a>		</div>

		<p>&quot;Okay, so let&#39;s put it a different way. &quot;You have been forced against your will to write a program that runs on Windows 8. How do you&#8230;&quot;</p>
<p>I&#39;ll advice my client to upgrade to 10 (btw, where is 9?(sic)), or downgrade to 7. Anything to avoid a flop.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1157013">
				<div id="div-comment-1157013" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Gabe</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20141022-00/?p=43793#comment-1157013">
			October 22, 2014 at 1:53 pm</a>		</div>

		<p>I see nothing wrong with having different ways to do the same thing, but I don&#39;t understand why you can&#39;t use both. I see why they don&#39;t let you access Win32 APIs from WinRT apps, but why can&#39;t you access WinRT APIs from Win32 apps?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1157023">
				<div id="div-comment-1157023" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Azarien</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20141022-00/?p=43793#comment-1157023">
			October 22, 2014 at 2:08 pm</a>		</div>

		<p>@Gabe: this way you can focus on Win32 and forget that WinRT even exists ;-)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-andycadley2 odd alt thread-odd thread-alt depth-1" id="comment-1157033">
				<div id="div-comment-1157033" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/AndyCadley' rel='external nofollow' class='url'>AndyCadley</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20141022-00/?p=43793#comment-1157033">
			October 22, 2014 at 2:24 pm</a>		</div>

		<p>@Gabe: Some of them you can, but the vast majority rely on state provided by the WinRT sandbox that simply doesn&#39;t exist for Win32 applications.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1157043">
				<div id="div-comment-1157043" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Wear</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20141022-00/?p=43793#comment-1157043">
			October 22, 2014 at 4:12 pm</a>		</div>

		<p>@Gabe </p>
<p><a rel="nofollow" target="_new" href="http://www.hanselman.com/blog/HowToCallWinRTAPIsInWindows8FromCDesktopApplicationsWinRTDiagram.aspx">http://www.hanselman.com/&#8230;/HowToCallWinRTAPIsInWindows8FromCDesktopApplicationsWinRTDiagram.aspx</a></p>
<p><a rel="nofollow" target="_new" href="https://software.intel.com/en-us/articles/using-winrt-apis-from-desktop-applications">software.intel.com/&#8230;/using-winrt-apis-from-desktop-applications</a></p>
<p><a rel="nofollow" target="_new" href="http://msdn.microsoft.com/en-us/library/hh438466">msdn.microsoft.com/&#8230;/hh438466</a></p>
<p>Also going the other way</p>
<p><a rel="nofollow" target="_new" href="http://msdn.microsoft.com/en-us/library/windows/apps/br205757.aspx">msdn.microsoft.com/&#8230;/br205757.aspx</a></p>
<p>I haven&#39;t looked too much into these things but it seems like it&#39;s possible to mix APIs fairly easily. The important thing is to find out which ones are supported by what. </p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-cheong odd alt thread-odd thread-alt depth-1" id="comment-1157063">
				<div id="div-comment-1157063" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/cheong00' rel='external nofollow' class='url'>cheong00</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20141022-00/?p=43793#comment-1157063">
			October 22, 2014 at 6:25 pm</a>		</div>

		<p>@Danny: See this post for possible explanation of why Win9 does not exist.</p>
<p><a rel="nofollow" target="_new" href="http://channel9.msdn.com/Forums/Coffeehouse/Ah-that-explains-it#c5eaa5f75f8d14633bd43a3b90135f04b">channel9.msdn.com/&#8230;/Ah-that-explains-it</a></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1157073">
				<div id="div-comment-1157073" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Muzer_</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20141022-00/?p=43793#comment-1157073">
			October 22, 2014 at 7:08 pm</a>		</div>

		<p>@cheong00: I visited a link that led me to a blog article about the possible explanation, from which I visited a link to a CodingHorror blog entry about a similar issue with Intel processors, from which I visited a link to this blog from 2003. Ah, the circle of hacky workarounds ;)</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

