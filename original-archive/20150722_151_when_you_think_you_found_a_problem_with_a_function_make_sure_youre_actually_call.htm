<html>
<head>
<title>When you think you found a problem with a function, make sure you're actually calling the function, episode 2</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>When you think you found a problem with a function, make sure you&#8217;re actually calling the function, episode 2</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>July 22, 2015 / year-entry #152</td></tr>
<tr><td><b>Tags:</b></td><td>code</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20150722-00/?p=90851</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>16</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">A customer reported that the Duplicate­Handle function was failing with ERROR_INVALID_HANDLE even though the handle being passed to it seemed legitimate: // Create the handle here m_Event = ::CreateEvent(NULL, FALSE/*bManualReset*/, FALSE/*bInitialState*/, NULL/*lpName*/)); ... error checking removed ... // Duplicate it here HRESULT MyClass::CopyTheHandle(HANDLE *pEvent) { HRESULT hr = S_OK; if (m_Event != NULL) { BOOL...</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>
A customer reported that
the
<code>Duplicate&shy;Handle</code> function
was failing with
<code>ERROR_<wbr>INVALID_<wbr>HANDLE</code>
even though the handle being passed to it seemed legitimate:
</p>
<pre>
  // Create the handle here
  m_Event =
    ::CreateEvent(NULL, FALSE/*bManualReset*/,
                       FALSE/*bInitialState*/, NULL/*lpName*/));
  ... error checking removed ...


// Duplicate it here
HRESULT MyClass::CopyTheHandle(HANDLE *pEvent)
{
 HRESULT hr = S_OK;
 
 if (m_Event != NULL) {
  BOOL result = ::DuplicateHandle(
                GetCurrentProcess(),
                m_Event,
                GetCurrentProcess(),
                pEvent,
                0,
                FALSE,
                DUPLICATE_SAME_ACCESS
                );
  if (!result) {
    // always fails with ERROR_INVALID_HANDLE
    return HRESULT_FROM_WIN32(GetLastError());
  }
 } else {
  *pEvent = NULL;
 }
 
 return hr;
}
</pre>
<p>
The handle in <code>m_Event</code> appears to be valid.
It is non-null, and we can still set and reset it.
But we can't duplicate it.
</p>
<p>
Now, before claiming that a function doesn't work,
<a HREF="http://blogs.msdn.com/b/oldnewthing/archive/2014/08/01/10546597.aspx">
you should check what you're passing to it and what it returns</a>.
The customer checked the
<code>m_Event</code> parameter,
but what about the other parameters?
The function takes <i>three</i> handle parameters, after all,
and they checked only one of them.
According to the debugger,
<code>Duplicate&shy;Handle</code> was called with the parameters
</p>
<table>
<tr>
<td><code>hSourceProcessHandle</code></td>
<td><code>&nbsp;= 0x0aa15b80</code></td>
</td>
<tr>
<td><code>hSourceHandle</code></td>
<td><code>&nbsp;= 0x00000ed8</code></td>
</td>
<td>&larr; <code>m_Event</code>, appears to be valid</p>
<tr>
<td><code>hTargetProcessHandle</code></td>
<td><code>&nbsp;= 0x0aa15b80</code></td>
</td>
<tr>
<td><code>lpTargetHandle</code></td>
<td><code>&nbsp;= 0x00b0d914</code></td>
</td>
<tr>
<td><code>dwDesiredAccess</code></td>
<td><code>&nbsp;= 0x00000000</code></td>
</td>
<tr>
<td><code>bInheritHandle</code></td>
<td><code>&nbsp;= 0x00000000</code></td>
</td>
<tr>
<td><code>dwOptions</code></td>
<td><code>&nbsp;= 0x00000002</code></td>
</td>
</table>
<p>
Upon sharing this information, the customer immediately
saw the problem:
The other two handle parameters come from the
<code>Get&shy;Current&shy;Process</code> function,
and that function
was returning <code>0x0aa15b80</code>
rather than the expected pseudo-handle
(which is currently <code>-1</code>,
but that is not contractual).
</p>
<p>
The customer explained that their
<code>My&shy;Class</code> has a method with the name
<code>Get&shy;Current&shy;Process</code>,
and it was that method which was being called
rather than the Win32 function
<code>Get&shy;Current&shy;Process</code>.
They left off the leading <code>::</code>
and ended up calling the wrong
<code>Get&shy;Current&shy;Process</code>.
</p>
<p>
By default, Visual Studio colors member functions and
global functions the same,
but you can change this
in
<a HREF="http://msdn.microsoft.com/en-us/library/vstudio/kw7t0545%28v=vs.110%29.aspx">
the <i>Fonts and Colors</i> options dialog</a>.
Under
<i>Show settings for</i>,
select <i>Text Editor</i>,
and then under
<i>Display items</i>
you can customize the colors to use for various language elements.
In particular, you can choose a special color
for static and instance member functions.
</p>
<p>
Or, as a matter of style,
you could have a policy of not
giving member functions the same
name as global functions.
(This has the bonus benefit of reducing false positives
when grepping.)
</p>
<p>
<b>Bonus story</b>:
A different customer reported a problem with visual styles
in the common tab control.
After a few rounds of asking questions, coming up with theories,
testing the theories,
disproving the theories,
the customer wrote back:
"We figured out what was happening
when we tried to step into the call to
<code>Create&shy;Dialog&shy;Indirect&shy;ParamW</code>.
Someone else in our code base redefined all the dialog
creation functions in an attempt to enforce a standard
font on all of them,
but in doing so, they effectively made our code no longer
isolation aware,
because in the overriding routines,
they called
<code>Create&shy;Dialog&shy;Indirect&shy;ParamW</code>
instead of
<code>Isolation&shy;Aawre&shy;Create&shy;Dialog&shy;Indirect&shy;ParamW</code>.
Thanks for all the help,
and apologies for the false alarm."</p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (16)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment byuser comment-author-bboorman even thread-even depth-1" id="comment-1236116">
				<div id="div-comment-1236116" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Brian_EE' rel='external nofollow' class='url'>Brian_EE</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150722-00/?p=90851#comment-1236116">
			July 22, 2015 at 7:11 am</a>		</div>

		<p>Here is a blog entry where two different customers gave feedback about what they found the underlying issue to be. I&#39;m curious what percentage of the time you receive that feedback vs not hearing anything back (which you&#39;ve mentioned several times in the past).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-anonymouscommenter odd alt thread-odd thread-alt depth-1" id="comment-1236086">
				<div id="div-comment-1236086" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">anonymouscommenter</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150722-00/?p=90851#comment-1236086">
			July 22, 2015 at 8:14 am</a>		</div>

		<p>IsolationÂ­&quot;AawreÂ­&quot;CreateÂ­DialogÂ­IndirectÂ­ParamW ?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-maurits even thread-even depth-1" id="comment-1236066">
				<div id="div-comment-1236066" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Maurits+%5BMSFT%5D' rel='external nofollow' class='url'>Maurits [MSFT]</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150722-00/?p=90851#comment-1236066">
			July 22, 2015 at 8:31 am</a>		</div>

		<p>@creaothceann &#8211; typo. It should be IsolationÂ­AawRecreateÂ­DialogÂ­IndirectÂ­ParamW (a function to recreate cute indirect parameters for dialogs.)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-anonymouscommenter odd alt thread-odd thread-alt depth-1" id="comment-1236036">
				<div id="div-comment-1236036" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">anonymouscommenter</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150722-00/?p=90851#comment-1236036">
			July 22, 2015 at 9:40 am</a>		</div>

		<p>What do you use for grep? &nbsp;Cygwin? &nbsp;MingW tools? &nbsp;Services for UNIX? &nbsp;find.exe?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-anonymouscommenter even thread-even depth-1" id="comment-1236026">
				<div id="div-comment-1236026" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">anonymouscommenter</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150722-00/?p=90851#comment-1236026">
			July 22, 2015 at 11:02 am</a>		</div>

		<p>I normally use the grep from GnuWin32 (though it is not downloadable until SourceForge stops being broken).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-hankhein odd alt thread-odd thread-alt depth-1" id="comment-1236016">
				<div id="div-comment-1236016" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Henri+Hein' rel='external nofollow' class='url'>Henri Hein</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150722-00/?p=90851#comment-1236016">
			July 22, 2015 at 12:28 pm</a>		</div>

		<p>For grep, I use unxutils. &nbsp;I like its installation-free copy-and-run mode. &nbsp;It has the added bonus of being an easy tag to get meaningful search results on.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-maurits even thread-even depth-1" id="comment-1222112">
				<div id="div-comment-1222112" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Maurits+%5BMSFT%5D' rel='external nofollow' class='url'>Maurits [MSFT]</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150722-00/?p=90851#comment-1222112">
			July 22, 2015 at 12:48 pm</a>		</div>

		<p>I&#39;m going to bet that their MyClass::GetCurrentProcess returned some kind of actual pointer (say, a MyProcess*)&#8230;</p>
<p>&#8230; which is then auto-converted to HANDLE without any compiler complaints, since HANDLE is a typedef for void*.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-anonymouscommenter odd alt thread-odd thread-alt depth-1" id="comment-1236006">
				<div id="div-comment-1236006" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">anonymouscommenter</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150722-00/?p=90851#comment-1236006">
			July 22, 2015 at 2:01 pm</a>		</div>

		<p>Is there no shadowing warning in the compiler? If not, there should be.</p>
<p>But IMHO the Real Cause of this one is that C++ adds an implicit &quot;this-&gt;&quot; when it sees something which could be a member. Other languages avoid this particular issue by requiring an explicit &quot;this-&gt;&quot; or &quot;self.&quot; or similar.</p>
<p>And Windows&#39; namespace pollution doesn&#39;t help. It has thousands of global functions, many of them without any prefix or suffix; to have &quot;a policy of not giving member functions the same name as global functions&quot;, you need to know all of their names, even the ones which will be created in the future (because there&#39;s no common prefix or suffix to avoid). I&#39;d guess that the programmer who created the GetCurrentProcess method wasn&#39;t being cute; they just didn&#39;t know or didn&#39;t remember that there was a Win32 API function with that name (there are too many of them to remember). It&#39;s even worse for portable software: you just can&#39;t expect the Unix guys to know about all the many Win32 API functions.</p>
<p>As for the bonus story, it wouldn&#39;t surprise me if the culprit had never heard of Isolation Awareness and all of its extra complexity, a lot of it hidden by redirecting macros and magic manifest identifiers.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-kwadwomi even thread-even depth-1" id="comment-1235986">
				<div id="div-comment-1235986" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Master+Programmer' rel='external nofollow' class='url'>Master Programmer</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150722-00/?p=90851#comment-1235986">
			July 22, 2015 at 4:02 pm</a>		</div>

		<p>So did the customer not know how to use a debugger?</p>
<div class="post">[<em>They knew how to use the debugger (that&#39;s how they found the problem), but they needed help with knowing where to look. -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-anonymouscommenter odd alt thread-odd thread-alt depth-1" id="comment-1235956">
				<div id="div-comment-1235956" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">anonymouscommenter</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150722-00/?p=90851#comment-1235956">
			July 22, 2015 at 10:23 pm</a>		</div>

		<p>Please fix the layout of your blog to be more mobile friendly.</p>
<div class="post">[<em>Looks good on <span style="text-decoration:underline;">my</span> phone. -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-anonymouscommenter even thread-even depth-1" id="comment-1235936">
				<div id="div-comment-1235936" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">anonymouscommenter</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150722-00/?p=90851#comment-1235936">
			July 23, 2015 at 12:08 am</a>		</div>

		<p>@looks like crap: You realise that your handle makes it less likely that anyone will bother, right? (I assume, by the way, that this is a temporary handle you&#39;ve adopted for the purpose. Please excuse me if this is, in fact, your real name. You probably got teased a lot in the playground at school when you were younger and you don&#39;t need me having a go at you now.)</p>
<p>For the curious, the right-hand margin appears to be set to about an inch, regardless of screen size, so the entire text (at least on my phone) is confined to a tiny strip down the left-hand side. The various boxes on the right are also missing, making the margin even more wrong.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1222102">
				<div id="div-comment-1222102" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Chris J</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150722-00/?p=90851#comment-1222102">
			July 23, 2015 at 12:31 am</a>		</div>

		<p>@Ryan &#8211; Powershell has grep in the form of select-string (aka sls), e.g. &#39;sls SELECT.*Merge&quot; *.sql&#39;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-anonymouscommenter even thread-even depth-1" id="comment-1235896">
				<div id="div-comment-1235896" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">anonymouscommenter</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150722-00/?p=90851#comment-1235896">
			July 23, 2015 at 7:12 am</a>		</div>

		<p>@looks: &nbsp;As Raymond has said many times here, he does not control the blog software. &nbsp;He CANNOT fix things like that. &nbsp;If you can&#39;t handle reading this blog on your device, I humbly suggest that you don&#39;t read it. </p>
<p>Also, your handle probably violates the &quot;be nice and respectful&quot; policy. &nbsp;:-)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-anonymouscommenter odd alt thread-odd thread-alt depth-1" id="comment-1235796">
				<div id="div-comment-1235796" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">anonymouscommenter</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150722-00/?p=90851#comment-1235796">
			July 23, 2015 at 7:56 am</a>		</div>

		<p>@ DWalker</p>
<p>Agree with you. &nbsp;I have never understood why people complain when someone else &#8212; out of pure generosity &#8212; gives them something for free. &nbsp;Maybe it&#39;s just that I am officially an old-fart and see the value in being polite. &nbsp;The goods news is that I have yet to yell, &quot;Get off my lawn!&quot; at kids in the neighborhood.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-anonymouscommenter even thread-even depth-1" id="comment-1235716">
				<div id="div-comment-1235716" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">anonymouscommenter</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150722-00/?p=90851#comment-1235716">
			July 23, 2015 at 9:43 am</a>		</div>

		<p>@Chris J &#8211; Do you use Powershell as a programmer or in an IT capacity? &nbsp;I have occasionally tried to do something with it and found it poor for coding types of problems, but excellent for &quot;enumerate the network devices and change their policy&quot; kind of problems.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-anonymouscommenter odd alt thread-odd thread-alt depth-1" id="comment-1235616">
				<div id="div-comment-1235616" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">anonymouscommenter</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150722-00/?p=90851#comment-1235616">
			July 24, 2015 at 12:49 am</a>		</div>

		<p>@Ryan &#8211; both. I&#39;ve done log analysis scripts with it, replace batch files with it (as it&#39;s more predictable and less arcane than batch &#8211; for example, BCP files into a database based on certain criteria); validate configuration (including validating network endpoints stored in a database table by connecting to those endpoints and checking SSL), etc. </p>
<p>In essence, where I might have written a Perl script or fired up VS to write a quick C# utility, Powershell replaces both and has the added benefit (over Perl) that it&#39;s pre-shipped on servers (which also means I don&#39;t need to persuade ops to put cygwin or unxutils on the box).</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

