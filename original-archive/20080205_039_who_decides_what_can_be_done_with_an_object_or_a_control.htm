<html>
<head>
<title>Who decides what can be done with an object or a control?</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>Who decides what can be done with an object or a control?</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>February 5, 2008 / year-entry #40</td></tr>
<tr><td><b>Tags:</b></td><td>code</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20080205-00/?p=23573</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>8</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">This is one of those things that is obvious to me, but perhaps is not obvious to everyone. An object establishes what can be done with it. Any rights granted by the object go to the creator. The creator can in turn grant rights to others. But if you're a third party to the object/creator...</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>This is one of those things that is obvious to me, but perhaps is not obvious to everyone. An object establishes what can be done with it. Any rights granted by the object go to the creator. The creator can in turn grant rights to others. But if you're a third party to the object/creator relationship, you can't just step in and start messing around without the permission of both the object and the creator.</p>
<p> For example, unless you have permission of the creator of a list view control, you can't go around adding, removing, and changing items in the list view. The creator of the list view decides what goes in it, and at most you can look at it to see what the creator decided to put in it. I say "at most" because you often can't even do that: If the fact that the item is a list view control is not public, then the program that created the list view might decide to use some other control in a future version, and then your code that tries to look at the list view will stop working. </p>
<p> Naturally, any private data associated with a control (such as the <code>LPARAM</code> associated with a list item) is <a href="http://blogs.msdn.com/oldnewthing/archive/2004/10/19/244567.aspx"> entirely under the purview of the control's creator</a>. The creator of the control decides what the item data means, and that can change from version to version if not explicitly documented. (For example, <a href="http://groups.google.com/groups?selm=1165244925.433286.14150@16g2000cwy.googlegroups.com"> the meaning of the item data associated with the main list view in Explorer windows has changed at pretty much every major release of Windows</a>.) </p>
<p> Generally speaking, without the permission of the creator of a control and the control itself, you can't do anything to it. You can't hide it, show it, <a href="http://groups.google.com/groups?selm=1141922398.053353.249480@j33g2000cwa.googlegroups.com"> move it</a>, <a href="http://groups.google.com/groups?selm=u1oOHHu2FHA.1184@TK2MSFTNGP12.phx.gbl"> change its scroll bars</a>, <a href="http://groups.google.com/groups?selm=oAWdf.2089%24X44.58702953@news.sisna.com"> mess with its menus</a> (assuming <a href="http://groups.google.com/groups?selm=devr7q%24epk%241@nemesis.news.tpi.pl"> it even uses menus at all</a>), <a href="http://groups.google.com/groups?selm=0hJaf.4728%24lJ.2360@newsfe5-win.ntli.net"> change its text</a>, or destroy it. The code that created the control and the control itself presumably maintain their own state (the control maintains state about itself, and the creator maintains state about what it has done to the control). If you start messing with the control yourself, you may find that your changes seem to work for a while and then are suddenly lost when the control decides to re-synchronize its internal state with its external state. Or worse, things will just be permanently out of sync, and the program will start acting strange. If the control and the control's creator have not provided a way to coordinate your actions with them, then you can't mess with the control. </p>
<p> If you're tempted to go mess with somebody else's controls, think about how you would like it if the tables were turned. How would you feel if somebody wrote a program that took the controls in your program and started messing with them, say adding items to your list box and using the item data to extract information out of your program? What if they started filing bugs against you for changing the way your program operates internally? </p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (8)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-598553">
				<div id="div-comment-598553" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.pixelbath.com/' rel='external nofollow' class='url'>Michael</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080205-00/?p=23573#comment-598553">
			February 5, 2008 at 5:34 pm</a>		</div>

		<p>If something like &quot;the object you are attempting to [perform actions upon] defines what it can do&quot; is not obvious to a programmer, then they&#8217;re in the wrong business.</p>
<p>Isn&#8217;t understanding object core to actual non-trivial programming?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-598573">
				<div id="div-comment-598573" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Merus</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080205-00/?p=23573#comment-598573">
			February 5, 2008 at 6:23 pm</a>		</div>

		<p>And yet how many people dig into the internals of Windows in order to be able to do something? While I think every programmer would understand it when asked, not everyone keeps it in mind.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-598593">
				<div id="div-comment-598593" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Tod</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080205-00/?p=23573#comment-598593">
			February 5, 2008 at 7:39 pm</a>		</div>

		<p>The answer does seem obvious.</p>
<p>However, reality is never so simple.</p>
<p>On far too many occasions I hear about bugs in libraries that I designed. After investigating, it turns out that other teams (who have access to the source code) have altered my libraries in the following ways: 1) changed private methods to be public 2) added new methods to existing interfaces, or 3) added new methods exposing internal structures.</p>
<p>When asked why they do this, I am told various reasons such as that they needed access to internal structures or doing it any other way would take too long etc.</p>
<p>And when I revert my libraries, existing code ceases to compile, so I am tasked to &quot;fix&quot; that too as if it is my fault&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-598603">
				<div id="div-comment-598603" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.asvguy.com' rel='external nofollow' class='url'>Burak KALAYCI</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080205-00/?p=23573#comment-598603">
			February 5, 2008 at 8:54 pm</a>		</div>

		<blockquote><p>
  without the permission of the creator of a control and the control itself, you can&#8217;t do anything to it.
</p></blockquote>
<p>I think that&#8217;s fundamentally wrong. But, it will be equally wrong to expect it to work with a new version.</p>
<p>Do I need any permission from the creator to remove ads from any site while browsing? If the page does not render nice after the ad picture removed, that will be my problem too. I can&#8217;t expect the creator to fix it now, or ever.</p>
<p>I won&#8217;t generally mess with someone else&#8217;s controls, but I can do it if I want, and I won&#8217;t need a permission, no. BUT, at the same time, I won&#8217;t expect any support for my little hack from the creator in the future.</p>
<p>And if the tables were turned, I won&#8217;t feel obliged to support any hack to my code. If somebody files a bug, I&#8217;d just say that this is how things work, this is not a bug, rewrite your code, get a life.</p>
<p>And this is so obvious to me&#8230;</p>
<p>I may suspect that some internal info about an object is not being supplied to me (or offered for any price), but to others, which creates an unfair situation. Certain functionality may not be possible without messing with internals of someone else&#8217;s object. This may be a valid reason to do it. In that case, you may expect the internals will change even just to make your application incompatible (if your assumption was wrong, of course).</p>
<p>I remember Microsoft&#8217;s defense about DR-DOS not being compatible with MS-DOS for running Windows after checking internal structures. You can&#8217;t be 100% compatible unless you are identical.</p>
<p>You should try to respect creator&#8217;s intentions, in order to be able to expect future compatibility.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-598613">
				<div id="div-comment-598613" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.pagetable.com/' rel='external nofollow' class='url'>Myria</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080205-00/?p=23573#comment-598613">
			February 6, 2008 at 1:12 am</a>		</div>

		<p>Most of the time, I would agree that you don&#8217;t want to mess with program internals. &nbsp;However, sometimes the API is poorly designed, or there is a very useful feature that is missed in the API&#8217;s design.</p>
<p>Certain functions in ntdll.dll come to mind. &nbsp;They can do a lot of things Win32 can&#8217;t.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-598643">
				<div id="div-comment-598643" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">ti</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080205-00/?p=23573#comment-598643">
			February 6, 2008 at 6:03 am</a>		</div>

		<p>Wait, you want to say that lParam of listview items no loner a pidl?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-598663">
				<div id="div-comment-598663" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Dan</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080205-00/?p=23573#comment-598663">
			February 6, 2008 at 9:44 am</a>		</div>

		<p>Despite all this, I find AutoIt is a fun tool for manipulating other Windows programs. &nbsp;I made a download monitor that tracked several programs and reported files and file progress and download speed by reading control text from different windows. &nbsp;Granted it was easy to break (reordering listview columns would be enough) but it was also pretty easy to fix given AutoIt&#8217;s scripting language syntax.</p>
<p>Sadly, AutoIt doesn&#8217;t work with some programs, based on exactly the points made in the article. &nbsp;For example, in XPSP2, the taskbar refuses to be resized by AutoIt to, for example, stretch across multiple monitors. &nbsp;I&#8217;m guessing it blocks the resize in WM_WINDOWPOSCHANGING or whatever.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-598773">
				<div id="div-comment-598773" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">JS</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080205-00/?p=23573#comment-598773">
			February 6, 2008 at 11:28 am</a>		</div>

		<p>The degree to which one Windows application is allowed to mess with another has always surprised me. &nbsp;I&#8217;ve noticed this ability has been pared back somewhat in Vista, presumably because the &quot;programmers will use their powers for good&quot; maxim continues to be proven false&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

