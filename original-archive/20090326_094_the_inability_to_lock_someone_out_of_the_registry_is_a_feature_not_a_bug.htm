<html>
<head>
<title>The inability to lock someone out of the registry is a feature, not a bug</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>The inability to lock someone out of the registry is a feature, not a bug</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>March 26, 2009 / year-entry #95</td></tr>
<tr><td><b>Tags:</b></td><td>other</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20090326-00/?p=18703</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>31</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">There is no way to lock the registry. Whereas you can open a file with a deny all sharing mode to prevent anyone else from opening the file, the registry has no such provision. You can't lock a registry key and prevent others from reading from or writing to it. There is an internal lock...</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>There is no way to lock the registry. Whereas you can open a file with a <i>deny all</i> sharing mode to prevent anyone else from opening the file, the registry has no such provision. You can't lock a registry key and prevent others from reading from or writing to it. There is an internal lock on the registry, but that's just to ensure that registry operations are atomic; that is, that if one thread writes a value to the registry and another thread reads that same value from the registry, then the value that comes back is either the value before the write took place or the value after the write took place, but not some sort of mixture of the two.</p>
<p> <a href="http://blogs.msdn.com/oldnewthing/archive/2006/02/22/536920.aspx#537376"> Some people consider the inability to lock the registry to be a bug</a> but it's actually a feature. It means that nobody can launch a denial of service attack against the registry by opening a key in an exclusive mode and preventing anybody else from reading it. This is important, because many security settings are stored in the registry, and locking somebody out of a registry key means that the part of the operating system whose job it is to enforce the security of a particular feature would no longer be able to check whether the operation is allowed. </p>
<p> This all means that if you're reading from the registry, you have to accept that the contents can change while you're reading them, in the same way that <a href="http://blogs.msdn.com/oldnewthing/archive/2007/11/09/6001644.aspx"> you have to accept that the file system can change</a>. If you're writing to the registry, you can take advantage of <a href="http://msdn.microsoft.com/en-us/library/bb852232.aspx"> transactional registry support</a> new to Windows Vista. </p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (31)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-720343">
				<div id="div-comment-720343" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Alexander Grigoriev</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090326-00/?p=18703#comment-720343">
			March 26, 2009 at 10:31 am</a>		</div>

		<p>Allowing any user to lock files he doesn&#8217;t have access to is a bigger denial of service bug. You can open a handle to a critical system file, with minimal access requested (FILE_READ_ATTRIBUTES), or just GENERIC_READ, and pass zero as ShareAllowed, and nobody else will be able to open the file.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-720383">
				<div id="div-comment-720383" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Adam V</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090326-00/?p=18703#comment-720383">
			March 26, 2009 at 11:42 am</a>		</div>

		<p>@Alexander:</p>
<p>I think I&#8217;m missing your point. Why would a regular user have access, even read-only, to critical system files?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-720393">
				<div id="div-comment-720393" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">John</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090326-00/?p=18703#comment-720393">
			March 26, 2009 at 12:18 pm</a>		</div>

		<p>Well, on Windows XP the Users group has Read access to everything in C:WINDOWS and C:WINDOWSsystem32. &nbsp;Of course, by the time Explorer comes up all the critical system files are already loaded by the operating system. &nbsp;However, you can still open something like taskmgr.exe or mmc.exe in exclusive mode and prevent other users from running it. &nbsp;Sounds like a denial of service to me. &nbsp;However, the Administrator could always come along and fix it so it&#8217;s not like it&#8217;s a critical vulnerability.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-720453">
				<div id="div-comment-720453" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Alexandre Grigoriev</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090326-00/?p=18703#comment-720453">
			March 26, 2009 at 1:49 pm</a>		</div>

		<p>John, Adam V</p>
<p>Some services, started by a scheduler, such as Windows update, installer, etc, are not loaded all the time. If a malicious app, even running under limited user, can lock those EXEs/DLLs out, that will prevent the services from starting.</p>
<p>The administrator cannot fix that, because MSI executable also needs to run under an user.</p>
<p>AND, YOU DON&#8217;T NEED TO HAVE READ ACCESS TO A FILE TO LOCK IT OUT. ALL YOU NEED IS TO HAVE &quot;LIST CONTENT&quot; or &quot;TRAVERSE&quot; ACCESS TO ITS DIRECTORY.</p>
<p>I suggest to always imply FILE_SHARE_READ|FILE_SHARE_WRITE, unless the CreateFile caller has &quot;modify&quot; access to the file.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-720463">
				<div id="div-comment-720463" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">d_e</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090326-00/?p=18703#comment-720463">
			March 26, 2009 at 1:50 pm</a>		</div>

		<p>Raymond: Exactly the same argument can be applied to files. IMHO, locking is a missing feature of the registry.</p>
<p>Regular users should not be able to lock a security-relevant key. They shouldn&#8217;t have the rights to do so. If this is the case it&#8217;s not a DoS-vulnerability.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-720473">
				<div id="div-comment-720473" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Kevin</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090326-00/?p=18703#comment-720473">
			March 26, 2009 at 2:04 pm</a>		</div>

		<p>Doesn&#8217;t wiping out the registry achieve the same effect as DoS?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-720483">
				<div id="div-comment-720483" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Rich M</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090326-00/?p=18703#comment-720483">
			March 26, 2009 at 2:09 pm</a>		</div>

		<p>There may not be a lock, but you CAN add ACLs to a registry entry, allowing you a measure of control over it.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-720493">
				<div id="div-comment-720493" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Gwyn</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090326-00/?p=18703#comment-720493">
			March 26, 2009 at 2:39 pm</a>		</div>

		<p>If you have the access to completely wipe out the registry, then you probably already have administrator access so you could do much worse than a DoS.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-720513">
				<div id="div-comment-720513" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Gabe</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090326-00/?p=18703#comment-720513">
			March 26, 2009 at 2:49 pm</a>		</div>

		<p>Why would you need to lock the registry?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-720523">
				<div id="div-comment-720523" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">henke37</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090326-00/?p=18703#comment-720523">
			March 26, 2009 at 3:06 pm</a>		</div>

		<p>Ah, great, the msdn url has 404&#8217;d before I got to read the article. Let&#8217;s hope this is just a random hickup that will solve itself and not just another msdn url invalidation.</p>
<div class=post>[<i>I like how people go to the most conspiratorial explanation first. I mistyped the URL. Fixed. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-720533">
				<div id="div-comment-720533" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blog.tapuchim.com' rel='external nofollow' class='url'>configurator</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090326-00/?p=18703#comment-720533">
			March 26, 2009 at 3:06 pm</a>		</div>

		<p>Gabe: For example, to add an entry to an MRU, in a multi-application-safe manner where multiple applications can add values at the same time.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-720553">
				<div id="div-comment-720553" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">John</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090326-00/?p=18703#comment-720553">
			March 26, 2009 at 3:32 pm</a>		</div>

		<p>Alexandre:</p>
<p>I don&#8217;t see what the problem is. &nbsp;Yes, somebody can lock the Windows Update service executable (or anything else). &nbsp;But the Administrator can always come along and kill the process that has it locked (or forcefully logoff the user).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-720593">
				<div id="div-comment-720593" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Richard</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090326-00/?p=18703#comment-720593">
			March 26, 2009 at 4:02 pm</a>		</div>

		<p>John:</p>
<p>Unless it&#8217;s Vista/Server 2008 and the &quot;program&quot; in question is a Service. &nbsp;Hello Mandatory Integrity Control and Service isolation. &nbsp;And if the Service has been created with evil intent, then the Service Control Manager will be unable to stop it (try to stop the &quot;Remote Procedure Call&quot; Service, for example).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-720603">
				<div id="div-comment-720603" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">John</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090326-00/?p=18703#comment-720603">
			March 26, 2009 at 4:22 pm</a>		</div>

		<p>Richard:</p>
<p>If you&#8217;re the administrator, you can shutdown the service. &nbsp;If the service is malicious, then it&#8217;s already on the other side of the airtight hatch.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-720613">
				<div id="div-comment-720613" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Alexandre Grigoriev</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090326-00/?p=18703#comment-720613">
			March 26, 2009 at 4:45 pm</a>		</div>

		<p>John,</p>
<p>&quot;But the Administrator can always come along and kill the process that has it locked (or forcefully logoff the user).&quot;</p>
<p>What if &quot;administrator&quot; is just another clueless user, and the locked service is &quot;antivirus update&quot;? And how would Administrator (capital A) know the file is locked? Would he be always watching the system log, as if it&#8217;s a R.Chan blog?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-720623">
				<div id="div-comment-720623" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Alexandre Grigoriev</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090326-00/?p=18703#comment-720623">
			March 26, 2009 at 4:46 pm</a>		</div>

		<p>&#8220;If the service is malicious, then it&#8217;s already on the other side of the airtight hatch.&#8221;</p>
<p>The service can run with reduced privileges, for example as NetworkService account. It&#8217;s not almighty then.</p>
<div class=post>[<i>Irrelevant. You need admin privileges to install the service in the first place. That&#8217;s the airtight hatch you&#8217;ve already gotten to the other side of. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-720633">
				<div id="div-comment-720633" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Gaspar</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090326-00/?p=18703#comment-720633">
			March 26, 2009 at 5:12 pm</a>		</div>

		<p>I think a lot of people are ignoring the most common situation that this would effect, the average, barely computer literate consumer.</p>
<p>Example:</p>
<p>Our consumer (we can call him Bob) wants to browse ebay for new Elvis commemorative plates.</p>
<p>Bob sits down at his computer and turns it on. &nbsp;It goes through startup process which include XYZ anti-virus/firewall/toaster program.</p>
<p>When XYZ anti-virus/firewall/toaster program starts up it does its thing which now includes locking registry key UVW.</p>
<p>Next Bob fires up his browser. &nbsp;The first thing that browser does is check UVW registry key. &nbsp;But now, UVW registry key is locked and can&#8217;t be read. &nbsp;So our browser sits until XYZ anti-virus program unlocks it.</p>
<p>What is the AVERAGE users experience? &nbsp;&quot;My F@$#ing computer doesn&#8217;t work&#8230;&quot; &nbsp;Followed by getting mad about various things and calling and blaming many companies who all pass the buck elsewhere.</p>
<p>What is the plus side for this? &nbsp;Making it easier for a developer to put information in a registry key that most likely probably is best placed elsewhere? &nbsp;That does not sound like a good trade off to me.</p>
<p>As for why any particular program would lock a key? &nbsp;Does it really matter, if someone CAN do something, it WILL happen. &nbsp;Be it software bug, bad design, malicious use, or other.</p>
<p>My understanding is that the registry is shared data. &nbsp;Because it is shared no one person should be able to have say over everyone else. &nbsp;Hence, just because you want to lock everyone else out, doesn&#8217;t mean that everyone else likes that idea. &nbsp;If everyone else was fine being locked out of registry key UVW, then why are they even bothering to look at it in the first place?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-720643">
				<div id="div-comment-720643" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">ERock</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090326-00/?p=18703#comment-720643">
			March 26, 2009 at 5:23 pm</a>		</div>

		<p>While perhaps I&#8217;ve missed the point, thank you Raymond for pointing out Transactions are supported in the Registry in Vista. It&#8217;s a feature I welcome wholeheartedly.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-720653">
				<div id="div-comment-720653" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Alexandre Grigoriev</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090326-00/?p=18703#comment-720653">
			March 26, 2009 at 5:30 pm</a>		</div>

		<p>&#8220;The service can run with reduced privileges, for example as NetworkService account. It&#8217;s not almighty then.</p>
<p>[Irrelevant. You need admin privileges to install the service in the first place. That&#8217;s the airtight hatch you&#8217;ve already gotten to the other side of. -Raymond]&#8221;</p>
<p>What if the service was compromised by a remote exploit? There is a reason the network-facing services run with reduced privileges now.</p>
<div class=post>[<i>Okay, so first we start with &#8220;Assume somebody installed a rogue service&#8221; and then you changed it to &#8220;Assume somebody found a remote exploit in an existing service&#8221; and now I don&#8217;t even know what we&#8217;re talking about. Let&#8217;s talk about why you can&#8217;t lock a registry key. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-720663">
				<div id="div-comment-720663" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">John</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090326-00/?p=18703#comment-720663">
			March 26, 2009 at 5:30 pm</a>		</div>

		<p>&quot;What if &quot;administrator&quot; is just another clueless user, and the locked service is &quot;antivirus update&quot;? And how would Administrator (capital A) know the file is locked? Would he be always watching the system log, as if it&#8217;s a R.Chan blog?&quot;</p>
<p>And what if the administrator gets hit by a bus while walking his dog? &nbsp;My assertion was simply that it is possible for an administrator to fix the problem. &nbsp;Anything further than that is outside the scope of this discussion.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-720673">
				<div id="div-comment-720673" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Richard</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090326-00/?p=18703#comment-720673">
			March 26, 2009 at 5:47 pm</a>		</div>

		<p>John:</p>
<p>Point taken with the default settings for MIC. &nbsp;But what about enabling the policies SYSTEM_MANDATORY_POLICY_NO_READ_UP and/or SYSTEM_MANDATORY_POLICY_NO_EXECUTE_UP? &nbsp;It is my understanding that these policies would prevent lower integrity level processes from interacting with said process, including using TerminateProcess(). But I could be wrong.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-aaron-margosis odd alt thread-odd thread-alt depth-1" id="comment-720703">
				<div id="div-comment-720703" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Aaron+Margosis' rel='external nofollow' class='url'>Aaron Margosis</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090326-00/?p=18703#comment-720703">
			March 26, 2009 at 7:31 pm</a>		</div>

		<p>OK, so I got curious, wrote a program that calls CreateFile to open system32reg.exe for GENERIC_READ, setting share mode at 0, and holds onto the handle. &nbsp;Went to another console window and ran &quot;reg.exe /?&quot;. &nbsp;It ran fine. &nbsp;Ran another copy of the test program and it wasn&#8217;t able to open reg.exe. &nbsp;But I could still execute it. &nbsp;So&#8230; I don&#8217;t think there&#8217;s even a DoS here, at least not as described. &nbsp;(Ran the test on Vista SP1 x64.)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-720733">
				<div id="div-comment-720733" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Alexandre Grigoriev</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090326-00/?p=18703#comment-720733">
			March 26, 2009 at 8:58 pm</a>		</div>

		<p>Aaron,</p>
<p>That&#8217;s interesting data point. I&#8217;m curious what it was on previous OSs.</p>
<p>Executing a file requires GENERIC_EXECUTE rights, which doesn&#8217;t use FILE_READ_DATA. Apparently, file locking only controls FILE_READ_DATA and FILE_WRITE_DATA rights.</p>
<p>To use a memory mapped file, one has to only have GENERIC_EXECUTE rights.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-720753">
				<div id="div-comment-720753" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blog.adminarsenal.com' rel='external nofollow' class='url'>Adam Ruth</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090326-00/?p=18703#comment-720753">
			March 26, 2009 at 9:34 pm</a>		</div>

		<p>I think that even having this discussion highlights that too much stuff is being put into the registry. It&#8217;s not a database, it&#8217;s an API that has been abused, to everyone&#8217;s detriment.</p>
<p>I try to only use it to store information during the installation of an application, to &quot;register&quot; the application if you will. Stuff that the app may need to know on start up.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-720763">
				<div id="div-comment-720763" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">John</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090326-00/?p=18703#comment-720763">
			March 26, 2009 at 9:39 pm</a>		</div>

		<p>Aaron:</p>
<p>I did the same thing with taskmgr.exe on XP 32-bit and I couldn&#8217;t execute it. &nbsp;Is your test app 64-bit? &nbsp;If not, perhaps WOW64 is redirecting you to syswow64reg.exe. &nbsp;Then when you run reg.exe from the command line, you are actually running system32reg.exe (which is not the file that is locked). &nbsp;I don&#8217;t have a 64-bit machine in front of me to test this theory.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-leo-davidson odd alt thread-odd thread-alt depth-1" id="comment-720543">
				<div id="div-comment-720543" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Leo+Davidson' rel='external nofollow' class='url'>Leo Davidson</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090326-00/?p=18703#comment-720543">
			March 26, 2009 at 3:12 pm</a>		</div>

		<p>&quot;Why would you need to lock the registry?&quot;</p>
<p>The trivial, every-day example is simply reading a value from the registry properly.</p>
<p>You have to query the value with a null buffer first to get the buffer size, then allocate the buffer, then query it again with that buffer. There&#8217;s nothing to stop the value being written between those two operations, meaning any correct registry-reading code actually has to be a loop.</p>
<p>(Of course, in reality, you can get almost always get away without doing that.)</p>
<p>&quot;It means that nobody can launch a denial of service attack against the registry by opening a key in an exclusive mode and preventing anybody else from reading it.&quot;</p>
<p>Security settings should be read-only for non-admin processes (obviously). If the Registry had *shared* read locks then there would be no way for a non-admin process to prevent anything else from reading those keys. (Such processes could only prevent them from being written to, but that&#8217;s the same as files and you could ACL stuff to not allow non-admin processes to read it at all if needed.)</p>
<p>Allowing a non-admin process to get an exclusive read lock could cause problems, but I don&#8217;t think that means the entire concept of locking need be thrown out the window (unless there are other reasons). </p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-aaron-margosis even thread-even depth-1" id="comment-720783">
				<div id="div-comment-720783" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Aaron+Margosis' rel='external nofollow' class='url'>Aaron Margosis</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090326-00/?p=18703#comment-720783">
			March 26, 2009 at 11:08 pm</a>		</div>

		<p>@John &#8211; I did make that mistake at first, but built an x64 version, verified everything with Process Monitor, and still wasn&#8217;t locked out from using reg.exe.</p>
<p>But: &nbsp;just tested on Server 2003 SP2 x86 and the issue did manifest.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-720803">
				<div id="div-comment-720803" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Gabe</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090326-00/?p=18703#comment-720803">
			March 27, 2009 at 1:08 am</a>		</div>

		<p>It seems like nobody has noticed that locking a registry key is not like locking a file &#8212; it&#8217;s like locking a directory, which you can&#8217;t do. Locking a value is like locking a file, but since accessing a value is atomic you shouldn&#8217;t need to lock it.</p>
<p>Of course it could be growing as you&#8217;re trying to access it, making it impossible to make a buffer big enough. However values are at most 64k bytes, so a buffer that big will always fit and you won&#8217;t have to worry then.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-720813">
				<div id="div-comment-720813" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Worf</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090326-00/?p=18703#comment-720813">
			March 27, 2009 at 2:06 am</a>		</div>

		<p>@Aaron: maybe Vista fixed that potential DoS from happening &#8211; if an app is locking the file but it&#8217;s only being read, and it&#8217;s an executable, run anyways?</p>
<p>Or perhaps some system executables&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-721223">
				<div id="div-comment-721223" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Pinocchio</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090326-00/?p=18703#comment-721223">
			March 27, 2009 at 6:10 pm</a>		</div>

		<p>The inability to lock someone out of the registry was originally intended to be a PR stunt. &nbsp;The plan was to deny the existance of all such functions until a few months before the Windows 1.0 release, and then announce the incredibly extensive support for registry locking to build hype and sales.</p>
<p>Indeed, a full 97% of the original Win16 API was intended to be dedicated solely to various forms of locking yourself out of the registry!</p>
<p>When public opinion unexpectedly showed such strong support for the inability to lock someone out of the registry, Microsoft had to quickly scrap their highly extensive API of 14,550 registry locking functions. &nbsp;They ended up shipping Windows 1.0 with the remaining 450 functions that form the current basis for the Windows API.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-721923">
				<div id="div-comment-721923" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Dog</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090326-00/?p=18703#comment-721923">
			March 31, 2009 at 8:09 am</a>		</div>

		<p>@Pinocchio: The registry didn&#8217;t exist in Windows 1.0. It was introduced with OLE in Windows 3.0.</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

