<html>
<head>
<title>Isn't the CompletionKey parameter to CreateIoCompletionPort superfluous?</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>Isn&#8217;t the CompletionKey parameter to CreateIoCompletionPort superfluous?</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>February 22, 2013 / year-entry #51</td></tr>
<tr><td><b>Tags:</b></td><td>code</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20130222-00/?p=5173</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>4</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">When you associate a file handle with an I/O completion port with the Create­Io­Completion­Port function, you can pass an arbitrary pointer-sized integer called the Completion­Key which will be returned by the Get­Queued­Completion­Status function for every I/O that completes against that file handle. But isn't that parameter superfluous? If somebody wanted to associated additional data with...</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>When you associate a file handle with an I/O completion port with <a href="http://msdn.microsoft.com/en-us/library/windows/desktop/aa363862.aspx"> the <code>Create&shy;Io&shy;Completion&shy;Port</code> function</a>, you can pass an arbitrary pointer-sized integer called the <code>Completion&shy;Key</code> which will be returned by <a href="http://msdn.microsoft.com/en-us/library/windows/desktop/aa364986.aspx"> the <code>Get&shy;Queued&shy;Completion&shy;Status</code> function </a> for every I/O that completes against that file handle. But isn't that parameter superfluous? If somebody wanted to associated additional data with a file handle, they could <a href="http://blogs.msdn.com/b/oldnewthing/archive/2010/12/17/10106259.aspx"> just extend the <code>OVERLAPPED</code> structure to contain that additional data</a>.</p>
<p> Yes, they could, so in a purely information-theoretical sense, the parameter is superfluous. And heated seats in your car are superfluous, too. But they sure are nice! </p>
<p> From a purely information-theoretical point of view, a lot of things are superfluous. The <code>GWLP_<wbr>USER&shy;DATA</wbr></code> window bytes are not necessary, because you could just put the information in the window extra bytes. And window extra bytes are superfluous, since you could have just put them in properties. And properties are superfluous, since you could just have a hash table which maps window handles to "all the other data I want to associate with this window handle." </p>
<p> But it's nice to have <code>GWLP_<wbr>USER&shy;DATA</wbr></code>. </p>
<p> I find it interesting that people complain when Windows does not provide a convenience for some operation, and here's a case where it provides one, and then people complain that it's wasteful! </p>
<p> It can be nice to have some information associated with the file handle (to record some general information, like the overall operation this file is responsible for) and different information associated with the I/O request (to record some specific information, like which phase of the operation most recently completed). That way, you don't have to try to pack the two pieces of information together. </p>
<p> A more practical reason is that you may not be able to pass the extended <code>OVERLAPPED</code> through to the <code>Read&shy;File</code>. For example, you may be calling <a href="http://blogs.msdn.com/b/oldnewthing/archive/2012/12/21/10379948.aspx"> another function which will in turn issue the <code>Read&shy;File</code></a>, and that other function builds its own <code>OVERLAPPED</code> structure rather than letting you pass one in. In that case, you will thank your lucky stars that there's some redundant data elsewhere that will let you recover your state. </p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (4)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment byuser comment-author-jader3rd even thread-even depth-1" id="comment-1040993">
				<div id="div-comment-1040993" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/jader3rd' rel='external nofollow' class='url'>jader3rd</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130222-00/?p=5173#comment-1040993">
			February 22, 2013 at 10:12 am</a>		</div>

		<p>One mans trash is another mans treasure. Or in the case of Windows; one mans bloat is another mans convenience function.</p>
<p>Just because one group of people complain about something, does it mean that most people complain about the same thing.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-alegrigoriev odd alt thread-odd thread-alt depth-1" id="comment-1041003">
				<div id="div-comment-1041003" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/alegr1' rel='external nofollow' class='url'>alegr1</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130222-00/?p=5173#comment-1041003">
			February 22, 2013 at 11:13 am</a>		</div>

		<p>It&#39;s better to have a function with extra user context pointer, than a function without one. See SetTimer for thread-associated timers.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1041043">
				<div id="div-comment-1041043" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Yuri</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130222-00/?p=5173#comment-1041043">
			February 22, 2013 at 2:07 pm</a>		</div>

		<p>It&#39;s usually better to let the API architects decides what&#39;s wasteful or not. Let&#39;s file it under useless generic complaints about Windows API.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1041163">
				<div id="div-comment-1041163" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ian Boyd</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130222-00/?p=5173#comment-1041163">
			February 24, 2013 at 9:49 am</a>		</div>

		<p>No one&#39;s complaining. They (i.e. i) just want to make sure my mental-model of the intended use of the API matches the designers mental-model of the intended use of the API.</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

