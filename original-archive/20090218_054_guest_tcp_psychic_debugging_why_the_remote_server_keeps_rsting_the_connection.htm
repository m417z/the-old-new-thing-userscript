<html>
<head>
<title>Guest TCP psychic debugging: Why the remote server keeps RSTing the connection</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>Guest TCP psychic debugging: Why the remote server keeps RSTing the connection</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>February 18, 2009 / year-entry #55</td></tr>
<tr><td><b>Tags:</b></td><td>other</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20090218-00/?p=19103</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>14</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">My colleague Keith Moore (who occasionally comments on this site) shared with me one of his recent triumphs of psychic debugging. First the question: The customer is getting an RST response from IIS and they would like to know why. Here is a fragment from a network capture that illustrates the problem. (Fragment deleted.) The...</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>My colleague Keith Moore (who <a href="http://blogs.msdn.com/oldnewthing/archive/2004/03/29/101349.aspx#103489"> occasionally comments</a> on this site) shared with me one of his recent triumphs of psychic debugging. First the question:</p>
<blockquote class="q"><p> The customer is getting an RST response from IIS and they would like to know why. Here is a fragment from a network capture that illustrates the problem. (Fragment deleted.) The full capture is available on ... </p>
</blockquote>
<p> Keith didn't look at the full capture; he barely even glanced at the fragment. Because his psychic powers told him the answer: </p>
<blockquote class="q"><p> The amount of data they are sending does not match the Content-Length header. </p>
</blockquote>
<p> He goes on to explain: </p>
<blockquote class="q"><p> If there's unread data pending when a connection is closed, it is automatically reset. </p>
</blockquote>
<p> Sure enough, the customer was uploading data to the IIS server, specifying a Content-Length of 1289 but actually sending 1291 bytes. The server stopped reading after 1289 bytes (respecting the Content-Length), and the client was upset because <i>Hey, you forgot two bytes!</i> </p>
<p> As is occasionally the case with these types of problems, the misunderstanding goes deeper than the question itself. The customer replied, "I don't understand why the server sees 1291 bytes. If you look at the network capture, the client machine sends two frames, one of size 1289 and one of size 2. Both frames have the correct size specified in the frame header. The size of the frames is correct; I don't see what the problem is. I mean, sure, if the first frame had a header specifying 1289 bytes and the payload contained 1291 bytes, then that would be a problem, but that is not the case here." </p>
<p> The problem is not with the frames; it's at a higher level. The client machine promised via the HTTP protocol to send 1289 bytes, and it sent 1289 bytes, and then sent two more bytes. The reset occurs because the client machine lied about how many bytes it was going to send. The frames themselves are fine; the problem is that they are the wrong frames. </p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (14)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-709833">
				<div id="div-comment-709833" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">NONAME00.CPP</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090218-00/?p=19103#comment-709833">
			February 18, 2009 at 10:35 am</a>		</div>

		<p>To some admins this would seem like a vulnerability probe of the server.</p>
<p><a href="http://www.securiteam.com/securityreviews/5GP0220G0U.html" target=_new rel=nofollow rel="nofollow">http://www.securiteam.com/securityreviews/5GP0220G0U.html</a></p>
<p><a href="http://secunia.com/advisories/search/?search=content-length" target=_new rel=nofollow rel="nofollow">http://secunia.com/advisories/search/?search=content-length</a></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-709853">
				<div id="div-comment-709853" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Karellen</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090218-00/?p=19103#comment-709853">
			February 18, 2009 at 11:23 am</a>		</div>

		<p>And the extra two bytes were &#8230;?</p>
<p>My psychic debugging skills tell me it&#8217;s likely to be a trailing rn</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-709913">
				<div id="div-comment-709913" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Sean</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090218-00/?p=19103#comment-709913">
			February 18, 2009 at 3:28 pm</a>		</div>

		<p>@Karellen: I thought the same thing, &quot;What about rn?&quot;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-709933">
				<div id="div-comment-709933" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">ton</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090218-00/?p=19103#comment-709933">
			February 18, 2009 at 3:36 pm</a>		</div>

		<p>Sounds like his software is creating a post request setting the content-length correctly for that and then attaching a new frame for the rn characters when it should have been in the original frame.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-709943">
				<div id="div-comment-709943" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blog.henning.makholm.net/' rel='external nofollow' class='url'>Henning Makholm</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090218-00/?p=19103#comment-709943">
			February 18, 2009 at 4:57 pm</a>		</div>

		<p>@ton: The code in question is on a level of abstraction that does not know about TCP segments at all. If the two bytes were intended to be part of the posted data, the client should have included them in the HTTP-level content-length.</p>
<p>Possibly the RST packet only gets sent if the client sends the extra bytes after the client-side TCP/IP stack has already shipped off the actual body, AND the server is quick enough to read the 1289 bytes, process them and shut down the reading side of its socket before the straggler segment arrives. This does not mean that the error is at the TCP layer; it&#8217;s just an accident at the TCP layer that controls whether or not a bug higher in the hierarchy gets triggered.</p>
<p>In any case, the lying client is in good company. There&#8217;s a popular web browser which used to (and may still, for all I know) append rn to its POSTs without counting them in the content-length. Some HTTP server code will explicitly try to flush the reading side of the socket before it closes it, in the spirit of be-liberal-in-what-you-accept.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-709963">
				<div id="div-comment-709963" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Alexandre Grigoriev</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090218-00/?p=19103#comment-709963">
			February 18, 2009 at 5:05 pm</a>		</div>

		<p>From RFC2616:</p>
<p>&quot;Certain buggy HTTP/1.0 client implementations generate extra CRLF&#8217;s after a POST request. To restate what is explicitly forbidden by the BNF, an HTTP/1.1 client MUST NOT preface or follow a request with an extra CRLF.&quot;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-709973">
				<div id="div-comment-709973" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blog.henning.makholm.net/' rel='external nofollow' class='url'>Henning Makholm</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090218-00/?p=19103#comment-709973">
			February 18, 2009 at 5:06 pm</a>		</div>

		<p>(And here&#8217;s to me managing to completely overlook the explanation in the third quoted statement of the post, leading to a long bogus speculation about the precise triggering of the bug. Cheers!)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-710013">
				<div id="div-comment-710013" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://whereswalden.com/' rel='external nofollow' class='url'>Jeff Walden</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090218-00/?p=19103#comment-710013">
			February 19, 2009 at 12:08 am</a>		</div>

		<p>Actually, it seems a number of HTTP clients were buggy sending a CRLF after POST requests, some including it in the Content-Length, some not. &nbsp;See the comments in the following Mozilla bug:</p>
<p><a rel="nofollow" target="_new" href="https://bugzilla.mozilla.org/show_bug.cgi?id=87817" rel="nofollow">https://bugzilla.mozilla.org/show_bug.cgi?id=87817</a></p>
<p>The practice apparently was a response to a CERN webserver bug, which then likely propagated to clients. &nbsp;This bug then resulted in a note in the HTTP/1.1 RFC (at least 2616, didn&#8217;t check earlier ones), and, perhaps less obviously, in RFC 2616 section 4.1&#8217;s note that &quot;In the interest of robustness, servers SHOULD ignore any empty line(s) received where a Request-Line is expected.&quot;, which, notably, is important when you consider how a trailing CRLF interacts with keep-alive connections.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-710033">
				<div id="div-comment-710033" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">John</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090218-00/?p=19103#comment-710033">
			February 19, 2009 at 8:21 am</a>		</div>

		<p>@Henning</p>
<blockquote><p>
  The code in question is on a level of abstraction that does not know about TCP segments at all.
</p></blockquote>
<p>You wish. There was a certain webserver that expected request headers to be wholly in the first TCP segment received, otherwise it&#8217;d trigger an invalid request error. As a consequence it would always fail if the headers were longer than the network MSS, or if you tried to manually type in a request using telnet (instant failure the moment you pressed the first &#8216;H&#8217;).</p>
<p>Fortunately it got fixed, but some browsers still have workaround code for it (in any case sending the whole request at once it&#8217;s a good thing, so something good came out of it). That said it was hardly the only application that assumes TCP is packetized. Lots of stuff break if you lower the network MTU enough.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-710043">
				<div id="div-comment-710043" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">dave</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090218-00/?p=19103#comment-710043">
			February 19, 2009 at 9:30 am</a>		</div>

		<p>re: Henning</p>
<blockquote><p>
  The code in question is on a level of abstraction</p>
<p>  that does not know about TCP segments at all.
</p></blockquote>
<p>Unfortunately, I frequently see code written by people who think that because they wrote one send() call in their client code, exactly those bytes and no others will show up in the one recv() call they wrote in their server code.</p>
<p>And unfortunately, when they &#8216;tested&#8217; it on a nice quiet LAN, it did work like that.</p>
<p>Homework: write out 5000 times &quot;TCP is a byte-stream protocol&quot;.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-710053">
				<div id="div-comment-710053" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.theminorityreport.org/2009/seven-layers-of-hell/' rel='external nofollow' class='url'>Seven Layers of Hell | The Minority Report</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090218-00/?p=19103#comment-710053">
			February 19, 2009 at 10:43 am</a>		</div>

		<p>PingBack from <a rel="nofollow" target="_new" href="http://www.theminorityreport.org/2009/seven-layers-of-hell/" rel="nofollow">http://www.theminorityreport.org/2009/seven-layers-of-hell/</a></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-710083">
				<div id="div-comment-710083" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blog.henning.makholm.net/' rel='external nofollow' class='url'>Henning Makholm</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090218-00/?p=19103#comment-710083">
			February 19, 2009 at 12:35 pm</a>		</div>

		<p>Okay, my mind wasn&#8217;t depraved enough to imagine that somebody would think recv() calls on a stream socket would correspond directly to TCP segments, or to the other side&#8217;s send() calls. Yes, on reflection I can see it&#8217;s a misassumption that holds just often enough to trap the unwary.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-710143">
				<div id="div-comment-710143" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">dsn</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090218-00/?p=19103#comment-710143">
			February 19, 2009 at 2:23 pm</a>		</div>

		<p>My first assumption was that they were on comcast :P</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-710133">
				<div id="div-comment-710133" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">strik</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090218-00/?p=19103#comment-710133">
			February 19, 2009 at 2:06 pm</a>		</div>

		<p>@dave:</p>
<p>&gt; Unfortunately, I frequently see code written by</p>
<p>&gt; people who think that because they wrote one</p>
<p>&gt; send() call in their client code, exactly those</p>
<p>&gt; bytes and no others will show up in the one</p>
<p>&gt; recv() call they wrote in their server code.</p>
<p>You frequently see this? I *only* see this. At my work, I try to convince my collegues that this assumption is not good. Until now, I could not convince them, as in the field, everything works fine. There was no bug report ever for this, so, they still use this.</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

