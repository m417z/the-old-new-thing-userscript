<html>
<head>
<title>Why is there no support in the window manager for mouse button chording?</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>Why is there no support in the window manager for mouse button chording?</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>April 13, 2009 / year-entry #108</td></tr>
<tr><td><b>Tags:</b></td><td>other</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20090413-00/?p=18573</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>21</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">Commenter Nekto2 asks why there is no mouse action associated with "click both buttons at the same time". The window manager doesn't fire a special event for both mouse buttons held down simultaneously like it does for double-clicks. As with higher-order clicks, mouse chording is something that you have to put together yourself from the...</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>
Commenter Nekto2 asks
<a HREF="http://blogs.msdn.com/oldnewthing/pages/407234.aspx#550430">
why there is no mouse action associated with "click both
buttons at the same time"</a>.
</p>
<p>
The window manager doesn't fire a special event for <i>both mouse
buttons held down simultaneously</i> like it does for
double-clicks.
As with higher-order clicks,
mouse chording is something that you have to put together yourself
from the basic mouse events that the window manager generates.
Add these lines to our
<a HREF="http://blogs.msdn.com/oldnewthing/archive/2003/07/23/54576.aspx">
scratch program</a>:
</p>
<pre>
void OnButtonDown(HWND hwnd, BOOL fDoubleClick,
                  int x, int y, UINT keyFlags)
{
  if ((keyFlags &amp; (MK_LBUTTON | MK_RBUTTON)) ==
                      (MK_LBUTTON | MK_RBUTTON))
  {
    MessageBeep(IDOK);
  }
}

// Add to WndProc
    HANDLE_MSG(hwnd, WM_LBUTTONDOWN, OnButtonDown);
    HANDLE_MSG(hwnd, WM_RBUTTONDOWN, OnButtonDown);
</pre>
<p>
When you run this program, it beeps when both the left and right
mouse buttons are pressed.
</p>
<p>
Note that the program does not require the two button presses take
place simultaneously.
Most people do not have the dexterity to push the two buttons at
precisely the same instant in time.
(Especially since Einstein taught us that simultaneity is relative
anyway.)
</p>
<p>
Why don't more programs use chording?
</p>
<p>
Recall that the semantics of double-clicking should be an extension
of the single-click so that your program can perform the single-click
action immediately (providing positive feedback to the user that
the click was recognized), and then continue to the double-click action
if a second click comes in.
For example, a common pattern is for
the single-click to select the clicked-on item and the
double-click to launch it.
You can stop at the first click and the result still makes sense.
For chords, you have to have <i>two</i> stopping points,
one if the user left-clicks and stops, and another if the user
right-clicks and stops.
Coming up with a chord action that is compatible with both
stopping points requires more effort.
</p>
<p>
Another reason why many people choose to avoid chords in their
user interface design is that
chording requires more dexterity,
and many users simply don't have the fine motor control necessary
to pull it off without accidentally invoking some other action
(such as a drag).
Chording is also cumbersome to emulate with MouseKeys,
so you run afoul of accessibility issues.
</p>
<p>
Still, there's nothing technically preventing you from using
chording in your program.
If you want to code it up, then more power to you.</p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (21)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-725593">
				<div id="div-comment-725593" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">someone else</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090413-00/?p=18573#comment-725593">
			April 13, 2009 at 10:15 am</a>		</div>

		<p>The only place where I found the two-button click useful was in X with a two button mouse to emulate the middle click. And I still think that context menus are a much better way of doing it.</p>
<p>On the other hand, flipping (i. e. hold one button, click second, release first) rocks.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-725603">
				<div id="div-comment-725603" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://adamrosenfield.com' rel='external nofollow' class='url'>Adam Rosenfield</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090413-00/?p=18573#comment-725603">
			April 13, 2009 at 11:59 am</a>		</div>

		<p>I believe that Mac OS X and Linux have a feature that you can enable (it&#8217;s off by default) where clicking both mice button at once simulates a middle-click, in case the user doesn&#8217;t have a 3-button mouse. &nbsp;Of course, I&#8217;m sure many programs don&#8217;t anticipate this, so if they use the middle mouse button, they probably behave somewhat unexpectedly if the user has a noticeable delay between pressing one mouse button and pressing the other.</p>
<p>If a program used both the middle mouse button and left+right chords (with different functions), then I guess users without a 3-button mouse would be out of luck in either case. &nbsp;I would argue, though, that suck programs are not well-designed.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-725613">
				<div id="div-comment-725613" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">ajanata</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090413-00/?p=18573#comment-725613">
			April 13, 2009 at 12:03 pm</a>		</div>

		<blockquote><p>
  &gt; Chording is also cumbersome to emulate with MouseKeys, so you run afoul of accessibility issues.
</p></blockquote>
<p>Then what, exactly, does the * key do in MouseKeys? It shades both buttons on the notification icon, which to me says that it will click both buttons at the same time. If that&#8217;s supposed to be the middle button, it needs to be re-worked so it has three buttons in the icon.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-725623">
				<div id="div-comment-725623" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">ulric</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090413-00/?p=18573#comment-725623">
			April 13, 2009 at 1:56 pm</a>		</div>

		<p>the reply is right on the money.</p>
<p>Some 3D modeling apps do support two-buttons gestures to do some things (usually zooming related)</p>
<p>But even more 2D application (like photo editing) support pressing two keyboard keys like shift+ctrl during interaction.</p>
<p>it&#8217;s all the same really.</p>
<p>If you&#8217;re in the 1% of apps with non-trivial mouse interaction, all you use is the button up/down key up/down. &nbsp;I wonder what the OS could do better.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-725633">
				<div id="div-comment-725633" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">someone else</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090413-00/?p=18573#comment-725633">
			April 13, 2009 at 2:52 pm</a>		</div>

		<p>@Adam Rosenfield</p>
<p>This works reasonably well. The delay between the two button presses is adjustable (80ms by default IIRC), so both two-button clicking and flipping work. BTDT.</p>
<p>If an X program does indeed require a two-button click, the programmers should of course be tarred, feathered and forced to use a Mac boot camped with MS-DOS.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-725643">
				<div id="div-comment-725643" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Marc</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090413-00/?p=18573#comment-725643">
			April 13, 2009 at 4:32 pm</a>		</div>

		<p>@Adam Rosenfield: Windows 98 had that!</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-725663">
				<div id="div-comment-725663" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Richie</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090413-00/?p=18573#comment-725663">
			April 13, 2009 at 5:41 pm</a>		</div>

		<p>I can&#8217;t be the only one who thought of Minesweeper when reading this, right? &nbsp;In my mind, it&#8217;s the perfect application of this concept &#8212; chording in Minesweeper provides no functionality that isn&#8217;t available with a single left mouse click, but helps power users a lot.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-dean-harding odd alt thread-odd thread-alt depth-1" id="comment-725683">
				<div id="div-comment-725683" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Dean+Harding' rel='external nofollow' class='url'>Dean Harding</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090413-00/?p=18573#comment-725683">
			April 13, 2009 at 8:06 pm</a>		</div>

		<p>&quot;But even more 2D application (like photo editing) support pressing two keyboard keys like shift+ctrl during interaction.&quot;</p>
<p>That&#8217;s different, though, because the Ctrl key doesn&#8217;t have a meaning on it&#8217;s own and you can&#8217;t press A then CTRL and get the same behaviour as CTRL then A. Also, the keyboard doesn&#8217;t move around so the dexterity requirements are lower (you can also use two hands if you really need to)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-725713">
				<div id="div-comment-725713" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Falcon</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090413-00/?p=18573#comment-725713">
			April 13, 2009 at 9:57 pm</a>		</div>

		<blockquote><p>
  If you&#8217;re in the 1% of apps with non-trivial mouse interaction, all you use is the button up/down key up/down. &nbsp;I wonder what the OS could do better.
</p></blockquote>
<p>Well, isn&#8217;t it obvious? The OS and its APIs should account for all past, present and future needs of users/applications/developers from day one, and nothing less is acceptable! How dare they force people to implement features on their own??? :-p</p>
<p>Richie &#8211; good point, I can&#8217;t believe I didn&#8217;t think of Minesweeper! However, it did remind me of games like Street Fighter and Mortal Kombat, with all the &quot;special move&quot; stick/button combos.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-725723">
				<div id="div-comment-725723" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Nick Lamb</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090413-00/?p=18573#comment-725723">
			April 13, 2009 at 11:01 pm</a>		</div>

		<p>One option is right cancels left. So e.g. you begin some action by clicking the left button, and then you drag and release. But if during the drag you realise that you didn&#8217;t want to do this at all then rather than complete the action, and undo it, you can right click before releasing left to cancel the whole thing immediately. I&#8217;ve seen this in a few applications.</p>
<p>This isn&#8217;t quite like chording as most people think of it, but it overlaps in terms of method of input and programming approach.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-725733">
				<div id="div-comment-725733" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Worf</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090413-00/?p=18573#comment-725733">
			April 14, 2009 at 2:22 am</a>		</div>

		<p>In Linux and other PC-based *nix, the middle button may be absent, yet the X protocol specified that pressing middle pastes whatever highlighted text is present. Thus middle click is esstential.</p>
<p>In MacOS, the design philosophy is to make everything accessible via a &quot;left&quot; click, because you may have only one mouse button. Thus developers are encouraged to consider how someone may do an action with just one mouse button. Then they can consider right-click as a shortcut to do that action. (It infuriates me to no end when I find that to do something, I have to right-click in a specific spot, and there&#8217;s no obvious workaround in the menus or keyboard shortcuts. Right-clicking shouldn&#8217;t hide new functionality, but make life easier&#8230;)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-725743">
				<div id="div-comment-725743" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Sarkie</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090413-00/?p=18573#comment-725743">
			April 14, 2009 at 4:27 am</a>		</div>

		<p>Sorry if this has been answered, but why do you link to your 2003 Scratch program and not the 2005 updated one?</p>
<div class=post>[<i>Because this topic is simple enough that the simple scratch program works just fine. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-725763">
				<div id="div-comment-725763" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Nick Lamb</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090413-00/?p=18573#comment-725763">
			April 14, 2009 at 5:37 am</a>		</div>

		<p>Worf, the X protocol specifies nothing about the meaning of button clicks.</p>
<p>The use of middle button to paste the current selection is just an application convention, and it&#8217;s not &quot;essential&quot; since you can of course just use the clipboard, as follows:</p>
<p>• select text</p>
<p>• middle click paste current selection</p>
<p>becomes</p>
<p>• select text</p>
<p>• copy (typically Ctrl-C or menu)</p>
<p>• paste (typically Ctrl-V or menu again)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-725823">
				<div id="div-comment-725823" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Michael Hale</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090413-00/?p=18573#comment-725823">
			April 14, 2009 at 2:48 pm</a>		</div>

		<p>Hopefully they will have support for advanced chording in the Surface API, otherwise the Composer software will lack a lot of features.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-madq42 even thread-even depth-1" id="comment-725833">
				<div id="div-comment-725833" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/MadQ1' rel='external nofollow' class='url'>MadQ1</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090413-00/?p=18573#comment-725833">
			April 14, 2009 at 2:58 pm</a>		</div>

		<p>One of the few things I really miss from the Amiga is the ability to check/uncheck multiple menu items without dismissing the menu. Case in point: the Options menu of SysInternals&#8217; Process Explorer.</p>
<p>I guess it wouldn&#8217;t exactly be chording, but clicking the right mouse button on a menu item currently does nothing. It would be very convenient if a right-click could toggle menu item check marks and still leave the menu open, so that you could set all your options without repeatedly dropping down the menu. Of course, this behavior would probably break sole existing programs.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-725843">
				<div id="div-comment-725843" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">ulric</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090413-00/?p=18573#comment-725843">
			April 14, 2009 at 6:50 pm</a>		</div>

		<p>@dean harding:</p>
<p>the point was that the ctrl and atl chording is is solved the same was the chording mouse button is : with the existing messages.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-dean-harding even thread-even depth-1" id="comment-725893">
				<div id="div-comment-725893" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Dean+Harding' rel='external nofollow' class='url'>Dean Harding</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090413-00/?p=18573#comment-725893">
			April 15, 2009 at 12:12 am</a>		</div>

		<p>ulric: Oh sorry, I thought you were talking from the user&#8217;s perspective, not a developer&#8217;s perspective. Carry on, then :-)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-725953">
				<div id="div-comment-725953" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Neil</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090413-00/?p=18573#comment-725953">
			April 15, 2009 at 6:51 am</a>		</div>

		<p>I thought of Minesweeper too, and it&#8217;s really hard to play on a two-button mouse, and it&#8217;s even more annoying when you realise that right-mousing on a revealed square could have been used instead.</p>
<p>I don&#8217;t know whether it has improved recently but I remember finding it impossible to reliably detect mouse chording in Java and/or JavaScript.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-726313">
				<div id="div-comment-726313" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Worf</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090413-00/?p=18573#comment-726313">
			April 16, 2009 at 2:13 am</a>		</div>

		<p>@Nick Lamb: Actually, ctrl-c / ctrl-v doesn&#8217;t work very well in X. It&#8217;s dependent on the windowing environment &#8211; it usually doesn&#8217;t work between X, GNOME and KDE apps, for example, because there is no clipboard standard. Other than the plain old highlight-and-middle-click. Which only works for text. Copying non-text in X is an exercise in frustration (again, especially between X, GNOME, and KDE apps, but there seem to be others as well).</p>
<p>CTRL-C in an xterm or terminal wannabe usually ends up as SIGINT or something, so modern terminals use the PC/DOS shift-insert style.</p>
<p>Middle-click is about the only paste method that works in all X scenarios &#8211; down to simple x terminals I&#8217;ve used&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-727333">
				<div id="div-comment-727333" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Brian</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090413-00/?p=18573#comment-727333">
			April 17, 2009 at 5:19 pm</a>		</div>

		<p>Check out acme editor from Plan9/inferno, or if you&#8217;re on windows, try acme-sac. That&#8217;s an application where I see mouse chording is used a lot.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-727643">
				<div id="div-comment-727643" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">mobby_6kl</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090413-00/?p=18573#comment-727643">
			April 19, 2009 at 4:19 pm</a>		</div>

		<p>For another real world example where mouse button chording is an option, and a pretty useful one at that, try the Opera browser. I&#8217;m not sure if it&#8217;s enabled by default or as part of the optional mouse gestures, but left clicking while the right button is held down is Back, and the opposite is Forward. I find these to be easier to use than the equivalent gestures (right-click and drag right for forward, and left for backward), especially when using a laptop.</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

