<html>
<head>
<title>How can I make the touch keyboard appear automatically when focus enters an edit control in my program?</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>How can I make the touch keyboard appear automatically when focus enters an edit control in my program?</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>June 1, 2015 / year-entry #113</td></tr>
<tr><td><b>Tags:</b></td><td>code</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20150601-00/?p=45481</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>13</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">By default, the Windows 8 touch keyboard does not appear automatically when focus is placed on an edit control in a desktop program. To change the behavior for your program, just use this one weird trick: HRESULT EnableTouchKeyboardFocusTracking() { ComPtr<IInputPanelConfiguration> configuration; HRESULT hr = CoCreateInstance(__uuidof(InputPanelConfiguration), nullptr, CLSCTX_INPROC_SERVER, IID_PPV_ARGS(&configuration)); if (SUCCEEDED(hr)) { hr = configuration->EnableFocusTracking(); }...</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>
By default, the Windows 8 touch keyboard does not appear automatically
when focus is placed on an edit control in a desktop program.
To change the behavior for your program, just use
this one weird trick:
</p>
<pre>
HRESULT EnableTouchKeyboardFocusTracking()
{
  ComPtr&lt;IInputPanelConfiguration&gt; configuration;
  HRESULT hr =
    CoCreateInstance(__uuidof(InputPanelConfiguration), nullptr,
      CLSCTX_INPROC_SERVER, IID_PPV_ARGS(&amp;configuration));
  if (SUCCEEDED(hr)) {
    hr = configuration-&gt;<a HREF="https://msdn.microsoft.com/en-us/library/windows/desktop/jj126268(v=vs.85).aspx">EnableFocusTracking</a>();
  }
  return hr;
}
</pre>
<p>
You create an instance of the
<code>Input&shy;Panel&shy;Configuration</code> object
and ask it to enable focus tracking.
This is a per-process setting, and once set,
it cannot be unset.
</p>
<p>
Let's use this function in a Little Program so you can
play with it.
Most of the work in setting up the program is creating
two controls: an edit control and a button.
If I had just one control,
then you wouldn't be able to see how the keyboard automatically
appears and disappears when focus moves between an edit
control and some other type of control.
</p>
<p>
Remember that Little Programs do little to no error checking.
Start with
<a HREF="http://blogs.msdn.com/b/oldnewthing/archive/2003/07/23/54576.aspx">
the scratch</a> program and make these changes:
</p>
<pre>
#define STRICT
#include ...
<font COLOR=blue>#include &lt;shobjidl.h&gt;
#include &lt;inputpanelconfiguration.h&gt;
#include &lt;wrl\client.h&gt;
#include &lt;wrl\event.h&gt;

using namespace Microsoft::WRL;</font>

HINSTANCE g_hinst;                          /* This application's HINSTANCE */
HWND g_hwndChild;                           /* Optional child window */
<font COLOR=blue>HWND g_hwndButton;
HWND g_hwndLastFocus;

void
DoLayout(HWND hwnd, int cx, int cy)
{
  if (g_hwndChild) {
    MoveWindow(g_hwndChild, 0, 0, cx - 100, cy, TRUE);
  }
  if (g_hwndButton) {
    MoveWindow(g_hwndButton, cx - 100, 0, 100, 50, TRUE);
  }
}</font>

void
OnSize(HWND hwnd, UINT state, int cx, int cy)
{
  <font COLOR=blue>DoLayout(hwnd, cx, cy);</font>
}

BOOL
OnCreate(HWND hwnd, LPCREATESTRUCT lpcs)
{
  <font COLOR=blue>g_hwndChild = CreateWindow(TEXT("edit"), nullptr,
    WS_CHILD | WS_VISIBLE | WS_BORDER | ES_MULTILINE,
    0, 0, 100, 100, hwnd, nullptr, g_hinst, 0);
  g_hwndButton = CreateWindow(TEXT("button"), TEXT("Send"),
    WS_CHILD | WS_VISIBLE | BS_PUSHBUTTON,
    0, 0, 100, 100, hwnd, nullptr, g_hinst, 0);

  EnableTouchKeyboardFocusTracking();</font>
  return TRUE;
}

<font COLOR=blue>// <a HREF="http://blogs.msdn.com/b/oldnewthing/archive/2014/05/21/10527168.aspx">OnActivate</a> incorporated by reference.

 HANDLE_MSG(hwnd, WM_ACTIVATE, OnActivate);</font>

BOOL
InitApp(void)
{
  ...
  wc.hbrBackground = (HBRUSH)(<font COLOR=blue>COLOR_APPWORKSPACE</font> + 1);
  ...
}
</pre>
<p>
We position the edit control on the left hand side of the window
and put the button in the upper right corner.
We enable focus tracking on the touch keyboard,
and just to make it easier to see where the edit control is,
we give the frame with the app-workspace color.
</p>
<p>
Although we summon the touch keyboard when focus enters
the edit control,
we do nothing to prevent the keyboard from covering what the
user is typing.
This is one of the reasons that the touch keyboard does not
appear automatically when focus is placed in an edit control
of a desktop program.
It would end up covering the edit control the user is trying to type into!
</p>
<p>
We'll work on fixing this problem next week.</p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (13)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment byuser comment-author-wndsks even thread-even depth-1" id="comment-1243416">
				<div id="div-comment-1243416" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/skSdnW' rel='external nofollow' class='url'>skSdnW</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150601-00/?p=45481#comment-1243416">
			June 1, 2015 at 7:17 am</a>		</div>

		<p>There is one very annoying problem with the automatic touch keyboard, it seems to have some sort of connection to the old on screen keyboard.</p>
<p>Start osk.exe and minimize it, now try using the touch keyboard in a metro app!</p>
<p>Is there any way to disconnect the OSK from the touch keyboard?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-anonymouscommenter odd alt thread-odd thread-alt depth-1" id="comment-1243406">
				<div id="div-comment-1243406" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">anonymouscommenter</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150601-00/?p=45481#comment-1243406">
			June 1, 2015 at 7:49 am</a>		</div>

		<p>&gt; This is a per-process setting, and once set, it cannot be unset.</p>
<p>I can already see it. A third-party dynamically loaded DLL (shell extension, printer driver) enables that setting in its own dialog boxes, and doesn&#39;t turn it off. The host program cannot defend itself against it.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-anonymouscommenter even thread-even depth-1" id="comment-1243396">
				<div id="div-comment-1243396" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">anonymouscommenter</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150601-00/?p=45481#comment-1243396">
			June 1, 2015 at 7:50 am</a>		</div>

		<p>&quot;By default, the Windows 8 touch keyboard does not appear automatically when focus is placed on an edit control in a desktop program. To change the behavior for your program, just use this one weird trick.&quot;</p>
<p>Weirdest Buzzfeed headline ever.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-entegygmail-com odd alt thread-odd thread-alt depth-1" id="comment-1243386">
				<div id="div-comment-1243386" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Entegy' rel='external nofollow' class='url'>Entegy</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150601-00/?p=45481#comment-1243386">
			June 1, 2015 at 7:51 am</a>		</div>

		<p>Looking forward to next week&#39;s solutions then. I know you can &quot;anchor&quot; the touch keyboard, but that seems to work by reducing the desktop space to work with, squishing the app, and some apps don&#39;t take well to that.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1243376">
				<div id="div-comment-1243376" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Dan Bugglin</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150601-00/?p=45481#comment-1243376">
			June 1, 2015 at 8:07 am</a>		</div>

		<p>The touch keyboard does indeed appear when you focus edit controls in SOME desktop applications if it happens as the result of a touch action. Even if a hardware keyboard is connected.</p>
<p>I think this is only happening for Office applications (Lync/Outlook I tested quickly just now). I am not sure if it is the result of your code (you mention it should happen as a result of a focus, so even the mouse or hardware keyboard focusing does it I assume&#8230; which is not the case in Office).</p>
<p>Anyway the OS likes to move the window out of the way of the keyboard when it appears. In addition you can set the keyboard to dock to the bottom of the screen so windows CAN&#39;T go under it (which means all your windows are now resized and squished). I imagine your fix is going to invoke one of these if only because it&#39;s standard (and there&#39;s no better way to go about it, really).</p>
<div class="post">[<em>This API (plus the ones to be introduced over the next few weeks) is how Office does its touch keyboard magic. In other words: I&#39;m teaching you how to do magic. -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-anonymouscommenter odd alt thread-odd thread-alt depth-1" id="comment-1243356">
				<div id="div-comment-1243356" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">anonymouscommenter</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150601-00/?p=45481#comment-1243356">
			June 1, 2015 at 12:56 pm</a>		</div>

		<p>Typically settings that can be set but not unset are security features, like memory protection mechanisms. That way you can set them at program startup and malicious code cannot remove them.</p>
<p>In this case, though, I suspect that nobody thought that DisableFocusTracking() would be needed and thus there is no way to unset EnableFocusTracking().</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-davebacher even thread-even depth-1" id="comment-1243316">
				<div id="div-comment-1243316" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Dave+Bacher' rel='external nofollow' class='url'>Dave Bacher</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150601-00/?p=45481#comment-1243316">
			June 1, 2015 at 7:07 pm</a>		</div>

		<p>If you are implementing this in your app, please keep in mind&#8230;</p>
<p>It is often the single most annoying thing you can do to a user of a touch device.</p>
<p>When I am filling out a web form, and I touch a field to set focus &#8212; it does not follow that I&#39;m intending to use the touch keyboard to type. &nbsp;When you reflow the document twice every time I touch an input field, that gets real annoying, real fast. &nbsp;Unfortunately, Microsoft does not yet capture swear words spoken near the computer as part of the customer improvement program.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-anonymouscommenter odd alt thread-odd thread-alt depth-1" id="comment-1243306">
				<div id="div-comment-1243306" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">anonymouscommenter</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150601-00/?p=45481#comment-1243306">
			June 2, 2015 at 7:08 am</a>		</div>

		<p>@Dave Bacher: &nbsp;Hear, hear! &nbsp;You are EXACTLY right.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-anonymouscommenter even thread-even depth-1" id="comment-1243236">
				<div id="div-comment-1243236" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">anonymouscommenter</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150601-00/?p=45481#comment-1243236">
			June 2, 2015 at 7:55 am</a>		</div>

		<p>@Dave Bacher, yeah, I&#39;m usually found poking the touch screen in front of me, brutally stretching one of my arms from the keyboard and back, too! &nbsp;I guess that makes two of us! &nbsp;Wow, why didn&#39;t Microsoft thought of us all?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-anonymouscommenter odd alt thread-odd thread-alt depth-1" id="comment-1243226">
				<div id="div-comment-1243226" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">anonymouscommenter</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150601-00/?p=45481#comment-1243226">
			June 2, 2015 at 8:46 am</a>		</div>

		<p>I have a Windows 8 tablet (a real tablet form factor, with no built-in or detachable keyboard), and without the touch keyboard automatically appearing when I set focus, the tablet would be unusable. I&#39;m hoping that more applications implement this behavior.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-anonymouscommenter even thread-even depth-1" id="comment-1243196">
				<div id="div-comment-1243196" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">anonymouscommenter</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150601-00/?p=45481#comment-1243196">
			June 2, 2015 at 12:44 pm</a>		</div>

		<p>I suppose the &quot;right thing to do&quot; depends on a combination of whether your device HAS a keyboard, and what you are thinking when you touch the screen. &nbsp;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-anonymouscommenter odd alt thread-odd thread-alt depth-1" id="comment-1243176">
				<div id="div-comment-1243176" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">anonymouscommenter</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150601-00/?p=45481#comment-1243176">
			June 3, 2015 at 12:25 am</a>		</div>

		<p>I think in this case the &quot;right thing to do&quot; is probably &quot;whatever the user has indicated their preferred operation is via a setting&quot;.</p>
<p>And people who tap the screen while reading are probably a sub-set of text selection readers. &nbsp;Come to think of it I do both as well.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-anonymouscommenter even thread-even depth-1" id="comment-1242646">
				<div id="div-comment-1242646" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">anonymouscommenter</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150601-00/?p=45481#comment-1242646">
			June 7, 2015 at 10:51 am</a>		</div>

		<p>&quot;By default, the Windows 8 touch keyboard does not appear automatically when focus is placed on an edit control in a desktop program. To change the behavior for your program, just use this one weird trick&quot;</p>
<p>MSDN staffers hate him!</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

