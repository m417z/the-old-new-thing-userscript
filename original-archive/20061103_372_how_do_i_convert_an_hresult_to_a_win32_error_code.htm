<html>
<head>
<title>How do I convert an HRESULT to a Win32 error code?</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>How do I convert an HRESULT to a Win32 error code?</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>November 3, 2006 / year-entry #373</td></tr>
<tr><td><b>Tags:</b></td><td>code</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20061103-07/?p=29133</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>32</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">Everybody knows that you can use the HRESULT_FROM_WIN32 macro to convert a Win32 error code to an HRESULT, but how do you do the reverse? Let's look at the definition of HRESULT_FROM_WIN32: #define HRESULT_FROM_WIN32(x) \ ((HRESULT)(x) <= 0 ? ((HRESULT)(x)) \ : ((HRESULT) (((x) & 0x0000FFFF) | (FACILITY_WIN32 << 16) | 0x80000000))) If the value...</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>
Everybody knows that you can use the <code>HRESULT_FROM_WIN32</code>
macro to convert a Win32 error code to an <code>HRESULT</code>,
but how do you do the reverse?
</p>
<p>
Let's look at the definition of <code>HRESULT_FROM_WIN32</code>:
</p>
<pre>
#define HRESULT_FROM_WIN32(x) \
  ((HRESULT)(x) &lt;= 0 ? ((HRESULT)(x)) \
: ((HRESULT) (((x) & 0x0000FFFF) | (FACILITY_WIN32 &lt;&lt; 16) | 0x80000000)))
</pre>
<p>
If the value is less than or equal to zero, then the macro returns
the value unchanged.
Otherwise, it takes the lower sixteen bits and combines them with
<code>FACILITY_WIN32</code> and <code>SEVERITY_ERROR</code>.
</p>
<p>
How do you reverse this process?
How do you write the function
<code>WIN32_FROM_HRESULT</code>?
</p>
<p>
It's impossible to write that function since the mapping provided
by the <code>HRESULT_FROM_WIN32</code> function is not one-to-one.
I leave as an execise to draw the set-to-set mapping diagram
from <code>DWORD</code> to <code>HRESULT</code>.
(Original diagram removed since
<a HREF="http://blogs.msdn.com/oldnewthing/archive/2006/06/23/644239.aspx#647297">
people hate VML so much</a>,
and I can't use SVG since it requies XHTML.)
If you do it correctly, you'll have a single line
which maps 0&nbsp;to <code>S_OK</code>,
and a series of blocks that map blocks of 65536 error codes
into the same <code>HRESULT</code> space.
</p>
<!--
Let's draw a diagram that shows how the <code>HRESULT_FROM_WIN32</code>
function works:</p>
<table BORDER=0>
<tr>
<td STYLE="padding-top: 10pt">
<div>
<v:group style="position: relative;
                top: 0pt; left: 80pt; width: 300pt; height: 400pt;"
         coordsize="280,840" coordorigin="-80,-40">
 <v:textbox style="position: absolute;
                   top: -20; left: 0; width: 50; height: 20;
                   font-size: 12pt">Win32</v:textbox>
 <v:textbox style="position: absolute;
                   top: -20; left: 150; width: 50; height: 20;
                   font-size: 12pt">HRESULT</v:textbox>
 <v:rect style="position: absolute;
                top: 0; left: 0; width: 50; height: 40;"
         fillcolor="#FF8080" />
 <v:rect style="position: absolute;
                top: 40; left: 0; width: 50; height: 40;"
         fillcolor="#C0FF80" />
 <v:rect style="position: absolute;
                top: 80; left: 0; width: 50; height: 40;"
         fillcolor="#80C0FF" />
 <v:rect style="position: absolute;
                top:120; left: 0; width: 50; height: 40;"
         fillcolor="#C080FF" />
 <v:rect style="position: absolute;
                top:160; left: 0; width: 50; height: 40;"
         fillcolor="#FFFF80" />
 <v:rect style="position: absolute;
                top:200; left: 0; width: 50; height: 40;"
         fillcolor="#00FFC0" />
 <v:rect style="position: absolute;
                top:240; left: 0; width: 50; height: 40;"
         fillcolor="#FF40C0" />
 <v:rect style="position: absolute;
                top:280; left: 0; width: 50; height: 40;"
         fillcolor="#808000" />
 <v:rect style="position: absolute;
                top:320; left: 0; width: 50; height: 40;"
         fillcolor="#8080FF" />
 <v:rect style="position: absolute;
                top:360; left: 0; width: 50; height: 40;"
         fillcolor="#FF80FF" />
 <v:rect style="position: absolute;
                top: 400; left: 0; width: 50; height: 400;" />
 <v:rect style="position: absolute;
                top: 400; left: 50; width: 50; height: 400;" />
 <v:rect style="position: absolute;
                top: 400; left: 100; width: 50; height: 400;" />
 <v:shape style="position: absolute;
                 top: 0; left: 0; width: 200; height: 800;"
         coordsize="200,800" opacity="50%"
         fillcolor="#FF80FF">
  <v:path v="m 50,360 l 100,520 l 100,560 l 50,400 x" />
 </v:shape>
 <v:shape style="position: absolute;
                 top: 0; left: 0; width: 200; height: 800;"
         coordsize="200,800" opacity="50%"
         fillcolor="#8080FF">
  <v:path v="m 50,320 l 100,520 l 100,560 l 50,360 x" />
 </v:shape>
 <v:shape style="position: absolute;
                 top: 0; left: 0; width: 200; height: 800;"
         coordsize="200,800" opacity="50%"
         fillcolor="#808000">
  <v:path v="m 50,280 l 100,520 l 100,560 l 50,320 x" />
 </v:shape>
 <v:shape style="position: absolute;
                 top: 0; left: 0; width: 200; height: 800;"
         coordsize="200,800" opacity="50%"
         fillcolor="#FF40C0">
  <v:path v="m 50,240 l 100,520 l 100,560 l 50,280 x" />
 </v:shape>
 <v:shape style="position: absolute;
                 top: 0; left: 0; width: 200; height: 800;"
         coordsize="200,800" opacity="50%"
         fillcolor="#00FFC0">
  <v:path v="m 50,200 l 100,520 l 100,560 l 50,240 x" />
 </v:shape>
 <v:shape style="position: absolute;
                 top: 0; left: 0; width: 200; height: 800;"
         coordsize="200,800" opacity="50%"
         fillcolor="#FFFF80">
  <v:path v="m 50,160 l 100,520 l 100,560 l 50,200 x" />
 </v:shape>
 <v:shape style="position: absolute;
                 top: 0; left: 0; width: 200; height: 800;"
         coordsize="200,800" opacity="50%"
         fillcolor="#C080FF">
  <v:path v="m 50,120 l 100,520 l 100,560 l 50,160 x" />
 </v:shape>
 <v:shape style="position: absolute;
                 top: 0; left: 0; width: 200; height: 800;"
         coordsize="200,800" opacity="50%"
         fillcolor="#80C0FF">
  <v:path v="m 50,80 l 100,520 l 100,560 l 50,120 x" />
 </v:shape>
 <v:shape style="position: absolute;
                 top: 0; left: 0; width: 200; height: 800;"
         coordsize="200,800" opacity="50%"
         fillcolor="#C0FF80">
  <v:path v="m 50,40 l 100,520 l 100,560 l 50,80 x" />
 </v:shape>
 <v:shape style="position: absolute;
                 top: 0; left: 0; width: 200; height: 800;"
         coordsize="200,800" opacity="50%"
         fillcolor="#FF8080">
  <v:path v="m 50,0 l 100,520 l 100,560 l 50,40 x" />
 </v:shape>
 <v:line style="position: absolute;
                 top: 0; left: 0; width: 200; height: 800;"
         from="50 0" to="150 0" />
</v:group>
</div>
</td>
</tr>
</table>
<p>
The little sliver at the top is the mapping of zero to zero.
The big white box at the bottom is the mapping of all negative
numbers to corresponding negative numbers.
And the rainbow represents the mapping of all the positive
values, mod 65536, into the range 0x80070000 through 0x8007FFFF.
</p>
<p>-->
<p>
Notice that the values in the range 1 through 0x7FFFFFFFF
are impossible results from the <code>HRESULT_FROM_WIN32</code> macro.
Furthermore, values in the range 0x80070000 through 0x8007FFFF
could have come from quite a few original Win32 codes; you can't
pick just one.
</p>
<p>
But let's try to write the reverse function anyway:
</p>
<pre>
BOOL WIN32_FROM_HRESULT(HRESULT hr, OUT DWORD *pdwWin32)
{
 if ((hr &amp; 0xFFFF0000) == MAKE_HRESULT(SEVERITY_ERROR, FACILITY_WIN32)) {
  // Could have come from many values, but we choose this one
  *pdwWin32 = HRESULT_CODE(hr);
  return TRUE;
 }
 if (hr == S_OK) {
  *pdwWin32 = HRESULT_CODE(hr);
  return TRUE;
 }
 // otherwise, we got an impossible value
 return FALSE;
}
</pre>
<p>
Of course, we could have been petulant and just written</p>
<pre>
BOOL WIN32_FROM_HRESULT_alternate(HRESULT hr, OUT DWORD *pdwWin32)
{
 if (hr &lt; 0) {
  *pdwWin32 = (DWORD)hr;
  return TRUE;
 }
 // otherwise, we got an impossible value
 return FALSE;
}
</pre>
<p>
because the <code>HRESULT_FROM_WIN32</code> macro is idempotent:
<code>HRESULT_FROM_WIN32(HRESULT_FROM_WIN32(x)) ==
HRESULT_FROM_WIN32(x)</code>.
Therefore you would be technically correct if you declared that
the "inverse" function was trivial.
But in practice, people want to try to get "x" back out, so that's
what we give you.
</p>
<p>
Now that you understand how the <code>HRESULT_FROM_WIN32</code> macro
works, you can answer this question, based on an actual customer question:
</p>
<blockquote CLASS=q><p>
Sometimes, when I import data from a scanner, I get the error
"The directory cannot be removed."
What does this mean?
</p>
</blockquote>
<p>
You will have to use some psychic powers, but I think you're up to it.
</p>
<p>
One unfortunate aspect of both <code>HRESULT</code>s and
Win32 error codes is that there is no single header file that
contains all the errors.
This is understandable from a logistical point of view:
Multiple teams need to make up new error codes for their components,
but the <code>winerror.h</code> file is maintained by the kernel team.
If <code>winerror.h</code> were selected to be the master repository
for all error codes, it means that any team that wanted to add a new
error code or change an existing one would have to pester the kernel
team to make the change for them.
Things get even more complicated if those teams have their own SDK.
For example, suppose both the DirectX and Windows Media teams wanted
to include the new <code>winerror.h</code> in their corresponding SDKs.
If you install the SDKs in the wrong order (and how are you supposed to
know which should be installed first, DirectX 8 or WMSDK 6?),
you can end up regressing your <code>winerror.h</code> file.
It's the version conflict problem, but without the benefit of version
resources.
</p>
<p>
Many teams have prevailed upon the kernel team to reserve a chunk of
error codes just for them.
</p>
<table>
<tr>
<td>Networking</td>
<td ALIGN=RIGHT>2100&ndash;2999</td>
</tr>
<tr>
<td>Cluster</td>
<td ALIGN=RIGHT>5000&ndash;5999</td>
</tr>
<tr>
<td>Traffic Control</td>
<td ALIGN=RIGHT>7500&ndash;7999</td>
</tr>
<tr>
<td>Active Directory</td>
<td ALIGN=RIGHT>8000&ndash;8999</td>
</tr>
<tr>
<td>DNS</td>
<td ALIGN=RIGHT>9000&ndash;9999</td>
</tr>
<tr>
<td>Winsock</td>
<td ALIGN=RIGHT>10000&ndash;11999</td>
</tr>
<tr>
<td>IPSec</td>
<td ALIGN=RIGHT>13000&ndash;13999</td>
</tr>
<tr>
<td>Side By Side</td>
<td ALIGN=RIGHT>14000&ndash;14999</td>
</tr>
</table>
<p>
There is room for only 65535 Win32 error codes, and over an eighth
of them have already been carved out by these "block assignments".
I wonder if we will eventually run out of error codes prematurely
due to having given away error codes in too-large chunks.
(Some sort of analogy with IPv4 could be made here but I'm not going to try.)</p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (32)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-439123">
				<div id="div-comment-439123" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">David Walker</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20061103-07/?p=29133#comment-439123">
			November 3, 2006 at 11:15 am</a>		</div>

		<p>Oh, surely you could make an analogy with IPV4, if you really try! &nbsp;:-)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-439133">
				<div id="div-comment-439133" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">kokorozashi</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20061103-07/?p=29133#comment-439133">
			November 3, 2006 at 11:21 am</a>		</div>

		<p>Reserving ranges of error codes has a cultural solution. As long as everyone on the inside of the firewall buys in, they can go to a central authority to request blocks as needed. 20 seems to be a good default block size. The central authority keeps track of which technologies have which blocks but doesn&#8217;t care about the individual values within each block. The values can be declared in any header that&#8217;s convenient at the time and moved into a central header once they&#8217;ve stabilized (shipped). The trick is in establishing the culture.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-439143">
				<div id="div-comment-439143" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.johnburnett.com/' rel='external nofollow' class='url'>John Burnett</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20061103-07/?p=29133#comment-439143">
			November 3, 2006 at 11:55 am</a>		</div>

		<p>Did VML kick that commenter&#8217;s dog and run off with his wife? &nbsp;Please don&#8217;t let a few bad apples spoil the use of a good teaching aid&#8230; &nbsp;Besides, if they&#8217;re reading this blog, they should have &quot;it&#8217;s for backwards compatibility!&quot; pounded into their head by now.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-439153">
				<div id="div-comment-439153" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.dimastr.com' rel='external nofollow' class='url'>Dmitry Streblechenko</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20061103-07/?p=29133#comment-439153">
			November 3, 2006 at 12:44 pm</a>		</div>

		<p>Speaking of error codes, the Exchange error lookup utility <a rel="nofollow" target="_new" href="http://www.microsoft.com/downloads/details.aspx?familyid=be596899-7bb8-4208-b7fc-09e02a13696c&amp;displaylang=en" rel="nofollow">http://www.microsoft.com/downloads/details.aspx?familyid=be596899-7bb8-4208-b7fc-09e02a13696c&#038;displaylang=en</a> &nbsp;is worth its weight in gold…</p>
<p>It is not at all Exchange specific, just created by the Exchange team.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-439163">
				<div id="div-comment-439163" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Mark Sowul</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20061103-07/?p=29133#comment-439163">
			November 3, 2006 at 2:36 pm</a>		</div>

		<p>I agree, please don&#8217;t remove your diagrams because a few people are whining about them. &nbsp;Something is better than nothing.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-maurits odd alt thread-odd thread-alt depth-1" id="comment-439183">
				<div id="div-comment-439183" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Maurits+%5BMSFT%5D' rel='external nofollow' class='url'>Maurits [MSFT]</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20061103-07/?p=29133#comment-439183">
			November 3, 2006 at 3:38 pm</a>		</div>

		<p>Why not just use an &lt;img&gt; for diagrams?</p>
<div class=post>[<i><a href="http://blogs.msdn.com/oldnewthing/archive/2006/06/23/644239.aspx#644570" rel="nofollow">I already answered this</a>. Besides, bitmaps don&#8217;t resize well. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-439193">
				<div id="div-comment-439193" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Cody</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20061103-07/?p=29133#comment-439193">
			November 3, 2006 at 3:51 pm</a>		</div>

		<p>&quot;Why not just use an &lt;img&gt; for diagrams?&quot;</p>
<p>Because he can&#8217;t upload to the blog. &nbsp;If he really wanted he could host them on Photobucket or some such, but meh.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-439203">
				<div id="div-comment-439203" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">more and more errors in future versions of Windows ;p</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20061103-07/?p=29133#comment-439203">
			November 3, 2006 at 4:29 pm</a>		</div>

		<blockquote><p>
  I wonder if we will eventually run out of error codes prematurely due to having given away error codes in too-large chunks.
</p></blockquote>
<p>Well when that day comes, they&#8217;ll just add an GetLastErrorEx() function to get an extended error code. &nbsp;GetLastError() would then be deprecated and will return a fixed value for all the errors that don&#8217;t fit in the old range of error values.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-439213">
				<div id="div-comment-439213" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">andy</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20061103-07/?p=29133#comment-439213">
			November 3, 2006 at 4:38 pm</a>		</div>

		<p>No matter how many problems there are with exceptions this is one area where it beats error codes totally:</p>
<p>Win32Exception</p>
<p>|</p>
<p>+&#8211; NetworkException</p>
<p>+&#8211; ClusterException</p>
<p>+&#8211; TrafficControlException</p>
<p>+&#8211; ADException</p>
<p>+&#8211; DNSException</p>
<p>+&#8211; WinsockException</p>
<p>+&#8211; IPSecException</p>
<p>+&#8211; SoSException</p>
<p>(Guess you were expecting a comment like this ;)</p>
<p>Btw: I&#8217;ll happily startup Internet Explorer (even download the newest version) if it is required to read this blog. There are Firefox-extensions available to quickly open a page in Internet Explorer&#8230; so please do not worry so much about the anti-VML crowd!</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-439113">
				<div id="div-comment-439113" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">BryanK</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20061103-07/?p=29133#comment-439113">
			November 3, 2006 at 11:07 am</a>		</div>

		<p>&gt; I get the error &quot;The directory cannot be removed.&quot; What does this mean?</p>
<p>It very likely means something is using WIA instead of TWAIN, and trying to map a WIA error HRESULT to a Win32 error code to get an error description string out of it. &nbsp;(Because AFAIK there&#8217;s no way to get *any* description strings out of a general HRESULT, unless the class that generated the error supports IErrorInfo.)</p>
<p>The reverse mapping is colliding, and they chose whatever Win32 error code maps to &quot;the directory cannot be removed&quot;.</p>
<p>What they should probably do is provide the full HRESULT value instead, which can then be looked up in the WIA docs (hopefully) or the information provided by the WIA provider (hah, yeah right!). &nbsp;Of course this is probably &quot;confusing&quot; to the user &#8212; but I&#8217;d say it&#8217;s no more confusing than &quot;the directory cannot be removed&quot;!</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-439233">
				<div id="div-comment-439233" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Goran</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20061103-07/?p=29133#comment-439233">
			November 4, 2006 at 12:17 am</a>		</div>

		<p>-1 for andy</p>
<p>Yes, exceptions are mostly superior for error handling, but what<br />
about code in languages without them (C)? Also, changing behaviour of<br />
existing APIs would break too much existing code. (That said, I like<br />
that giving bad HTREEITEM to TreeCtrl takes me down!)</p>
<p>+1 for kokorozashi</p>
<p>In fact, the whole process could be 100% automated. Warning: little<br />
Peter&#8217;s business process follows! One sends a mail (to:<br />
&#8220;WinError.h@kerneldevs.ms.com&#8221; subject: &#8220;New Error Code&#8221; body:<br />
&#8220;MY_ERROR_CODE&#8221;) to a server; server modifies WinError.h and responds<br />
to you (&#8220;ready, MY_ERROR_CODE is 1234567&#8221;); one gets WinError.h from<br />
source control!</p>
<div class="post">[<i>That doesn&#8217;t solve the SDK distribution problem,<br />
though, as I noted in the article. There&#8217;s also more to adding an error<br />
code to the system than just getting a number assigned. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-439243">
				<div id="div-comment-439243" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://ashleigh.id.au' rel='external nofollow' class='url'>Ashleigh</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20061103-07/?p=29133#comment-439243">
			November 4, 2006 at 4:55 am</a>		</div>

		<p>Take a look at the way Vax / VMS managed error codes. It was way cool. A 32 bit number encoded all manner of goodies, including the sub-system, severity, error, etc.</p>
<p>AND it was extensible by a user&#8230; they had some magic method of loading new error definitions from a file into a running system, and it applied on a per-user basis.</p>
<p>Way superior to anything I have ever seen, before or since.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-439263">
				<div id="div-comment-439263" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://deadnode.org/sw/' rel='external nofollow' class='url'>James</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20061103-07/?p=29133#comment-439263">
			November 4, 2006 at 3:44 pm</a>		</div>

		<p>Yes, Andy, there&#8217;s an extension for Firefox (IETab) which opens<br />
pages in IE. Now I just need to find the URL for the Mac version of IE<br />
&#8230; oh wait. It seems to have disappeared for some reason&#8230;</p>
<p>The update &#8216;problem&#8217; isn&#8217;t a real problem, though: nothing even the<br />
most trivial versioning system wouldn&#8217;t solve. When I install Foo SDK,<br />
which installs winerror.h version 1437; installing Bar SDK the next<br />
day, which included version 1293, detects it&#8217;s an older version and<br />
doesn&#8217;t override.</p>
<p>Having said that, there&#8217;s a better reason for using blocks: as<br />
Ashleigh mentions about VMS, it gives you an identity of the subsystem<br />
which returned an error, even without looking up the specifics of that<br />
particular error code.</p>
<p>The aliasing problem rears its ugly head quite often (that, or lazy<br />
error handling!): a certain word processing application happens to give<br />
rather a lot of &#8220;out of memory&#8221; errors when printing goes wrong, even<br />
when there&#8217;s plenty of memory&#8230;</p>
<div class="post">[<i>And as I noted in the posting, text files don&#8217;t<br />
have version resources. Besides, you create the new problem that a base<br />
header file (winerror.h) is being shipped &#8220;out of band&#8221;. Managing out<br />
of band releases is a major headache. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-439283">
				<div id="div-comment-439283" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Paul Dougherty</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20061103-07/?p=29133#comment-439283">
			November 4, 2006 at 8:59 pm</a>		</div>

		<p>VxDs had an ID code range issue too. (ID codes are used by 16-bit user-level code to interface to VxDs). Originally, MS handed out ranges of IDs, but MS had to stop because they were going to run out. &nbsp;Instead, you had to request each ID individually.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-439313">
				<div id="div-comment-439313" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://deadnode.org/sw/' rel='external nofollow' class='url'>James</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20061103-07/?p=29133#comment-439313">
			November 5, 2006 at 4:28 am</a>		</div>

		<p>&#8220;And as I noted in the posting, text files don&#8217;t have version resources.&#8221;</p>
<p>True, for now; on the other hand, a decade ago Windows didn&#8217;t have anti-aliasing either. Adding a version number to a text file isn&#8217;t exactly the halting problem.</p>
<p>&#8220;Besides, you create the new problem that a base header file (winerror.h) is being shipped &#8220;out of band&#8221;. Managing out of band releases is a major headache.&#8221;</p>
<p>Utterly trivial, given a dependency tracking system: Foo SDK v2 depends on Core SDK v1.3. Now you just need some sort of Update facility for Microsoft products&#8230;</p>
<p>(Indeed, I seem to recall one specifically for the various SDKs available, although I haven&#8217;t seen it recently.)</p>
<div class="post">[<i>But where do you put the version number? You can&#8217;t put it in the file name (obviously since that makes it a different file), and you can&#8217;t put it in the content since there is nowhere to put it without changing the semantics of the file. And FTP and email attachments destroy any other metadata. (I don&#8217;t see how a dependency system &#8220;solves&#8221; the out-of-band release problem. &#8220;I downloaded some source code from MSDN and it doesn&#8217;t build. I asked my friends and one of them told me I needed to run a dependency tracker (Who knew?). The dependency tracker says I need to download and install version 22.1.5.1 of the ODBC SDK. What the heck is that all about? I&#8217;m not using ODBC! Or, &#8220;I just downloaded the latest DirectX SDK and it tells me that it has a dependency on ODBC 22.1.5.1. What the heck is that all about?&#8221; -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-439333">
				<div id="div-comment-439333" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Stefan Kuhr</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20061103-07/?p=29133#comment-439333">
			November 5, 2006 at 2:30 pm</a>		</div>

		<p>Hi Raymond,</p>
<p>I don&#8217;t see why anyone should run out of numbers, because it is not only the lower word and the error bit that makes up error codes found in winerror.h. You still have the facility bits and for me the facility bits seem to be a natural choice for error codes of different teams. This is also what the error codes in winerror.h suggest, where there are at least 14 facility codes defined. Or are even the facility bits owned by the kernel team?</p>
<p>(At least this is how we did it in the company I am working for: Our error codes all have bit 29 set and every team gets a facility assigned. Within that per-team-facility, the team is free to assign error codes on their own in the low word of the error code.)</p>
<div class=post>[<i>You&#8217;re confusing HRESULTs and Win32 error codes. HRESULTs have facility bits. Win32 error codes don&#8217;t. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-439373">
				<div id="div-comment-439373" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Carlos</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20061103-07/?p=29133#comment-439373">
			November 5, 2006 at 9:22 pm</a>		</div>

		<p>A unified error numbers file causes other problems. &nbsp;Every module in your system will have a dependency on it, so whenever you add a new error number (which may be for something peripheral) you need to rebuild the entire system. &nbsp;This is usually impracticable.</p>
<p>You can cheat by pretending the dependency doesn&#8217;t really exist (which is what vc++ used to do with resource files). &nbsp;This works most of the time, but can result in some very nasty bugs if you actually did need to rebuild everything.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-dean-harding odd alt thread-odd thread-alt depth-1" id="comment-439403">
				<div id="div-comment-439403" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Dean+Harding' rel='external nofollow' class='url'>Dean Harding</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20061103-07/?p=29133#comment-439403">
			November 5, 2006 at 10:36 pm</a>		</div>

		<p>I&#8217;d say the way you&#8217;d implement the &quot;versioned header file&quot; thing would be that the file itself wasn&#8217;t versioned, but that the package it was included in was &#8211; and in the case of a &quot;global error code&quot; file, it would be included in a package all of its own.</p>
<p>So ODBC v3.45.2 might depend on &quot;global header file&quot; v12.34.5 and Windows Media SDK v9.6.3 might depend on &quot;global header file&quot; v12.43.2. Your package management program would ensure that you always have the required version of &quot;global header file&quot; when you go to download its dependent SDK.</p>
<p>A sample on MSDN might say, &quot;this sample requires version 9.32 of the Windows Media SDK to compile&quot; which would, in turn, require a certain version of the &quot;global header file&quot; package.</p>
<p>Of course, that&#8217;s a pretty big effort just so you can have one place to look for error codes, and I&#8217;d say there&#8217;s plenty of BETTER reasons for developing an SDK update site than this one&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-439343">
				<div id="div-comment-439343" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://deadnode.org/sw/' rel='external nofollow' class='url'>James</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20061103-07/?p=29133#comment-439343">
			November 5, 2006 at 3:35 pm</a>		</div>

		<p>&#8220;But where do you put the version number? You can&#8217;t put it in the file name (obviously since that makes it a different file), and you can&#8217;t put it in the content since there is nowhere to put it without changing the semantics of the file.&#8221;</p>
<p>Er &#8211; no comments in your source code?</p>
<p>/* winerror.h v 3.14 (05 Nov 2006) */</p>
<p>Or define a preprocessor symbol, so any code using the header can check versions for itself.</p>
<p>&#8220;I don&#8217;t see how a dependency system &#8220;solves&#8221; the out-of-band release problem. &#8220;I downloaded some source code from MSDN and it doesn&#8217;t build.&#8221;</p>
<p>Or: &#8220;I downloaded some source from MSDN which said it needs winerror.h version 3.14, and the comment in my copy of winerror.h says it&#8217;s only version 3.11. Do you think that means I need an update?&#8221; Run the updater, end of problem.</p>
<p>&#8220;The dependency tracker says I need to download and install version 22.1.5.1 of the ODBC SDK. What the heck is that all about?&#8221;</p>
<p>Well, that hypothetical update site would help out there. Or a search for &#8216;odbc sdk&#8217;. Apart from which: does all your ODBC code compile just fine with a very old SDK, or none at all? If so, how? Of course, I was assuming said tracker would do the downloading, or explain it.</p>
<div class="post">[<i>Sure, a comment might work for a C/C++ header file, but what about a readme file or an HTML file or an XML file? They&#8217;re text files too. As for the dependency tracker: I bet most of the time, people who run into a build problem don&#8217;t say &#8220;Let me run the header file updater; that&#8217;ll fix it.&#8221; Often, updating your header files introduces a new problem. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-439453">
				<div id="div-comment-439453" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">dave</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20061103-07/?p=29133#comment-439453">
			November 6, 2006 at 8:19 am</a>		</div>

		<blockquote><p>
  Take a look at the way Vax / VMS managed</p>
<p>  error codes. It was way cool. A 32 bit</p>
<p>  number encoded all manner of goodies,</p>
<p>  including the sub-system, severity, error,</p>
<p>  etc.
</p></blockquote>
<p>And that&#8217;s how the NT kernel, and some OS-provided usermode stuff, handles error codes. For fairly obvious reasons :-)</p>
<p>Here&#8217;s a snippet from ntstatus.h, which is output by the message compiler (I hope it survives posting with format intact).</p>
<p>// &nbsp;Values are 32 bit values layed out as follows:</p>
<p>//</p>
<p>// &nbsp; 3 3 2 2 2 2 2 2 2 2 2 2 1 1 1 1 1 1 1 1 1 1</p>
<p>// &nbsp; 1 0 9 8 7 6 5 4 3 2 1 0 9 8 7 6 5 4 3 2 1 0 9 8 7 6 5 4 3 2 1 0</p>
<p>// &nbsp;+&#8212;+-+-+&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8211;+&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;-+</p>
<p>// &nbsp;|Sev|C|R| &nbsp; &nbsp; Facility &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;| &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Code &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;|</p>
<p>// &nbsp;+&#8212;+-+-+&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8211;+&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;-+</p>
<p>The trouble comes from Win32 error codes, which are just plain integers (I assume for back-compatibility with 16 bit code, which was in turn back-compatible with DOS).</p>
<p>And then there&#8217;s the fact that HRESULTs are sort-of similar to NT status codes, but different (there&#8217;s some detail in the high bits that I&#8217;ve forgotten about).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-439533">
				<div id="div-comment-439533" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://deadnode.org/sw/' rel='external nofollow' class='url'>James</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20061103-07/?p=29133#comment-439533">
			November 6, 2006 at 11:34 am</a>		</div>

		<p>I was referring to header files specifically, rather than text files in general, although comments should also work for versioning HTML or XML files in a similar way. I&#8217;d say that even among users who still have the mouse on the floor and wonder why the foot pedal doesn&#8217;t do anything could generally figure out that the error &#8216;this software requires a newer version of &#8230;&#8217; means they need to update something.</p>
<p>Dean: Whatever the reasons, presumably they seemed good enough at one point: <a href="http://www.microsoft.com/msdownload/platformsdk/sdkupdate/" target="_new" rel="nofollow">http://www.microsoft.com/msdownload/platformsdk/sdkupdate/</a></p>
<div class="post">[<i>The error message isn&#8217;t &#8220;This software requires a new version of&#8230;&#8221; The error message is &#8220;undeclared identifier&#8221;. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-dean-harding odd alt thread-odd thread-alt depth-1" id="comment-439723">
				<div id="div-comment-439723" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Dean+Harding' rel='external nofollow' class='url'>Dean Harding</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20061103-07/?p=29133#comment-439723">
			November 6, 2006 at 5:36 pm</a>		</div>

		<p>James: I know there&#8217;s plenty of good reasons for having one. It&#8217;s just not THIS reason ;)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-439473">
				<div id="div-comment-439473" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Peter</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20061103-07/?p=29133#comment-439473">
			November 6, 2006 at 10:17 am</a>		</div>

		<p>RCS, a standard source control system for Unix, has largely solved the &#8216;put a version number in a text file&#8217; problem. &nbsp;The ID string starts off like this:</p>
<p>$Id$</p>
<p>and is converted by RCS to look like this:</p>
<p>$Id:zzzzzzz$</p>
<p>where zzzzz is the id number. &nbsp;In normal practice, the $Id$ is put into a comment:</p>
<p>/* For C and C++: $Id$ */</p>
<p>C &nbsp; &nbsp;FOR FORTRAN IV $Id$</p>
<p>REM &nbsp;For Basic $Id$</p>
<p>Some of the downsides: humans have to be clever enough to find a space that is properly compatible, the length of the ID string is variable (so no putting it into a Hollerith constant, Fortran fans!).</p>
<p>And to give Raymond the biggest reason against the system that I can think of: if Microsoft picked this system blindly, they would be &#8220;polluting&#8221; RCS: they would be shipping files that can&#8217;t easily be put into an end-user&#8217;s RCS system.</p>
<div class="post">[<i>But the file version in the file isn&#8217;t the same as the internal version in revision control. For example, if you look at the file version of kernel32.dll, it&#8217;s a 128-bit value (broken into four 32-bit fields), not a simply incrementing number. File version information is more than just a number, too. You need language information, publisher information, etc. And some text files don&#8217;t have the ability to &#8220;hide&#8221; text in the form of comments. (E.g., /usr/dict/words, .reg files) -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-439873">
				<div id="div-comment-439873" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">stegus</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20061103-07/?p=29133#comment-439873">
			November 7, 2006 at 4:27 am</a>		</div>

		<p>Hmm, Raymond, I am not sure what you are trying to say here.</p>
<p>As far as I understand, HRESULT_FROM_WIN32(x) should be used to get<br />
a HRESULT from a windows error code &#8211; or more specifically a value<br />
returned by GetLastError().</p>
<p>Are you saying that GetLastError() sometimes return a value &gt; 0xffff ?</p>
<p>Or, are you saying that the values returned by GetLastError() can overlap between different parts of windows ?</p>
<p>Or, are you saying that some developers mistakenly use HRESULT_FROM_WIN32(x) with non-windows error codes?</p>
<p>Or, are you saying that some developers assume that the lower 16<br />
bits of an arbitrary HRESULT can always be passed to FormatMessage<br />
regardless of the Facility code ?</p>
<p>The way I have interpreted the situation is that GetLastError()<br />
always returns a unique 16-bit value for each error, and you can pass<br />
that code to FormatMessage to get the error message text.</p>
<p>If you use HRESULT_FROM_WIN32(x) as it is intended &#8211; by inserting a<br />
16-bit windows error code, it is very possible to perform the reverse<br />
operation. That is exactly what your WIN32_FROM_HRESULT function does.</p>
<div class="post">[<i>My point is that not all HRESULTs come from Win32. See the puzzle. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-439813">
				<div id="div-comment-439813" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://cs.usu.edu.ru/home/skrobov/' rel='external nofollow' class='url'>A. Skrobov</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20061103-07/?p=29133#comment-439813">
			November 6, 2006 at 10:23 pm</a>		</div>

		<p>Would this be the solution?</p>
<p>* all error codes are collected into a single versionable binary file, like a TLB or a database;</p>
<p>* each SDK installer first updates the database, then generates winerror.h from the updated database.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-440203">
				<div id="div-comment-440203" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">stegus</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20061103-07/?p=29133#comment-440203">
			November 7, 2006 at 1:21 pm</a>		</div>

		<p>I&#8217;m sorry, but this time you are really not making yourself very clear.</p>
<p>In your post, you where talking about implementing an inverse for the macro HRESULT_FROM_WIN32 &#8211; this is no problem at all if the macro is used as it is intended (with 16-bit values)</p>
<p>Now it seems that your real point is that it is impossible to retrieve a win32 error code from an arbitrary HRESULT. Of course this is true. You can only ever hope to retreive a win32 error code if the facility of the HRESULT is FACILITY_WIN32.</p>
<p>The facility defines how to interpret the error code. If the facility is FACILITY_ITF for example, the error code is private to the interface that returned the error, which means that the only way to get any information about the interpretation about the code is to consult the documentation for the interface you are calling.</p>
<p>All of this has nothing to do with implementing an inverse for HRESULT_FROM_WIN32. </p>
<p>A HRESULT with another facility than FACILITY_WIN32 was never created with that macro in the first place.</p>
<div class=post>[<i>As with most of my entries, the topic was inspired by a question, in this case, the title question. It came from the customer whose question was highlighted at the end. The point is that the mapping between HRESULT and Win32 errors is not one-to-one. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-440253">
				<div id="div-comment-440253" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">stegus</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20061103-07/?p=29133#comment-440253">
			November 7, 2006 at 2:11 pm</a>		</div>

		<p>It is true that it is not possible to extract a win32 error from any arbitrary HRESULT, but the reason for this is NOT that HRESULT_FROM_WIN32 maps multiple different error codes to the same HRESULT.</p>
<p>The answer to the question in the title: &quot;How do I convert an HRESULT to a Win32 error code?&quot; is very simple:</p>
<p>If the facility code is FACILITY_WIN32, the win32 error code should be in the lower 16 bits, if any other facility &#8211; it is impossible to get a win32 error code.</p>
<p>You are confusing the issue by talking about how HRESULT_FROM_WIN32 maps multiple different error codes to the same HRESULT. This is not true if the macro is used as intended, and in any case it is simply not relevant for what you are trying to say.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-441373">
				<div id="div-comment-441373" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blogs.msdn.com/oldnewthing/archive/2006/11/10/1054354.aspx' rel='external nofollow' class='url'>The Old New Thing</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20061103-07/?p=29133#comment-441373">
			November 10, 2006 at 10:00 am</a>		</div>

		<p>Here&#8217;s that mapping diagram.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-441973">
				<div id="div-comment-441973" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Neil</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20061103-07/?p=29133#comment-441973">
			November 13, 2006 at 9:09 am</a>		</div>

		<p>Sorry if I&#8217;ve overlooked this one, but why does Win32 use error codes instead of HRESULTs?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-441983">
				<div id="div-comment-441983" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">BryanK</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20061103-07/?p=29133#comment-441983">
			November 13, 2006 at 9:38 am</a>		</div>

		<p>Because Win32 isn&#8217;t COM, and HRESULTs are a COM thing.</p>
<p>;-)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-539323">
				<div id="div-comment-539323" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://addref.wordpress.com/2007/08/20/error-codes-win32-vs-hresult-vs-ntstatus/' rel='external nofollow' class='url'>Error Codes: Win32 vs. HRESULT vs. NTSTATUS &laquo; JP&#8217;s blog</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20061103-07/?p=29133#comment-539323">
			August 20, 2007 at 12:10 pm</a>		</div>

		<p>PingBack from <a rel="nofollow" target="_new" href="http://addref.wordpress.com/2007/08/20/error-codes-win32-vs-hresult-vs-ntstatus/" rel="nofollow">http://addref.wordpress.com/2007/08/20/error-codes-win32-vs-hresult-vs-ntstatus/</a></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-570023">
				<div id="div-comment-570023" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://jpassing.wordpress.com/2007/08/20/error-codes-win32-vs-hresult-vs-ntstatus/' rel='external nofollow' class='url'>Error Codes: Win32 vs. HRESULT vs. NTSTATUS &laquo; JP&#8217;s Blog</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20061103-07/?p=29133#comment-570023">
			November 25, 2007 at 2:05 pm</a>		</div>

		<p>PingBack from <a rel="nofollow" target="_new" href="http://jpassing.wordpress.com/2007/08/20/error-codes-win32-vs-hresult-vs-ntstatus/" rel="nofollow">http://jpassing.wordpress.com/2007/08/20/error-codes-win32-vs-hresult-vs-ntstatus/</a></p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

