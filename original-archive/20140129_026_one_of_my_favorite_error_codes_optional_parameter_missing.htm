<html>
<head>
<title>One of my favorite error codes: Optional parameter missing</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>One of my favorite error codes: Optional parameter missing</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>January 29, 2014 / year-entry #27</td></tr>
<tr><td><b>Tags:</b></td><td>code</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20140129-00/?p=1933</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>25</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">The error Optional parameter missing sounds awfully paradoxical, doesn't it. I mean, if the parameter is optional, why are you complaining that it's missing? This KB article explains why, specifically, the part that says, "If a parameter is omitted, the calling program must&hellip;". For those who don't want to click through, here's the deal: Methods...</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>The error <i>Optional parameter missing</i> sounds awfully paradoxical, doesn't it. I mean, if the parameter is optional, why are you complaining that it's missing?</p>
<p> <a href="http://support.microsoft.com/kb/154039"> This KB article explains why</a>, specifically, the part that says, "If a parameter is omitted, the calling program must&hellip;". </p>
<p> For those who don't want to click through, here's the deal: Methods described in a type library can declare parameters as optional. Optional parameters must come at the end of the parameter list, of course. The catch is how you programmatically invoke a method that contains optional parameters. </p>
<p> If you want to call a method that has optional parameters, you still have to pass the parameters. But you have to pass them a special way so that the method knows that they were omitted. (Specifically, you have to pass them as type <code>VT_<wbr>ERROR</wbr></code>, code <code>DISP_<wbr>E_<wbr>PARAM&shy;NOT&shy;FOUND</wbr></wbr></code>.) </p>
<p> In other words, an optional parameter is optional from the high-level language, but it isn't optional at the low-level interface. Rather the <code>optional</code> keyword instructs the scripting engine to deploy syntactic sugar and allow the script to omit the parameters. The scripting engine then must follow specific rules in providing values for the parameters that were omitted by the script author. </p>
<p> In the lingo of C# and C++, a parameter declared <code>optional</code> in the TLB is really a mandatory parameter whose default value is <code>DISP_<wbr>E_<wbr>PARAM&shy;NOT&shy;FOUND</wbr></wbr></code>. </p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (25)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-1103253">
				<div id="div-comment-1103253" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140129-00/?p=1933#comment-1103253">
			January 29, 2014 at 7:10 am</a>		</div>

		<p>Given C&#39;s definition of optional (DLL linking always follows C rules), this no longer seems insane.</p>
<div class="post">[<em>IDispatch is an interface for scripting languages (VB, JavaScript), not C. From a scripting standpoint, what would you call a parameter that you don&#39;t need to pass? -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1103293">
				<div id="div-comment-1103293" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Kirillenseer</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140129-00/?p=1933#comment-1103293">
			January 29, 2014 at 7:51 am</a>		</div>

		<p>So the Name &quot;optional&quot; is actually a lie. Good to know.</p>
<div class="post">[<em>It is optional from the standpoint of the scripting language (VB, JavaScript). You can pass one parameter or you can pass two. The second parameter is optional. If you omit the second parameter, the scripting engine will fill it in for you. If you want to apply C++ terminology to it, the equivalent term is &quot;default&quot; except that you don&#39;t get to choose the default value. -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1103313">
				<div id="div-comment-1103313" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Zarat</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140129-00/?p=1933#comment-1103313">
			January 29, 2014 at 8:06 am</a>		</div>

		<p>I&#39;d say it more comes down to inexact terminology. It&#39;s the value thats optional, not the parameter.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1103363">
				<div id="div-comment-1103363" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">pc</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140129-00/?p=1933#comment-1103363">
			January 29, 2014 at 9:31 am</a>		</div>

		<p>While it&#39;s definitely an amusing error message, I still think it gets beat by &quot;Keyboard not found, press F1 to contunue&quot; and the like.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1103373">
				<div id="div-comment-1103373" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Simon</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140129-00/?p=1933#comment-1103373">
			January 29, 2014 at 9:37 am</a>		</div>

		<p>@pc &#8211; yes the &#39;F1 to continue&#39; at first glance does look funny. But it describes exactly how to continue: plug in a keyboard so you can press F1 and then press F1. And TA DAA! it works too!</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1103393">
				<div id="div-comment-1103393" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">dave</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140129-00/?p=1933#comment-1103393">
			January 29, 2014 at 9:43 am</a>		</div>

		<p>This comment intentionally left blank.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1103403">
				<div id="div-comment-1103403" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Eric</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140129-00/?p=1933#comment-1103403">
			January 29, 2014 at 9:52 am</a>		</div>

		<p>@pc</p>
<p>Personally my favorite is the error message &quot;Warning: Monitor not found&quot; displayed during the boot of my HTPC, since how are you seeing it without a display connected?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1103413">
				<div id="div-comment-1103413" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">j b</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140129-00/?p=1933#comment-1103413">
			January 29, 2014 at 10:33 am</a>		</div>

		<p>I laughed at the &quot;Keyboard not found, press F1 to continue message&quot; until the day I bought new tires for my car: The tires were mounted on the rims, and in a greasy, dirty garage (the way garages are) mounted on this apparatus to balance them by adding small weights &#8211; I guess most of you have seen how they do it. The guy switched on the PC controlling the machine, it came up with this message and a huge green square marked &quot;F1&quot;, and the guy hit it with his fist. The screen was pressure sensitive, and every subsequent operation was controlled by hitting large control fields on the screen. There was no keyboard, just this screen &#8211; which was enclosed in a sealed &quot;bag&quot; of strong, transparent plastic. In that environment, a traditional keyboard wouldn&#39;t survive for more than a week or two.</p>
<p>Today, people ought to be so familiar with touch displays that this shouldn&#39;t surprise them at all. Twenty years ago, when I first saw this, it was not at all common. Since then, I have repeatedly used this story to explain to people why the error message is NOT ridiculous, but fact is that even today, nine out of ten are just as amused as people were twenty years, insisting that &quot;Well, but that is a veeery special case&#8230;&quot;. I don&#39;t think it is.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1103423">
				<div id="div-comment-1103423" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">viila</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140129-00/?p=1933#comment-1103423">
			January 29, 2014 at 10:55 am</a>		</div>

		<p>@simon</p>
<p>The problem with that is that the AT/PS2 interface is /not/ hot-plug, so it&#39;s encouraging you to do something you shouldn&#39;t. Of course, today with USB keyboards it&#39;s reasonable, but the message was around long before they were the norm, or even existed.</p>
<p>(There are of course other reasonable scenarios, such as the touchscreen mentioned by j b. Or maybe the keyboard was undetected for some reason, but exists and can emit F1 to the bus. Or the keyboard is behind a KVM which is currently switched to control another PC. Etc&#8230;)</p>
<p>@eric</p>
<p>Well, you&#39;ve managed to see that message somehow, haven&#39;t you? :P</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1103433">
				<div id="div-comment-1103433" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Miff</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140129-00/?p=1933#comment-1103433">
			January 29, 2014 at 11:37 am</a>		</div>

		<p>AFIK C# doesn&#39;t have optional parameters per say. You can create a parameter with a default value (to call it programatically, pass that default value), or you can overload a method with a different signature that doesn&#39;t include the parameter (in which case, you have to pass different parameters to Type.GetMethod.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1103443">
				<div id="div-comment-1103443" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Rob</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140129-00/?p=1933#comment-1103443">
			January 29, 2014 at 12:24 pm</a>		</div>

		<p>@Miff: C# does have optional parameters. &nbsp;The language spec defines them as such. &nbsp;However, the parameters are only optional at the call site; the callee doesn&#39;t fill in default values. &nbsp;Optional parameters as specified by the C# language require the default value to be specified in metadata so that the compiler can add them in at compile time.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1103463">
				<div id="div-comment-1103463" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Nacimota</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140129-00/?p=1933#comment-1103463">
			January 29, 2014 at 2:33 pm</a>		</div>

		<p>I remember learning something like this several years ago when I was playing around with C#. A lot of COM APIs (like Office) use optional parameters all over the place, but since C# had no support for optional parameters at the time you still had to specify them. You ended up writing something like:</p>
<p>Document.SaveAs(ref filePath, ref missing, ref missing, ref missing, ref missing, ref missing, ref missing, ref missing, ref missing, ref missing, ref missing, ref missing, ref missing, ref missing, ref missing, ref missing)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1103323">
				<div id="div-comment-1103323" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Evan</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140129-00/?p=1933#comment-1103323">
			January 29, 2014 at 8:38 am</a>		</div>

		<p>I agree with Zarat, though maybe I&#39;m coming from a C/C++ background. C doesn&#39;t have any sense of optional parameters*, but a lot of C APIs still have &quot;optional&quot; parameters. For instance, if you have a function that takes an output parameter, maybe not all callers will be interested in the output value, so it makes sense to allow the parameter to be NULL. It&#39;s the difference between:</p>
<p> &nbsp;void random1(int * out_val) { *val = 9; }</p>
<p> &nbsp;void random2(int * out_val) { if(val) *val = 9; }</p>
<p>(Obviously this is a contrived example because (1) why not just return it via an actual return and (2) why would you call it if you weren&#39;t interested in the result.) And in the case of &#39;random2&#39;, I think it&#39;s quite reasonable to describe the &#39;out_val&#39; parameter as being &quot;optional&quot;.</p>
<p>* Technically you can sort of hack it with &#8230; a la the &#39;open&#39; syscall in POSIX, but let&#39;s not go there.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1103483">
				<div id="div-comment-1103483" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Sours</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140129-00/?p=1933#comment-1103483">
			January 29, 2014 at 8:01 pm</a>		</div>

		<p>My favorite error messages were from The Elder Scrolls: Daggerfall. &nbsp;</p>
<p>The first went something like: If you see this error contact John.</p>
<p>The second: The tree that was previously deleted has now been deleted.</p>
<p>Any idea on how to grab those from the exe?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1103493">
				<div id="div-comment-1103493" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Henke37</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140129-00/?p=1933#comment-1103493">
			January 29, 2014 at 10:08 pm</a>		</div>

		<p>@Sours: Just run strings on the executable.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1103523">
				<div id="div-comment-1103523" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Neil</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140129-00/?p=1933#comment-1103523">
			January 30, 2014 at 3:08 am</a>		</div>

		<p>@viila: I&#39;ve not come across a computer that doesn&#39;t recognise a keyboard plugged in after it was switched on. Mice on the other hand cause me more trouble, although occasionally unplugging and reconnecting the keyboard will also reset the mouse.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1103553">
				<div id="div-comment-1103553" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">foo</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140129-00/?p=1933#comment-1103553">
			January 30, 2014 at 6:12 am</a>		</div>

		<p>By far my favourite error code is ERROR_SUCCESS. I love it when functions return that one.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1103563">
				<div id="div-comment-1103563" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Rick C</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140129-00/?p=1933#comment-1103563">
			January 30, 2014 at 7:11 am</a>		</div>

		<p>Neil, modern computers with PS/2 ports will generally be able to stand hot-plugging, but I think that&#39;s not in the original spec. I&#39;ve seen older computers that would lock up if you plugged in a keyboard after powerup. &nbsp;I&#39;m pretty sure the pre-PS/2 design, the old 5-pin DIN plugs, would freeze up in those circumstances too (but it&#39;s probably been 15 years since I&#39;ve seen one of those).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1103573">
				<div id="div-comment-1103573" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Rick C</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140129-00/?p=1933#comment-1103573">
			January 30, 2014 at 7:12 am</a>		</div>

		<p>IIRC ERROR_SUCCESS usually means that the program missed checking for an error when it should have, and a subsequent operation cleared the error status.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-fleet-command odd alt thread-odd thread-alt depth-1" id="comment-1103643">
				<div id="div-comment-1103643" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Fleet+Command' rel='external nofollow' class='url'>Fleet Command</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140129-00/?p=1933#comment-1103643">
			January 30, 2014 at 9:46 am</a>		</div>

		<p>It&#39;s like failing an optional university class. It is optional to take the class but when you took it, failing to participate in final exam or failing to achieve adequate grades means failing the optional class.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1103723">
				<div id="div-comment-1103723" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Yuri</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140129-00/?p=1933#comment-1103723">
			January 30, 2014 at 11:29 am</a>		</div>

		<p>I&#39;m always slightly amused when I see a compilation error of the sort:</p>
<p>Cannot implicitly convert type &#39;X&#39; to &#39;X&#39;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1103823">
				<div id="div-comment-1103823" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">foo</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140129-00/?p=1933#comment-1103823">
			January 30, 2014 at 4:03 pm</a>		</div>

		<p>@Rick C &#8211; You might be thinking of a case where someone does something like the following:</p>
<p>auto ret = ReadFile(lets just say the file handle is valid); &#8230; CloseHandle(valid handle); if (!ret) ReportError(&quot;Failed to read file because&quot;,,,,GetLastError());</p>
<p>In this case the successful CloseHandle call will reset the last error to zero (success), so the reason for the read failure is gone. But some API&#39;s will still just return success if the call works (see the Registry functions for example).</p>
<p>Fix is just use: auto ret = ReadFile(yadda); if(ERROR_SUCESS == ret) {yay!} else {error} &lt;&#8211; (joking)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1103903">
				<div id="div-comment-1103903" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Azarien</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140129-00/?p=1933#comment-1103903">
			January 31, 2014 at 4:33 am</a>		</div>

		<p>@Rick C: I have hot-plugged the old DIN keyboard many times and it did not explode. Maybe it was not old enough :-)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1104153">
				<div id="div-comment-1104153" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">viila</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140129-00/?p=1933#comment-1104153">
			February 1, 2014 at 7:58 am</a>		</div>

		<p>Hot-plugging PS/2 or DIN is not a guaranteed failure, or even necessarily a problem. But in the worst case, you could actually destroy your keyboard controller since the spec was designed for the I/O pins to be directly connected to the plug without any protection or buffering. The older the hardware, the more likely this is. On hardware made since at least around 2000s it&#39;s highly unlikely, because people are people and manufacturers aren&#39;t stupid, but it&#39;s still a theoretical possibility for a 100% in-spec controller to die from hot-plugging because it lacks safeguards.</p>
<p>And yes, I have also hot-plug PS/2 keyboards for various reasons without incident, including to get past the F1 prompt (because waiting 10 seconds for the computer to re-POST and re-memcheck is such a drag, I just wanna get computing NOW! :P)&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1104193">
				<div id="div-comment-1104193" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">jas88</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140129-00/?p=1933#comment-1104193">
			February 2, 2014 at 4:38 am</a>		</div>

		<p>I&#39;m reminded of my last passport application form, where apparently some automated processing had been introduced &#8211; so the various non-applicable options had to be left absolutely scrupulously blank or the application would be rejected: no &quot;N/A&quot;, not even a tiny mark. No corrections of any kind allowed, either, and all in pen. With several pages of rather opaque language along the lines of &quot;Place of birth? If born after Nov 1 1983, or between Jan 1 1972 and Oct 31 1983, or born outside the UK before those dates except while one or more parent(s) were employed in government service &#8230;&quot; &#8211; all sorts of odd rules depending on parents&#39; nationality, marital status at the time, date&#8230;</p>
<p>I remember dire warnings about hot-plugging non-USB keyboards &#8211; I had a feeling some of the early improvements on that weren&#39;t big improvements, either (instead of the power surge blowing the keyboard controller chip, it would blow the fuse on the keyboard connection &#8230; still leaving a dead keyboard port!). I tended to treat the &quot;F1 error&quot; as a safe point to power off and re-check the connection, rather than to try hot-plugging and carry on booting. Thinking back, though, a loose connection must have been equivalent to hot-plugging, so if that did cause damage it would have been much more common than I can recall.</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

