<html>
<head>
<title>Using the MNS_DRAGDROP style: Dropping in</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>Using the MNS_DRAGDROP style: Dropping in</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>December 29, 2011 / year-entry #308</td></tr>
<tr><td><b>Tags:</b></td><td>code</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20111229-00/?p=8773</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>8</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">Last time, we looked at using the MNS_DRAG­DROP style for dragging items out of a menu. Today, we'll look at dropping them in. Take the program from last time and make the following additions. First, let's add a second item to the menu. // resource header file #define IDM_MAIN 1 #define IDC_CLOCK 100 #define IDC_WMP...</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>
Last time,
<a HREF="http://blogs.msdn.com/b/oldnewthing/archive/2011/12/28/10251521.aspx">
we looked at using the <code>MNS_<wbr>DRAG&shy;DROP</code> style
for dragging items out of a menu</a>.
Today, we'll look at dropping them in.
</p>
<p>
Take the program from last time and make the following additions.
First, let's add a second item to the menu.
</p>
<pre>
// resource header file
#define IDM_MAIN 1
#define IDC_CLOCK 100
<font COLOR=blue>#define IDC_WMP 101</font>

// resource file
IDM_MAIN MENU PRELOAD
BEGIN
    POPUP "&amp;Test"
    BEGIN
        MENUITEM "&amp;Clock", IDC_CLOCK
        <font COLOR=blue>MENUITEM "&amp;WMP", IDC_WMP</font>
    END
END

// scratch.cpp
HRESULT GetMenuObject(HWND hwnd, HMENU hmenu, UINT uPos,
                      REFIID riid, void **ppvOut)
{
 HRESULT hr = E_NOTIMPL;
 *ppvOut = NULL;
 if (hmenu == GetSubMenu(GetMenu(hwnd), 0)) {
  switch (GetMenuItemID(hmenu, uPos)) {
  case IDC_CLOCK:
   hr = GetUIObjectOfFile(hwnd, L"C:\\Windows\\clock.avi",
                                             riid, ppvOut);
   break;
  <font COLOR=blue>case IDC_WMP:
   hr = GetUIObjectOfFile(hwnd, L"C:\\Program Files"
                  L"\\Windows Media Player\\wmplayer.exe",
                                             riid, ppvOut);
   break;</font>
  }
 }
 return hr;
}
</pre>
<p>
Yes, I hard-coded another path.
This is a demo, not production code.
</p>
<p>
Anyway, it's time to hook up the
<code>WM_<wbr>MENU&shy;GET&shy;OBJECT</code> message:
</p>
<pre>
#define HANDLE_WM_MENUGETOBJECT(hwnd, wParam, lParam, fn) \
 (fn)((hwnd), (MENUGETOBJECTINFO*)(lParam))

LRESULT OnMenuGetObject(HWND hwnd, MENUGETOBJECTINFO *p<a HREF="http://daisann.com/2007/03/04/somewhere-between-do-jeh-and-mgoi.aspx">mgoi</a>)
{
 LRESULT lres = MNGO_NOINTERFACE;
 if (!(pmgoi-&gt;dwFlags &amp; (MNGOF_BOTTOMGAP | MNGOF_TOPGAP)) &amp;&amp;
     SUCCEEDED(GetMenuObject(hwnd, pmgoi-&gt;hmenu, pmgoi-&gt;uPos,
               *(IID*)pmgoi-&gt;riid, &amp;pmgoi-&gt;pvObj))) {
  lres = MNGO_NOERROR;
 }
 return lres;
}
    HANDLE_MSG(hwnd, WM_MENUGETOBJECT, OnMenuGetObject);
</pre>
<p>
To handle the
<code>WM_<wbr>MENU&shy;GET&shy;OBJECT</code> message,
you convert the <code>hmenu</code>, <code>uPos</code> pair
into a COM object, requesting the interface provided by the
<code>riid</code> member,
and putting the result into the <code>pvObj</code> member.
(Exercise: Why is the <code>riid</code> member
typed as <code>void *</code>
rather than <code>REFIID</code>?)
</p>
<p>
When the user tries to drop on a menu item, we just give them
the corresponding object in the shell namespace.
Notice that I filter out the <code>GAP</code> messages,
since they indicate that the user is trying to drop <i>between</i>
items rather than on them.
</p>
<p>
Run this program, open the <i>Test</i> menu, and drag the Clock
menu item onto the WMP menu item.
If all goes well
(assuming you changed the path for <code>clock.avi</code>
to some other AVI file),
the AVI file will be opened by Windows Media Player,
since that's the behavior of Windows Media Player when you
drop an AVI file on it.
</p>
<p>
So that's menu drag/drop. It's really not all that exciting.
Of course, what people tend to be most interested in is not
generic drag/drop for menus but menu customization via drag/drop.
That's not something that
<code>MNS_<wbr>DRAG&shy;DROP</code> gives you directly;
that's something you need to build yourself out of the
building blocks provided.
</p>
<p>
We'll
<a HREF="http://blogs.msdn.com/b/oldnewthing/archive/2009/08/04/9856634.aspx">
snap some blocks together</a>
next time.</p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (8)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-955803">
				<div id="div-comment-955803" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">1st</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20111229-00/?p=8773#comment-955803">
			December 29, 2011 at 8:26 am</a>		</div>

		<p>You imply that there is a good reason to define a pointer that by definition (and by name) should always points to an IID as PVOID. Makes no sense.</p>
<div class="post">[<i>Hence the exercise. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-955823">
				<div id="div-comment-955823" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Mike Dunn</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20111229-00/?p=8773#comment-955823">
			December 29, 2011 at 10:51 am</a>		</div>

		<p>It&#39;s void* because the struct has to be usable by languages other than C++. Also, REFIID is defined differently based on whether __cplusplus is defined, so the riid member had to be of a type whose definition will never change.</p>
<p>Can you prevent the drop indicator from appearing in the menu? Even when the WM_MENUGETOBJECT handler returns MNGO_NOINTERFACE, the indicator is still drawn, which always struck me as odd behavior.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-955843">
				<div id="div-comment-955843" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Crescens2k</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20111229-00/?p=8773#comment-955843">
			December 29, 2011 at 2:14 pm</a>		</div>

		<p>Most likely, since in guiddef.h in the Windows SDK 6.0A, 7.0A and 7.1, REFIID is defined as</p>
<p>#ifndef _REFIID_DEFINED</p>
<p>#define _REFIID_DEFINED</p>
<p>#ifdef __cplusplus</p>
<p>#define REFIID const IID &amp;</p>
<p>#else</p>
<p>#define REFIID const IID * __MIDL_CONST</p>
<p>#endif</p>
<p>#endif</p>
<p>So unless something has changed between 7.1 and the Windows Developer Preview, then that is what has been in the Windows SDK since at least 6 and most likely longer.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-955853">
				<div id="div-comment-955853" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Anonymous Coward</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20111229-00/?p=8773#comment-955853">
			December 29, 2011 at 4:45 pm</a>		</div>

		<p>Which is also horrible. Seriously, how hard can it be to type a simple typedef? Why pollute the global namespace with yet another macro?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-955863">
				<div id="div-comment-955863" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Crescens2k</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20111229-00/?p=8773#comment-955863">
			December 29, 2011 at 6:40 pm</a>		</div>

		<p>Who knows, maybe it is just another case of judging old things by modern standards again. OLE2 and COM was introduced in 1993 so this means the compilers in use would have been VC++ 1 or VC++ 2 or maybe older versions like Microsoft C/C++ 7.0? Whats more, iirc they used ODL back then not MIDL, so again, maybe there was a need to do it this way back then?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-955873">
				<div id="div-comment-955873" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20111229-00/?p=8773#comment-955873">
			December 29, 2011 at 8:45 pm</a>		</div>

		<p>They&#39;re ALL CAPS names. That tells you they&#39;re probably macros.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-955833">
				<div id="div-comment-955833" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Anonymous Coward</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20111229-00/?p=8773#comment-955833">
			December 29, 2011 at 1:36 pm</a>		</div>

		<p>Michael, that makes no sense. The struct definition can only be used in C and C++. Even if there may be a difference* between REFIID in C and C++, it should still be possible to define it as IID const *. Other languages will need their own definition anyway, and if a hypothetical language only has e.g. POINTER and not POINTER TO IID then that will affect the struct definition for that language, but not for the C / C++ header file. (Assuming POINTER is compatible with &lt;type&gt; * in C / C++. This is generally true, but otherwise they may even have to make do with DWORD rather than POINTER&#8230;)</p>
<p>*Note: the headers that I have, which are not the most recent ones, contain the following definitions (irrelevant bits cut out):</p>
<p>typedef IID *REFIID;</p>
<p>#ifndef _REFGUID_DEFINED</p>
<p>#if defined (__cplusplus) &amp;&amp; !defined (CINTERFACE)</p>
<p>#define REFIID const IID&amp;</p>
<p>#else</p>
<p>#define REFIID const IID* const</p>
<p>#endif</p>
<p>#endif</p>
<p>Sigh. I&#39;m not pointing fingers though; I don&#39;t know whose idea it was to do it like this; it may have even been the folks who shipped the compiler.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-955943">
				<div id="div-comment-955943" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">1st</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20111229-00/?p=8773#comment-955943">
			December 30, 2011 at 7:55 am</a>		</div>

		<p>That explains why it is not REFIID, but not why it is PVOID rather than const IID*</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

