<html>
<head>
<title>How can I tell that I have a shell folder that represents My Computer?</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>How can I tell that I have a shell folder that represents My Computer?</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>September 20, 2013 / year-entry #251</td></tr>
<tr><td><b>Tags:</b></td><td>code</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20130920-00/?p=3173</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>6</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">You have in your hands an IShell­Folder, and you want to know whether this is an IShell­Folder that represents My Computer. There are a few ideas that may occur to you. One is to ask the folder for its current location and compare it to CSIDL_DRIVES. #define STRICT_TYPED_ITEMIDS #include <shlobj.h> PIDLIST_ABSOLUTE GetIDListViaPersistFolder(IUnknown *punk) { PIDLIST_ABSOLUTE...</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>
You have in your hands an
<code>IShell&shy;Folder</code>,
and you want to know whether this is an
<code>IShell&shy;Folder</code>
that represents <i>My Computer</i>.
There are a few ideas that may occur to you.
</p>
<p>
One is to ask the folder for its current location
and compare it to
<code>CSIDL_<wbr>DRIVES</code>.
</p>
<pre>
#define <a HREF="http://blogs.msdn.com/b/oldnewthing/archive/2013/01/24/10387757.aspx">STRICT_TYPED_ITEMIDS</a>
#include &lt;shlobj.h&gt;

PIDLIST_ABSOLUTE GetIDListViaPersistFolder(IUnknown *punk)
{
  PIDLIST_ABSOLUTE pidl = NULL;
  IPersistFolder2 *ppf;
  if (SUCCEEDED(punk-&gt;QueryInterface(IID_PPV_ARGS(&amp;ppf)))) {
    ppf-&gt;GetCurFolder(&amp;pidl);
    ppf-&gt;Release();
  }
  return pidl;
}

HRESULT CompareAbsoluteIDLists(
    LPARAM lParam,
    PCUIDLIST_ABSOLUTE pidl1,
    PCUIDLIST_ABSOLUTE pidl2,
    int *piResult)
{
  *piResult = 0;
  IShellFolder *psfDesktop;
  HRESULT hr = SHGetDesktopFolder(&amp;psfDesktop);
  if (SUCCEEDED(hr)) {
    hr = psfDesktop-&gt;CompareIDs(lParam,
    reinterpret_cast&lt;PCUIDLIST_RELATIVE&gt;(pidl1),
    reinterpret_cast&lt;PCUIDLIST_RELATIVE&gt;(pidl2));
    if (SUCCEEDED(hr)) {
     *piResult = ShortFromResult(hr);
    }
    psfDesktop-&gt;Release();
  }
  return hr;
}

BOOL IsMyComputerFolder(IUnknown *punk)
{
  BOOL fIsMyComputer = FALSE;
  PIDLIST_ABSOLUTE pidl = GetIDListViaPersistFolder(punk);
  if (pidl) {
    PIDLIST_ABSOLUTE pidlMyComputer;
    if (SUCCEEDED(SHGetSpecialFolderLocation(NULL,
                                 CSIDL_DRIVES, &amp;pidlMyComputer)))
    {
      int iCompare;
      fIsMyComputer = SUCCEEDED(CompareAbsoluteIDLists(
                               SHCIDS_CANONICALONLY,
                               pidl, pidlMyComputer, &amp;iCompare) &amp;&amp;
                      iCompare == 0;
      CoTaskMemFree(pidlMyComputer);
    }
    CoTaskMemFree(pidl);
  }
  return fIsMyComputer;
}
</pre>
<p>
Okay, we have a lot of moving parts here.
Let's look at them one at a time.
</p>
<p>
The <code>Get&shy;IDList&shy;Via&shy;Persist&shy;Folder</code>
function
takes an object and asks
<code>IPersist&shy;Folder2::<wbr>Get&shy;Cur&shy;Folder</code>
what folder it represents.
Since we don't actually use any methods on the object
beyond what is provided by
<code>IUnknown</code>,
we weaken the parameter requirement to simply
<code>IUnknown</code>.
</p>
<p>
The
<code>Compare&shy;Absolute&shy;IDLists</code>
function compares two absolute ID lists according to the
criteria specified by the <code>lParam</code>.
</p>
<p>
The
<code>Is&shy;My&shy;Computer&shy;Folder</code>
combines these two function:
It takes the object you pass in
and gets the ID list it represents.
It then gets the ID list for the My Computer folder.
And then it compares the two via
<code>SHCIDS_<wbr>CANONICAL&shy;ONLY</code>,
which means "I just want to see if they represent the same object.
Don't worry about getting the sort order absolutely right."
And again, since we don't use any methods on the object
other than
<code>IUnknown::<wbr>Query&shy;Interface</code>,
we weaken the parameter requirements to simply
<code>IUnknown</code>.
</p>
<p>
Now, this code could be simplified or at least tweaked to
take advantage of <code>IShell&shy;Item</code>.
For example, we could use
<code>SHGet&shy;Known&shy;Folder&shy;Item</code>
to get the
<code>FOLDERID_<wbr>Computer&shy;Folder</code>
and then use
<code>IShell&shy;Item::<wbr>Compare</code>.
</p>
<p>
But I'm not going to bother,
because there is an underlying algorithmic problem with this
technique:
It is checking whether you have a folder to
<i>My Computer</i>
specifically at its default location.
If somebody creates a <i>My Computer</i> folder at a custom
location,
say via a folder shortcut,
or a folder with
<a HREF="http://www.pctools.com/guides/registry/detail/38/">
a magic name</a>,
then this code will not recognize it as <i>My Computer</i>
because these alternate locations for <i>My Computer</i>
will not match the standard location.
</p>
<p>
If you want to identify
<i>My Computer</i> no matter where it winds up,
then instead of checking the path, you can check its class.
</p>
<pre>
HRESULT GetObjectCLSID(IUnknown *punk, CLSID *pclsid)
{
  *pclsid = CLSID_NULL;
  IPersist *pp;
  HRESULT hr = punk-&gt;QueryInterface(IID_PPV_ARGS(&amp;pp));
  if (SUCCEEDED(hr)) {
    hr = pp-&gt;GetClassID(pclsid);
    pp-&gt;Release();
  }
  return hr;
}

BOOL IsMyComputerFolder(IUnknown *punk)
{
  CLSID clsid;
  GetObjectCLSID(psf, &amp;clsid);
  return clsid == CLSID_MyComputer;
}
</pre>
<p>
We ask the object directly,
"Hey, what's your CLSID?"
and if it replies,
"I am <code>CLSID_<wbr>My&shy;Computer</code>,"
then we say,
"Pleased to meet you,
<i>My Computer</i>."</p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (6)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment byuser comment-author-wndsks even thread-even depth-1" id="comment-1078843">
				<div id="div-comment-1078843" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/skSdnW' rel='external nofollow' class='url'>skSdnW</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130920-00/?p=3173#comment-1078843">
			September 20, 2013 at 7:28 am</a>		</div>

		<p>This is almost the same as <a href="http://blogs.msdn.com/b/oldnewthing/archive/2008/09/18/8956382.aspx" rel="nofollow" target="_new">blogs.msdn.com/&#8230;/8956382.aspx</a> but I&#39;m guessing the shell helper function used there might know other ways than just GetCurFolder to get the clsid. I love this shell stuff but sometimes there are too many ways to do the same thing.</p>
<p>What do you guys on the shell team call the &quot;folder.{guid}&quot; folders? [Shell]Folder junctions?</p>
<div class="post">[<em>SHDESCRIPTIONID is GetClassId + other stuff. The other article tried too hard and asked for more information than it needed. -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1078853">
				<div id="div-comment-1078853" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blogs.msdn.com/ajgelado_4000_hotmail.com/ProfileUrlRedirect.ashx' rel='external nofollow' class='url'>ajgelado@hotmail.com</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130920-00/?p=3173#comment-1078853">
			September 20, 2013 at 7:52 am</a>		</div>

		<p>I think a parenthesis is missing at the end of the call to CompareAbsoluteIDLists(). It reads:</p>
<p> &nbsp; &nbsp;SUCCEEDED(CompareAbsoluteIDLists(</p>
<p> &nbsp; &nbsp;SHCIDS_CANONICALONLY,</p>
<p> &nbsp; &nbsp;pidl, pidlMyComputer, &amp;iCompare) &amp;&amp; </p>
<p>but I guess it should read:</p>
<p> &nbsp; &nbsp;SUCCEEDED(CompareAbsoluteIDLists(</p>
<p> &nbsp; &nbsp;SHCIDS_CANONICALONLY,</p>
<p> &nbsp; &nbsp;pidl, pidlMyComputer, &amp;iCompare)) &amp;&amp; </p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1078863">
				<div id="div-comment-1078863" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Adam Rosenfield</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130920-00/?p=3173#comment-1078863">
			September 20, 2013 at 8:30 am</a>		</div>

		<p>5 years ago, the Recycle Bin. &nbsp;Today, My Computer. &nbsp;In 5 more years, I expect the next article in the series &quot;How can I tell that I have a shell folder that represents &lt;SOME INTERESTING FOLDER&gt;?&quot;. &nbsp;Will it be the Control Panel? &nbsp;The Games Explorer? &nbsp;Some new folder that doesn&#39;t yet exist in current versions of Windows? &nbsp;Find out in September 2018!</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-fleet-command odd alt thread-odd thread-alt depth-1" id="comment-1078943">
				<div id="div-comment-1078943" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Fleet+Command' rel='external nofollow' class='url'>Fleet Command</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130920-00/?p=3173#comment-1078943">
			September 20, 2013 at 3:07 pm</a>		</div>

		<p>@Adam Rosenfield: Five years from now, nobody will even remember there was something called Games Explorer or Control Panel. Games Explorer is already deprecated. Control Panel is being rivaled with PC Settings. (Windows 8.1)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1079013">
				<div id="div-comment-1079013" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">morlamweb</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130920-00/?p=3173#comment-1079013">
			September 23, 2013 at 7:54 am</a>		</div>

		<p>@Fleet Commander: I must be ahead of the curve when it comes to Games Explorer. &nbsp;I hadn&#39;t heard of it before reading these two comments : ) &nbsp;And as long as Microsoft retains the Desktop, then there will be a need to programatically check for special folders, like [My ]Computer. &nbsp;I hope that they do preserve the Desktop for many years to come. &nbsp;The windowing model of the desktop provides for one way of working with/using a PC; the Metro model provides another way. &nbsp;I see value in both models, though I give the edge to the old Desktop model. &nbsp;Full-screen-only apps just seems like a giant step backward in time to old full-screen DOS apps.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1079263">
				<div id="div-comment-1079263" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Random832</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130920-00/?p=3173#comment-1079263">
			September 24, 2013 at 6:59 am</a>		</div>

		<p>If you have a &quot;magic name&quot; My Computer, and navigate from it to its own location, can you build an arbitrarily long IDL? (e.g. C:Computer.{CLSID}C:Computer.{CLSID}C:)? Explorer seems to canonicalize these once you navigate to a drive.</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

