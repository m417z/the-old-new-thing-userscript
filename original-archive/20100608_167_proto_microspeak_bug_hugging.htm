<html>
<head>
<title>Proto-Microspeak: Bug-hugging</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>Proto-Microspeak: Bug-hugging</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>June 8, 2010 / year-entry #168</td></tr>
<tr><td><b>Tags:</b></td><td>microspeak;other</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20100608-00/?p=13773</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>18</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">Bug-hugging is the phenomenon of programmers keeping bugs assigned to themselves without actually doing anything to fix them. You typically engage in bug-hugging when there is a bug that you feel strongly should be fixed, but which you also simply haven't gotten around to working on yet. Meanwhile the bug sits and collects dust. You...</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p><i>Bug-hugging</i> is the phenomenon of programmers keeping bugs assigned to themselves without actually doing anything to fix them. You typically engage in bug-hugging when there is a bug that you feel strongly should be fixed, but which you also simply haven't gotten around to working on yet. Meanwhile the bug sits and collects dust. You resist allowing the bug to be postponed to the next release because, "We really ought to fix this," and you also <a href="http://blogs.msdn.com/b/oldnewthing/archive/2009/12/01/9930480.aspx"> resist allowing the bug to be reassigned to another programmer on the team</a> because "Only I know what needs to be done to fix this."</p>
<p> On the other hand, you are so busy with other things that you never manage to get around to fixing that bug, or because the fix is actually quite complicated and you haven't been able to come up with a big enough stretch of available time to devote to fixing it properly. In some cases, the bug is actually a enormous amount of work, and you don't really want to fix it, but you also can't bear to part with it. </p>
<p> Think of it as the software version of <a href="http://blogs.msdn.com/b/oldnewthing/archive/2008/10/15/9000185.aspx"> hoarding</a>. You know in your head that you can't fix it, but in your heart you can't bear to let it go. To put it in the vernacular, you have to piss or get off the pot. </p>
<p> The behavior is good-intentioned but ultimately harmful to a project shipping on time because it prevents project management from truly understanding how close the project is to being finished, and your affection for the bug prevents them from reassigning it to somebody who has <a href="http://blogs.msdn.com/b/oldnewthing/archive/2009/04/14/9547557.aspx"> room on his plate</a> to fix it. </p>
<p> The kicker is that these bugs that are so fiercely held like a security blanket are often ones with relatively low impact, or even feature requests disguised as bugs. "When I do X, then Y, then Z, it would be nice if there was an option to Q directly from the dialog box." Well yeah, it would be nice, but it's not in the product specification, and we have no research data to indicate that adding the Q option to the dialog box won't create confusion or there is a significant body of users who want a Q option on that dialog box in the first place. </p>
<p> Here is a citation: </p>
<blockquote class="q"><p> We have a considerable bug backlog here, and it looks like we're about a week behind, but I suspect there's a lot of bug-hugging hiding in these numbers. We plan on working with programmers over the next week to get these numbers to be more realistic. </p>
</blockquote>
<p> The term was coined by a manager here at Microsoft only recently, so it's not really Microspeak yet because it hasn't demonstrated any staying power. I'll file it under Proto-Microspeak. </p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (18)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-837993">
				<div id="div-comment-837993" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Peter da Silva</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100608-00/?p=13773#comment-837993">
			June 8, 2010 at 7:25 am</a>		</div>

		<p>Sounds like you need to change the bug tracking system so that anyone can work on any bug that hasn&#39;t got any active checkouts against it. You&#39;ll still get a few people checking code out and sitting on that, but that&#39;s sufficiently obviously antisocial that it&#39;ll reduce the problem.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-838003">
				<div id="div-comment-838003" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joe Dietz</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100608-00/?p=13773#comment-838003">
			June 8, 2010 at 7:59 am</a>		</div>

		<p>What sort of pitiful source control system would allow such anti-social behavior to be anti-social? &nbsp;</p>
<p>Anyways around here, I lump such behavior in with &quot;Cookie Licking&quot;.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-838013">
				<div id="div-comment-838013" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Brian</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100608-00/?p=13773#comment-838013">
			June 8, 2010 at 8:23 am</a>		</div>

		<p>We&#39;ve done well with a &quot;zero bug&quot; policy around here. &nbsp;If you have bugs assigned to you, you&#39;re not allowed to work on any new feature until your bug count goes to zero.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-838023">
				<div id="div-comment-838023" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Pierre B.</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100608-00/?p=13773#comment-838023">
			June 8, 2010 at 8:53 am</a>		</div>

		<p>Brian: so, whenever a new cool feature is coming up for grab, you can simply assign bugs to anyone who might want to implement the feature so that you;re the only free? You can even keep a herd of sumarine low-impact bugs that you know of but haven&#39;t yet entered in the bug tracking system for just such purpose. Any system can be subverted. :)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-838053">
				<div id="div-comment-838053" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Josh</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100608-00/?p=13773#comment-838053">
			June 8, 2010 at 12:17 pm</a>		</div>

		<p>@Brian: That system might work where all bugs are accurate and detailed, with reliable repros. If the bug is vague, or the repro conditions are unknown and the occurrence rate is very low, stabbing blindly in the dark is not exactly going to help matters. You may as well work on features rather than banging your head against a wall. And of course, fixing really minor complicated bugs (say, a userland crash on application exit that occurs on less than 0.1% of exits and has no lasting effects) won&#39;t improve perception of your product as much as a good new feature. Zero bug policies sound nice in theory, but they&#39;re impractical in most real world scenarios (exceptions made for certain types of embedded software designed to rigorous standards with minimal user interaction, e.g. air traffic control software).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-838063">
				<div id="div-comment-838063" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">blah</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100608-00/?p=13773#comment-838063">
			June 8, 2010 at 5:10 pm</a>		</div>

		<p>Those who can&#39;t do, manage.</p>
<p>Those who can&#39;t manage, are top-level executives.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-838073">
				<div id="div-comment-838073" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">steveg</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100608-00/?p=13773#comment-838073">
			June 8, 2010 at 5:17 pm</a>		</div>

		<p>Bug hugging in a small team can be essential. Especially when your team mate(s) should be regular contributors to <a rel="nofollow" target="_new" href="http://thedailywtf.com" rel="nofollow">http://thedailywtf.com</a>.</p>
<p>@Pierre: TANSTAFL, but sometimes you can get discounts.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-838133">
				<div id="div-comment-838133" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">640k</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100608-00/?p=13773#comment-838133">
			June 9, 2010 at 3:21 am</a>		</div>

		<p>Bug hugging becomes prevalent when management is incompetent. If the boss is a technical coach instead of a traditional slave whipper, and the team is cleansed from jackasses, then the team members gets confident enough to openly discuss any bug with the boss &amp; other team members. When team members are punished for bugs, then there will always be lot of bug hugging.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-838143">
				<div id="div-comment-838143" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">prunoki</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100608-00/?p=13773#comment-838143">
			June 9, 2010 at 4:33 am</a>		</div>

		<p>No bug hugging here. We routinely list the bugs according to their age and eliminate these. (Reassign, cancel, whatever&#8230;) But it is a nice expression.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-838243">
				<div id="div-comment-838243" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Scott</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100608-00/?p=13773#comment-838243">
			June 9, 2010 at 9:12 am</a>		</div>

		<p>I&#39;m going to have to use this term. Having a term alters people&#39;s thinking of a problem sometimes.</p>
<p>At my current workplace, this effect is caused by management. We have a lot of enhancement requests disguised as bugs, internal bugs that don&#39;t effect the customer and bugs from very old versions. The programmers would like to fix or close them all, but many of them are never closed or assigned to a release from a fear of offending the person who raised it, or offending the project manager running a specific release. It&#39;s quite frustrating having a backlog that you&#39;re officially ignoring.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-838313">
				<div id="div-comment-838313" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Bruce</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100608-00/?p=13773#comment-838313">
			June 9, 2010 at 2:00 pm</a>		</div>

		<p>What&#39;s abug?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-838323">
				<div id="div-comment-838323" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joren</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100608-00/?p=13773#comment-838323">
			June 9, 2010 at 2:09 pm</a>		</div>

		<p>Wouldn&#39;t bug-hogging make more sense as a term? It uses two words in their existing meanings, instead of adding a new meaning to &#39;hugging&#39;. Therefore I vote you start spreading &#39;bug-hogging&#39; while the current term hasn&#39;t been ingrained yet. ;-)</p>
<div class="post">[<i>&quot;Hogging&quot; implies that you are amassing bugs for the thrill of collecting them and denying them to others. The issue here is more that you can&#39;t bear to let the bug go because you love it too much. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-838393">
				<div id="div-comment-838393" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Johan</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100608-00/?p=13773#comment-838393">
			June 9, 2010 at 8:03 pm</a>		</div>

		<p>Shades of yesteryear. &nbsp;This is really just a perversion of a not so recent song by the group called Tickle Tune Typhoon that was title &quot;The Hug Bug&quot;.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-838403">
				<div id="div-comment-838403" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Johan</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100608-00/?p=13773#comment-838403">
			June 9, 2010 at 8:03 pm</a>		</div>

		<p>Shades of yesteryear. &nbsp;This is really just a perversion of a not so recent song by the group called Tickle Tune Typhoon that was titled &quot;The Hug Bug&quot;.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-838433">
				<div id="div-comment-838433" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Worf</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100608-00/?p=13773#comment-838433">
			June 9, 2010 at 10:51 pm</a>		</div>

		<p>I suppose the viewpoint on the bug hugger&#39;s side is that those bugs now have sentimental value&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-838443">
				<div id="div-comment-838443" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Andrew</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100608-00/?p=13773#comment-838443">
			June 10, 2010 at 4:04 am</a>		</div>

		<p>It&#39;s only worse when the person whose name is assigned to the bug doesn&#39;t work for the company anymore.</p>
<p>This is where it&#39;s up to the managers to be more on top of their bug lists. The malaise that grows when devs see an ever-growing assigned bug count when there is no way to turn the tide probably contributes to employee departure.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-839453">
				<div id="div-comment-839453" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">lol@fools</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100608-00/?p=13773#comment-839453">
			June 13, 2010 at 7:17 pm</a>		</div>

		<p>[&quot;Hogging&quot; implies that you are amassing bugs for the thrill of collecting them and denying them to others. The issue here is more that you can&#39;t bear to let the bug go because you love it too much. -Raymond]</p>
<p>No, that would be bug hoarding.</p>
<div class="post">[<i>&quot;Bug hoarding&quot; would have worked but it doesn&#39;t rhyme. I bet your speeches are really boring. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-839843">
				<div id="div-comment-839843" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Larry Hosken</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100608-00/?p=13773#comment-839843">
			June 14, 2010 at 5:55 pm</a>		</div>

		<p>I find &quot;bug-hugging&quot; difficult to pronounce. &nbsp;This seems like a term which might arise in email, but not migrate easily to spoken form.</p>
<p>As a professional technical writer, I strongly suggest that you use &quot;bug-clutching&quot; instead. &nbsp;This means the same thing, but rolls off the tongue more easily. Strongly, strongly suggest. Yep.</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

