<html>
<head>
<title>How can I force a CreateFile call to hang, in order to test something?</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>How can I force a CreateFile call to hang, in order to test something?</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>June 12, 2015 / year-entry #122</td></tr>
<tr><td><b>Tags:</b></td><td>code</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20150612-00/?p=45391</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>13</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">A customer was doing some testing and wanted to know if there was a way to force a call to Create­File to hang, so that they can test their program's hang detection and recovery code. You can ceate these scenarios with careful use of opportunistic locks (also known as oplocks). The sample program I wrote...</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>A customer was doing some testing and wanted to know if there was a way to force a call to <code>Create&shy;File</code> to hang, so that they can test their program's hang detection and recovery code.</p>
<p> You can ceate these scenarios with careful use of opportunistic locks (also known as oplocks). <a href="http://blogs.msdn.com/b/oldnewthing/archive/2013/04/15/10410965.aspx"> The sample program I wrote some time ago</a> can be used, for example, to cause a <code>Create&shy;File</code> call requesting write access to hang until the oplock is released. </p>
<p> To cause a <code>Create&shy;File</code> call requesting read access to hang until the oplock is released, use <code>OPLOCK_<wbr>LEVEL_<wbr>CACHE_<wbr>WRITE</wbr></wbr></wbr></code>; this means that the oplock owner caching writes, so nobody can read from the file until the cached writes are flushed out. </p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (13)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-1221722">
				<div id="div-comment-1221722" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Kevin</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150612-00/?p=45391#comment-1221722">
			June 12, 2015 at 9:36 am</a>		</div>

		<p>Oh, so *this* is why that crappy app I worked on a while ago needed oplocks turned off to run. &nbsp;It must have had race conditions all over the place!</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-anonymouscommenter odd alt thread-odd thread-alt depth-1" id="comment-1241816">
				<div id="div-comment-1241816" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">anonymouscommenter</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150612-00/?p=45391#comment-1241816">
			June 12, 2015 at 12:09 pm</a>		</div>

		<p>@Kevin</p>
<p>It probably used a flat-file database on a network. Which is still garbage, just a different type of garbage.</p>
<p>But we already covered that elsewhere.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-anonymouscommenter even thread-even depth-1" id="comment-1241806">
				<div id="div-comment-1241806" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">anonymouscommenter</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150612-00/?p=45391#comment-1241806">
			June 12, 2015 at 12:41 pm</a>		</div>

		<p>Step into CreateFile using dissasembly view, freeze that thread, continue running?</p>
<div class="post">[<em>Good luck writing a unit test that does that. -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-anonymouscommenter odd alt thread-odd thread-alt depth-1" id="comment-1241796">
				<div id="div-comment-1241796" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">anonymouscommenter</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150612-00/?p=45391#comment-1241796">
			June 12, 2015 at 5:25 pm</a>		</div>

		<p>I can write that unit test.</p>
<p>#ifdef DEBUG</p>
<p>#define CreateFileW dbg_CreateFileW</p>
<p>#endif</p>
<p>Put freeze code in dbg_CreateFileW by checking global variable set only by unit test.</p>
<div class="post">[<em>And if the <code>CreateFile</code> is coming from a library your program uses? (Also, I don&#39;t know how your team works, but on our team, unit tests do not recompile the code. They link directly to the retail code.) -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-anonymouscommenter even thread-even depth-1" id="comment-1241746">
				<div id="div-comment-1241746" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">anonymouscommenter</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150612-00/?p=45391#comment-1241746">
			June 13, 2015 at 1:09 pm</a>		</div>

		<p>[And if the CreateFile is coming from a library your program uses?]</p>
<p>Never seen a case where stepping up to the level where my own code is doesn&#39;t produce the needful.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-anonymouscommenter odd alt thread-odd thread-alt depth-1" id="comment-1241736">
				<div id="div-comment-1241736" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">anonymouscommenter</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150612-00/?p=45391#comment-1241736">
			June 13, 2015 at 2:15 pm</a>		</div>

		<p>Joshua: I suspect you have a lot less exposure to real-world software than you think.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-anonymouscommenter even thread-even depth-1" id="comment-1241706">
				<div id="div-comment-1241706" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">anonymouscommenter</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150612-00/?p=45391#comment-1241706">
			June 14, 2015 at 2:49 am</a>		</div>

		<p>Then just hook CreateFileW or NtCreateFile? </p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-anonymouscommenter odd alt thread-odd thread-alt depth-1" id="comment-1241696">
				<div id="div-comment-1241696" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">anonymouscommenter</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150612-00/?p=45391#comment-1241696">
			June 14, 2015 at 3:35 am</a>		</div>

		<p>@Joshua If you start changing the code you&#39;re testing the first thing that happens is that you&#39;re not longer testing the code you actually want to test.</p>
<p>I think generally accepted policy for unit tests is to use the same code that you&#39;re releasing &#8211; same compiler settings, compile flags etc. Anything else just increases the risk</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-anonymouscommenter even thread-even depth-1" id="comment-1241686">
				<div id="div-comment-1241686" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">anonymouscommenter</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150612-00/?p=45391#comment-1241686">
			June 14, 2015 at 8:18 am</a>		</div>

		<p>unit tests also need to run automatically with no user input, like putting breakpoints and freezing threads</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-zlynx odd alt thread-odd thread-alt depth-1" id="comment-1241646">
				<div id="div-comment-1241646" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Zan+Lynx%27' rel='external nofollow' class='url'>Zan Lynx'</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150612-00/?p=45391#comment-1241646">
			June 15, 2015 at 1:51 am</a>		</div>

		<p>@Voo: I would call that integration testing myself. When I run a unit test it is almost always compiled in debug mode with all asserts enabled.</p>
<p>I would consider testing the release candidate code to be higher level than unit testing. Still mostly automated, but at that point we&#39;re testing the entire thing from user interface to database backend without any code mocks or other tricks.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-anonymouscommenter even thread-even depth-1" id="comment-1241626">
				<div id="div-comment-1241626" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">anonymouscommenter</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150612-00/?p=45391#comment-1241626">
			June 15, 2015 at 6:35 am</a>		</div>

		<p>@Zan Lynx&#39;</p>
<p>Your unit tests should run on your debug build, your release build, and anything in-between.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-anonymouscommenter odd alt thread-odd thread-alt depth-1" id="comment-1241616">
				<div id="div-comment-1241616" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">anonymouscommenter</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150612-00/?p=45391#comment-1241616">
			June 15, 2015 at 7:17 am</a>		</div>

		<p>If you aren&#39;t testing the exact code you release you might as well not test at all.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-davebacher even thread-even depth-1" id="comment-1241606">
				<div id="div-comment-1241606" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Dave+Bacher' rel='external nofollow' class='url'>Dave Bacher</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150612-00/?p=45391#comment-1241606">
			June 15, 2015 at 7:35 am</a>		</div>

		<p>I have a MFM hard drive they can borrow, that&#39;ll get you plenty of failed opens.</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

