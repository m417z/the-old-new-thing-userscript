<html>
<head>
<title>Nasty gotcha: The inadvertently named resource</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>Nasty gotcha: The inadvertently named resource</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>October 12, 2016 / year-entry #215</td></tr>
<tr><td><b>Tags:</b></td><td>code</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20161012-00/?p=94495</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>18</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">No such thing as undefined.</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>
In the resources of a Win32 module,
<a HREF="https://msdn.microsoft.com/library/windows/desktop/aa380599(v=vs.85).aspx">
resource files</a>,
you can identify a resource by number (ordinal)
or by name (string).
One horrific gotcha of the resource file format is that
it doesn't require you to quote strings that are used to
name resources.
</p>
<p>
Suppose you have this resource header file.
</p>
<pre>
// resource.h

#define IDD_ENTERPASSWORD 100
</pre>
<p>
and you use it in your resource file like this:
</p>
<pre>
#include &lt;resource.h&gt;

IDD_ENTERPASWORD DIALOG ...
BEGIN
    ...
END
</pre>
<p>
And your code tries to use the dialog like this:
</p>
<pre>
DialogBox(g_hinst, MAKEINTRESOURCE(IDD_ENTERPASSWORD),
          hwndParent, DialogProc);
</pre>
<p>
Everything compiles, but the <code>Dialog&shy;Box</code>
function returns <code>-1</code> without displaying any dialog box.
Your breakpoint on the <code>Dialog&shy;Proc</code> is never
hit.
What's going on?
</p>
<p>
What's going on is that in your resource file,
you misspelled "password".
</p>
<pre>
IDD_ENTER<u>PASWORD</u> DIALOG ...
</pre>
<p>
This typo was not reported by the resource compile because of
the strange rule that named resources permit but do not require
quotation marks around the name.
If you omit the quotation marks, the resource compile will "helpfully"
insert them for you.
Since <code>IDD_<wbr>ENTER&shy;PASWORD</code> is not defined anywhere,
the resource compile assumes you meant
</p>
<pre>
"IDD_ENTERPASWORD" DIALOG ...
</pre>
<p>
and generates a <i>named</i> dialog resource called
<code>"IDD_ENTERPASWORD"</code>.
If you did this on purpose, then the way you would access
the dialog box would be
</p>
<pre>
DialogBox(g_hinst, <font COLOR=blue>TEXT("IDD_ENTERPASWORD")</font>,
          hwndParent, DialogProc);
</pre>
<p>
But you didn't misspell the symbol on purpose.
It was a mistake.
You meant
<code>IDD_<wbr>ENTER&shy;PASSWORD</code>.
And your misspelling cost you dearly:
The resource was given the wrong identifier.
</p>
<p>
Sucks to be you.
</p>
<p>
The diagnosis for this class of problems is to verify that
the dialog box you describe does indeed exist.
</p>
<pre>
// Diagnosing the problem: Let's see if the resource exists.
// DialogBox(<u>g_hinst</u>, <u>MAKEINTRESOURCE(IDD_ENTERPASSWORD)</u>, ...)

auto res = <a HREF="https://blogs.msdn.microsoft.com/oldnewthing/20150101-00/?p=43243">FindResource</a>(g_hinst,
                        MAKEINTRESOURCE(IDD_ENTERPASSWORD),
                        RT_DIALOG);
</pre>
<p>
In the debugger, check the return value of <code>Find&shy;Resource</code>.
If it's <code>nullptr</code>, then the reason the <code>Dialog&shy;Box</code>
function failed is that the resource didn't exist.
The next step of the investigation would be to find out why the
resource isn't there.
</p>
<p>
Maybe you misspelled it.</p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (18)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment byuser comment-author-mzzt even thread-even depth-1 parent" id="comment-1268385">
				<div id="div-comment-1268385" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/The+MAZZTer' rel='external nofollow' class='url'>The MAZZTer</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20161012-00/?p=94495#comment-1268385">
			October 12, 2016 at 7:37 am</a>		</div>

		<p>Another option is to use a tool like this to browse your compiled resources: <a href="http://www.angusj.com/resourcehacker/" rel="nofollow">http://www.angusj.com/resourcehacker/</a></p>
<p>The fact that it is using a string name instead of an int would be immediately apparent.</p>

		
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-wndsks odd alt depth-2" id="comment-1268445">
				<div id="div-comment-1268445" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/skSdnW' rel='external nofollow' class='url'>skSdnW</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20161012-00/?p=94495#comment-1268445">
			October 12, 2016 at 8:56 am</a>		</div>

		<p>A problem with a lot of these tools is that they try to be helpful and display the standard ordinal types using friendly names like Bitmap and Icon without displaying actual strings with quotes so they can also add to the confusion.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even depth-2" id="comment-1268955">
				<div id="div-comment-1268955" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://stackoverflow.com/users/6037365/paulo-fran%c3%a7a-lacerda' rel='external nofollow' class='url'>Paulo França Lacerda</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20161012-00/?p=94495#comment-1268955">
			October 14, 2016 at 5:05 am</a>		</div>

		<p>Awesome tool! I use it a lot.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1 parent" id="comment-1268395">
				<div id="div-comment-1268395" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Stéphan Leclercq</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20161012-00/?p=94495#comment-1268395">
			October 12, 2016 at 7:40 am</a>		</div>

		<p>Welcome to the wonderful world of late binding ! This occurs in every language where the compiler allows you to use a symbol without explicitly defining it, such as Visual Basic without &#8220;option explicit&#8221;.</p>

		
				</div>
		<ol class="children">
		<li class="comment even depth-2 parent" id="comment-1269335">
				<div id="div-comment-1269335" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">IInspectable</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20161012-00/?p=94495#comment-1269335">
			October 17, 2016 at 2:02 pm</a>		</div>

		<p>This blog entry isn&#8217;t about late binding, though. The real issue here is a permissive syntax definition, that allows to mask bugs, that the resource compiler could easily spot. In fact, the resource compiler does observe, that the symbol isn&#8217;t defined and turns the wrong into&#8230; another wrong, that at least compiles. Had the resource definition syntax mandated the use of quotation marks for named resources, this typo wouldn&#8217;t have made it into the final executable.</p>

		
				</div>
		<ol class="children">
		<li class="comment odd alt depth-3" id="comment-1270415">
				<div id="div-comment-1270415" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Stéphan Leclercq</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20161012-00/?p=94495#comment-1270415">
			October 19, 2016 at 8:09 am</a>		</div>

		<p>Actually, your method would only catch the case where the name was mis-typed while using a #define to map a numeric value. If your application uses string-named resources instead of numbered ones (mine do&#8230;), merely quoting them would not catch the error.<br />
If, on the contrary, defining a resource would emit a named symbol in an obj-like file, a name mismatch would lead to either the c file not compiling, or the exe not linking&#8230; (note that i&#8217;m not advocating the &#8220;if it links, ship it!&#8221; method of development)</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment byuser comment-author-bboorman even thread-even depth-1" id="comment-1268405">
				<div id="div-comment-1268405" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Brian_EE' rel='external nofollow' class='url'>Brian_EE</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20161012-00/?p=94495#comment-1268405">
			October 12, 2016 at 7:46 am</a>		</div>

		<p>Another reason not to hand type items #define&#8217;d in header files. The editor I use allows me to double-click a word/keyword/string/number and select the whole text piece. Ctrl-C, Ctrl-Tab (to switch child window), Ctrl-V and I know that the identifier is correct. If it&#8217;s more than four or five letters, this is my routine.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-wndsks odd alt thread-odd thread-alt depth-1 parent" id="comment-1268455">
				<div id="div-comment-1268455" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/skSdnW' rel='external nofollow' class='url'>skSdnW</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20161012-00/?p=94495#comment-1268455">
			October 12, 2016 at 9:05 am</a>		</div>

		<p>Another surprising thing about the resource compiler is that Foo is not the same as &#8220;Foo&#8221;. It will actually store the string WITH quotes in the PE resource section. This means that a .rc file can contain Foo and &#8220;Foo&#8221; as separate named resources!</p>

		
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-samuel-bronson even depth-2" id="comment-1268535">
				<div id="div-comment-1268535" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Samuel+Bronson' rel='external nofollow' class='url'>Samuel Bronson</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20161012-00/?p=94495#comment-1268535">
			October 12, 2016 at 6:07 pm</a>		</div>

		<p>Oh, ouch! That totally ruins my idea that <code>rc</code> could have a &#8220;strict&#8221; mode where it required the quotes for stringy resource names.  I guess a &#8220;no stringy resource names&#8221; flag would still be possible, though&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment odd alt thread-even depth-1 parent" id="comment-1268456">
				<div id="div-comment-1268456" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ken Hagan</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20161012-00/?p=94495#comment-1268456">
			October 12, 2016 at 11:30 am</a>		</div>

		<p>I&#8217;ve seen named resource types, but I&#8217;ve never seen named resources in the wild. Did anyone *ever* use this feature, or has it always just been an irritation for Win32 programmers? Why are the APIs even designed this way? Why did anyone ever think that resources (baked, as they are, into the executable by the original programmer) should be addressed by anything more cumbersome than a small integer?</p>

		
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-alegrigoriev even depth-2" id="comment-1268495">
				<div id="div-comment-1268495" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/alegr1' rel='external nofollow' class='url'>alegr1</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20161012-00/?p=94495#comment-1268495">
			October 12, 2016 at 12:02 pm</a>		</div>

		<p>I&#8217;m actually using them in my current project. To include named files as resources.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt depth-2" id="comment-1268545">
				<div id="div-comment-1268545" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">xcomcmdr</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20161012-00/?p=94495#comment-1268545">
			October 13, 2016 at 3:54 am</a>		</div>

		<p>I prefer naming things that use integers. It&#8217;s way more easy to remember when you need the resource..</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-gregm even depth-2" id="comment-1268845">
				<div id="div-comment-1268845" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/GregM' rel='external nofollow' class='url'>GregM</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20161012-00/?p=94495#comment-1268845">
			October 13, 2016 at 12:42 pm</a>		</div>

		<p>Yes, I&#8217;ve used named resources in production code.  With MFC, you can load multiple resource DLLs that share identifier space.  You make any one of them active at any one time, and that&#8217;s where lookups go first.  It&#8217;s very hard to avoid resource conflicts when third party plugins are involved.  There were resources that I needed to be able to load even when the default resource DLL was one provided by a third party.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment byuser comment-author-hankhein odd alt thread-odd thread-alt depth-1" id="comment-1268485">
				<div id="div-comment-1268485" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Henri+Hein' rel='external nofollow' class='url'>Henri Hein</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20161012-00/?p=94495#comment-1268485">
			October 12, 2016 at 11:59 am</a>		</div>

		<p>I have run into this several times over the years.  It&#8217;s annoying, but I don&#8217;t know that I would call it nasty.  One small advantage to being stupid enough to repeat mistakes is that you learn to look out for it.  When I see that my DialogBox call returns -1, the first thing I do is check the resource identifier.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1268505">
				<div id="div-comment-1268505" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20161012-00/?p=94495#comment-1268505">
			October 12, 2016 at 1:01 pm</a>		</div>

		<p>How many of you had to read this twice because it wasn&#8217;t called resource.rh? I am one of them.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-paulo-franca-lacerda odd alt thread-odd thread-alt depth-1" id="comment-1268965">
				<div id="div-comment-1268965" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Paulo+Fran%C3%A7a' rel='external nofollow' class='url'>Paulo França</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20161012-00/?p=94495#comment-1268965">
			October 14, 2016 at 5:07 am</a>		</div>

		<p>Awesome tool! I use it a lot.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1 parent" id="comment-1269035">
				<div id="div-comment-1269035" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Richard</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20161012-00/?p=94495#comment-1269035">
			October 14, 2016 at 11:34 am</a>		</div>

		<p>Who writes these by hand anyway</p>

		
				</div>
		<ol class="children">
		<li class="comment odd alt depth-2" id="comment-1269345">
				<div id="div-comment-1269345" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">IInspectable</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20161012-00/?p=94495#comment-1269345">
			October 17, 2016 at 2:12 pm</a>		</div>

		<p>You&#8217;d run into the same issue, had you used an authoring tool for the resource script, only to find that typo in the resource.h file during a code review&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

