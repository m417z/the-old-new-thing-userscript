<html>
<head>
<title>The format of accelerator table resources</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>The format of accelerator table resources</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>March 16, 2007 / year-entry #96</td></tr>
<tr><td><b>Tags:</b></td><td>code</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20070316-00/?p=27593</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>9</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">Continuing in the extremely sporadic series on the format of resources, today we'll take a look at accelerator tables. This topic is so simple, I'll cover both 16-bit and 32-bit resources on the same day! In 16-bit Windows, the format of an accelerator table resource was simply an array of ACCEL structures. typedef struct tagACCEL...</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>
Continuing in the extremely sporadic series on the format of
resources, today we'll take a look at accelerator tables.
This topic is so simple, I'll cover both 16-bit and 32-bit
resources on the same day!
</p>
<p>
In 16-bit Windows, the format of an accelerator table resource
was simply an array of
<a HREF="http://msdn.microsoft.com/library/en-us/winui/winui/windowsuserinterface/userinput/keyboardaccelerators/keyboardacceleratorreference/keyboardacceleratorstructures/accel.asp">
<code>ACCEL</code> structures</a>.
</p>
<pre>
typedef struct tagACCEL {
    BYTE fVirt;
    BYTE bPadding; /* making the padding explicit */
    WORD key;
    WORD cmd;
} ACCEL, *LPACCEL;
</pre>
<p>
This array is the same array you would pass to the
<code>CreateAcceleratorTable</code>, with one important difference:
The <code>fVirt</code> of the last entry in the accelerator resource
has its high bit set to indicate that it is the end of the table.
</p>
<p>
The format of 32-bit accelerator table resources is nearly identical
to its 16-bit counterpart.
The only difference is the addition of an additional word of padding
to bring the size of the structure up to a multiple of four bytes.
</p>
<pre>
typedef struct tagACCEL_RESOURCE {
    BYTE fVirt;
    BYTE bPadding; /* making the padding explicit */
    WORD key;
    WORD cmd;
    WORD wPadding; /* making the padding explicit */
} ACCEL_RESOURCE;
</pre>
<p>
Once again, the last entry is marked by setting the high bit
of the <code>fVirt</code> member.
The extra word of padding adds a second obstacle to taking the resource
data and passing it to the <code>CreateAcceleratorTable</code>
function to create the accelerator table manually.
Not only do you have to strip off the high bit of the <code>fVirt</code>,
you also have to convert the table to an array of <code>ACCEL</code>
structures
and pass the converted table to the
<code>CreateAcceleratorTable</code> function.
</p>
<p>
That's all there is to the format of accelerator table resources.
I told you it was pretty simple.</p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (9)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-483033">
				<div id="div-comment-483033" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Bobert</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070316-00/?p=27593#comment-483033">
			March 16, 2007 at 10:07 am</a>		</div>

		<p>So, I wonder if any software is using that padding word to store data? &nbsp;It&#8217;s safe, right, because it&#8217;s just used for padding.</p>
<p>Hmmm, maybe I&#8217;ll do that and in a few years when Microsoft finds use for that word my claim to fame will be a mention in your blog.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-483063">
				<div id="div-comment-483063" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Tim</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070316-00/?p=27593#comment-483063">
			March 16, 2007 at 11:35 am</a>		</div>

		<p>I&#8217;m now curious about the next blog entry. &nbsp;</p>
<p>It&#8217;s bound to be a &quot;So you believed me when I said Accelerator resources were simple? Ha!&quot; type entry, isn&#8217;t it? :-)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-483163">
				<div id="div-comment-483163" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">josh</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070316-00/?p=27593#comment-483163">
			March 16, 2007 at 3:14 pm</a>		</div>

		<p>&quot;you also have to convert the table to an array of ACCEL structures and pass the converted table to the CreateAcceleratorTable function.&quot;</p>
<p>That seems a bit silly, why add the padding if you&#8217;ll only have to remove it? &nbsp;Is there another function that works on accelerator table resources and doesn&#8217;t go through CreateAcceleratorTable?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-483233">
				<div id="div-comment-483233" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Tom_</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070316-00/?p=27593#comment-483233">
			March 16, 2007 at 8:16 pm</a>		</div>

		<p>LoadAccelerators is the function you&#8217;re looking for, I think!</p>
<p>There&#8217;s another that will take an accelerator table and copy it into an array of HACCEL structs. I vaguely recall having used this before for merging accelerator tables&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-483283">
				<div id="div-comment-483283" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Mike Dunn</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070316-00/?p=27593#comment-483283">
			March 17, 2007 at 1:46 am</a>		</div>

		<p>Bobert&#8217;s post makes me wonder &#8211; are padding bytes also considered reserved? Could the OS ever decide to use those for some other purpose in the future? Or will they be ignored forever?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-483323">
				<div id="div-comment-483323" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">ramguru</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070316-00/?p=27593#comment-483323">
			March 17, 2007 at 5:23 pm</a>		</div>

		<p>These series look promising&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-483343">
				<div id="div-comment-483343" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">ramguru</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070316-00/?p=27593#comment-483343">
			March 17, 2007 at 6:27 pm</a>		</div>

		<p>You guys who want to find sense in padding just think: STRING resource uses WORD PADDING to form an ID of starting string entry. If block of string has ID equal to 2 (each block has up to 16 entries), and you see that first entry (in that block) starts with 27 ID, so there are used 10 (ZERO) WORDS for padding&#8230;what a waste!!!! because:</p>
<p>27=(2-1)*16 + 10 + 1 (first entry)</p>
<p>28=(2-1)*16 + 10 + 2 (second entry)</p>
<p>&#8230;.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-483413">
				<div id="div-comment-483413" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Norman Diamond</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070316-00/?p=27593#comment-483413">
			March 18, 2007 at 9:58 pm</a>		</div>

		<blockquote><p>
  WORD key;
</p></blockquote>
<p>Hmm. &nbsp;After discovering the hard way that in a Unicode window WM_CHAR really delivers the character value in Unicode, I&#8217;m wondering about this. &nbsp;MSDN does describe that part of WM_CHAR correctly but slyly omits any mention of the corresponding character code here. &nbsp;If FVIRTKEY is set then the value of key will fit in a byte, so the reason for being a WORD is &quot;obviously&quot; because wchar_t is that size. &nbsp;Now I have to find a keyboard with a Euro sign on it, make the Euro an accelerator, and see if 0x20AC is really the correct value.</p>
<blockquote><p>
  I told you it was pretty simple.
</p></blockquote>
<p>Sure, but the coding isn&#8217;t quite as simple as the format. &nbsp;Recently I added accelerators to an MFC project, figured out how to implement a PreTranslateMessage method, and figured out a way to deliver accelerations to one window (not happy with the way I did it though), and other windows lost their accelerators. &nbsp;Then I figured out that a class&#8217;s PreTranslateMessage method had better call its superclass (CWinApp::PreTranslateMessage) &quot;most&quot; of the time. &nbsp;I think it would be better if MSDN would say this, even though it&#8217;s an MFC method.</p>
<p>Saturday, March 17, 2007 1:46 AM by Mike Dunn</p>
<blockquote><p>
  are padding bytes also considered reserved?
</p></blockquote>
<p>They can&#8217;t be. &nbsp;Look at the structure declaration in MSDN, and the compiler can put any random garbage in the padding bytes. &nbsp;The OS must treat the padding as ignored rather than reserved.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-483483">
				<div id="div-comment-483483" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">josh</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070316-00/?p=27593#comment-483483">
			March 19, 2007 at 12:33 pm</a>		</div>

		<p>Tom_: &quot;LoadAccelerators is the function you&#8217;re looking for, I think!&quot;</p>
<p>I would expect that either LoadAccelerators goes through CreateAcceleratorTable, or there&#8217;s another internal function that wants the padding and CreateAcceleratorTable has to add the padding back in before calling that. &nbsp;Both possibilities seem a bit weird to me.</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

