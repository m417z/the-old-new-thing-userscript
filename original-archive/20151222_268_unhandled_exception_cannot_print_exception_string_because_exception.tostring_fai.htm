<html>
<head>
<title>Unhandled Exception: Cannot print exception string because Exception.ToString() failed.</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>Unhandled Exception: Cannot print exception string because Exception.ToString() failed.</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>December 22, 2015 / year-entry #269</td></tr>
<tr><td><b>Tags:</b></td><td>other</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20151222-00/?p=92691</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>14</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">So that happened.</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>
I ran an internal tool, and it communicated with a back-end
service, and then displayed the error
</p>
<blockquote CLASS="q"><p>
Unhandled Exception:
Cannot print exception string because Exception.ToString() failed.
</p>
</blockquote>
<p>
I can't figure out what that even means.
</p>
<p>
I waited a little while, then tried again,
</p>
<p>
It worked the second time.
</p>
<p>
Didn't even need to turn it off and back on again.</p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (14)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-1220111">
				<div id="div-comment-1220111" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">12BitSlab</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20151222-00/?p=92691#comment-1220111">
			December 22, 2015 at 7:14 am</a>		</div>

		<p>Raymond, I used to see that with .Net 1.1 managed code.  Haven&#8217;t seen that from 2.0 and up.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1220121">
				<div id="div-comment-1220121" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ben Voigt</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20151222-00/?p=92691#comment-1220121">
			December 22, 2015 at 7:20 am</a>		</div>

		<p>I can readily believe that collecting exception details into a string might run out of memory.</p>
<p>That said, they managed to log/display *something*.  I feel that before throwing up one&#8217;s hands in defeat, it would have been better to fall back to just the exception typename, which gives at least some information about what bombed.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1 parent" id="comment-1220131">
				<div id="div-comment-1220131" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://adamrosenfield.com' rel='external nofollow' class='url'>Adam Rosenfield</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20151222-00/?p=92691#comment-1220131">
			December 22, 2015 at 7:29 am</a>		</div>

		<p>Clearly the developer never tested the exception path.  I&#8217;d wager that the custom Exception subclass is NRE&#8217;ing on some field of its.</p>

		
				</div>
		<ol class="children">
		<li class="comment odd alt depth-2 parent" id="comment-1220152">
				<div id="div-comment-1220152" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20151222-00/?p=92691#comment-1220152">
			December 22, 2015 at 9:42 am</a>		</div>

		<p>A search of the internet shows a bunch of random hits with the exact same message text. I&#8217;m led to believe the error message really is in some older version of Exception.ToString() itself, that is, it&#8217;s wrapped in a try-catch and returns that constant string on failure. I checked sourceof.net and it&#8217;s not there now though.</p>

		
				</div>
		<ol class="children">
		<li class="comment even depth-3" id="comment-1220164">
				<div id="div-comment-1220164" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">NTAuthority</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20151222-00/?p=92691#comment-1220164">
			December 22, 2015 at 1:21 pm</a>		</div>

		<p>It&#8217;s still there in the open-source CoreCLR: <a href="https://github.com/dotnet/coreclr/blob/ff328b606c4edad13e9a211a8d89288340952f4c/src/vm/excep.cpp#L5947" rel="nofollow">https://github.com/dotnet/coreclr/blob/ff328b606c4edad13e9a211a8d89288340952f4c/src/vm/excep.cpp#L5947</a> (the reference string is elsewhere, an internet search for the constant shows it&#8217;s said string) :)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-ranta odd alt depth-3" id="comment-1220191">
				<div id="div-comment-1220191" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/ranta' rel='external nofollow' class='url'>ranta</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20151222-00/?p=92691#comment-1220191">
			December 23, 2015 at 12:45 am</a>		</div>

		<p>CoreCLR calls that error message IDS_EE_EXCEPTION_TOSTRING_FAILED: <a href="https://github.com/dotnet/coreclr/blob/bc146608854d1db9cdbcc0b08029a87754e12b49/src/dlls/mscorrc/mscorrc.rc#L1409" rel="nofollow">https://github.com/dotnet/coreclr/blob/bc146608854d1db9cdbcc0b08029a87754e12b49/src/dlls/mscorrc/mscorrc.rc#L1409</a><br />
I don&#8217;t see any code loading that string though. Perhaps it&#8217;s only used in the full .NET Framework.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment even thread-odd thread-alt depth-1" id="comment-1220132">
				<div id="div-comment-1220132" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">DysgraphicProgrammer</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20151222-00/?p=92691#comment-1220132">
			December 22, 2015 at 8:24 am</a>		</div>

		<p>Classic Fail-Fail. The tool fails, then while trying to print an error message, it fails at that. The programmer probably never tested fail cases.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-even depth-1" id="comment-1220142">
				<div id="div-comment-1220142" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">MV</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20151222-00/?p=92691#comment-1220142">
			December 22, 2015 at 8:25 am</a>		</div>

		<p>I&#8217;ve hit something like that, only there was no try/catch around the call to exception.ToString().  Deep down something went wrong, it created a subclassed Exception object, added a set of key/value pairs to (with diagnostic info), then threw it.  Near the top it caught the exception and tried to log it by dumping out the key/value pairs.  Only it used value.ToString(), and if the value was null, the act of ToString()-ing it would throw an exception.  So instead of a nice clear error message, you get an &#8220;impossible&#8221; situation where a throw deep down made it all the way out without being caught (or so it seemed) and the program crashed.  Took FOREVER to figure out what was going on!</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-odd thread-alt depth-1" id="comment-1220151">
				<div id="div-comment-1220151" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Mike S</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20151222-00/?p=92691#comment-1220151">
			December 22, 2015 at 8:43 am</a>		</div>

		<p>My best guess is that whatever threw the exception passed in a null message. ToString() tried to read the message, failed, and fell over.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-fleet-command odd alt thread-even depth-1 parent" id="comment-1220161">
				<div id="div-comment-1220161" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Fleet+Command' rel='external nofollow' class='url'>Fleet Command</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20151222-00/?p=92691#comment-1220161">
			December 22, 2015 at 10:12 am</a>		</div>

		<p>It&#8217;s a .NET Framework error.</p>
<p>And if I had to guess, I&#8217;d say someone didn&#8217;t do a good job of creating an exception object in ASP.NET. But that&#8217;s based on a mere unreliable assumption.</p>

		
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-cheong even depth-2 parent" id="comment-1220182">
				<div id="div-comment-1220182" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/cheong00' rel='external nofollow' class='url'>cheong00</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20151222-00/?p=92691#comment-1220182">
			December 22, 2015 at 5:19 pm</a>		</div>

		<p>Yup. .NET v4.5 introduced a feature that it&#8217;ll delay initialization of all classes until their first usage. Unfortunately it caused bug on static/const strings that assumed the String class is always initialized.</p>
<p>In the second time you run it, the String class (and possibly the class that caused the bug) is initialized hence the code works the second time.</p>
<p>The bug is fixed in other v4.5.x updates and v4.6.</p>

		
				</div>
		<ol class="children">
		<li class="comment odd alt depth-3" id="comment-1220351">
				<div id="div-comment-1220351" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Kathy O'Hara</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20151222-00/?p=92691#comment-1220351">
			December 25, 2015 at 3:22 am</a>		</div>

		<p>If true, turning it off and on again would have actually prevented it from working.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment even thread-odd thread-alt depth-1" id="comment-1220171">
				<div id="div-comment-1220171" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">nobugz</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20151222-00/?p=92691#comment-1220171">
			December 22, 2015 at 2:17 pm</a>		</div>

		<p>IErrorInfo.GetDescription failed with E_FAIL(0x80004005)</p>
<p>Well, that was accurate.  Special kudos to E_UNEXPECTED = &#8220;Catastrophic failure&#8221;, back with a vengeance in WinRT/UWP.  Very accurate, the failure to report a decent error was truly catastrophic.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-even depth-1" id="comment-1220201">
				<div id="div-comment-1220201" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Neil</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20151222-00/?p=92691#comment-1220201">
			December 23, 2015 at 2:16 am</a>		</div>

		<p>Just as well .ToString() worked on the unhandled exception exception, otherwise we could have been in for a long night&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

