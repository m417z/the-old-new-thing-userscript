<html>
<head>
<title>How do I get the current value of the RSP register from a C/C++ function? (No answer, but a solution.)</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>How do I get the current value of the RSP register from a C/C++ function? (No answer, but a solution.)</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>May 1, 2013 / year-entry #119</td></tr>
<tr><td><b>Tags:</b></td><td>code</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20130501-00/?p=4493</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>14</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">A customer using Visual Studio wanted to know how to obtain the current value of the x64 RSP register from a C/C++ function. They noted that on the x86, you can drop to inline assembly, and on the ia64, you can use the __getReg intrinsic to retrieve the value of any register. There is no...</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>A customer using Visual Studio wanted to know how to obtain the current value of the x64 RSP register from a C/C++ function. They noted that on the x86, you can drop to inline assembly, and on the ia64, you can use the <code>__getReg</code> intrinsic to retrieve the value of any register. There is no corresponding <code>__getReg</code> intrinsic on x64.</p>
<p> There's no really good way of doing this. The customer can sort of get close with <code>_Address&shy;Of&shy;Return&shy;Address()</code>. Other approximations would be to call <code>_alloca(0)</code>, or to call a helper function which allocates a local variable and returns its address. </p>
<p> Now, if you were the one answering this question and you stopped there, then you'd be guilty of answering the question without first understanding the problem. There must be some larger problem they are trying to solve, and they managed to break it down into two parts, <a href="http://blogs.msdn.com/b/oldnewthing/archive/2010/11/26/10096841.aspx"> the easy part and the impossible part</a>, and they wanted help with the impossible part. </p>
<p> The customer was kind enough to elaborate. </p>
<p> "We are using RSP to generate a system-wide unique value." </p>
<p> Whoa, there. RSP is not all that unique. After all, if the function gets called twice, the RSP value might be the same the second time. (Maybe they clean up the unique value when the function returns, so this isn't a problem.) And of course, since each process has its own address space, another process can perform the same operation with the same value of RSP. </p>
<p> If you want a system-wide unique 64-bit value, use the function <code>Allocate&shy;Locally&shy;Unique&shy;Id</code>. </p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (14)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-1053603">
				<div id="div-comment-1053603" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Jonny</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130501-00/?p=4493#comment-1053603">
			May 1, 2013 at 7:51 am</a>		</div>

		<p>Although you cannot do inline assembly with the x64 compiler &nbsp;you can include an assembly file in your project.</p>
<p>PROC GetRSP</p>
<p>push rsp</p>
<p>pop rax</p>
<p>return</p>
<p>GetRSP ENDP</p>
<div class="post">[<em>This code is not valid according to the Win32 ABI. If the &quot;push rsp&quot; takes a stack overflow, your process will be terminated due to missing unwind data. In fact, it will probably be flagged as potential malware code injection. On top of that, it doesn&#39;t even answer the question (much less solve the problem), since this does not return the original rsp but rather the GetRSP function&#39;s rsp! -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1053633">
				<div id="div-comment-1053633" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130501-00/?p=4493#comment-1053633">
			May 1, 2013 at 8:08 am</a>		</div>

		<p>I saw a constrained version of this solution in the nethack source code. The constrained version ended up being process-wide unique while allocated. The solution was an otherwise unused local variable on the stack that had its address taken.</p>
<p>@Jonny: nice.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1053643">
				<div id="div-comment-1053643" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130501-00/?p=4493#comment-1053643">
			May 1, 2013 at 8:33 am</a>		</div>

		<p>[This code is not valid according to the Win32 ABI. If the &quot;push rsp&quot; takes a stack overflow, your process will be terminated due to missing unwind data.]</p>
<p>Can&#39;t happen. The call instruction that called this function left the stack at an odd multiple of 8.</p>
<div class="post">[<em>Good point. It&#39;s still not a habit you should fall into, though, since most functions are not this trivial. -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1053793">
				<div id="div-comment-1053793" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Don</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130501-00/?p=4493#comment-1053793">
			May 1, 2013 at 11:05 am</a>		</div>

		<p>Is there doc page for Allocate&shy;Locally&shy;Unique&shy;Id? Couldn&#39;t find one on MSDN. The Google has a couple of links to undocumented APIs but was hoping to read a bit in something official</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1053813">
				<div id="div-comment-1053813" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Mihai</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130501-00/?p=4493#comment-1053813">
			May 1, 2013 at 11:21 am</a>		</div>

		<p>@Din: <a rel="nofollow" target="_new" href="http://msdn.microsoft.com/en-us/library/windows/desktop/aa375260(v=vs.85).aspx" rel="nofollow">msdn.microsoft.com/&#8230;/aa375260(v=vs.85).aspx</a></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1053823">
				<div id="div-comment-1053823" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">@Don</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130501-00/?p=4493#comment-1053823">
			May 1, 2013 at 11:22 am</a>		</div>

		<p>It was the first Google Result for me? <a rel="nofollow" target="_new" href="http://msdn.microsoft.com/en-us/library/windows/desktop/aa375260%28v=vs.85%29.aspx" rel="nofollow">msdn.microsoft.com/&#8230;/aa375260%28v=vs.85%29.aspx</a></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1053833">
				<div id="div-comment-1053833" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Don</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130501-00/?p=4493#comment-1053833">
			May 1, 2013 at 11:31 am</a>		</div>

		<p>Funny. I was using Bing (and of course the term Google to mean &quot;searching the web&quot; ;)) <a href="http://www.bing.com/search?q=Allocate%C2%ADLocally%C2%ADUnique%C2%ADId&amp;qs=n&amp;form=QBLH&amp;pq=allocate%C2%ADlocally%C2%ADunique%C2%ADid&amp;sc=0-0&amp;sp=-1&amp;sk=" target="_new" rel="nofollow">http://www.bing.com/search</a></p>
<div class="post">[<em>Um, you searched for the soft hyphens. -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1053843">
				<div id="div-comment-1053843" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Mihai</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130501-00/?p=4493#comment-1053843">
			May 1, 2013 at 11:46 am</a>		</div>

		<p>I first tried bing too. It showed some 3rd party links. Then I used the ye olde engine which linked me to msdn directly (prolly because I&#39;m logged in and knows my preferences). The thing is, I&#39;ve now tried bing again and the msdn link is first. How about that. :-)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-alegrigoriev even thread-even depth-1" id="comment-1053853">
				<div id="div-comment-1053853" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/alegr1' rel='external nofollow' class='url'>alegr1</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130501-00/?p=4493#comment-1053853">
			May 1, 2013 at 11:53 am</a>		</div>

		<p>@Joshua:</p>
<p>Too bad that two consequential calls in the same context will return the same value.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1053873">
				<div id="div-comment-1053873" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Don</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130501-00/?p=4493#comment-1053873">
			May 1, 2013 at 1:33 pm</a>		</div>

		<p>Looks like the search picked up the soft hyphens cause I copied and pasted from the article. Allocate &amp; shy; Locally &amp; shy; Unique &amp; shy; Id &nbsp; Html entities throwing me off! Thanks for the links above. Another good article Raymond. Never heard of that API which is what got me searching.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-yuhong-bao even thread-even depth-1" id="comment-1053883">
				<div id="div-comment-1053883" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Yuhong+Bao' rel='external nofollow' class='url'>Yuhong Bao</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130501-00/?p=4493#comment-1053883">
			May 1, 2013 at 3:08 pm</a>		</div>

		<p>&quot;This code is not valid according to the Win32 ABI.&quot;</p>
<p>*Windows x64 ABI.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1053913">
				<div id="div-comment-1053913" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">foo</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130501-00/?p=4493#comment-1053913">
			May 1, 2013 at 6:05 pm</a>		</div>

		<p>I was more interested in learning of the existence of _AddressOfReturnAddress. Googling it verbatim produced this as one of the results: <a rel="nofollow" target="_new" href="http://stackoverflow.com/questions/6733821/reading-the-rsp-register-from-microsoft-c" rel="nofollow">stackoverflow.com/&#8230;/reading-the-rsp-register-from-microsoft-c</a> (Reading the RSP register from Microsoft C++). That Jalf guy is pretty smart&#8230; he basically asked in a comment what Raymond asked.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1053923">
				<div id="div-comment-1053923" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Myria</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130501-00/?p=4493#comment-1053923">
			May 1, 2013 at 6:29 pm</a>		</div>

		<p>@Jonny: Why not &quot;mov rax, rsp&quot;  &quot;ret&quot;? &nbsp;No need to use the stack, and such a function is valid as a leaf (the first instruction is 2 bytes).</p>
<p>I&#39;ve used the value of ESP/RSP as one of many parts of a seed for a secure random number generator in case CryptGenRandom and SystemFunction036 fail for some reason. &nbsp;It does work a little bit, particularly with /DYNAMICBASE and on Windows 8 /HIGHENTROPYVA.</p>
<p>Asking for the stack pointer is inherently inaccurate in C. &nbsp;For example, in x86-32, Visual C++ generally will use &quot;push&quot; to put parameters to subroutines onto the stack. &nbsp;If you were to pass the value of ESP to such a function, which ESP do you mean?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1054883">
				<div id="div-comment-1054883" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">David Walker</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130501-00/?p=4493#comment-1054883">
			May 7, 2013 at 12:03 pm</a>		</div>

		<p>The point of this story is that the user was looking for the wrong thing. &nbsp;They wanted a system-wide unique value, but they were not looking in the right place to generate one.</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

