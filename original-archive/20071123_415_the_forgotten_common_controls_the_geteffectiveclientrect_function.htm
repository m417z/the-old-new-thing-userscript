<html>
<head>
<title>The forgotten common controls: The GetEffectiveClientRect function</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>The forgotten common controls: The GetEffectiveClientRect function</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>November 23, 2007 / year-entry #416</td></tr>
<tr><td><b>Tags:</b></td><td>code</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20071123-00/?p=24403</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>10</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">The GetEffectiveClientRect function is another one in the category of functions that everybody tries to pretend doesn't exist. It's not as bad as MenuHelp, but it's still pretty awful. The idea behind the GetEffectiveClientRect function is that you have a frame window with a bunch of optional gadgets, such as a status bar or toolbar....</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>The <code>GetEffectiveClientRect</code> function is another one in the category of functions that everybody tries to pretend doesn't exist. It's not <a href="http://blogs.msdn.com/oldnewthing/archive/2006/06/08/622194.aspx"> as bad as <code>MenuHelp</code></a>, but it's still pretty awful.</p>
<p> The idea behind the <code>GetEffectiveClientRect</code> function is that you have a frame window with a bunch of optional gadgets, such as a status bar or toolbar. The important thing is that these optional gadgets all reside at the borders of the window. In our examples, the toolbar goes at the top and the status bar goes at the bottom. You might also have gadgets on the left and right such as a navigation tree or a preview pane. They can also be stacked up against the border, such as an address bar and a toolbar. The important thing is that all the gadgets go around the border. </p>
<p> The first parameter to the <code>GetEffectiveClientRect</code> function is the window whose effective client rectangle you wish to compute; no surprises there. The second parameter is a pointer to the rectangle that receives the result; again, hardly surprising. It's that third parameter, the array of integers, that is the weird one. </p>
<p> The first two integers in the array are ignored. The remainder of the array consists of pairs of nonzero integers; the array is terminated by a pair consisting of zeroes. Of each pair, only the second integer is used; it is the control identifier of a child window of the window you passed in. If that child window is visible (in a special sense I'll explain later), then its window rectangle is subtracted from the parent window's client rectangle. After all the rectangles of visible children are subtracted away, what remains is the <i>effective client rectangle</i>. </p>
<p> For example, suppose your window's client rectangle is 100&times;100 and there is a toolbar at (0,&nbsp;0)&ndash;(100,&nbsp;20) and a status bar at (0,&nbsp;90)&ndash;(100,&nbsp;100), both visible. The <code>GetEffectiveClientRect</code> starts with the full client rectangle (0,&nbsp;0)&ndash;(100,&nbsp;100), subtracts the two rectangles corresponding to the toolbar and status bar, resulting in (0,&nbsp;20)&ndash;(100,&nbsp;90). </p>
<table border="0" cellspacing="0" style="border-collapse: collapse; width: 30em">
<tr style="height: 2em">
<td rowspan="2" valign="center" align="right"><font size="-2">(0, 0)</font></td>
<td></td>
<td rowspan="2" valign="center" align="left"><font size="-2">(100, 0)</font></td>
</tr>
<tr style="height: 2em">
<td rowspan="2" align="center" bgcolor="#FFD700" style="border: solid .75pt black">toolbar</td>
</tr>
<tr>
<td rowspan="2" valign="center" align="right"><font size="-2">(0, 20)</font></td>
<td rowspan="2" valign="center" align="left"><font size="-2">(100, 20)</font></td>
</tr>
<tr>
<td bgcolor="#FFFFFF" style="border-left: solid .75pt black;                                border-right: solid .75pt black;"></td>
</tr>
<tr style="height: 8em">
<td></td>
<td bgcolor="#FFFFFF" align="center" valign="center" style="border-left: solid .75pt black;                border-right: solid .75pt black;">effective client</td>
<td></td>
</tr>
<tr style="height: 1em">
<td rowspan="2" valign="center" align="right"><font size="-2">(0, 90)</font></td>
<td bgcolor="#FFFFFF" align="center" valign="center" style="border-left: solid .75pt black;                border-right: solid .75pt black;"></td>
<td rowspan="2" valign="center" align="left"><font size="-2">(100, 90)</font></td>
</tr>
<tr style="height: 1em">
<td rowspan="2" align="center" bgcolor="#C0C0C0" style="border: solid .75pt black"><font size="-1">status bar</font></td>
</tr>
<tr style="height: 1em">
<td rowspan="2" valign="center" align="right"><font size="-2">(0, 100)</font></td>
<td rowspan="2" valign="center" align="left"><font size="-2">(100, 100)</font></td>
</tr>
</table>
<p> If the control IDs for the toolbar and status bar are 100 and 101, respectively, then the array you need to pass would be <code>{ *, *, &curren;, 100, &curren;, 101, 0, 0 }</code> where * can be anything and &curren; can be any nonzero value. </p>
<p> Continuing from the above example, if the status bar were hidden, then the effective client rectangle would be (0,&nbsp;20)&ndash;(100,&nbsp;100) because hidden windows are ignored when computing the effective client rectangle. </p>
<p> Okay, first question: What is that special sense of visible I mentioned above? I didn't write simply <i>visible</i> because <code>IsWindowVisible</code> reports a window as visible only if the window <i>and all its parents</i> are visible. But all that <code>GetEffectiveClientRect</code> cares about is whether the window is visible in the sense that the <code>WS_VISIBLE</code> style is set. In other words, that the window <i>would be</i> visible if its parent is. </p>
<p> Why does the <code>GetEffectiveClientRect</code> use this strange definition of visible? Because it wants to make it possible for you to get the effective client rectangle of a window while it is still hidden, the result being the effective client rectangle you would get once the window becomes visible. This is valuable because it allows you to do your calculations "behind the scenes" while the window is still hidden (for example, in your <code>WM_CREATE</code> handler). </p>
<p> Second question: Why is the integer array so crazy? What's with all the ignored values and the "must be nonzero" values? Why can't it just be the array  <code>{ 100, 101, 0 }</code>? </p>
<p> The format of the integer array is the same as the one used by the <code>ShowHideMenuCtl</code> function. The intent was that you could use the same array for both functions. The two functions do work well together: The <code>ShowHideMenuCtl</code> function do the work of letting the user toggle the toolbar and status bar on and off, and <code>GetEffectiveClientRect</code> lets you compute the client rectangle that results. </p>
<p> That said, the <code>GetEffectiveClientRect</code> function is largely ignored nowadays. It doesn't do anything you couldn't already do yourself, and when you write your own version, you don't need to deal with that crazy integer array. </p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (10)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-569723">
				<div id="div-comment-569723" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">yellow</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071123-00/?p=24403#comment-569723">
			November 23, 2007 at 11:45 am</a>		</div>

		<p>MenuHelp isn&#8217;t that bad, and if there&#8217;s nothing more to GetEffectiveClientRect then what you wrote, then I guess it&#8217;s not that bad either. Sure I could do those things myself, but IMHO there&#8217;s next to no advantage.</p>
<p>Regedit uses MenuHelp, and it seems not to be bothered by any menu index problems. IMHO why would GetEffectiveClientRect be awful if it can be useful (only) when combined with ShowHideMenuCtl? These functions can accomplish fairly common tasks.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-569793">
				<div id="div-comment-569793" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Narcolepsy</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071123-00/?p=24403#comment-569793">
			November 23, 2007 at 1:47 pm</a>		</div>

		<p>I suppose it might be allright.</p>
<p>If you&#8217;ve got a group of bars, each of which sits in a tray, and contain controls/windows of their own, there&#8217;s almost no need to use it.</p>
<p>The bigger task is working out;</p>
<p>The size of the tray from a group of dynamic bar positions.</p>
<p>If the floating bar is in a sensible location to be dropped onto the tray.</p>
<p>If the bar is going to be dropped, it&#8217;s location in the tray.</p>
<p>If the tray can be sized to fit a bar on the basis of a given client window.</p>
<p>(Don&#8217;t mention activation)</p>
<p>By the time that&#8217;s all done, working out why there&#8217;s additional padding seems almost trivial&#8230;. Crazy maybe&#8230;.. In fact, what they hey, I already have that darn client rect, I&#8217;ll just grab it and use it.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-569813">
				<div id="div-comment-569813" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ulric</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071123-00/?p=24403#comment-569813">
			November 23, 2007 at 3:13 pm</a>		</div>

		<p>a truly obscure function with a documentation so spartan, it really doesn&#8217;t want to be used&#8230;</p>
<p>I don&#8217;t understand this bit in your article:</p>
<p>&quot;The first two integers in the array are ignored.&quot; That&#8217;s not at all in the MSDN doc</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-569883">
				<div id="div-comment-569883" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Cheong</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071123-00/?p=24403#comment-569883">
			November 23, 2007 at 9:38 pm</a>		</div>

		<p>From MSDN article of ShowHideMenuCtl():</p>
<p>The second value in the first pair must be the handle to the application&#8217;s main menu.</p>
<p>If these two function are designed to work together, I&#8217;d think the first two parameters are hardly irrelevant. (It make sense to also subtract menu area from effective client area, doesn&#8217;t it?)</p>
<p>On a second thought, Vista has changed so that menus are invisible until you press &quot;Alt&quot;, perhaps that changes the &quot;formula&quot; for GetEffectiveClientRect()?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-569933">
				<div id="div-comment-569933" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.pretentiousname.com' rel='external nofollow' class='url'>Leo Davidson</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071123-00/?p=24403#comment-569933">
			November 24, 2007 at 8:29 am</a>		</div>

		<p>Choeng: That isn&#8217;t Vista so much as Explorer and IE7.</p>
<p>If other programs want that behaviour then they have to be changed to have it, so APIs like the one in question are unlikely to have changed. (It would break a lot if they did.)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-569963">
				<div id="div-comment-569963" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">overlord pebkac</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071123-00/?p=24403#comment-569963">
			November 24, 2007 at 11:49 am</a>		</div>

		<p>It would be a support nightmare too. Heck, I&#8217;d be puzzled for a while by the new behaviour myself.</p>
<p>But if there are for instance 2 gadgets at the bottom, like a status bar and a static, would this function be called twice, in practise? Once to determine where the static goes, and once more to determine what&#8217;s really left?</p>
<p>Much thanks BTW for extensively documenting this function in a clear way. Too bad the MSDN doc says it&#8217;s deprecated, which could mean that this function gets dropped sometime. Though maybe (if I&#8217;ll use the 2 functions) I could copy the wine version into my project, since I&#8217;m writing free software anyway ;)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-570003">
				<div id="div-comment-570003" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Dan</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071123-00/?p=24403#comment-570003">
			November 24, 2007 at 10:42 pm</a>		</div>

		<p>&quot;It would be a support nightmare too. Heck, I&#8217;d be puzzled for a while by the new behaviour myself.&quot;</p>
<p>That reminds me of an unrelated something&#8230; for a while Safari for Windows lost it&#8217;s titlebar. &nbsp;There was space for it but no text, and clicking did nothing (using ALT and arrow keys seemed to work and made menus drop down from nowhere). &nbsp;That was odd. &nbsp;It seems fixed in the latest version though.</p>
<p>Narc: I imagine this function was designed well before the more complex rebar control (which is even less complex than the docking toolbar stuff you&#8217;re describing). &nbsp;But it should still work ok&#8230; as long as you recall it every time something happens that would change the size of a docked control, in order to get the new ClientRect. &nbsp;Of course, this isn&#8217;t as simple a scenario as using it with a simple toolbar and statusbar with ShowHideMenuCtl&#8230; in fact you probably wouldn&#8217;t use ShowHideMenuCtl on a rebarband or floating toolbar dock area, just the individual bars (and I would have no clue if that function would even work).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-570053">
				<div id="div-comment-570053" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Shantanu</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071123-00/?p=24403#comment-570053">
			November 26, 2007 at 12:50 am</a>		</div>

		<p>Hi,</p>
<p>The following MSDN page:</p>
<p><a rel="nofollow" target="_new" href="http://msdn2.microsoft.com/EN-US/library/bb775674.aspx" rel="nofollow">http://msdn2.microsoft.com/EN-US/library/bb775674.aspx</a></p>
<p>&#8230; mentions the following</p>
<p>&quot;The first control (first two INTs in lpInfo) is skipped completely. Pass two zeros.&quot;</p>
<p>The part about the first two INTs being ignored should probably be mentioned in the main doc!!! :)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-570433">
				<div id="div-comment-570433" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Peter Donnelly (MSFT)</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071123-00/?p=24403#comment-570433">
			November 26, 2007 at 3:07 pm</a>		</div>

		<p>&#8212; The part about the first two INTs being ignored should probably be mentioned in the main doc!!! &#8212;</p>
<p>Consider it done.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-571013">
				<div id="div-comment-571013" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Shantanu</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071123-00/?p=24403#comment-571013">
			November 27, 2007 at 2:27 am</a>		</div>

		<p>&lt;quote&gt;</p>
<p>Consider it done.</p>
<p>&lt;/quote&gt;</p>
<p>&quot;Thanks!&quot; :)</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

