<html>
<head>
<title>How can I tell if a file is an image of some type?</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>How can I tell if a file is an image of some type?</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>April 30, 2015 / year-entry #90</td></tr>
<tr><td><b>Tags:</b></td><td>code</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20150430-00/?p=44974</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>20</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">A customer wanted to know if there is some standard way of determining from the full path to a file whether it is a photo or image. They are writing a program that transfers a bunch of files to a back-end server, and they want to treat photos differently from other files. You can use...</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>
A customer wanted to know if there is some standard way of
determining from the full path to a file whether it is a photo or image.
They are writing a program that transfers a bunch of files
to a back-end server,
and they want to treat photos differently from other files.
</p>
<p>
You can use
<a HREF="http://msdn.microsoft.com/en-us/library/windows/desktop/bb773463(v=vs.85).aspx">
the
<code>Assoc&shy;Get&shy;Perceived&shy;Type</code>
function</a>
to classify a file into one of a variety of categories.
You can
<a HREF="http://msdn.microsoft.com/en-us/library/windows/desktop/bb762520(v=vs.85).aspx">
consult the document to see the full list</a>,
but it's things like "image", "audio", "video", "document".
This information is obtained by studying the file extension
and looking up
<a HREF="http://msdn.microsoft.com/en-us/library/windows/desktop/cc144148(v=vs.85).aspx">
the registered perceived type</a>.
</p>
<p>
Let's take the function out for a spin:
</p>
<pre>
#define UNICODE
#define _UNICODE
#include &lt;windows.h&gt;
#include &lt;shlwapi.h&gt;
#include &lt;stdio.h&gt; // horrors! mixing C and C++!

int __cdecl wmain(int argc, wchar_t **argv)
{
 PERCEIVED perceived;
 PERCEIVEDFLAG flag;
 PWSTR pszType;
 if (argc &gt; 1 &amp;&amp; SUCCEEDED(AssocGetPerceivedType(
    PathFindExtensionW(argv[1]),
    &amp;perceived, &amp;flag, &amp;pszType)))
 {
  wprintf(L"Type is %ls\n", pszType);
  if (perceived == PERCEIVED_TYPE_IMAGE) {
   wprintf(L"Hey, that's an image!\n");
  }
  CoTaskMemFree(pszType);
 }
 return 0;
}
</pre>
<p>
Run this program and give a file name, or just an extension
(with the dot) as the command line parameter.
It will tell you the perceived type and include a special
message if the type is an image.
</p>
<p>
But let's look at the customer's question again.
It's not clear whether they are trying to identify files by
file format or by classification.
For example, suppose the file in question is a
<a HREF="http://en.wikipedia.org/wiki/Tagged_Image_File_Format">
TIFF</a> image.
The
<code>Assoc&shy;Get&shy;Perceived&shy;Type</code>
function will report this as an image, because, well, it's an image.
But that may not be a file format that their back-end server supports.
</p>
<ul>
<li>If they wanted to know whether the file is a PNG, GIF, or JPG
    because those are the image formats supported by their
    back-end server,
    then they need to check for those specific extensions
    (and possibly even sniff file contents if they are paranoid).</p>
<li>If they care only that the file represents some sort of image
    (possibly in a format their program does not know how to parse),
    because they want to, say, upload all images into a Pictures folder
    regardless of the image format,
    then they should use the Perceived Type.
</ul>
<p>
The customer thanked us for the pointer to
the
<code>Assoc&shy;Get&shy;Perceived&shy;Type</code>
function and especially for the clarifying remarks.
"It turns out that the feature specification was not clear
on the definition of 'image file',
so that's something we will need to resolve ourselves.
But the information you provided will definitely solve
our problem, once we figure out what our problem is!"</p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (20)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-1187554">
				<div id="div-comment-1187554" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Mason Wheeler</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150430-00/?p=44974#comment-1187554">
			April 30, 2015 at 7:04 am</a>		</div>

		<p>&quot;But the information you provided will definitely solve our problem, once we figure out what our problem is!&quot;</p>
<p>Wow. &nbsp;Not often you see a client that honest about not truly knowing what they want&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1187564">
				<div id="div-comment-1187564" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">David-T</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150430-00/?p=44974#comment-1187564">
			April 30, 2015 at 7:45 am</a>		</div>

		<p>I&#39;d read the question as wanting a way to distinguish between files containing &quot;photos&quot; and files containing &quot;images&quot;, which sounds like an unpleasant task.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1187584">
				<div id="div-comment-1187584" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ravu al Hemio</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150430-00/?p=44974#comment-1187584">
			April 30, 2015 at 7:46 am</a>		</div>

		<p>&gt; #include &lt;stdio.h&gt; // horrors! mixing C and C++!</p>
<p>Out of curiosity, doesn&#39;t C++ strongly recommend including &lt;cstdio&gt; instead of &lt;stdio.h&gt;?</p>
<div class="post">[<em>Horrors! -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1187594">
				<div id="div-comment-1187594" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">CarlD</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150430-00/?p=44974#comment-1187594">
			April 30, 2015 at 8:04 am</a>		</div>

		<p>&gt; you provided will definitely solve our problem, once we figure out what our problem is!</p>
<p>I would love to hear that from a customer once in a while! &nbsp;I&#39;m sure that half the time I spend with customers trying to solve their problem is in fact simply figuring out what their problem really is.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1187614">
				<div id="div-comment-1187614" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">dirk.gently</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150430-00/?p=44974#comment-1187614">
			April 30, 2015 at 8:45 am</a>		</div>

		<p>&gt;I&#39;d read the question as wanting a way to distinguish between files containing &quot;photos&quot; and files containing &quot;images&quot;</p>
<p>Me too. Don&#39;t you just love english?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1187644">
				<div id="div-comment-1187644" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Mark</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150430-00/?p=44974#comment-1187644">
			April 30, 2015 at 9:40 am</a>		</div>

		<p>David-T: simples. If it gets smaller when you turn it into a .png, it&#39;s an image. If it gets smaller when you turn it into a .jpg, it&#39;s a photo. If it doesn&#39;t get smaller for either, it&#39;s random noise.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1187654">
				<div id="div-comment-1187654" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Sven2</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150430-00/?p=44974#comment-1187654">
			April 30, 2015 at 9:40 am</a>		</div>

		<p>&quot;Photo&quot; versus &quot;Other image&quot; is something that machine learning on an appropriate feature vector should be able to do with a pretty high accuracy though. Nothing you couldn&#39;t hack in OpenCV in a few hours.</p>
<p>There could be a gray area such as advertisement images that contain both photographic and text/design elements. But then, such images couldn&#39;t be classified clearly by a human either.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1187664">
				<div id="div-comment-1187664" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Adam Rosenfield</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150430-00/?p=44974#comment-1187664">
			April 30, 2015 at 10:05 am</a>		</div>

		<p>And in the *nix world, you&#39;d just run the file(1) command on the file and see if the output contains &quot;image&quot; in it. &nbsp;Downside is that if you want to do this in code, you&#39;re shelling out to a separate process, but you could probably hack something together to compile it into a library and use it in-process.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1187674">
				<div id="div-comment-1187674" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Kaso</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150430-00/?p=44974#comment-1187674">
			April 30, 2015 at 10:12 am</a>		</div>

		<p>Adam R: Or you could use libmagic directly.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1187684">
				<div id="div-comment-1187684" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Alex</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150430-00/?p=44974#comment-1187684">
			April 30, 2015 at 10:24 am</a>		</div>

		<p>You&#39;ve been writing too much assembler Raymond; your fingers are on autopilot! (eaxmple) </p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1187694">
				<div id="div-comment-1187694" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">SMW</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150430-00/?p=44974#comment-1187694">
			April 30, 2015 at 10:47 am</a>		</div>

		<p>@Ravu: Raymond doesn&#39;t want to type &#39;std::&#39; in front of his wprintf() (and other similar) instances, so that&#39;s why he&#39;s including &lt;stdio.h&gt; instead of &lt;cstdio&gt;.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1187704">
				<div id="div-comment-1187704" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Cesar</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150430-00/?p=44974#comment-1187704">
			April 30, 2015 at 11:17 am</a>		</div>

		<p>@SMW: that&#39;s what &quot;using namespace std;&quot; is for.</p>
<p>But he is already including other C APIs (windows.h and friends), so including stdio &quot;C style&quot; is consistent with that and doesn&#39;t make much difference; the includes are already crapping all over the global namespace (windows.h is infamous for doing that).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1187714">
				<div id="div-comment-1187714" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">What C++</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150430-00/?p=44974#comment-1187714">
			April 30, 2015 at 11:48 am</a>		</div>

		<p>Actually, where is the C++ in that snippet? &nbsp;It looks to me like the entire thing should compile successfully in plain C.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1187724">
				<div id="div-comment-1187724" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">dave</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150430-00/?p=44974#comment-1187724">
			April 30, 2015 at 11:58 am</a>		</div>

		<p>Well, to a first approximation, it&#39;s an image file if it&#39;s got a PE header after a DOS &quot;MZ&quot; header.</p>
<p>What? &nbsp;Oh. &nbsp;Not that sort.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1187744">
				<div id="div-comment-1187744" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">AnonyMark</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150430-00/?p=44974#comment-1187744">
			April 30, 2015 at 1:05 pm</a>		</div>

		<p>Even with cstdio, there&#39;s no need for std::</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1187764">
				<div id="div-comment-1187764" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Wear</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150430-00/?p=44974#comment-1187764">
			April 30, 2015 at 2:30 pm</a>		</div>

		<p>@dave In C#</p>
<p>Try and reference the file as an assembly. If you get an ImageNotFoundException then it must be a photo. &nbsp;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-maurits even thread-even depth-1" id="comment-1187784">
				<div id="div-comment-1187784" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Maurits+%5BMSFT%5D' rel='external nofollow' class='url'>Maurits [MSFT]</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150430-00/?p=44974#comment-1187784">
			May 1, 2015 at 5:25 am</a>		</div>

		<p>&gt; For eaxmple</p>
<p>Is that an example stored in the eax register?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1187804">
				<div id="div-comment-1187804" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Anon</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150430-00/?p=44974#comment-1187804">
			May 1, 2015 at 6:49 am</a>		</div>

		<p>@Maurits [MSFT]</p>
<p>Great, now Raymond can&#39;t fix this blog post for compatibility reasons. He&#39;ll have to make a new one:</p>
<p>&quot;How can I tell if a file is an image of some type?Ex&quot;</p>
<p>:D</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1187854">
				<div id="div-comment-1187854" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Shura Luberetsky</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150430-00/?p=44974#comment-1187854">
			May 1, 2015 at 8:40 am</a>		</div>

		<p>&gt; I&#39;d read the question as wanting a way to distinguish between files containing &quot;photos&quot; and files containing &quot;images&quot;, which sounds like an unpleasant task.</p>
<p>And don&#39;t forget &quot;disk images&quot; :)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1188054">
				<div id="div-comment-1188054" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Jon</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150430-00/?p=44974#comment-1188054">
			May 4, 2015 at 8:01 pm</a>		</div>

		<p>Useful function, but one oddity: I&#39;m getting the correct result but for images like .jpg or .bmp, the PERCEIVEDFLAG is 0x16. MSDN says it&#39;s &quot;one of&quot; the flags- should that be &quot;one or more of&quot;? Because I&#39;d lean towards thinking that means PERCEIVEDFLAG_HARDCODED||PERCEIVEDFLAG_WMSDK.</p>
<div class="post">[<em>Should be &quot;One or more of&quot;. I will submit a doc fix request. -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

