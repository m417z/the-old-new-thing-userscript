<html>
<head>
<title>What's the difference between FreeResource and, say, DestroyAcceleratorTable</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>What&#8217;s the difference between FreeResource and, say, DestroyAcceleratorTable</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>March 7, 2011 / year-entry #57</td></tr>
<tr><td><b>Tags:</b></td><td>code</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20110307-00/?p=11283</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>5</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">MaxMax asks a number of resource-related questions, starting with "How do you Unlock a Lock­Resource?" and culminating in "What are the differences between Free­Resource and Destroy­Accelerator­Table, Destroy­Object, etc.? It would be much easier to use a single function instead of a collection of five." It helps if you understand the history of resources, because the...</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>MaxMax asks a number of resource-related questions, starting with "How do you Unlock a Lock&shy;Resource?" and culminating in "<a href="http://blogs.msdn.com/oldnewthing/archive/2005/10/14/481043.aspx#485362">What are the differences between <code>Free&shy;Resource</code> and <code>Destroy&shy;Accelerator&shy;Table</code>, <code>Destroy&shy;Object</code>, etc.?</a> It would be much easier to use a single function instead of a collection of five."</p>
<p> It helps if you understand <a href="http://blogs.msdn.com/oldnewthing/archive/2004/02/02/66159.aspx"> the history of resources</a>, because the functions were designed back when resources were managed very differently from how they are today. <a href="http://blogs.msdn.com/oldnewthing/archive/2004/01/30/65013.aspx"> The usage pattern</a> is still the same: </p>
<ul>
<li><code>Find&shy;Resource</code> </li>
<li><code>Load&shy;Resource</code> </li>
<li><code>Lock&shy;Resource</code> </li>
<li>use the resource </li>
<li><code>Unlock&shy;Resource</code> </li>
<li><code>Free&shy;Resource</code> </li>
</ul>
<p> You unlock a resource by calling, um, <code>Unlock&shy;Resource</code>. </p>
<p> Although the usage pattern is the same, the mechanism under the covers is completely different. In 16-bit Windows, loading a resource entailed allocating a chunk of memory, then filling that memory block from the disk image. In Win32, resources are mapped into the address space as part of the image; there is no memory allocation and no explicit loading. </p>
<p> The next thing to understand is that resources are just blobs of binary data. They are not live objects. It's not like there's a <code>HBITMAP</code> sitting in there just waiting to be found. </p>
<p> Think of resource data as a set of blueprints. If you call <code>Find&shy;Resource</code> + <code>Load&shy;Resource</code> + <code>Lock&shy;Resource</code>, you wind up with the blueprints for a radio, but that's not the same as actually having a radio. To do that, you need to hand the radio blueprints to somebody who knows how to read electronic schematic diagrams and who knows how to solder wires together in order to convert the potential radio into an actual radio. </p>
<p> If you've been following the sporadic series on the format of resources, you'll know that these schematic diagrams can often be quite complicated. The <code>Load&shy;Bitmap</code> function first does the <code>Find&shy;Resource</code> + <code>Load&shy;Resource</code> + <code>Lock&shy;Resource</code> dance to locate the bitmap blueprint, but then it needs to actually make the bitmap, which is done by parsing the raw resource data and trying to make sense of it, calling functions like <code>Create&shy;Bitmap</code> and <code>Set&shy;DI&shy;Bits</code> to convert the blueprint into an actual bitmap. </p>
<p> That's why, if you use these helper functions like <code>Load&shy;Accelerators</code> to convert the blueprint into an object, you need to use the corresponding cleanup function like <code>Destroy&shy;Accelerator&shy;Table</code> when you want to destroy the object. You have to use the correct cleanup function, of course. You can't destroy a bitmap with <code>Destroy&shy;Accelerator&shy;Table</code> any more than you can put a radio in the clothing drop bin. </p>
<p> Just like when the radio guy returns the original blueprints plus a brand new radio, you return the blueprints to the library, but if you want to destroy the radio, you have to take it to the electronics recycling facility. </p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (5)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-899353">
				<div id="div-comment-899353" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">JS Bangs</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110307-00/?p=11283#comment-899353">
			March 7, 2011 at 7:36 am</a>		</div>

		<p>Tortured analogies are my favorite part of the Old New Thing.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-899363">
				<div id="div-comment-899363" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">laonianren</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110307-00/?p=11283#comment-899363">
			March 7, 2011 at 7:52 am</a>		</div>

		<p>&quot;Frameworks&quot;</p>
<p>I used to go to the council tip and I&#39;d have to sort my rubbish into the appropriate bins. &nbsp;Now I hire a skip and let the skip man worry about it. &nbsp;It&#39;s more expensive but it saves me a lot of time.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-899373">
				<div id="div-comment-899373" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">David Walker</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110307-00/?p=11283#comment-899373">
			March 7, 2011 at 7:53 am</a>		</div>

		<p>I usually hate analogies, but these are not too bad. &nbsp;On the other hand, a friend of mine says &quot;Don&#39;t tell me what something is LIKE, tell me what it IS!&quot;.</p>
<p>And besides, what&#39;s wrong with dropping a radio into the clothing drop bin? &nbsp;Someone looking for clothing will end up with a new radio! &nbsp;I hope it has tubes.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-899393">
				<div id="div-comment-899393" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ben Voigt [Visual C++ MVP]</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110307-00/?p=11283#comment-899393">
			March 7, 2011 at 8:02 am</a>		</div>

		<p>According to MSDN, you can&#39;t unlock/unload/free a resource directly (although it may disappear when you call FreeLibrary). &nbsp;Of course Raymond is right that the objects reconstituted from the resource data should be properly cleaned up.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-899403">
				<div id="div-comment-899403" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Henning Makholm</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110307-00/?p=11283#comment-899403">
			March 7, 2011 at 9:45 am</a>		</div>

		<p>@Ben: And yet the Windows SDK defines UnlockResource and FreeResource as no-ops for the benefit of old code from back in time when you could unlock and free them. UnlockResource is a do-nothing macro, but FreeResource is an actual Kernel32 entry point (documented to do nothing). Perhaps it did something in Win32s?</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

