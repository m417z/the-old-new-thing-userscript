<html>
<head>
<title>Why doesn't the MoveWindow function generate the WM_GETMINMAXINFO message?</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>Why doesn&#8217;t the MoveWindow function generate the WM_GETMINMAXINFO message?</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>March 9, 2009 / year-entry #75</td></tr>
<tr><td><b>Tags:</b></td><td>code</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20090309-00/?p=18903</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>16</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">Commenter Phil Quirk asks why calling MoveWindow does not result in a WM_GETMINMAXINFO message being sent to validate the moved window size. Well, because you moved it after all. You're being trusted to respect your own rules. After all, if you didn't want the window to be wider than 200 pixels, you shouldn't have passed...</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>Commenter Phil Quirk asks <a href="http://blogs.msdn.com/oldnewthing/pages/407234.aspx#543240"> why calling <code>MoveWindow</code> does not result in a <code>WM_GETMINMAXINFO</code> message being sent to validate the moved window size</a>.</p>
<p> Well, because you moved it after all. You're being trusted to respect your own rules. After all, if you didn't want the window to be wider than 200 pixels, you shouldn't have passed <code>nWidth=300</code>, right? </p>
<p> The <code>WM_GETMINMAXINFO</code> message is for obtaining minimum and maximum sizing information when the sizes were chosen by a means outside the application's control, such as when you said "I'll let you choose the window size (<code>CW_USEDEFAULT</code>)" or when the user grabbed the corner of the window and started dragging it around. But if you yourself changed the window size, then the window manager assumes that you know what you're doing. </p>
<p> If you don't trust yourself to follow your own rules, you can intercept the attempt to change the window size <a href="http://blogs.msdn.com/oldnewthing/archive/2008/01/16/7123299.aspx"> by handling the <code>WM_WINDOWPOSCHANGING</code> message</a>. </p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (16)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-714513">
				<div id="div-comment-714513" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Neil</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090309-00/?p=18903#comment-714513">
			March 9, 2009 at 11:25 am</a>		</div>

		<p>I was always confused by the fact that MoveWindow also resized the window&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-714523">
				<div id="div-comment-714523" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Tom</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090309-00/?p=18903#comment-714523">
			March 9, 2009 at 12:12 pm</a>		</div>

		<p>Even though I&#8217;ve been doing windows programming for a few years now, I&#8217;m still amazed at the intricacies of Windows Messages. I&#8217;ve always wanted some sort of diagram that shows the order that Windows Messages are delivered to a message pump in response to various conditions, operations and messages, just so I can get it all straight in my head; but I&#8217;ve never found one. Has anyone else found anything like that in a book or on the web? </p>
<div class=post>[<i>There is no such document because the order of windows messages is (for the most part) unspecified. The order can (and does) change depending on conditions. <a href="http://blogs.msdn.com/oldnewthing/archive/2006/03/27/561924.aspx" rel="nofollow">Message order dependencies</a> are one of the bigger categories of application compatibility issues. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-714553">
				<div id="div-comment-714553" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Tom</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090309-00/?p=18903#comment-714553">
			March 9, 2009 at 3:02 pm</a>		</div>

		<p>@Raymond: &nbsp;I don&#8217;t remember reading that chapter in your book. :)</p>
<p>While application compatibility makes documenting message order difficult, it should be possible to give a relative message order as opposed to an absolute order. &nbsp;For example, WM_WINDOWPOSCHANGING obviously occurs before WM_WINDOWPOSCHANGED, but that should not imply that no other messages intervene. &nbsp;</p>
<p>I suppose that, given the inclination and the time, it would be possible to reconstruct relative message ordering from the MSDN documentation, but I was hoping that someone had already made the effort. &nbsp;After all, a good programmer is a lazy programmer. &nbsp;At least, according to Larry Wall, that is. ;)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-714573">
				<div id="div-comment-714573" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">John</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090309-00/?p=18903#comment-714573">
			March 9, 2009 at 3:37 pm</a>		</div>

		<p>Unfortunately, nobody can be told what the message order is. &nbsp;You have to reverse engineer it for yourself.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-714603">
				<div id="div-comment-714603" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">asf</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090309-00/?p=18903#comment-714603">
			March 9, 2009 at 6:15 pm</a>		</div>

		<p>Why do we even need MoveWindow, SetWindowPos is so much better</p>
<div class=post>[<i>Duplicate of question <a href="http://blogs.msdn.com/oldnewthing/pages/407234.aspx#544564" rel="nofollow">already in the suggestion box</a>. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-714673">
				<div id="div-comment-714673" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">steveg</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090309-00/?p=18903#comment-714673">
			March 9, 2009 at 8:30 pm</a>		</div>

		<p>There&#8217;s a plethora of ways to shuffle windows around the screen: MoveWindow, SetWindowPos, SetWindowPlacement, BeginDeferWindowPos, DeferWindowPos, EndDeferWindowPos, TileWindows, UpdateLayeredWindow (and probably others).</p>
<p>I think it&#8217;s quirky fun choosing which one to use &#8212; &quot;Window, how shall I move thee today?&quot;.</p>
<p>They give the Win API its unique character.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-714703">
				<div id="div-comment-714703" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.hexatron.com' rel='external nofollow' class='url'>hexatron</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090309-00/?p=18903#comment-714703">
			March 9, 2009 at 10:39 pm</a>		</div>

		<p>MoveWindow has always been special to me. One of the first things I wrote in windows (1991?) was something like</p>
<p>case WM_MOVE:</p>
<p>GetClientRect(hwnd, &amp;rect);</p>
<p>MoveWindow(hwnd, LOWORD(lParam), HIWORD(lParam), rect.right, rect.bottom, TRUE);</p>
<p>break;</p>
<p>(you don&#8217;t really need the break;&#8211;it breaks all by itself)</p>
<p>So now I always use SetWindowPos :)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-714593">
				<div id="div-comment-714593" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Nicolas B</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090309-00/?p=18903#comment-714593">
			March 9, 2009 at 5:19 pm</a>		</div>

		<p>There&#8217;s something that strikes me in today&#8217;s post : as a user, I like the system to prevent me from making mistakes.</p>
<p>And as a developer, I certainly don&#8217;t trust myself! I *do* want the system to help me follow my own rules…</p>
<p>Frankly, this goes against good coding guidelines…</p>
<div class=post>[<i>Until you have a window that you want to restrict the size of, *unless* it&#8217;s your code which turns it into an appbar and docks it against the edge of the screen, and then you&#8217;d be asking for a way to specify the interactive resize limit separately from the programmatic resize limit. (Plus of course the performance penalty of sending an extra WM_GETMINMAXINFO message each time any window resizes, especially since the window already gets a WM_WINDOWPOSCHANGING message with the same information.) -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-714663">
				<div id="div-comment-714663" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Pavel Minaev</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090309-00/?p=18903#comment-714663">
			March 9, 2009 at 8:08 pm</a>		</div>

		<p>&gt; Until you have a window that you want to restrict the size of, *unless* it&#8217;s your code which turns it into an appbar and docks it against the edge of the screen, and then you&#8217;d be asking for a way to specify the interactive resize limit separately from the programmatic resize limit.</p>
<p>Which could, of course, be handled by a special MW_IGNORE_GETMINMAXINFO flag that should be explicitly specified where such behavior is desirable. At least that&#8217;s what I think Nicolas was getting to, and I can agree with him there that it&#8217;s better to make such things explicit in the API.</p>
<div class=post>[<i>It&#8217;s always easy to design interfaces from the 1980&#8217;s with the philosophy of the 2000&#8217;s. Back in the 1980&#8217;s the design philosophy was &#8220;Trust the programmer. Any code that tries to second-guess the programmer slows down the system (you have a 4.77MHz processor), consumes memory (and you have only 320KB), and annoys the programmer.&#8221; -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-714773">
				<div id="div-comment-714773" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Mook</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090309-00/?p=18903#comment-714773">
			March 10, 2009 at 5:05 am</a>		</div>

		<p>Why does an already-maximized window not get a WM_GETMINMAXINFO while the taskbar autohiding-ness is turned on (and therefore the maximized window just magically resized a bit bigger, if it used to be the whole work area)?</p>
<p>(&quot;It&#8217;s a bug&quot;, &quot;somebody felt like it&quot;, and &quot;here&#8217;s a bunny with a pancake on its head&quot; are all acceptable answers.)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-714753">
				<div id="div-comment-714753" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blog.koroirc.com/' rel='external nofollow' class='url'>Koro</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090309-00/?p=18903#comment-714753">
			March 10, 2009 at 2:50 am</a>		</div>

		<p>&quot;[&#8230;] the order of windows messages is (for the most part) unspecified&quot;</p>
<p>Well I&#8217;d assume WM_NCCREATE would be the *absolute first* message a window would receive, and WM_NCDESTROY the *absolute last*, at least?</p>
<p>It comes in handy when coding stuff like generic wndprocs that will just forward to a class. </p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-714833">
				<div id="div-comment-714833" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Rick C</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090309-00/?p=18903#comment-714833">
			March 10, 2009 at 10:36 am</a>		</div>

		<p>@Koro: &nbsp;Well, you could certainly write a little program to test out that theory.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-714903">
				<div id="div-comment-714903" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Alexandre Grigoriev</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090309-00/?p=18903#comment-714903">
			March 10, 2009 at 12:07 pm</a>		</div>

		<p>Koro,</p>
<p>I&#8217;m afraid you missed &quot;for the most part&quot; part.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-715063">
				<div id="div-comment-715063" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">chrismcb</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090309-00/?p=18903#comment-715063">
			March 10, 2009 at 4:45 pm</a>		</div>

		<p>@Koro:</p>
<p>Why would you assume that?</p>
<p>You can assume that WM_NCCREATE is sent prior to the WM_CREATE, and the WM_NCDESTROY follows a WM_DESTROY. But I think you can potentially get yourself in trouble if you assume they are the first and last messages.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-714913">
				<div id="div-comment-714913" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Alexandre Grigoriev</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090309-00/?p=18903#comment-714913">
			March 10, 2009 at 12:15 pm</a>		</div>

		<p>Raymond:</p>
<p>&quot;Back in the 1980&#8217;s the design philosophy was &quot;Trust the programmer. Any code that tries to second-guess the programmer slows down the system (you have a 4.77MHz processor), consumes memory (and you have only 320KB), and annoys the programmer.&quot; </p>
<p>Now, thankfully, you have craploads of memory with badass processors. Windows doesn&#8217;t trust the user. It is trying to second-guess the user and to annoy him. Hit him with &quot;You have unused icons. Do you want to clean them&quot; *twice* in a row (why not four times, in case he missed it not one, but three times). Or Outlook Express nagging &quot;I will compact the messages. OK?&quot; every time, and if the poor user agrees, OE will run *extremely poorly* designed piece of code that uses SHCopyFile instead of RenameFile, spews copy progress windows, and annoys the hell out of me.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-715203">
				<div id="div-comment-715203" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Yuhong Bao</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090309-00/?p=18903#comment-715203">
			March 10, 2009 at 10:55 pm</a>		</div>

		<p>&quot;I was always confused by the fact that MoveWindow also resized the window&#8230;&quot;</p>
<p>And the fact that CloseWindow minimizes instead of closes a window, and the fact that OpenIcon restores a window.</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

