<html>
<head>
<title>Displaying a property sheet for multiple files</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>Displaying a property sheet for multiple files</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>June 17, 2013 / year-entry #161</td></tr>
<tr><td><b>Tags:</b></td><td>code</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20130617-00/?p=4073</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>9</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">Today's Little Program will show a property sheet that covers multiple files, just like the one you get from Explorer if you multi-select a bunch of files and right-click them all then select Properties. In fact, that description of how you do the operation interactively maps directly to how you do the operation programmatically! #define...</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>
Today's Little Program will show a property sheet that covers multiple
files,
just like the one you get from Explorer if you multi-select a bunch
of files and right-click them all then select <i>Properties</i>.
</p>
<p>
In fact, that description of how you do the operation interactively
maps directly to how you do the operation programmatically!
</p>
<pre>
#define UNICODE
#define <a HREF="http://blogs.msdn.com/b/oldnewthing/archive/2004/02/12/71851.aspx">_UNICODE</a>
#define <a HREF="http://blogs.msdn.com/b/oldnewthing/archive/2013/01/24/10387757.aspx">STRICT_TYPED_ITEMIDS</a>
#include &lt;windows.h&gt;
#include &lt;ole2.h&gt;
#include &lt;shlobj.h&gt;
#include &lt;atlbase.h&gt;
#include &lt;atlalloc.h&gt;

HRESULT GetUIObjectOf(
    IShellFolder *psf,
    HWND hwndOwner,
    UINT cidl,
    PCUITEMID_CHILD_ARRAY apidl, REFIID riid, void **ppv)
{
 return psf->GetUIObjectOf(hwndOwner, cidl, apidl, riid, nullptr, ppv);
}
</pre>
<p>
The <code>Get&shy;UI&shy;Object&shy;Of</code> helper function
merely wraps the
<code>IShell&shy;Folder::<wbr>Get&shy;UI&shy;Object&shy;Of</code>
method to insert the pesky <code>nullptr</code> parameter
between the <code>riid</code> and <code>ppv</code>.
The <code>riid</code> and <code>ppv</code> parameters
by convention go right next to each other,
and the <code>IID_<wbr>PPV_<wbr>ARGS</code> macro assumes
that the function you're calling follows that convention.
Unfortunately, the people who designed
<code>IShell&shy;Folder::<wbr>Get&shy;UI&shy;Object&shy;Of</code>
didn't get the memo, and we've been stuck with it ever since.
</p>
<pre>
HRESULT InvokeCommandByVerb(
    IContextMenu *pcm,
    HWND hwnd,
    LPCSTR pszVerb)
{
 HMENU hmenu = CreatePopupMenu();
 HRESULT hr = hmenu ? S_OK : E_OUTOFMEMORY;
 if (SUCCEEDED(hr)) {
  hr = pcm-&gt;QueryContextMenu(hmenu, 0, 1, 0x7FFF, CMF_NORMAL);
  if (SUCCEEDED(hr)) {
   CMINVOKECOMMANDINFO info = { 0 };
   info.cbSize = sizeof(info);
   info.hwnd = hwnd;
   info.lpVerb = pszVerb;
   hr = pcm-&gt;InvokeCommand(&amp;info);
  }
  DestroyMenu(hmenu);
 }
 return hr;
}
</pre>
<p>
The <code>Invoke&shy;Command&shy;By&shy;Verb</code> function
merely
<a HREF="http://blogs.msdn.com/b/oldnewthing/archive/2004/09/20/231739.aspx">
hosts an <code>IContext&shy;Menu</code> and invokes a single verb</a>.
</p>
<p>
Okay, those are the only two helper functions we need this week.
The rest we can steal from earlier articles.
</p>
<p>
For the purpose of illustration,
the program will display a multi-file property sheet for the first
two files in your
My Documents folder folder.
Remember, Little Programs do little to no error checking.
</p>
<pre>
int __cdecl wmain(int, wchar_t **)
{
 <a HREF="http://blogs.msdn.com/b/oldnewthing/archive/2004/05/20/135841.aspx">CCoInitialize</a> init;
 <a HREF="http://blogs.msdn.com/b/oldnewthing/archive/2008/05/28/8555658.aspx">ProcessReference</a> ref;
 CComPtr&lt;IShellFolder&gt; spsf;
 <a HREF="http://blogs.msdn.com/b/oldnewthing/archive/2011/08/30/10202076.aspx">BindToCsidl</a>(CSIDL_MYDOCUMENTS, IID_PPV_ARGS(&amp;spsf));
 CComPtr&lt;IEnumIDList&gt; speidl;
 spsf-&gt;EnumObjects(nullptr, SHCONTF_NONFOLDERS, &amp;speidl);
 if (!speidl) return 0;
 CComHeapPtr&lt;ITEMID_CHILD&gt; spidl1;
 CComHeapPtr&lt;ITEMID_CHILD&gt; spidl2;
 if (speidl-&gt;Next(1, &amp;spidl1, nullptr) != S_OK) return 0;
 if (speidl-&gt;Next(1, &amp;spidl2, nullptr) != S_OK) return 0;
 PCUITEMID_CHILD rgpidl[2] = { spidl1, spidl2 };
 CComPtr&lt;IContextMenu&gt; spcm;
 GetUIObjectOf(spsf, nullptr, 2, rgpidl, IID_PPV_ARGS(&amp;spcm));
 if (!spcm) return 0;
 InvokeCommandByVerb(spcm, "properties");
 return 0;
}
</pre>
<p>
Because everybody freaks out if I write code that doesn't
run on Windows&nbsp;XP,
I used the
<code>Bind&shy;To&shy;CSIDL</code> function
instead of one of its more modern equivalents
to get access to the My Documents folder.
</p>
<p>
Once we have My Documents,
we ask to enumerate its non-folders.
If the enumeration fails or says that there are no items (by returning
<code>S_FALSE</code>), then we bail immediately.
</p>
<p>
Next, we enumerate two items from the folder.
If we can't get both, then we bail.
</p>
<p>
We then create a two-item array and
get the <code>IContext&shy;Menu</code> UI object
for the collection.
</p>
<p>
Finally, we invoke the <code>"properties"</code> verb on the context menu.
</p>
<p>
And that's it.
If you run this program, you'll see a context menu for the first
two files in your My Documents folder.</p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (9)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment byuser comment-author-wndsks even thread-even depth-1" id="comment-1061293">
				<div id="div-comment-1061293" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/skSdnW' rel='external nofollow' class='url'>skSdnW</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130617-00/?p=4073#comment-1061293">
			June 17, 2013 at 7:12 am</a>		</div>

		<p>This is nice and simple but if you want to do something when the files do not have the same parent folder (Find dialog etc) things become difficult and you have to take a walk into undocumented land :(</p>
<p><!-- p>Typo/Bug: InvokeCommandByVerb hardcodes the verb...


<div class="post">[<em>Patience, young grasshopper. -Raymond</em>]</div>


</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-alegrigoriev odd alt thread-odd thread-alt depth-1" id="comment-1061303">
				<div id="div-comment-1061303" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/alegr1' rel='external nofollow' class='url'>alegr1</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130617-00/?p=4073#comment-1061303">
			June 17, 2013 at 8:19 am</a>		</div>

		<p>I hope the shell verbs are not localized.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-mike-dimmick even thread-even depth-1" id="comment-1061313">
				<div id="div-comment-1061313" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Mike+Dimmick' rel='external nofollow' class='url'>Mike Dimmick</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130617-00/?p=4073#comment-1061313">
			June 17, 2013 at 9:27 am</a>		</div>

		<p>@alegr1: See <a rel="nofollow" target="_new" href="http://msdn.microsoft.com/en-us/library/windows/desktop/dd374120(v=vs.85).aspx">msdn.microsoft.com/&#8230;/dd374120(v=vs.85).aspx</a> under &quot;Provide Resources for Shell Verb Action Strings&quot;. That doesn&#39;t stop someone localizing the verbs themselves, for uncommon verbs, but there are standard mechanisms for localizing the standard verbs.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1061423">
				<div id="div-comment-1061423" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Nick</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130617-00/?p=4073#comment-1061423">
			June 18, 2013 at 3:54 am</a>		</div>

		<p>Raymond, I don&#39;t know if this comes under the &quot;little to no error checking&quot; rule, but I wanted to point out, your call to InvokeCommandByVerb in wmain is wrong &#8211; the second parameter is a HWND.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1061523">
				<div id="div-comment-1061523" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Danny</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130617-00/?p=4073#comment-1061523">
			June 18, 2013 at 9:41 am</a>		</div>

		<p>&quot;Patience, young grasshopper. -Raymond&quot; in reply to skSdnW. You do realize Ray that he is the same person who had &quot;WndSks&quot; as name to which you said to change his name because insulting people is not going to bode well. He simply kept it but make it the other way around.</p>
<div class="post">[<em>I know. That&#39;s why I&#39;m going to make him wait at least two years. -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-wndsks odd alt thread-odd thread-alt depth-1" id="comment-1061543">
				<div id="div-comment-1061543" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/skSdnW' rel='external nofollow' class='url'>skSdnW</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130617-00/?p=4073#comment-1061543">
			June 18, 2013 at 10:53 am</a>		</div>

		<p>Good thing I brought it up in the past then ( <a href="http://blogs.msdn.com/b/oldnewthing/archive/2012/09/20/10351107.aspx" rel="nofollow" target="_new">blogs.msdn.com/&#8230;/10351107.aspx</a> ), and I keep asking because I actually want to know so I can do it correctly.</p>
<p>You can find some partial information on various forums and news archives but someone on the inside giving us the correct order of ProgId, *, Folder, Directory, AllFilesystemObjects, Unknown, SystemFileAssociations, and Kind? would be handy&#8230;</p>
<div class="post">[<em>It&#39;s nowhere near that complicated. -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1061603">
				<div id="div-comment-1061603" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blogs.msdn.com/hshort_4000_epicor.com/ProfileUrlRedirect.ashx' rel='external nofollow' class='url'>hshort@epicor.com</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130617-00/?p=4073#comment-1061603">
			June 18, 2013 at 1:46 pm</a>		</div>

		<p>&quot;Because everybody freaks out if I write code that doesn&#39;t run on Windows XP&quot;&#8230;</p>
<p>Thank you for still providing XP compatible code examples. I would love to always use the latest/simplest thing available, but I (like I suppose many of us) have to support a large customer base that is still around 50% XP. If something does not run on XP, then I basically am not able to use it (unless I want to write the same things twice and always check the OS version &#8211; which I don&#39;t). Since we have to support our customers (who are slow to upgrade) at least a year past the end of Microsoft support (a bu$iness decision), XP is what we must target for at least another 2 years.</p>
<p>It is for this very reason we are targeting .NET 4.0 instead of 4.5 with our &quot;next-gen&quot; product update.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-wndsks odd alt thread-odd thread-alt depth-1" id="comment-1061613">
				<div id="div-comment-1061613" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/skSdnW' rel='external nofollow' class='url'>skSdnW</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130617-00/?p=4073#comment-1061613">
			June 18, 2013 at 2:04 pm</a>		</div>

		<p>@Raymond: If you look at the comment on the MSDN page for CDefFolderMenu_Create2 you see that the order of Folder/Directory matters for the Open verb, the order of other things also matter if you want shell extensions to show in the same way/order as Explorer. If you leave out a key things will be missing and getting the order wrong might break stuff.</p>
<p>Getting this right on 2000, XP (Added SystemFileAssociations) and NT6 _is_ complicated. Imagine wanting to do this in the 9x days before MS was forced to document CDefFolderMenu_Create2! On top of this you need a root IShellFolder that is able to hand out a working IDataObject and SHGetDesktopFolder will not do since IShellFolder::GetUIObjectOf only wants single level child pidls&#8230;</p>
<div class="post">[<em>You&#39;re just trying to get me to respond so you get your answer sooner. Now I&#39;m tempted to push the article out just to spite you. It&#39;s not hard, and uses only documented interfaces. -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1061653">
				<div id="div-comment-1061653" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130617-00/?p=4073#comment-1061653">
			June 18, 2013 at 4:34 pm</a>		</div>

		<p>[You&#39;re just trying to get me to respond so you get your answer sooner. Now I&#39;m tempted to push the article out just to spite you. It&#39;s not hard, and uses only documented interfaces. -Raymond]</p>
<p>Don&#39;t tempt me. I abandoned COM to the bit-bucket years ago. Maybe my multi-file properties dialog box will actually work.</p>
<p>&lt;/flamebait&gt;</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

