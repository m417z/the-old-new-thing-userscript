<html>
<head>
<title>How do I get the tabbed dialog effect on my own custom tabbed dialog?</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>How do I get the tabbed dialog effect on my own custom tabbed dialog?</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>November 5, 2012 / year-entry #258</td></tr>
<tr><td><b>Tags:</b></td><td>code</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20121105-00/?p=6173</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>13</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">CJ observed that the standard tabbed dialogs provide an effect on the tab pages and want to know how to get the tabbed dialog effect on custom dialogs. fds242 noted this as well and wanted to know why the automatic tabbed dialog effect doesn't kick in until you put a static control on the child...</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>
CJ observed that the standard tabbed dialogs provide
an effect on the tab pages and want to know
<a HREF="http://blogs.msdn.com/oldnewthing/archive/2010/04/08/9992117.aspx#9992799">
how to get the tabbed dialog effect on custom dialogs</a>.
fds242 noted this as well and wanted to know
<a HREF="http://blogs.msdn.com/b/oldnewthing/archive/2010/07/20/10040074.aspx#10040447">
why the automatic tabbed dialog effect doesn't kick in
until you put a static control on the child dialog box</a>.
</p>
<p>
Let's look at the first question first.
To get the tabbed dialog effect, you can call
<code>Enable&shy;Theme&shy;Dialog&shy;Texture</code> with the
<code>ETDT_<wbr>ENABLE&shy;TAB</code> flag.
The best time to do this is in the
<code>WM_<wbr>INIT&shy;DIALOG</code> handler,
but you can also do it immediately
after the dialog has been created.
(Basically, you want to do this before the dialog paints
for the first time, so as to avoid flicker.)
</p>
<p>
Here's a sample program that shows a dummy dialog with the
tabbed dialog texture enabled.
</p>
<pre>
// Hereby incorporated by reference:
// dialog template and DlgProc function from <a HREF="http://blogs.msdn.com/b/oldnewthing/archive/2005/08/04/447654.aspx">this sample program</a>
// Comctl32 version 6 manifest from <a HREF="http://blogs.msdn.com/b/oldnewthing/archive/2007/05/31/2995284.aspx">this sample program</a>

int WINAPI WinMain(HINSTANCE hinst, HINSTANCE hinstPrev,
                   LPSTR lpCmdLine, int nShowCmd)
{
    return DialogBox(hinst, MAKEINTRESOURCE(1), 0, DlgProc);
}
</pre>
<p>
If you run this program, you get the expected dialog box
without the tabbed dialog effect.
But you can turn on the effect by calling the
<code>Enable&shy;Theme&shy;Dialog&shy;Texture</code> function:
</p>
<pre>
#include &lt;uxtheme.h&gt;

 case WM_INITDIALOG:
  CheckRadioButton(hdlg, 100, 102, 100);
  <font COLOR=blue>EnableThemeDialogTexture(hdlg, ETDT_ENABLETAB);</font>
  return TRUE;
</pre>
<p>
Now, when you run the program, you get the tabbed dialog effect.
It looks kind of weird when it's not in a tabbed dialog,
but presumably you're going to put this dialog inside your own
custom tabbed dialog control, so everything will look right
when it's all finished.
</p>
<p>
Now the second half of the question:
Why doesn't the automatic tabbed dialog effect kick in
until you put a static control on the child dialog box?
</p>
<p>
If you look closely at the
<code>ETDT_<wbr>ENABLE&shy;TAB</code> flag,
you'll see that it's really two flags:
<code>ETDT_<wbr>USE&shy;TAB&shy;TEXTURE</code> and
<code>ETDT_<wbr>ENABLE</code>.
The first flag says,
"I would like to get the tab texture, if enabled";
the second flag says "Enable it."
In other words, in order to get the tab texture, the
tab texture needs to be both <i>used</i> and <i>enabled</i>.
</p>
<p>
Originally,
<code>ETDT_<wbr>ENABLE&shy;TAB</code> was just a single bit.
Setting the bit turned on the tab texture.
But it turns out that some programs didn't look good with
the tab texture,
and the common reason was that they created a dialog
with no standard controls at all and then did custom drawing all over it.
Therefore, the algorithm for enabling the tab texture
was changed to the two-step version.
The property sheet manager turned on the
<code>ETDT_<wbr>USE&shy;TAB&shy;TEXTURE</code> flag,
and the button and static controls turned on the
<code>ETDT_<wbr>ENABLE</code> flag.
Therefore, if your property sheet page has a button or a static,
the second bit got turned on, and the tab texture became visible.
On the other hand, if you didn't have any buttons or statics,
then the assumption is that you're one of those programs that
does custom dialog drawing, and the tab texture remains disabled.
</p>
<p>
Let's watch it in action:
</p>
<pre>
1 DIALOGEX 32, 32, 200, 76
STYLE DS_MODALFRAME
CAPTION "Sample"
FONT 8, "MS Shell Dlg"
BEGIN
    // nothing!
END

INT_PTR CALLBACK DlgProc(HWND hdlg, UINT uMsg,
                         WPARAM wParam, LPARAM lParam)
{
 switch (uMsg) {
 case WM_INITDIALOG:
  return TRUE;
 }
 return FALSE;
}


int WINAPI WinMain(HINSTANCE hinst, HINSTANCE hinstPrev,
                   LPSTR lpCmdLine, int nShowCmd)
{
 PROPSHEETPAGE psp = { sizeof(psp) };
 psp.hInstance = hinst;
 psp.pszTemplate = MAKEINTRESOURCE(1);
 psp.pfnDlgProc = DlgProc2;

 PROPSHEETHEADER psh = { sizeof(psh) };
 psh.dwFlags = PSH_PROPSHEETPAGE;
 psh.nPages = 1;
 psh.ppsp = &amp;psp;
 return PropertySheet(&psh);
}
</pre>
<p>
If you run this program, you'll see that there is no
tabbed dialog texture.
As we saw earlier, the reason there is no tabbed dialog texture
is that the system is afraid that you're one of those programs
that custom-draws their dialog boxes, so it's staying out of your way.
</p>
<p>
But add this line:
</p>
<pre>
 case WM_INITDIALOG:
  <font COLOR=blue>EnableThemeDialogTexture(hdlg, ETDT_ENABLETAB);</font>
  return TRUE;
</pre>
<p>
The property sheet manager was afraid to give you that texture
by default,
but adding that line just adds the texture manually.
</p>
<p>
This time, when you run the program,
you get the happy tabbed dialog texture
because you added it explicitly.
</p>
<p>
I will leave you to answer fds242's final question:
"Why do Windows Task Manager's tab pages still have the
gray background."</p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (13)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-1019113">
				<div id="div-comment-1019113" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Dan Bugglin</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20121105-00/?p=6173#comment-1019113">
			November 5, 2012 at 7:15 am</a>		</div>

		<p>To be clear this seems to be talking about XP&#39;s Task Manager. &nbsp;Vista&#39;s is probably fixed (7&#39;s definitely is, 8 is just a completely new Task Manager).</p>
<p>I assume Task Manager wasn&#39;t doing tabs right, didn&#39;t have these flags set and since it wasn&#39;t a dialog it wouldn&#39;t get them automatically. &nbsp;At least I assume it&#39;s not a propertysheet dialog, it has a bunch of extra bits those don&#39;t have like a status bar.</p>
<p>It could also have something to do with the undocumented feature where you double click to hide everything except the active tab pane.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1019123">
				<div id="div-comment-1019123" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">jon</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20121105-00/?p=6173#comment-1019123">
			November 5, 2012 at 9:03 am</a>		</div>

		<p>One thing to be aware of is that, at least under XP and possibly later versions, the tab texture has a finite height (~460px from memory) and Windows won&#39;t draw anything below it if your dialog is taller than the texture.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1019133">
				<div id="div-comment-1019133" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Leo Davidson</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20121105-00/?p=6173#comment-1019133">
			November 5, 2012 at 3:16 pm</a>		</div>

		<p>I&#39;ve always assumed Task Manager didn&#39;t use the tab texture on Windows XP because, as Jon says just above, the texture stops painting beyond a certain height and Task Manager is resizable.</p>
<p>(It was a bit of a fail designing a UI theme element without resizing or even just large windows in mind, really. Especially when part of the OS itself required it.)</p>
<p>With Aero, the texture is a solid white colour and will fill the entire area it is assigned to, so the problem isn&#39;t there. (In both cases, you can get decent results by drawing the texture yourself and either repeating it &#8212; not so great when it&#39;s XP&#39;s gradient &#8212; or flipping it upside down on alternate rows.)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1019143">
				<div id="div-comment-1019143" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Christian</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20121105-00/?p=6173#comment-1019143">
			November 5, 2012 at 3:28 pm</a>		</div>

		<p>If someone actually runs these programs, can he post screenshots? That would be great!</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1019153">
				<div id="div-comment-1019153" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ian</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20121105-00/?p=6173#comment-1019153">
			November 6, 2012 at 12:31 am</a>		</div>

		<p>It took me a while to work out what Raymond was writing about. We&#39;re talking about the subtle gradient background from white at the top to just off-white at the bottom that is seen in tabbed dialogs on XP. I wouldn&#39;t have called it a &#39;texture&#39; although if you blow it up in an image editor and enhance the contrast you can just about see the texture caused by what looks like (and might actually be) dithering. You might never even notice that there is a gradient unless you draw a control with a white background near the bottom of the tab page and discover that the white background of the control doesn&#39;t quite match the background colour of the page. (I ran into this problem because the standard TLabel control in Delphi couldn&#39;t be drawn with a transparent background, so getting the background to match the tab page background involved jumping through hoops.)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1019163">
				<div id="div-comment-1019163" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blogs.msdn.com/kennyl_4000_live.cn/ProfileUrlRedirect.ashx' rel='external nofollow' class='url'>kennyl@live.cn</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20121105-00/?p=6173#comment-1019163">
			November 6, 2012 at 1:12 am</a>		</div>

		<p>Instead of using property sheet, I use the common tab control (SysTabControl32) and put it on a dialog with a few static controls &amp; radio buttons (that is to say, the tab control and the other controls are siblings window), then on WM_INITDIALOG I move these static/radio controls on top of the tab control. The problem is: the static control is rendered with gray background while the tab control is rendered with white texture. Does anyone know why?</p>
<p>See <a rel="nofollow" target="_new" href="http://img38.imageshack.us/img38/9879/60378192.png" rel="nofollow">img38.imageshack.us/&#8230;/60378192.png</a></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1019173">
				<div id="div-comment-1019173" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ian</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20121105-00/?p=6173#comment-1019173">
			November 6, 2012 at 2:11 am</a>		</div>

		<p>Correction: My memory let me down. It wasn&#39;t a static that couldn&#39;t be made transparent. It was a read-only edit box with no border that was supposed to look like a static label but respond to select and copy. (Just like the one at the top of the Shortcut tab on file properties, which of course proves it can be done.)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1019183">
				<div id="div-comment-1019183" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blogs.msdn.com/kennyl_4000_live.cn/ProfileUrlRedirect.ashx' rel='external nofollow' class='url'>kennyl@live.cn</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20121105-00/?p=6173#comment-1019183">
			November 6, 2012 at 2:51 am</a>		</div>

		<p>@Ian See the picture above in my comments, I suspect we are seeing the same problem. However, it took me a while to find out this: Instead of moving control on the tab, I create another dialog with needed controls (static/radio/etc) as the child window of the main window, then move the dialog at the proper location (use TabCtrl_AdjustRect to make sure it centered at the middle of tab, make the dialog looks like it is embeded inside the tab control). I also enable the common control 6, and use EnableThemeDialogTexture for the &quot;embeded&quot; dialog, after doing these, the tab control is rendered with white texture, and the radio/static control inside it looks fine!</p>
<p>See this:</p>
<p><a rel="nofollow" target="_new" href="http://img233.imageshack.us/img233/2878/51044293.png" rel="nofollow">img233.imageshack.us/&#8230;/51044293.png</a></p>
<p>Actually, this is the exact same window hierarchy that property sheet uses.</p>
<p>However, if I create a custom control (my own registered window class) as the holder window (like a dialog, contains other child window), EnableThemeDialogTexture won&#39;t work. It seems to me that EnableThemeDialogTexture &nbsp;only works for dialog! So how do I get the custom control with the tab texture enabled?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1019193">
				<div id="div-comment-1019193" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blogs.msdn.com/kennyl_4000_live.cn/ProfileUrlRedirect.ashx' rel='external nofollow' class='url'>kennyl@live.cn</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20121105-00/?p=6173#comment-1019193">
			November 6, 2012 at 4:05 am</a>		</div>

		<p>I submitted my code here:</p>
<p><a rel="nofollow" target="_new" href="http://codeviewer.org/view/code:2b5e" rel="nofollow">codeviewer.org/&#8230;/code:2b5e</a></p>
<p>Or as a backup link, here:</p>
<p><a rel="nofollow" target="_new" href="http://pastebin.com/Gyhwy97t" rel="nofollow">http://pastebin.com/Gyhwy97t</a></p>
<p>The code above creates a dialog with a tab control with 3 pages on it, the first page has one static control, the second page has one &quot;embeded&quot; dialog, the third one has a custom control as the panel.</p>
<p>Only the page with the dialog (with EnableThemeDialogTexture called on) works fine (the white texture is used), on the other pages the static control including radio button are not drawn &quot;transparently&quot;.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1019293">
				<div id="div-comment-1019293" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Rick C</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20121105-00/?p=6173#comment-1019293">
			November 6, 2012 at 8:11 am</a>		</div>

		<p>Looks like you&#39;ve got some function inconsistency somewhere:</p>
<p>psp.pfnDlgProc = DlgProc2;</p>
<p>There&#39;s no DlgProc2 defined, so I assume you want to use DlgProc again.</p>
<p>Two questions: &nbsp;would you include necessary #include lines with sample code like this? &nbsp;I guess not doing so has the advantage that I have to go out to MSDN and figure out the right ones and then sometimes I read the docs, but it would be easier without it. &nbsp;Relatedly, would you consider adding either a list of necessary link libraries to your sample code, or appropriate #pragma comments with the libraries listed, for the same reason?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1019333">
				<div id="div-comment-1019333" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">ChrisR</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20121105-00/?p=6173#comment-1019333">
			November 6, 2012 at 9:00 am</a>		</div>

		<p>@Holy.Cow: &nbsp;Actually the static control on the first tab *is* being drawn transparently. &nbsp;However it is being drawn transparently over *it&#39;s parent*, which is the main dialog box, and which has a gray background.</p>
<p>To see that this is indeed the case, add &quot;EnableThemeDialogTexture(hdlg, ETDT_ENABLETAB);&quot; directly after &quot;g_hDlg = hdlg;&quot; in the WM_INITDIALOG case of DlgProc. &nbsp;You will see that the gradients don&#39;t quite line up but it is pretty obvious what is happening then.</p>
<p>Your custom window class test is suffering from the same issue: &nbsp;The static text is drawing onto the custom window class&#39;s background, which happens to be flat gray. &nbsp;If you add WS_EX_TRANSPARENT to g_hCustomPanel you can see that the custom panel is then &quot;drawn&quot; correctly, but its static text child is still drawn incorrectly.</p>
<p>The root cause of all this confusion is that those controls are probably drawing into their parents&#39; DC. &nbsp;If the parent is not correct or is not doing the correct painting, you won&#39;t get what you want.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1019513">
				<div id="div-comment-1019513" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blogs.msdn.com/kennyl_4000_live.cn/ProfileUrlRedirect.ashx' rel='external nofollow' class='url'>kennyl@live.cn</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20121105-00/?p=6173#comment-1019513">
			November 6, 2012 at 6:52 pm</a>		</div>

		<p>@ChrisR: Thank you for the detailed explanations! Now it&#39;s very clear for me to understand the problem for the custom window, but I still have no clue how to get the child controls on my custom window drawn transparently, any idea?</p>
<p>By the way, on the second page (with a dialog on it), if the &quot;embeded&quot; dialog is not resized to fit the page, you will notice that the gradient filling is not &quot;correctly&quot; fit the tab on Windows XP.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1019523">
				<div id="div-comment-1019523" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blogs.msdn.com/kennyl_4000_live.cn/ProfileUrlRedirect.ashx' rel='external nofollow' class='url'>kennyl@live.cn</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20121105-00/?p=6173#comment-1019523">
			November 6, 2012 at 8:19 pm</a>		</div>

		<p>All right, I tried &quot;SetBkMode(hDC, TRANSPARENT);&quot; in response to WM_CTLCOLORSTATIC message in the window procedure of the custom window, it seems to work fine, for now.</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

