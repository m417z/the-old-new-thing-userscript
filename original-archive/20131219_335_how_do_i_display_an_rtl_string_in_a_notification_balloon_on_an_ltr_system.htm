<html>
<head>
<title>How do I display an RTL string in a notification balloon on an LTR system?</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>How do I display an RTL string in a notification balloon on an LTR system?</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>December 19, 2013 / year-entry #336</td></tr>
<tr><td><b>Tags:</b></td><td>code</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20131219-00/?p=2323</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>8</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">Suppose you have a program that is written in Arabic or Hebrew and you want to render some text. No problem. You just call Ext≠Text≠Out and pass the ETO_RTL≠READING flag to say, "Please render this string in an RTL context." Many other text-rendering functions have a similar flag, such as DT_RTL≠READING for Draw≠Text. But what...</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>
Suppose you have a program that is written in Arabic or Hebrew
and you want to render some text.
No problem.
You just call
<code>Ext&shy;Text&shy;Out</code> and pass the
<code>ETO_<wbr>RTL&shy;READING</code> flag to say,
"Please render this string in an RTL context."
Many other text-rendering functions have a similar flag,
such as
<code>DT_<wbr>RTL&shy;READING</code> for
<code>Draw&shy;Text</code>.
</p>
<p>
But what if you don't control the call to
<code>Ext&shy;Text&shy;Out</code> or <code>Draw&shy;Text</code>
or whatever other function is being used to render the text.
If you don't control the call, then you can't pass along the
magic "Please render this string in an RTL context" flag.
</p>
<p>
If you're lucky, the component that is doing the rendering has
some analogous flag that tells it to render in RTL context.
If the component is a control,
this flag may be implicit in the
<code>WS_<wbr>EX_<wbr>RTL&shy;READING</code> extended style
on the control window itself.
For some components, the secret signal is
<a HREF="http://msdn.microsoft.com/en-us/library/windows/desktop/ms645505(v=vs.85).aspx">
the presence of two RLM characters (U+200F) at the beginning of the string</a>.
</p>
<p>
If you're not lucky, then the component that is doing the rendering
gives you no way to convince or cajole it into rendering text
in an RTL context.
But all hope is not lost:
The
(<a HREF="http://blogs.msdn.com/b/oldnewthing/archive/2012/10/26/10362864.aspx">possibly
non-intuitive</a>)
Unicode Bidi algorithm comes to the rescue!
</p>
<p>
What you can do is place the RLE control character (U+202B)
at the start of the string.
The RIGHT-TO-LEFT EMBEDDING control character means
"Treat the text that follows in an RTL context until further instructions."
(You cancel the effect of an RLE by a PDF (POP DIRECTIONAL
FORMATTING, U+202C).)
</p>
<p>
Let's demonstrate in our
<a HREF="http://blogs.msdn.com/b/oldnewthing/archive/2003/07/23/54576.aspx">
scratch program</a>.
</p>
<pre>
#define THESTRING L"\x0639\x0644\x0649 \x0633\x0628\x064a\x0644 " \
                  L"\x0627\x0644\x0645\x062b\x0627\x0644: " \
                  L"Dear \x0623\x0634\x0631\x0641 " \
                  L"\x0645\x0627\x0647\x0631"

#define RLE L"\x202b"

void ShowString(HDC hdc, int y, PCWSTR psz, UINT format)
{
 RECT rc = { 0, y, 500, y+100 };
 DrawTextW(hdc, psz, -1, &amp;rc, format);
}

void
PaintContent(HWND hwnd, PAINTSTRUCT *pps)
{
 ShowString(pps-&gt;hdc, 0, THESTRING, 0);
 ShowString(pps-&gt;hdc, 100, THESTRING, DT_RTLREADING);
 ShowString(pps-&gt;hdc, 200, RLE THESTRING, 0);
}
</pre>
<p>
This sample program takes
<a HREF="http://blogs.msdn.com/b/oldnewthing/archive/2011/05/30/10168423.aspx">
a string in Arabic</a>
(with a little bit of English thrown in just to make the difference
more noticeable)
and renders it three ways:
</p>
<ul>
<li>As an LTR string with no special formatting.
<li>As an RTL string with no special formatting.
<li>As an LTR string with an RTL context imposed via the RLE control character.
</ul>
<p>
Observe that in the first case, the string treats the Arabic
at the beginning and end of the string as Arabic text embedded
in an English sentence,
so it is formatted as
</p>
<blockquote CLASS=m><p>
<span STYLE="border: black .75pt solid; padding-left: .2ex; padding-right: .2ex">
&#x0639;&#x0644;&#x0649;
&#x0633;&#x0628;&#x064a;&#x0644;
&#x0627;&#x0644;&#x0645;&#x062b;&#x0627;&#x0644;</span>:
Dear
<span STYLE="border: black .75pt solid; padding-left: .2ex; padding-right: .2ex">
&#x0623;&#x0634;&#x0631;&#x0641; &#x0645;&#x0627;&#x0647;&#x0631;</span>
</p>
</blockquote>
<p>
In the second case, the entire string is treated as an Arabic sentence
with an English word stuck inside it.
Therefore, it comes out as</p>
<blockquote CLASS=m DIR=rtl STYLE="text-align: left"><p>
&#x0639;&#x0644;&#x0649;
&#x0633;&#x0628;&#x064a;&#x0644;
&#x0627;&#x0644;&#x0645;&#x062b;&#x0627;&#x0644;:
<span STYLE="border: black .75pt solid; padding-left: .2ex; padding-right: .2ex">
Dear</span>
&#x0623;&#x0634;&#x0631;&#x0641; &#x0645;&#x0627;&#x0647;&#x0631;
</p>
</blockquote>
<p>
In the third case, we force the string to be treated as an Arabic
sentence by using the RLE control character.
The result matches the second string.
</p>
<p>
Note that the formatting is still not ideal because the underlying
canvas is still LTR:
The text is left-justified instead of right-justified,
and the caption buttons on the window
will still be drawn in the LTR position.
But it's better than nothing.</p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (8)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment byuser comment-author-dwalker-wk even thread-even depth-1" id="comment-1095563">
				<div id="div-comment-1095563" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/DWalker' rel='external nofollow' class='url'>DWalker</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20131219-00/?p=2323#comment-1095563">
			December 19, 2013 at 7:49 am</a>		</div>

		<p>Are the solid black boxes intentional? &nbsp;I&#39;m using IE11 on Windows 7. &nbsp;I see &lt;black box&gt;: Dear &lt;black box&gt; in the first example.</p>
<div class="post">[<em>Yes, but I guess they&#39;re confusing. I&#39;ll switch to <a href="http://blogs.msdn.com/b/oldnewthing/archive/2012/10/26/10362864.aspx">transparent boxes</a>. -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1095593">
				<div id="div-comment-1095593" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">JDP</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20131219-00/?p=2323#comment-1095593">
			December 19, 2013 at 8:11 am</a>		</div>

		<p>&quot;POP DIRECTIONAL FORMATTING, U+202C&quot;</p>
<p>Therefore, unicode strings can be treated as stacks. </p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1095613">
				<div id="div-comment-1095613" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Antonio &amp;#39;Grijan&amp;#39;</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20131219-00/?p=2323#comment-1095613">
			December 19, 2013 at 8:58 am</a>		</div>

		<p>@JDP: maybe. Without having read the Unicode specification (hey, I call APIs on a operating system whose engineers have read it, right?), it seems that it treats text formatting marks as nested. And the natural data structure to deal with it in the renderer is a stack.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-bboorman odd alt thread-odd thread-alt depth-1" id="comment-1095623">
				<div id="div-comment-1095623" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Brian_EE' rel='external nofollow' class='url'>Brian_EE</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20131219-00/?p=2323#comment-1095623">
			December 19, 2013 at 9:28 am</a>		</div>

		<p>¬ø( á áq)  áx«ù á do á o á …Øo á áoq «ù◊üpu…ê…• s çopuƒ± ç s«ùop  çoH</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1095643">
				<div id="div-comment-1095643" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Rick C</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20131219-00/?p=2323#comment-1095643">
			December 19, 2013 at 10:43 am</a>		</div>

		<p>@Brian_EE, a hand comes reaching out to slap you. &nbsp;Please lean in to the monitor so it can do a proper job. :)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1095653">
				<div id="div-comment-1095653" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Yuri</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20131219-00/?p=2323#comment-1095653">
			December 19, 2013 at 1:43 pm</a>		</div>

		<p>rd;lt</p>
<p>Obligatory filler to bypass filters.</p>
<p>Obligatory filler to bypass filters.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-fleet-command even thread-even depth-1" id="comment-1095683">
				<div id="div-comment-1095683" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Fleet+Command' rel='external nofollow' class='url'>Fleet Command</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20131219-00/?p=2323#comment-1095683">
			December 20, 2013 at 12:30 am</a>		</div>

		<p>Unicode Standard Annex #9: Unicode Bidirectional Algorithm</p>
<p><a rel="nofollow" target="_new" href="http://unicode.org/reports/tr9/">unicode.org/&#8230;/tr9</a></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1095693">
				<div id="div-comment-1095693" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Marc K</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20131219-00/?p=2323#comment-1095693">
			December 20, 2013 at 5:26 am</a>		</div>

		<p>After seeing Raymond create some pretty impressive looking &quot;pictures&quot; of UI elements using only HTML in other articles, I was hoping this article would have some notification balloons written in HTML. &nbsp;</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

