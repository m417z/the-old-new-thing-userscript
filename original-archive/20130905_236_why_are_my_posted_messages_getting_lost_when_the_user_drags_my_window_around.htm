<html>
<head>
<title>Why are my posted messages getting lost when the user drags my window around?</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>Why are my posted messages getting lost when the user drags my window around?</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>September 5, 2013 / year-entry #237</td></tr>
<tr><td><b>Tags:</b></td><td>code</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20130905-00/?p=3313</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>8</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">This question was inspired by an actual customer question, but I changed a lot of it around to make for a more interesting story. (Trust me, the original story was even more boring.) A customer's background thread posted a message to the main UI thread to signal something (details not important). They found that the...</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>
This question was inspired by an actual customer question,
but I changed a lot of it around to make for a more interesting story.
(Trust me, the original story was <i>even more boring</i>.)
</p>
<p>
A customer's background thread posted a message to the main UI thread
to signal something (details not important).
They found that the posted message was never received if the user was
in the process of dragging the main window around at the time the message
was posted.
Why would dragging a window cause posted messages to be lost?
"We used to post a thread message, but then we saw that
<a HREF="http://blogs.msdn.com/b/oldnewthing/archive/2005/04/26/412116.aspx">
<i>thread messages are eaten by modal loops</i></a>,
so we switched to posting a message, as you recommended.
But that didn't help."
</p>
<p>
Dragging a window doesn't cause messages to be lost.
The modal loop
<a HREF="http://blogs.msdn.com/b/oldnewthing/archive/2005/02/21/377337.aspx">
created by the window dragging code</a>
calls
<code>Dispatch&shy;Message</code>
to deliver the posted message to its target window's window procedure.
</p>
<p>
"Oh, we don't handle the message in the window procedure.
We process it here:
</p>
<pre>
BOOL MyApp::PreTranslateMessage(MSG *pmsg)
{
  if (pmsg-&gt;message == OUR_SPECIAL_MESSAGE) {
    ... special code here ...
    return TRUE; // handled
  }
  return FALSE; // not handled
}
</pre>
<p>
Could that be the problem?"
</p>
<p>
Yes, that's the problem.
</p>
<p>
The customer saw the recommendation to use <code>Post&shy;Message</code>
instead of <code>Post&shy;Thread&shy;Message</code> but simply
blindly followed the advice rather than
<a HREF="http://blogs.msdn.com/b/oldnewthing/archive/2009/11/04/9917052.aspx">
understanding its rationale</a>
so they could apply the advice correctly.
</p>
<p>
If you read
<a HREF="http://blogs.msdn.com/b/oldnewthing/archive/2005/04/26/412116.aspx">
the original recommendation</a>,
you'll see that the problem is that when a modal loop runs,
your message loop is no longer in control,
and therefore any customizations you've made to your message loop
will not be in effect.
This is normally a good thing.
For example, if a dialog box calls <code>Message&shy;Box</code>,
the dialog keyboard shortcuts shouldn't be active while the message box
is displayed.
It would be very strange if hitting <kbd>Enter</kbd> caused the
dialog box to invoke its default button
<i>while the modal message box is still on the screen</i>.
The result would most likely be
<a HREF="http://blogs.msdn.com/b/oldnewthing/archive/2005/02/23/378866.aspx">
a dialog box without underlying support</a>,
which leads to unhappiness.
</p>
<p>
If there is some sort of message processing you want to happen
regardless of which message loop is control,
then you can't put it in your custom message loop because
(tautologically)
your custom message loop is not in control
when it is not running.
But message loops will call
<code>Dispatch&shy;Message</code>,
and that will deliver the message to your window procedure.
(Of course, the converse also applies:
If you <i>want</i> the behavior to be suspended when a modal operation
is in progress,
you can put it in your message loop.)</p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (8)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-1076303">
				<div id="div-comment-1076303" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Peter</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130905-00/?p=3313#comment-1076303">
			September 5, 2013 at 8:46 am</a>		</div>

		<p>I don&#39;t really blame the customer for this one. &nbsp;This sort of issue is inherent in using a framework like MFC. &nbsp;It can be very hard to understand the framework&#39;s behaviour unless you also understand its implementation details.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1076343">
				<div id="div-comment-1076343" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Koro</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130905-00/?p=3313#comment-1076343">
			September 5, 2013 at 8:55 am</a>		</div>

		<p>If you absolutely need to take control when a system message loop is running though, you can register a WH_MSGFILTER hook. Every well-behaved message loop should call CallMsgFilter. (Sadly, I&#39;d say 90% of message loops don&#39;t, because all samples just have the GetMessage/TranslateMessage/DispatchMessage trio)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-john-ludlow even thread-even depth-1" id="comment-1076353">
				<div id="div-comment-1076353" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/John+Ludlow' rel='external nofollow' class='url'>John Ludlow</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130905-00/?p=3313#comment-1076353">
			September 5, 2013 at 9:19 am</a>		</div>

		<p>It&#39;s certainly a problem that a lot of documentation lacks the background details, but I often purposely &quot;redact&quot; information from documentation, questions, answers and general comments. The reason is I&#39;ve had too many conversations like this:</p>
<p>Someone Else: Why does &lt;insert scenario here&gt; happen?</p>
<p>Me &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;: Because of A. &lt;insert in-depth explanation of A&gt;</p>
<p>Someone Else: Oh, couldn&#39;t you have done something else instead of A?</p>
<p>Me: &nbsp; &nbsp; &nbsp; &nbsp; : No, because of B.</p>
<p>Someone Else: Oh, couldn&#39;t you have done something else instead of B?</p>
<p>Me: &nbsp; &nbsp; &nbsp; &nbsp; : No, because of C.</p>
<p>Someone Else: Oh, couldn&#39;t you have done something else instead of C?</p>
<p>Me: &nbsp; &nbsp; &nbsp; &nbsp; : No, because of D.</p>
<p>&lt;4 months later&gt;</p>
<p>Someone Else: Oh, couldn&#39;t you have done something else instead of Z?</p>
<p>Me &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;: I&#39;m losing the will to live.</p>
<p>I think a lot of the time stuff is left out of documentation specifically to avoid this kind of conversation.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1076363">
				<div id="div-comment-1076363" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Rick C</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130905-00/?p=3313#comment-1076363">
			September 5, 2013 at 10:08 am</a>		</div>

		<p>@Peter, MFC doesn&#39;t appear to be the problem here.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1076333">
				<div id="div-comment-1076333" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blogs.msdn.com/tlwest_4000_gmail.com/ProfileUrlRedirect.ashx' rel='external nofollow' class='url'>tlwest@gmail.com</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130905-00/?p=3313#comment-1076333">
			September 5, 2013 at 8:53 am</a>		</div>

		<p>&gt; Simply blindly followed the advice rather than understanding </p>
<p>&gt; its rationale so they could apply the advice correctly.</p>
<p>My biggest complaint about almost all API documentation, (MS&#39;s and every-one else&#39;s) is the reluctance to explain the rationale. &nbsp;I understand it&#39;s a lot more work and tends to require a real technical writer, but it makes a huge difference to its use.</p>
<p>On the other hand, when I endeavored to ensure that a proper rationale was included with my company&#39;s API documentation, we got complaints about how &quot;we give us the minimum to use it &#8211; we don&#39;t have the time or expertise to understand it&#8230;&quot;</p>
<p>*sigh*.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1076413">
				<div id="div-comment-1076413" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Gabe</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130905-00/?p=3313#comment-1076413">
			September 5, 2013 at 9:58 pm</a>		</div>

		<p>Did the customer have any rationale for putting their custom message processing in PreTranslateMessage instead of the window procedure? I can&#39;t think of any good reason for doing that.</p>
<div class="post">[<em>I suspect they simply didn&#39;t know any better. &quot;We need to process this message. Hey, look, here&#39;s a place where we can process messages.&quot; -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1076423">
				<div id="div-comment-1076423" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Neil</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130905-00/?p=3313#comment-1076423">
			September 6, 2013 at 3:22 am</a>		</div>

		<p>All this modal loop processing is all very well as long as your application can never have more than one enabled window at once.</p>
<p>For software such as Outlook which can readily have multiple enabled windows it breaks down almost immediately.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-alegrigoriev odd alt thread-odd thread-alt depth-1" id="comment-1076453">
				<div id="div-comment-1076453" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/alegr1' rel='external nofollow' class='url'>alegr1</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130905-00/?p=3313#comment-1076453">
			September 6, 2013 at 7:20 am</a>		</div>

		<p>@Neil,</p>
<p>Each top level window which can call a modal function needs to belong to a different thread, if you want to be able to have independent modal dialogs. Or they need to be owned by an invisible top level window, and before entering a modal loop they all need to be disabled. Otherwise it definitely becomes very fragile.</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

