<html>
<head>
<title>How can I register my context menu command for all file types *except* one, or other complex conditionals?</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>How can I register my context menu command for all file types *except* one, or other complex conditionals?</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>February 7, 2013 / year-entry #36</td></tr>
<tr><td><b>Tags:</b></td><td>code</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20130207-00/?p=5323</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>12</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">We saw that you can register your context menu under * to make it apply to all files. But what if you want it to apply to all files except one? For example, your command might be "Convert to Widget" but you don't want it to appear for .widget files because that would be redundant....</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>
We saw that you can
<a HREF="http://blogs.msdn.com/b/oldnewthing/archive/2007/08/02/4179107.aspx">
register your context menu under <code>*</code></a>
to make it apply to all files.
But what if you want it to apply to all files
<i>except one</i>?
For example, your command might be
"Convert to Widget" but you don't want it to appear for
<code>.widget</code> files because that would be redundant.
</p>
<p>
I mentioned how to do this
as an afterthought
<a HREF="http://blogs.msdn.com/b/oldnewthing/archive/2010/03/12/9977246.aspx">
in an earlier discussion
of advanced context menu registration</a>,
but I'm going to elevate to its own topic because it's probably even
more useful than the base article!
</p>
<p>
Starting in Windows&nbsp;7,
you can conditionalize your context menu declaratively.
This is explained in the documentation for context menus
in the section
<a HREF="http://msdn.microsoft.com/en-us/library/cc144171.aspx#dynamic_behavior">
<i>Getting Dynamic Behavior for Static Verbs
by Using Advanced Query Syntax</i></a>.
Let's try it out.
Of course, I don't actually have a
"Widgetizer" program, so I'll just use Calc.
</p>
<pre>
[HKEY_CLASSES_ROOT\*\shell\Widgetize]
"AppliesTo"="NOT System.FileExtension:=.widget"

[HKEY_CLASSES_ROOT\*\shell\Widgetize\Command]
@="calc.exe"
</pre>
<p>
The <i>Widgetize</i> command appears only for files whose
extension is not <code>.widget</code>.
</p>
<p>
You have access to the shell property system and
Advanced Query Syntax here,
so you can create more complex conditionals.
Here's how you can Widgetize only files that are smaller
than 32KB,
and ignore zero-byte files.
</p>
<pre>
"AppliesTo"="System.Size:1..32kb AND NOT System.FileExtension:=.widget"
</pre>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (12)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-1037833">
				<div id="div-comment-1037833" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">ErikF</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130207-00/?p=5323#comment-1037833">
			February 7, 2013 at 7:09 am</a>		</div>

		<p>I&#39;m waiting eagerly for the next installment where Raymond describes the Orvanced Query Syntax. :-)</p>
<div class="post">[<em>Nice one. Fixed. (For those who missed it: I misspelled Advanced as Andvanced in one location.) -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1037843">
				<div id="div-comment-1037843" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blogs.msdn.com/ajgelado_4000_hotmail.com/ProfileUrlRedirect.ashx' rel='external nofollow' class='url'>ajgelado@hotmail.com</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130207-00/?p=5323#comment-1037843">
			February 7, 2013 at 7:18 am</a>		</div>

		<p>IMHO, the last example is a really bad idea. I know it&#39;s just an example, but in my experience designing user interfaces, arbitrarily enabling/disabling items (or, even worse, hiding them) based in complex rules makes users unsure and customer support staff crazy. If the rules are complex (i.e., not a simple &quot;the file is not a widget&quot;), it&#39;s better to let the item enabled, and when it&#39;s selected, show an alert telling the user why s/he can&#39;t use the command.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1037863">
				<div id="div-comment-1037863" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">John Doe</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130207-00/?p=5323#comment-1037863">
			February 7, 2013 at 7:30 am</a>		</div>

		<p>@Antonio Rodr√≠guez &#39;Grijan&#39;, that would be even worse. I&#39;d be confused by the huge amount of options and unsure if clicking any of them would work or punish me with an informative message box or an insidious beep. Then, I&#39;d still be confused about the number of options and afraid to click any, resiliently giving up on using those pesky and useless context menus.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1037913">
				<div id="div-comment-1037913" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130207-00/?p=5323#comment-1037913">
			February 7, 2013 at 8:09 am</a>		</div>

		<p>Ha. The only reason I could have come up with for this was config.sys and for that we&#39;re now almost 20 years too late.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-gregm even thread-even depth-1" id="comment-1037943">
				<div id="div-comment-1037943" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/GregM' rel='external nofollow' class='url'>GregM</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130207-00/?p=5323#comment-1037943">
			February 7, 2013 at 8:45 am</a>		</div>

		<p>Very nice Erik. &nbsp;I noticed the misspelling, but didn&#39;t come up with anything witty in response. &nbsp;When I saw your response, it took me a few seconds to figure out what you meant by Orvanced, as I didn&#39;t read the original typo as &quot;And&quot;-vanced, just as Advanced with an extra n. &nbsp;:)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-xpclientgmail-com odd alt thread-odd thread-alt depth-1" id="comment-1037973">
				<div id="div-comment-1037973" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/xpclient' rel='external nofollow' class='url'>xpclient</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130207-00/?p=5323#comment-1037973">
			February 7, 2013 at 8:56 am</a>		</div>

		<p>Wow cool! Purely enhanced shell functionality. :)</p>
<p>How do you add a context menu item for Windows 7&#39;s Control Panel items which are not hosted by Explorer.exe? Say &quot;Pin to something&quot; for Keyboard Control Panel?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1038013">
				<div id="div-comment-1038013" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Surprised</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130207-00/?p=5323#comment-1038013">
			February 7, 2013 at 10:46 am</a>		</div>

		<p>Nice one! First time I&#39;ve ever seen a good use for Advanced Query Syntax, for I sure don&#39;t use it for searching. (Good search programs supporting regex FTW.)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1038063">
				<div id="div-comment-1038063" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Drafi</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130207-00/?p=5323#comment-1038063">
			February 7, 2013 at 12:56 pm</a>		</div>

		<p>I didn&#39;t know you could search like that, very nice. Now, if I put &quot;System.Size:1..32kb AND NOT System.FileExtension:=.widget&quot; into the Windows 7 Explorer search bar, it returns files of size 132kb. Is this due to some localization settings affecting the parsing?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1038093">
				<div id="div-comment-1038093" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">jon</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130207-00/?p=5323#comment-1038093">
			February 7, 2013 at 3:01 pm</a>		</div>

		<p>Pity there&#39;s no documented API to actually run those tests programmatically (as in, given an IShellItem, how can I tell if it matches a given AQS query).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1038113">
				<div id="div-comment-1038113" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130207-00/?p=5323#comment-1038113">
			February 7, 2013 at 7:34 pm</a>		</div>

		<p>@Drafi: It&#39;s due to the display roundoff.</p>
<p>Filler text to get past spam filter. Short comment is short.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1038133">
				<div id="div-comment-1038133" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Jerome</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130207-00/?p=5323#comment-1038133">
			February 7, 2013 at 11:22 pm</a>		</div>

		<p>@Antonio Rodr√≠guez &#39;Grijan&#39;</p>
<p>But in UI design, isn&#39;t this standard practice? Especially if you have an application that performs different kinds of actions on different kinds of files? Another example: You display different kinds of multimedia files, and alter the visibility of commands based on selection. View image files/play video files/convert video files and so on.</p>
<p>It would be a huge confusing mess if all commands were enabled all the time for all types, regardless of their applicability.</p>
<p>This is what I get for being in South Africa&#8230; my comment is so long after the one I&#39;m replying to, I doubt it will ever be read by the intended commenter.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1038423">
				<div id="div-comment-1038423" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blogs.msdn.com/ajgelado_4000_hotmail.com/ProfileUrlRedirect.ashx' rel='external nofollow' class='url'>ajgelado@hotmail.com</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130207-00/?p=5323#comment-1038423">
			February 8, 2013 at 4:36 pm</a>		</div>

		<p>@Jerome, @John Doe: Of course, for commands that apply only to a *simple* and *reduced* set (for example, JPEG images), it&#39;s better to just show it when needed. I was talking about *complex* or *confusing* rules, like showing the command for all files but not for Word documents, or files with a extension longer than three characters. These complex rules, in practice, aren&#39;t used very often. So if they will apply most of the time, they will add to the clutter anyway. You don&#39;t lose much showing the command in the few cases where they don&#39;t apply, and you can gain a lot in usability and cut in product support costs.</p>
<p>The idea isn&#39;t mine, and isn&#39;t new. That&#39;s why many applications disable menu commands when not applicable instead of hiding them. It traces back to the first volume of Inside Macintosh, where Apple explains the best practices of the then revolutionary Macintosh user interface, and the reasons behind them. It was published in 1984, but is generic enough that it can be applied today &#8211; you will be surprised how much of that is still in use after 30 years!</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

