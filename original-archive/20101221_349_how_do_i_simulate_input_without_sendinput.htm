<html>
<head>
<title>How do I simulate input without SendInput?</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>How do I simulate input without SendInput?</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>December 21, 2010 / year-entry #350</td></tr>
<tr><td><b>Tags:</b></td><td>code</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20101221-00/?p=11953</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>15</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">Michal Zygmunt wants to create a system where multiple applications can have focus, with different users generating input and directing them at their target applications. Attempting to simulate this by posting input messages didn't work. "Can you tell us maybe how SendInput is internally implemented so that we can use it to simulate only part...</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p> <a href="http://www.michalzygmunt.com/"> Michal Zygmunt</a> wants to create a system where multiple applications can have focus, with different users generating input and directing them at their target applications. Attempting to <a href="http://blogs.msdn.com/oldnewthing/archive/2005/05/30/423202.aspx"> simulate this by posting input messages didn't work</a>. "Can you tell us maybe how SendInput is internally implemented so that we can use it to simulate only part of the actions (like without acquiring focus)?" </p>
<p> <code>SendInput</code> operates at the bottom level of the input stack. It is just a backdoor into the same input mechanism that the keyboard and mouse drivers use to tell the window manager that the user has generated input. The <code>SendInput</code> function doesn't know what will happen to the input. That is handled by much higher levels of the window manager, like the components which hit-test mouse input to see which window the message should initially be delivered to. So if your goal is to change the way you call <code>SendInput</code> so it changes the focus management rules, you're barking up the wrong tree. It's like asking, "Please tell me how RAM chips work so I can use it to change the way Lotus 1-2-3 resolves circular references." </p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (15)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-883523">
				<div id="div-comment-883523" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Pierre B.</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101221-00/?p=11953#comment-883523">
			December 21, 2010 at 8:58 am</a>		</div>

		<p>Simpler rebuttal: &quot;what if two application did this?, with a twist&quot;. If two users simultaneously start a drag-and-drop, using a scroll bar, or any other action that grabs the mouse, what would happen?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-brunopitrus odd alt thread-odd thread-alt depth-1" id="comment-883563">
				<div id="div-comment-883563" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/kinokijuf' rel='external nofollow' class='url'>kinokijuf</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101221-00/?p=11953#comment-883563">
			December 21, 2010 at 9:39 am</a>		</div>

		<p>He is not &nbsp;Michal, but Michał (the last letter is lslash). I&#39;m Polish, so I know:-)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-brunopitrus even thread-even depth-1" id="comment-883553">
				<div id="div-comment-883553" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/kinokijuf' rel='external nofollow' class='url'>kinokijuf</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101221-00/?p=11953#comment-883553">
			December 21, 2010 at 9:39 am</a>		</div>

		<p>He is not &nbsp;Michal, but Michał (the last letter is lslash). I&#39;m Polish, so I know:-)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-883573">
				<div id="div-comment-883573" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101221-00/?p=11953#comment-883573">
			December 21, 2010 at 9:42 am</a>		</div>

		<p>Amusing.</p>
<p>X11 can actually do it, but that depends on the specifics of event message passing in X11. I&#39;m not sure if Win32 can do it.</p>
<p>In some cases posting (not sending) messages to the right windows will do what you want but not in other cases. I&#39;ve used the technique. It&#39;s a bit too tricky for my liking.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-883583">
				<div id="div-comment-883583" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ben Voigt</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101221-00/?p=11953#comment-883583">
			December 21, 2010 at 10:06 am</a>		</div>

		<p>Now that Windows has a multi-user UI (Terminal Services, deployed in non-server editions as Fast User Switching), most of the pieces are in place. &nbsp;It&#39;s quite likely that if this feature were ever enabled, it would be limited to Ultimate edition (which already lets you run the same Windows license in several virtual machines simultaneously, this appears similar from user-license-counting perspective). Since each virtual machine has its own notion of focus, that might even be one way to achieve the desired behavior while waiting for Microsoft to implement it.</p>
<div class="post">[<i>Though if you ran each program in a different VM, most users would want focus to be unified across the virtual machines so the experience is the same as running them all locally. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-883593">
				<div id="div-comment-883593" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Gabe</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101221-00/?p=11953#comment-883593">
			December 21, 2010 at 10:48 am</a>		</div>

		<p>Many years ago, one of the first C# programs I wrote was an app that did this. The computer was a kiosk that had 5 or 6 monitors and mice, and the app put up a different window on each monitor. Each mouse cursor was restricted to the monitor assigned to that mouse.</p>
<p>The system just posted mouse messages to whatever window each cursor was over. Since I was designing the complete UI I was able to avoid situations where a window tried to capture mouse input. Focus wasn&#39;t an issue because there were no keyboards (text input was via on-screen number pad).</p>
<p>Of course this is completely different from the typical use of multiple input devices, which is collaborative environments where everybody shares the same screen.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-883603">
				<div id="div-comment-883603" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ben Voigt</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101221-00/?p=11953#comment-883603">
			December 21, 2010 at 10:49 am</a>		</div>

		<p>@Raymond: Yes, the normal use case for VMs is one user administering many machines. &nbsp;But binding a monitor, mouse and keyboard to each VM (driver paravirtualization or some fancy IO-V tricks necessary to have one video card running monitors for different VMs simultaneously with full acceleration) could be useful in some circumstances. &nbsp;For example, multi-player gaming. &nbsp;Using one computer for multiple players yields far less messaging latency than any network. &nbsp;And enabling multiple console sessions for TS/FUS, again with individually bound monitor, mouse and keyboard (at least) would be superior to full virtualization.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-883633">
				<div id="div-comment-883633" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">John Muller</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101221-00/?p=11953#comment-883633">
			December 21, 2010 at 2:51 pm</a>		</div>

		<p>The solution he wants sounds like virtual Human Interface Device (HID) drivers, so he should look into the windows DDK.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-883643">
				<div id="div-comment-883643" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">distracted</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101221-00/?p=11953#comment-883643">
			December 21, 2010 at 3:02 pm</a>		</div>

		<p>Microsoft does have a product that allows the use of mutiple input devices and displays: Windows Multipoint Server.</p>
<p><a rel="nofollow" target="_new" href="http://www.microsoft.com/windows/multipoint/default.aspx" rel="nofollow">http://www.microsoft.com/&#8230;/default.aspx</a></p>
<p>It doesn&#39;t really seem to fit what this customer was asking though, because it looks like they want multiple windows on the same screen.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-883543">
				<div id="div-comment-883543" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Brian G.</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101221-00/?p=11953#comment-883543">
			December 21, 2010 at 9:10 am</a>		</div>

		<p>@Pierre B.</p>
<p>I read this as the developer is looking for each input device to control its own cursors. &nbsp;Presumably this would be used in a tightly-controlled environment with specific hardware and software installed, and multiple keyboard-type devices each directing to their own application or instance of the same application.</p>
<p>*shrug* &nbsp;It seems like a reasonable thing to want to implement. &nbsp;I know I&#39;m wanting to get Win7&#39;s Media Center application running fullscreen on the second monitor (an HDTV) controlled by a remote while the PC is fully usable by mouse and keyboard on primary monitor. &nbsp;I&#39;m waiting for the remote to come in the mail, but I&#39;m hoping it&#39;ll sort of automagically work where Media Center can get the input from the remote control without needing focus.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-883653">
				<div id="div-comment-883653" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Danny</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101221-00/?p=11953#comment-883653">
			December 21, 2010 at 5:18 pm</a>		</div>

		<p>&lt;quote&gt;..system where multiple applications can have focus, with different users generating input and directing them at their target applications&lt;/quote&gt;.</p>
<p>This is simple and already exists. Multiple users defined in Windows, each user is logged via a terminal, each terminal has it&#39;s own input devices (most common are keyboard and mouse), and each terminal is talking to his focused application. What&#39;s the big deal? I don&#39;t get it..this exists since Windows 2000, meaning for more then 10 years ago.</p>
<p>What he want&#39;s in plus? That each user to see what other users applications are doing? Hooks lads and gents, hooks will simply give you everything. What else? The screens of each user? Write a screen capture app that will launch at each user log on and will give you that user screen (plus make the hooks in here too). Or sound? Expand the capture app to do that too. Or get one from internet, there are plenty written already, google ftw.</p>
<p>Boy o boy, you try to rediscover the wheel when it was already invented by Micro$oft and furthermore is already giving you documentation for freeeeeee!. Or you want Micro$oft to sell brains on their site too?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-883663">
				<div id="div-comment-883663" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Cheong</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101221-00/?p=11953#comment-883663">
			December 21, 2010 at 7:20 pm</a>		</div>

		<p>My solution to the problem would be he have to run multiple instance of VPC XP mode and each instance clipped to application size. Now you just have to forward request of &quot;method to direct input to individual instance of VPC&quot; / &quot;method to create virtual driver for attachment as USB device on each instance of VPC&quot; and question solved.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-883673">
				<div id="div-comment-883673" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Solution</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101221-00/?p=11953#comment-883673">
			December 22, 2010 at 12:51 am</a>		</div>

		<p>It seems that he only needs to download and use the Microsoft Mouse Multipoint SDK. See its blog announcement at:</p>
<p><a rel="nofollow" target="_new" href="http://blogs.msdn.com/b/multipoint/archive/2010/01/13/windows-multipoint-sdk-1-5-is-released.aspx" rel="nofollow">blogs.msdn.com/&#8230;/windows-multipoint-sdk-1-5-is-released.aspx</a></p>
<p>Also see the Microsoft Mouse Mischief application for an example program:</p>
<p><a rel="nofollow" target="_new" href="http://www.microsoft.com/multipoint/mouse-mischief/en-us/default.aspx" rel="nofollow">http://www.microsoft.com/&#8230;/default.aspx</a></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-883683">
				<div id="div-comment-883683" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">David</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101221-00/?p=11953#comment-883683">
			December 22, 2010 at 1:16 am</a>		</div>

		<p>Raymond doesn&#39;t say it isn&#39;t possible. His statement was that the questioner is looking in the wrong direction.</p>
<p>Without testing I think it&#39;s possible to create some kind of a global hook and handle all the input messages you want.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-883953">
				<div id="div-comment-883953" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Cheong</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101221-00/?p=11953#comment-883953">
			December 22, 2010 at 5:13 pm</a>		</div>

		<p>@Solution: It&#39;s not that simple. Not only you have to get multiple mouse cursor, you&#39;d also need multiple &quot;activated window&quot; for the solution to work (not many message would be sent to window that don&#39;t have focus if you rely on Windows mouse behavior).</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

