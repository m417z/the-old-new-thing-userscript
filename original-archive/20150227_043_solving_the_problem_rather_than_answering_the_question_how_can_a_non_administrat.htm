<html>
<head>
<title>Solving the problem rather than answering the question: How can a non-administrator modify a registry key that requires administrator permission?</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>Solving the problem rather than answering the question: How can a non-administrator modify a registry key that requires administrator permission?</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>February 27, 2015 / year-entry #44</td></tr>
<tr><td><b>Tags:</b></td><td>code</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20150227-00/?p=44573</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>32</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">A customer opened with a question, which the customer liaison forwarded to the product group with High Priority. (Because, apparently, their customer is more important than any other customer.) Our program needs to modify a registry key in HKEY_LOCAL_MACHINE even when not running as an administrator. We tried setting an entry in the registry key...</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>A customer opened with a question, which the customer liaison forwarded to the product group with <i>High Priority</i>. (Because, apparently, their customer is more important than any other customer.)</p>
<blockquote class="q"><p> Our program needs to modify a registry key in <code>HKEY_<wbr>LOCAL_<wbr>MACHINE</wbr></wbr></code> even when not running as an administrator. We tried setting an entry in the registry key <code>HKLM\<wbr>Software\<wbr>Microsoft\<wbr>Windows NT\<wbr>Current&shy;Version\<wbr>App&shy;Compat&shy;Flags\<wbr>Layers</wbr></wbr></wbr></wbr></wbr></wbr></code> to run our application elevated, but it didn't help. We also tried setting the entry in our application manifest to say that it requires elevation, but that didn't work either. Please provide us with a way to override UAC. </p>
</blockquote>
<p> The fact that they went in and tried to enable an application compatibility setting <i>on their own application</i> means that instead of fixing their program, they are just going to <a href="http://blogs.msdn.com/oldnewthing/archive/2010/03/11/9976571.aspx"> keep throwing garbage on the sidewalk</a> and hope the street sweeper will still come and clean up behind them. </p>
<p> Upon closer questioning, they explained that setting the manifest entry didn't work in the sense that when the user ran the program, the operating system prompted for elevation. But they wanted their program to elevate without prompting. </p>
<p> Okay, first of all, if any program could could elevate without prompting, then there would be no point to elevation. Every program would simply ask for secret unprompted elevation, and there would be no point to elevation in the first place. So that angle is a non-starter. </p>
<p> We asked them for details on the problem they are having, the problem where they think writing to HKLM is the solution. That way, we can <a href="http://blogs.msdn.com/b/oldnewthing/archive/2013/06/20/10427187.aspx"> solve the problem instead of answering the question</a>. </p>
<blockquote class="q"><p> When our program is installed, it prompts the person doing the installation for the name of the server to connect to. The installer writes this information to HKLM. When a non-administrator runs the program, we want them to be able to switch to a different server. That's why we need to be able to write to HKLM. </p>
</blockquote>
<p> Okay, now that we understand the scenario, we can provide a solution. </p>
<p> First of all, the reason why you can't write to HKLM is that it would allow a non-administrative user to change the server settings of another user. Suppose that I run the program and change the server to <code>http://evil-hackers.example.com</code>. Then I log off and wait. The next person to use the computer and run the program will connect to the hacker site instead of the real site, and now I can harvest credentials or launch a man-in-the-middle attack or otherwise do bad things. </p>
<p> The solution, then, is to reduce the scope of any changes a non-administrative user makes to just that user. That way, if they choose to point the program at a rogue server, they are merely attacking themselves. </p>
<ul>
<li>At install time, write the default server information to HKLM. </li>
<li>When a user changes the server, write the new server to HKCU. </li>
<li>When the program needs to decide which server to connect to:     
<ul>
<li>Check if there is a local setting in HKCU. If so, then use it.     </li>
<li>If there is no setting in HKCU, then use the setting in HKLM.     </li>
</ul>
</li>
<li>Optional:     Add an administrative option to change the default server in HKLM. </li>
</ul>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (32)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-1177553">
				<div id="div-comment-1177553" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150227-00/?p=44573#comment-1177553">
			February 27, 2015 at 7:13 am</a>		</div>

		<p>I don&#39;t see any bad security implications of an application shimming itself.</p>
<p>Since HKCU can store applied shims, I&#39;d have shown them that.</p>
<p>Had to do it once. Discovered by research the shim I wanted could be added by environment variable, so I did that in the launcher.</p>
<p>Shim: don&#39;t prompt for elevation and don&#39;t elevate.</p>
<p>Reason: don&#39;t require admin rights at build time anymore.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1177573">
				<div id="div-comment-1177573" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Anon</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150227-00/?p=44573#comment-1177573">
			February 27, 2015 at 7:44 am</a>		</div>

		<p>@Joshua</p>
<p>Suddenly: Detection causes elevation to be required.</p>
<p>Event: Build breaks.</p>
<p>Days: Time spent trying to track down the problem.</p>
<p>Problem: Application requires a shim.</p>
<p>Solution: Fix the broken code in the application.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1177583">
				<div id="div-comment-1177583" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Random User 729764</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150227-00/?p=44573#comment-1177583">
			February 27, 2015 at 7:57 am</a>		</div>

		<p>Depending on the environment, a potential addition to the proposed plan: a Last Updated date/time. If the architecture typically dictates only one server within the environment, that would allow for a design in which the program silently falls back to the value in HKLM if the date is greater (and maybe only if attempting HKCU failed), or a design that resets the user&#39;s setting if the date is greater, or some other method of letting the admins help the users without contacting every user or loading every hive.</p>
<div class="post">[<em>That&#39;s an interesting idea. It lets the adminstrators do a &quot;mass reset&quot; while still letting users have local overrides. -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1177593">
				<div id="div-comment-1177593" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150227-00/?p=44573#comment-1177593">
			February 27, 2015 at 8:18 am</a>		</div>

		<p>@Anon: Which is worse? Application has wrong manifest at build time or application has wrong manifest at release time? (Same application, different invocation demands different shim.)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1177603">
				<div id="div-comment-1177603" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Boris</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150227-00/?p=44573#comment-1177603">
			February 27, 2015 at 8:19 am</a>		</div>

		<p>I tried going to the Evil Hackers website, but the link doesn&#39;t work.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1177613">
				<div id="div-comment-1177613" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Andre</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150227-00/?p=44573#comment-1177613">
			February 27, 2015 at 9:21 am</a>		</div>

		<p>I&#39;m stunned that anyone who actually knows what HKLM and HKCU are needs this pointed out. Isn&#39;t this completely obvious and the reason why these two keys are distinct in the first place?</p>
<p>Users change user settings, not machine settings.</p>
<p>How did they get so far programming whatever they did, Infinite Monkeys?</p>
<div class="post">[<em>The customer never mentioned HKCU. I bet they grew up in a world where every user was an administrator and therefore programs were perfectly free to write to HKLM any time they wanted, so their program put everything in HKLM. And then somebody tells them that their program doesn&#39;t work for standard users, and they&#39;re all like &quot;But&#8230; but&#8230; how can we write to HKLM now?&quot; -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1177623">
				<div id="div-comment-1177623" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ben Voigt</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150227-00/?p=44573#comment-1177623">
			February 27, 2015 at 9:25 am</a>		</div>

		<p>Other option (use only if the setting value is not security critical): Store this value inside a nested subkey, and give the &quot;Authenticated Users&quot; identity write access to that subkey. &nbsp;Voila, no settings leftover in user hives when the application is uninstalled, or changes that fail to take effect because the value also exists in the user hive, or any of that.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1177633">
				<div id="div-comment-1177633" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">lazarus</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150227-00/?p=44573#comment-1177633">
			February 27, 2015 at 9:51 am</a>		</div>

		<p>related question &#8211; is there an official way of bypassing UAC for a specific, trusted application?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1177643">
				<div id="div-comment-1177643" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Cesar</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150227-00/?p=44573#comment-1177643">
			February 27, 2015 at 9:51 am</a>		</div>

		<p>Overkill solution: create a &quot;settings service&quot;. Install the service when installing the program. To read or modify the setting, the program calls the service. Since each machine will have a single copy of the service, there will be a single copy of their settings.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1177653">
				<div id="div-comment-1177653" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Jim Lyon</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150227-00/?p=44573#comment-1177653">
			February 27, 2015 at 10:03 am</a>		</div>

		<p>@lazarus: &quot;Is there an official way of bypassing UAC for a specific, trusted application?&quot;</p>
<p>No. That&#39;s the entire point of UAC.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1177663">
				<div id="div-comment-1177663" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Cesar</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150227-00/?p=44573#comment-1177663">
			February 27, 2015 at 10:10 am</a>		</div>

		<p>@Jim Lyon: actually, it&#39;s easy, AFAIK services already run elevated, just use a service. That way you also gain privilege separation for free (no need to have the user interface run elevated, just the few operations which need it).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1177673">
				<div id="div-comment-1177673" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Engywuck</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150227-00/?p=44573#comment-1177673">
			February 27, 2015 at 10:22 am</a>		</div>

		<p>at least they are using registry. The other &quot;classic&quot; option in the world where everyone was Administrator was to write a .INI next to the .EXE &#8211; of course located in C:Program Files. And then act surprised when Vista (finally!) took things like %appdata% seriously. </p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1177683">
				<div id="div-comment-1177683" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Anon</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150227-00/?p=44573#comment-1177683">
			February 27, 2015 at 11:18 am</a>		</div>

		<p>@Joshua</p>
<p>If the manifest is wrong at build time, it is, by definition, wrong at release, unless you&#39;ve found a way to bypass building your releases.</p>
<p>If you FORCE the process to be un-elevated, at least with an external manifest, it will fail to execute if the OS determines that it needs to be elevated, for any reason, because the elevation will fail.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1177703">
				<div id="div-comment-1177703" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Anon</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150227-00/?p=44573#comment-1177703">
			February 27, 2015 at 11:24 am</a>		</div>

		<p>@Raymond</p>
<p>The Apple ecosystem is built such that while it is actively hostile to developers, it at least breeds an environment where devs actually have to read the docs.</p>
<p>So many Windows developers don&#39;t know that you need to use HKCU, and they don&#39;t care because in most cases, it &#39;just works&#39; (read: Is shimmed so that they never see the problems until there&#39;s a catastrophic failure, and a User loses vital business or personal data.)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1177713">
				<div id="div-comment-1177713" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Anon</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150227-00/?p=44573#comment-1177713">
			February 27, 2015 at 11:30 am</a>		</div>

		<p>@IanBoyd</p>
<p>If you ask &quot;What would you have done under Windows XP?&quot;, most Windows developers will say &quot;Oh, I&#39;ll just require elevation. Thanks!&quot;</p>
<p>Financial and LOB software does that, because the devs are too lazy to produce properly working software. Why worry about security? That&#39;s a different department!</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1177723">
				<div id="div-comment-1177723" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150227-00/?p=44573#comment-1177723">
			February 27, 2015 at 12:05 pm</a>		</div>

		<p>@Anon: The difference is at build time the &quot;application&quot; directory is the build output directory so elevation is irrelevant (it&#39;s a maintenance tool so it really does need to write to the application directory).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1177733">
				<div id="div-comment-1177733" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Paperino</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150227-00/?p=44573#comment-1177733">
			February 27, 2015 at 12:07 pm</a>		</div>

		<p>&quot;Is there an official way of bypassing UAC for a specific, trusted application?&quot;</p>
<p>Potentially yes, Windows 7 has a whitelist of applications that can bypass UAC prompts. IIRC (unless fixed) even calculator is on that list. More info here, <a href="http://www.pretentiousname.com/misc/win7_uac_whitelist2.html" rel="nofollow" target="_new">http://www.pretentiousname.com/&#8230;/win7_uac_whitelist2.html</a></p>
<p>But even if technically is possible, it&#39;s not an easy solution for people that ignore even HKCU exists! :)</p>
<div class="post">[<em>Also, I believe&nbsp;that list is ignored if you set your UAC settings to &quot;Always prompt.&quot; -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-alegrigoriev odd alt thread-odd thread-alt depth-1" id="comment-1177743">
				<div id="div-comment-1177743" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/alegr1' rel='external nofollow' class='url'>alegr1</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150227-00/?p=44573#comment-1177743">
			February 27, 2015 at 3:01 pm</a>		</div>

		<p>&gt;Potentially yes, Windows 7 has a whitelist of applications that can bypass UAC prompts.</p>
<p>It only elevates from Restricted Administrator to unrestricted administrator. It will not make an User to Administrator.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-iboyd even thread-even depth-1" id="comment-1177693">
				<div id="div-comment-1177693" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/IanBoyd' rel='external nofollow' class='url'>IanBoyd</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150227-00/?p=44573#comment-1177693">
			February 27, 2015 at 11:19 am</a>		</div>

		<p>Whenever this question comes up on SO, i ask the person, &quot;What would have done under Windows XP?&quot;</p>
<p>When your standard users were running your application under Windows XP: how did you handle it then?</p>
<p>If you *really* do desire a single, machine wide, option that is editable by all users, then grant all users permission to edit the registry key. You could also store the setting in an .ini file in CSIDL_COMMON_APPDATA (which is ACL&#39;d already to allow all users to modify). </p>
<p>When presented with the suddenly reality of having to &quot;grant&quot; all users permission to a machine-wide key, people instantly become security conscious. They are suddenly afraid of doing exactly what they were doing (allowing all users to run amok).</p>
<p>Which, is some way, was the entire point of UAC &#8211; to push developers into adopting a different mindset and way of doing things.</p>
<p>And if you still want to grant Everyone full control to your registry key, then that option is still available to you.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-andycadley2 odd alt thread-odd thread-alt depth-1" id="comment-1177763">
				<div id="div-comment-1177763" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/AndyCadley' rel='external nofollow' class='url'>AndyCadley</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150227-00/?p=44573#comment-1177763">
			February 28, 2015 at 5:14 am</a>		</div>

		<p>@Anon:</p>
<p>If you FORCE your application to run unelevated, the OS won&#39;t ever &quot;detect&quot; it needs elevation because all elevation detection is disabled the moment an application is manifested with a required execution level.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1177783">
				<div id="div-comment-1177783" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">sxtvt</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150227-00/?p=44573#comment-1177783">
			February 28, 2015 at 8:48 am</a>		</div>

		<p>&gt;Okay, first of all, if any program could could elevate without prompting, then there would be no point to elevation.</p>
<p>But there already ways to elevate without prompting using batch jobs in task scheduler, for cases when user is split-token admin. This works for at least in nt62 and nt63 (and doesn&#39;t work for win7). </p>
<p>For demo just paste that into unelevated cmd: schtasks /create /st 00:00 /sc daily /np /tn x /tr &quot;cmd /c echo hi!&gt;%windir%z&quot; &amp;&amp; schtasks /run /tn x</p>
<p>File &quot;z&quot; in the protected windows directory would be created.</p>
<p>This issue with task scheduler was discovered and reported to MS by James Forshaw, but was discarded &#39;wontfix&#39; because apparently it&#39;s just UAC bypass (despite it works no matter how high that UAC slider is, that is &#8211; it&#39;s not attack on autoelevation feature).</p>
<p>The sad thing is, there are elevation methods for non split-token admins (i.e. normal users) were also discovered (e.g. AppInfo AiCheckSecureApplicationDirectory Bypass), but they were too discarded by MS as &#39;uac bypass&#39;. It&#39;s Windows XP era all over again!</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1177803">
				<div id="div-comment-1177803" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Mark</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150227-00/?p=44573#comment-1177803">
			March 1, 2015 at 8:29 am</a>		</div>

		<p>sxtvt: UAC isn&#39;t really a security boundary. It&#39;s more to reduce the number of programs that do terrible things than to protect users from malicious code.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1177823">
				<div id="div-comment-1177823" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">640k</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150227-00/?p=44573#comment-1177823">
			March 1, 2015 at 4:48 pm</a>		</div>

		<p>@Mark: Read Paperino&#39;s link.</p>
<p><a rel="nofollow" target="_new" href="http://www.pretentiousname.com/misc/win7_uac_whitelist2.html">http://www.pretentiousname.com/&#8230;/win7_uac_whitelist2.html</a></p>
<p>&quot;To those saying, &#39;but UAC isn&#39;t a security boundary&#39;</p>
<p>That is a cop-out, IMO. Yes, there were ways things could piggy-back on or spoof elevations on Vista. Just because you can break some glass to enter a house doesn&#39;t mean you leave the doors unlocked, though&#8230;&quot;</p>
<p>And it goes on explains why your reasoning is illogical.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1177833">
				<div id="div-comment-1177833" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">sxtvt</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150227-00/?p=44573#comment-1177833">
			March 1, 2015 at 5:24 pm</a>		</div>

		<p>Mark: yeah, but when the flaw is that easy to abuse I&#39;m pretty sure applications will start to utilize that (did someone just say &#39;bonus&#39;?)</p>
<p>Besides, it doesn&#39;t answer the issue with token Integrity Level bypass (by normal users!). It&#39;s like someone decided to discard the issue without thinking, only because there was that &#39;UAC&#39; word in one of the sentences of the report.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1177843">
				<div id="div-comment-1177843" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Mark</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150227-00/?p=44573#comment-1177843">
			March 2, 2015 at 5:55 am</a>		</div>

		<p>640k: I&#39;m not saying it shouldn&#39;t be a security boundary, I&#39;m just saying it isn&#39;t currently. Just like kernel escalation wasn&#39;t a security issue on Windows 9x, only a reliability issue. Personally, I&#39;d love for Microsoft to make it a security boundary, but until then I run Windows as a standard user, instead of relying on UAC.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1177853">
				<div id="div-comment-1177853" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Mark</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150227-00/?p=44573#comment-1177853">
			March 2, 2015 at 6:05 am</a>		</div>

		<p>640k: Also, the argument you cite doesn&#39;t prove my &quot;reasoning&quot; (which I&#39;m taking to be your interpretation of my description of facts) wrong. Any bypass of UAC is trivial once the knowledge is out there because it&#39;s easy to follow steps. The aim of UAC is to pragmatically prevent developers from feeling they can rely on those steps. It&#39;s not to force customers to avoid rootkits, because someone writing a rootkit can use security bugs to escalate privileges. It&#39;s not to push customers towards LUA, it&#39;s to allow users who continue to be admins to work reasonably safely. And the reason it uses a secure desktop for the prompt is to prevent clickjacking.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1177863">
				<div id="div-comment-1177863" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">DebugErr</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150227-00/?p=44573#comment-1177863">
			March 2, 2015 at 6:11 am</a>		</div>

		<p>About editing compatibility settings programmatically&#8230; what if Aero (Glass) throws garbage on the street, my program falls over it and wants someone to clean it up? <a rel="nofollow" target="_new" href="http://stackoverflow.com/questions/24080564/disabling-gdi-hardware-acceleration-in-winforms-mdi-with-aero-for-speed-up">stackoverflow.com/&#8230;/disabling-gdi-hardware-acceleration-in-winforms-mdi-with-aero-for-speed-up</a></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1177873">
				<div id="div-comment-1177873" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">ANon</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150227-00/?p=44573#comment-1177873">
			March 2, 2015 at 8:56 am</a>		</div>

		<p>@AndyCadley</p>
<p>Only if your application is signed, AND uses an embedded manifest, AND doesn&#39;t trip Installer Detection.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-andycadley2 even thread-even depth-1" id="comment-1177883">
				<div id="div-comment-1177883" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/AndyCadley' rel='external nofollow' class='url'>AndyCadley</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150227-00/?p=44573#comment-1177883">
			March 2, 2015 at 10:50 am</a>		</div>

		<p>@ANon: If your application has a valid manifest then no appcompat functionality kicks in, including installer detection. </p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1177893">
				<div id="div-comment-1177893" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Anon</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150227-00/?p=44573#comment-1177893">
			March 2, 2015 at 2:25 pm</a>		</div>

		<p>@AndyCadley</p>
<p>My last statement on the back-and-forth here: This is provably false. I have an application on my desktop *right now* which, if I manifest it to run asInvoker, will fail to execute because Installer Detection attempts to run it as Admin, while the manifest prohibits it.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1178353">
				<div id="div-comment-1178353" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150227-00/?p=44573#comment-1178353">
			March 4, 2015 at 9:29 am</a>		</div>

		<p>@Anon: Manifest overrides installer detection. I depend on it to run patch.exe (which got its first update in 10 years that did nothing but add the manifest).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-iboyd odd alt thread-odd thread-alt depth-1" id="comment-1178533">
				<div id="div-comment-1178533" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/IanBoyd' rel='external nofollow' class='url'>IanBoyd</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150227-00/?p=44573#comment-1178533">
			March 5, 2015 at 7:53 am</a>		</div>

		<p>UAC is convenience feature. It is the moral equivalent of: &quot;Right-click, Run as different user&quot;. </p>
<p>Is it also the moral equivalent of Windows 2000&#39;s: &quot;Logout, Login as administrator&quot;, and Windows XP&#39;s: &quot;Fast user switch, and login as administrator&quot;</p>
<p>You were told not to run all the time as an administrator. You were told to switch to an administrator account when you need to do something that requires administrative privileges. Windows Vista helps you do that with a convenience feature. </p>
<p>You can choose to disable UAC, then then you have to do what we did in Windows XP: Fast user switch to an administrator.</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

