<html>
<head>
<title>Doing the best we can until time travel has been perfected</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>Doing the best we can until time travel has been perfected</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>April 3, 2006 / year-entry #117</td></tr>
<tr><td><b>Tags:</b></td><td>other</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20060403-59/?p=31693</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>64</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">Mistakes were made. Mistakes such as having Windows NT put Notepad in a different location from Windows 3.1. (Though I'm sure they had their reasons.) Mistakes such as having a TCS_VERTICAL when there is already a CCS_VERT style. Mistakes such as having listview state images be one-biased, whereas treeview state images are zero-biased. But what's done is...</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>Mistakes were made.</p>
<p> Mistakes such as <a href="http://blogs.msdn.com/oldnewthing/archive/2006/03/28/563008.aspx"> having Windows&nbsp;NT put Notepad in a different location from Windows&nbsp;3.1</a>. (Though I'm sure they had their reasons.) Mistakes such as having a <code>TCS_VERTICAL</code> when there is already a <code>CCS_VERT</code> style. Mistakes such as having listview state images be one-biased, whereas treeview state images are zero-biased. </p>
<p> But what's done is done. The mistakes are out there. You can't go back and fix them&mdash;at least not until time travel has been perfected&mdash;or you'll break code that was relying on the mistakes. (And believe me, there's a lot of code that relies on mistakes.) You'll just have to do the best you can with the situation as it is. </p>
<p> Often, when I discuss a compatibility problem, people will respond with "<a href="http://blogs.msdn.com/oldnewthing/archive/2006/03/21/556505.aspx#556544">That's your own damn fault. If you had done XYZ, then you wouldn't have gotten into this mess</a>." Maybe that's true, maybe it isn't, but that doesn't make any progress towards solving the problem and therefore isn't very constructive. I sure hope these people never become lifeguards. </p>
<p> "Help me, I'm drowning!" </p>
<p> "Are you wearing a life preserver?" </p>
<p> "No." </p>
<p> "Well, if you had worn a life preserver, then you wouldn't be drowning. It's your own damn fault." </p>
<p> When faced with a problem, you first need to understand the problem, then you set about exploring solutions to the problem. Looking for someone to blame doesn't solve the problem. I'm not saying that one should never assign blame, just that doing so doesn't actually solve anybody's problem. (If you want to blame somebody, do it at the bug post-mortem. Then you can study the conditions that led to the mistake, assign blame, if you're looking for a scapegoat, and take steps to prevent a future mistake of the same sort from occurring. As a lifeguard, you first rescue the drowning person, and then you lecture them for not wearing a life preserver.) </p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (64)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-365193">
				<div id="div-comment-365193" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.johntopley.com/' rel='external nofollow' class='url'>John Topley</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060403-59/?p=31693#comment-365193">
			April 3, 2006 at 11:24 am</a>		</div>

		<p>Even if you did have a time machine, you couldn&#8217;t change anything because you have to maintain compatibility with the timeline. Imagine it: you go back in time and have Windows NT put Notepad in the same location as Windows 3.1. The next thing you know, the colour red has gone and never even existed!</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-365203">
				<div id="div-comment-365203" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.alignment-systems.com' rel='external nofollow' class='url'>John Greenan</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060403-59/?p=31693#comment-365203">
			April 3, 2006 at 11:46 am</a>		</div>

		<p>Ah &#8211; &quot;bug post-mortem&quot;. &nbsp;&quot;Blamestorming&quot; (think brainstorming crossed with apportioning blame) is a much more appropriate term&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-365213">
				<div id="div-comment-365213" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">vsz</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060403-59/?p=31693#comment-365213">
			April 3, 2006 at 11:46 am</a>		</div>

		<p>There is one problem with the lifeguard comparison, namely that the drowning fellow (who is Microsoft) is not a simple bypasser (byswimmer) but a professional swimmer or seaman :) Not wearing a life-belt (or similar) has to be considered a bad mistake from a pro, sorry.</p>
<p>Many of these mistakes are old ones, and it&#8217;s best to correct them the earliest possible, as the solutions can take ages to take effect, but they are at least some steps into the right direction. Better start them late then never, though.</p>
<p>A good example for this is the Windows dir structure (not just Notepad). Maybe Vista will fix it, but naming/placing mistakes are still common.</p>
<p>I wonder if MSFT has any official plans to properly obsolete APIs/other old stuffs in a way that it gets out of the way <em>completely</em> after a while.</p>
<p>Thanks for this post, it&#8217;s good to see someone cares.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-oldnewthing bypostauthor odd alt thread-odd thread-alt depth-1" id="comment-365223">
				<div id="div-comment-365223" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Raymond+Chen+-+MSFT' rel='external nofollow' class='url'>Raymond Chen - MSFT</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060403-59/?p=31693#comment-365223">
			April 3, 2006 at 11:59 am</a>		</div>

		<p>vsz: So if a professional swimmer is drowning, a lifeguard shouldn&#8217;t try to save him?</p>
<p>&quot;It&#8217;s best to correct them as early as possible.&quot;</p>
<p>Okay, go for it. Tell me how you would correct the &quot;two copies of Notepad&quot; mistake?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-maurits even thread-even depth-1" id="comment-365243">
				<div id="div-comment-365243" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Maurits+%5BMSFT%5D' rel='external nofollow' class='url'>Maurits [MSFT]</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060403-59/?p=31693#comment-365243">
			April 3, 2006 at 12:19 pm</a>		</div>

		<blockquote><p>
  how you would correct the &quot;two copies of Notepad&quot; mistake?</p>
<p>Delete both of them. &nbsp;Put Notepad in Program Files where it belongs.</p>
<p>Replace them both with .exe&#8217;s that shellexecute to the one in Program Files.
</p></blockquote>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-365253">
				<div id="div-comment-365253" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">ping?</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060403-59/?p=31693#comment-365253">
			April 3, 2006 at 12:28 pm</a>		</div>

		<p>Microsoft plainly shouldn&#8217;t be bloating the OS trying to save every sloppy programmer from his own blunders. Windows by now probably contains more code for handling exceptional cases caused by bugs in 10,000 dead third-party programs than code for actually doing the work. </p>
<p>Instead of spending time fixing other people&#8217;s mistakes, communicate better to these people, at the very least in form of better API documentation.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-365273">
				<div id="div-comment-365273" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Brian Kemp</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060403-59/?p=31693#comment-365273">
			April 3, 2006 at 12:32 pm</a>		</div>

		<p>How about a hardlink from one to the other, or both to a new location?</p>
<p>I would assume %WINDIR%Notepad.exe is the canonical way to call notepad, but I&#8217;m probably wrong. &nbsp;Publishing &quot;best practices&quot; might be a good idea; I would assume that they are up there.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-365283">
				<div id="div-comment-365283" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Grant</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060403-59/?p=31693#comment-365283">
			April 3, 2006 at 12:40 pm</a>		</div>

		<blockquote><p>
  &gt; how you would correct the &quot;two copies of Notepad&quot; mistake?</p>
<p>&gt; Delete both of them. &nbsp;Put Notepad in Program Files where it belongs.</p>
<p>&gt; Replace them both with .exe&#8217;s that shellexecute to the one in Program Files.</p>
<p>So the fix is to add a third location that sloppy developers can hard-code into their apps?
</p></blockquote>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-365293">
				<div id="div-comment-365293" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Xander</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060403-59/?p=31693#comment-365293">
			April 3, 2006 at 12:40 pm</a>		</div>

		<p>&quot;I wonder if MSFT has any official plans to properly obsolete APIs/other old stuffs in a way that it gets out of the way <em>completely</em> after a while.&quot;</p>
<p>I&#8217;ve been wondering this myself. Apple have a system in their headers where APIs can be marked as &quot;deprecated&quot;, with the option to show a warning during a build whenever your code uses a deprecated API. These are still supported for now, but there&#8217;s a clear message that in N years they&#8217;re either going to go away or may suffer a large performance cost.</p>
<p>This does a reasonable job of migrating developers from older APIs to modern replacements (e.g., everyone is well aware that the equivalent to GDI is going away and all drawing should go through the equivalent to GDI+).</p>
<p>How far back you want to support code which will never be rebuilt is a different story, but this system means APIs go through 3 stages of being exported but deprecated (warnings when you build), being exported but not visible in the header (old apps will run, new code will need updating), to not being exported at all (old apps won&#8217;t run).</p>
<p>Does Microsoft have anything similar?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-365303">
				<div id="div-comment-365303" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Matt Green</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060403-59/?p=31693#comment-365303">
			April 3, 2006 at 12:42 pm</a>		</div>

		<p>Except not every filesystem has hard links, and you certainly don&#8217;t want to have different sets of installed files for different filesystems.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-maurits even thread-even depth-1" id="comment-365313">
				<div id="div-comment-365313" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Maurits+%5BMSFT%5D' rel='external nofollow' class='url'>Maurits [MSFT]</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060403-59/?p=31693#comment-365313">
			April 3, 2006 at 12:49 pm</a>		</div>

		<blockquote><p>
  the fix is to add a third location</p>
<p>Yup. &nbsp;Notepad is an app, not a system file.</p>
<p>1) Put it in the right place (&quot;Program Files&quot;)<br />
  <br />2) Put in shims (as described above) so the old wrong places continue to work for a while<br />
  <br />3) Establish a sunset date for the shims&#8230; say, 2011<br />
  <br />4) Publish a warning message to app developers saying &quot;notepad.exe has moved&#8230; shims in place until &lt;sunset date&gt;&quot;<br />
  <br />5) Prior to the sunset date (2009, say) remove shims from internal builds and see what breaks<br />
  <br />6) go from there</p>
<p>&gt; canonical way to call notepad</p>
<p>I believe the canoncial method is not to call notepad at all, but just shellexecute the text file and let the local file associations decide what to do.
</p></blockquote>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-365333">
				<div id="div-comment-365333" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">vsz</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060403-59/?p=31693#comment-365333">
			April 3, 2006 at 12:58 pm</a>		</div>

		<p>&quot;vsz: So if a professional swimmer is drowning, a lifeguard shouldn&#8217;t try to save him?&quot;</p>
<p>I think the swimmer should look around, calm down, and he could save himself alone. But I agree that lifeguards should help, that&#8217;s their job after all. This comparison really can go far away from the original topic :)</p>
<p>Notepad. First off I&#8217;d try to make guesstimate of the size of the problem as of now. Maybe it&#8217;s not even a problem anymore. If it is, I&#8217;d make a note for developers (upcoming Vista release gives a <em>very</em> nice momentum for this) that 1) NOTEPAD.EXE won&#8217;t be available in two locations anymore 2) the placing/naming of the app is not guaranteed to stay the same in future OS versions 3) that the recommended action to launch a .txt file is this and that (let&#8217;s say &quot;START &lt;filename.txt&gt;&quot; equivalent).</p>
<p>To go a step further, Vista could let&#8217;s say introduce a System Applications folder somewhere (looks like this is mostly %SYSTEMROOT%system32 for NT class OSes), add an envvar (%WIN_SYSAPP%) and extend the API to retrieve this folder, and store all apps in that folder from this point on. In this case the name of the system applications (NOTEPAD.EXE) could be retained for better compatibility (which will still leave some potential problems for the future). This would also solve all those apps which want to launch CALC.EXE and whatever else system apps directly.</p>
<p>If FAT32 support could be dropped for system drives, it would make it possible to utilize hard-links to handle similar problems in the future (Like a name change for the NOTEPAD.EXE executable).<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-365353">
				<div id="div-comment-365353" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Chris Moorhouse</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060403-59/?p=31693#comment-365353">
			April 3, 2006 at 1:18 pm</a>		</div>

		<p>And when the lifeguard has two people drowning, whom should he rescue first? My guess is that he&#8217;ll probably go get the person that he hasn&#8217;t hauled out of the water six times today. Particularly if that other person is <em>still</em> not wearing a life preserver. And that lifeguard is gonna be pretty mad, even though he might hide it out of respect if the guy croaks.</p>
<p>Relying on the lifeguard constantly is no substitute for actually leaning to swim properly. But hey, if you must go into the water before you know how to swim (any time), and do so outside the boundaries (any place), with an anchor tied to your belt instead of a life preserver (any device), then I guess you gotta go!</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-365363">
				<div id="div-comment-365363" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://jamessummerlin.blogspot.com' rel='external nofollow' class='url'>James Summerlin</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060403-59/?p=31693#comment-365363">
			April 3, 2006 at 1:25 pm</a>		</div>

		<p>vsz,</p>
<p>Do not ever become a lifeguard. &nbsp;If you do, let me know where so I will know to never swim there.</p>
<p>Maurits,</p>
<p>I have seen better comments from you in the past. &nbsp;Far better. &nbsp;Are you ok?</p>
<p>Everyone,</p>
<p>What we are seeing here is the old saying of &quot;hind-sight is 20/20.&quot; &nbsp;Get over it. &nbsp;Linux and Mac do a great job of avoiding problems like what we are talking about here by DESTROYING YOUR APP and causing your company to go bankrupt when they rewrite their API&#8217;s. &nbsp;Despite how horrible some apps and hardware may be, despite whether or not the company that made that app is in business or not, MS does what it can to make certain that all this stuff runs.</p>
<p>No other company goes through so much trouble for its customers. &nbsp;There are two words for this: Customer Service. &nbsp;</p>
<p>This is why MS is number one and opensource/Apple isn&#8217;t.</p>
<p>James</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-oldnewthing bypostauthor even thread-even depth-1" id="comment-365383">
				<div id="div-comment-365383" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Raymond+Chen+-+MSFT' rel='external nofollow' class='url'>Raymond Chen - MSFT</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060403-59/?p=31693#comment-365383">
			April 3, 2006 at 1:36 pm</a>		</div>

		<p>Chris Moorehouse: Again, that&#8217;s bug prioritization, not bug fixing. Again, a valid step in the process, but not the step I&#8217;m interested in. I care about fixing bugs.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-365393">
				<div id="div-comment-365393" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://spaces.msn.com/jdanielsmith/' rel='external nofollow' class='url'>J. Daniel Smith</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060403-59/?p=31693#comment-365393">
			April 3, 2006 at 1:37 pm</a>		</div>

		<p>While playing the &quot;blame game&quot; may not actually solve the specific problem at hand, it can still be useful as part of the problem solving process:</p>
<p>1) there may be several (less than ideal) solutions to the problem; figuring out how you got to where you&#8217;re at may help determine which solution to use. &nbsp;Part of this quest for &quot;why?&quot; almost inevitably includes determining where the mistakes where made.</p>
<p>2) Learn from mistakes of the past; part of that is realizing that a mistake was made in the first place.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-365413">
				<div id="div-comment-365413" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Jeff</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060403-59/?p=31693#comment-365413">
			April 3, 2006 at 1:45 pm</a>		</div>

		<p>Isn&#8217;t that &quot;one-based&quot; and &quot;zero-based&quot; instead of &quot;one-biased&quot; and &quot;zero-biased&quot;?</p>
<p>At least according to all my programming books&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-365423">
				<div id="div-comment-365423" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Kal</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060403-59/?p=31693#comment-365423">
			April 3, 2006 at 1:45 pm</a>		</div>

		<p>I wonder when MS will (to continue the lifeguard analogy) require everyone to wear life preservers instead of randomly saving people who jump in after not regarding instructions. </p>
<p>Lifeguards are nice and necessary and all that, but they&#8217;re entirely a reactive solution to a problem &#8211; and that&#8217;s something that MS has been doing for a while.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-365443">
				<div id="div-comment-365443" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">AndyC</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060403-59/?p=31693#comment-365443">
			April 3, 2006 at 1:52 pm</a>		</div>

		<p>Maurits, why?</p>
<p>Notepad is a 70K file. What do you actually achieve by moving it, other than some nominal sense of purity?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-maurits odd alt thread-odd thread-alt depth-1" id="comment-365453">
				<div id="div-comment-365453" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Maurits+%5BMSFT%5D' rel='external nofollow' class='url'>Maurits [MSFT]</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060403-59/?p=31693#comment-365453">
			April 3, 2006 at 1:55 pm</a>		</div>

		<blockquote><p>
  Maurits, why?</p>
<p>I was responding to Raymond&#8217;s question: &#8216;Okay, go for it. Tell me how you would correct the &quot;two copies of Notepad&quot; mistake?&#8217;</p>
<p>I took this as a theoretical exercise. &nbsp;I personally have no problem with the two copies of notepad. &nbsp;I am not seriously proposing that time and effort be spent to &quot;fix&quot; what is not really a problem.
</p></blockquote>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-365473">
				<div id="div-comment-365473" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Jeff</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060403-59/?p=31693#comment-365473">
			April 3, 2006 at 2:00 pm</a>		</div>

		<p>that their API is far older, tested, and cast in stone (POSIX)</p>
<p>Don&#8217;t forget, Microsoft did everything from scratch, over a period of many years, and so it&#8217;s entirely possible that they made a few mistakes along the way.</p>
<p>The other problem is that there&#8217;s half a dozen different flavors of Windows out there with various abilities (such as having hardlinks or not in its filesystem) whereas there&#8217;s only one thread of Linux and now one thread of OS X, plus the large market share of all the copies of Win95, etc that will always be out there.</p>
<p>The other part is that not enough folks can get copies of new versions of Windows far enough in advance to test on. So that if (for example) MSFT said in Vista 2.0 &quot;Notepad will be in Program Files&quot; nobody would find out about it until it was nearly released, which is far too late. They could SAY it, in prerelease docs or whatever, all they wanted but until people&#8217;s code actually breaks, they don&#8217;t fix it, so that wouldn&#8217;t work either.</p>
<p>This is where the benefits of open source &quot;release early, release often&quot; shows up. Things mostly get corrected early before they&#8217;re big cast-in-stone problems.</p>
<p>I&#8217;ve sat and thought about these problems and there&#8217;s not really anything you can do, IF you want to maintain compatibility. MSFT would have to do something like Apple going to OS X, where they have a mostly clean sheet of paper to do things right.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-365483">
				<div id="div-comment-365483" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Nik</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060403-59/?p=31693#comment-365483">
			April 3, 2006 at 2:08 pm</a>		</div>

		<p>I think some people may be overlooking the fact that one of the goals of all the backwards-compatibility work is to keep existing applications working. &nbsp;It&#8217;s not just to keep lazy 3rd party application developers from fixing a couple of mistakes they made in the past. &nbsp;Sometimes those developers aren&#8217;t around any more, but the app has to keep working. &nbsp;Many companies have Windows-based applications that they bought a long time ago and that still work, and that are needed to run their business. &nbsp;You can&#8217;t tell them &quot;tough luck that your app is broken, just fix the source code and recompile it&quot;. &nbsp;Their response would be &quot;I can&#8217;t recompile it, because some consultant created it 10 years ago and then disappeared&quot;. &nbsp;Companies in that situation would conclude that the next version of Windows is not going to work for them, and stick with their current version. &nbsp;They would not care much that the new Windows is much more &quot;elegant&quot; and &quot;pure&quot;. &nbsp;They just want their apps to work.<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-maurits even thread-even depth-1" id="comment-365493">
				<div id="div-comment-365493" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Maurits+%5BMSFT%5D' rel='external nofollow' class='url'>Maurits [MSFT]</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060403-59/?p=31693#comment-365493">
			April 3, 2006 at 2:09 pm</a>		</div>

		<p>er, Mike&#8217;s &quot;write&quot; link should be here:<br />
<br /><a rel="nofollow" target="_new" href="http://blogs.msdn.com/oldnewthing/archive/2006/03/28/563008.aspx#563448" rel="nofollow">http://blogs.msdn.com/oldnewthing/archive/2006/03/28/563008.aspx#563448</a></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-365503">
				<div id="div-comment-365503" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">mikeb</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060403-59/?p=31693#comment-365503">
			April 3, 2006 at 2:13 pm</a>		</div>

		<blockquote><p>
  &gt; The method I propose is very similar to the Write =&gt; Wordpad migration Mike describes&#8230; &lt;&lt;</p>
<p>Hmm, that&#8217;s why I get an error when I try to open wordpad from the command-line, and I have to type &quot;write&quot; instead.</p>
<p>The write.exe stub is in the path, wordpad.exe isn&#8217;t.</p>
<p>I only run wordpad about twice a year, but I never even knew there was a wordpad.exe (I occasionally try to run it from the command line as &quot;wordpad&quot; just because how else would you open a program called WordPad that you haven&#8217;t run in 10 months so you don&#8217;t recall that you really start it with the &quot;write&quot; command?) &#8211; I just assumed that MS simply called write.exe WordPad for some sort of marketing reason.<br />
  
</p></blockquote>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-365513">
				<div id="div-comment-365513" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Adam</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060403-59/?p=31693#comment-365513">
			April 3, 2006 at 2:14 pm</a>		</div>

		<p>&quot;You can&#8217;t go back and fix themâat least not until time travel has been perfectedâor you&#8217;ll break code that was relying on the mistakes.&quot;</p>
<p>Only if you can&#8217;t have version1 and version2 installed side-by-side. If you create a listbox2 that can be used by new apps with a corrected API, but keep listbox1 for old apps to use, you ought to be able to fix old problems without breaking old apps.</p>
<p>If you wait enough time before releasing listbox2 (say at least 5 years after listbox1) then you should be able to shake enough bugs out to not need a listbox3.</p>
<p>(OK, this probably doesn&#8217;t help with the notepad thing)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-maurits odd alt thread-odd thread-alt depth-1" id="comment-365523">
				<div id="div-comment-365523" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Maurits+%5BMSFT%5D' rel='external nofollow' class='url'>Maurits [MSFT]</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060403-59/?p=31693#comment-365523">
			April 3, 2006 at 2:16 pm</a>		</div>

		<p>I have just the solution for you, mikeb:<br />
<br />1) Download alias.bat from here:<br />
<br /><a rel="nofollow" target="_new" href="http://channel9.msdn.com/ShowPost.aspx?PostID=51329" rel="nofollow">http://channel9.msdn.com/ShowPost.aspx?PostID=51329</a><br />
<br />2) install it<br />
<br />3) Type &quot;alias wordpad write&quot;</p>
<p>Then you can type &quot;wordpad&quot; from the command line &nbsp;and it will call write&#8230; which will, in turn, call WordPad&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-365533">
				<div id="div-comment-365533" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">mikeb</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060403-59/?p=31693#comment-365533">
			April 3, 2006 at 2:20 pm</a>		</div>

		<blockquote><p>
  &gt; &nbsp;If you create a listbox2 that can be used by new apps with a corrected API, but keep listbox1 for old apps to use&#8230; &lt;&lt;</p>
<p>So now when I&#8217;m writing a new application I have to understand why there&#8217;s 2 listbox APIs and know why I want to use one over the other. &nbsp;And the difference is just that they start counting at 0 or 1?</p>
<p>Yikes &#8211; I&#8217;d rather keep with the current bit of mess than add another level of mysteriously different (but mostly similar) APIs.<br />
  
</p></blockquote>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-365543">
				<div id="div-comment-365543" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">mikeb</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060403-59/?p=31693#comment-365543">
			April 3, 2006 at 2:21 pm</a>		</div>

		<blockquote><p>
  &gt; &nbsp;If you create a listbox2 that can be used by new apps with a corrected API, but keep listbox1 for old apps to use&#8230; &lt;&lt;</p>
<p>So now when I&#8217;m writing a new application I have to understand why there&#8217;s 2 listbox APIs and know why I want to use one over the other. &nbsp;And the difference is just that they start counting at 0 or 1?</p>
<p>Yikes &#8211; I&#8217;d rather keep with the current bit of mess than add another level of mysteriously different (but mostly similar) APIs.<br />
  
</p></blockquote>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-365573">
				<div id="div-comment-365573" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Luke</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060403-59/?p=31693#comment-365573">
			April 3, 2006 at 2:36 pm</a>		</div>

		<p>On the duplicate Notepad issue:<br />
<br />Invent symbolic links. Oh wait, someone already has. </p>
<p>GRRR ARGH</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-365593">
				<div id="div-comment-365593" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Mihai</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060403-59/?p=31693#comment-365593">
			April 3, 2006 at 2:42 pm</a>		</div>

		<p>&quot;everyone is well aware that the equivalent to GDI is going away and all drawing should go through the equivalent to GDI+&quot;</p>
<p>Nope, it seems GDI+ is the one going away.<br />
<br />GDI+ is much slower, and support for complex scripts is worse than the one in GDI. This is a reason why .NET 2 switched from GDI+ to GDI<br />
<br />See: <a rel="nofollow" target="_new" href="http://msdn.microsoft.com/msdnmag/issues/06/03/TextRendering/default.aspx" rel="nofollow">http://msdn.microsoft.com/msdnmag/issues/06/03/TextRendering/default.aspx</a><br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-365633">
				<div id="div-comment-365633" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">vince</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060403-59/?p=31693#comment-365633">
			April 3, 2006 at 3:41 pm</a>		</div>

		<p>The problem here is the weird way which MS separates &quot;OS&quot; from &quot;applications&quot;.</p>
<p>Under Linux this is not a problem because there is no default editor. &nbsp;<br />
<br />There&#8217;s no guarantee any editor is installed by default, and depending on which of the various distributions or gui options you install (and in what location in the filesystem they install at) it makes no sense to hard-code a location in.</p>
<p>So on Linux it&#8217;s actually easiest to use the built-in mechanism for properly determining which editor to use.</p>
<p>Wheras on Windows, I&#8217;d estimate at least 95% of people use the default, normal install of Windows. &nbsp;The &quot;OS&quot; contains various utilities, and since there is no competition at the OS levle overall (Microsoft controls everything) people get lazy and rely on that fact. &nbsp;Good for MS&#8217;s bottom line, but bad whenever they want to change things.</p>
<p>MS has painted themselves into a corner, there&#8217;s really no good solution to this problem at all. &nbsp;It&#8217;s just one of the hazards of running a closed-source platform where the majority of the software is also closed-source.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-365653">
				<div id="div-comment-365653" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Edward</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060403-59/?p=31693#comment-365653">
			April 3, 2006 at 3:51 pm</a>		</div>

		<p>Vista DOES require NTFS for the system partition. So the symbolic link solution can be used.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-365703">
				<div id="div-comment-365703" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">J</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060403-59/?p=31693#comment-365703">
			April 3, 2006 at 4:27 pm</a>		</div>

		<p>&quot;I was responding to Raymond&#8217;s question: &#8216;Okay, go for it. Tell me how you would correct the &quot;two copies of Notepad&quot; mistake?&#8217;&quot;</p>
<p>Ok, well since you put your solution out there, I&#8217;m assuming it&#8217;s open for evaluation. &nbsp;If we had to vote, I&#8217;d call Microsoft&#8217;s solution better.</p>
<p>Your solution had 5 steps with a lot of hidden costs (updating documentation, planning for removing the shims, perhaps providing a contingency plan for the case where a billion-dollar customer says their critical app is broken, 2 test phases&#8211;one once the shims are in place and then 1 when not). &nbsp;The advantage is that you save 68KB &#8211; 2*shim_size (rounding up to the nearest block size), and you get a sense of personal satisfaction that you&#8217;ve put the application where the other applications go.</p>
<p>The current solution has a one-time cost of 68 KB (and a single test phase I suppose) as far as I can tell.<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-maurits odd alt thread-odd thread-alt depth-1" id="comment-365733">
				<div id="div-comment-365733" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Maurits+%5BMSFT%5D' rel='external nofollow' class='url'>Maurits [MSFT]</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060403-59/?p=31693#comment-365733">
			April 3, 2006 at 4:50 pm</a>		</div>

		<p>I also think that &quot;special&quot; folders should have a random string tacked on to their names at Windows install time:</p>
<p>&quot;C:Windows-1i5PBWJF&quot;<br />
<br />&quot;C:Program Files-1i5PBWJF&quot;<br />
<br />&quot;C:Users-1i5PBWJF&quot;</p>
<p>etc.</p>
<p>That would put a quick stop to hardcoded paths. &nbsp;It would make dual-booting a lot simpler too.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-365743">
				<div id="div-comment-365743" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">RichB</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060403-59/?p=31693#comment-365743">
			April 3, 2006 at 5:02 pm</a>		</div>

		<p>Those same people are equating Microsoft to a Darwin Award winner.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-365773">
				<div id="div-comment-365773" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">kbiel</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060403-59/?p=31693#comment-365773">
			April 3, 2006 at 6:49 pm</a>		</div>

		<p>OK, Raymond, where does the compatibility subsystem fit into this. &nbsp;Obviously, it would be overkill in &quot;fixing&quot; the two notepad situation, but certainly it could help in the one-based listview. &nbsp;Or is the compatibility subsystem only to be used as a reactive measure instead of a proactive one?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-365783">
				<div id="div-comment-365783" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Kuwanger</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060403-59/?p=31693#comment-365783">
			April 3, 2006 at 6:49 pm</a>		</div>

		<p>&quot;Linux and Mac do a great job of avoiding problems like what we are talking about here by DESTROYING YOUR APP and causing your company to go bankrupt when they rewrite their API&#8217;s.&quot;</p>
<p>Not exactly. &nbsp;However, both Linux and Mac systems do have a higher tendency to remove APIs even if it means apps will stop working. &nbsp;The important thing to remember is that just because a new version of Linux or Mac OS X comes out doesn&#8217;t mean you should upgrade all your systems.</p>
<p>Part of evaluating new software in a business always has to be testing whether or not it breaks vital applications. &nbsp;This is true whether it&#8217;s upgrading to a whole new version of software or merely applying a security patch. &nbsp;One needs to look no further than the WMF exploit, which is actually used as a legitimate feature by variuos programs, to recognize that at some point companies have to decide whether to upgrade their system and live without a vital app, possibly killing the company, or maintaining older, independent software systems in a secure environment (ie, non-networked). &nbsp;The fact is, companies are probably the last group that wants compatibility hacks. &nbsp;Compatibility hacks means more code that could go wrong and when it comes to maintain features that could be exploited, leaves open a large area of human engineering (look no further than activex and outlook express). &nbsp;Beyond that, compatibility hacks almost never mean faster code (sheer size means cache misses are likely to increase), and that&#8217;s obviously further a big negative to a company where time is money and faster systems to compensate mean more money.</p>
<p>Having said all that, this isn&#8217;t to say Linux or Mac OS X are some sort of perfect systems. &nbsp;But they recognize that it&#8217;s better some times to simply throw away bad design, even if it means having to adjust to new apps or maintain separately older ones. &nbsp;To argue that concern for business is truly the driving force of these hacks seems ludicrous. &nbsp;To argue it&#8217;s more a driving force for pushing businesses to upgrade so Microsoft doesn&#8217;t have to keep applying security patches to separate forks or to prevent infuriate businesses by requiring them to de-network their non-vitality networked systems seems more probable.</p>
<p>Of course, none of this is speaking about non-companies. &nbsp;When it comes to the desktop, compatibility hacks are probably vital. &nbsp;It&#8217;s more important to keep apps running and add new features than it is to maximize security or performance. &nbsp;Of course, when incredibly bad design is involved, it&#8217;s sometimes necessary to completely disregard app compatibility. &nbsp;Thankfully that&#8217;s occurred very rarely for desktop users. &nbsp;But so long as most apps are not fixable by anyone but the original author, there will always be the looming threat. &nbsp;The closest thing I&#8217;ve seen so far is various attempts to firewall off dangerous things and try to give the user control over things that might go boom (ActiveX, for example). &nbsp;Without being cynical about using it as a basis to blame the user, I&#8217;d say it&#8217;s the best possible compromise to maintaing everything the user wants without entirely pissing them off.</p>
<p>I&#8217;m not sure how Apple handles it, except through some elitism and some good virtualization software of their own.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-365823">
				<div id="div-comment-365823" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Sash</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060403-59/?p=31693#comment-365823">
			April 3, 2006 at 8:05 pm</a>		</div>

		<p>So what Raymond is suggesting here is for the public to first fix all of the problems in the APIs and then lecture MS about proper software design decisions?</p>
<p>I fail to see how that makes any sense.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-365833">
				<div id="div-comment-365833" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">J</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060403-59/?p=31693#comment-365833">
			April 3, 2006 at 8:08 pm</a>		</div>

		<p>&quot;I fail to see how that makes any sense.&quot;</p>
<p>You are correct. &nbsp;Your interpretation of what he&#8217;s saying indeed does not make sense.<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-365843">
				<div id="div-comment-365843" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Matthew</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060403-59/?p=31693#comment-365843">
			April 3, 2006 at 8:12 pm</a>		</div>

		<blockquote><p>
  &gt; So what Raymond is suggesting here is for the public to first fix all of the problems in the APIs and then lecture MS about proper software design decisions? </p>
<p>&gt;&gt; I fail to see how that makes any sense. </p>
<p>Who told the slashdotters about Raymond&#8217;s blog? Its good to see they have upgraded their argumentative style from Ad Hominem (<a rel="nofollow" target="_new" href="http://www.nizkor.org/features/fallacies/ad-hominem.html" rel="nofollow">http://www.nizkor.org/features/fallacies/ad-hominem.html</a>) to Straw Man (<a rel="nofollow" target="_new" href="http://www.nizkor.org/features/fallacies/straw-man.html" rel="nofollow">http://www.nizkor.org/features/fallacies/straw-man.html</a>).
</p></blockquote>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-365853">
				<div id="div-comment-365853" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Easily Entertained</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060403-59/?p=31693#comment-365853">
			April 3, 2006 at 8:34 pm</a>		</div>

		<p>Maybe it&#8217;s just me, but given all the effort that Microsoft has put into fighting the Samba project, I&#8217;m quite amused that anyone working for Microsoft feels entitled to whine and bitch that &quot;the community&quot; isn&#8217;t feeling suitably generous and charitable.</p>
<p>Somebody at Microsoft bet that they could kill Samba. They failed, and now they&#8217;re being introduced to that amazing thing known as &quot;consequences&quot;. Yeah, there&#8217;s not much they can do that won&#8217;t cause poor publicity in one way or another. So? When did that become my problem?</p>
<p>Besides, we&#8217;re not life guards refusing to save a drowing man. We&#8217;re passers-by making cracks about life jackets while waiting for the guy in the water to realise that it&#8217;s only 2ft deep and he&#8217;ll be able to stand up as soon as he stops trying to hold another guy down.<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-maurits odd alt thread-odd thread-alt depth-1" id="comment-365433">
				<div id="div-comment-365433" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Maurits+%5BMSFT%5D' rel='external nofollow' class='url'>Maurits [MSFT]</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060403-59/?p=31693#comment-365433">
			April 3, 2006 at 1:52 pm</a>		</div>

		<p>/me checks mirror, takes temperature&#8230; hmm, I seem to be OK. :)</p>
<p>I&#8217;m not implying that the &quot;two notepads&quot; problem *needs* to be fixed. &nbsp;I&#8217;m just saying that there *is* a way to fix it.</p>
<p>The method I propose is very similar to the Write =&gt; Wordpad migration Mike describes here:<br />
<br /><a rel="nofollow" target="_new" href="http://blogs.msdn.com/oldnewthing/archive/2006/03/28/563008.aspx#563212" rel="nofollow">http://blogs.msdn.com/oldnewthing/archive/2006/03/28/563008.aspx#563212</a></p>
<p>Note that %SYSTEMROOT%system32write.exe is currently a shim for:<br />
<br />C:Program FilesWindows NTAccessorieswordpad.exe<br />
<br />(Check the icons and the file sizes)</p>
<p>The sunset date could be pushed arbitrarily far into the future, in principle.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-365613">
				<div id="div-comment-365613" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">foxyshadis</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060403-59/?p=31693#comment-365613">
			April 3, 2006 at 3:14 pm</a>		</div>

		<p>Mihai, he meant OSX&#8217;s versions of those; of course GDI will never go away, at least until Windows 2025 or so. :p</p>
<p>Windows already uses a lot of side-by-side DLLs, see all the vbrun*, msvcrt*, mfc*, etc, and of course the actual SxS copies of differing major versions. For fixing minor problems, I&#8217;d just use SxS to publish a new version of the dll, which the system ensures is only used if the manifest matches (so it has to be compiled against it), but how to ensure that developers know about the change so they don&#8217;t go blindly recompiling what might now be buggy software?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-365913">
				<div id="div-comment-365913" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">sleepsleep</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060403-59/?p=31693#comment-365913">
			April 4, 2006 at 2:47 am</a>		</div>

		<p>i see hundreds of small utilities .exe files around in windowssystem32 folder.</p>
<p>i wonder, why don&#8217;t just invent a new type of .EXE, you may call it .EXE2 or .FXE (ABCDE &quot;F&quot;) that could house several .exe files.</p>
<p>so, you could put eg.<br />
<br />calc.exe<br />
<br />notepad.exe<br />
<br />&#8230;</p>
<p>into one sytem_utils.fxe and they should still could be accessed naturally. (like from START-&gt;RUN, typing notepad would still lauch notepad)</p>
<p>ping.exe<br />
<br />tracert.exe<br />
<br />route.exe<br />
<br />system_network.fxe to store network utilities.</p>
<p>so. wat the benefits,<br />
<br />1. more manageable. (10 peoples are more manageable than 100 peoples). so as files.</p>
<p>2. save a little bit hard disk space. (i know 10GB is cheap nowadays, but.. wasting is always no good)</p>
<p>3. easier version management since stuffs are grouped into their own category</p>
<p>4. the best thing is, application developer eg microsoft could make something like program_office.fxe that contained all word.excel, pp, access and so on. or program_adobe.fxe would have photoshop, &#8230; and so on.</p>
<p>so when somebody double click eg. program_office.fxe, a dialog box would box up and user could select wat application they want to launch. and if let say they want to start word directly, short-cut to application would be like, &quot;c:program_office.fxe msword&quot; so MS word would start</p>
<p>if somebody take a closer look on c:windows or else where&#8230; files are here and there, lots of the dll files are ungroup, they just sit there in system32, wonder how many times they are used monthly.</p>
<p>just imho.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-365923">
				<div id="div-comment-365923" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">xyz</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060403-59/?p=31693#comment-365923">
			April 4, 2006 at 3:06 am</a>		</div>

		<p>&gt; &quot;Help me, I&#8217;m drowning!&quot;<br />
<br />&gt; &quot;Are you wearing a life preserver?&quot;<br />
<br />&gt; &quot;No.&quot;<br />
<br />&gt; &quot;Well, if you had worn a life preserver, &#8230;</p>
<p>Well, The Old New Thing the part of the world I&#8217;m living there is an very old saing</p>
<p>Uppuja p&#228;&#228;stmine on uppuja enda asi!</p>
<p>Which translates to something like &#8230;</p>
<p>If you drown, you must save your self!</p>
<p>I know its rude, but often true.<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-365953">
				<div id="div-comment-365953" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://steveg' rel='external nofollow' class='url'>steveg</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060403-59/?p=31693#comment-365953">
			April 4, 2006 at 4:46 am</a>		</div>

		<p>I&#8217;d fix the notepad.exe problem like this.</p>
<p>1. Throw away current notepad.exe. It was way cool 15 years ago, but it&#8217;s been a walking corpse for a long time.</p>
<p>2. Buy one of the very nice lightweight notepad replacements available from one very happy and [now] rich developer (heck, I&#8217;ll write you a better one, my rates are reasonable, especially given the US-AUD exchange rate :).</p>
<p>3. (bug-fix, test cycle, still cheaper this way)</p>
<p>4. Installs into /program files/JotPad (whatever).</p>
<p>5. Install 2 notepad.exen into current locations (shims with smarts to read some configuration setting to determine the System Text editor which defaults to JotPad).</p>
<p>[There is a separate, and no-doubt passionate debate over what features are required in an enhanced notepad. Let&#8217;s save that for another day folks, it&#8217;s even less relevant than my &#8216;solution&#8217; :]</p>
<p>Now this is a very concrete answer to a single example of a generic issue. To me it seems a no-brainer for MS to have as much backward compatibility as possible. You can wax lyrical about virtuous customer support or lose sleep over blemished sourcecode, but ultimately the real reason is to keep selling Windows.</p>
<p>How many gazillions of Windows users are out there? How many of you have relatives still running 95 or 98? The next time they upgrade it&#8217;ll probably be when you replace your current PC and give them your piece of rubbish. They&#8217;ll want GardenPlanner or FamilyTree or KnittingPatterns or RayGunz to keep running.</p>
<p>They wouldn&#8217;t give a flying frisbee that the operating system has some thingies that start at 0 and some thingies that start at 1. They just want to use their software, not be forced to admire the side-effect of some wanker&#8217;s masterpiece of abstract technical purity.</p>
<p>Sash said: &quot;So what Raymond is suggesting here is for the public to first fix all of the problems in the APIs and then lecture MS about proper software design decisions?&quot;</p>
<p>It&#8217;s impossible to create a system of the complexity of notepad without any bugs (I think they&#8217;re all fixed now, though), how do you propose to do it with something like an operating system?</p>
<p>&quot;proper&quot; design decision? What&#8217;s a &quot;proper&quot; design decision?</p>
<p>Bah!</p>
<p>Mistakes get made. Children cry about them, adults got on with it.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-365963">
				<div id="div-comment-365963" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">steveg</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060403-59/?p=31693#comment-365963">
			April 4, 2006 at 4:48 am</a>		</div>

		<p>s/adults got/adults get/</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-365973">
				<div id="div-comment-365973" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Aaargh!</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060403-59/?p=31693#comment-365973">
			April 4, 2006 at 4:49 am</a>		</div>

		<blockquote><p>
  i wonder, why don&#8217;t just invent a new type of .EXE,<br />
  <br />&gt; you may call it .EXE2 or .FXE (ABCDE &quot;F&quot;) that could house several .exe files. </p>
<p>That concept already exists, it&#8217;s called a &quot;directory&quot;.</p>
<p>Back on topic:<br />
  <br />It is far too late for Microsoft to fix win32, there are too many work-arounds which can&#8217;t be removed without breaking some stuff. There is only one obvious solution : break everything, all at once, but only after giving developers enough time to rewrite their apps.</p>
<p>The best way forward (IMHO) is DotNET, MS should say to developers: DotNET is the way to go, starting today al new apps should be written as .NET managed code, win32 support will be in Windows for another 5-10 years, after that only .NET apps will run. Old apps would continue to work on top of the old API&#8217;s long enough for every developer to have enough time to port their shit. Once enough apps are running in .NET drop win32 support by default (keep it around as an add-on for a few more years).</p>
<p>This approach has several advantages:<br />
  <br />&#8211; Complete backwards compatibility while having a shiny new API for new apps.<br />
  <br />&#8211; Eventually, you&#8217;ll get rid of the old crap.<br />
  <br />&#8211; Little problems with the 32-bit to 64-bit switch.<br />
  <br />&#8211; The possibility to support other CPU architectures (e.g. in future mobile devices)<br />
  
</p></blockquote>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-365983">
				<div id="div-comment-365983" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Eric</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060403-59/?p=31693#comment-365983">
			April 4, 2006 at 6:14 am</a>		</div>

		<p>Apple stopped supporting Apple ][ binaries when they introduced the Mac. Microsoft still run DOS binaries in Windows XP. This is a large part of the reason why Microsoft is the dominant vendor.</p>
<p>I heard a rumor that 64-bit Windows XP will not support DOS binaries. Has Microsoft given up backwards compatibility?<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-365993">
				<div id="div-comment-365993" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">vsz</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060403-59/?p=31693#comment-365993">
			April 4, 2006 at 6:54 am</a>		</div>

		<p>If we&#8217;re at it, MS did a great job maintaining DOS compatibility in NT via the NTVDM. It has it&#8217;s quirks, but the concept is nice and clean.</p>
<p>AFAIK they had to drop NTVDM (and Win16) support in x64 due to CPU mode limitations.<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-366003">
				<div id="div-comment-366003" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Adam</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060403-59/?p=31693#comment-366003">
			April 4, 2006 at 7:48 am</a>		</div>

		<p>mikeb&gt; &quot;So now when I&#8217;m writing a new application I have to understand why there&#8217;s 2 listbox APIs and know why I want to use one over the other.&quot;</p>
<p>That&#8217;s what documentation is for. Yes, end-users shouldn&#8217;t need to read documentation for every little thing they do, but if you&#8217;re a developer selecting between listbox1 and listbox2, reading the documentation would probably be a good idea.</p>
<p>If the documentation for each class included one page that detailed all the API changes between them linked from the top level, something like:</p>
<p>Listbox2:<br />
<br /> &nbsp;methods<br />
<br /> &nbsp;properties<br />
<br /> &nbsp;events<br />
<br /> &nbsp;changes from listbox1</p>
<p>Then there wouldn&#8217;t be much of an excuse for missing it.</p>
<p>&quot;And the difference is just that they start counting at 0 or 1?&quot;</p>
<p>Like I said, wait a few years between versions. Get all the bugs out at once.</p>
<p>&quot;Yikes &#8211; I&#8217;d rather keep with the current bit of mess than add another level of mysteriously different (but mostly similar) APIs.&quot;</p>
<p>Yeah, &#8216;cos developers get really confused between different versions of APIs, like the half-dozen variants of DirectX.</p>
<p>Oh &#8211; no they don&#8217;t. Because they can continue using the old stuff if they&#8217;re comfortable with it as it will be kept around.<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-366013">
				<div id="div-comment-366013" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">dhiren</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060403-59/?p=31693#comment-366013">
			April 4, 2006 at 8:17 am</a>		</div>

		<p>Hi Raymond,</p>
<p>Why not release the checked builds of windows totally free for download, rather than only to MSDN subscribers&#8230; not only that, but in the checked build, remove all the backwards compatibility stuff like duplicate notepads and shell folder registry keys and even shims for deprecated programs like write and whatnot. &nbsp;The point is, make it free to download, so any developer can boot into it and see if their code runs.</p>
<p>While this solution won&#8217;t help fix apps that are no longer maintained, it may force current developers to use best practices, so that <em>eventually</em> some backwards compat can be dropped after a period of time, and it may minimize the number of new compatibility shims that need to be added to work around buggy apps. &nbsp;And since its a checked build, it wont be useful to anyone other than developers looking for issues as it will probably be too slow and assert too often for normal use.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-366083">
				<div id="div-comment-366083" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.petesh.com/' rel='external nofollow' class='url'>PeteSh</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060403-59/?p=31693#comment-366083">
			April 4, 2006 at 10:23 am</a>		</div>

		<p>Two notepads, I seem to recall that the original (Win3.1 ish) notepad.exe could only support up to 32k in size while the NT notepad could support larger documents. People would copy the old notepad into the windows directory. If the supporting &gt; 32k version was there then it would be munched by it&#8217;s crippled little brother. Makes a certain amount of sense.</p>
<p>I appreciate all the work that Microsoft put into their products to make them backwards compatible in the face of all the things that misinformed developers do.</p>
<p>The purist in me hates it, but the realist says that it needs to be done in order to not affect the bottom line &#8211; ship more units, make more money.</p>
<p>Commercial Unix has similar commitments to not breaking things when you upgrade, primarily due to the lower-level nature of the API and their stability.</p>
<p>However once you start wandering into the GUI layer all bets are off (gtk1 vs. gtk2 vs. qt2 vs. qt3). The only way to &#8216;ensure&#8217; stability at that level was to use static linking, but that makes things worse for everyone.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-366143">
				<div id="div-comment-366143" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">x64</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060403-59/?p=31693#comment-366143">
			April 4, 2006 at 11:11 am</a>		</div>

		<blockquote><p>
  AFAIK they had to drop NTVDM (and Win16) support in x64 due to CPU mode limitations. </p>
<p>Yes that is correct, a protected mode (32-bit) operating system can run a specific process in virtual-8086 mode (16-bit).</p>
<p>but in long mode (64-bit), the architecture does not support switches to v86 mode.<br />
  
</p></blockquote>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-366183">
				<div id="div-comment-366183" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Mike Swaim</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060403-59/?p=31693#comment-366183">
			April 4, 2006 at 12:48 pm</a>		</div>

		<p>Comments on a couple of comments</p>
<p>[Quote]<br />
<br />The best way forward (IMHO) is DotNET, MS should say to developers: DotNET is the way to go, starting today al new apps should be written as .NET managed code, win32 support will be in Windows for another 5-10 years, after that only .NET apps will run.<br />
<br />[End Quote]<br />
<br />Remember back when .net came out and some people ported Quake II? Managed code ran at something like 85% the speed of compiled code. It ran at ~ 70% of shipped code, which included some assembly. For people who really need performance, .net&#8217;s still not an option. (SQL servers are also a bad fit. Notice that SQL Server 2005 hosts .net, and not the other way around.)</p>
<p>[Quote]<br />
<br />Apple stopped supporting Apple ][ binaries when they introduced the Mac. Microsoft still run DOS binaries in Windows XP.<br />
<br />[End Quote]<br />
<br />1) The hardware difference between an Apple ][ and any Mac was a lot different than current PCs and the original IBM PC.<br />
<br />2) Apple continues to sell and support the Apple ][ series for several years after the Mac was introduced. They added the (32 bit)][ GS to the line and an Apple ][ card for Macs.<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-366193">
				<div id="div-comment-366193" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">sleepsleep</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060403-59/?p=31693#comment-366193">
			April 4, 2006 at 12:54 pm</a>		</div>

		<blockquote><p>
  i wonder, why don&#8217;t just invent a new type of .EXE,<br />
  <br />&gt; you may call it .EXE2 or .FXE (ABCDE &quot;F&quot;) that could house several .exe files.<br />
  <br />&gt;&gt; That concept already exists, it&#8217;s called a &quot;directory&quot;.</p>
<p>is directory a good concept of it is just a uncomputerised virtual concept.</p>
<p>how many files and folders could exist inside a folder before it is called &quot;unmanageable&quot;?<br />
  <br />and how many deepth level a directory could goes before it is called impractical?</p>
<p>.mht (web archieve, single file)<br />
  <br />.zip, .cab, .rar, .chm</p>
<p>they are concepts tat help manage the files before folder.<br />
  <br />perhaps future OS should abolish the idea of directory and put everything inside an OS-tied database server.</p>
<p>~it seems like system32 has became like a dump area for everybody :D
</p></blockquote>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-366033">
				<div id="div-comment-366033" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">BryanK</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060403-59/?p=31693#comment-366033">
			April 4, 2006 at 8:34 am</a>		</div>

		<p>Aaargh! &#8212; That sounds like a great idea, but *only if* .net would let you do everything that Win32 lets you do.</p>
<p>(Maybe .net 2.0 is better about this, but 1.1 doesn&#8217;t support serial ports, or direct printing using a custom printer control language (useful for barcode printers, which have a text-only PCL, and which there&#8217;s no good way to control via GDI), or directly talking to USB HID devices like barcode scanners, or GetGuiResources, or named pipes, or FormatMessage, or access to SSPI, or the IP Helper stuff, or a bunch of other things. &nbsp;To do any of this, you need P/Invoke and the Win32 API. &nbsp;Of course, even if the framework could do all of this, so that P/Invoke&#8217;ing the Win32 API wasn&#8217;t required, P/Invoke itself would still be needed, because there are other APIs that need to be used from .net: WinPcap is one. &nbsp;But it would remove the requirement for the Win32 API.)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-366633">
				<div id="div-comment-366633" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">DriverDude</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060403-59/?p=31693#comment-366633">
			April 5, 2006 at 2:56 pm</a>		</div>

		<p>Do developers actually learn from past mistakes? Not nearly enough people do.</p>
<p>Some of today&#8217;s software installers still try to overwrite system files with older ones.</p>
<p>Some production drivers still crash, even though running Driver Verifier would have easily caught the error.</p>
<p>Buffer overflows in privlidged code are still common &#8211; 16 years after the first public demonstration.</p>
<p>When I report software bugs, more often than not I get a canned response: &quot;turn off virus scanner&quot;, &quot;run as Admin&quot;, etc. instead of a thoughtful analysis. I don&#8217;t use those companies&#8217; products anymore, but they&#8217;re still in business selling buggy software &#8211; that Windows has to be compatible with.</p>
<p>And by the way, there are some Windows driver problems that have been reported to Microsoft by at least two large hardware manufactures. These are not obscure problems &#8211; some consumer sites have written &quot;use WinXP SP1 drivers&quot; to work around the problem. MS&#8217; response has been &quot;show us the business case&quot; before fixing the problem.</p>
<p>Um, you need justification to fix a problem reported by vendors and consumers alike? (This blog isn&#8217;t the place to share details&#8230; Raymond?)</p>
<p>Now do you see why we are so fustrated?<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-366643">
				<div id="div-comment-366643" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">DriverDude</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060403-59/?p=31693#comment-366643">
			April 5, 2006 at 3:06 pm</a>		</div>

		<p>Now that Virtual Server 2005 is free &#8211; or so says an article I read yesterday &#8211; then it would be possible to run any ol&#8217; app, eg, as 16-bit DOS, in a Win95 guest OS on 64-bit Vista, right?</p>
<p>That&#8217;s true backwards compatibility. And keep Vista clean.<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-oldnewthing bypostauthor odd alt thread-odd thread-alt depth-1" id="comment-366663">
				<div id="div-comment-366663" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Raymond+Chen+-+MSFT' rel='external nofollow' class='url'>Raymond Chen - MSFT</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060403-59/?p=31693#comment-366663">
			April 5, 2006 at 3:20 pm</a>		</div>

		<p>DriverDude: I already discussed with a virtual machine doesn&#8217;t help. <a rel="nofollow" target="_new" href="http://blogs.msdn.com/oldnewthing/archive/2005/10/05/477317.aspx" rel="nofollow">http://blogs.msdn.com/oldnewthing/archive/2005/10/05/477317.aspx</a></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-367663">
				<div id="div-comment-367663" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Michael J.</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060403-59/?p=31693#comment-367663">
			April 7, 2006 at 12:38 pm</a>		</div>

		<p>Not exactly related to this thread, but seems that now you Raymond will be dealing with fixing compatibility issues in Mac :)</p>
<p><a rel="nofollow" target="_new" href="http://www.dealcatcher.com/forums/m_402248/tm.htm" rel="nofollow">http://www.dealcatcher.com/forums/m_402248/tm.htm</a></p>
<p>&quot;1. Boot into Mac OS X &#8211; this wakes up the iSight USB camera<br />
<br />2. Reboot into Windows without turning off the Mac (turning it off/back on apparently disables the iSight in Windows, and it won&#8217;t wake back up unitl you go into OS X)<br />
<br />3. Control Panel &gt; Scanners and Camers &gt; USB Video<br />
<br />4. If you haven&#8217;t BSOD&#8217;d yet, click whatever option you see<br />
<br />5. Enjoy your BSOD.&quot;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-370183">
				<div id="div-comment-370183" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Neil</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060403-59/?p=31693#comment-370183">
			April 17, 2006 at 9:40 am</a>		</div>

		<p>I like dhiren&#8217;s idea. After all, checked builds should run a bit faster without all the compatibility shims to slow them down. I only wish I&#8217;d thought of it first.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-458583">
				<div id="div-comment-458583" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blogs.msdn.com/oldnewthing/archive/2007/01/03/1404965.aspx' rel='external nofollow' class='url'>The Old New Thing</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060403-59/?p=31693#comment-458583">
			January 3, 2007 at 10:00 am</a>		</div>

		<p>Vestigial organs.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-516183">
				<div id="div-comment-516183" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://beta.channel9.msdn.com/Media/107743/Comments/172102/' rel='external nofollow' class='url'>Channel 9</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060403-59/?p=31693#comment-516183">
			June 16, 2007 at 10:43 pm</a>		</div>

		<p>Hmm, there seems to be</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

