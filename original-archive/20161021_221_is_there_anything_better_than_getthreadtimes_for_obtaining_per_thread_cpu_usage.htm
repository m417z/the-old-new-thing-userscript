<html>
<head>
<title>Is there anything better than GetThreadTimes for obtaining per-thread CPU usage information?</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>Is there anything better than GetThreadTimes for obtaining per-thread CPU usage information?</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>October 21, 2016 / year-entry #222</td></tr>
<tr><td><b>Tags:</b></td><td>code</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20161021-00/?p=94565</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>7</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">QueryThreadCycleTime.</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>
A customer was using the
<code>Get&shy;Thread&shy;Times</code>
function for high-resolution
profiling of performance-sensitive code,
but found that its accuracy is rather poor.
They were hoping there would be something more
along the lines of a
<code>Query&shy;Performance&shy;Counter</code>
that reported only CPU time consumed by a particular thread,
rather than by the system in general.
</p>
<p>
Fortunately, there is.
<a HREF="https://msdn.microsoft.com/en-us/library/windows/desktop/ms684943(v=vs.85).aspx">
The
<code>Query&shy;Thread&shy;Cycle&shy;Time</code>
function</a>
gives you the CPU cycles consumed by a particular thread.
This includes time spent both in user mode and in kernel mode.
</p>
<p>
Note, however, that these values are reported directly from the CPU
using mechanisms like RDTSC
or
<a HREF="http://infocenter.arm.com/help/topic/com.arm.doc.ddi0290g/Bihcjbaa.html">
the performance monitor control register</a>.
This means that the actual results are at the mercy of whatever
the CPU manufacturer decides the CPU cycle counter means.
Maybe they correspond to wall clock time; maybe they don't.</p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (7)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1 parent" id="comment-1270605">
				<div id="div-comment-1270605" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">ZLB</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20161021-00/?p=94565#comment-1270605">
			October 21, 2016 at 7:18 am</a>		</div>

		<p>Would this behaviour also include the possibility of warping backwards and forwards on multiple CPU system or does the kernel tot up the time before/after scheduling?</p>

		
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-alegrigoriev odd alt depth-2" id="comment-1270645">
				<div id="div-comment-1270645" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/alegr1' rel='external nofollow' class='url'>alegr1</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20161021-00/?p=94565#comment-1270645">
			October 21, 2016 at 9:04 am</a>		</div>

		<p>It&#8217;s very easy, as long as the cycle counter runs with constant speed on all CPUs.<br />
When the scheduler switches to a thread, the CPU cycle counter is saved in the thread context. When the thread loses CPU (even for interrupts and DPCs), the saved count is subtracted from the current and added to the thread&#8217;s total. The counters on different CPUs can be all around the place and still the total count will be accurate.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment even thread-odd thread-alt depth-1 parent" id="comment-1270625">
				<div id="div-comment-1270625" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">otstrel</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20161021-00/?p=94565#comment-1270625">
			October 21, 2016 at 8:41 am</a>		</div>

		<p>Funny coincidence, I&#8217;ve been looking into the very same problem earlier today and found another bit of information that may be useful: <a href="http://blog.kalmbachnet.de/?postid=28" rel="nofollow">http://blog.kalmbachnet.de/?postid=28</a></p>

		
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-oldnewthing bypostauthor odd alt depth-2 parent" id="comment-1270635">
				<div id="div-comment-1270635" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Raymond+Chen+-+MSFT' rel='external nofollow' class='url'>Raymond Chen - MSFT</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20161021-00/?p=94565#comment-1270635">
			October 21, 2016 at 9:02 am</a>		</div>

		<p>But probabilistically, if your thread consumes only 1% of its quantum, then 1 out of every 100 timer ticks will happen to hit while the thread is running. In your example, the calculation thread kept releasing its quantum, so it wasn&#8217;t actually running the whole time.</p>

		
				</div>
		<ol class="children">
		<li class="comment even depth-3 parent" id="comment-1270655">
				<div id="div-comment-1270655" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">jake</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20161021-00/?p=94565#comment-1270655">
			October 21, 2016 at 12:20 pm</a>		</div>

		<p>raymond debugs windows.  raymond blogs.  raymond debugs blogs!</p>

		
				</div>
		<ol class="children">
		<li class="comment odd alt depth-4" id="comment-1270836">
				<div id="div-comment-1270836" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ray Koopa</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20161021-00/?p=94565#comment-1270836">
			October 25, 2016 at 5:17 am</a>		</div>

		<p>Raymond blocks windows? Are the zombies outside?</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1270735">
				<div id="div-comment-1270735" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua A. Schaeffer</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20161021-00/?p=94565#comment-1270735">
			October 23, 2016 at 10:11 am</a>		</div>

		<p>Is it considered more acceptable to calculate CPU %usage by cycles or by wall clock time? Or does it not matter?</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

