<html>
<head>
<title>Getting MS-DOS games to run on Windows 95: Working around the iretd problem</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>Getting MS-DOS games to run on Windows 95: Working around the iretd problem</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>April 4, 2016 / year-entry #71</td></tr>
<tr><td><b>Tags:</b></td><td>history</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20160404-00/?p=93261</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>11</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">Speed Racer in the Challenge of Racer X, please make it stop.</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>
Today's story is the story of
<a HREF="https://archive.org/details/msdos_Speed_Racer_in_The_Challenge_of_Racer_X_1992">
<i>Speed Racer in the Challenge of Racer X</i></a>.
Here goes.
The really scary thing is that <i>I still remember the details</i>.
</p>
<p>
To this day, I can't bear to listen to the Speed Racer theme song
because I spent over a week debugging
why the program froze up right after
the title sequence music.
The crashes were completely nonsensical and random.
</p>
<p>
Windows 95 uses the
<code>iretd</code> instruction to
return from the kernel back to the application.
After days of frustrating head-scratching,
I eventually discovered
that if you use the instruction to return
from the kernel back to the application,
and the application is running 32-bit protected-mode
code on a 16-bit stack,
then only the bottom 16 bits of the <code>esp</code> register
are updated by the <code>iretd</code> instruction.
The upper 16 bits remain unchanged and continue
to hold the value they had while you were in kernel mode.
This behavior doesn't appear to be documented anywhere in Intel's
reference books.&sup1;
</p>
<p>
The effect of this is that 32-bit protected-mode code
running on a 16-bit stack will observe that the upper 16
bits of the <code>esp</code> register are spontaneously corrupted
randomly.
(<a HREF="https://technet.microsoft.com/en-us/magazine/jj203546.aspx">Sound familiar</a>?)
Unfortunately,
<i>Speed Racer</i>
was counting
on the upper 16 bits of the <code>esp</code> register remaining
zero.
</p>
<p>
To fix this, I had to counter insanity with more insanity.
</p>
<p>
At the last moment before restoring all the general purpose registers and
executing the <code>iretd</code>
instruction,
Windows 95 does a check to see whether the troublesome
scenario is about to occur.
If so, the kernel sets up a temporary stack selector
whose base linear address matches the high 16 bits of
the kernel <code>esp</code> register,
then switches to that stack while simultaneously zeroing
out the high 16 bits of its own <code>esp</code> register.
This double-switch rewrites the <code>ss:esp</code> value
such that it points to the same memory, but shuffles the
bits around to arrange for the high 16 bits of <code>esp</code>
to be zero.
In other words, it rewrote
<code>SS:ESP = 00000000 + xxxxyyyy</code>
as
<code>SS:ESP = xxxx0000 + 0000yyyy</code>.
(<a HREF="https://blogs.msdn.microsoft.com/oldnewthing/20120629-00/?p=7253">Sound familiar</a>?)
</p>
<p>
At this point, the kernel is set up to
restore the general purpose registers and
perform the <code>iretd</code>.
This returns control back to the application
with the high 16 bits of the <code>esp</code> register
set to zero, as the application expects.
</p>
<p>
Now, this may seem like an awful lot of work just
to get a single game to work,
and it's not like <i>Speed Racer</i> was a blockbuster
game like <i>DOOM</i>.
However, this particular problem was not intrinsic to
<i>Speed Racer</i>.
Rather, it was a problem in the client-side library
code that came with the MS-DOS extender they were using,
and that MS-DOS extender was one of the major players
in the MS-DOS extender market,
so fixing this issue actually fixed a lot of programs.
It's just that
<i>Speed Racer</i> was the first one discovered
to exhibit the problem,
so it was the one I ended up debugging.
</p>
<p>
&sup1;Maybe I'm missing it.
<a HREF="http://tptp.cc/mirrors/siyobik.info/instruction/IRET%252FIRETD.html">
You tell me if you see it in there</a>.
The pseudocode at the
<code>RETURN-TO-OUTER-PRIVILEGE-LEVEL</code>
label talks about raising an exception if the stack doesn't
have at least 8 bytes of data in it,
but it doesn't appear to discuss what happens to the <code>esp</code>
register.
The discussion says
"If the return is to another privilege level,
the IRET instruction also pops the stack pointer and SS from the stack,"
but it doesn't mention what happens if the destination stack pointer
is a different size from the current stack pointer.</p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (11)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-1232271">
				<div id="div-comment-1232271" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Karellen</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160404-00/?p=93261#comment-1232271">
			April 4, 2016 at 7:21 am</a>		</div>

		<p>&gt; the application is running 32-bit protected-mode code on a 16-bit stack</p>
<p>The obvious question here is, why would you use a 16-bit stack? So I had a bit of a dig, and found the following quote on the Wikipedia page of one of the major players in the 32-bit DOS extender market:<br />
&gt; The compiler generates 32-bit code, which runs natively in 32-bit protected mode while switching back to 16-bit DOS calls for basic OS support.<br />
Also:<br />
&gt; While [the platform] runs in 32-bit protected mode, its stub and library heavily rely on many 16-bit DOS and BIOS calls.</p>
<p>Just in case anyone else was wondering.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1232283">
				<div id="div-comment-1232283" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Antonio Rodr√≠guez</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160404-00/?p=93261#comment-1232283">
			April 4, 2016 at 7:50 am</a>		</div>

		<p>The world of 32-bit DOS extenders was weird. Since the native OS only supported a 16-bit model and it wasn&#8217;t multitasking, the 32-bit developer thought it was free to do as s/he whished, as far as it switched back to 16-bit before calling into DOS. And I suspect most of the hacks involved performance (after all most of its &#8220;clients&#8221; were games of heavy-load applications). Having a single 16-bit stack would avoid moving data back and fort two 16-bit and 32-bit stacks, and would greatly speed calls and interrupts.</p>
<p>Debugging those 32-bit extenders to make them work in Windows 95 must have been everything but fun :-( . I send my condolences, Raymond.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1232304">
				<div id="div-comment-1232304" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Myria</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160404-00/?p=93261#comment-1232304">
			April 4, 2016 at 10:50 am</a>		</div>

		<p>I wish that modern NT had NtSetLdtEntries, so that I could create my own NTVDM for 64-bit Windows.  Maybe the Linux on Windows thing will allow modify_ldt and arch_prctl so that it could be implemented now.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-dwalker-wk odd alt thread-odd thread-alt depth-1" id="comment-1232313">
				<div id="div-comment-1232313" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/DWalker' rel='external nofollow' class='url'>DWalker</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160404-00/?p=93261#comment-1232313">
			April 4, 2016 at 10:52 am</a>		</div>

		<p>I hate the theme music too.  And &#8220;Speed Racer&#8221; is just a silly name.  who would name their child &#8220;Speed&#8221;?  Especially if your last name was already &#8220;Racer&#8221;?  As a kid, I thought about these things&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1232321">
				<div id="div-comment-1232321" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160404-00/?p=93261#comment-1232321">
			April 4, 2016 at 11:23 am</a>		</div>

		<p>I found it long ago. Whenever you transition from 32 bit back to 16 bit, the 32 bit portions of all registers are preserved in the 32 bit portions of the registers and will be there next time you transition back to 32 bit. Now obviously this is pretty bad and v86 interrupt to protected mode should have protected the bits but I guess Intel never thought a process would move back and forth between v86 mode and 32 bit protected mode.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1232322">
				<div id="div-comment-1232322" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Martin Bonner</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160404-00/?p=93261#comment-1232322">
			April 4, 2016 at 1:02 pm</a>		</div>

		<p>Huh!  I can still remember the details of a bug switching between 16- and 32-bit mode on a Pr1me mini-computer before 19*8*5.  (It was a slightly simpler bug though).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1232332">
				<div id="div-comment-1232332" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">HiTechHiTouch</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160404-00/?p=93261#comment-1232332">
			April 4, 2016 at 2:09 pm</a>		</div>

		<p>I don&#8217;t know any of the design players in in Intel 286 &#8220;brain dead&#8221; birth, or the Intel 386 &#8220;32 bits and never look back&#8221; delivery.  </p>
<p>But, as an old math prof of my used to say, &#8220;It is blatantly obvious to the most trivial of observers that&#8230;&#8221; that _Things were Missing_.  Why else did the triple-fault become so important?</p>
<p>{insert link to story about Intel visit to MS asking programmers for 386 suggestions and hearing about the ingenuity required to get the processor out of 32 bit mode.}</p>
<p>{insert link to story about original IBM PC&#8217;s use of A31 line as a mark on the wall} so Intel won&#8217;t feel alone.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1 parent" id="comment-1232351">
				<div id="div-comment-1232351" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Cesar</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160404-00/?p=93261#comment-1232351">
			April 4, 2016 at 6:49 pm</a>		</div>

		<p>Wait, didn&#8217;t I see this issue somewhere before? *searches around* Yup, the Linux folks also hit the same issue, and their fix was similar. The keyword is &#8220;espfix&#8221; if anyone wants to know more.</p>

		
				</div>
		<ol class="children">
		<li class="comment even depth-2" id="comment-1232353">
				<div id="div-comment-1232353" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Scarlet Manuka</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160404-00/?p=93261#comment-1232353">
			April 4, 2016 at 11:27 pm</a>		</div>

		<p>&#8220;espfix&#8221; makes it sound like it&#8217;s those famous psychic powers in play again (I assume Linux devs have them too). :)</p>
<p>I&#8217;m glad I wasn&#8217;t the one who had to work out what was going on. It sounds like it would have been a nightmare to debug. Even with the psychic powers.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment odd alt thread-even depth-1" id="comment-1232361">
				<div id="div-comment-1232361" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Scarlet Manuka</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160404-00/?p=93261#comment-1232361">
			April 4, 2016 at 11:28 pm</a>		</div>

		<p>Also &#8211; I love this series. Can&#8217;t wait for next Monday&#8217;s adventure!</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

