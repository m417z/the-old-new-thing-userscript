<html>
<head>
<title>The fun and profit of manipulating the DIB color table can be done without having to modify it</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>The fun and profit of manipulating the DIB color table can be done without having to modify it</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>July 14, 2009 / year-entry #215</td></tr>
<tr><td><b>Tags:</b></td><td>code</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20090714-00/?p=17503</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>11</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">If I were Michael Kaplan, I'd have a more clever title like I'm not touching you! or Look but don't touch or maybe Looking at a DIB through BITMAPINFO-colored glasses. We saw some time ago that you can manipulate the DIB color table to perform wholesale color remapping. But in fact you can do this...</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>
If I were
<a HREF="http://blogs.msdn.com/michkap/">
Michael Kaplan</a>,
I'd have a more clever title like
<i>I'm not touching you!</i>
or <i>Look but don't touch</i>
or maybe <i>Looking at a DIB through <code>BITMAPINFO</code>-colored
glasses</i>.
</p>
<p>
We saw
<a HREF="http://blogs.msdn.com/oldnewthing/archive/2006/11/15/1081320.aspx">
some time ago</a>
that you can manipulate the DIB color table to perform wholesale color
remapping.
But in fact you can do this even without modifying the DIB color table,
which is a handy trick if you want to do color remapping but you
don't want to change the bitmap itself.
For example,
the bitmap is not one that is under your control
(so you shouldn't be modifying it),
or the bitmap might be in use on multiple threads
(so modifying it will result in race conditions).
</p>
<p>
Let's demonstrate this technique by converting the "Gone Fishing" bitmap
to grayscale, but doing so without actually modifying the bitmap.
As always, we start with our
<a HREF="http://blogs.msdn.com/oldnewthing/archive/2003/07/23/54576.aspx">
scratch program</a>
and make the following changes:
</p>
<pre>
<font COLOR=blue>HBITMAP g_hbm;</font>
</font>

BOOL
OnCreate(HWND hwnd, LPCREATESTRUCT lpcs)
{
<font COLOR=blue> // change path as appropriate
 g_hbm = (HBITMAP)LoadImage(g_hinst,
                      TEXT("C:\\Windows\\Gone Fishing.bmp"),
                      IMAGE_BITMAP, 0, 0,
                      LR_CREATEDIBSECTION | LR_LOADFROMFILE);</font>
 return TRUE;
}

void
OnDestroy(HWND hwnd)
{
 <font COLOR=blue>if (g_hbm) DeleteObject(g_hbm);</font>
 PostQuitMessage(0);
}

void
PaintContent(HWND hwnd, PAINTSTRUCT *pps)
{
 <font COLOR=blue>if (g_hbm) {
  BITMAP bm;
  if (GetObject(g_hbm, sizeof(bm), &amp;bm) == sizeof(bm) &amp;&amp;
                bm.bmBits != NULL &amp;&amp;
                bm.<a HREF="http://blogs.msdn.com/oldnewthing/archive/2004/12/01/273018.aspx">bmPlanes</a> * bm.bmBitsPixel &lt;= 8) {
   struct BITMAPINFO256 {
    BITMAPINFOHEADER bmiHeader;
    RGBQUAD bmiColors[256];
   } bmiGray;
   <a HREF="http://blogs.msdn.com/oldnewthing/archive/2005/06/28/433341.aspx">ZeroMemory</a>(&amp;bmiGray, sizeof(bmiGray));
   HDC hdc = CreateCompatibleDC(NULL);
   if (hdc) {
    HBITMAP hbmPrev = SelectBitmap(hdc, g_hbm);
    UINT cColors = GetDIBColorTable(hdc, 0, 256, bmiGray.bmiColors);
    for (UINT iColor = 0; iColor &lt; cColors; iColor++) {
     BYTE b = (BYTE)((<a HREF="http://en.wikipedia.org/wiki/Grayscale#Converting_color_to_grayscale">30</a> * bmiGray.bmiColors[iColor].rgbRed +
                      <a HREF="http://en.wikipedia.org/wiki/Grayscale#Converting_color_to_grayscale">59</a> * bmiGray.bmiColors[iColor].rgbGreen +
                      <a HREF="http://en.wikipedia.org/wiki/Grayscale#Converting_color_to_grayscale">11</a> * bmiGray.bmiColors[iColor].rgbBlue) / 100);
     bmiGray.bmiColors[iColor].rgbRed   = b;
     bmiGray.bmiColors[iColor].rgbGreen = b;
     bmiGray.bmiColors[iColor].rgbBlue  = b;
    }
    bmiGray.bmiHeader.biSize        = sizeof(bmiGray.bmiHeader);
    bmiGray.bmiHeader.biWidth       = bm.bmWidth;
    bmiGray.bmiHeader.biHeight      = bm.bmHeight;
    bmiGray.bmiHeader.biPlanes      = bm.bmPlanes;
    bmiGray.bmiHeader.biBitCount    = bm.bmBitsPixel;
    bmiGray.bmiHeader.biCompression = BI_RGB;
    bmiGray.bmiHeader.biClrUsed     = cColors;
    SetDIBitsToDevice(pps-&gt;hdc, 0, 0,
                      bmiGray.bmiHeader.biWidth,
                      bmiGray.bmiHeader.biHeight, 0, 0,
                      0, bmiGray.bmiHeader.biHeight,
                      bm.bmBits,
                     (BITMAPINFO*)&amp;bmiGray, DIB_RGB_COLORS);

    BitBlt(pps-&gt;hdc, bm.bmWidth, 0, bm.bmWidth, bm.bmHeight,
           hdc, 0, 0, SRCCOPY);
    SelectBitmap(hdc, hbmPrev);
    DeleteDC(hdc);
   }
  }
 }</font>
}
</pre>
<p>
Things start off innocently enough, loading the bitmap into a
DIB section for use during painting.
</p>
<p>
We do our work at paint time.
First, we confirm
that we indeed have a DIB section and that it is 8bpp or lower,
because bitmaps at higher than 8bpp do not use color tables.
</p>
<p>
We then select the bitmap into a DC so we can call
<code>GetDIBColorTable</code> to get its current color table.
(This is the only step that
requires the bitmap to be selected into a device context.)
We then edit the color table to convert each color to
its grayscale equivalent.
</p>
<p>
Finally, we fill in the <code>BITMAPINFO</code> structure
with the description of the bitmap bits,
and then we call <code>SetDIBitsToDevice</code> to send
the pixels to the destination DC.
</p>
<p>
Just for good measure, we also <code>BitBlt</code> the
original unmodified bitmap,
to prove that the original bitmap is intact and unchanged.
</p>
<p>
This mini-program is really just a stepping stone to other
things you can do with this technique of separating the
metadata (the <code>BITMAPINFO</code>) from the pixels.
We'll continue our investigations tomorrow.
</p>
<p>
(Before you all run out and use this technique everywhere you can imagine,
wait for the remarks in Friday's installment.)</p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (11)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-754833">
				<div id="div-comment-754833" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Tom</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090714-00/?p=17503#comment-754833">
			July 14, 2009 at 10:21 am</a>		</div>

		<p>Editoral Note: There seems to be a word or two missing from the following sentence fragment: &#8220;For example, the bitmap is not one that under your control&#8221;. &nbsp;Perhaps it should read &#8220;For example, the bitmap is not one that is under your control.&#8221;</p>
<p>This seems like the start of another series. &nbsp;I&#8217;m excited!</p>
<div class=post>[<i>Despite what others say, typo corrections are welcome. Thanks. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-754843">
				<div id="div-comment-754843" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Mark</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090714-00/?p=17503#comment-754843">
			July 14, 2009 at 11:07 am</a>		</div>

		<p>Tom: do you really think these posts are published here for proofreading? &nbsp;If the code doesn&#8217;t compile, maybe that&#8217;s worth highlighting, but the three typos in the text are somewhat inconsequent.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-754873">
				<div id="div-comment-754873" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">John</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090714-00/?p=17503#comment-754873">
			July 14, 2009 at 12:10 pm</a>		</div>

		<p>Maybe he inserted the typos on purpose just to piss you off:</p>
<p><a rel="nofollow" target="_new" href="http://blogs.msdn.com/oldnewthing/archive/2007/06/11/3215739.aspx#3238631" rel="nofollow">http://blogs.msdn.com/oldnewthing/archive/2007/06/11/3215739.aspx#3238631</a></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-755013">
				<div id="div-comment-755013" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Tom</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090714-00/?p=17503#comment-755013">
			July 14, 2009 at 4:37 pm</a>		</div>

		<p>It would be difficult to get me angry over a post in this blog, for I am not one of those so frequently taunted by the Nit-picker&#8217;s Corner. &nbsp;Raymond has provided excellent information on this blog for more than five years; I am simply seeking to marginally improve the quality of his posts for posterity. &nbsp;Besides, Raymond should be used to this type of constructive criticism &#8212; he had an editor for the book he wrote, did he not?</p>
<p>And I stand by my later comment: I&#8217;m excited by the prospect of another series!</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-755133">
				<div id="div-comment-755133" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Worf</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090714-00/?p=17503#comment-755133">
			July 15, 2009 at 1:57 am</a>		</div>

		<p>Last time I had to do this programatically, I just did an RGB-&gt;YUV conversion and used the Y values. Happened again recently, and I said the simple solution was to use the RGB-&gt;YUV hardware in planar mode&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-755073">
				<div id="div-comment-755073" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">hexatron</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090714-00/?p=17503#comment-755073">
			July 14, 2009 at 7:54 pm</a>		</div>

		<p>I used to do this kind of thing a lot.</p>
<p>I noticed using the NTSC color coefficients (.30 Red, .56 Green, .11 Blue) (nitpick&#8211;these are approximate values) results in the blue parts of an image becoming very dark (that darned .11 coefficient).</p>
<p>I found I got better results with </p>
<p> (2*Red+4*Green+Blue)/7</p>
<p>or</p>
<p> (Red + 2*Green + Blue)/4</p>
<p>If you dig into the NTSC standard of 1953, there really isn&#8217;t much motivation for using .30,.59,.11</p>
<p>It&#8217;s popular because it is a clear answer to &#8216;what coefficients should be used&#8217;, not because it&#8217;s valid in domains far removed from its original application.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-755153">
				<div id="div-comment-755153" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Jonathan</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090714-00/?p=17503#comment-755153">
			July 15, 2009 at 4:49 am</a>		</div>

		<p>I&#8217;ve always wondered why Red gets a higher coefficient than Blue &#8211; always seemed the oppsite to me. Maybe it&#8217;s just my red-green color blindness.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-755413">
				<div id="div-comment-755413" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Anonymous Coward</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090714-00/?p=17503#comment-755413">
			July 15, 2009 at 1:05 pm</a>		</div>

		<p>Jonathan, that is probably the case. I&#8217;ve once run a lot of ‘perceived brightness’ tests where I juxtaposed solid colours and greys and I must say that on my LCD the coefficients are approximately correct. Of course not all people are identical, and so on and so forth, but I think the coefficients given are close enough and I can see the benefit of always getting the same result when you someone for a greyscale version of something. [Note: the coefficients as I read them are .299, .587 and .114 B, but after the second decimal place no one gives a damn.]</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-755513">
				<div id="div-comment-755513" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">alexx</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090714-00/?p=17503#comment-755513">
			July 16, 2009 at 1:54 am</a>		</div>

		<p>Error in the code: </p>
<p>&#8216;PaintContent&#8217; : &#8216;void&#8217; function returning a value.</p>
<div class=post>[<i>Fixed, thanks. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-755533">
				<div id="div-comment-755533" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">JM</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090714-00/?p=17503#comment-755533">
			July 16, 2009 at 5:05 am</a>		</div>

		<p>@hexatron: this is quite a big can of worms. For starters, adding scaled components is by no means the only method of doing grayscale conversion, though it is the most convenient.</p>
<p>The values Raymond uses are the &quot;popular&quot; values, indeed based on NTSC, and thus technically wrong as the sRGB color space isn&#8217;t the NTSC color space. But because most computer screens are woefully miscalibrated (based on what people think are &quot;nice&quot; colors rather than accurate ones) and the result doesn&#8217;t need to appear on paper, getting the values &quot;right&quot; is usually not that important. Using known coefficients is a better idea than just tweaking for whatever looks good on your screen, though, for the simple reason that people can at least see why you picked those values and what they&#8217;re supposed to accomplish, and because your screen is in all likelihood not representative of others.</p>
<p>Color is a bit like floating-point in that most people that have to deal with it are not experts on the subject and would prefer to pretend that everything can be managed with magic formulas and assumptions. Thankfully, color is not as critical as floating-point for most people, so this usually holds.</p>
<p>See also <a rel="nofollow" target="_new" href="http://stackoverflow.com/questions/687261/converting-rgb-to-grayscale-intensity" rel="nofollow">http://stackoverflow.com/questions/687261/converting-rgb-to-grayscale-intensity</a></p>
<p>And of course, none of this touches on Raymond&#8217;s central point, but then again there are far worse things to go off-topic about. :-)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-755523">
				<div id="div-comment-755523" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Mark</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090714-00/?p=17503#comment-755523">
			July 16, 2009 at 2:42 am</a>		</div>

		<p>alexx: &#8220;return TRUE&#8221; quite obviously shouldn&#8217;t be there.</p>
<p>* Waits for somebody to get stuck at &#8220;8bbp&#8221; *</p>
<div class=post>[<i>Fixed, thanks. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

