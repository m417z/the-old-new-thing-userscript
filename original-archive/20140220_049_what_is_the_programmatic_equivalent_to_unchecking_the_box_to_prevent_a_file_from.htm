<html>
<head>
<title>What is the programmatic equivalent to unchecking the box to prevent a file from having its contents indexed?</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>What is the programmatic equivalent to unchecking the box to prevent a file from having its contents indexed?</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>February 20, 2014 / year-entry #50</td></tr>
<tr><td><b>Tags:</b></td><td>code</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20140220-00/?p=1703</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>25</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">A customer wanted to know how they could write a program that automatically checked and unchecked the box that appears on a file's property sheet on the General tab, clicking the Advanced button, and then checking or unchecking the item whose name keeps changing: On Windows 7, it's called Allow this file to have contents indexed...</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>A customer wanted to know how they could write a program that automatically checked and unchecked the box that appears on a file's property sheet on the <i>General</i> tab, clicking the <i>Advanced</i> button, and then checking or unchecking the item whose name keeps changing:</p>
<ul>
<li>On Windows&nbsp;7, it's called     <i>Allow this file to have contents indexed in addition to     file properties</i>. </li>
<li>On Windows Vista, it's called     <i>Index this file for faster searching</i>. </li>
<li>On Windows&nbsp;2000 and Windows&nbsp;XP, it's called     <i>For fast searching,     allow Indexing Service to index this folder</i>. </li>
</ul>
<p> The checkbox maps to the file attribute formally known as <code>FILE_<wbr>ATTRIBUTE_<wbr>NOT_<wbr>CONTENT_<wbr>INDEXED</wbr></wbr></wbr></wbr></code>, and informally known as <code>FANCI</code> (pronounced like the word <i>fancy</i>). Checking the box clears the attribute, and unchecking the box sets the attribute. </p>
<p> The customer liaison replied, "Thanks for your assistance. The customer was able to use the <code>System.<wbr>IO.<wbr>File.Set&shy;Attributes</wbr></wbr></code> method with the values in the <code>System.<wbr>IO.<wbr>File&shy;Attributes</wbr></wbr></code> enumeration to manipulate the indexing attribute. The customer has a follow-up question, however: &lsquo;I need this change to be applied recursively to all files in a entire directory subtree. Is there a single series of Visual Basic commands that will accomplish this, or do I need to write a loop by hand?&rsquo;" </p>
<p> This question kind of ran off topic for the product team and fell more in line with Developer Support. I suggested that the follow-up question be redirected to the Visual Basic support team. </p>
<p> For me, it was interesting that (1)&nbsp;the customer liaison was himself not aware enough to realize that the question had changed audiences, and (2)&nbsp;the customer was so helpless that they couldn't look for the answer themselves. </p>
<p> <b>Bonus chatter</b>: The file system itself pays no attention to the FANCI bit. It's just a signal to any program that does file content indexing that this particular file should be skipped. Whether any particular search index program respects the flag is something you need to take up with the vendor of that search index program. (As far as I'm aware, all Microsoft search indexes should honor the flag.) </p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (25)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-1108203">
				<div id="div-comment-1108203" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">AC</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140220-00/?p=1703#comment-1108203">
			February 20, 2014 at 7:17 am</a>		</div>

		<p>For me, it&#39;s interesting how different the levels of &quot;advancedness&quot; of the questions are.</p>
<p>The first question seems very legitimate. I would have thought someone asking it is way beyond the level needed to figure out the second question.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-bboorman odd alt thread-odd thread-alt depth-1" id="comment-1108213">
				<div id="div-comment-1108213" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Brian_EE' rel='external nofollow' class='url'>Brian_EE</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140220-00/?p=1703#comment-1108213">
			February 20, 2014 at 7:23 am</a>		</div>

		<p>or (3) the customer was just lazy, and thought that since they had received such a helpful answer the first time, they would just ask the next question instead of looking for it themselves.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1108223">
				<div id="div-comment-1108223" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140220-00/?p=1703#comment-1108223">
			February 20, 2014 at 7:28 am</a>		</div>

		<p>I think (4) non programming sysadmin.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-alegrigoriev odd alt thread-odd thread-alt depth-1" id="comment-1108233">
				<div id="div-comment-1108233" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/alegr1' rel='external nofollow' class='url'>alegr1</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140220-00/?p=1703#comment-1108233">
			February 20, 2014 at 7:41 am</a>		</div>

		<p>@Joshua:</p>
<p>non programming sysadmin would do:</p>
<p>attrib -i /s</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1108243">
				<div id="div-comment-1108243" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140220-00/?p=1703#comment-1108243">
			February 20, 2014 at 8:19 am</a>		</div>

		<p>Man that makes the second question so easy.</p>
<p>Shell &quot;attrib -i /s &quot; + path</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1108253">
				<div id="div-comment-1108253" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">John</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140220-00/?p=1703#comment-1108253">
			February 20, 2014 at 8:47 am</a>		</div>

		<p>These types of questions come up on StackOverflow all the time, if he&#39;s using .NET 4 or above the Directory.EnumerateFiles(string,string,SearchOption.AllDirectories) is his friend.</p>
<p>I&#39;ve found myself using this pattern on more than one occasion in this manner:</p>
<p> // Grab the files and perform the action in parallel.</p>
<p>var targetFiles = Directory.EnumerateFiles(targetPath, &quot;*.cs&quot;, SearchOption.AllDirectories);</p>
<p>Parallel.ForEach(</p>
<p> &nbsp; &nbsp;targetFiles,</p>
<p> &nbsp; &nbsp;targetFile =&gt;</p>
<p> &nbsp; &nbsp;{</p>
<p> &nbsp; &nbsp; &nbsp; &nbsp;// Perform some Action</p>
<p> &nbsp; &nbsp;});</p>
<p>Obviously you can get a bunch more complex but take what you will from there. If I ever meet the team that did the Parallel Task Library I&#39;ll have to buy them a case of beer (or soda).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1108263">
				<div id="div-comment-1108263" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">tocsa</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140220-00/?p=1703#comment-1108263">
			February 20, 2014 at 9:08 am</a>		</div>

		<p>&quot;The file system itself pays no attention to the FANCI bit. It&#39;s just a signal to any program that does file content indexing that this particular file should be skipped.&quot;</p>
<p>Does Windows has indexing service tho which would consume less resources? I uncheck that after every clean install recursively for the whole drive.</p>
<p>Bonus off-topic question: Is there any trick for speed up NTFS file systems like &quot;noatime&quot; mount option on Linux?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1108273">
				<div id="div-comment-1108273" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Mark</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140220-00/?p=1703#comment-1108273">
			February 20, 2014 at 9:16 am</a>		</div>

		<p>tocsa: noatime was enabled in Vista by default</p>
<p>Also, you can just disable the Windows Indexing service or remove paths from it, instead of unticking the &quot;include in index&quot; checkbox.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1108283">
				<div id="div-comment-1108283" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Rick C</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140220-00/?p=1703#comment-1108283">
			February 20, 2014 at 9:23 am</a>		</div>

		<p>@tocsa, see <a rel="nofollow" target="_new" href="http://blogs.msdn.com/b/oldnewthing/archive/2011/10/10/10222560.aspx:">blogs.msdn.com/&#8230;/10222560.aspx:</a> &nbsp;&quot;Starting in Windows Vista, maintaining the last-access time is disabled by default.&quot;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1108293">
				<div id="div-comment-1108293" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Chris Crowther</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140220-00/?p=1703#comment-1108293">
			February 20, 2014 at 11:09 am</a>		</div>

		<p>I would guess the customer wasn&#39;t actually a developer. &nbsp;Depending on the size of company the customer works for it&#39;s possible they&#39;re just a general purpose IT bod who got tasked to do something for some esoteric reason.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-xpclientgmail-com even thread-even depth-1" id="comment-1108303">
				<div id="div-comment-1108303" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/xpclient' rel='external nofollow' class='url'>xpclient</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140220-00/?p=1703#comment-1108303">
			February 20, 2014 at 11:21 am</a>		</div>

		<p>Well thankfully Windows Search indexer respects it. Like countless other broken things which are By Design, I wouldn&#39;t be surprised if the legacy Indexing Service had been the last to respect it. One of those excuses for &#39;mating call of the loser&#39;.</p>
<div class="post">[<em>&quot;Thankfully it works, like everything else that&#39;s broken.&quot; I can&#39;t make any sense of this, but please don&#39;t try to explain. -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1108313">
				<div id="div-comment-1108313" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">bmm6o</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140220-00/?p=1703#comment-1108313">
			February 20, 2014 at 11:47 am</a>		</div>

		<p>What I want to know is how these customers get their (frequently) dumb questions to Raymond in the first place. &nbsp;It costs me $80 to even open a support case with Microsoft, and this guy is asking if he needs to write a loop? &nbsp;Or the question from 3 weeks ago ( <a rel="nofollow" target="_new" href="http://blogs.msdn.com/b/oldnewthing/archive/2014/01/30/10495426.aspx">blogs.msdn.com/&#8230;/10495426.aspx</a> ) where the guy asks about large pids &#8211; I assume he didn&#39;t have to pay to ask that question. &nbsp;What other kinds of support arrangements exist that make these questions reasonable (from the perspective of the asker)?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1108323">
				<div id="div-comment-1108323" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Jason T. Miller</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140220-00/?p=1703#comment-1108323">
			February 20, 2014 at 12:07 pm</a>		</div>

		<p>@bmm6o: programs like MSDN bundle a set number of no-charge, &quot;use &#39;em or lose &#39;em&quot; support incidents per year. Also, at most companies, developersÂ and sysadmins don&#39;t pay their own support bills.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1108343">
				<div id="div-comment-1108343" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Matt</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140220-00/?p=1703#comment-1108343">
			February 20, 2014 at 4:07 pm</a>		</div>

		<p>@John:</p>
<p>Why are you doing I/O bounded tasks in a Parallel.ForEach?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1108333">
				<div id="div-comment-1108333" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Mr Cranky</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140220-00/?p=1703#comment-1108333">
			February 20, 2014 at 1:56 pm</a>		</div>

		<p>Holy double negative, Batman! &nbsp;</p>
<p>Really? &nbsp;You *check* a box to *clear* an attribute; an attribute that has the word *NOT&quot; in it. &nbsp;</p>
<p>Are there normal humans who can parse through that? &nbsp;I&#39;d just have to wing it, and see what happens.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-cheong odd alt thread-odd thread-alt depth-1" id="comment-1108393">
				<div id="div-comment-1108393" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/cheong00' rel='external nofollow' class='url'>cheong00</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140220-00/?p=1703#comment-1108393">
			February 20, 2014 at 10:25 pm</a>		</div>

		<p>For (1): The (non-senior) CS staffs&#39; problem solving skills are usually limited to the predefined scripts given.</p>
<p>For (2): &quot;Afterall the company has paid for the support, why not make the maximum use of it?&quot;</p>
<p>So hardly a surprise at all. :P</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1108403">
				<div id="div-comment-1108403" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Azarien</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140220-00/?p=1703#comment-1108403">
			February 21, 2014 at 1:45 am</a>		</div>

		<p>@Mr Cranky: what&#39;s so hard? The checkbox says &quot;Allow this file to have contents indexed&quot;, and the attribute is FILE_ATTRIBUTE_NOT_CONTENT_INDEXED.</p>
<p>So:</p>
<p> &nbsp; &nbsp;checkbox checked =&gt; attribute cleared.</p>
<p> &nbsp; &nbsp;checkbox unchecked =&gt; attibute set.</p>
<p>there&#39;s no double negative, it&#39;s single negative.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1108423">
				<div id="div-comment-1108423" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Sven2</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140220-00/?p=1703#comment-1108423">
			February 21, 2014 at 3:04 am</a>		</div>

		<p>I don&#39;t think the second question was inappropriate at all. The customer didn&#39;t need help in &quot;writing the loop&quot;, but just wanted to know if a loop is necessery.</p>
<p>It could be that there&#39;s a command like SetAttributesRecursively or that SetAttributes can be used to apply attribute changes recursively by calling it in a special syntax. A possible advantage over writing the loop manually would be that such a command could be issued atomically (so you don&#39;t end up with half of the files indexed if your program is killed during the loop).</p>
<div class="post">[<em>The point is that they directed the follow-up question to the wrong team. The original question was a file system question; the follow-up was a VB question. -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-alexcohn even thread-even depth-1" id="comment-1108473">
				<div id="div-comment-1108473" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Alex+Cohn' rel='external nofollow' class='url'>Alex Cohn</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140220-00/?p=1703#comment-1108473">
			February 21, 2014 at 6:24 am</a>		</div>

		<p>The followup question could be legitimate: &quot;can I set the flag once to exclude the bazillion files that will be created in my directory&quot;? The answer does not require MS tech support, only one search, and it is: [no](<a rel="nofollow" target="_new" href="http://books.google.co.il/books?id=Mc-Biz1DSmcC&amp;pg=PT1554&amp;lpg=PT1554&amp;dq=FILE_ATTRIBUTE_NOT_CONTENT_INDEXED+recursive&amp;source=bl&amp;ots=K2Sd7o_Fxy&amp;sig=T3ukYHleZ5ukY3ODUIwK1CWuumE&amp;hl=en&amp;sa=X&amp;ei=SBEHU-jGH4Kk0QWF5YCADw&amp;ved=0CDQQ6AEwBQ">books.google.co.il/books</a>).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1108493">
				<div id="div-comment-1108493" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">John</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140220-00/?p=1703#comment-1108493">
			February 21, 2014 at 7:21 am</a>		</div>

		<p>@Matt:</p>
<p>Because you maximize your throughput ensuring that the limiting factor really is I/O.</p>
<p>Is there a reason why you wouldn&#39;t throw this in a Parallel Loop? It also offers an extensibility point for doing far more complex tasks such as parsing the input and acting upon its results; but I&#39;m always open to a different view point.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1108523">
				<div id="div-comment-1108523" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Bob</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140220-00/?p=1703#comment-1108523">
			February 21, 2014 at 7:49 am</a>		</div>

		<p>@John</p>
<p>&gt;Is there a reason why you wouldn&#39;t throw this in a Parallel Loop?</p>
<p>Because you run the risk of (drastically) reducing performance by causing the disk head to thrash around. &nbsp;May or may not be an issue in this case, but something to keep in mind whenever dealing with hardware that&#39;s not constant time random access.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1108573">
				<div id="div-comment-1108573" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">John</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140220-00/?p=1703#comment-1108573">
			February 21, 2014 at 8:32 am</a>		</div>

		<p>@Bob/Matt:</p>
<p>I was interested in your comments I wrote the following test program to validate my assumptions (please forgive the formatting):</p>
<p>&nbsp; &nbsp; &nbsp; &nbsp;static void Main(string[] args)</p>
<p>&nbsp; &nbsp; &nbsp; &nbsp;{</p>
<p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;string targetPath = @&quot;R:TestMultiThreaded&quot;;</p>
<p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;Environment.SetEnvironmentVariable(&quot;TMP&quot;, targetPath);</p>
<p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;//for (int i = 0; i &lt; 65535; i++)</p>
<p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;//{</p>
<p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;// &nbsp; &nbsp;string tempFilePath = Path.GetTempFileName();</p>
<p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;//}</p>
<p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;var targetFiles = Directory.EnumerateFiles(targetPath);</p>
<p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;int numberOfSamples = 5;</p>
<p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;for (int i = 0; i &lt; numberOfSamples; i++)</p>
<p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;{</p>
<p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;Stopwatch walltime = Stopwatch.StartNew();</p>
<p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;foreach (string targetFile in targetFiles)</p>
<p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;{</p>
<p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;FileInfo fi = new FileInfo(targetFile);</p>
<p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;fi.Attributes = fi.Attributes | FileAttributes.NotContentIndexed;</p>
<p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;}</p>
<p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;walltime.Stop();</p>
<p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;Console.WriteLine(&quot;Sequential Operation: {0}&quot;, walltime.Elapsed.ToString());</p>
<p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;}</p>
<p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;for (int i = 0; i &lt; numberOfSamples; i++)</p>
<p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;{</p>
<p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;Stopwatch walltime = Stopwatch.StartNew();</p>
<p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;Parallel.ForEach(</p>
<p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;targetFiles,</p>
<p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;targetFile =&gt;</p>
<p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;{</p>
<p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;FileInfo fi = new FileInfo(targetFile);</p>
<p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;fi.Attributes = fi.Attributes | FileAttributes.NotContentIndexed;</p>
<p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;});</p>
<p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;walltime.Stop();</p>
<p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;Console.WriteLine(&quot;Parallel Operation: {0}&quot;, walltime.Elapsed.ToString());</p>
<p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;}</p>
<p>&nbsp; &nbsp; &nbsp; &nbsp;}</p>
<p>Returned the following results:</p>
<p>Sequential Operation: 00:00:06.1964492</p>
<p>Sequential Operation: 00:00:06.1566922</p>
<p>Sequential Operation: 00:00:06.1519958</p>
<p>Sequential Operation: 00:00:06.1584689</p>
<p>Sequential Operation: 00:00:06.1496031</p>
<p>Parallel Operation: 00:00:01.9879020</p>
<p>Parallel Operation: 00:00:01.9605536</p>
<p>Parallel Operation: 00:00:01.9339526</p>
<p>Parallel Operation: 00:00:01.9310271</p>
<p>Parallel Operation: 00:00:01.9494726</p>
<p>This was tested on HP Compaq 8200 Elite that is equipped with a Core i7 2600 @ 3.40GHz with 20480 MBytes of RAM. The Target Drive is a 4GB RAM Disk created using IMDisk (The RAM is some cheap Mushkin PC3-10700). This is a standard development PC here (although now most come with 24GB and a 240GB SSD and a much more current i7).</p>
<p>The first part of the program creates 65535 zero byte Temporary files on the drive, these files are then modified to have their attributes have the NotContentIndex flag applied to them sequentially via a ForEach Loop, executed 5 times and then again in Parallel 5 times. The amount of time required to process this operation is cut to a third of the time with little readability changes.</p>
<p>I understand the argument of disk thrashing but isn&#39;t SuperFetch supposed to solve most of these issues in the brave new world of Vista+? Of course being on a RAM drive this was taken out of this equation.</p>
<div class="post">[<em>Congratulations, you demonstrated that if there is no I/O latency, then I/O latency is not a bottleneck. -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1108613">
				<div id="div-comment-1108613" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">John</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140220-00/?p=1703#comment-1108613">
			February 21, 2014 at 9:40 am</a>		</div>

		<p>Is there a better way to test this? I pointed the program at my Mechanical Drive (Hitachi HDS721010CLA332) and came up with the following results:</p>
<p>Sequential Operation: 00:00:06.9819641</p>
<p>Sequential Operation: 00:00:07.8233557</p>
<p>Sequential Operation: 00:00:07.0141172</p>
<p>Sequential Operation: 00:00:07.9264859</p>
<p>Sequential Operation: 00:00:07.2037502</p>
<p>Parallel Operation: 00:00:05.5713380</p>
<p>Parallel Operation: 00:00:02.5200298</p>
<p>Parallel Operation: 00:00:04.1874065</p>
<p>Parallel Operation: 00:00:05.0852479</p>
<p>Parallel Operation: 00:00:02.4919081</p>
<p>Obviously slower once you&#39;re not on a RAM Drive. The sequential operation providing a more consistent time as compared to the Parallel Operation (while faster in all cases had a greater variance).</p>
<p>Again obviously this test is not without flaw, what is a more accurate way to test? How do you test the possibility of disk thrashing? How do you go to upper management and convince them that one way is more optimal than the other?</p>
<div class="post">[<em>Eventually all the data needed is in cache so you aren&#39;t actually hitting the disk any more. You need to test on, say, a removable drive, and unplug it between runs. -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1108653">
				<div id="div-comment-1108653" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joker_vD</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140220-00/?p=1703#comment-1108653">
			February 21, 2014 at 10:19 am</a>		</div>

		<p>A &quot;fool your filesystem driver optimization&quot; contest is going on?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1108663">
				<div id="div-comment-1108663" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">John</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140220-00/?p=1703#comment-1108663">
			February 21, 2014 at 10:31 am</a>		</div>

		<p>@Raymond</p>
<p>Thanks! I appreciate your blog and I strive to learn something everyday.</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

