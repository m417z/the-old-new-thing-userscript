<html>
<head>
<title>Those who do not understand the dialog manager are doomed to reimplement it, badly</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>Those who do not understand the dialog manager are doomed to reimplement it, badly</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>June 27, 2007 / year-entry #232</td></tr>
<tr><td><b>Tags:</b></td><td>code</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20070627-00/?p=26243</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>23</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">A customer wanted to alter the behavior of a multi-line edit control so that it did not treat a press of the Tab key as a request to insert a tab character but rather treated it as a normal dialog navigation key. The approach the customer took was to subclass the edit control and intercept...</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>
A customer wanted to alter the behavior of a multi-line edit control
so that it did not treat a press of the Tab key as a request to insert
a tab character but rather treated it as a normal dialog navigation key.
The approach the customer took was to subclass the edit control
and intercept the Tab key:
</p>
<pre>
LRESULT CALLBACK SubclassWndProc(
    HWND hwnd, UINT uMsg, WPARAM wParam, LPARAM lParam)
{
  switch (uMsg) {
  case WM_KEYDOWN:
    if (wParam == VK_TAB) {
      // Pressed the TAB key - tab to next control
      SetFocus(GetNextDlgTabItem(
                     GetParent(hwnd), hwnd, FALSE));
      return 0; // message handled
    }
  }
  return CallWindowProc(...);
}
</pre>
<p>
There are many things wrong with this approach.
You can spend quite a lot of time nitpicking the little
details,
how this code
<a HREF="http://blogs.msdn.com/oldnewthing/archive/2004/08/02/205624.aspx">
fails to set focus in a dialog box properly</a>,
how it fails to take nested dialogs into account,
how it fails to handle the Shift+Tab navigation key,
how it blatantly assumes that the control is part of a dialog
box in the first place!
But all of these little details are missing the big picture:
Instead of fighting against the dialog manager and
reimplementing all the parts we want to keep and ignoring the
parts we want to skip, we should be working <i>with</i> the
dialog manager and expressing our intentions in the manner
the dialog manager expects.
</p>
<p>
It's the difference between ordering a hamburger without pickles
and ordering a hamburger with pickles, and then carefully picking
the pickles off the burger when you get it.
</p>
<p>
In this case, we want to prevent the edit control from saying
"Give me the Tab key."
<!-- backref: dlgc -->
We saw last time</a> that this is done either by
(1)&nbsp;setting the <code>DLGC_WANTTAB</code> dialog code
or by (2)&nbsp;responding
with <code>DLGC_WANTMESSAGE</code> when given a Tab key message.
Therefore, to tell the dialog manager to not to treat the tab key
specially, just turn off those two behaviors.
</p>
<pre>
LRESULT CALLBACK SubclassWndProc(
    HWND hwnd, UINT uMsg, WPARAM wParam, LPARAM lParam)
{
  LRESULT lres;
  switch (uMsg) {
  case WM_GETDLGCODE:
    lres = CallWindowProc(...);
    lres &amp;= ~DLGC_WANTTAB;
    if (lParam &amp;&amp;
        ((MSG *)lParam)-&gt;message == WM_KEYDOWN &amp;&amp;
        ((MSG *)lParam)-&gt;wParam == VK_TAB) {
      lres &amp;= ~DLGC_WANTMESSAGE;
    }
    return lres;
  }
  return CallWindowProc(...);
}
</pre>
<p>
After asking the original control what behavior it thinks it wants,
we turn off the <code>DLGC_WANTTAB</code> flag; this takes care of
part&nbsp;(1).
Next, we check whether the message is a press of the Tab key.
If so, then we turn the <code>DLGC_WANTMESSAGE</code> flag off;
this takes care of part&nbsp;(2).
</p>
<p>
This is certainly less code than would need to have been written
to address all of the little concerns noted earlier,
and it does it by completely sidestepping the task of trying
to emulate the dialog manager and instead just cooperating with
the dialog manager to get the behavior you want.
This principle of "If you know how a system is meant to work,
you can work with it rather than against it, and everybody will be
happier for it"
is something I've been trying to convey through this web site
and
<a HREF="http://blogs.msdn.com/oldnewthing/archive/2006/12/07/1233002.aspx">
my book</a>.
Knowing how something was intended to be used allows you to be
a more effective programmer.
</p>
<p>
<b>Exercise</b>:
Why didn't we just write this instead?
</p>
<pre>
LRESULT CALLBACK SubclassWndProc(
    HWND hwnd, UINT uMsg, WPARAM wParam, LPARAM lParam)
{
  LRESULT lres;
  switch (uMsg) {
  case WM_GETDLGCODE:
    lres = CallWindowProc(...);
    lres &amp;= ~DLGC_WANTTAB;
    if (<font COLOR=blue>wParam == VK_TAB</font>) {
      lres &amp;= ~DLGC_WANTMESSAGE;
    }
    return lres;
  }
  return CallWindowProc(...);
}
</pre>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (23)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-519763">
				<div id="div-comment-519763" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">BA</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070627-00/?p=26243#comment-519763">
			June 27, 2007 at 10:34 am</a>		</div>

		<p>I&#8217;m going to shoot and say &#8216;WM_KEYUP&#8217; will also trip the exercise code and you will get two tab effects for every press of the key</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-519803">
				<div id="div-comment-519803" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Pascal</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070627-00/?p=26243#comment-519803">
			June 27, 2007 at 11:13 am</a>		</div>

		<p>Concerning your exercice, I&#8217;d say that wParam meaning is tied to the message field value, therefore it would work only if VK_TAB is an unique value for the wParam field.</p>
<p>Maybe there is another message which defines a &nbsp;constant whose value equals to VK_TAB.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-519813">
				<div id="div-comment-519813" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">KMukhar</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070627-00/?p=26243#comment-519813">
			June 27, 2007 at 11:14 am</a>		</div>

		<p>To quote Wrath of Khan: &quot;You&#8217;ve got to learn WHY things work on a Starship.&quot;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-519823">
				<div id="div-comment-519823" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">HitScan</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070627-00/?p=26243#comment-519823">
			June 27, 2007 at 11:36 am</a>		</div>

		<p>wParam isn&#8217;t used for WM_GETDLGCODE. I&#8217;m guessing that some people try the &quot;right&quot; way first (subclassing for WM_GETDLGCODE, checking wParam for the key) and then give up when it doesn&#8217;t work (&quot;Stupid Windows&#8230;&quot;) and they never get around to looking up what they&#8217;re actually supposed to do. (check the wParam through the lParam MSG pointer)</p>
<p>Depressing, but entirely possible.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-mike-dimmick even thread-even depth-1" id="comment-519833">
				<div id="div-comment-519833" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Mike+Dimmick' rel='external nofollow' class='url'>Mike Dimmick</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070627-00/?p=26243#comment-519833">
			June 27, 2007 at 11:37 am</a>		</div>

		<p>Re the Exercise: Perhaps it&#8217;s because wParam is not defined for a WM_GETDLGCODE message. We need to know what the original message&#8217;s wParam was. If the original message is anything other than a WM_KEYDOWN, wParam could have a different meaning entirely. And you have to test that it&#8217;s really a message, because the dialog manager sends WM_GETDLGCODE when it&#8217;s about to set focus to a control, to see whether the control sets DLGC_HASSETSEL and therefore the dialog manager should send an EM_SETSEL message, or the control sets DLGC_UNDEFPUSHBUTTON and it should make the button the default button.</p>
<p>Alternatively the application may be moving the focus itself by sending WM_NEXTDLGCTL, where wParam is the ID of the control you&#8217;re moving to (I&#8217;m not sure if the dialog manager passes this message along to the control). You should use this rather than SetFocus to ensure that the control gets sent EM_SETSEL (if an edit control, or otherwise returning DLGC_HASSETSEL) or, if a button (or DLGC_UNDEFPUSHBUTTON), that it becomes the default button &#8211; in other words, exactly the same as if the user had tabbed to the control.</p>
<p>In the example, you don&#8217;t need to check for WM_CHAR or WM_KEYUP because if it works, the focus has moved to the next control. Having said that, if for some reason there are no other active controls on the dialog, no focus change will occur. You should check that this is correct (personally I would handle Tab being pressed in WM_CHAR rather than WM_KEYDOWN).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-519933">
				<div id="div-comment-519933" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">El Guapo</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070627-00/?p=26243#comment-519933">
			June 27, 2007 at 2:11 pm</a>		</div>

		<p>Because you need the wparam of the WM_KEYDOWN message, not the WM_GETDLGCODE message.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-519943">
				<div id="div-comment-519943" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">kichik</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070627-00/?p=26243#comment-519943">
			June 27, 2007 at 2:39 pm</a>		</div>

		<p>I have something similar in my program only with a RichEdit control and the escape and enter keys. Your post made me wonder why it was there in the first place so I dug in a little. It turns out the RichEdit control eats every key including VK_ENTER and VK_ESCAPE even though ES_WANTRETURN isn&#8217;t used. To make up for it, it sends WM_CLOSE in response to the escape key, WM_NEXTDLGCTL in response to the tab key and WM_KEYDOWN in response to the the enter key.</p>
<p>But where does it send it to? Its parent dialog. In my case, that dialog is an internal (DS_CONTROL) dialog so WM_CLOSE and WM_KEYDOWN are sent to the wrong place.</p>
<p>I&#8217;d call that a good example to what can go wrong when you implement the dialog manager on your own.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-519973">
				<div id="div-comment-519973" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.ibbotson.co.uk/peteri' rel='external nofollow' class='url'>Peter Ibbotson</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070627-00/?p=26243#comment-519973">
			June 27, 2007 at 4:56 pm</a>		</div>

		<p>One problem with VB4/5/6 and writing ActiveX controls for it (in VC++) was the thunder forms completely ignored the dialog box flags for keystrokes. (IIRC the controls worked fine in MFC dialog boxes and IE)</p>
<p>Which meant that you had to use PreTranslateMessage to grab the arrow keys if you wanted them (or at least that was the advice I got from one of the mailing lists at the time). I suspect there may be an &#8216;nice&#8217; ActiveX container method of grabbing the arrow keys but I couldn&#8217;t find it at the time&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-mike-dimmick even thread-even depth-1" id="comment-519983">
				<div id="div-comment-519983" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Mike+Dimmick' rel='external nofollow' class='url'>Mike Dimmick</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070627-00/?p=26243#comment-519983">
			June 27, 2007 at 5:01 pm</a>		</div>

		<p>@Erzengel: if you have the code, not the spec, you end up coding to the implied spec that you have intuited from the code, not the actual spec. This causes compatibility problems when the next version of the OS implements the real spec differently.</p>
<p>READ THE DOCUMENTATION.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-519993">
				<div id="div-comment-519993" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Dean Earley</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070627-00/?p=26243#comment-519993">
			June 27, 2007 at 5:05 pm</a>		</div>

		<p>Peter: You also can&#8217;t seem to hook CreateWindow()d windows in with the VB forms tab order and focus handling code.</p>
<p>I expect there is a way but I couldn&#8217;t find it last I looked and its certainly not documented.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-520033">
				<div id="div-comment-520033" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">hexatron</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070627-00/?p=26243#comment-520033">
			June 27, 2007 at 6:41 pm</a>		</div>

		<p>Without source code for reference, Windows programming is an endless &nbsp;stream of folklore. This blog is an entertaining and bountiful part of the stream, but it is still just folklore.</p>
<p>How bad can it get? In 1990, I wrote the following:</p>
<p>case WM_MOVE: MoveWindow(hWnd, &#8230;</p>
<p>It seemed to be what the documentation called for.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-520043">
				<div id="div-comment-520043" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">James</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070627-00/?p=26243#comment-520043">
			June 27, 2007 at 6:54 pm</a>		</div>

		<p>FYI, WM_GETDLGCODE documentation is at <a rel="nofollow" target="_new" href="http://msdn2.microsoft.com/en-us/library/aa453861.aspx" rel="nofollow">http://msdn2.microsoft.com/en-us/library/aa453861.aspx</a> . You&#8217;ll never guess how I found it&#8211;I searched for &quot;WM_GETDLGCODE&quot; on Google/Live Search.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-519923">
				<div id="div-comment-519923" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Erzengel</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070627-00/?p=26243#comment-519923">
			June 27, 2007 at 2:09 pm</a>		</div>

		<p>&quot;This principle of &quot;If you know how a system is meant to work, you can work with it rather than against it, and everybody will be happier for it&quot; is something I&#8217;ve been trying to convey through this web site&quot;</p>
<p>The problem is that we don&#8217;t really get all that much information as to how windows is supposed to work (You&#8217;re rectifying that, thank you). That&#8217;s why so many open-sourcers demand windows source code. Not so much so they can copy it, but know how to program *for* it better. You have no idea how many times I&#8217;ve looked in documentation, found nothing of help, and finally spelunked into the source code of a library and go &quot;Ooooh, *that&#8217;s* why!&quot;</p>
<p>(of course, I understand why Microsoft doesn&#8217;t release the source code. The code I write is about as far away from open source as possible, even further than Microsoft&#8230; But we don&#8217;t have &quot;clients&quot; that need to access our code.)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-520073">
				<div id="div-comment-520073" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Puckdropper</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070627-00/?p=26243#comment-520073">
			June 28, 2007 at 12:09 am</a>		</div>

		<p>I&#8217;ve come across many types of documentation&#8230; I&#8217;m tempted to rewrite some of it after I figure out how it&#8217;s actually supposed to work. &nbsp;Just about the best documentation I&#8217;ve seen is for PHP, but even then it&#8217;s not perfect. &nbsp;(There&#8217;s questions and sometimes unhighlighed &quot;Oops!&quot; cases in the comments.)</p>
<p>I do agree that understanding &quot;Why&quot; something is supposed to work is just as important as knowing that it works. &nbsp;That&#8217;s why you go over so much theory in college.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-520063">
				<div id="div-comment-520063" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://lambert.geek.nz/' rel='external nofollow' class='url'>Miral</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070627-00/?p=26243#comment-520063">
			June 27, 2007 at 9:45 pm</a>		</div>

		<p>&lt;&lt;The problem is that we don&#8217;t really get all that much information as to how windows is supposed to work (You&#8217;re rectifying that, thank you). That&#8217;s why so many open-sourcers demand windows source code. Not so much so they can copy it, but know how to program *for* it better. You have no idea how many times I&#8217;ve looked in documentation, found nothing of help, and finally spelunked into the source code of a library and go &quot;Ooooh, *that&#8217;s* why!&quot;&gt;&gt;</p>
<p>Definitely. &nbsp;When doing managed programming, I frequently fire up Reflector and go looking at the implementations of framework classes to figure out why weird things are happening. &nbsp;(And occasionally to curse at the designers for making something I want to extend private or internal, but that&#8217;s a different story.)</p>
<p>And I&#8217;m not trying to pick on MS, here. &nbsp;MS&#8217;s documentation, while sometimes inadequate, is still a *lot* better than most third-party documentation. &nbsp;Nobody has ever written perfect documentation (nor I suspect ever will) &#8212; at least not that I&#8217;ve seen.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-520203">
				<div id="div-comment-520203" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Cyril Margorin</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070627-00/?p=26243#comment-520203">
			June 28, 2007 at 11:44 am</a>		</div>

		<p>Could you also explain how to handle the Enter key in Edit control of Dialog?</p>
<p>I want my Edit control to send message like WM_COMMAND(idCtrl) on Enter key. But Enter key makes dialog to execute default button command.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-520273">
				<div id="div-comment-520273" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Affine</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070627-00/?p=26243#comment-520273">
			June 28, 2007 at 1:04 pm</a>		</div>

		<p>While it&#8217;s a nice, pat answer to say things like, &#8220;FYI, WM_GETDLGCODE documentation is at <a href="http://msdn2.microsoft.com/en-us/library/aa453861.aspx" target=_new rel=nofollow rel="nofollow">http://msdn2.microsoft.com/en-us/library/aa453861.aspx</a> . You&#8217;ll never guess how I found it&#8211;I searched for &#8220;WM_GETDLGCODE&#8221; on Google/Live Search,&#8221; it fails to take into account the fact that there is no easy way to even know WHAT to look for in in the first place. &nbsp; </p>
<p>Given the thousands of Windows messages, trying to find the magic message that does what you need is often an incredibly difficult first step to overcome.</p>
<p>As someone mentioned earlier, Windows programming is a stream of folklore. &nbsp;It has always felt to me that Windows messages have been added to the OS over time within MS by people who needed to get a job accomplished for a project at MS. &nbsp;Orthogonal is NOT the word I would use to describe the messages in Windows.</p>
<div class=post>[<i>Gosh, I want to customize the dialog box keyboard interface. Maybe I should read &#8220;<a href="http://msdn2.microsoft.com/en-us/library/ms644995.aspx" rel="nofollow">Dialog box keyboard interface</a>,&#8221; linked to from &#8220;<a href="http://msdn2.microsoft.com/en-us/library/ms632588.aspx" rel="nofollow">Dialog Box Overview</a>,&#8221; linked to from the &#8220;See Also&#8221; section of the documentation for every dialog box-related function. Nah, that&#8217;s be crazy. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-520323">
				<div id="div-comment-520323" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">ulric</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070627-00/?p=26243#comment-520323">
			June 28, 2007 at 3:16 pm</a>		</div>

		<p>That MSDN page linked by Affine is really poor. &nbsp;But again it&#8217;s the damn page for Windows CE and not the one for Win32, which has a link back to the Dialog Box Overview. &nbsp;This is what people do here at work too, they do a google search instead of looking at the online help in VC++!</p>
<p>This has nothing to do with Raymond, of course, but I wish they would 1) get rid of the damn Window CE help files, which is a confusing duplicate of the Win32 help with missing information (People who work on CE should have &nbsp;to download and install it!) 2) Make VC++&#8217;s help file FAST so that it&#8217;s not faster to go on the web! &nbsp;The help was great in VC++ 6.0 IMHO, if you did not install MSDN, and while the bad formatting is slooowly getting fixed, the speed and size is still not what it should be. &nbsp;I still run VC++ 6.0 next to VC++ 2005 just to access Find-In-File and online help.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-520423">
				<div id="div-comment-520423" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.levicki.net/' rel='external nofollow' class='url'>Igor</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070627-00/?p=26243#comment-520423">
			June 28, 2007 at 9:11 pm</a>		</div>

		<p>Then people give up on Win32 and use MFC. What is worse they use even that incorrectly. Even if they don&#8217;t, next version of MFC usually breaks everything that worked before.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-520443">
				<div id="div-comment-520443" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">hexatron</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070627-00/?p=26243#comment-520443">
			June 28, 2007 at 9:54 pm</a>		</div>

		<p>&quot;[Gosh, I want to customize the dialog box keyboard interface. Maybe I should read &quot;Dialog box keyboard interface,&quot; linked to from &quot;Dialog Box Overview,&quot; linked to from the &quot;See Also&quot; section of the documentation for every dialog box-related function. Nah, that&#8217;s be crazy. -Raymond]&quot;</p>
<p>Suppose I want to customize a mouse message. The above extremely reasonable approach is &#8230; less helpful. You just gotta know (IT&#8217;S FOLKLORE).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-520513">
				<div id="div-comment-520513" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://thehungersite.com' rel='external nofollow' class='url'>AndyB</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070627-00/?p=26243#comment-520513">
			June 29, 2007 at 4:53 am</a>		</div>

		<p>&quot;Make VC++&#8217;s help file FAST so that it&#8217;s not faster to go on the web!&quot;</p>
<p>I think the reason the new help is so slow is that it is silently going on the web itself before showing you the pages you wanted :-)</p>
<p>But yes &#8211; simple old help was much better, as was the old find dialog. Oh well, newer is better remember.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-520893">
				<div id="div-comment-520893" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Neli</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070627-00/?p=26243#comment-520893">
			July 1, 2007 at 4:50 pm</a>		</div>

		<p>Exercise: it&#8217;s not even documented what lParam does (in MSDN), so how could we even know ?</p>
<div class="post">[<i>Odd. <a href="http://msdn2.microsoft.com/en-us/library/ms645425.aspx" rel="nofollow">My version of MSDN</a> documents both wParam and lParam. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-521273">
				<div id="div-comment-521273" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Neil</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070627-00/?p=26243#comment-521273">
			July 3, 2007 at 6:08 am</a>		</div>

		<p>[Odd. My version of MSDN documents both wParam and lParam. -Raymond]</p>
<p>VC++ 6.0&#8217;s help isn&#8217;t fast enough for me; by default I use the last .hlp format file that Microsoft produced, but unfortunately that doesn&#8217;t document wParam or lParam either.</p>
<p>But then, even after reading MSDN I don&#8217;t understand the exercise.</p>
<p>(Feel free to excise some or all of this rant; I&#8217;ve been on holiday so I can&#8217;t comment on some of the earlier posts. I was wondering why Raymond used memmove instead of memcpy. I also prefer the XP start menu because it uses the correct disconnect icon (2003 Server gives you Shut Down instead). And to the guy who can&#8217;t wait 50ms for flyout menus, just click on the damn thing, ok? I actually prefer clicking on menus, but what kills me is that the flyout menus take so long to appear on our old servers that when I try to click on the menu to open it it&#8217;s already started opening so I end up clicking on Terminal Services Manager.)</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

