<html>
<head>
<title>WM_CTLCOLOR vs GetFileVersionInfoSize: Just because somebody else screwed up doesn't mean you're allowed to screw up too</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>WM_CTLCOLOR vs GetFileVersionInfoSize: Just because somebody else screwed up doesn&#8217;t mean you&#8217;re allowed to screw up too</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>September 13, 2012 / year-entry #214</td></tr>
<tr><td><b>Tags:</b></td><td>history</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20120913-00/?p=6613</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>16</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">In a discussion of the now-vestigial lpdwHandle parameter to the Get­File­Version­Info­Size function, Neil asks, "Weren't there sufficient API differences (e.g. WM_CTLCOLOR) between Win16 and Win32 to justify changing the definitions to eliminate the superfluous handle?" The goal of Win32 was to provide as much backward compatibility with existing 16-bit source code as can be practically...</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>
In a discussion of
<a HREF="http://blogs.msdn.com/b/oldnewthing/archive/2007/07/31/4138786.aspx">
the now-vestigial <code>lpdwHandle</code> parameter
to the <code>Get&shy;File&shy;Version&shy;Info&shy;Size</code> function</a>,
Neil asks,
"<a HREF="http://blogs.msdn.com/b/oldnewthing/archive/2007/07/31/4138786.aspx#4153782"
>Weren't there sufficient API differences
(e.g. WM_CTLCOLOR) between Win16 and Win32 to justify
changing the definitions to eliminate the superfluous handle?</a>"
</p>
<p>
The goal of Win32 was to provide as much backward compatibility with
existing 16-bit source code as can be practically achieved.
Not all of the changes were successful in achieving this goal,
but just because one person fails to meet that goal doesn't mean
that everybody else should abandon the goal, too.
</p>
<p>
The Win32 porting tool PORTTOOL.EXE scanned for things
which had changed and inserted comments saying things like
</p>
<ul>
<li>"No Win32 API equivalent" -- these were for the 25 functions
    which were very tightly coupled to the 16-bit environment,
    like selector management functions.</p>
<li>"Replaced by OtherFunction" -- these were used for the 38
    functions which no longer existed in Win32, but for which
    corresponding function did exist, but the parameters were
    different so a simple search-and-replace was not sufficient.</p>
<li>"Replaced by XYZ system" -- these were for functions that
    used an interface that was completely redesigned:
    the 16 old sound functions that buzzed your tinny PC speaker
    being replaced by the new multimedia system,
    and the 8 profiling functions.</p>
<li>"This function is now obsolete" -- these were for the 16 functions
    that no longer had any effect, like
    <code>Global&shy;LRU&shy;Newest</code> and
    <code>Limit&shy;EMS&shy;Pages</code>.</p>
<li>"wParam/lParam repacking" -- these were for the 21 messages that
    packed their parameters differently.</p>
<li>Special remarks for eight functions whose parameters changed
    meaning and therefore required special attention.</p>
<li>A special comment just for window procedures.
</ul>
<p>
If you add it up, you'll see that this makes for a total of 117
breaking changes.
And a lot of these changes were in rarely-used parts of Windows
like the selector-management stuff, the PC speaker stuff,
the profiling stuff, and the serial port functions.
The number of breaking changes that affected typical
developers was more like a few dozen.
</p>
<p>
Not bad for a total rewrite of an operating system.
</p>
<p>
If somebody said,
"Hey, you should port to this new operating system.
Here's a list of 117 things you need to change,"
you're far more likely to respond,
"Okay, I guess I can do that,"
than if somebody said,
"Here's a list of 3,000 things you need to change."
Especially if some of the changes were
<a HREF="http://blogs.msdn.com/b/oldnewthing/archive/2011/12/07/10244820.aspx#10245410">
not absolutely necessary, but were added merely to annoy you</a>.
(I would argue that the handling of many GDI functions
like <code>Move&shy;To</code>
fell into the <i>added merely to annoy you</i> category,
but at least
<a HREF="http://blogs.msdn.com/b/oldnewthing/archive/2009/07/20/9840597.aspx">
a simple macro</a>
smooths over most of the problems.)
</p>
<p>
One of the messages that required special treatment was
<code>WM_<wbr>COMMAND</code>.
In 16-bit Windows, the parameters were as follows:
</p>
<table BORDER=1 BORDERCOLOR=black CELLPADDING=3
       STYLE="border: solid black .75pt; border-collapse: collapse">
<tr>
<td><code>WPARAM</code></td>
<td><code>int nCode</code></td>
</tr>
<tr>
<td ROWSPAN=2><code>LPARAM</code></td>
<td><code>HWND hwndCtl</code> (low word)</td>
</tr>
<tr>
<td><code>int id</code> (high word)</td>
</tr>
</table>
<p>
Observe that this message violated the rule that
<a HREF="http://blogs.msdn.com/b/oldnewthing/archive/2003/11/25/55850.aspx">
handle-sized things go in the <code>WPARAM</code></a>.
As a result, this parameter packing method could not be maintained
in Win32.
If it had been packed as
</p>
<table BORDER=1 BORDERCOLOR=black CELLPADDING=3
       STYLE="border: solid black .75pt; border-collapse: collapse">
<tr>
<td><code>WPARAM</code></td>
<td><code>HWND hwndCtl</code></td>
</tr>
<tr>
<td ROWSPAN=2><code>LPARAM</code></td>
<td><code>int id</code> (low word)</td>
</tr>
<tr>
<td><code>int nCode</code> (high word)</td>
</tr>
</table>
<p>
then the message would have ported cleanly to Win32.
But Win32 handles are 32-bit values,
so there's no room for both an <code>HWND</code>
and an integer in a 32-bit <code>LPARAM</code>;
as a result, the message had to be repacked in Win32.
</p>
<p>
The <code>WM_<wbr>CTL&shy;COLOR</code> message was an extra special
case of a message that required changes,
because it was the only one
that changed in a way that required more than just mechanical
twiddling of the way the parameters were packaged.
Instead,
it got split out into several messages, one for each type of 
control.
</p>
<p>
In 16-bit Windows, the
parameters to the <code>WM_<wbr>CTL&shy;COLOR</code> message were
as follows:
</p>
<table BORDER=1 BORDERCOLOR=black CELLPADDING=3
       STYLE="border: solid black .75pt; border-collapse: collapse">
<tr>
<td><code>WPARAM</code></td>
<td><code>HDC hdc</code></td>
</tr>
<tr>
<td ROWSPAN=2><code>LPARAM</code></td>
<td><code>HWND hwndCtl</code> (low word)</td>
</tr>
<tr>
<td><code>int type</code> (high word)</td>
</tr>
</table>
<p>
The problem with this message was that it had <i>two</i> handle-sized
values.
One of them went into the <code>WPARAM</code>,
like all good handle-sized parameters,
but the second one was forced to share a bunk bed with the type code
in the <code>LPARAM</code>.
This arrangement didn't survive in Win32 because handles expanded
to 32-bit values,
but unlike
<code>WM_<wbr>COMMAND</code>,
there was nowhere to put the now-ousted <code>type</code>,
since both the <code>WPARAM</code> and <code>LPARAM</code> were full
with the two handles.
Solution:
Encode the type code in the message number.
The <code>WM_<wbr>CTL&shy;COLOR</code> message became a collection
of messages, all related by the formula
</p>
<pre>
WM_CTLCOLOR<u>type</u> = WM_CTLCOLORMSGBOX + CTLCOLOR_<u>type</u>
</pre>
<p>
The <code>WM_<wbr>CTL&shy;COLOR</code> message was the bad boy
in the compatibility contest,
falling pretty badly on its face.
(How many metaphors can I mix in one article?)
</p>
<p>
But just because there's somebody who screwed up doesn't mean
that you're allowed to screw up too.
If there was a parameter that didn't do anything any more,
just declare it a reserved parameter. That way, you didn't have to go
onto the "wall of shame" of functions that didn't port cleanly.
The
<a HREF="http://blogs.msdn.com/b/oldnewthing/archive/2007/07/31/4138786.aspx">
<code>Get&shy;File&shy;Version&shy;Info&shy;Size</code> function</a>
kept its vestigial <code>lpdwHandle</code> parameter,
<a HREF="http://blogs.msdn.com/b/oldnewthing/archive/2004/06/15/156022.aspx">
<code>Win&shy;Main</code> kept its vestigial <code>hPrev&shy;Instance</code>
parameter</a>,
and
<a HREF="http://blogs.msdn.com/b/larryosterman/archive/2007/02/08/why-was-the-ability-to-specify-an-allocator-during-coinitialize-removed-from-the-system.aspx">
<code>Co&shy;Initialize</code> kept its vestigial <code>lpReserved</code>
parameter</a>.
</p>
<p>
This also explains why significant effort was made in the
32-bit to 64-bit transition not to make breaking changes
just because you can.
As much as practical, porting issues were designed in such a way
that they could be detected at compile time.
Introducing gratuitous changes in behavior makes the porting
process harder than it needs to be.</p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (16)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-1010773">
				<div id="div-comment-1010773" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120913-00/?p=6613#comment-1010773">
			September 13, 2012 at 8:14 am</a>		</div>

		<p>[Introducing gratuitous changes in behavior makes the porting process harder than it needs to be.]</p>
<p>See .NET Framework AnyCPU compilation mode.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-wndsks odd alt thread-odd thread-alt depth-1" id="comment-1010793">
				<div id="div-comment-1010793" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/skSdnW' rel='external nofollow' class='url'>skSdnW</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120913-00/?p=6613#comment-1010793">
			September 13, 2012 at 9:36 am</a>		</div>

		<p>Is this why process and thread ids are 32bit in usermode and pointer sized in kernel mode on x64?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-alegrigoriev even thread-even depth-1" id="comment-1010813">
				<div id="div-comment-1010813" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/alegr1' rel='external nofollow' class='url'>alegr1</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120913-00/?p=6613#comment-1010813">
			September 13, 2012 at 10:04 am</a>		</div>

		<p>@Winsdks:</p>
<p>PID/TID do not have to use 64 bits. Neither do handles. Thus, passing them between x86 and x64 can be easily done.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-hardon odd alt thread-odd thread-alt depth-1" id="comment-1010823">
				<div id="div-comment-1010823" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/gdalsnes' rel='external nofollow' class='url'>gdalsnes</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120913-00/?p=6613#comment-1010823">
			September 13, 2012 at 12:12 pm</a>		</div>

		<p>Why didn&#39;t they replace it with a struct (hdc, type) instead? A mystery to me.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1010833">
				<div id="div-comment-1010833" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Jonathan</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120913-00/?p=6613#comment-1010833">
			September 13, 2012 at 12:14 pm</a>		</div>

		<p>(How many metaphors can I mix in one article?)</p>
<p>As many as will fit in a 16-bit WPARAM, I&#39;d guess. Beware when porting to book format though.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1010873">
				<div id="div-comment-1010873" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Anonymous</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120913-00/?p=6613#comment-1010873">
			September 13, 2012 at 5:48 pm</a>		</div>

		<p>WinRT makes the Win16 to Win32 transition look very good in retrospect.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1010883">
				<div id="div-comment-1010883" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joe</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120913-00/?p=6613#comment-1010883">
			September 13, 2012 at 8:09 pm</a>		</div>

		<p>I was quite impressed with the Win16 to Win32 transition. I had a lot code with both 16-bit and 32-bit builds with very little difference between them. (I&#39;ve had more ifdefs in Win32 to CE.)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1010843">
				<div id="div-comment-1010843" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joe</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120913-00/?p=6613#comment-1010843">
			September 13, 2012 at 1:21 pm</a>		</div>

		<p>@arghhhhhhhhhhhhhh</p>
<p>how would you marshal that across process? &nbsp;allocate memory for it? and so on. &nbsp;the nice thing about leaving things *by value* in 32 bits is that the value can fit in a register</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1010903">
				<div id="div-comment-1010903" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">640k</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120913-00/?p=6613#comment-1010903">
			September 13, 2012 at 11:55 pm</a>		</div>

		<p>The Win16 to Win32 transition took 15 years for the industry. Good lord it was only 117 braking changes.</p>
<div class="post">[<i>I&#39;m pretty sure the Win16 programs that weren&#39;t ported to Win32 after 5 years would never be ported to Win32 even if there were zero breaking changes. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1010913">
				<div id="div-comment-1010913" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">640k</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120913-00/?p=6613#comment-1010913">
			September 13, 2012 at 11:55 pm</a>		</div>

		<p>The Win16 to Win32 transition took 15 years for the industry. Good lord it was only 117 breaking changes.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1010923">
				<div id="div-comment-1010923" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ivank</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120913-00/?p=6613#comment-1010923">
			September 14, 2012 at 12:06 am</a>		</div>

		<p>I never had to port a Win16 app to Win32, but I did recently [due to browsing links on this blog] load the birthday cake code from <a rel="nofollow" target="_new" href="http://charlespetzold.com/etc/Windows1/index.html" rel="nofollow">charlespetzold.com/&#8230;/index.html</a> into VS2010, and was impressed with how easy it was to port. (The MoveTo calls did need changing.)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1010933">
				<div id="div-comment-1010933" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">DoctorX</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120913-00/?p=6613#comment-1010933">
			September 14, 2012 at 1:02 am</a>		</div>

		<p>Just because somebody else screwed up doesn&#39;t mean you&#39;re allowed to screw up too.</p>
<p>Would you please be so good to inform the Visual Studio GUI team about this fact?</p>
<div class="post">[<i><a href="http://blogs.msdn.com/b/oldnewthing/archive/2006/07/13/664448.aspx" rel="nofollow">Glass houses are great places to throw stones</a>. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1010943">
				<div id="div-comment-1010943" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Neil</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120913-00/?p=6613#comment-1010943">
			September 14, 2012 at 3:33 am</a>		</div>

		<p>I&#39;m getting better with my comments. By the law of averages, I&#39;ve probably made at least one good comment by now, though I have no idea which one.</p>
<p>@640k: &quot;took&quot;? Some people are still using SuperBase&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1010953">
				<div id="div-comment-1010953" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blogs.msdn.com/bombsoft_4000_hotmail.com/ProfileUrlRedirect.ashx' rel='external nofollow' class='url'>bombsoft@hotmail.com</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120913-00/?p=6613#comment-1010953">
			September 14, 2012 at 6:09 am</a>		</div>

		<p>&quot;Just because somebody else screwed up doesn&#39;t mean you&#39;re allowed to screw up too&quot;</p>
<p>Inb4 &quot;Somebody screwed up autosort&quot;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1011233">
				<div id="div-comment-1011233" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120913-00/?p=6613#comment-1011233">
			September 14, 2012 at 7:06 pm</a>		</div>

		<p>Ref: [Glass houses are great places to throw stones. -Raymond]</p>
<p>Is it permissible to create a Window with a window procedure of DefWindowProc, or am I being too literal?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1011503">
				<div id="div-comment-1011503" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20120913-00/?p=6613#comment-1011503">
			September 17, 2012 at 6:21 pm</a>		</div>

		<p>[I&#39;m pretty sure the Win16 programs that weren&#39;t ported to Win32 after 5 years would never be ported to Win32 even if there were zero breaking changes. -Raymond]</p>
<p>I saw one get ported only after Windows Vista came out (porting reason was x64 couldn&#39;t run 16 bit code).</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

