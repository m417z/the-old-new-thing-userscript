<html>
<head>
<title>Why is getting the HP_HASHSIZE so weird?</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>Why is getting the HP_HASHSIZE so weird?</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>January 28, 2016 / year-entry #21</td></tr>
<tr><td><b>Tags:</b></td><td>code</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20160128-00/?p=92941</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>11</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">Second-order logic.</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>A comment on
<a HREF="https://msdn.microsoft.com/en-us/library/windows/desktop/aa379947(v=vs.85).aspx">
the documentation page for
<code>Crypt&shy;Get&shy;Hash&shy;Param</code></a>
notes that the "obvious" way to get the <code>HP_HASH&shy;SIZE</code>
is incorrect.
</p>
<pre>
<i>// Version 1: wrong.
DWORD size = 0;
if (CryptGetHashParam(hash, HP_HASHSIZE, nullptr, &amp;size, 0))</i> ...

// Version 2: right.
DWORD size;
DWORD bufferSize = sizeof(size);
if (CryptGetHashParam(hash, HP_HASHSIZE, &amp;size, &amp;bufferSize, 0))</i> ...
</pre>
<p>
What's going on here?
I mean, the documentation says that if you want to get the size
of a parameter, you pass <code>nullptr</code> for the buffer,
and the <code>DWORD*</code> parameter gets the size of the buffer.
So if I want to get the hash size,
I should pass <code>nullptr</code> for the buffer,
and the <code>DWORD*</code> parameter gets the size of the hash.
But it doesn't. It always returns 4.
What's going on?
</p>
<p>
What's going on is that you are working at the wrong level of indirection.
The code in version 1 is not asking for the size of the hash.
It's asking for the size of the <code>HP_HASH&shy;SIZE</code>.
In other words, you're asking for the size of the <i>size</i>.
Since <code>HP_HASH&shy;SIZE</code> is a <code>DWORD</code>,
its size is 4.
You then need to follow up with the code in version 2,
which allocates a buffer of size 4 and asks for it to be filled
in with the <code>HP_HASH&shy;SIZE</code>.
</p>
<p>
A third way to get the size of the hash is to ignore
<code>HP_HASH&shy;SIZE</code> completely and go straight
for the <code>HP_HASH&shy;VAL</code>:
</p>
<pre>
// Version 3: righter
DWORD hashSize = 0;
if (CryptGetHashParam(hash, HP_HASHVAL, nullptr, &amp;hashSize, 0))</i> ...
</pre>
<p>
I don't know why the crypto folks bothered to have a
<code>HP_HASH&shy;SIZE</code> parameter.
Adding it only created confusion.</p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (11)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment byuser comment-author-wndsks even thread-even depth-1" id="comment-1225184">
				<div id="div-comment-1225184" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/skSdnW' rel='external nofollow' class='url'>skSdnW</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160128-00/?p=92941#comment-1225184">
			January 28, 2016 at 7:10 am</a>		</div>

		<p>Obviously the crypto designers believe that one day we will have hashes larger than 4 GiB.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-koldude odd alt thread-odd thread-alt depth-1" id="comment-1225191">
				<div id="div-comment-1225191" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/kantos' rel='external nofollow' class='url'>kantos</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160128-00/?p=92941#comment-1225191">
			January 28, 2016 at 7:38 am</a>		</div>

		<p>Aren&#8217;t we supposed to be using Cryptography Next Generation (<a href="https://msdn.microsoft.com/en-us/library/windows/desktop/aa376217(v=vs.85)" rel="nofollow">https://msdn.microsoft.com/en-us/library/windows/desktop/aa376217(v=vs.85)</a>.aspx) these days anyway?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1 parent" id="comment-1225201">
				<div id="div-comment-1225201" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Karellen</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160128-00/?p=92941#comment-1225201">
			January 28, 2016 at 8:07 am</a>		</div>

		<p>OK, I understand the need for a function like CryptGetHashParam(), because some hash functions might have hash-specific parameters of arbitrary length which you might want to query. But &#8220;size&#8221; is one attributes all hash functions have. So why not have:<br />
    DWORD CryptGetHashSize(HCRYPTHASH hHash, DWORD flags);</p>
<p>As it is, everyone&#8217;s just going to reinvent their own version of this function, probably inline a bunch of times, and possibly incorrectly (like version 1).</p>
<p>If the designers of I/O APIs went to the same school of API design as the crypto lot, rather than bother with the multitude of fread(), fwrite(), iseof(), etc&#8230; calls, they&#8217;d probably end up with a single PerformIOOperation(HANDLE h, DWORD operation, BYTE * pbData, DWORD * pwdDataLen, DWORD flags), where &#8220;operation&#8221; describes what you want to do, and is *so* much more flexible!</p>

		
				</div>
		<ol class="children">
		<li class="comment odd alt depth-2 parent" id="comment-1225231">
				<div id="div-comment-1225231" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ben Voigt</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160128-00/?p=92941#comment-1225231">
			January 28, 2016 at 12:04 pm</a>		</div>

		<p>The &#8220;PerformIOOperation&#8221; you are thinking of is named DeviceIoControl, and it is indeed more flexible.</p>

		
				</div>
		<ol class="children">
		<li class="comment even depth-3" id="comment-1225261">
				<div id="div-comment-1225261" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Karellen</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160128-00/?p=92941#comment-1225261">
			January 28, 2016 at 4:28 pm</a>		</div>

		<p>But how many people do you think actually use it for the basic job of reading and writing bytes to the device(-handle), instead of the more specific ReadFile() and WriteFile() calls?</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment byuser comment-author-oldnewthing bypostauthor odd alt depth-2 parent" id="comment-1225271">
				<div id="div-comment-1225271" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Raymond+Chen+-+MSFT' rel='external nofollow' class='url'>Raymond Chen - MSFT</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160128-00/?p=92941#comment-1225271">
			January 28, 2016 at 5:27 pm</a>		</div>

		<p>There&#8217;s no need for HP_HASHSIZE at all. You get the hash size by asking for the size of HP_HASHVAL. My guess is that this function is wrapping an internal class, and that internal class has a HashSize property, sand somebody went through and blindly put every property of the internal class into the public surface without realizing that getting the HashSize is redundant with getting the size of HP_HASHVAL.</p>

		
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-cheong even depth-3 parent" id="comment-1225301">
				<div id="div-comment-1225301" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/cheong00' rel='external nofollow' class='url'>cheong00</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160128-00/?p=92941#comment-1225301">
			January 28, 2016 at 10:42 pm</a>		</div>

		<p>More forum error:<br />
Line: 377: Error: &#8216;addComment&#8217; is undefined<br />
======<br />
For the reason why HP_HASHVAL is not used, The description of HP_HASHVAL says:<br />
[quote]<br />
The hash value or message hash for the hash object specified by hHash. This value is generated based on the data supplied to the hash object earlier through the CryptHashData and CryptHashSessionKey functions.<br />
[/quote]<br />
The line suggest that I have to call those function like CryptHashData() before calling it, and by the time I already run it, it would be too late to allocate the buffer for it?</p>
<p>Maybe another need for clarification on documentation?</p>

		
				</div>
		<ol class="children">
		<li class="comment odd alt depth-4 parent" id="comment-1225311">
				<div id="div-comment-1225311" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">smf</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160128-00/?p=92941#comment-1225311">
			January 29, 2016 at 4:48 am</a>		</div>

		<p>&#8220;The line suggest that I have to call those function like CryptHashData() before calling it, and by the time I already run it, it would be too late to allocate the buffer for it?&#8221;</p>
<p>@cheong00 You have to call those functions before asking the value, but you don&#8217;t have to call them before asking what size the value will be. The only argument for using HP_HASHSIZE would be if it was the maximum size and the size of HP_HASHVAL was dynamic.</p>

		
				</div>
		<ol class="children">
		<li class="comment even depth-5" id="comment-1225331">
				<div id="div-comment-1225331" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">smf</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160128-00/?p=92941#comment-1225331">
			January 29, 2016 at 4:54 am</a>		</div>

		<p>I thought of another reason, it might be quicker to get the value of HP_HASHSIZE than it is to ask for the size of HP_HASHVAL. Or someone at least thought that one day it might be quicker. It appears you aren&#8217;t supposed to ask until the last minute anyway&#8230;</p>
<p>&#8220;Applications must retrieve this value just before the HP_HASHVAL value so the correct amount of memory can be allocated.&#8221;</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1 parent" id="comment-1225281">
				<div id="div-comment-1225281" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160128-00/?p=92941#comment-1225281">
			January 28, 2016 at 6:35 pm</a>		</div>

		<p>Personally I think Version 3 is the only right version. Imagine what would happen if you used Version 2, but Version 1 would have returned 1. Of course you could make it work on little-endian by setting size to zero first but &#8230;</p>

		
				</div>
		<ol class="children">
		<li class="comment even depth-2" id="comment-1225321">
				<div id="div-comment-1225321" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">smf</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160128-00/?p=92941#comment-1225321">
			January 29, 2016 at 4:53 am</a>		</div>

		<p>I can&#8217;t imagine how getting HP_HASHSIZE could return 1 as it is documented as a DWORD.</p>
<p>&#8220;HP_HASHSIZE<br />
Hash value size</p>
<p>DWORD value indicating the number of bytes in the hash value. This value will vary depending on the hash algorithm. Applications must retrieve this value just before the HP_HASHVAL value so the correct amount of memory can be allocated.&#8221;</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

