<html>
<head>
<title>How do I find the original name of a hard link?</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>How do I find the original name of a hard link?</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>July 20, 2011 / year-entry #175</td></tr>
<tr><td><b>Tags:</b></td><td>code</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20110720-00/?p=10103</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>35</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">A customer asked, "Given a hardlink name, is it possible to get the original file name used to create it in the first place?" Recall that hard links create an alternate name for a file. Once that alternate name is created, there is no way to tell which is the original name and which is...</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>
A customer asked,
"Given a hardlink name,
is it possible to get the original file name used
to create it in the first place?"
</p>
<p>
Recall that hard links create an alternate name for a file.
Once that alternate name is created, there is no way to tell
which is the original name and which is the new name.
The new file does not have a "link back to the original";
they are both links to the underlying file content.
This is
<a HREF="http://blogs.msdn.com/oldnewthing/archive/2009/09/28/9900082.aspx">
an old topic</a>,
so I won't go into further detail.
Though this question does illustrate that many people
continue to misunderstand what hard links are.
</p>
<p>
Anyway, once you figure out what the customer is actually asking,
you can give a meaningful answer:
"Given the path to a file,
how can I get all the names
by which the file can be accessed?"
The answer is
<code>Find&shy;First&shy;File&shy;NameW</code>.
</p>
<p>
Note that the names returned by the
<code>Find&shy;First&shy;File&shy;NameW</code>
family
of functions are relative to the volume mount point.
To convert it to a full path, you need to append it to the mount point.
Something like this:
</p>
<pre>
typedef void (*ENUMERATEDNAMEPROC)(__in PCWSTR);

void ProcessOneName(
    __in PCWSTR pszVolumeRoot,
    __in PCWSTR pszLink,
    __in ENUMERATEDNAMEPROC pfnCallback)
{
  wchar_t szFile[MAX_PATH];
  if (SUCCEEDED(StringCchCopy(szFile, ARRAYSIZE(szFile), pszVolumeRoot)) &amp;&amp;
      PathAppend(szFile, pszLink)) {
   pfnCallback(szFile);
  }
}

void EnumerateAllNames(
    __in PCWSTR pszFileName,
    __in ENUMERATEDNAMEPROC pfnCallback)
{
 // Supporting paths longer than MAX_PATH left as an exercise
 wchar_t szVolumeRoot[MAX_PATH];
 if (GetVolumePathName(pszFileName, szVolumeRoot, ARRAYSIZE(szVolumeRoot))) {
  wchar_t szLink[MAX_PATH];
  DWORD cchLink = ARRAYSIZE(szLink);
  HANDLE hFind = FindFirstFileNameW(pszFileName, 0, &amp;cchLink, szLink);
  if (hFind != INVALID_HANDLE_VALUE) {
   ProcessOneName(szVolumeRoot, szLink, pfnCallback);
   while (cchLink = ARRAYSIZE(szLink),
          FindNextFileNameW(hFind, &amp;cchLink, szLink)) {
    ProcessOneName(szVolumeRoot, szLink, pfnCallback);
   }
   FindClose(hFind);
  }
 }
}

// for demonstration purposes, we just print the name
void PrintEachFoundName(__in PCWSTR pszFile)
{
 _putws(pszFile);
}

int __cdecl wmain(int argc, wchar_t **argv)
{
 for (int i = 1; i < argc; i++) {
  EnumerateAllNames(argv[i], PrintEachFoundName);
 }
 return 0;
}
</pre>
<p>
<b>Update</b>: Minor errors corrected, as noted by
<a HREF="http://blogs.msdn.com/b/oldnewthing/archive/2011/07/20/10188033.aspx#10188208">
acq</a> and
<a HREF="http://blogs.msdn.com/b/oldnewthing/archive/2011/07/20/10188033.aspx#10188232">
Adrian</a>.</p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (35)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-925793">
				<div id="div-comment-925793" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">acq</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110720-00/?p=10103#comment-925793">
			July 20, 2011 at 7:17 am</a>		</div>

		<p>Raymond, you don&#39;t pass PrintEachFoundName to EnumerateAllNames but it&#39;s obvious that was an idea, so maybe it&#39;s not worth spending time correcting it.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-925803">
				<div id="div-comment-925803" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Adam Rosenfield</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110720-00/?p=10103#comment-925803">
			July 20, 2011 at 7:20 am</a>		</div>

		<p>Thanks for the tip, I didn&#39;t know it was possible to enumerate all of the hard links to a file (even if it&#39;s Vista+ only). &nbsp;I also find it interesting that there&#39;s no ANSI version of this function.</p>
<p>But aside from backup programs, what are the possible use cases for wanting to enumerate the hard links to a given file?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-925823">
				<div id="div-comment-925823" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">henke37</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110720-00/?p=10103#comment-925823">
			July 20, 2011 at 7:38 am</a>		</div>

		<p>Also, What if the original name of the file is deleted? Hard links are fun that way, since they continue to work after that event.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-925833">
				<div id="div-comment-925833" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Bob</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110720-00/?p=10103#comment-925833">
			July 20, 2011 at 7:43 am</a>		</div>

		<p>SysInternals just released a new utility call FindLinks that finds all of the hard links for a given file.</p>
<p><a rel="nofollow" target="_new" href="http://technet.microsoft.com/en-us/sysinternals/hh290814" rel="nofollow">technet.microsoft.com/&#8230;/hh290814</a></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-925843">
				<div id="div-comment-925843" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">David Walker</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110720-00/?p=10103#comment-925843">
			July 20, 2011 at 7:53 am</a>		</div>

		<p>I realize that the original question included a misperception, but if the create time is stored with the file name (and not the contents), then you could find all names pointing to a file, and then get the oldest one. &nbsp;That would MAYBE be the &quot;original&quot; name used to create the file (unless the original name used to create the file was later deleted). &nbsp;Further proof that the question is incorrect.</p>
<p>Of course, if that metadata is stored with the file, and there&#39;s only one create time, then even this hack won&#39;t work. &nbsp;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-925853">
				<div id="div-comment-925853" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ivo</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110720-00/?p=10103#comment-925853">
			July 20, 2011 at 8:09 am</a>		</div>

		<p>@David &#8211; yes, I think all metadata is stored with the file. I was having a related problem before &#8211; if you create a hard link to a read-only file, you can&#39;t delete the hard link (because all links to the file are &quot;read-only&quot;). You can of course remove the read-only attribute but then you mess up the file. That&#39;s what Explorer will do. If you create a hard link to a read-only file and then delete it from Explorer, the file becomes writable.</p>
<p>So the solution is to look for another link to the file (as Raymond described) and use it to restore the attribute after you delete your hard link.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-925863">
				<div id="div-comment-925863" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110720-00/?p=10103#comment-925863">
			July 20, 2011 at 8:13 am</a>		</div>

		<p>@Ivo: You don&#39;t have to use FindFirstFileNameW for that: <a rel="nofollow" target="_new" href="http://stackoverflow.com/questions/3055668/delete-link-to-file-without-clearing-readonly-bit" rel="nofollow">stackoverflow.com/&#8230;/delete-link-to-file-without-clearing-readonly-bit</a></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-925873">
				<div id="div-comment-925873" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joe Dietz</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110720-00/?p=10103#comment-925873">
			July 20, 2011 at 8:17 am</a>		</div>

		<p>Ten some years ago I found myself implementing a file system for windows 2000. &nbsp;Having come from a UNIX background I didn&#39;t find all of the NTFS features like hardlinks unusual at all, but I did find that it was bit unusual that there where no win32 APIs that used them&#8230;. &nbsp;Something that most users of windows don&#39;t know or just have forgotten was that one of the original design goals of the NT kernel was to be able to support any number of existing operating system interfaces through runtime &#39;subsystems&#39;, such as UNIX (posix, Interix/SFU etc.), OS2 and win32. &nbsp;Win32 is the only one that ever got used and I think the only one shipped post w2k3. &nbsp;Anyways a side effect of this design goal is that the file system model has the ability to implement semantics of file systems from all of these environments, which also helps makes the NT kernel file system interfaces 2-3X more complex than the UNIX VFS&#8230;. &nbsp;So UNIX things like hardlinks and symlinks (well the later isn&#39;t a native capability of NTFS, but it is approximated via reparse points) have existed forever, but win32 only recently bothered with them.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-925883">
				<div id="div-comment-925883" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">J</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110720-00/?p=10103#comment-925883">
			July 20, 2011 at 8:21 am</a>		</div>

		<p>&quot;@David &#8211; yes, I think all metadata is stored with the file. I was having a related problem before &#8211; if you create a hard link to a read-only file, you can&#39;t delete the hard link (because all links to the file are &quot;read-only&quot;). You can of course remove the read-only attribute but then you mess up the file. That&#39;s what Explorer will do. If you create a hard link to a read-only file and then delete it from Explorer, the file becomes writable.</p>
<p>So the solution is to look for another link to the file (as Raymond described) and use it to restore the attribute after you delete your hard link.&quot;</p>
<p>If that behavior is true, it&#39;s unfortunate. &nbsp;The ability to add or remove links should be tied to the writeability of the containing directory, not the file itself.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-925903">
				<div id="div-comment-925903" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Adrian</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110720-00/?p=10103#comment-925903">
			July 20, 2011 at 8:42 am</a>		</div>

		<p>Isn&#39;t it necessary to call FindClose(hFind) after the enumeration? &nbsp;What kinds of objects get leaked when you forget to do that?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-925923">
				<div id="div-comment-925923" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Timothy Byrd</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110720-00/?p=10103#comment-925923">
			July 20, 2011 at 9:34 am</a>		</div>

		<p>Hey Raymond &#8211; thanks for posting that. (I don&#39;t have an immediate use, but it&#39;s in the &quot;good to know&quot; category.)</p>
<p>I re-read the old post and it reminded me why my personal rules for using hard links are &quot;must take enough disk space that I care&quot; and &quot;must be files that I pretty much am never going to change the contents of&quot;.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-925933">
				<div id="div-comment-925933" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Billy O'Neal</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110720-00/?p=10103#comment-925933">
			July 20, 2011 at 10:41 am</a>		</div>

		<p>@J: No, it should not. If you want the item to have a different set of attributes to the file then you don&#39;t use a hard link, you should use a symbolic link. A hard link is just another file name for the same file. A symbolic link is actually the link.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-925943">
				<div id="div-comment-925943" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">David Walker</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110720-00/?p=10103#comment-925943">
			July 20, 2011 at 11:58 am</a>		</div>

		<p>@Joe: &nbsp;Implementing your own file system? &nbsp;That is brave.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-925953">
				<div id="div-comment-925953" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Petr Minar</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110720-00/?p=10103#comment-925953">
			July 20, 2011 at 12:39 pm</a>		</div>

		<p>So which file name is returned from ReadDirectoryChangesW when file with multiple names is changed?</p>
<div class="post">[<i>First half of the answer coming August 12; second half on December 26. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-yuhong-bao even thread-even depth-1" id="comment-925963">
				<div id="div-comment-925963" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Yuhong+Bao' rel='external nofollow' class='url'>Yuhong Bao</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110720-00/?p=10103#comment-925963">
			July 20, 2011 at 12:55 pm</a>		</div>

		<p>&quot;I also find it interesting that there&#39;s no ANSI version of this function.&quot;</p>
<p><a rel="nofollow" target="_new" href="http://blogs.msdn.com/b/michkap/archive/2005/10/02/476213.aspx" rel="nofollow">blogs.msdn.com/&#8230;/476213.aspx</a></p>
<p><a rel="nofollow" target="_new" href="http://blogs.msdn.com/b/michkap/archive/2006/10/24/867880.aspx" rel="nofollow">blogs.msdn.com/&#8230;/867880.aspx</a></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-925973">
				<div id="div-comment-925973" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110720-00/?p=10103#comment-925973">
			July 20, 2011 at 2:24 pm</a>		</div>

		<p>[First half of the answer coming August 12; second half on December 26. -Raymond]</p>
<p>Now that&#39;s what I call a long queue.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-925983">
				<div id="div-comment-925983" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Adam Rosenfield</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110720-00/?p=10103#comment-925983">
			July 20, 2011 at 2:38 pm</a>		</div>

		<p>@Joshua: No, that&#39;s actually pretty soon. &nbsp;Word on the street is that Raymond&#39;s queue is at least 2-3 years long. &nbsp;A 5 month wait is paltry by comparison.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-925993">
				<div id="div-comment-925993" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Gabe</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110720-00/?p=10103#comment-925993">
			July 20, 2011 at 7:27 pm</a>		</div>

		<p>Joshua: He doesn&#39;t have a queue &#8212; he has a time machine!</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-926013">
				<div id="div-comment-926013" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Neil</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110720-00/?p=10103#comment-926013">
			July 21, 2011 at 3:43 am</a>		</div>

		<p>In edge cases it might be possible to find the original hard name of a link by comparing its ACL to the folders of all the hard links.</p>
<p>@Ivo: It gets worse when the file is open, as you then can&#39;t delete any of its links, although I guess MOVEFILE_DELAY_UNTIL_REBOOT still works.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-926053">
				<div id="div-comment-926053" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Random832</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110720-00/?p=10103#comment-926053">
			July 21, 2011 at 7:20 am</a>		</div>

		<p>&quot;The ability to add or remove links should be tied to the writeability of the containing directory, not the file itself.&quot;</p>
<p>Alternately, if the ability to remove links is to be tied to the file (which is not an <em>entirely</em> unreasonable stance &#8211; this is the problem the sticky bit solves on unix, though in that case it&#39;s tied to file <em>ownership</em>, which creating links already is), the ability to add links should also be.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-926073">
				<div id="div-comment-926073" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">J</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110720-00/?p=10103#comment-926073">
			July 21, 2011 at 7:31 am</a>		</div>

		<p>&quot;@J: No, it should not. If you want the item to have a different set of attributes to the file then you don&#39;t use a hard link, you should use a symbolic link. A hard link is just another file name for the same file. A symbolic link is actually the link.&quot;</p>
<p>But the name is really a property of the directory, not the file itself. &nbsp;So creating a name in a directory is something that should only involve permissions in the target directory. &nbsp;The current &quot;solution&quot; is obviously wrong: being able to create a link, but not being able to remove it is an unnecessary asymmetry.</p>
<p>That&#39;s not a hole either. &nbsp;If you can&#39;t write to the file in the source directory, you won&#39;t be able to write to it in the target directory either (and the same with reading from the file).</p>
<p>&quot;Alternately, if the ability to remove links is to be tied to the file (which is not an <em>entirely</em> unreasonable stance &#8211; this is the problem the sticky bit solves on unix, though in that case it&#39;s tied to file <em>ownership</em>, which creating links already is), the ability to add links should also be.&quot;</p>
<p>I agree with this as an alternate solution. &nbsp;Windows could have had a permission called &quot;create link&quot;. &nbsp;If you have that permission on a file, you can create (and remove!) hardlinks to that file. &nbsp;No asymmetry. &nbsp;And furthermore, you aren&#39;t conflating two unrelated operations in the same permission bit. &nbsp;Being able to write data to a file is very different from creating or removing a link to/from it.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-926103">
				<div id="div-comment-926103" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">David Walker</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110720-00/?p=10103#comment-926103">
			July 21, 2011 at 8:08 am</a>		</div>

		<p>@J: The name is a property of the directory? &nbsp;I don&#39;t think if it that way. &nbsp;The name has historically been considered part of the file (logically, if not implementation-wise).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-926143">
				<div id="div-comment-926143" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Pls fix</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110720-00/?p=10103#comment-926143">
			July 21, 2011 at 9:40 am</a>		</div>

		<p>Pls fix Explorer to handle hard links correctly so Winsxs size is correct.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-926223">
				<div id="div-comment-926223" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">David Walker</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110720-00/?p=10103#comment-926223">
			July 21, 2011 at 2:38 pm</a>		</div>

		<p>@pls fix: &nbsp;Complaining to Raymond won&#39;t help. &nbsp;Besides, he already addressed this. &nbsp;What is the &quot;correct&quot; size of a folder that has links to files that actually live in other folders? &nbsp;There are several answers that could be considered &quot;correct&quot;. &nbsp;</p>
<p>Some of the answers suffer from overcounting (that is, the total size of each folder, when added together, may exceed the capacity of the drive). &nbsp;Should backup programs use the total size when estimating how much backup space will be required to back up the whole disk?</p>
<p>There is not a &quot;correct&quot; answer. &nbsp;The reported size of the Winsxs folder is, in fact, the correct amount of space you&#39;ll need if you copy all of the file data that is pointed to by filenames that are in the Winsxs folder.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-926243">
				<div id="div-comment-926243" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Gabe</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110720-00/?p=10103#comment-926243">
			July 21, 2011 at 3:11 pm</a>		</div>

		<p>J: In Unix, a filename is considered part of a directory. A file may have any number of names, including zero. Anybody can add or remove a file&#39;s name at any time so long as they have appropriate permissions for the given directory. If you want to know what names a given file has, you have to exhaustively search every directory in the filesystem. If you want to know the complete path to a given file (say you want to know the fully-qualified name of the current directory), it&#39;s not a trivial operation. Locking a file is often largely useless because somebody can just unlink the file you want to lock and create a new one in its place.</p>
<p>In Windows, the name is considered part of a file. A file with no name makes about as much sense as a file with no size, so any file must have at least one name. This means that it&#39;s easy to ask for all the names a file has or find out the full path name of a file. Most significantly, you can lock a file and know that the file is genuinely locked; a read-only file is immutable.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-926273">
				<div id="div-comment-926273" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Anonymous</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110720-00/?p=10103#comment-926273">
			July 21, 2011 at 6:13 pm</a>		</div>

		<p>@Bob</p>
<p>I am finding this FindLinks tool quite useless. &nbsp;Such a tool is already built into the OS:</p>
<p>To list links:</p>
<blockquote><p>
  fsutil hardlink list C:windowsnotepad.exe
</p></blockquote>
<p>To query the file index:</p>
<blockquote><p>
  fsutil file queryfileid C:windowsnotepad.exe
</p></blockquote>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-926303">
				<div id="div-comment-926303" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">640k</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110720-00/?p=10103#comment-926303">
			July 22, 2011 at 1:31 am</a>		</div>

		<p>@Adam Rosenfield: But aside from backup programs, what are the possible use cases for wanting to enumerate the hard links to a given file?</p>
<p>Most common case is probably when deleting an open file.</p>
<p>@David Walker: There is not a &quot;correct&quot; answer. &nbsp;The reported size of the Winsxs folder is, in fact, the correct amount of space you&#39;ll need if you copy all of the file data that is pointed to by filenames that are in the Winsxs folder.</p>
<p>This is obviously not true because the files in Winsxs takes different amount of space if copying to ntfs or fat.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-926353">
				<div id="div-comment-926353" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">David Walker</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110720-00/?p=10103#comment-926353">
			July 22, 2011 at 8:29 am</a>		</div>

		<p>@640k: What I said WAS true, modulo any sector overhead. &nbsp;It also may depend on whether you are copying to a different folder on the same disk, or to a different disk. &nbsp;Copying onto a different disk or to tape will copy all of the data from the WinSXS folder. &nbsp;Copying on to the same disk might just copy the hard links &#8212; I&#39;m not sure about that. &nbsp;So the size reported by Explorer for WinSXS *is* correct.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-926423">
				<div id="div-comment-926423" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Pls fix</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110720-00/?p=10103#comment-926423">
			July 22, 2011 at 11:23 pm</a>		</div>

		<p>@David Walker, the correct size is and always be the size excluding the redundant hard links and all other sort of redundant junction points. Just freaking count them only once. The size including the hard links is the total gross size which is incorrect and what Explorer currently shows.</p>
<div class="post">[<i>I find your confidence in the use of the word &quot;always&quot; refreshingly idealistic. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-926463">
				<div id="div-comment-926463" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110720-00/?p=10103#comment-926463">
			July 24, 2011 at 1:48 pm</a>		</div>

		<p>I&#39;d assume that Pls fix is also from a Unix background, but has forgotten that most windows tools (including Explorer&#39;s folder copy) fail to gather hard links across folder copies.</p>
<p>I have a tool that correctly does the copy and another tool that correctly determines the size. See <a rel="nofollow" target="_new" href="http://www.cygwin.com" rel="nofollow">http://www.cygwin.com</a>.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-926483">
				<div id="div-comment-926483" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Gabe</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110720-00/?p=10103#comment-926483">
			July 25, 2011 at 5:08 am</a>		</div>

		<p>LR: Another situation you need to consider is &quot;How much additional free space will my disk have if I delete this folder?&quot;</p>
<p>Of course you probably don&#39;t want to delete WinSxS but it&#39;s very similar to &quot;How much space will this folder use on my backup tapes, assuming the rest of the disk is already backed up?&quot; if your backup program knows about hard links.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-926493">
				<div id="div-comment-926493" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">LR</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110720-00/?p=10103#comment-926493">
			July 25, 2011 at 6:35 am</a>		</div>

		<p>@Gabe,</p>
<p>right. But because of differential backups, the size that a backup will take is a really complicated matter (where hardlinks only play a very minor part, in my opinion).</p>
<p>Everytime when you delete something which shares a large amount of files via hardlinks with other directories, I would think that you have some special case. How often do you delete /bin, /user/bin, /lib etc, and have checked the size of this directories with the Linux pedant of the Explorer first?</p>
<p>For the most usual cases (copying something to USB or network or another volume), the size displayed in Explorer is right.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-926473">
				<div id="div-comment-926473" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">LR</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110720-00/?p=10103#comment-926473">
			July 25, 2011 at 2:47 am</a>		</div>

		<p>@Pls fix, Joshua:</p>
<p>The meaning of &quot;correct folder size&quot; depends entirely of what you want to get from this value. The only situation in which a simple sum over all files sizes is incorrect occurs when all of this three conditions are true:</p>
<p>&#8211; You want to copy the directory, and the copy tool is taking hardlinks into account by recreating the situation (references to the same file) at the target directory. </p>
<p>&#8211; You are not copying to a FAT(32) volume or some sort of network folders. Note that USB sticks use FAT(32) most of the time. (Yes, you can reformat them to NTFS. I know this, and have done this myself.)</p>
<p>&#8211; The directory (including its subdirectories, if you are planning to perform a recursive folder copy) contains two or more references to the same file. (References shared with folders *outside* of the actual source directory must not get special handling, of course. This files must be copied to the target as usual.)</p>
<p>Only all three conditions together make the simple sum invalid, but how can the Explorer know what are trying to do?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-926653">
				<div id="div-comment-926653" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">David Walker</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110720-00/?p=10103#comment-926653">
			July 25, 2011 at 11:51 am</a>		</div>

		<p>@pls fix: &nbsp;If you want a copy of everything that&#39;s referenced in a folder (including everything that is the ultimate target of hard links), then you DO, in fact, need to copy the contents of things that are hard-linked. &nbsp;Your obstinance doesn&#39;t change this. &nbsp;You might be copying across a network, or to an external disk that will be detached from the computer or network and carried somewhere else. &nbsp;We can agree to disagree. &nbsp;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-926663">
				<div id="div-comment-926663" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">David Walker</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110720-00/?p=10103#comment-926663">
			July 25, 2011 at 11:54 am</a>		</div>

		<p>@LR: The simple sum over all DIRECTORY sizes, which is easy to get from Explorer, will often overestimate the total amount of space required. &nbsp;The reported size of WinSXS includes files that are hard-linked from inside WinSXS, but the files exist elsewhere. &nbsp;Those file sizes are also counted in the &quot;size&quot; of the other directories.</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

