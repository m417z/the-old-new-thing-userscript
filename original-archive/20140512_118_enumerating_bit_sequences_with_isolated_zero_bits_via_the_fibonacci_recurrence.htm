<html>
<head>
<title>Enumerating bit sequences with isolated zero-bits via the Fibonacci recurrence</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>Enumerating bit sequences with isolated zero-bits via the Fibonacci recurrence</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>May 12, 2014 / year-entry #119</td></tr>
<tr><td><b>Tags:</b></td><td>code</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20140512-00/?p=1013</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>22</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">Today's Little Program enumerates bit sequences of a particular length subject to the constraint that you cannot have consecutive 0-bits. This may sound kind of arbitrary, but it is important in magnetic media storage, because you cannot go too long without a flux reversal (traditionally represented by a 1); otherwise, the read head's clock starts...</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>
Today's Little Program enumerates bit sequences of a particular
length subject to the constraint that you cannot have consecutive 0-bits.
This may sound kind of arbitrary, but it is
<a HREF="http://en.wikipedia.org/wiki/Group_code_recording">
important in magnetic media storage</a>,
because you cannot go too long without a
flux reversal (traditionally represented by a 1);
otherwise,
the read head's clock starts to drift and gets out of sync
with the data.
(The read head uses flux reversals both for signaling and for
clock synchronization.)
</p>
<p>
Let's say that an <i>allowable</i> bit sequence is one that contains
no consecutive 0-bits.
</p>
<p>
The recurrence for enumerating these types of constrained bit
sequence is the Fibonacci recurrence:
</p>
<blockquote><p>
<var>F</var>(<var>n</var>) = <var>F</var>(<var>n</var> &minus; 1) + <var>F</var>(<var>n</var> &minus; 2)
</p>
</blockquote>
<p>
The way to see this is to study the last digit in an allowable bit sequence.
</p>
<p>
If the last digit is a 1, then if you delete it, you have
an allowable bit sequence that is one digit shorter.
Conversely, you can take any allowable
bit sequence of length <var>n</var> &minus; 1
and tack a 1 onto it, and you'll have an allowable sequence.
</p>
<p>
If the last digit is a 0, then if you delete it, you also have
an allowable bit sequence that is one digit shorter,
but not all allowable bit sequences of length <var>n</var> &minus; 1
can be reached in this way.
Allowable bit sequences that end in 0 cannot be reached
because adding another 0 would result in two consecutive 0-bits,
which is disallowed.
Therefore, the last digit of the truncated bit sequence must be 1,
and what you really have is an allowable bit sequence of length
<var>n</var> &minus; 2, followed by a hard-coded 1.
</p>
<p>
Okay, now that we understand the enumerative justification for
the recurrence, we can proceed to write the code that generates
it.
</p>
<pre>
function GCR(n, f) {
 if (n == 0) { f(""); return; }
 if (n &lt; 0) { return; }
 GCR(n-1, function(s) { f(s + "1"); });
 GCR(n-2, function(s) { f(s + "10"); });
}

GCR(8, console.log);
</pre>
<p>
The test run calculates all 8-bit allowable sequences.
But wait, there's a bug:
It shows only the sequences that begin with a 1.
</p>
<p>
If you're Steve Wozniak, then this bug is a feature,
because the Apple II floppy drive also required the
first bit to be set, so our bug exactly matches the hardware
requirements.
</p>
<p>
But let's fix our bug. Where did it come from?
</p>
<p>
Our recursive step missed a base case:
The single-digit bit sequence 0 is allowable,
but we rejected it because we thought that it needed
to be separated from the null string by a 1,
to protect against the null string ending in 0.
But the null string doesn't end in zero, so this protection
was unnecessary.
</p>
<p>
Repairing our base case:
</p>
<pre>
function GCR(n, f) {
 if (n == 0) { f(""); return; }
 if (n == 1) { f("0"); f("1"); return; }
 GCR(n-1, function(s) { f(s + "1"); });
 GCR(n-2, function(s) { f(s + "10"); });
}
</pre>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (22)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-1123823">
				<div id="div-comment-1123823" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Mark</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140512-00/?p=1013#comment-1123823">
			May 12, 2014 at 7:07 am</a>		</div>

		<p>What&#39;s wrong with Manchester coding?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-bboorman odd alt thread-odd thread-alt depth-1" id="comment-1123843">
				<div id="div-comment-1123843" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Brian_EE' rel='external nofollow' class='url'>Brian_EE</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140512-00/?p=1013#comment-1123843">
			May 12, 2014 at 7:15 am</a>		</div>

		<p>Mark &#8211; Twice the bandwidth is required for starters.</p>
<p>As I am not well-versed in mag-media technology, what I don&#39;t understand is the distinction of why consecutive 1&#39;s are allowed but not consecutive 0&#39;s. It seems to me that too many of any one level would cause clock synchronization (no transitions to phase lock to). I am familiar with 8B10B etc on comms link, these are specifically designed to maintain DC balance.</p>
<p>Maybe I should go read up on drive encoding basics&#8230;</p>
<div class="post">[<em>You&#39;re thinking about it wrong. 0 and 1 are not levels. They are transitions. Staying at the same level = 0. Changing levels = 1. Consecutive 0&#39;s means &quot;staying at the same level for a long time&quot;, which means that you lose the clock. -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1123853">
				<div id="div-comment-1123853" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">y</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140512-00/?p=1013#comment-1123853">
			May 12, 2014 at 7:24 am</a>		</div>

		<p>You can store 0 as &quot;no change&quot; and 1 as &quot;change&quot;. Then multiple 1&#39;s are changes, for example 0 -&gt; 1 -&gt; 0 would be 11 and clock can be synchronized as head go. For 0 it would be 0 -&gt; 0 -&gt; 0 for 00, no change and no synchronization. </p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1123863">
				<div id="div-comment-1123863" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">VinDuv</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140512-00/?p=1013#comment-1123863">
			May 12, 2014 at 7:35 am</a>		</div>

		<p>@Brian_EE: Storing many consecutive zeros on a drive is probably much more frequent than storing many consecutive ones, since people tend to initialize unused stuff to 0. Not sure if it is the real reason though.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1123873">
				<div id="div-comment-1123873" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Antonio &amp;#39;Grijan&amp;#39;</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140512-00/?p=1013#comment-1123873">
			May 12, 2014 at 7:42 am</a>		</div>

		<p>@Mark: that&#39;s how Wozniak got the Apple II to store 140 KB in single density, single sided 5.25&quot; floppies, where other systems, which were using FM (similar to Manchester Coding) only attained 90 KB in the same disks.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-alegrigoriev odd alt thread-odd thread-alt depth-1" id="comment-1123893">
				<div id="div-comment-1123893" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/alegr1' rel='external nofollow' class='url'>alegr1</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140512-00/?p=1013#comment-1123893">
			May 12, 2014 at 8:03 am</a>		</div>

		<p>@Brian EE:</p>
<p>Yes, more effective encoding schemes (such as RLL 2,7) allow flux reversals only every 3 to 8 clocks (2 to 7 clocks without reversal).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1123903">
				<div id="div-comment-1123903" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140512-00/?p=1013#comment-1123903">
			May 12, 2014 at 8:11 am</a>		</div>

		<p>There must be some reason why they don&#39;t use a non-seeking head on a clock track. Oh wait removable media.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-alegrigoriev odd alt thread-odd thread-alt depth-1" id="comment-1123913">
				<div id="div-comment-1123913" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/alegr1' rel='external nofollow' class='url'>alegr1</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140512-00/?p=1013#comment-1123913">
			May 12, 2014 at 10:29 am</a>		</div>

		<p>@Joshua:</p>
<p>You&#39;re kidding, right? &quot;a non-seeking head on a clock track&quot; doesn&#39;t make any sense whatsoever, for removable or fixed media.</p>
<div class="post">[<em>Um, you do realize that all floppy disks had a clock track. (The index hole.) It&#39;s just that the resolution of that track was 1 bit per revolution, which is too coarse for maintaining accurate clocking. Joshua is proposing that one track on the drive be a dedicated clock track, and that there be a dedicated head for reading it. -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-alegrigoriev even thread-even depth-1" id="comment-1123923">
				<div id="div-comment-1123923" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/alegr1' rel='external nofollow' class='url'>alegr1</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140512-00/?p=1013#comment-1123923">
			May 12, 2014 at 10:33 am</a>		</div>

		<p>[You&#39;re thinking about it wrong. 0 and 1 are not levels. They are transitions. Staying at the same level = 0. Changing levels = 1. Consecutive 0&#39;s means &quot;staying at the same level for a long time&quot;, which means that you lose the clock. -Raymond]</p>
<p>YOU&#39;re thinking about it wrong. There is no reason to not allow transition in a few consecutive clocks. You don&#39;t also want to allow transitions next to each other.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-alegrigoriev odd alt thread-odd thread-alt depth-1" id="comment-1123933">
				<div id="div-comment-1123933" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/alegr1' rel='external nofollow' class='url'>alegr1</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140512-00/?p=1013#comment-1123933">
			May 12, 2014 at 10:36 am</a>		</div>

		<p>&gt;There is no reason to not allow transition in a few consecutive clocks.</p>
<p>Make it &quot;to not allow NO transition for a few consecutive clocks&quot;. Means you can have a string of zeros (of limited length).</p>
<p>Clock recovery PLLs can do a good job.</p>
<div class="post">[<em>Go tell Steve Wozniak that he designed his floppy drive wrong. -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-alegrigoriev even thread-even depth-1" id="comment-1123943">
				<div id="div-comment-1123943" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/alegr1' rel='external nofollow' class='url'>alegr1</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140512-00/?p=1013#comment-1123943">
			May 12, 2014 at 10:43 am</a>		</div>

		<p>[Um, you do realize that all floppy disks had a clock track. (The index hole.) It&#39;s just that the resolution of that track was 1 bit per revolution, which is too coarse for maintaining accurate clocking. Joshua is proposing that one track on the drive be a dedicated clock track, and that there be a dedicated head for reading it. -Raymond]</p>
<p>The index hole is not needed for reading. The sector number is in the header. The hole only provides the start of track for formatting.</p>
<p>Using a separate track for clock is a) impossible because of mecanical jitter and impredictable skew which would change because of temperature; b) impossible because different zones use different bit clock rate; c) not necessary because the clock recovery is a solved problem, which works in all fields of digital communications.</p>
<div class="post">[<em>Right. Nobody actually used the index hole for clocking, but it demonstrated the point: A dedicated track for clocking. Wikipedia says that <a href="http://en.wikipedia.org/wiki/Clock_recovery">there is a limit to how long you can go without a transition</a>, so if it&#39;s a solved problem, you need to update Wikipedia. -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-alegrigoriev odd alt thread-odd thread-alt depth-1" id="comment-1123953">
				<div id="div-comment-1123953" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/alegr1' rel='external nofollow' class='url'>alegr1</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140512-00/?p=1013#comment-1123953">
			May 12, 2014 at 11:14 am</a>		</div>

		<p>[Go tell Steve Wozniak that he designed his floppy drive wrong. -Raymond]</p>
<p>The magnetic recording technology went a long way since then. The next step after MFM was so called group recording (first RLL version), which used up to two clocks with no flux transition. Later RLL variants allowed for even longer no-transition runs.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-alegrigoriev even thread-even depth-1" id="comment-1123963">
				<div id="div-comment-1123963" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/alegr1' rel='external nofollow' class='url'>alegr1</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140512-00/?p=1013#comment-1123963">
			May 12, 2014 at 11:24 am</a>		</div>

		<p>[Wikipedia says that there is a limit to how long you can go without a transition, so if it&#39;s a solved problem, you need to update Wikipedia. -Raymond]</p>
<p>You&#39;re citing the article on clock recovery technology to counteract an argument that clock recovery is an existing technology?</p>
<p>Oh, and by the way, in 8/10 encoding (used in many applications, such as CD, Ethernet, FC, IB) 6 clocks can go without a transition. A clock recovery circuit can handle that OK.</p>
<div class="post">[<em>Sorry, I thought you were claiming that &quot;you cannot have too many 0&#39;s in a row&quot; was a solved problem. -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1123973">
				<div id="div-comment-1123973" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Roger Lipscombe</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140512-00/?p=1013#comment-1123973">
			May 12, 2014 at 11:39 am</a>		</div>

		<p>Er, guys, the Apple II came out in 1977. I wonder whether, back then, the issues with clock sync hadn&#39;t been completely figured out? Raymond&#39;s post is an example of an interesting recurrence caused when you don&#39;t allow consecutive zero bits. More advanced circuitry and logic (possibly even before 1977) would allow strings of zero bits, but that&#39;s not the central point of the post.</p>
<p>(Is there the opposite of the nitpicker&#39;s corner around here?)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1123983">
				<div id="div-comment-1123983" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Mark</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140512-00/?p=1013#comment-1123983">
			May 12, 2014 at 12:21 pm</a>		</div>

		<p>Exactly what Roger said &#8211; PLLs were cutting edge in the 70s, and didn&#39;t really become prevalent until the next decade.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1123993">
				<div id="div-comment-1123993" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">lefty</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140512-00/?p=1013#comment-1123993">
			May 12, 2014 at 4:26 pm</a>		</div>

		<p>&quot;Okay, now that we understand the enumerative justification for the recurrence&#8230;&quot;</p>
<p>For groups of &#39;we&#39; that don&#39;t include me. &nbsp;I barely understand the snippet I quoted.</p>
<div class="post">[<em><a href="http://blogs.msdn.com/b/oldnewthing/archive/2014/04/14/10516909.aspx">As I noted some time ago</a>, when you see a recurrence of the form <var>A</var> + <var>B</var>, that means do <var>A</var>, followed by <var>B</var>. The previous two paragraphs described the two cases. Now we just need to do one, followed by the other. -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1124003">
				<div id="div-comment-1124003" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Paul</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140512-00/?p=1013#comment-1124003">
			May 13, 2014 at 2:34 am</a>		</div>

		<p>I copied the code into a &quot;.js&quot; file and executed it with a double click, but it says &quot;&#39;console&#39; is undefined&quot;. What am I doing wrong? </p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1124013">
				<div id="div-comment-1124013" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">acq</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140512-00/?p=1013#comment-1124013">
			May 13, 2014 at 2:57 am</a>		</div>

		<p>Paul, if you&#39;re running the script from the windows scripting host add the line:</p>
<p>function pr( s ) { WScript.Echo( s ); }</p>
<p>and replace GCR(8, console.log); with GCR( 8, pr );</p>
<p>Still I don&#39;t know how to run from the Windows command line the code from here: <a rel="nofollow" target="_new" href="http://blogs.msdn.com/b/oldnewthing/archive/2014/04/14/10516909.aspx">blogs.msdn.com/&#8230;/10516909.aspx</a> apart from installing node.js. Maybe somebody knows.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1124093">
				<div id="div-comment-1124093" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Mark</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140512-00/?p=1013#comment-1124093">
			May 13, 2014 at 8:34 am</a>		</div>

		<p>Just paste it into the console of your browser.</p>
<p>I needed to do GCR(8, function(x) {console.log(x)}); on Chrome.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1124113">
				<div id="div-comment-1124113" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Action&lt;string&gt; s =&gt; f(s++)</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140512-00/?p=1013#comment-1124113">
			May 13, 2014 at 9:17 am</a>		</div>

		<p>I translated it to C# and executed it. Then I changed 8 to 4000000000 (uint arg) to be a silly ***. It stack overflowed.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1124723">
				<div id="div-comment-1124723" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">smf</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140512-00/?p=1013#comment-1124723">
			May 16, 2014 at 5:18 am</a>		</div>

		<p>@alegr1</p>
<p>&quot;The next step after MFM was so called group recording&quot;</p>
<p>Wozniak&#39;s floppy was group recording. MFM added a clock bit between each data bit that guaranteed there was always a transition between the data bits. Giving you 4 actual bits for 8 bits on the disk. Group recording was developed at Apple and commodore simultaneously, Apple had 5 data bits for 8 bits on the disk while commodore had 4 data bits for 5 bits on disk.</p>
<p>@Raymond</p>
<p>&quot;[Go tell Steve Wozniak that he designed his floppy drive wrong. -Raymond]&quot;</p>
<p>commodore achieved an extra 25% storage, so arguably he did. He later improved it by storing 6 data bits in 8 bits on disk, commodore still beat them by 6-7%.</p>
<p>commodore designed their floppy drives wrong in other ways (especially the later consumer models), it&#39;s all ancient history now though.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1124903">
				<div id="div-comment-1124903" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Querulous</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140512-00/?p=1013#comment-1124903">
			May 17, 2014 at 6:26 am</a>		</div>

		<p>What is the programming language being used here to define the GCR function? Is it Javascript? If so, how do I execute it using some online javascript engine like <a rel="nofollow" target="_new" href="http://www.compileonline.com/try_javascript_online.php?">http://www.compileonline.com/try_javascript_online.php</a> </p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

