<html>
<head>
<title>Revised notes on the reliability of FlushFileBuffers</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>Revised notes on the reliability of FlushFileBuffers</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>May 10, 2017 / year-entry #112</td></tr>
<tr><td><b>Tags:</b></td><td>code</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20170510-00/?p=95505</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>10</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">A check-in on what's happened over the past few years.</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>
Some time ago,
I wrote on
<a HREF="https://blogs.msdn.microsoft.com/oldnewthing/20100909-00/?p=12913">
the hard drives that lie about flushing file buffers
(and the drivers who love them)</a>.
Here's a check-in on what's happened over the past few years.
</p>
<p>
As things stand today,
you can rely on
<code>Flush&shy;File&shy;Buffers</code>
committing your changes to physical disk.
(Noting of course that
<a HREF="https://blogs.msdn.microsoft.com/oldnewthing/20100909-00/?p=12913">
this operation is expensive
and may not actually help you</a>
if you aren't updating your data transactionally.)
</p>
<p>
Historically,
NTFS used the
<a HREF="https://msdn.microsoft.com/library/windows/desktop/dd979523(v=vs.85).aspx">
Force Unit Access flag</a>
to indicate to the driver that it should wait
until the information is committed to non-volatile storage
before signaling that the operation has completed.
The conventional technique to force writes to
go to media is to pass
<code>FILE_<wbr>FLAG_<wbr>WRITE_<wbr>THROUGH</code>,
which internally tells the file system to set the
FUA flag on I/O operations to that file.
But as noted in
<a HREF="http://perspectives.mvdirona.com/2008/04/disks-lies-and-damn-disks/">
this article</a>,
in the Windows 7 time frame,
EIDE and SATA drivers do not respect the FUA flag,
which means that your writes may still be buffered
by the drive's internal memory.
</p>
<p>
Fortunately,
even with those drivers,
the <code>Flush&shy;File&shy;Buffers</code>
function will send the
<code>FLUSH_<wbr>CACHE</code> command,
which tells the drive,
"Hey, I know you have internal buffers.
Look at me when I'm talking to you.
Yes, you.
With the internal buffers.
Go flush them."
Fortunately, nearly all drivers in the Windows 7 era
respect that command.
(There are a few stragglers that still ignore it.)
</p>
<p>
Fast-forward to Windows 8.
Support for
<code>FLUSH_<wbr>CACHE</code> is required
by all drives in order to be declared
compatible with Windows 8,
and
the Windows storage team has worked with hard drive
vendors to ensure that
<code>FLUSH_<wbr>CACHE</code> is properly respected.
NTFS switched from using the FUA flag
to
the <code>FLUSH_<wbr>CACHE</code> command
to enforce
consistency of its metadata.
</p>
<p>
Note that if an application opens a file with the
<code>FILE_<wbr>FLAG_<wbr>WRITE_<wbr>THROUGH</code>
flag,
NTFS still sets the FUA flag on the write operations.
But as noted above,
EIDE and SATA drivers do not respect the FUA flag,
so asking for
<code>FILE_<wbr>FLAG_<wbr>WRITE_<wbr>THROUGH</code>
doesn't give you any additional robustness
in those cases.
</p>
<p>
If you want to flush the data to physical media,
the <code>Flush&shy;File&shy;Buffers</code> function
is your ticket.
</p>
<p>
As noted in the linked article,
there are options in the UI to disable the signal
to flush intermediate buffers,
but you should use them only if you have a separate UPS
for the hard drive,
or if you simply don't mind that the drive can get
corrupted in the event of a power failure.</p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (10)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1 parent" id="comment-1295675">
				<div id="div-comment-1295675" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Karellen</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170510-00/?p=95505#comment-1295675">
			May 10, 2017 at 7:21 am</a>		</div>

		<p>So why doesn&#8217;t FILE_FLAG_WRITE_THROUGH cause a FlushFileBuffers() on every write?</p>
<p>FILE_FLAG_WRITE_THROUGH is not documented as &#8220;setting the FUA flag on write operations&#8221;, it is documented as &#8220;Write operations will not go through any intermediate cache, they will go directly to disk.&#8221;[0] If calling FlushFileBuffers() is what it takes to do that, why does FILE_FLAG_WRITE_THROUGH not do it?</p>
<p>Yes, yes, the linked article points out that FlushFileBuffers() kills your performance, but that&#8217;s what ignoring/flushing caches does, and anyone who asks for FILE_FLAG_WRITE_THROUGH has explicitly requested that tradeoff be made.</p>
<p>Or should the documentation for FILE_FLAG_WRITE_THROUGH be updated to mention that it may be a no-op?</p>
<p>[0] <a href="https://msdn.microsoft.com/en-us/library/windows/desktop/aa363858(v=vs.85)" rel="nofollow">https://msdn.microsoft.com/en-us/library/windows/desktop/aa363858(v=vs.85)</a>.aspx</p>

		
				</div>
		<ol class="children">
		<li class="comment odd alt depth-2 parent" id="comment-1295687">
				<div id="div-comment-1295687" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Pierre B.</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170510-00/?p=95505#comment-1295687">
			May 10, 2017 at 7:47 am</a>		</div>

		<p>Stand back a little and you will find the answer.</p>
<p>First, there is the problem that programs would suddenly be slower. As Raymond often mentioned, making a new OS version that is perceptibly worse would prevent its adoption. If Windows 8 had made write-through more strict, then existing programs (that may even have used it inadvertently) would be worse.</p>
<p>Second, there is the problem of backward compatibility. If you started to write code using write-through instead of flush-buffers under Windows 8, users of older OS would not get the correct behaviour because these previosu OS would not enforce it on the driver level.</p>

		
				</div>
		<ol class="children">
		<li class="comment even depth-3" id="comment-1295745">
				<div id="div-comment-1295745" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Karellen</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170510-00/?p=95505#comment-1295745">
			May 10, 2017 at 1:41 pm</a>		</div>

		<p>But the only reason that the program was running &#8220;faster&#8221; before is because it was buggy and incorrect! It wasn&#8217;t actually doing a thing it was meant to be doing.</p>
<p>And yes, if you fix a bug in a new version of your OS, older versions of your OS are not magically fixed also. So? Are you claiming that this is a good reason not to fix bugs in new versions of your OS?</p>
<p>OTOH, if you&#8217;re happy to trade speed for I/O correctness, Windows could make most programs run much quicker (if less correctly) by simply terminating them when they perform their first I/O operation. Tada!</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment byuser comment-author-mngoldeneagle odd alt depth-2 parent" id="comment-1295695">
				<div id="div-comment-1295695" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/MNGoldenEagle' rel='external nofollow' class='url'>MNGoldenEagle</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170510-00/?p=95505#comment-1295695">
			May 10, 2017 at 7:52 am</a>		</div>

		<p>Presumably this flag is still honored by SCSI drives, so it does have <i>some</i> utility, albeit not consistently.  Microsoft could make the flag trigger FlushFileBuffers in a future version of Windows 10 (they&#8217;ve done stuff like that before, though it&#8217;s rare), but presumably there isn&#8217;t much impetus to do so, especially if no customers have come demanding that the FILE_FLAG_WRITE_THROUGH behave as documented.</p>

		
				</div>
		<ol class="children">
		<li class="comment even depth-3" id="comment-1295775">
				<div id="div-comment-1295775" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Dave</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170510-00/?p=95505#comment-1295775">
			May 11, 2017 at 1:40 am</a>		</div>

		<p>SCSI drives had this broken long before IDE did.  I remember writing drivers for SCSI drives in the late 80s/early 90s and had to include a whole table of workarounds for various bugs in this mechanism.  The worst one that I remember was the Iomega devices, which threw away the data write if you set the&#8230; whatever the equivalent of FUA was at the time.  Took us a long time to figure that one out (because there were so many other bugs and error conditions that could have caused that or a similar-looking problem).  Reported it to Iomega, their response was &#8220;well no-one uses that flag anyway&#8221;.  Pretty much said it all for Iomega&#8217;s engineering approach as a whole.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment odd alt depth-2 parent" id="comment-1295766">
				<div id="div-comment-1295766" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Drak</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170510-00/?p=95505#comment-1295766">
			May 10, 2017 at 10:14 pm</a>		</div>

		<p>&#8220;Write operations will not go through any intermediate cache, they will go directly to disk.&#8221;</p>
<p>Well, they do go directly to the disk. But the disk keeps them in its own buffers. It&#8217;s quite possible that even with the flushing on, the writes still go through the buffers, but simply do not linger there. The only thing you know for sure is that Windows isn&#8217;t storing the info in an intermediate cache itself.</p>

		
				</div>
		<ol class="children">
		<li class="comment even depth-3" id="comment-1295795">
				<div id="div-comment-1295795" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">DWalker07</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170510-00/?p=95505#comment-1295795">
			May 11, 2017 at 8:00 am</a>		</div>

		<p>I think &#8220;go directly to disk&#8221; in this context means &#8220;go onto the magnetic platters&#8221; (or into SSD flash memory).  </p>
<p>The disk is the whole drive and all of its electronics, and the disk is also the round thing or the set of stacked round things (the discs) so the terminology is ambiguous.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1295725">
				<div id="div-comment-1295725" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170510-00/?p=95505#comment-1295725">
			May 10, 2017 at 10:51 am</a>		</div>

		<p>I&#8217;m glad that somebody finally did in that hydra.</p>
<p>I was pondering the sequence of buy disk, run published test to detect that flush doesn&#8217;t work, than return disk as defective, running in a loop until the manufacture got the point.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1295755">
				<div id="div-comment-1295755" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://nbtparse.org' rel='external nofollow' class='url'>Kevin</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170510-00/?p=95505#comment-1295755">
			May 10, 2017 at 2:24 pm</a>		</div>

		<p>Semi-related: Raymond, is TxF actually going away anytime soon, or are they just saying that?</p>
<p><a href="https://msdn.microsoft.com/en-us/library/windows/desktop/hh802690(v=vs.85)" rel="nofollow">https://msdn.microsoft.com/en-us/library/windows/desktop/hh802690(v=vs.85)</a>.aspx</p>
<p>I&#8217;m asking mostly because, on non-TxF systems, you have to do much more complicated things to get TxF-like semantics, e.g. see <a href="https://www.sqlite.org/atomiccommit.html#_multi_file_commit" rel="nofollow">https://www.sqlite.org/atomiccommit.html#_multi_file_commit</a>, and I want to know whether this is going to become true of Windows as well.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1295785">
				<div id="div-comment-1295785" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Neil</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170510-00/?p=95505#comment-1295785">
			May 11, 2017 at 3:25 am</a>		</div>

		<p>(The Atom feed thinks this is dated 20th February, although the RSS feed agrees with 10th May.)</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

