<html>
<head>
<title>When something gets added to a queue, it takes time for it to come out the front of the queue</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>When something gets added to a queue, it takes time for it to come out the front of the queue</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>February 13, 2014 / year-entry #43</td></tr>
<tr><td><b>Tags:</b></td><td>code</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20140213-00/?p=1773</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>9</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">A customer wanted to know why the input they were simulating with Send­Input is not being reported by Get­Async­Key­State. Isn't that supposed to reflect the instantaneous keyboard state? I just pushed the key down (or at least simulated it), but when I ask if the key is down, I'm told "Nope." What's the deal? INPUT...</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>
A customer wanted to know why the input they were simulating with
<code>Send&shy;Input</code> is not being reported by
<code>Get&shy;Async&shy;Key&shy;State</code>.
Isn't that supposed to reflect the instantaneous keyboard state?
I just pushed the key down (or at least simulated it),
but when I ask if the key is down, I'm told "Nope."
What's the deal?
</p>
<pre>
INPUT input = { 0 };
input.type = INPUT_KEYBOARD;
input.ki.wVk = 'A';
input.ki.wScan = 'A';
input.ki.dwFlags = 0; // key down
SendInput(1, &amp;input, sizeof(INPUT));

assert(GetAsyncKeyState('A') &lt; 0);
</pre>
<p>
The <code>Send&shy;Input</code> call simulates pressing the
<kbd>A</kbd> key,
and the code immediately checks whether the key is down.
</p>
<p>
But sometimes the assertion fires.
How can that be?
</p>
<p>
Because you're asking the question before the window manager
has fully processed the input.
Here's a little diagram.
</p>
<table BORDER=0 CELLPADDING=0 CELLSPACING=0
    STYLE="border-collapse: collapse">
<tr>
<td ALIGN=center STYLE="background-color: #CCFDCC; width: 5em; padding: 1ex">Mouse</td>
<td></td>
<td ALIGN=center STYLE="background-color: #CCFDCC; width: 5em; padding: 1ex">Keyboard</td>
<td></td>
<td ALIGN=center STYLE="background-color: #CCFDCC; width: 5em; padding: 1ex">Hardware</td>
</tr>
<tr>
<td STYLE="width: 5em"></td>
<td ALIGN=center>&#x2198;</td>
<td ALIGN=center>&darr;</td>
<td ALIGN=center>&#x2199;</td>
<td STYLE="width: 5em"></td>
</tr>
<tr>
<td ALIGN=center STYLE="background-color: #CCFDCC; width: 5em; padding: 1ex">SendInput</td>
<td ALIGN=center>&rarr;</td>
<td ROWSPAN=2 ALIGN=center STYLE="background-color: #CCFDCC; width: 5em; padding: 1ex">Hardware<br>Input<br>Queue</td>
<td></td>
<td></td>
</tr>
<tr>
<td COLSPAN=4 STYLE="height: 4em;">&nbsp;</td>
</tr>
<tr>
<td></td>
<td></td>
<td ALIGN=center>&#x21B7;</td>
<td></td>
<td></td>
</tr>
<tr>
<td></td>
<td></td>
<td ALIGN=center STYLE="background-color: #CCFDCC; width: 5em; padding: 1ex">
    Dequeue</p>
<td></td>
<td VALIGN=middle STYLE="position: relative; width: 5em">
<div STYLE="position: absolute; width: 20em">
    Raw Input Thread
    </div>
</td>
</tr>
<tr>
<td></td>
<td></td>
<td ALIGN=center>&darr;</td>
<td></td>
<td></td>
</tr>
<tr>
<td></td>
<td></td>
<td ALIGN=center STYLE="background-color: #CCFDCC; width: 5em; padding: 1ex">Low<br>Level<br>Hooks</td>
<td></td>
<td VALIGN=middle STYLE="position: relative; width: 5em">
<div STYLE="position: absolute; width: 20em">
    Applications
    </div>
</td>
</tr>
<tr>
<td></td>
<td></td>
<td ALIGN=center>&darr;</td>
<td></td>
<td></td>
</tr>
<tr>
<td></td>
<td></td>
<td ALIGN=center STYLE="background-color: #CCFDCC; width: 5em; padding: 1ex">Update<br>Input<br>State</p>
<td></td>
<td STYLE="position: relative; width: 5em">
<div STYLE="position: absolute; width: 20em">
    Raw Input Thread
    </div>
</td>
</tr>
<tr>
<td></td>
<td ALIGN=center>&#x2199;</td>
<td ALIGN=center>&darr;</td>
<td ALIGN=center>&#x2198;</td>
<td></td>
</tr>
</tr>
<tr>
<td ALIGN=center STYLE="background-color: #CCFDCC; width: 5em; padding: 1ex">App 1</td>
<td></td>
<td ALIGN=center STYLE="background-color: #CCFDCC; width: 5em; padding: 1ex">App 2</td>
<td></td>
<td ALIGN=center STYLE="background-color: #CCFDCC; width: 5em; padding: 1ex">App 3</td>
</tr>
</table>
<p>
When you call <code>Send&shy;Input</code>,
you're putting input packets into the system hardware input queue.
(Note: Not the official term. That's just what I'm calling it today.)
This is the same input queue that the hardware device driver stack
uses when physical devices report events.
</p>
<p>
The message goes into the hardware input queue, where the
Raw Input Thread picks them up.
The Raw Input Thread runs at high priority, so it's probably
going to pick it up really quickly,
but on a multi-core machine,
your code can keep running while the second core runs the
Raw Input Thread.
And the Raw Input thread has some stuff it needs to do once
it dequeues the event.
If there are low-level input hooks,
it has to call each of those hooks to see if any of them want
to reject the input.
(And those hooks can take who-knows-how-long to decide.)
Only after all the low-level hooks sign off on the input
is the Raw Input Thread allowed to modify the input state and cause
<code>Get&shy;Async&shy;Key&shy;State</code> to report that
the key is down.
</p>
<p>
And if you manage to look before all this happens,
your code will see that the key isn't down yet.
</p>
<p>
It's like dropping a letter in the mailbox and then calling
somebody to say,
"Did you get my letter yet?"
Okay, the Raw Input Thread is faster than the Postal Service,
but you still have to give it a chance to get the message,
query each of the low-level input hooks,
decide who the message should be delivered to,
and put it in their message queue.</p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (9)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-1106473">
				<div id="div-comment-1106473" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Henke37</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140213-00/?p=1773#comment-1106473">
			February 13, 2014 at 9:00 am</a>		</div>

		<p>I think the drawing is faulty. A line is missing, another line is too long and an arrow is pointing the wrong way.</p>
<div class="post">[<em>It seems Firefox gets the borders of the &quot;Hardware Input Queue&quot; box wrong; Chrome and Opera get the borders of the &quot;SendInput&quot; box wrong. So fine, I got rid of the borders entirely. -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-dwalker-wk odd alt thread-odd thread-alt depth-1" id="comment-1106503">
				<div id="div-comment-1106503" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/DWalker' rel='external nofollow' class='url'>DWalker</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140213-00/?p=1773#comment-1106503">
			February 13, 2014 at 10:51 am</a>		</div>

		<p>Nice chart! &nbsp;I like it.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1106513">
				<div id="div-comment-1106513" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">internalsio</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140213-00/?p=1773#comment-1106513">
			February 13, 2014 at 11:59 am</a>		</div>

		<p>This is rather handy! Thanks for constructing the visual :D</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1106523">
				<div id="div-comment-1106523" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140213-00/?p=1773#comment-1106523">
			February 13, 2014 at 1:15 pm</a>		</div>

		<p>[It seems Firefox gets the borders of the &quot;Hardware Input Queue&quot; box wrong; Chrome and Opera get the borders of the &quot;SendInput&quot; box wrong. So fine, I got rid of the borders entirely. -Raymond]</p>
<p>That&#39;s a good case for filing a bug with the respective browsers if I ever saw one.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1106533">
				<div id="div-comment-1106533" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Myria</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140213-00/?p=1773#comment-1106533">
			February 13, 2014 at 1:25 pm</a>		</div>

		<p>I just wish that Windows would consistently send key-up messages for the same virtual key codes that it send key-down messages for.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-joshuaganes odd alt thread-odd thread-alt depth-1" id="comment-1106543">
				<div id="div-comment-1106543" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Joshua+Ganes' rel='external nofollow' class='url'>Joshua Ganes</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140213-00/?p=1773#comment-1106543">
			February 13, 2014 at 1:31 pm</a>		</div>

		<p>I like your analogy substituting the postal service for a message queue. I find I use the same thought process when I run into trouble. It prevents me from the dangerous thought pattern of imagining everything a computer does to be atomic and instantaneous and helps me think through race condition bugs.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1106603">
				<div id="div-comment-1106603" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Anon</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140213-00/?p=1773#comment-1106603">
			February 14, 2014 at 6:44 am</a>		</div>

		<p>@Joshua</p>
<p>&quot;&quot;&quot;</p>
<p>Closed</p>
<p>Will Not Fix</p>
<p>We have no interest in not further damaging the Internet to forward our own idiotic design decisions at this time.</p>
<p>&quot;&quot;&quot;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-dwalker-wk odd alt thread-odd thread-alt depth-1" id="comment-1106853">
				<div id="div-comment-1106853" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/DWalker' rel='external nofollow' class='url'>DWalker</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140213-00/?p=1773#comment-1106853">
			February 14, 2014 at 12:33 pm</a>		</div>

		<p>@Anon: &nbsp;No interest in not further damaging? </p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1107173">
				<div id="div-comment-1107173" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">John Doe</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140213-00/?p=1773#comment-1107173">
			February 17, 2014 at 8:27 am</a>		</div>

		<p>That diagram explains the input pipeline better than the whole MSDN put together.</p>
<p>@Raymond, you ought to have a specific tag for this kind of posts. I know you usually say this is not official (or that&#39;s the expected disclaimer, somewhere, somehow), but the diagram explains a whole lot!</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

