<html>
<head>
<title>Why are hidden files with a leading tilde treated as super-hidden?</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>Why are hidden files with a leading tilde treated as super-hidden?</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>May 26, 2017 / year-entry #124</td></tr>
<tr><td><b>Tags:</b></td><td>tipssupport</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20170526-00/?p=96235</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>15</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">Because in practice they are ultra-temporary.</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>
Open a command prompt and perform the following operations:
</p>
<pre>
C:&gt; cd /d %USERPROFILE%\Desktop
C:\Users\Bob\Desktop&gt; echo 12345 &gt; ~test.txt
C:\Users\Bob\Desktop&gt; attrib +h ~test.txt
</pre>
<p>
This creates a hidden file called <code>~test.txt</code>
on the desktop.
Configure Explorer to show hidden files.
Observe that the <code>~test.txt</code> file does not appear.
</p>
<p>
But wait, there's more,
if you're running Windows&nbsp;7 (but not Windows&nbsp;8 or higher):
Configure Explorer to show both hidden files and protected
system files.
The <code>~test.txt</code> file will now appear,
and it will be dimmed because it is hidden.
Use <kbd>Ctrl</kbd>+<kbd>C</kbd> and
<kbd>Ctrl</kbd>+<kbd>V</kbd> to create a copy of the file.
Observe that the copy has both the hidden and system attributes,
even though the original did not have the system attribute.
</p>
<p>
A customer discovered this behavior and wanted to know
<a HREF="https://blogs.msdn.microsoft.com/oldnewthing/20160329-00/?p=93214">
whether it was a bug or a feature</a> (or a buggy feature).
</p>
<p>
There are multiple things going on here, so let's take them separately.
</p>
<p>
First, why doesn't <code>~test.txt</code> appear on the desktop
even though Explorer is configured to show hidden files?
</p>
<p>
This behavior dates back to
Windows&nbsp;Vista.
If there is a hidden file whose name begins with a tilde,
then Explorer treats it as if
the system and hidden attributes are both set,
causing the file to be treated as
<a HREF="https://blogs.msdn.microsoft.com/oldnewthing/20140317-00/?p=1493">
super-hidden</a>.
That's why you have to disable
"Hide protected operating system files"
in order to see them.
</p>
<p>
Why does this rule exist?
</p>
<p>
In practice, hidden files that begin with a tilde are
temporary files, usually to represent auto-saved contents,
or as part of a write-rename-delete save operation.
These files are not intended to be user-manipulated,
so Explorer treats them as super-hidden so that the user
won't be tempted to rename or delete them and mess up
the operation of the program that created them.
</p>
<p>
Second, why does copying these artificially-super-hidden files
cause the copy to become super-hidden for real?
</p>
<p>
This is a case where Explorer faked itself out.
</p>
<p>
The code that creates item IDs for files reads the file
attributes and records them for future reference.
It is this code that checks for the leading tilde
and if found internally sets the
<code>FILE_<wbr>ATTRIBUTE_<wbr>SYSTEM</code> flag
on the item it created.
This is what causes hidden files beginning with a tilde
to be treated as super-hidden.
</p>
<p>
The problem is that this code ends up doing too good a job
of fooling the rest of the shell.
There is no flag anywhere that says,
"Psst, by the way, the system attribute you see on this item?
Yeah, it's a total fabrication. The real file doesn't have
that attribute."
</p>
<p>
When it comes time to copy the file,
the shell looks at the item ID and says,
"Well, it says here that the original has the system attribute,
so I'll set the system attribute on the copy."
The shell copy engine doesn't know that
<a HREF="http://tvtropes.org/pmwiki/pmwiki.php/Main/TheCakeIsALie">
the attribute is a lie</a>.
</p>
<p>
This problem was fixed in Windows&nbsp;8 as a side-effect of a
re-write of the way the shell copy engine copies files.
The shell now uses the
<code>Copy&shy;File2</code> function to copy files,
relying on the kernel function to do the heavy lifting,
and using the callback function to monitor progress and
possibly cancel the operation.
The kernel function doesn't know about these mysterious shell item IDs.
All it knows how to do is copy files,
and it obtains the attributes directly from the source file,
which as we recall is marked hidden but not system.
</p>
<p>
<b>Bonus chatter</b>:
The "heavy lifting" alluded to above can be quite substantial.
In addition to copying the file contents, it also copies the
alternate data streams and file attributes,
and can also take advantage of things like
<a HREF="https://technet.microsoft.com/en-us/library/hh831628(v=ws.11).aspx">
copy offload</a>.</p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (15)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment byuser comment-author-wndsks even thread-even depth-1" id="comment-1297705">
				<div id="div-comment-1297705" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/skSdnW' rel='external nofollow' class='url'>skSdnW</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170526-00/?p=96235#comment-1297705">
			May 26, 2017 at 7:25 am</a>		</div>

		<p>So Vista/7 has a custom copy engine that just uses CreateFile+ReadFile+WriteFile?  Or is it using CopyFileEx and then additionally applies the attributes from the pidl?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1 parent" id="comment-1297715">
				<div id="div-comment-1297715" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Lars</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170526-00/?p=96235#comment-1297715">
			May 26, 2017 at 7:56 am</a>		</div>

		<p>I am not a Windows user anymore (mostly), but I remember from back when I was that there would be lots of files with leading tildes sprinkled around in temp directories. Stale temp files, not ones in use. It seems counterproductive to prevent the user from deleting files that may well be stale and unneeded.</p>

		
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-cheong even depth-2" id="comment-1297955">
				<div id="div-comment-1297955" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/cheong00' rel='external nofollow' class='url'>cheong00</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170526-00/?p=96235#comment-1297955">
			May 28, 2017 at 7:42 pm</a>		</div>

		<p>These files were supposed to be deleted with &#8220;disk cleanup&#8221; tool.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment odd alt thread-even depth-1 parent" id="comment-1297725">
				<div id="div-comment-1297725" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">DWalker07</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170526-00/?p=96235#comment-1297725">
			May 26, 2017 at 8:09 am</a>		</div>

		<p>Right, those often-stale tilde temp files, in temp directories, can be years old. </p>
<p>We need an attribute that says &#8220;delete this file on reboot&#8221;.  Not for use by &#8220;Microsoft Office auto-recover in case of crash&#8221;, but for use by programs that write scratch info to files during processing which never needs to be recovered. </p>
<p>MS Office auto-recover files can PROBABLY be deleted if they are a year old&#8230;.</p>

		
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-aadsso-1live-com00034001b11d0d03 even depth-2 parent" id="comment-1297726">
				<div id="div-comment-1297726" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Christian+Ullrich' rel='external nofollow' class='url'>Christian Ullrich</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170526-00/?p=96235#comment-1297726">
			May 26, 2017 at 8:20 am</a>		</div>

		<p>So the system should trawl all directories on all volumes on startup, looking for files with that bit set?</p>
<p>ISTM that many such cases could be fixed by judicious use of FILE_FLAG_DELETE_ON_CLOSE.</p>

		
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-aadsso-1live-com00034001b11d0d03 odd alt depth-3" id="comment-1297735">
				<div id="div-comment-1297735" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Christian+Ullrich' rel='external nofollow' class='url'>Christian Ullrich</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170526-00/?p=96235#comment-1297735">
			May 26, 2017 at 8:21 am</a>		</div>

		<p>&#8220;use of FILE_FLAG_DELETE_ON_CLOSE.&#8221;</p>
<p>For which, of course, the first Google result is an Old New Thing post .</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even depth-3 parent" id="comment-1297795">
				<div id="div-comment-1297795" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170526-00/?p=96235#comment-1297795">
			May 26, 2017 at 1:42 pm</a>		</div>

		<p>Requires admin to use. :( Should be able to do it if only owns the file but Windows has a hard time working that way.</p>

		
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-aadsso-1live-com00034001b11d0d03 odd alt depth-4" id="comment-1297875">
				<div id="div-comment-1297875" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Christian+Ullrich' rel='external nofollow' class='url'>Christian Ullrich</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170526-00/?p=96235#comment-1297875">
			May 27, 2017 at 8:21 am</a>		</div>

		<p>Since when does D_O_C need admin rights? It needs FILE_SHARE_DELETE on all concurrently open handles, whether created before or after. (Why is that anyway? The file is deleted as soon as there are no open handles to it anymore, i.e. as soon as all processes have declared not to care about the file anymore. As long as anyone cares, the file stays around. So why share-delete mode?)</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment byuser comment-author-davebacher even depth-3" id="comment-1297805">
				<div id="div-comment-1297805" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Dave+Bacher' rel='external nofollow' class='url'>Dave Bacher</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170526-00/?p=96235#comment-1297805">
			May 26, 2017 at 2:30 pm</a>		</div>

		<p>Imagine an API &#8212; CreateVolatileFile.</p>
<p>I mount a VHD at %USERPROFILE%\AppData\Volatile</p>
<p>At login, I quick format the VHD.  Doing it that way lets you swap it to a RAM drive or dedicated SSD device, if you want to, for speed.  Quick formatting a VHD should take on the order of milliseconds.  You could just use a directory and drop the tree, that&#8217;s reasonably fast too, it just doesn&#8217;t give you as nice of optimization options.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment odd alt depth-2" id="comment-1297765">
				<div id="div-comment-1297765" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://geelaw.blog/' rel='external nofollow' class='url'>GL</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170526-00/?p=96235#comment-1297765">
			May 26, 2017 at 9:41 am</a>		</div>

		<p>One can run cleanmgr on a scheduled basis to remove old files in the temp folder.</p>
<p>What is interesting is that Explorer has got rid of this lie completely. If I create &#8220;~1&#8221; and set it as Hidden, its Properties window has the &#8220;Hidden&#8221; checkbox enabled. If I remove Hidden, and add System and Hidden at the same time, its Properties window has the &#8220;Hidden&#8221; checkbox disabled &#8212; indicating it indeed has the System attribute set. Of course Explorer still displays a hidden &#8220;~1&#8221; as a &#8220;System file&#8221; type file. Double clicking it will bring up the &#8220;You may not want to open it&#8221; dialog. There is one more interesting bug here: the &#8220;You may not want to open it&#8221; dialog says the file is &#8220;.sys&#8221; file while it is not.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment even thread-odd thread-alt depth-1 parent" id="comment-1297745">
				<div id="div-comment-1297745" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Patrick Hughes</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170526-00/?p=96235#comment-1297745">
			May 26, 2017 at 8:50 am</a>		</div>

		<p>Interesting you mention alternate data streams. Those have been treated like red headed step children for a long time and I&#8217;m finally getting ready to abandon their use.</p>

		
				</div>
		<ol class="children">
		<li class="comment odd alt depth-2" id="comment-1297885">
				<div id="div-comment-1297885" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://www.kickstarter.com/projects/129274931/asynchronicity-shell' rel='external nofollow' class='url'>Joshua Schaeffer</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170526-00/?p=96235#comment-1297885">
			May 27, 2017 at 9:50 am</a>		</div>

		<p>Don&#8217;t abandon alternate data streams yet. Most developers haven&#8217;t even been told they exist, lol. Let me give you an example of a file manager that has first-class support for streams.</p>
<p><a href="https://www.kickstarter.com/projects/129274931/asynchronicity-shell" rel="nofollow">https://www.kickstarter.com/projects/129274931/asynchronicity-shell</a></p>
<p>(this is 1/2 answer, 1/2 shameless but highly relevant plug. I wanted to show and discuss with you privately Mr. Chen but you&#8217;re impossible to contact!)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even depth-2" id="comment-1297936">
				<div id="div-comment-1297936" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">ErikF</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170526-00/?p=96235#comment-1297936">
			May 27, 2017 at 7:39 pm</a>		</div>

		<p>Alternate data streams really shouldn&#8217;t be relied on, considering that as soon as you copy a file to a USB stick or network location practically all the metadata tend to disappear. On a local system I can think of useful reasons for Windows (and maybe some system utilities) to use ADS, but I would never use it for normal programs as I can&#8217;t trust that it will be available!</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment odd alt thread-even depth-1" id="comment-1297916">
				<div id="div-comment-1297916" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">640k</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170526-00/?p=96235#comment-1297916">
			May 27, 2017 at 3:33 pm</a>		</div>

		<p>The offload copy engine has been available for lanmanger for ages, at least it worked in the 90-ies. Have you been reinventing the wheel?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-odd thread-alt depth-1" id="comment-1298035">
				<div id="div-comment-1298035" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">kme</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170526-00/?p=96235#comment-1298035">
			May 29, 2017 at 8:25 pm</a>		</div>

		<p>Since the files are treated as super-hidden under the assumption that they&#8217;re short-lived temporary files, maybe the heuristic should be &#8220;hidden, starts with a tilde, and was last modified within the last day&#8221;.</p>
<p>That way stale/orphaned ones will show up.</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

