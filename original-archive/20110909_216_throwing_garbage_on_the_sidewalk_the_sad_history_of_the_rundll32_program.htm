<html>
<head>
<title>Throwing garbage on the sidewalk: The sad history of the rundll32 program</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>Throwing garbage on the sidewalk: The sad history of the rundll32 program</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>September 9, 2011 / year-entry #217</td></tr>
<tr><td><b>Tags:</b></td><td>history</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20110909-00/?p=9683</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>51</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">During the development of Windows Vista, the application comaptibility team traced a bunch of issues back to people corrupting the stack by using the rundll32 program to call functions that were not designed to be called by rundll32. The problems were often subtle. For example, a batch file which used rundll32 incorrectly ended up hanging...</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>During the development of Windows Vista, the application comaptibility team traced a bunch of issues back to people <a href="http://blogs.msdn.com/oldnewthing/archive/2004/01/15/58973.aspx"> corrupting the stack by using the <code>rundll32</code> program to call functions that were not designed to be called by <code>rundll32</code></a>.</p>
<p> The problems were often subtle. For example, a batch file which used <code>rundll32</code> incorrectly ended up hanging because the <code>rundll32</code> process never returned. The misaligned stack resulted in registers being restored from the stack incorrectly, and then the cleanup code inside <code>rundll32</code> ends up getting confused and wedging itself. The programs got away with it on previous versions of Windows by sheer luck. The version of the compiler used by Windows Vista contains different optimizations, and it ended up arranging stack variables and using registers differently, and what in previous versions of Windows was some corruption that went largely unnoticed became corruption that resulted in the program getting stuck in an infinite loop. Lucky no longer. </p>
<p> I was asked to come up with a solution for this problem, to fix the <code>rundll32</code> program so it was more resilient to people who used it incorrectly. To <i>fix other people's bugs for them</i>. </p>
<p> The solution: Before calling the function, push a hundred bytes of garbage onto the stack (in case the called function pops too many bytes off the stack) and save the stack pointer in a global variable. After the function returns, restore the stack pointer, in case the called function pops too many or too few bytes off the stack. I think I may even have saved the processor registers in global variables, I forget. </p>
<p> <b>Do not consider this free license to continue abusing the <code>rundll32</code> program.</b> When the pet store opens on Sundays, that doesn't mean that it's okay to <a href="http://blogs.msdn.com/oldnewthing/archive/2010/03/11/9976571.aspx"> keep throwing garbage on the sidewalk</a>. </p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (51)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-934413">
				<div id="div-comment-934413" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Cesar</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110909-00/?p=9683#comment-934413">
			September 9, 2011 at 7:27 am</a>		</div>

		<p>It would be interesting if rundll32 verified whether the stack/registers were corrupted (by comparing the returned values with the expected values after the return), and complained loudly to the event log in that case (it cannot complain to stderr since that could break too much).</p>
<p>Sadly, even that would be risky. What if, for instance, the garbage passed to the called function made it corrupt the heap, such that it is no longer safe to call into the event log code? Or what if the event log is set to a limited size and configured to BSOD the machine if it ever fills up (I recall seeing an option to do that somewhere)?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-934423">
				<div id="div-comment-934423" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ivan K</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110909-00/?p=9683#comment-934423">
			September 9, 2011 at 7:51 am</a>		</div>

		<p>Run, Raymond, run! From the garbage. Or not. Thanks, legend.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-934433">
				<div id="div-comment-934433" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Dan Bugglin</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110909-00/?p=9683#comment-934433">
			September 9, 2011 at 7:54 am</a>		</div>

		<p>@Cesar That wouldn&#39;t work, who looks at the Event Log unless their computer is broken?</p>
<p>Now if the garbage call blew up with an error or otherwise alerted the user, but ONLY while a debugger was attached, the dev can think &quot;stupid new Windows&quot; all they want, but they&#39;ll know to go and fix the call (ideally), while any app not being debugged will continue working.</p>
<div class="post">[<i>&quot;We run all our tests with the debugger, and the debugger is detecting an error in code we did not write (and therefore cannot fix). How can we disable this error so that our tests continue to run?&quot; -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-934453">
				<div id="div-comment-934453" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Cesar</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110909-00/?p=9683#comment-934453">
			September 9, 2011 at 8:12 am</a>		</div>

		<p>@The MAZZTer: debugger? Why would they have a debugger attached to rundll32? The example Raymond mentioned was a batch file &#8211; probably they did not even have a debugger installed on that machine.</p>
<p>True, people usually ignore the event log, except when things are broken &#8211; and then they would see the scary rundll32 error message, even if it is not what they were looking for.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-934463">
				<div id="div-comment-934463" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">MarcBernard</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110909-00/?p=9683#comment-934463">
			September 9, 2011 at 8:18 am</a>		</div>

		<p>Why isn&#39;t it free license to continue the abuse? &nbsp;When Raymond will come along someday and sweep up after the elephants&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-934473">
				<div id="div-comment-934473" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Jeff Curless</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110909-00/?p=9683#comment-934473">
			September 9, 2011 at 8:41 am</a>		</div>

		<p>The way I worked around this exact issue was to setup a __try/__except block with some inline assembler and then use the fact that the previous ebp is stored at fs:[0] to properly restore the stack.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-934483">
				<div id="div-comment-934483" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Raph</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110909-00/?p=9683#comment-934483">
			September 9, 2011 at 8:49 am</a>		</div>

		<p>That fix won&#39;t work on x64 because it would misalign the stack (100 isn&#39;t divisable by 8). I suggest changing it to 128.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-934493">
				<div id="div-comment-934493" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110909-00/?p=9683#comment-934493">
			September 9, 2011 at 8:57 am</a>		</div>

		<p>I would have turned around and written rundll32.exe in assembly language (there&#39;s so little code to write anyway), passed a bunch of zeros after the arguments (just like Raymond did) and call ExitProcess directly afterwords so as to not trust sp after the call.</p>
<div class="post">[<i>You can&#39;t call ExitProcess immediately afterwards because you have to clean up the window handle. And writing rundll32.exe in assembly language means that porting to a new architecture means having to rewrite rundll32 for the new processor. (How good are your ia64 assembly skills?) So much for being a portable operating system. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-934523">
				<div id="div-comment-934523" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Alex Grigoriev</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110909-00/?p=9683#comment-934523">
			September 9, 2011 at 10:02 am</a>		</div>

		<p>[having to rewrite rundll32 for the new processor. (How good are your ia64 assembly skills?) So much for being a portable operating system. -Raymond]</p>
<p>Raymond,</p>
<p>Did you miss the memo about IA64 support discontinuation in 2008R2+?</p>
<p>Also, it&#39;s perfectly fair to say: &quot;If you want your DLL be called by ARM build of rundll32, fix YOUR DLL&quot;. Stop being such a <span style="color:#ff0000;">(offensive word deleted)</span>, MS. Show some tough love to ISVs.</p>
<div class="post">[<i>I made the apparently unwarranted assumption that you were not a nitpicker and could figure out that &quot;ia64&quot; was a placeholder for &quot;some new architecture.&quot; I would have deleted your comment for offensive words except Cesar replied to it. (See Cesar&#39;s reply.) -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-934533">
				<div id="div-comment-934533" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Cesar</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110909-00/?p=9683#comment-934533">
			September 9, 2011 at 10:09 am</a>		</div>

		<p>@Alex Grigoriev: the problem Raymond is talking about is not in the DLLs. The problem is in the users incorrectly trying to use rundll32 to call DLL functions which do not have the exact function signature rundll32 was designed for (&quot;void CALLBACK function(HWND hwnd, HINSTANCE hinst, LPSTR lpszCmdLine, int nCmdShow)&quot;), and thus messing up the stack badly (see the blog post Raymond linked to).</p>
<div class="post">[<i>Exactly. Tell <a href="http://technet.microsoft.com/en-us/library/cc750823.aspx" rel="nofollow">this guy</a> &quot;Hey you need to fix the user32.dll DLL.&quot; -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-934543">
				<div id="div-comment-934543" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">John</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110909-00/?p=9683#comment-934543">
			September 9, 2011 at 10:14 am</a>		</div>

		<p>I don&#39;t think people are intentionally abusing rundll32 (well, maybe some are); I think most people just don&#39;t know any better. &nbsp;As for the bigger picture, I&#39;m not sure what you&#39;re complaining about; you should know better by now. &nbsp;If a backward compatibility hack allows &#39;bad thing X&#39; to continue to work, then people will continue to do &#39;bad thing X&#39; (if for nothing else than out of ignorance); there is just no way to get around that.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-934563">
				<div id="div-comment-934563" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Alex Grigoriev</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110909-00/?p=9683#comment-934563">
			September 9, 2011 at 11:22 am</a>		</div>

		<p>@Cesar:</p>
<p>MSC compiler supports stack pointer checking for quite some time. If a callback function returns with incorrect ESP/RSP, rundll32 could throw an exception.</p>
<div class="post">[<i>And then <a href="http://technet.microsoft.com/en-us/library/cc750823.aspx" rel="nofollow">a batch file stops working</a> and the customer has to&#8230; um, do what exactly? &quot;Don&#39;t upgrade to the next version of Windows. Your batch files will stop working.&quot; -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-934573">
				<div id="div-comment-934573" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">mgetz</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110909-00/?p=9683#comment-934573">
			September 9, 2011 at 12:03 pm</a>		</div>

		<p>@Raph: actually on x64 this is a moot post, all the calling conventions have been superseded by the AMD64 convention which should be the only one used</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-934583">
				<div id="div-comment-934583" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Adam Rosenfield</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110909-00/?p=9683#comment-934583">
			September 9, 2011 at 12:14 pm</a>		</div>

		<p>&quot;And writing rundll32.exe in assembly language means that porting to a new architecture means having to rewrite rundll32 for the new processor.&quot;</p>
<p>But doesn&#39;t the workaround you wrote of saving and restoring the stack pointer via a global variable require assembly language, or at the very least an architecture-specific compiler intrinsic? &nbsp;That&#39;s certainly not 100% portable, e.g. if you had to port this to some bizarre architecture that didn&#39;t even have a stack pointer.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-934593">
				<div id="div-comment-934593" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Klimax</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110909-00/?p=9683#comment-934593">
			September 9, 2011 at 12:41 pm</a>		</div>

		<p>@Adam Rosenfield 9 Sep 2011 12:14 PM:</p>
<p>Intrinsic funcitons,macross and/or template functions from C++&#8230; This is not that difficult as you are writting small function inside programm,which you can at worst disable until support written. (Rest is compiler+assembler job)</p>
<p>If you have to rewritte whole programm,then you have to be completly finished.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-934603">
				<div id="div-comment-934603" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">640k</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110909-00/?p=9683#comment-934603">
			September 9, 2011 at 1:56 pm</a>		</div>

		<p>It should be called rundll64.exe on 64-bit windows. Problem solved.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-934443">
				<div id="div-comment-934443" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Adam Rosenfield</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110909-00/?p=9683#comment-934443">
			September 9, 2011 at 8:07 am</a>		</div>

		<p>@MAZZTer: Who (among application developers) debugs rundll32? &nbsp;Maybe you would if you&#39;re debugging your DLL, but if you were doing that, wouldn&#39;t you be debugging it in its native environment, i.e. when being loaded by the executable that normally loads it? &nbsp;How many people use rundll32 to run functions from their own DLLs? &nbsp;I would expect it to be used much more frequently to try to use functions from *other peoples&#39;* DLLs, for which you don&#39;t have the source code and thus are more likely to get the function parameters wrong.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-934623">
				<div id="div-comment-934623" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110909-00/?p=9683#comment-934623">
			September 9, 2011 at 3:56 pm</a>		</div>

		<p>Bad idea, 640k. We were just discussing breaking batch files.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-934653">
				<div id="div-comment-934653" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">ErikF</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110909-00/?p=9683#comment-934653">
			September 9, 2011 at 8:19 pm</a>		</div>

		<p>It seems that some people are wanting the equivalent of a gasoline-powered engine that can also run on diesel, kerosene, hydrogen and raw sewage. Raymond, I don&#39;t envy your job; not only do you have to support programs that rely on old behaviour, but you also have to support programs that by all rights should never have worked at all!</p>
<p>I suppose it&#39;s too late to just deprecate the silly thing and move on.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-934633">
				<div id="div-comment-934633" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Anonymous Coward</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110909-00/?p=9683#comment-934633">
			September 9, 2011 at 4:00 pm</a>		</div>

		<p>As Marc suggests, this *is* a free licence to continue the abuse. It&#39;s even questionable whether it&#39;s still abuse, considering that rundll32 has been explicitly written to handle the situation. It&#39;s expected behaviour now.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-934693">
				<div id="div-comment-934693" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">640k</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110909-00/?p=9683#comment-934693">
			September 10, 2011 at 4:08 pm</a>		</div>

		<p>Why was it called runndll32 in the first place? Why not only rundll? Please tell me this isn&#39;t yet one more stupid mistake of ms employees inveting stuff which isn&#39;t forward compatible.</p>
<p>Naming exe (or dll) files with the bitness in the name? Why does anyone do that? If there&#39;s no reason, it&#39;s obvious stupid. So what is the reason this time?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-934703">
				<div id="div-comment-934703" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ens</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110909-00/?p=9683#comment-934703">
			September 10, 2011 at 5:03 pm</a>		</div>

		<p>Why be antagonistic in the first place? &nbsp;If there&#39;s no reason, then obviously you just want to make the world a worse place.</p>
<p>Rundll.dll was the 16 bit version. &nbsp;So in the 32 bit switchover they tried it your way. &nbsp;Maybe they decided that was a bad idea, or they decided that circumstances were different this time around.</p>
<p>But anyway, what problem are you solving by renaming it? &nbsp;I haven&#39;t seen anybody say anything in this post that would be solved by renaming rundll on a 64-bit system. &nbsp;The only discussion of bitness at all was about hand-coded assembly language, and the little sidebar about stack alignment, neither of which have anything whatsoever to do with how rundll is named. &nbsp;I think you just said &quot;problem solved&quot; without figuring out what the problem was.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-934723">
				<div id="div-comment-934723" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">640k</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110909-00/?p=9683#comment-934723">
			September 10, 2011 at 8:00 pm</a>		</div>

		<p>So we are stuck with name32.exe forever? Sigh.</p>
<p>The same problem solved by renaming rundll.exe to rundll32.exe on 32-bit systems will be solved by renaming it to rundll64.exe on 64-bit systems.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-934733">
				<div id="div-comment-934733" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">JamesNT</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110909-00/?p=9683#comment-934733">
			September 11, 2011 at 12:23 am</a>		</div>

		<p>Raymond,</p>
<p>I am usually one of the first to defend you. &nbsp;You are truly my programming god. &nbsp;And, yes, I still have that pic you and Paul Thurrot made for me. &nbsp;</p>
<p>Today, it is my sad duty to confess that the pull &#8211; nay, the seduction &#8211; of the dark side is upon me. Truly, my heart doth skip a beat thereby depriving my entire body of needed nutrients when I say much to mine own horror: Why not break such apps to teach a lesson?</p>
<p>Help me, Obi Wan Chen. You are my only hope.</p>
<p>JamesNT</p>
<div class="post">[<i>Who is the &quot;they&quot; you are teaching a lesson, and what is the lesson? The &quot;they&quot; is the customer. The lesson is &quot;Don&#39;t upgrade to Windows Vista. It breaks applications.&quot; The developer who wrote the bad code is long gone. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-934743">
				<div id="div-comment-934743" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Clipboarder Gadget</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110909-00/?p=9683#comment-934743">
			September 11, 2011 at 2:34 am</a>		</div>

		<p>I don&#39;t understand why so many people here complain about this fix. It doesn&#39;t slow down the computer, it requires no diskspace and there is no undefined behaviour when apps abuse rundll32.exe. The fix also doesn&#39;t require any major redesign and is very unlikly to break well-behaving applications. It also doesn&#39;t complicate the way to develop good applications.</p>
<p>I&#39;d say it&#39;s an easy decision to include this fix.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-934753">
				<div id="div-comment-934753" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">無名</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110909-00/?p=9683#comment-934753">
			September 11, 2011 at 1:33 pm</a>		</div>

		<p>I&#39;ll quote the end of one of the bonus chapters from your book, which sort of fits here:</p>
<p>&quot;Thank you for going insane.&quot;</p>
<p>:-)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-934763">
				<div id="div-comment-934763" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">JamesNT</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110909-00/?p=9683#comment-934763">
			September 11, 2011 at 2:04 pm</a>		</div>

		<p>Raymond,</p>
<p>I knew I could count on you to bring me back to the world of the pragmatic programmer. &nbsp;It is important for all of us to remember a few details:</p>
<ol>
<li>&nbsp;The programmers that caused these issues may not be bad programmers, just beginners. &nbsp;These could be honest mistakes, but users still need their apps to run.</li>
<li>
<p>&nbsp;The programmers that caused these issues may have just being doing the best they could with the tools/time they had.</p>
</li>
<li>
<p>&nbsp;The victims here are the users. &nbsp;Someone, somewhere must advocate for them. &nbsp;Microsoft (read: &nbsp;Mr. Chen) are really the only ones in a good position to do so.</p>
</li>
<li>
<p>&nbsp;Yes, it sucks that MS spending time correcting the mistakes of others creates a rather horrible opportunity cost, but the alternative to not paying that cost is worse.</p>
</li>
</ol>
<p>Mr. Chen, your position as my programming god remains ever secure. &nbsp;</p>
<p>Thank you for all you do.</p>
<p>JamesNT</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-934773">
				<div id="div-comment-934773" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Gabe</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110909-00/?p=9683#comment-934773">
			September 11, 2011 at 10:43 pm</a>		</div>

		<p>JamesNT: It&#39;s not programmers who &quot;caused&quot; the issue, it&#39;s users. What happens is that somebody wants to invoke a function from a DLL. A programmer has a compiler and can just write a trivial program that calls the function. A user, however, has no compiler. When they want to invoke a function locked up in a DLL, the only tool they have is rundll32.</p>
<p>Since users know nothing of arguments and calling conventions. They just found out somehow that there&#39;s a function that exists in a DLL, and putting it on the rundll32 command line does what they want. They don&#39;t know why it does what they want and are not qualified to determine that it only works by coincidence. You can call these users &quot;programmers&quot;, but that&#39;s stretching the term.</p>
<p>Look at what <a rel="nofollow" target="_new" href="http://vlaurie.com/computers2/Articles/rundll32.htm" rel="nofollow">vlaurie.com/&#8230;/rundll32.htm</a> has to say about swapping mouse buttons:</p>
<p>&quot;Another example is a command that allows you to switch the mouse-buttons for left-hand use. Unfortunately, once the switch is made it seems that it can only be undone by the old-fashioned method of going to Control Panel. In other words, it doesn&#39;t act as a toggle but seems to be one way. The command is</p>
<p>&quot;RUNDLL32.EXE USER32.DLL,SwapMouseButton&quot;</p>
<p>Some user reads this, learns some &quot;trick&quot; to do something, puts it in a batch file or shortcut, and expects it to keep working.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-934783">
				<div id="div-comment-934783" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Privacy Statement</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110909-00/?p=9683#comment-934783">
			September 11, 2011 at 11:11 pm</a>		</div>

		<p>Gabe: That makes them programmers. It&#39;s a fine line.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-934803">
				<div id="div-comment-934803" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Bob</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110909-00/?p=9683#comment-934803">
			September 12, 2011 at 2:15 am</a>		</div>

		<p>&quot;RUNDLL32.EXE USER32.DLL,SwapMouseButton&quot;</p>
<p>This demonstrates the saying that &quot;a little knowledge is a dangerous thing&quot;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-934823">
				<div id="div-comment-934823" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Cesar</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110909-00/?p=9683#comment-934823">
			September 12, 2011 at 4:45 am</a>		</div>

		<p>@Clipboarder Gadget: Most people here are programmers, and will react with horror to such an horrible kludge. It might work perfectly and have no downsides (other than the psychological one of letting people get away with things they shouldn&#39;t), but it is an eyesore.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-934833">
				<div id="div-comment-934833" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">TC</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110909-00/?p=9683#comment-934833">
			September 12, 2011 at 5:16 am</a>		</div>

		<p>[And then a batch file stops working and the customer has to&#8230; um, do what exactly? &quot;Don&#39;t upgrade to the next version of Windows. Your batch files will stop working.&quot; -Raymond]</p>
<p>Sort of like when upgrading from Win XP to Win 7, and loads of code stops working because CAPICOM has been, uh, how can I put this &#8211; arbitrarily deleted for no apparent reason?</p>
<p>MS (as an organization) clearly puts lots of effort into backwards compatibility &#8211; when it suits you. But when it doesn&#39;t, you don&#39;t give a fig!</p>
<p>So please don&#39;t use that argument as if it were the &quot;be all and end all&quot; of whether you do or don&#39;t make breaking changes. MS has no hesitation in making breaking changes, for no apparent technical reason, when it suits you.</p>
<div class="post">[<i>You appear to be under the impression that there is a single &quot;compatibility committee&quot; that makes all compatibility-related decisions with unfailing consistency according to rigid absolutes. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-934793">
				<div id="div-comment-934793" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Gabe</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110909-00/?p=9683#comment-934793">
			September 11, 2011 at 11:26 pm</a>		</div>

		<p>Privacy: Even if that *does* make them programmers (and I really hate using the term programmer for somebody who writes things like macros, HTML pages, or command lines), they&#39;re not the programmer who wrote rundll32 or the DLL that&#39;s causing the problem. In fact, my rudimentary web searches show that it&#39;s mostly MS who writes the DLLs that get abused by rundll32!</p>
<p>My point to JamesNT was that in this case, the people in details 1 and 2 (&quot;programmers&quot;) were actually the same as the victims in detail 3 (&quot;users&quot;).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-934893">
				<div id="div-comment-934893" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Random832</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110909-00/?p=9683#comment-934893">
			September 12, 2011 at 11:47 am</a>		</div>

		<p>&quot;And then a batch file stops working and the customer has to&#8230; um, do what exactly?&quot; Create a C program to call the DLL properly &#8211; same as with your objections to writing undocumented registry keys with regedit rather than calling the documented API.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-934903">
				<div id="div-comment-934903" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Gabe</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110909-00/?p=9683#comment-934903">
			September 12, 2011 at 12:20 pm</a>		</div>

		<p>Random832: So you would tell customers that if they want to upgrade to Vista they will have to download a C compiler, learn C, and then create a C program to call the DLL properly? I think Microsoft actually WANTS customers to upgrade, which is why they used Raymond&#39;s scheme instead of your plan.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-934943">
				<div id="div-comment-934943" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">TC</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110909-00/?p=9683#comment-934943">
			September 12, 2011 at 10:09 pm</a>		</div>

		<p>I agree that (2) is foolish. I&#39;ve never said or suppurted that.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-934953">
				<div id="div-comment-934953" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Christian</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110909-00/?p=9683#comment-934953">
			September 13, 2011 at 12:21 am</a>		</div>

		<p>Thanks you, Raymond (and all the others at Microsoft doing similar things), for all the times you fix problems like this and just make stuff work. With the days and weeks you spend doing such &quot;horrible&quot;, but sensible hacks you safe sooo many humans around the glob so many years of time!</p>
<p>Everytime someone just makes his program compatible, keep working, working around bugs instead of complaining, they should pat their own back and thing that they did a good deed today</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-934933">
				<div id="div-comment-934933" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">TC</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110909-00/?p=9683#comment-934933">
			September 12, 2011 at 8:45 pm</a>		</div>

		<p>[You appear to be under the impression that there is a single &quot;compatibility committee&quot; that makes all compatibility-related decisions with unfailing consistency according to rigid absolutes. -Raymond]</p>
<p>On the contrary. *You&#39;re* the one who implied this, when you told Alex G that MS couldn&#39;t modify rundll32 to throw an error, because that would break existing code. I responded to that implication, by pointing out that there *isn&#39;t* a consistent policy across the organization (and gave an example).</p>
<p>(sorry if multiple posts, the comment form is acting up)</p>
<div class="post">[<i>I did not intend to give the impression that the explanation came from the &quot;compatibility committee&#39;s book of rigid absolutes.&quot; But when the two sides of the issue are (1) don&#39;t break existing code, and (2) teach &quot;people&quot; a &quot;lesson&quot; (for some vague sense of &quot;people&quot; and &quot;lesson&quot;), the &quot;don&#39;t break existing code&quot; side tends to win. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-935113">
				<div id="div-comment-935113" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">640k</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110909-00/?p=9683#comment-935113">
			September 13, 2011 at 1:28 pm</a>		</div>

		<p>64-bit dlls has a single defined calling convention (atleast in windows). Problems which rundll32 has wouldn&#39;t be possible with rundll64.</p>
<div class="post">[<i>Consider what goes wrong if you call a function that accepts more than 4 parameters. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-935143">
				<div id="div-comment-935143" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Alex Grigoriev</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110909-00/?p=9683#comment-935143">
			September 13, 2011 at 4:34 pm</a>		</div>

		<p>Too bad that rundll32 has essentially become a poor man&#39;s scripting tool.</p>
<p>I&#39;&#39;m not quite sure when cscript.exe has become first available, but one can run VB and JScript from command line easily.</p>
<p>Here is a fun exercise for you.</p>
<p>Create a text file named, for example, speech.vbs, with the following line:</p>
<p>CreateObject(&quot;SAPI.SpVoice&quot;).Speak &quot;Do not consider this free license to continue abusing the rundll32 program&quot;</p>
<p>Then type speech.vbs in the CMD prompt.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-cheong even thread-even depth-1" id="comment-935163">
				<div id="div-comment-935163" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/cheong00' rel='external nofollow' class='url'>cheong00</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110909-00/?p=9683#comment-935163">
			September 13, 2011 at 6:40 pm</a>		</div>

		<p>How about making rundll32 depreciated in this case? Afterall for many many things we want to do the involves trival calls to APIs, either there&#39;s already freeware/shareware doing that (still remember someone making a program that&#39;s probe current COM port settings for US$9.99), or you can do it with functions provided in PowerShell.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-yuhong-bao odd alt thread-odd thread-alt depth-1" id="comment-935183">
				<div id="div-comment-935183" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Yuhong+Bao' rel='external nofollow' class='url'>Yuhong Bao</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110909-00/?p=9683#comment-935183">
			September 13, 2011 at 8:19 pm</a>		</div>

		<p>Yea, PowerShell allows you to call anything that can be called from .NET from the command-line, including all .NET Framework API functions.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-935223">
				<div id="div-comment-935223" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">640k</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110909-00/?p=9683#comment-935223">
			September 14, 2011 at 5:36 am</a>		</div>

		<p>99% of all api functions which are called from command line/batch files uses &lt;5 args. There&#39;s always limits anyway, you can set it at 4 args and make many people happy.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-935383">
				<div id="div-comment-935383" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Gabe</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110909-00/?p=9683#comment-935383">
			September 14, 2011 at 11:05 am</a>		</div>

		<p>640k: Are you suggesting that rundll32 should have a listing of all APIs in the world that accept up to 4 args and only allow you to abuse those?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-cheong even thread-even depth-1" id="comment-935423">
				<div id="div-comment-935423" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/cheong00' rel='external nofollow' class='url'>cheong00</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110909-00/?p=9683#comment-935423">
			September 14, 2011 at 6:36 pm</a>		</div>

		<p>@Gabe: If they want to make such a list, it&#39;d be easier to let them create a list of &quot;safe to run in rundll32&quot; API.</p>
<p>That&#39;s just involve test cases to limited list of commonly &quot;recommanded to used in rundll32&quot; APIs. Run them to see if it&#39;ll corrupt the stack / heap. Just declare those won&#39;t case problem &quot;safe&quot;.</p>
<p>Now if you use rundll32 to call &quot;other&quot; API, Microsoft makes no guarantee that it&#39;ll work. And if it works, it&#39;s by pure luck. If it don&#39;t, don&#39;t complain, period. :P</p>
<div class="post">[<i>What&#39;s the difference to the end user between &quot;known safe&quot; and &quot;if it works, it&#39;s by pure luck&quot;? In both cases, it &quot;works&quot;. How would an end user know whether they were in the &quot;known safe&quot; case or the &quot;pure luck&quot; case? -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-935643">
				<div id="div-comment-935643" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Neil</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110909-00/?p=9683#comment-935643">
			September 15, 2011 at 9:07 am</a>		</div>

		<p>This makes me glad that the only problem I had with RunDLL32 was that it created hidden owner windows which meant that they didn&#39;t show up in the Windows 95 Alt+Tab list.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-935773">
				<div id="div-comment-935773" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Gabe</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110909-00/?p=9683#comment-935773">
			September 15, 2011 at 2:22 pm</a>		</div>

		<p>Neil: The only problem I had with rundll32 was that it corrupted the command line in its initial parsing. It was probably easier to fix than what Raymond had to do.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-cheong odd alt thread-odd thread-alt depth-1" id="comment-935813">
				<div id="div-comment-935813" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/cheong00' rel='external nofollow' class='url'>cheong00</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110909-00/?p=9683#comment-935813">
			September 15, 2011 at 6:12 pm</a>		</div>

		<p>&gt; What&#39;s the difference to the end user between &quot;known safe&quot; and &quot;if it works, it&#39;s by pure luck&quot;?</p>
<p>None for the home users, but hopefully those who know enough to create tips that uses rundll32 will check the list to see whether the method they&#39;re about to suggest is &quot;safe&quot;. (It may not work the first few times, but eventially they would be pointed to the list when some behaviour is unexpected in certain cases, and learnt to check before making suggestion.) I don&#39;t think average home user will use rundll32 without being told to do so by some random &quot;experts&quot;.</p>
<p>Anyway I don&#39;t think Microsoft is going to make such list (just making it depreciated is easier), so little point to argue on this topic.</p>
<div class="post">[<i>I don&#39;t have confidence in the &quot;eventually they would be pointed to the list when they encounter some weird behavior&quot; because that didn&#39;t stop people from abusing rundll32 today. The weird behavior may not exhibit itself until the next version of the OS, at which point it&#39;s too late. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-cheong even thread-even depth-1" id="comment-935823">
				<div id="div-comment-935823" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/cheong00' rel='external nofollow' class='url'>cheong00</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110909-00/?p=9683#comment-935823">
			September 15, 2011 at 10:25 pm</a>		</div>

		<p>The point is to have a list spell out which API is safe for this program to call. You may also add different section for each tested OS.</p>
<p>If they use the program to run API and found it hurts, they&#39;ll know there is a URL they can check the information. If they can&#39;t find the API call there, they&#39;ll know this call may not work in that OS version (Especially if one API is marked as safe in one of the previous OS, but removed in a later one. That usually indicate the API have problem in that OS or later). Hopefully the &quot;expert&quot; who want to repost the tips will notice this sign and add more workaround that involve any of the freeware/shareware/PS script equivalent that&#39;ll do the job.</p>
<div class="post">[<i>Okay, here&#39;s your list: (1) Control_RunDLL (<a href="http://support.microsoft.com/kb/166168" rel="nofollow">for debugging purposes only</a>. That&#39;s all. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-935833">
				<div id="div-comment-935833" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">640k</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110909-00/?p=9683#comment-935833">
			September 16, 2011 at 1:35 am</a>		</div>

		<p>@Gabe: Are you suggesting that rundll32 should have a listing of all APIs in the world that accept up to 4 args and only allow you to abuse those?</p>
<p>No. I suggest that rundll64 should display an error message if there&#39;s more than 4 args to it.</p>
<div class="post">[<i>I don&#39;t think you understand what rundll32 does. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-935843">
				<div id="div-comment-935843" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">640k</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110909-00/?p=9683#comment-935843">
			September 16, 2011 at 1:38 am</a>		</div>

		<p>32-bit is doomed to fix anyway. You better focus on fixing 64-bit rundll. PLEASE don&#39;t make the same mistakes as with 32-bit rundll.</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

