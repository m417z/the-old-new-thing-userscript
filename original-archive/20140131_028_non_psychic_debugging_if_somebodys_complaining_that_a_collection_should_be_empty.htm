<html>
<head>
<title>Non-psychic debugging: If somebody's complaining that a collection should be empty but isn't, you might want to see what's in there</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>Non-psychic debugging: If somebody&#8217;s complaining that a collection should be empty but isn&#8217;t, you might want to see what&#8217;s in there</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>January 31, 2014 / year-entry #29</td></tr>
<tr><td><b>Tags:</b></td><td>code</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20140131-00/?p=1913</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>11</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">A programmer on the GHI team (yes, the same GHI team) reported that they were hitting an assertion failure using an internal library and asked for help debugging it. // All factories should be unregistered by now assert(m_pFactoryList->IsEmpty()); "Can somebody help me figure out which factory it is that did not get unregistered?" I didn't...</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>
A programmer on the GHI team
(yes,
<a HREF="http://blogs.msdn.com/b/oldnewthing/archive/2014/01/24/10492287.aspx">
the same GHI team</a>)
reported that they were hitting an assertion failure
using an internal library and asked for help debugging it.
</p>
<pre>
// All factories should be unregistered by now
assert(m_pFactoryList-&gt;IsEmpty());
</pre>
<p>
"Can somebody help me figure out which factory it is that
did not get unregistered?"
</p>
<p>
I didn't work on this internal library, but on the other hand
I'm not afraid to look inside.
</p>
<p>
Let's see what a <code>m_pFactory&shy;List</code> looks like.
</p>
<pre>
0:000&gt; ?? this-&gt;m_pFactoryList
class LookupTable&lt;CFactory*&gt;
   +0x000 <span STYLE="background-color: yellow">m_uListSize      : 1</span> <font COLOR=blue>// this probably means that the list has one element</font>
   +0x004 <span STYLE="background-color: yellow">m_pList          : 0x00212e60</span> LookupTable&lt;CFactory*&gt;::ENTRY <font COLOR=blue>// this is probably the list</font>
   +0x008 m_uCapacity      : 0x7f
0:000&gt; ?? this-&gt;m_pFactoryList-&gt;m_pList
struct LookupTable&lt;CFactory*&gt;::ENTRY * 0x00212e60
   +0x000 <span STYLE="background-color: yellow">pszName          : 0x02cf4048</span>  "GHI_factory"
   +0x004 <span STYLE="background-color: yellow">data             : 0x02cf4ce0</span> CFactory* <font COLOR=blue>// I bet this is the item that got leaked</font>
0:000> dps 0x02cf4ce0 l1
02cf4ce0  6b626d58 GHI!CGhiFactory::`vftable`
</pre>
<p>
No psychic powers needed here.
I just followed my nose.
</p>
<p>
The assertion says that a list is not empty.
Therefore, we should look to see what is on the list.
</p>
<p>
As a general rule, code is not intentionally written to be
impossible to understand.
The person who wrote it meant well,
so if you see a member called
<code>m_uList&shy;Size</code>, it's a pretty safe bet that it
represents the list size.
And if you see a member called
<code>m_pList</code>,
it probably points to the start of the list.</p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (11)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-1103923">
				<div id="div-comment-1103923" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140131-00/?p=1913#comment-1103923">
			January 31, 2014 at 7:07 am</a>		</div>

		<p>I have this nasty habit of keeping a usize right next to an asize. If you don&#39;t know the idiom you get stuck. Then again, if you leak I don&#39;t check. It comes down to at that point &quot;Why the heck did you call one of the methods after unloading my DLL.&quot;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1103993">
				<div id="div-comment-1103993" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">aaron</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140131-00/?p=1913#comment-1103993">
			January 31, 2014 at 9:16 am</a>		</div>

		<p>&quot;As a general rule, code is not intentionally written to be impossible to understand. The person who wrote it meant well.&quot;</p>
<p>Oh, if only that were true&#8230;. so much of my company code has utterly indecipherable names.</p>
<p>SupplyLocationViewGrouperForm (is neither a View, a Form, nor a Location. And it only has a member that is a &quot;Group&quot;. &nbsp;It is not a Group itself. I think &quot;Groupers&quot; are things that have groups in them, but I&#39;m not sure. There is more bad code out there than most people can imagine.</p>
<div class="post">[<em>But was it written to be intentionally obtuse? Or did the original author mean well but not have a clue? -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1104003">
				<div id="div-comment-1104003" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">mikeb</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140131-00/?p=1913#comment-1104003">
			January 31, 2014 at 9:30 am</a>		</div>

		<p>@Joshua:</p>
<p>&gt;&gt; If you don&#39;t know the idiom</p>
<p>I don&#39;t know the idiom. In case I ever come across it, what would `usize` and `asize` mean?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1104013">
				<div id="div-comment-1104013" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Gabe</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140131-00/?p=1913#comment-1104013">
			January 31, 2014 at 10:01 am</a>		</div>

		<p>mikeb: I don&#39;t know the idiom either, but I would guess that &quot;usize&quot; means &quot;used size&quot; and &quot;asize&quot; means &quot;allocated size&quot;. I would also expect that the used size would be no more than the allocated size.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1104033">
				<div id="div-comment-1104033" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140131-00/?p=1913#comment-1104033">
			January 31, 2014 at 10:55 am</a>		</div>

		<p>Gabe guesses well. It&#39;s the array growth idiom for amortizing resizes.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-aadsso-1live-com00034001a5381f07 odd alt thread-odd thread-alt depth-1" id="comment-1104113">
				<div id="div-comment-1104113" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Georg_Rottensteiner' rel='external nofollow' class='url'>Georg_Rottensteiner</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140131-00/?p=1913#comment-1104113">
			January 31, 2014 at 9:20 pm</a>		</div>

		<p>But he shouldn&#39;t have to guess. That&#39;s the aforementioned well meaning :)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1104123">
				<div id="div-comment-1104123" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Azarien</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140131-00/?p=1913#comment-1104123">
			February 1, 2014 at 2:03 am</a>		</div>

		<p>&quot;code is not intentionally written to be impossible to understand&quot; unless you&#39;re dealing with DRM, activation or similarly evil things.</p>
<div class="post">[<em>That&#39;s specifically why I added the weasel words &quot;as a general rule&quot;, thanks for ignoring them. -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1104133">
				<div id="div-comment-1104133" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Neil</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140131-00/?p=1913#comment-1104133">
			February 1, 2014 at 3:29 am</a>		</div>

		<p>If only there was some way of querying the allocated size from the allocator&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1104143">
				<div id="div-comment-1104143" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joker_vD</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140131-00/?p=1913#comment-1104143">
			February 1, 2014 at 7:24 am</a>		</div>

		<p>@Joshua: Why not &quot;used_size&quot; and &quot;alloc_size&quot;? I believe modern compilers support identifiers longer than 6 symbols.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1104163">
				<div id="div-comment-1104163" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140131-00/?p=1913#comment-1104163">
			February 1, 2014 at 8:47 am</a>		</div>

		<p>@Joker_vd: When you&#39;ve done most of your programming without autocomplete you develop habits that involve short symbol names. The resulting idioms don&#39;t change without active effort even though names may now be plenty long.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1104183">
				<div id="div-comment-1104183" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joker_vD</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140131-00/?p=1913#comment-1104183">
			February 1, 2014 at 11:26 am</a>		</div>

		<p>@Joshua: Try to use properly configured emacs? Or are you stuck with nano/Notepad?</p>
<p>@Azarien: AFAIK, this stuff is usually &quot;put on top&quot; (like, obfuscators and protectors, such as Armadillo).</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

