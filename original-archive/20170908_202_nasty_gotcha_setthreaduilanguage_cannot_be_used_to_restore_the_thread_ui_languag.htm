<html>
<head>
<title>Nasty gotcha: SetThreadUILanguage cannot be used to restore the thread UI language</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>Nasty gotcha: SetThreadUILanguage cannot be used to restore the thread UI language</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>September 8, 2017 / year-entry #203</td></tr>
<tr><td><b>Tags:</b></td><td>code</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20170908-00/?p=96965</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>6</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">You have to use some other function entirely.</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>
Suppose you want to change the thread UI language temporarily.
You might be tempted to do this:
</p>
<pre>
<i>// Code in italics is wrong
void Something()
{
  // Save the original language.
  LANGID originalLanguage = GetThreadUILanguage();

  // Set a new language temporarily.
  SetThreadUILanguage(newLanguage);

  // ... do stuff that uses the new language ...

  // Restore the original language.
  SetThreadUILanguage(originalLanguage);
}</i>
</pre>
<p>
This seems to work, but in fact it doesn't.
</p>
<p>
The <code>Get&shy;Thread&shy;UI&shy;Language</code> function
returns the first user interface language for the current thread.
If a preferred language has been set for the thread,
it will use that.
Otherwise, it will follow a documented fallback algorithm.&sup1;
</p>
<p>
On the other hand,
<code>Set&shy;Thread&shy;UI&shy;Language</code>
sets the UI language for the current thread.
It never sets the thread language back to "not set".
</p>
<p>
In the above code fragment, the result is that the thread UI language
is locked to whatever the effective thread UI language was at the time
the function was called,
even if the fallback languages change.
</p>
<p>
For example,
suppose the user's preferred language is English,
the process's preferred language is German,
and the thread has no preferred language.
The call to
<code>Get&shy;Thread&shy;UI&shy;Language</code>
will return German,
and when the function tries to restore the original language,
it sets the thread's preferred language to German.
This is not the same as clearing the thread's preferred language,
however.
If the process changes its preferred language to Swedish,
and the thread has no preferred language,
then the effective language should change to Swedish.
But the code fragment above explicitly sets the thread language to
German, so the effective language will be German.
</p>
<p>
The way to restore the thread preferred UI language state is to
capture the thread preferred UI languages with the
<code>Get&shy;Thread&shy;Preferred&shy;UI&shy;Languages</code>
function
and restore them with the
<code>Set&shy;Thread&shy;Preferred&shy;UI&shy;Languages</code>
function.
For more information,
<a HREF="https://blogs.msdn.microsoft.com/oldnewthing/20101223-00/?p=11933">
see my earlier discussion</a>.
</p>
<p>
&sup1;
The
documentation for
<a HREF="https://msdn.microsoft.com/library/windows/desktop/dd318129(v=vs.85).aspx">
<code>Get&shy;Thread&shy;UI&shy;Language</code></a>
says
</p>
<blockquote CLASS="q"><p>
Calling this function is identical to calling
<b>Get&shy;Thread&shy;Preferred&shy;UI&shy;Languages</b>
with <i>dwFlags</i> set to
<code>MUI_</code><code>MERGE_</code><code>SYSTEM_</code><code>FALLBACK |
MUI_</code><code>MERGE_</code><code>USER_</code><code>FALLBACK |
MUI_</code><code>LANGUAGE_</code><code>ID</code>
and using the first language in the retrieved list.
</p>
</blockquote>
<p>
You can then follow the bouncing ball to
<a HREF="https://msdn.microsoft.com/library/windows/desktop/dd318128(v=vs.85).aspx">
the documentation for
<code>Get&shy;Thread&shy;Preferred&shy;UI&shy;Languages</code></a>
and read the description of what happens when you ask for both
system and user fallbacks.</p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (6)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-1308886">
				<div id="div-comment-1308886" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">David-T</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170908-00/?p=96965#comment-1308886">
			September 8, 2017 at 7:28 am</a>		</div>

		<p>This all seems like a horribly complicated case of &#8220;using global state to solve a local problem&#8221;&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1 parent" id="comment-1308967">
				<div id="div-comment-1308967" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://geelaw.blog/' rel='external nofollow' class='url'>Gee Law</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170908-00/?p=96965#comment-1308967">
			September 9, 2017 at 2:08 am</a>		</div>

		<p>The comments are part of the code. The first comment is in italics and says &#8220;code in italics is wrong&#8221;. I love this example of Russell&#8217;s paradox :-)</p>

		
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-mngoldeneagle even depth-2 parent" id="comment-1308977">
				<div id="div-comment-1308977" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/MNGoldenEagle' rel='external nofollow' class='url'>MNGoldenEagle</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170908-00/?p=96965#comment-1308977">
			September 9, 2017 at 1:48 pm</a>		</div>

		<p>Are comments considered part of the code?  They&#8217;re pretty much universally ignored by all code compilers, they don&#8217;t have any logic&#8230; they&#8217;re definitely part of the source, and could be considered &#8220;code&#8221; for documentation &#8220;compilers&#8221;.</p>

		
				</div>
		<ol class="children">
		<li class="comment odd alt depth-3" id="comment-1308985">
				<div id="div-comment-1308985" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://geelaw.blog/' rel='external nofollow' class='url'>Gee Law</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170908-00/?p=96965#comment-1308985">
			September 9, 2017 at 4:10 pm</a>		</div>

		<p>To me, yes. I also did some random searching: Wikipedia&#8217;s definition of &#8220;comments&#8221; says they&#8217;re part of the source code that blahs. Also, a compiler toolchain will have to attend to comments to ignore them.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even depth-3" id="comment-1308995">
				<div id="div-comment-1308995" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">smf</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170908-00/?p=96965#comment-1308995">
			September 10, 2017 at 3:19 am</a>		</div>

		<p>The compiler doesn&#8217;t ignore them, they just produce no executable instructions. The compiler has to parse them to find where they end. A // (AKA single line comment) can have a line continuation character at the end and then it spills onto the next line. </p>
<p>Of course you could argue that was part of the pre-processor and not the compiler, but that will just explode the argument even further.</p>
<p>&#8220;code&#8221; is too vague a definition. Although in SLOC <a href="https://en.wikipedia.org/wiki/Source_lines_of_code" rel="nofollow">https://en.wikipedia.org/wiki/Source_lines_of_code</a> comments are specifically excluded.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt depth-3" id="comment-1309015">
				<div id="div-comment-1309015" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">voo</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170908-00/?p=96965#comment-1309015">
			September 10, 2017 at 11:31 am</a>		</div>

		<p>Considering that comments are part of the grammar of any programming language I know (and having incorrect comments in C/C++ is undefined behavior, so it can have effects on the generated assembly), I&#8217;d say it&#8217;s just fair to define them as part of the &#8220;code&#8221;.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

