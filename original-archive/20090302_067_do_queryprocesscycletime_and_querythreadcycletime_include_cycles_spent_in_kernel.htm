<html>
<head>
<title>Do QueryProcessCycleTime and QueryThreadCycleTime include cycles spent in kernel mode?</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>Do QueryProcessCycleTime and QueryThreadCycleTime include cycles spent in kernel mode?</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>March 2, 2009 / year-entry #68</td></tr>
<tr><td><b>Tags:</b></td><td>code</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20090302-01/?p=18973</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>8</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">Do QueryProcessCycleTime and QueryThreadCycleTime include cycles spent in kernel mode? Yes, they do. They count cycles spent both in user mode and in kernel mode.</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p> Do <code>QueryProcessCycleTime</code> and <code>QueryThreadCycleTime</code> include cycles spent in kernel mode? </p>
<p> Yes, they do. They count cycles spent both in user mode and in kernel mode. </p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (8)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-712963">
				<div id="div-comment-712963" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://technage.blogspot.com' rel='external nofollow' class='url'>Technage</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090302-01/?p=18973#comment-712963">
			March 2, 2009 at 4:14 pm</a>		</div>

		<p>Well, that is just dandy &#8230; now if I only knew when I would ever use that.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-713003">
				<div id="div-comment-713003" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">MadQ</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090302-01/?p=18973#comment-713003">
			March 2, 2009 at 5:29 pm</a>		</div>

		<p>For performance testing, CPU cycle counts are a lot more interesting than CPU time. The alternative is to use the RDTSC instruction &nbsp;(<a rel="nofollow" target="_new" href="http://en.wikipedia.org/wiki/RDTSC" rel="nofollow">http://en.wikipedia.org/wiki/RDTSC</a> ) but then you usually have to modify the code you&#8217;re testing, and you also have to know the exact speed of the CPU during the measured interval. Which can suck on laptops.</p>
<p>With CPU cycle counts, it doesn&#8217;t matter which power state the CPU is in.</p>
<p>With QueryProcessCycleTime and QueryThreadCycleTime you can just profile the process. Of course, in the real world, nothing is ever quite that easy.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-713103">
				<div id="div-comment-713103" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Anonymous</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090302-01/?p=18973#comment-713103">
			March 3, 2009 at 1:54 am</a>		</div>

		<p>Using the CPU cycle count as a unit of time in this century is not smart. &nbsp;If you&#8217;re on a laptop the clock speed varies based on power usage. &nbsp;If you&#8217;re on a multi-CPU or multi-core machine, your thread can get switched to a different core in between measurements, rendering your last read of the cycle count useless.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-713133">
				<div id="div-comment-713133" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">MadQ</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090302-01/?p=18973#comment-713133">
			March 3, 2009 at 4:36 am</a>		</div>

		<p>The cycle count for any given instruction stream on a particular CPU will always be the same, regardless of the CPU&#8217;s speed or power state (let&#8217;s ignore pipelining issues for the moment.) Also, both Intel and AMD have published articles explaining how to avoid Time Stamp Count drift between cores (or CPUs on multi-CPU systems.) The OS does all the bookkeeping for you now, so you don&#8217;t have to.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-713243">
				<div id="div-comment-713243" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://K.Hagan@thermoteknix.com' rel='external nofollow' class='url'>Ken Hagan</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090302-01/?p=18973#comment-713243">
			March 3, 2009 at 2:55 pm</a>		</div>

		<p>&quot;Using the CPU cycle count as a unit of time in this century is not smart.&quot;</p>
<p>But using memory cycle count might be. Increasingly, the rate limiting factor on a process is the time spent waiting for data to reach the CPU. The actual computation is pretty much free.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-713623">
				<div id="div-comment-713623" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ben Voigt [C++ MVP]</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090302-01/?p=18973#comment-713623">
			March 4, 2009 at 1:55 pm</a>		</div>

		<p>Yes, using the cycle count to measure time is a bad idea. &nbsp;It all depends on what you are trying to measure. &nbsp;Usually you are trying to determine what part of your program is the bottleneck, for this measuring the number of CPU cycles consumed (not the number of instructions retired because branching and cache effects may dominate cost) is better than measuring wall clock because of dynamic clock rates. &nbsp;Using the cycle count as your unit of time for cost of performing operations is not a bad idea at all, as long as you understand that you aren&#8217;t measuring wall clock time.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-714403">
				<div id="div-comment-714403" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">,oko</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090302-01/?p=18973#comment-714403">
			March 8, 2009 at 1:09 pm</a>		</div>

		<p>Btw, those registry entries for CPU frequency are well off. They should be calibrated properly.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-714393">
				<div id="div-comment-714393" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">|Qewtq</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090302-01/?p=18973#comment-714393">
			March 8, 2009 at 1:02 pm</a>		</div>

		<p>Categorising it as a bad idea pretty much renders the Query*** apis a bad idea. Of course, you have have to read up and be aware of the caveats and implement it correctly.</p>
<p>But in an NT OS where resolution of tick count is usually c16ms (and please do not say it is 1ms for MM timers etc, it is a hack), you have no choice for less than 10ms or ms resolution.</p>
<p>Why is the QPC and QPF a better than bad idea then? What are the alternatives and especially what are efficient alternatives. Unix and other OS-es do not have this problem. Thus it is rather a necessity for lots of things and with lots of caveats (re:like everyting MS and Intel).</p>
<p>Heck, you could not even retreieve a corect number of cores or CPUs on XP and 2003.. </p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

