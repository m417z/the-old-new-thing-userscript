<html>
<head>
<title>Displaying infotips for folded and unfolded listview items</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>Displaying infotips for folded and unfolded listview items</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>December 13, 2006 / year-entry #412</td></tr>
<tr><td><b>Tags:</b></td><td>code</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20061213-00/?p=28733</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>13</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">When displaying infotips for listview items, you have to deal with both the folded and unfolded case. "Folded" is the term used to describe a listview item in large icon mode whose text has been truncated due to length. When the user selects the item, the full text is revealed, a process known as "unfolding"....</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>
When displaying infotips for listview items,
you have to deal with both the folded and unfolded case.
"Folded" is the term used to describe a listview item
in large icon mode whose text has been truncated due to length.
When the user selects the item, the full text is revealed,
a process known as "unfolding".
</p>
<p>
Take our
<a HREF="http://blogs.msdn.com/oldnewthing/archive/2003/07/23/54576.aspx">
scratch program</a>
and make the following changes:
</p>
<pre>
<font COLOR=blue>#include &lt;strsafe.h&gt;</font>

BOOL
OnCreate(HWND hwnd, LPCREATESTRUCT lpcs)
{
  <font COLOR=blue>g_hwndChild = CreateWindow(WC_LISTVIEW, NULL,
                             WS_CHILD | WS_VISIBLE | LVS_ICON,
                             0, 0, 0, 0,
                             hwnd, (HMENU)1, g_hinst, 0);
  if (!g_hwndChild) return FALSE;

  ListView_SetExtendedListViewStyleEx(g_hwndChild,
                             LVS_EX_INFOTIP,
                             LVS_EX_INFOTIP);

  LVITEM item;
  item.iItem = 0; // added 9pm
  item.iSubItem = 0;
  item.mask = LVIF_TEXT;
  item.pszText = TEXT("Item with a long name that will be truncated");
  if (ListView_InsertItem(g_hwndChild, &amp;item) &lt; 0)
    return FALSE;</font>

  return TRUE;
}

<font COLOR=blue>void OnGetInfoTip(HWND hwnd, NMLVGETINFOTIP *pit)
{
 if (!pit-&gt;cchTextMax) return;
 if (pit-&gt;dwFlags &amp; LVGIT_UNFOLDED) {
  pit-&gt;pszText[0] = TEXT('\0');
 } else {
  StringCchCat(pit-&gt;pszText, pit-&gt;cchTextMax, TEXT("\r\n"));
 }
 StringCchCat(pit-&gt;pszText, pit-&gt;cchTextMax, TEXT("Here is an infotip"));
}

LRESULT OnNotify(HWND hwnd, int idCtrl, NMHDR *pnm)
{
 if (idCtrl == 1) {
  switch (pnm-&gt;code) {
  case LVN_GETINFOTIP:
   OnGetInfoTip(hwnd, (NMLVGETINFOTIP*)pnm);
   break;
  }
 }
 return 0;
}

  HANDLE_MSG(hwnd, WM_NOTIFY, OnNotify);</font>
</pre>
<p>
We create our listview, enable infotips, and add a single
item with a rather long name.
When you run the program, observe that the item's text
is truncated at two lines if it is not selected,
but it expands to full size when you selected it.
</p>
<p>
When the listview notifies us that it's time to display the
infotip,
we check whether the item is folded or unfolded.
If it is unfolded, then we set the buffer to an empty string
so that our <code>StringCchCat</code> at the end will merely
copy the infotip text into the buffer.
On the other hand, if the item is folded, then we append
a line terminator because we want the infotip to contain
the full text of the item, followed by the tip text.
</p>
<p>
When you run this program, hover over the item both when it
is folded and unfolded, and observe that the folded infotip
includes the name of the item.
This is a detail of infotips that is called out in the
documentation but which many programs fail to observe.</p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (13)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-452843">
				<div id="div-comment-452843" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">anonymous</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20061213-00/?p=28733#comment-452843">
			December 13, 2006 at 12:17 pm</a>		</div>

		<p>I found it helpful to insert:</p>
<p>memset(&amp;item, 0, sizeof(LVITEM));</p>
<p>after:</p>
<p>LVITEM item;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-452893">
				<div id="div-comment-452893" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://davidgardiner.blogspot.com' rel='external nofollow' class='url'>David Gardiner</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20061213-00/?p=28733#comment-452893">
			December 13, 2006 at 3:18 pm</a>		</div>

		<p>I think this is related &#8211; I&#8217;ve seen some applications (like the SQL 2000 DTS Import/Export wizard) where the infotip displays correctly on the primary monitor, but if you move the app over to the second monitor, it doesn&#8217;t display the infotip at all.</p>
<p>It&#8217;s a bug somewhere, but I don&#8217;t know if it&#8217;s Windows, video drivers or the DTS wizard.</p>
<p>-dave</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-452903">
				<div id="div-comment-452903" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.parkscomputing.com/' rel='external nofollow' class='url'>Paul M. Parks</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20061213-00/?p=28733#comment-452903">
			December 13, 2006 at 3:44 pm</a>		</div>

		<p>&#8220;I found it helpful to insert:</p>
<p>memset(&amp;item, 0, sizeof(LVITEM));&#8221;</p>
<p>You could get the same effective result with the following line:</p>
<p>LVITEM item = {0};</p>
<p>This would still initialize the structure to null values.</p>
<p>PMP</p>
<div class=post>[<i>Fixed; thanks. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-453013">
				<div id="div-comment-453013" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Norman Diamond</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20061213-00/?p=28733#comment-453013">
			December 13, 2006 at 10:22 pm</a>		</div>

		<blockquote><p>
  StringCchCat
</p></blockquote>
<p>Those can be pretty dangerous functions.</p>
<p>For StringCbCat, MSDN says that it counts bytes, which is true.</p>
<p>However for StringCchCat, MSDN says that it counts characters, which is only true sometimes. &nbsp;It&#8217;s true more often for projects started with Visual Studio 2005&#8217;s default settings than for projects started under earlier versions of Visual Studio, but it&#8217;s still something you can&#8217;t rely on.</p>
<p>If someone who understands TCHARs can define APIs with names like StringCtcCat and if MSDN can say that they count TCHARs, the result should be less dangerous.</p>
<p>In Windows CE fortunately we can pretty much assume that a character is a character, but some of those APIs don&#8217;t port from ordinary Windows to Windows CE the way they were supposed to.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-453033">
				<div id="div-comment-453033" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Alex Feinman</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20061213-00/?p=28733#comment-453033">
			December 14, 2006 at 2:08 am</a>		</div>

		<blockquote><p>
  Those can be pretty dangerous functions.</p>
<p>  For StringCbCat, MSDN says that it counts bytes, which is true.</p>
<p>  However for StringCchCat, MSDN says that it counts characters, which is only true sometimes
</p></blockquote>
<p>How is it true &quot;sometimes&quot;? The xxxCchyyy strsafe functions count buffer size in TCHARs. The StringCchCat is defined as StringCchCatA or StringCchCatW depending on the UNICODE being defined. Consequently the buffer size measured in characters is treated correctly whatever the unicode setting is.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-453063">
				<div id="div-comment-453063" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Norman Diamond</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20061213-00/?p=28733#comment-453063">
			December 14, 2006 at 3:53 am</a>		</div>

		<p>Thursday, December 14, 2006 2:08 AM by Alex Feinman</p>
<blockquote><p>
  How is it true &quot;sometimes&quot;?
</p></blockquote>
<p>You answered your own question.</p>
<blockquote><p>
  The xxxCchyyy strsafe functions count buffer</p>
<p>  size in TCHARs.
</p></blockquote>
<p>You&#8217;re right. &nbsp;But MSDN says that it counts characters. &nbsp;Sometimes characters are TCHARs and sometimes they aren&#8217;t. &nbsp;That&#8217;s also why I pointed out that default compilation environments were different before Visual Studio 2005. &nbsp;The default used to be ANSI, in which each character occupied 1 or 2 TCHARs (where each TCHAR was 1 byte).</p>
<blockquote><p>
  Consequently the buffer size measured in</p>
<p>  characters is treated correctly whatever the</p>
<p>  unicode setting is.
</p></blockquote>
<p>That&#8217;s true whatever the Unicode setting is if the Unicode setting is on. &nbsp;It isn&#8217;t true when Unicode is off. &nbsp;In ANSI code pages used in the world&#8217;s most populous country and several of its neighbours, many thousands of characters do not fit in one byte per character.</p>
<p>Thank you for providing another example of why additions to Windows string handling APIs and MSDN need more input from people who understand TCHARs.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-453073">
				<div id="div-comment-453073" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Doug</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20061213-00/?p=28733#comment-453073">
			December 14, 2006 at 5:04 am</a>		</div>

		<p>Norman:</p>
<p>You&#8217;re picking a different definition of &quot;character&quot; than the developer of the function. I don&#8217;t think your definition is any more correct.</p>
<p>What do I mean by character?</p>
<p>C++: smallest addressable unit of storage.</p>
<p>Most Win32 APIs: One byte or one unsigned short, or (occasionally) one DBCS char, depending on Unicode settings.</p>
<p>Unicode: One code point.</p>
<p>Typeography: One glyph.</p>
<p>In Win32 APIs, the vast majority mean &quot;either CHAR or WCHAR, depending on whether or not _UNICODE is defined&quot;. And the StrSafe functions match that definition. These are character buffer manipulation functions, and the only semantics they assign to the character values is &quot;0 means the end&quot;. These are not meant to be MBCS-aware.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-453083">
				<div id="div-comment-453083" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://marechal.ph@wanadoo.fr' rel='external nofollow' class='url'>Philippe Marechal</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20061213-00/?p=28733#comment-453083">
			December 14, 2006 at 5:50 am</a>		</div>

		<p>The API with strsafe.h is a bright idea from Microsoft. It first appeared in 2002 (4 years ago) and it&#8217;s part of the SDK. I&#8217;ve been using it in my developements since then and it&#8217;s safe and fast. It is recommended to use it in a very interesting book called &quot;Writing Secure Code&quot; by Michael Howard and David LeBlanc (MS Press 2003).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-453093">
				<div id="div-comment-453093" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Tim Smith</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20061213-00/?p=28733#comment-453093">
			December 14, 2006 at 8:26 am</a>		</div>

		<p>Norman,</p>
<p>Even with UCS2/UCS4/UTF32 there is a difference between basic storage count, code point count and character count.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-453203">
				<div id="div-comment-453203" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Neil</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20061213-00/?p=28733#comment-453203">
			December 14, 2006 at 4:50 pm</a>		</div>

		<p>Thanks to the blog&#8217;s stylesheet designers the code samples appear to me as e.g.</p>
<blockquote><p>
  item.pszText = TEXT(&quot;Item with a long name that will be truncat
</p></blockquote>
<p>Now if only I could unfold that line&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-453243">
				<div id="div-comment-453243" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Norman Diamond</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20061213-00/?p=28733#comment-453243">
			December 14, 2006 at 10:26 pm</a>		</div>

		<p>Thursday, December 14, 2006 5:04 AM by Doug</p>
<p>&gt; Norman:</p>
<p>&gt; You&#8217;re picking a different definition of</p>
<p>&gt; &#8220;character&#8221; than the developer of the</p>
<p>&gt; function.</p>
<p>Obviously. &nbsp;And that is exactly the reason why I think development of APIs that handle &#8220;characters&#8221; and &#8220;strings&#8221; needs more input from people who understand TCHARs.</p>
<p>&gt; I don&#8217;t think your definition is any more</p>
<p>&gt; correct.</p>
<p>In some ways you&#8217;re right. &nbsp;Maybe (within an order of magnitude) 49% of the time when MSDN says character it means character, as in counting how many characters the user sees in a document or in a line of text or on a page in a published book. &nbsp;Maybe (within an order of magnitude) 49% of the time when MSDN says character it means TCHAR. &nbsp;In recent years some wording has been added to some MSDN pages to repeat some of the ground rules of programming with characters in Windows, to explain what TCHARs mean. &nbsp;Obviously more pages need it.</p>
<p>Maybe (within an order of magnitude) 2% of the time when MSDN says character it means C++ character. &nbsp;Right, when MSDN talks about the C standard or the C++ standard, it has to use words the way the standards used them. &nbsp;(One time Mr. Chen reminded me of this fact and I thank him.)</p>
<p>&gt; What do I mean by character?</p>
<p>&gt; C++: smallest addressable unit of storage.</p>
<p>Then I recommend to you to use the word &#8220;char&#8221; or &#8220;byte&#8221; instead. &nbsp;And stick to functions like StringCbCat instead of StringCchCat, because StringCbCat counts bytes exactly the way its name and MSDN page say and they will be safe for you to use.</p>
<p>Thursday, December 14, 2006 8:26 AM by Tim Smith</p>
<p>&gt; Even with UCS2/UCS4/UTF32 there is a</p>
<p>&gt; difference between basic storage count, code</p>
<p>&gt; point count and character count.</p>
<p>I think you mean UTF16/UTF32. &nbsp;But either way, it shows yet again that if a function would be named StringCtcCat and would count TCHARs and would be documented as counting TCHARs then it would be correct.</p>
<p>If you meant that in response to my assertion &#8220;In Windows CE fortunately we can pretty much assume that a character is a character&#8221; then you&#8217;re right, so maybe my words &#8220;pretty much&#8221; needed more details. &nbsp;Maybe Windows CE will get support for surrogate pairs.</p>
<div class="post">[<i>Thanks, Norman, for hijacking another thread. Please everybody could you hold off on this topic until January 5th, when I&#8217;ll devote an entire day to the subject? Thanks. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-455393">
				<div id="div-comment-455393" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Alex Lite</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20061213-00/?p=28733#comment-455393">
			December 20, 2006 at 6:40 pm</a>		</div>

		<p>I have ListView in Report-style. Your code works, but only for label (first subitem) of list item.</p>
<p>So I have 2 questions:</p>
<ol>
<li>
<p>How to make the tip react on mouse hover &nbsp;not only on the label, but also on 2nd, 3rd and so on item?</p>
</li>
<li>
<p>Is it possible by standard methods to transform this default tip into baloon tip?</p>
</li>
</ol>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-459193">
				<div id="div-comment-459193" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blogs.msdn.com/oldnewthing/archive/2007/01/05/1416853.aspx' rel='external nofollow' class='url'>The Old New Thing : What('s) a character!</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20061213-00/?p=28733#comment-459193">
			January 5, 2007 at 10:00 am</a>		</div>

		<p>PingBack from <a rel="nofollow" target="_new" href="http://blogs.msdn.com/oldnewthing/archive/2007/01/05/1416853.aspx" rel="nofollow">http://blogs.msdn.com/oldnewthing/archive/2007/01/05/1416853.aspx</a></p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

