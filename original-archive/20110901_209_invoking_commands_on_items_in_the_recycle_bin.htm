<html>
<head>
<title>Invoking commands on items in the Recycle Bin</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>Invoking commands on items in the Recycle Bin</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>September 1, 2011 / year-entry #210</td></tr>
<tr><td><b>Tags:</b></td><td>code</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20110901-00/?p=9753</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>14</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">Once you've found the items you want in the Recycle Bin, you may want to perform some operation on them. This brings us back to our old friend, IContextMenu. At this point, you're just snapping two blocks together. You have one block called Retrieving properties from items in the Recycle Bin and you have another...</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>
Once you've found the items you want in the Recycle Bin,
you may want to perform some operation on them.
This brings us back to our old friend,
<code>IContextMenu</code>.
At this point, you're just
<a HREF="http://blogs.msdn.com/oldnewthing/archive/2009/08/04/9856634.aspx">
snapping two blocks together</a>.
You have one block called
<i>Retrieving properties from items in the Recycle Bin</i>
and you have another block called
<i>Invoking verbs on items</i></a>.
</p>
<p>
For the first block,
let's assume you've written a function called
<code>WantToRestoreThisItem</code> which studies the properties
of a Recycle Bin item and determines whether you want to restore it.
I leave this for you to implement,
since I don't know what your criteria are.
Maybe you want to restore files only if they were deleted from a
particular directory.
Maybe you want to restore files that were deleted while
you were drunk.
(This assumes you have some other computer program that tracks
when you're drunk.)&sup1;
Whatever.
It's your function.
</p>
<p>
For the second block, we have a helper function which
<a HREF="http://blogs.msdn.com/b/oldnewthing/archive/2004/09/20/231739.aspx">
should look awfully familiar</a>.
</p>
<pre>
void InvokeVerb(IContextMenu *pcm, PCSTR pszVerb)
{
 HMENU hmenu = CreatePopupMenu();
 if (hmenu) {
  HRESULT hr = pcm->QueryContextMenu(hmenu, 0, 1, 0x7FFF, CMF_NORMAL);
  if(SUCCEEDED(hr)) {
   CMINVOKECOMMANDINFO info = { 0 };
   info.cbSize = sizeof(info);
   info.lpVerb = pszVerb;
   pcm->InvokeCommand(&amp;info);
  }
  DestroyMenu(hmenu);
 }
}
</pre>
<p>
And now we snap the two blocks together.
</p>
<pre>
int __cdecl _tmain(int argc, PTSTR *argv)
{
 HRESULT hr = CoInitialize(NULL);
 if (SUCCEEDED(hr)) {
  IShellItem *psiRecycleBin;
  hr = SHGetKnownFolderItem(FOLDERID_RecycleBinFolder, KF_FLAG_DEFAULT,
                            NULL, IID_PPV_ARGS(&amp;psiRecycleBin));
  if (SUCCEEDED(hr)) {
   IEnumShellItems *pesi;
   hr = psiRecycleBin-&gt;BindToHandler(NULL, BHID_EnumItems,
                                     IID_PPV_ARGS(&amp;pesi));
   if (<font COLOR=blue>hr == S_OK</font>) {
    IShellItem *psi;
    while (pesi-&gt;Next(1, &amp;psi, NULL) == S_OK) {
     <font COLOR=blue>if (<font COLOR=red>WantToRestoreThisItem</font>(psi)) {
      IContextMenu *pcm;
      hr = psi->BindToHandler(NULL, BHID_SFUIObject,
                              IID_PPV_ARGS(&amp;pcm));
      if (SUCCEEDED(hr)) {
       <font COLOR=red>InvokeVerb</font>(pcm, "undelete");
       pcm-&gt;Release();
      }
     }</font>
     psi-&gt;Release();
    }
   }
   psiRecycleBin-&gt;Release();
  }
  CoUninitialize();
 }
 return 0;
}
</pre>
<p>
One annoyance of the Recycle Bin is that, at least up until Windows&nbsp;7,
it ignores the <code>CMIC_MASK_FLAG_NO_UI</code> flag.
It always displays a confirmation dialog if something dangerous is about
to happen (like overwriting an existing file).
To mitigate this problem, we can at least reduce the number of confirmations
from one-per-file to just one by batching up all the objects we want
to operate on into a single context menu.
For this, it's easier to go back to the classical version of the program.
</p>
<pre>
int __cdecl _tmain(int argc, PTSTR *argv)
{
 HRESULT hr = CoInitialize(NULL);
 if (SUCCEEDED(hr)) {
  IShellFolder2 *psfRecycleBin;
  hr = BindToCsidl(CSIDL_BITBUCKET, IID_PPV_ARGS(&amp;psfRecycleBin));
  if (SUCCEEDED(hr)) {
   IEnumIDList *peidl;
   hr = psfRecycleBin-&gt;EnumObjects(NULL,
     SHCONTF_FOLDERS | SHCONTF_NONFOLDERS, &amp;peidl);
   if (hr == S_OK) {
    <font COLOR=blue>// in a real program you wouldn't hard-code a fixed limit
    PITEMID_CHILD rgpidlItems[100];
    UINT cpidlItems = 0;</font>
    PITEMID_CHILD pidlItem;
    while (peidl-&gt;Next(1, &amp;pidlItem, NULL) == S_OK) {
     <font COLOR=blue>if (WantToRestoreThisItem(psfRecycleBin, pidlItem) &amp;&amp;
         cpidlItems &lt; ARRAYSIZE(rgpidlItems)) {
      rgpidlItems[cpidlItems++] = pidlItem;
     } else {</font>
      CoTaskMemFree(pidlItem);
     <font COLOR=blue>}</font>
    }
    <font COLOR=blue>// restore the items we collected
    if (cpidlItems) {
     IContextMenu *pcm;
     hr = psfRecycleBin-&gt;GetUIObjectOf(NULL, cpidlItems,
                     (PCUITEMID_CHILD_ARRAY)rgpidlItems,
                     IID_IContextMenu, NULL, (void**)&amp;pcm);
     if (SUCCEEDED(hr)) {
      InvokeVerb(pcm, "undelete");
      pcm-&gt;Release();
     }
     for (UINT i = 0; i < cpidlItems; i++) {
      CoTaskMemFree(rgpidlItems[i]);
     }
    }</font>
   }
   psfRecycleBin-&gt;Release();
  }
  CoUninitialize();
 }
 return 0;
}
</pre>
<p>
In the course of the enumeration, we save the <code>ITEMIDLIST</code>s
of all the items we want to restore, then create one giant context menu
for all of them.
This is the programmatic equivalent of multi-selecting the items from
the Recycle Bin and then right-clicking.
We then invoke the undelete verb on the entire group.
</p>
<p>
Okay, so now suppose you want to restore the files, but instead of
restoring them to their original locations, you want to restore them
to a special folder.
Like, say, <i>C:\Files I deleted while I was drunk</i>.&sup1;
No problem.
We just need a different block to snap into:
<a HREF="http://blogs.msdn.com/b/oldnewthing/archive/2008/07/24/8768095.aspx">
The drag/drop block</a>.
</p>
<pre>
void DropOnRestoreFolder(IDataObject *pdto)
{
 IDropTarget *pdt;
 if (SUCCEEDED(GetUIObjectOfFile(NULL,
        L"C:\\Files I deleted while I was drunk",
        IID_PPV_ARGS(&amp;pdt)))) {
  POINTL pt = { 0, 0 };
  DWORD dwEffect = DROPEFFECT_MOVE;
  if (SUCCEEDED(pdt-&gt;DragEnter(pdto, MK_LBUTTON,
                               pt, &amp;dwEffect))) {
   dwEffect &amp;= DROPEFFECT_MOVE;
   if (dwEffect) {
    pdt-&gt;Drop(pdto, MK_LBUTTON, pt, &amp;dwEffect);
   } else {
    pdt-&gt;DragLeave();
   }
  }
  pdt-&gt;Release();
 }
}
</pre>
<p>
And now it's just a matter of
snapping out the undelete block and
snapping in the drag/drop block.
</p>
<pre>
int __cdecl _tmain(int argc, PTSTR *argv)
{
 HRESULT hr = CoInitialize(NULL);
 if (SUCCEEDED(hr)) {
  IShellFolder2 *psfRecycleBin;
  hr = BindToCsidl(CSIDL_BITBUCKET, IID_PPV_ARGS(&amp;psfRecycleBin));
  if (SUCCEEDED(hr)) {
   IEnumIDList *peidl;
   hr = psfRecycleBin-&gt;EnumObjects(NULL,
     SHCONTF_FOLDERS | SHCONTF_NONFOLDERS, &amp;peidl);
   if (hr == S_OK) {
    // in a real program you wouldn't hard-code a fixed limit
    PITEMID_CHILD rgpidlItems[100];
    UINT cpidlItems = 0;
    PITEMID_CHILD pidlItem;
    while (peidl-&gt;Next(1, &amp;pidlItem, NULL) == S_OK) {
     if (WantToRestoreThisItem(psfRecycleBin, pidlItem) &amp;&amp;
         cpidlItems &lt; ARRAYSIZE(rgpidlItems)) {
      rgpidlItems[cpidlItems++] = pidlItem;
     } else {
      CoTaskMemFree(pidlItem);
     }
    }
    // restore the items we collected
    if (cpidlItems) {
     <font COLOR=blue>IDataObject *pdto;
     hr = psfRecycleBin-&gt;GetUIObjectOf(NULL, cpidlItems,
                     (PCUITEMID_CHILD_ARRAY)rgpidlItems,
                     IID_IDataObject, NULL, (void**)&amp;pdto);
     if (SUCCEEDED(hr)) {
      DropOnRestoreFolder(pdto);
      pdto-&gt;Release();
     }</font>
     for (UINT i = 0; i < cpidlItems; i++) {
      CoTaskMemFree(rgpidlItems[i]);
     }
    }</font>
   }
   psfRecycleBin-&gt;Release();
  }
  CoUninitialize();
 }
 return 0;
}
</pre>
<p>
<b>Footnotes</b>
</p>
<p>
&sup1; If being drunk isn't your thing, then
substitute some other form of impaired judgment.</p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (14)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-933183">
				<div id="div-comment-933183" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110901-00/?p=9753#comment-933183">
			September 1, 2011 at 9:23 am</a>		</div>

		<p>I think I&#39;m staying away from this technique. The only thing that would drive me to use it is being in a service context or some other reason why the UI is not directly displayable.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-brunopitrus odd alt thread-odd thread-alt depth-1" id="comment-933193">
				<div id="div-comment-933193" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/kinokijuf' rel='external nofollow' class='url'>kinokijuf</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110901-00/?p=9753#comment-933193">
			September 1, 2011 at 9:31 am</a>		</div>

		<p>Request for Windows 8: Add feature that allows only guest account login when the user at the console is drunk.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-brunopitrus even thread-even depth-1" id="comment-933203">
				<div id="div-comment-933203" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/kinokijuf' rel='external nofollow' class='url'>kinokijuf</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110901-00/?p=9753#comment-933203">
			September 1, 2011 at 9:34 am</a>		</div>

		<p>Nitpicker&#39;s Corner: You should create folders under user&#39;s profile instead of under C:</p>
<div class="post">[<i>That would have complicated the example, and it&#39;s unrelated to the point of the exercise. I bet you also tell people who write sample code that &quot;foo&quot; is a bad name for a variable. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-933213">
				<div id="div-comment-933213" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">KS</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110901-00/?p=9753#comment-933213">
			September 1, 2011 at 10:00 am</a>		</div>

		<p>I can&#39;t remember exactly, but weren&#39;t you supposed to create a message pump in the thread that uses apartment threaded objects (CoInitialize(NULL))? This thing has always confused me.</p>
<div class="post">[<i>If you are apartment-threaded, then you must pump messages while waiting. But we never wait. (The methods we call may wait, and since they are apartment-threaded, they are responsible for pumping messages while <span style="text-decoration:underline;">they</span> wait.) -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-933223">
				<div id="div-comment-933223" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">D-Coder</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110901-00/?p=9753#comment-933223">
			September 1, 2011 at 10:08 am</a>		</div>

		<p>&quot;(This assumes you have some other computer program that tracks when you&#39;re drunk.)¹&quot;</p>
<p>Doesn&#39;t everyone?</p>
<p>I would post the code but apparently I deleted the source while I was drunk.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-933233">
				<div id="div-comment-933233" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Adam Rosenfield</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110901-00/?p=9753#comment-933233">
			September 1, 2011 at 10:11 am</a>		</div>

		<p>Where can I get a computer program that tracks when I am drunk?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-933243">
				<div id="div-comment-933243" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Dan Bugglin</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110901-00/?p=9753#comment-933243">
			September 1, 2011 at 10:28 am</a>		</div>

		<p>Check out Gmail Labs, there is a &quot;Google Goggles&quot; or somesuch lab that requires you to answer simple math problems before sending e-mail at certain pre-defined times. &nbsp;If you cannot you are not permitted to send the e-mail.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-933253">
				<div id="div-comment-933253" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">voo</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110901-00/?p=9753#comment-933253">
			September 1, 2011 at 10:44 am</a>		</div>

		<p>@The MAZZTer &quot;simple math problems&quot;? ;) You don&#39;t happen to have a PhD in math, do you? Sure the first few levels are trivial, but I doubt that more than some geniuses can solve the level10 problems in the allocated time &#8211; at least not without help (and if I use mathematica I assume I&#39;m cheating?).</p>
<p>eg: <a rel="nofollow" target="_new" href="http://imgs.xkcd.com/blag/googlecopy.jpg" rel="nofollow">imgs.xkcd.com/&#8230;/googlecopy.jpg</a> &#8211; goodness how the hell would I solve that (mathematica needs half a minute or so to solve the indefinite integral~). Though maybe I&#39;m missing some clever simplification ;)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-933263">
				<div id="div-comment-933263" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Stuart</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110901-00/?p=9753#comment-933263">
			September 1, 2011 at 1:00 pm</a>		</div>

		<p>I was looking to see if anyone would post the source code to the method that would determine if they were drunk&#8230;</p>
<p>public static bool AmIDrunk() {</p>
<p>&nbsp;return true;</p>
<p>}</p>
<p>(code is in C#, translation to your language of choice left as an exercise for the reader)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-933293">
				<div id="div-comment-933293" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">IK</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110901-00/?p=9753#comment-933293">
			September 1, 2011 at 8:14 pm</a>		</div>

		<p>[&#8230;] we’ll be saying a big hello to all intelligent life forms everywhere… and to everyone else out there, the secret is to bang the rocks together, guys.</p>
<ul>
<li>The Hitchhiker’s Guide to the Galaxy</li>
</ul>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-cheong even thread-even depth-1" id="comment-933303">
				<div id="div-comment-933303" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/cheong00' rel='external nofollow' class='url'>cheong00</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110901-00/?p=9753#comment-933303">
			September 1, 2011 at 10:34 pm</a>		</div>

		<p>@Stuart: You may want to back-track whether you were drunk at some time, so:</p>
<p>public static bool AmIDrunk(DataTime timePointToCheck) {</p>
<p>return true;</p>
<p>}</p>
<p>Btw, this function works even if you track future timepoint as well&#8230; (I must be drunk)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-933313">
				<div id="div-comment-933313" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blogs.msdn.com/computer_2D00_dude_4000_hotmail.com/ProfileUrlRedirect.ashx' rel='external nofollow' class='url'>computer-dude@hotmail.com</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110901-00/?p=9753#comment-933313">
			September 1, 2011 at 10:50 pm</a>		</div>

		<p>@voo: &quot;Sure the first few levels are trivial, but I doubt that more than some geniuses can solve the level10 problems in the allocated time &#8211; at least not without help (and if I use mathematica I assume I&#39;m cheating?).&quot;</p>
<p>So don&#39;t set it to level 10?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-933343">
				<div id="div-comment-933343" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">JM</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110901-00/?p=9753#comment-933343">
			September 2, 2011 at 1:34 am</a>		</div>

		<p>@cheong00: you were drunk before you were born? I think I read a Zen koan about that once. You&#39;ll also be drunk after you&#39;re dead, apparently, but that&#39;s slightly more plausible (I assume you&#39;ve made arrangements in Valhalla).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-933503">
				<div id="div-comment-933503" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">constb</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110901-00/?p=9753#comment-933503">
			September 2, 2011 at 10:17 pm</a>		</div>

		<p>What if drop target is not a folder but rather a window with &#39;DragAcceptFiles -&gt; TRUE&#39; flavor? How to get an IDropTarget for that?</p>
<div class="post">[<i>This question is not specific to Recycle Bin data objects. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

