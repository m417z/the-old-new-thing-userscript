<html>
<head>
<title>How do I request that my out-of-process COM server run unelevated?</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>How do I request that my out-of-process COM server run unelevated?</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>September 5, 2018 / year-entry #201</td></tr>
<tr><td><b>Tags:</b></td><td>code</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20180905-00/?p=99655</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>6</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">Back to the interactive user.</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>
By default,
if an elevated process creates an out-of-process COM server,
that COM server also runs elevated.
The
<a HREF="https://blogs.msdn.microsoft.com/larryosterman/2005/10/18/activate-as-activator-activates-as-activator/">
<i>Activate as Activator</i> policy</a>
runs the COM server with the same identity as the caller.
When applied to an elevated caller, it means that client gets
an elevated server running with the same identity. 
</p>
<p>
To force the out-of-process COM server to run unelevated,
set the <b>RunAs</b> value under the <b>AppID</b> key as follows: 
</p>
<pre>
[HKEY_LOCAL_MACHINE\Software\Classes\AppID\{guid}]
  RunAs="Interactive User"
</pre>
<p>
This causes the server to activate
as the currently logged-in user for the session,
even if the activator is running elevated. 
</p>
<p>
Be aware that the currently logged-in user may,
nevertheless,
be elevated if UAC is disabled,
so this is not a guaranteed way to get a non-elevated server.
Still, if UAC is disabled,
then there is no such thing as an unelevated administrator,
so the thing you're asking for doesn't exist in the first place.
</p>
<p>
<b>Bonus reading</b>:
<a HREF="https://docs.microsoft.com/en-us/windows/desktop/com/runas">
The <b>RunAs</b> value</a>.</p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (6)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1 parent" id="comment-1359525">
				<div id="div-comment-1359525" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Stewart</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180905-00/?p=99655#comment-1359525">
			September 5, 2018 at 7:10 am</a>		</div>

		<p>How does this work if runas has been used to run the app as a different account? Would the COM server be running as the user the app is running as, or as the user that logged into the session?</p>

		
				</div>
		<ol class="children">
		<li class="comment odd alt depth-2" id="comment-1359695">
				<div id="div-comment-1359695" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">tiraniddo</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180905-00/?p=99655#comment-1359695">
			September 6, 2018 at 2:56 pm</a>		</div>

		<p>The current implementation uses the console session&#8217;s user token (i.e. what you&#8217;d get back from WTSQueryUserToken) which means if you login with one user (say Alice) then use the runas command to spawn something as a different user account (say Bob) then any Interactive User COM objects that Bob&#8217;s process creates will actually run under Alice&#8217;s account. This can cause these COM objects to fail because the default access security descriptor for COM only grants to Admins and Self, which for COM is the COM server&#8217;s user account. I&#8217;ve also abused this behaviour before for a cross session exploit (<a href="https://googleprojectzero.blogspot.com/2016/01/raising-dead.html" rel="nofollow">https://googleprojectzero.blogspot.com/2016/01/raising-dead.html</a> if you&#8217;re curious)</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment byuser comment-author-wndsks even thread-odd thread-alt depth-1 parent" id="comment-1359545">
				<div id="div-comment-1359545" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/skSdnW' rel='external nofollow' class='url'>skSdnW</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180905-00/?p=99655#comment-1359545">
			September 5, 2018 at 7:54 am</a>		</div>

		<p>&#8220;Logged-in user for the session&#8221; is ambiguous IMHO. The user who logged in on the &#8220;welcome screen&#8221; (the TS/RDP session) might not be the same as the user SID for GetCurrentProcess() if RunAs/LogonUser/UAC has been used to create a different logon session (or whatever it&#8217;s called).</p>

		
				</div>
		<ol class="children">
		<li class="comment odd alt depth-2" id="comment-1359575">
				<div id="div-comment-1359575" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Harry Johnston</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180905-00/?p=99655#comment-1359575">
			September 5, 2018 at 3:30 pm</a>		</div>

		<p>In context, Raymond must mean the user who logged in from the &#8220;welcome screen&#8221; because the elevated and restricted tokens are in different logon sessions, so if it worked that way you&#8217;d still be elevated.</p>
<p>The documentation isn&#8217;t as clear as it could be, mind you.  <em>Which</em> interactive desktop?  The one belonging to the Remote Desktop session the process is running in, presumably, but it <em>could</em> be interpreted to mean the desktop attached to the local console.</p>
<p>It also leaves me wondering what exactly happens if the COM server is invoked in a non-interactive context, e.g., from a system service.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1359585">
				<div id="div-comment-1359585" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180905-00/?p=99655#comment-1359585">
			September 5, 2018 at 4:28 pm</a>		</div>

		<p>Well if you are an Administrator you can construct a non-admin version of your own token. But COM elevation doesn&#8217;t know about it and the resulting limited process doesn&#8217;t know how to elevate back.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-cheong odd alt thread-odd thread-alt depth-1" id="comment-1359645">
				<div id="div-comment-1359645" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/cheong00' rel='external nofollow' class='url'>cheong00</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180905-00/?p=99655#comment-1359645">
			September 5, 2018 at 11:21 pm</a>		</div>

		<p>I thought it would be something using CreateRestrictedToken() API, so it runs as limited user whether UAC is enabled or not, or even in WinXP where UAC is not a thing yet.</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

