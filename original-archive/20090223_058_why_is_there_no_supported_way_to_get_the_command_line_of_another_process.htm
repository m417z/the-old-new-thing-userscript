<html>
<head>
<title>Why is there no supported way to get the command line of another process?</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>Why is there no supported way to get the command line of another process?</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>February 23, 2009 / year-entry #59</td></tr>
<tr><td><b>Tags:</b></td><td>code</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20090223-00/?p=19063</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>28</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">Commenter Francisco Moraes wonders whether there is a supported way of getting the command line of another process. Although there are certainly unsupported ways of doing it or ways that work with the assistance of a debugger, there's nothing that is supported for programmatic access to another process's command line, at least nothing provided by...</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>Commenter Francisco Moraes wonders <a href="http://blogs.msdn.com/oldnewthing/pages/407234.aspx#540069"> whether there is a supported way of getting the command line of another process</a>. Although there are certainly <a href="http://blogs.msdn.com/mithuns/archive/2006/02/18/534893.aspx"> unsupported ways of doing it</a> or <a href="http://blogs.msdn.com/danielvl/archive/2007/04/30/how-to-find-a-process-command-line-using-kernel-debugger.aspx"> ways that work with the assistance of a debugger</a>, there's nothing that is supported for programmatic access to another process's command line, at least nothing provided by the kernel. (The WMI folks have come up with <a href="http://msdn2.microsoft.com/en-us/library/aa394372.aspx"> Win32_Process.CommandLine</a>. I have no idea how they get that. You'll have to ask them yourself.)</p>
<p> That there isn't is a consequence of the principle of <a href="http://blogs.msdn.com/oldnewthing/archive/2009/02/16/9425124.aspx"> not keeping track of information which you don't need</a>. The kernel has no need to obtain the command line of another process. It takes <a href="http://blogs.msdn.com/oldnewthing/archive/2003/12/10/56028.aspx"> the command line passed to the <code>CreateProcess</code> function</a> and copies it into the address space of the process being launched, in a location where the <code>GetCommandLine</code> function can retrieve it. Once the process can access its own command line, the kernel's responsibilities are done. </p>
<p> Since the command line is copied into the process's address space, the process might even write to the memory that holds the command line and modify it. If that happens, then the original command line is lost forever; the only known copy got overwritten. </p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (28)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-710873">
				<div id="div-comment-710873" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">John</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090223-00/?p=19063#comment-710873">
			February 23, 2009 at 10:45 am</a>		</div>

		<p>Doesn&#8217;t this fall into the category of things you can &quot;recalculate&quot;? &nbsp;I mean, why not something like:</p>
<p>LPTSTR GetProcessCommandLine(DWORD dwProcessId)</p>
<p>{</p>
<p>&nbsp; // open the process and read the command line from the peb; copy with LocalAlloc(), free with LocalFree() (or whatever)</p>
<p>}</p>
<p>I suspect this is how everyone does it. &nbsp;Granted it doesn&#8217;t solve the &quot;lost forever&quot; problem, but given the design / architecture there is only so much you can do.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-710883">
				<div id="div-comment-710883" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">someone else</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090223-00/?p=19063#comment-710883">
			February 23, 2009 at 11:05 am</a>		</div>

		<p>Process Explorer doesn&#8217;t seem to have a problem with that either &#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-710893">
				<div id="div-comment-710893" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joseph Koss</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090223-00/?p=19063#comment-710893">
			February 23, 2009 at 11:33 am</a>		</div>

		<p>When there are known cases where programs are in fact doing this, its probably time to either go ahead and define a method in which to do this or declare that they cannot (and then enforce that.)</p>
<p>Seeing that this is Raymonds blog, obviously compatability is king here, so denying this behavior is (at least for now) unacceptable.</p>
<p>So make it an API, make peoples lives easier in the process, and eventualy the direct peeking method will become far less of a future compatability (&#8230;yet-another-shim&#8230;) concern.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-710903">
				<div id="div-comment-710903" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">arousedboat</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090223-00/?p=19063#comment-710903">
			February 23, 2009 at 11:37 am</a>		</div>

		<p>&quot;Process Explorer doesn&#8217;t seem to have a problem with that either &#8230;&quot;</p>
<p>Congratulations &#8211; you&#8217;ve discovered that Process Explorer doesn&#8217;t always use supported methods of getting the information it shows you. Not exactly surprising&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-710913">
				<div id="div-comment-710913" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">asf</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090223-00/?p=19063#comment-710913">
			February 23, 2009 at 11:38 am</a>		</div>

		<p>&#8230;but there is nothing stopping you from looking at the WMI source and helping the world&#8230;</p>
<div class=post>[<i>Um, first I have to gain access to the WMI source code. No wait, first I have to find the WMI source code. No wait, first I have to actually care. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-710933">
				<div id="div-comment-710933" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">John</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090223-00/?p=19063#comment-710933">
			February 23, 2009 at 11:58 am</a>		</div>

		<p>Um, I&#8217;m pretty sure WMI uses the same method to read the command line from the PEB. &nbsp;In fact, I just verified it with a test program that modifies its own command line. &nbsp;Using the same test, it is evident that Process Explorer also uses the same method. &nbsp;Everybody is doing it this way, so why not provide an API that does it?</p>
<div class=post>[<i>Um, the API is WMI. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-710943">
				<div id="div-comment-710943" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">quotemstr</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090223-00/?p=19063#comment-710943">
			February 23, 2009 at 12:30 pm</a>		</div>

		<p>Incidentally, the command-line is available in unixland. One neat trick is to deliberately overwrite it with status information &#8212; that way, when ps displays a process&#8217; command line (reading it out of the process&#8217; memory), the listing will include information about what the process is actually doing.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-710953">
				<div id="div-comment-710953" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">John</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090223-00/?p=19063#comment-710953">
			February 23, 2009 at 12:32 pm</a>		</div>

		<p>I meant a plain old Win32 function; I thought that was made evident by my previous comment. &nbsp;Who wants to deal with all the COM setup, teardown, and other junk required for using WMI in C?</p>
<div class=post>[<i>I&#8217;m sure somebody can write a wrapper function for you. I doubt the kernel will ever expose such a function since people would expect it to be accurate, which it isn&#8217;t. (See last paragraph of article.) -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-711003">
				<div id="div-comment-711003" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Tsukrov</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090223-00/?p=19063#comment-711003">
			February 23, 2009 at 2:42 pm</a>		</div>

		<p>Hi!</p>
<p>The first idea, that I got, was to launch a remote thread in the target process and call this GetCommandLine();</p>
<p>Then I need to read it back from my process.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-711043">
				<div id="div-comment-711043" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">John Muller</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090223-00/?p=19063#comment-711043">
			February 23, 2009 at 4:13 pm</a>		</div>

		<p>So how about the &quot;Command Line&quot; column in Task Manager built into Vista?</p>
<p>If the kernel dosn&#8217;t track it, perhaps Win32/Shell does&#8230; something does.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-711053">
				<div id="div-comment-711053" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://technage.blogspot.com' rel='external nofollow' class='url'>Technage</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090223-00/?p=19063#comment-711053">
			February 23, 2009 at 4:28 pm</a>		</div>

		<p>Blech remoting gets so messy, of course there are some things it does well.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-711063">
				<div id="div-comment-711063" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">porter</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090223-00/?p=19063#comment-711063">
			February 23, 2009 at 6:18 pm</a>		</div>

		<blockquote><p>
  &gt; Incidentally, the command-line is available in unixland. One neat trick is to deliberately overwrite it with status information&#8230;
</p></blockquote>
<p>Hence it is actually not available, eg if you change it then the original command line is not available, all you are refering to is the current values of the argv array.</p>
<p>Also the behaviour you are observing is not portable amongst all UNIX derivations.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-711073">
				<div id="div-comment-711073" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Xepol</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090223-00/?p=19063#comment-711073">
			February 23, 2009 at 6:47 pm</a>		</div>

		<p>You can recall the function and get the same info again, there for the OS DOES track this information. &nbsp;The fact that an APP will copy the info into user space to modify it has no bearing on that.</p>
<p>Clearly, the information is being not just remembered, but tracked in relationship to the process ID (so that the process can get ITS command line, not just the last one used)</p>
<p>So all of your arguments fall apart here.</p>
<p>One could describe this as a security feature except that it is so easily cirumvented and is not supported by the poor design of the interprocess isolation model in windows.</p>
<p>The honest answer here folks is &#8220;no one thought to write a function for it&#8221;</p>
<div class=post>[<i>The only &#8220;tracking&#8221; the OS does is remembering where it copied the string so it can be returned when you call <code>GetCommandLine</code>. It&#8217;s not tracked in relationship to the ID; it&#8217;s &#8220;tracked&#8221; in the process&#8217;s address space itself. Once the process address space disappears, so too does the command line. Note that there is no synchronization on this buffer &#8211; if an application happens to be modifying the buffer while you&#8217;re reading from it, the results are indeterminate (you might even crash because the application stomped the null terminator, resulting in your code that tries to copy the string running off the end). -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-711083">
				<div id="div-comment-711083" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">brone</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090223-00/?p=19063#comment-711083">
			February 23, 2009 at 7:03 pm</a>		</div>

		<p>GetCommandLine returns a non-const pointer. Presumably this points into some writeable process-specific storage, initialized by the program loader, that the app can munge any way it sees fit. No need for the app to take a copy, and no reason for the loader to store another copy.</p>
<p>So perhaps, more precisely, you could say that one can retrieve a pointer to the buffer that the process&#8217;s command line was originally stored in &#8212; but there&#8217;s no guarantee that this buffer will actually contain anything useful.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-711093">
				<div id="div-comment-711093" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Brian</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090223-00/?p=19063#comment-711093">
			February 23, 2009 at 7:09 pm</a>		</div>

		<p>Xepol: Huh? I assume by &quot;the function&quot; you mean &quot;GetCommandLine()&quot; in which case, it&#8217;s simply returning a pointer to some bit of memory in the processes address space. &nbsp;The OS copies the command line to that spot on process launch, then it throws it away.</p>
<p>If you call GetCommandLine(), modify the result, then call GetCommandLine() again, it will happily return you the modified version. &nbsp;Here&#8217;s a quick program that demonstrates this:</p>
<p>int WinMain( HINSTANCE hInstance, HINSTANCE hPrevInstance, LPTSTR lpCmdLine, int nCmdShow ) {</p>
<pre><code>MessageBox( NULL, lpCmdLine, &amp;quot;lpCmdLine (before)&amp;quot;, MB_OK );

MessageBox( NULL, GetCommandLine(), &amp;quot;GetCommandLine() (before)&amp;quot;, MB_OK );

strcpy( lpCmdLine, &amp;quot;hello&amp;quot; );

MessageBox( NULL, lpCmdLine, &amp;quot;lpCmdLine (after)&amp;quot;, MB_OK );

MessageBox( NULL, GetCommandLine(), &amp;quot;GetCommandLine() (after)&amp;quot;, MB_OK );

return (int)0;
</code></pre>
<p>}</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-711113">
				<div id="div-comment-711113" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Anonymous Coward</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090223-00/?p=19063#comment-711113">
			February 24, 2009 at 9:05 am</a>		</div>

		<p>Thanks for this insight. I have been toying around recently with a bit of a puzzle, but had trouble getting it to work reliably. I wanted Notepad to open a file that wasn&#8217;t actually a real file, and I had to pass through Notepad which not so real file I wanted it to read. (That was the tricky bit.) Now I simply pass it on the commandline, do my little tricks, modify the commandline to resemble a ‘tradional’ Notepad commandline and presto &#8211; problem solved.</p>
<p>This is why I keep reading The Old New Thing. There are so many things that really should be obvious, in retrospect, but that I just didn&#8217;t know. Every now and then a post makes me go ‘Aha!’ and that&#8217;s why I love it.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-711193">
				<div id="div-comment-711193" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Stewrat</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090223-00/?p=19063#comment-711193">
			February 24, 2009 at 12:13 pm</a>		</div>

		<p>This seems like a question that gets a lot of attention. Is it just me that doesn&#8217;t understand why? Is it a really common thing for unix apps to perform some rudimentary IPC using their command lines or something. I&#8217;ve never yet had a need to query a running processes command line. I can see why Process Explorer might want to do it, because it is for debugging, but process explorer already exists, so I assume people aren&#8217;t rewriting that.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-711213">
				<div id="div-comment-711213" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">quotemstr</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090223-00/?p=19063#comment-711213">
			February 24, 2009 at 1:41 pm</a>		</div>

		<p>&quot;I&#8217;ve never yet had a need to query a running processes command line.&quot;</p>
<p>It actually comes in handy quite often. Say you want to restart a running process; you can use ps(1) to look at its command line and ensure you re-launch it with the same arguments. Not only is the command-line available, by the way, but the environment too: image you need to figure out whether a given process was given FOO_DEBUG=1 in its environment; you can use ps for that too.</p>
<p>Also, I&#8217;ve never seen a process use command-line modification for IPC. It&#8217;s more a courtesy to the administrator than a robust communication mechanism.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-711243">
				<div id="div-comment-711243" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">porter</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090223-00/?p=19063#comment-711243">
			February 24, 2009 at 3:31 pm</a>		</div>

		<blockquote><p>
  &gt; Now I simply pass it on the commandline, do my little tricks, modify the commandline to resemble a ‘tradional’ Notepad commandline and presto &#8211; problem solved.
</p></blockquote>
<p>Was that really easier than creating a window with an edit control? I wonder what the problem really was.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-711523">
				<div id="div-comment-711523" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Stewart</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090223-00/?p=19063#comment-711523">
			February 25, 2009 at 1:08 pm</a>		</div>

		<p>&quot;It actually comes in handy quite often. Say you want to restart a running process; you can use ps(1) to look at its command line and ensure you re-launch it with the same arguments. Not only is the command-line available, by the way, but the environment too: image you need to figure out whether a given process was given FOO_DEBUG=1 in its environment; you can use ps for that too.&quot;</p>
<p>So the people that need to do this are developers then? People who work in the command prompt a lot. I have a build job running right now that I wish I could see the environment for, because I can&#8217;t remember if I set it up right, but is it really the OS&#8217;s job to do that. Fundamentally windows is a GUI OS and most users don&#8217;t know or care what a command line is. I say let the OS worry about tracking the stuff that they care about, and let me worry about my mistakes.</p>
<p>Also, what do you do if the process changed its command line, which I understand is possible.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-711683">
				<div id="div-comment-711683" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Anonymous</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090223-00/?p=19063#comment-711683">
			February 25, 2009 at 5:49 pm</a>		</div>

		<p>Stewart:</p>
<p>I believe in Linux at least, the kernel keeps a separate buffer for the command line. &nbsp;If a process changes its copy, the one that was passed into execve() can still be retrieved using the /proc filesystem.</p>
<p>There&#8217;s another interesting point about this, though. &nbsp;In Linux, at least the last time I tried this, I found a process can lie about its name. &nbsp;If you call execve() with argv[0] as something bogus, but the first argument of execve() points to a legitimate executable path, ps will display the &quot;fake&quot; value from argv[0] instead of the real executable name.</p>
<p>By the way, I&#8217;ve never heard of being able to get a program&#8217;s environment with ps. &nbsp;Though Linux /proc might expose that.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-711753">
				<div id="div-comment-711753" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">porter</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090223-00/?p=19063#comment-711753">
			February 25, 2009 at 11:05 pm</a>		</div>

		<blockquote><p>
  &gt; By the way, I&#8217;ve never heard of being able to get a program&#8217;s environment with ps.
</p></blockquote>
<p>Have you never heard of &quot;man ps&quot;?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-711793">
				<div id="div-comment-711793" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">AC</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090223-00/?p=19063#comment-711793">
			February 26, 2009 at 6:00 am</a>		</div>

		<blockquote><p>
  &gt; Have you never heard of &quot;man ps&quot;?
</p></blockquote>
<p>Helpful suggestion. I typed that into my command prompt and it printed out the following though</p>
<p>&#8216;man&#8217; is not recognized as an internal or external command,</p>
<p>operable program or batch file.</p>
<p>Which version of windows did this goodness ship with?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-712013">
				<div id="div-comment-712013" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.tpasoft.com' rel='external nofollow' class='url'>Kevin Provance</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090223-00/?p=19063#comment-712013">
			February 26, 2009 at 9:41 pm</a>		</div>

		<p>What&#8217;s the deal with the five stars next to the comment link?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-712063">
				<div id="div-comment-712063" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">porter</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090223-00/?p=19063#comment-712063">
			February 27, 2009 at 5:42 am</a>		</div>

		<blockquote><p>
  &gt; Which version of windows did this goodness ship with?
</p></blockquote>
<p>SFU 3.5, for example. :)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-712563">
				<div id="div-comment-712563" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Bur</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090223-00/?p=19063#comment-712563">
			February 28, 2009 at 6:05 am</a>		</div>

		<blockquote><p>
  &gt; What&#8217;s the deal with the five stars next to the comment link?
</p></blockquote>
<p>Hover your mouse over the image and you&#8217;ll get enlightened.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-712603">
				<div id="div-comment-712603" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.tpasoft.com' rel='external nofollow' class='url'>Kevin Provance</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090223-00/?p=19063#comment-712603">
			February 28, 2009 at 5:27 pm</a>		</div>

		<p>@Bur &#8211; nothing pops up. &nbsp;::shrug::</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-712763">
				<div id="div-comment-712763" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">me</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090223-00/?p=19063#comment-712763">
			March 2, 2009 at 8:34 am</a>		</div>

		<p>Seeing that Windows is, was or has once pretended to be, POSIX compatible, it&#8217;s not quite surprising that the information that is needed to support the required features, such as command line parameter handling, is in fact available.</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

