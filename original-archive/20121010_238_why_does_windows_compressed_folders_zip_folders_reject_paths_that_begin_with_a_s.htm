<html>
<head>
<title>Why does Windows Compressed Folders (Zip folders) reject paths that begin with a slash?</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>Why does Windows Compressed Folders (Zip folders) reject paths that begin with a slash?</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>October 10, 2012 / year-entry #239</td></tr>
<tr><td><b>Tags:</b></td><td>tipssupport</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20121010-00/?p=6363</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>20</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">A customer asked, "Does NTFS support files with a null string as the name?" No, NTFS does not support files with no name. None of the commonly-used Windows file systems do. Files must have a name. But what a strange question that is. The customer was kind enough to explain why they cared. "We have...</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>A customer asked, "Does NTFS support files with a null string as the name?"</p>
<p> No, NTFS does not support files with no name. None of the commonly-used Windows file systems do. Files must have a name. But what a strange question that is. The customer was kind enough to explain why they cared. </p>
<p> "We have a zip file that the Compressed Folders (Zip folders) feature that comes with Windows cannot deal with. When we try to extract the contents of the zip file, we get the error message 'Windows has blocked access to these files to help protect your computer.' We've attached a copy of the file." </p>
<p> The Compressed Folders functionality in Explorer has many known limitations, such as lack of support for ZIP64 and AES encryption. Neither of those applied to the zip file in question, however. </p>
<p> The customer explained what they did. "We created the zip file with a third party zip tool. In particular, after adding a directory tree to the zip file, we renamed the root of the tree to have a blank name. In the zip file we sent you, we added A/file.txt, and then we used the zip tool to rename 'A' to the empty string." </p>
<p> And indeed if you looked at the zip file in a hex editor, the file name was "/file.txt". </p>
<p> Now the pieces fell into place. The Compressed Folders code was blocking the file because it was attempting to perform a directory traversal; specifically, it was trying to drop a file in the root directory. The <a href="http://www.pkware.com/documents/casestudies/APPNOTE.TXT"> ZIP Application Note</a> says that the "file name" field consists of "The name of the file, with optional relative path." Note that the path must be relative. The next sentence emphasizes this point: "The path stored should not contain a drive or device letter, or leading slash." Therefore, the zip file is invalid, and the Compressed Folders code is within its rights to <a href="http://blogs.msdn.com/b/oldnewthing/archive/2011/06/09/10172702.aspx#10172993"> reject it</a>. (And one wonders why the zip tool allowed the user to create an invalid zip file.) </p>
<p> It's unclear what the customer was trying to do by renaming "A" to the empty string. So the recommendation back to the customer was "Don't do that." </p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (20)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-1015323">
				<div id="div-comment-1015323" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Rob</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20121010-00/?p=6363#comment-1015323">
			October 10, 2012 at 7:08 am</a>		</div>

		<p>Doctor, it hurts when I do this!</p>
<p>Then don&#39;t do that!</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1015333">
				<div id="div-comment-1015333" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">PkWare</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20121010-00/?p=6363#comment-1015333">
			October 10, 2012 at 7:12 am</a>		</div>

		<p>I love the fact that the document was updated little more than a month ago (reformatting). And that there is still pkware around.</p>
<p>Sad story the one of Phil Katz though :(</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1015343">
				<div id="div-comment-1015343" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20121010-00/?p=6363#comment-1015343">
			October 10, 2012 at 8:05 am</a>		</div>

		<p>I wonder if it catches symlink directory traversal.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-fredericmagnyf odd alt thread-odd thread-alt depth-1" id="comment-1015353">
				<div id="div-comment-1015353" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Medinoc' rel='external nofollow' class='url'>Medinoc</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20121010-00/?p=6363#comment-1015353">
			October 10, 2012 at 8:38 am</a>		</div>

		<p>Speaking of ZipFldr.dll, does it now call SHGetInstanceExplorer ( <a rel="nofollow" target="_new" href="http://blogs.msdn.com/b/oldnewthing/archive/2008/05/28/8555658.aspx" rel="nofollow">blogs.msdn.com/&#8230;/8555658.aspx</a> ) for its worker threads so a program can refrain from terminating until it&#39;s done? Because last time I tried (which was admittedly five years ago), it didn&#39;t.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1015393">
				<div id="div-comment-1015393" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Danny</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20121010-00/?p=6363#comment-1015393">
			October 10, 2012 at 9:58 am</a>		</div>

		<p>Get a Word .docx file. Rename it to .zip. Use that tool to rename one file inside the .zip archive to empty name. Rename the .zip back to .docx. Try open it in Word and watch what is happening. (Brought to you by Toy..erm..Danny :P)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1015403">
				<div id="div-comment-1015403" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Dan Bugglin</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20121010-00/?p=6363#comment-1015403">
			October 10, 2012 at 10:13 am</a>		</div>

		<p>Joshua: Not sure how that would be a problem. &nbsp;ZIP files can only extract files to the current directory and never a parent one. &nbsp;ZIP files also cannot embed symlinks inside themselves; the format doesn&#39;t support it AFAIK. &nbsp;So the only symlink traversal that can be done is with symlinks that already exist on the filesystem. &nbsp;No system-created symlink in Windows does anything like linking to the root dir (mostly just links inside of a user&#39;s profile directory), and if the user makes one its their problem.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1015413">
				<div id="div-comment-1015413" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Josh</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20121010-00/?p=6363#comment-1015413">
			October 10, 2012 at 10:15 am</a>		</div>

		<p>Couldn&#39;t they have just renamed the root to &quot;.&quot;?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1015433">
				<div id="div-comment-1015433" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Cesar</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20121010-00/?p=6363#comment-1015433">
			October 10, 2012 at 10:29 am</a>		</div>

		<blockquote><p>
  It&#39;s unclear what the customer was trying to do by renaming &quot;A&quot; to the empty string.
</p></blockquote>
<p>They probably wanted to move the contents one level up. That is, instead of A/file.txt, they wanted file.txt. They probably do not know Unix enough to understand that &quot;/file.txt&quot; means file.txt in the root directory, and probably thought it meant the same as &quot;./file.txt&quot;, that is, in the current directory.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1015443">
				<div id="div-comment-1015443" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">foo</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20121010-00/?p=6363#comment-1015443">
			October 10, 2012 at 10:36 am</a>		</div>

		<p>Adventures in undefined behaviour, user space</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1015453">
				<div id="div-comment-1015453" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Cesar</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20121010-00/?p=6363#comment-1015453">
			October 10, 2012 at 10:37 am</a>		</div>

		<p>@The MAZZTer: &quot;ZIP files also cannot embed symlinks inside themselves; the format doesn&#39;t support it AFAIK.&quot;</p>
<p>Wrong. Look at the APPNOTE.TXT Raymond linked. I can easily create a zip file with a symbolic link:</p>
<p>$ touch file.txt</p>
<p>$ ln -s file.txt link.txt</p>
<p>$ zip &#8211;symlinks test.zip link.txt</p>
<p>It does recreate the symbolic link when unpacked:</p>
<p>$ unzip test.zip</p>
<p>Archive: &nbsp;test.zip</p>
<p>&nbsp; &nbsp;linking: link.txt &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;-&gt; file.txt</p>
<p>finishing deferred symbolic links:</p>
<p>&nbsp;link.txt &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; -&gt; file.txt</p>
<p>However, I expect the Windows built-in unpacker to ignore these symbolic links.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1015463">
				<div id="div-comment-1015463" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">j b</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20121010-00/?p=6363#comment-1015463">
			October 10, 2012 at 10:57 am</a>		</div>

		<p>&quot;Files must have a name. But what a strange question that is.&quot;</p>
<p>Files <em>must</em> have a name? Why? I&#39;ve been working with file systems allowing nameless files. Since a nameless file cannot be identified by name, when the last user closes it, it is deleted. Make as many temp files as you like by opening them specifying an empty name string. Or make sure a named file is deleted as soon as your process has completed its work on the data, by renaming it to an empty string. Makes perfect sense.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1015483">
				<div id="div-comment-1015483" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20121010-00/?p=6363#comment-1015483">
			October 10, 2012 at 12:06 pm</a>		</div>

		<p>@j b: I give you the null file name.</p>
<p><a rel="nofollow" target="_new" href="http://docstore.mik.ua/orelly/unix/upt/ch23_13.htm" rel="nofollow">docstore.mik.ua/&#8230;/ch23_13.htm</a></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1015503">
				<div id="div-comment-1015503" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blogs.msdn.com/xpehkto_4000_ya.ru/ProfileUrlRedirect.ashx' rel='external nofollow' class='url'>xpehkto@ya.ru</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20121010-00/?p=6363#comment-1015503">
			October 10, 2012 at 12:14 pm</a>		</div>

		<blockquote><p>
  The Compressed Folders functionality in Explorer has many known limitations, such as lack of support for ZIP64
</p></blockquote>
<p>So this story was before Vista?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1015513">
				<div id="div-comment-1015513" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">k m</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20121010-00/?p=6363#comment-1015513">
			October 10, 2012 at 12:32 pm</a>		</div>

		<p>@j b: Sure, nameless files are fine. But do they really make sense in the context of an archival program? No.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1015533">
				<div id="div-comment-1015533" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Bob</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20121010-00/?p=6363#comment-1015533">
			October 10, 2012 at 1:23 pm</a>		</div>

		<p>@j b: &quot;Files <em>must</em> have a name? Why? I&#39;ve been working with file systems allowing nameless files. Since a nameless file cannot be identified by name, when the last user closes it, it is deleted.&quot;</p>
<p>I prefer the way VMS does it with explicit file attributes when creating a file. This makes it obvious to the developer who comes along next that you are creating a temporary file and it&#39;s not a coding bug that you are creating a file with no file name. Or even worse, is the coding error that intermittently generates null file names and has people complaining, &quot;The program ran, but it didn&#39;t create a file.&quot;</p>
<p>Interestingly, VMS has two different temporary file attributes. When either of these attributes is set, VMS does not create a directory entry for the file. One attribute functions as most people expect; when the last process that has the file open, closes it, the file is deleted by the file system. The second attribute says that when the last process that has the file open, closes it, the file is NOT deleted. IIRC, the file can be deleted by passing the equivalent of the file handle to the file delete system call.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1015553">
				<div id="div-comment-1015553" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Gabe</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20121010-00/?p=6363#comment-1015553">
			October 10, 2012 at 10:12 pm</a>		</div>

		<p>j b: Allowing files without a name sounds great up until you try to run your system over a network (diskless workstation, anyone?) &#8212; and then you have to figure out how to get your stateless filesystem to be compatible with all those programs that expect to be able to create temporary files by deleting them as soon as they&#39;re created (silly rename?).</p>
<p>Another common problem with nameless files is seeing a large log file and deleting it to free up disk space, but not realizing that the logging process still has it open. The logger will still continue to run, chewing up space until the disk is full, with no way to read the log file or even know that it&#39;s growing.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1015573">
				<div id="div-comment-1015573" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">gechurch</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20121010-00/?p=6363#comment-1015573">
			October 10, 2012 at 10:41 pm</a>		</div>

		<p>@j b</p>
<p>Every sentence Raymond wrote up until the one you quoted clearly sets the context of his statement as being Windows file systems, specifically NTFS. When trying to show everyone how clever you are it&#39;s best not to completely miss the point.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1015663">
				<div id="div-comment-1015663" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Rob</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20121010-00/?p=6363#comment-1015663">
			October 11, 2012 at 1:21 pm</a>		</div>

		<p>&quot;The Compressed Folders functionality in Explorer has many known limitations, such as lack of support for ZIP64 and AES encryption&quot; and Unicode. How could one forget that glaring omission from a modern OS?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1015693">
				<div id="div-comment-1015693" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">ErikF</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20121010-00/?p=6363#comment-1015693">
			October 11, 2012 at 3:03 pm</a>		</div>

		<p>@Rob: Every time Microsoft adds additional functionality, typically the EU goes after them for &quot;monopolistic practices&quot;. If you got in trouble every time you wanted to add stuff, eventually you&#39;d stop bothering too.</p>
<p>Anyways, there are lots of programs that will do the additional stuff for you if you need to. As Raymond says, &quot;Don&#39;t be helpless!&quot;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-asklar odd alt thread-odd thread-alt depth-1" id="comment-1015943">
				<div id="div-comment-1015943" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Alexander+Sklar' rel='external nofollow' class='url'>Alexander Sklar</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20121010-00/?p=6363#comment-1015943">
			October 15, 2012 at 5:17 am</a>		</div>

		<p>@Rob: you&#39;ll be happy to learn we&#39;ve added Unicode support for decompressing zip files in Windows 7 (<a rel="nofollow" target="_new" href="http://support.microsoft.com/kb/2704299" rel="nofollow">support.microsoft.com/&#8230;/2704299</a>) and Windows 8.</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

