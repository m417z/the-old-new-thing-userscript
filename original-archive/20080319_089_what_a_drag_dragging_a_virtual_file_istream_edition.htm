<html>
<head>
<title>What a drag: Dragging a virtual file (IStream edition)</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>What a drag: Dragging a virtual file (IStream edition)</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>March 19, 2008 / year-entry #90</td></tr>
<tr><td><b>Tags:</b></td><td>code;what-a-drag</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20080319-00/?p=23073</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>12</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">Last time, we saw how to drag a virtual file whose contents are expressed as a block of bytes in memory (HGLOBAL). Often, a block of bytes is not a convenient way to express the contents of a virtual file. You might prefer to express it as a stream. For example, the contents might be...</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>
Last time, we saw
<a HREF="http://blogs.msdn.com/oldnewthing/archive/2008/03/18/8080183.aspx">
how to drag a virtual file whose contents
are expressed as a block of bytes in memory (<code>HGLOBAL</code>)</a>.
Often, a block of bytes is not a convenient way to express the contents of
a virtual file.
You might prefer to express it as a stream.
For example,
the contents might be dynamically generated (say by the output
of an algorithm),
or it might come in from an external source (say, a web page
that is being downloaded).
Let's take our program from last time and convert it to return
the file contents in the form of a stream.
The first change we need to make is to our constructor,
telling it to report file contents as a stream rather than
as an <code>HGLOBAL</code>:</p>
<pre>
#include &lt;shlwapi.h&gt; // for SHOpenRegStream

CTinyDataObject::CTinyDataObject() : m_cRef(1)
{
  SetFORMATETC(&amp;m_rgfe[DATA_FILEGROUPDESCRIPTOR],
               RegisterClipboardFormat(CFSTR_FILEDESCRIPTOR));
  SetFORMATETC(&amp;m_rgfe[DATA_FILECONTENTS],
               RegisterClipboardFormat(CFSTR_FILECONTENTS),
               <font COLOR=blue>TYMED_ISTREAM</font>, /* lindex */ 0);
}
</pre>
<p>
Next, we need to produce that stream and its corresponding
descriptor in our <code>IDataObject::GetData</code> handler:
</p>
<pre>
HRESULT CTinyDataObject::GetData(FORMATETC *pfe, STGMEDIUM *pmed)
{
  ZeroMemory(pmed, sizeof(*pmed));

  switch (GetDataIndex(pfe)) {
  case DATA_FILEGROUPDESCRIPTOR:
  {
    FILEGROUPDESCRIPTOR fgd;
    ZeroMemory(&amp;fgd, sizeof(fgd));
    fgd.cItems = 1;
    StringCchCopy(fgd.fgd[0].cFileName,
                  ARRAYSIZE(fgd.fgd[0].cFileName),
                  TEXT("Dummy"));
    pmed-&gt;tymed = TYMED_HGLOBAL;
    return CreateHGlobalFromBlob(&amp;fgd, sizeof(fgd),
                              GMEM_MOVEABLE, &amp;pmed-&gt;hGlobal);
  }

  case DATA_FILECONTENTS:
    <font COLOR=blue>pmed-&gt;tymed = TYMED_ISTREAM;
    pmed-&gt;pstm = SHOpenRegStream(HKEY_LOCAL_MACHINE,
       TEXT("Hardware\\Description\\System\\CentralProcessor\\0"),
       TEXT("~MHz"), STGM_READ);
    <font COLOR=blue>// <a HREF="http://blogs.msdn.com/b/oldnewthing/archive/2014/09/18/10558763.aspx">set the stream position properly</a>
    if (pmed-&gt;pstm) {
      LARGE_INTEGER liZero = { 0, 0 };
      pmed-&gt;pstm-&gt;Seek(liZero, STREAM_SEEK_END, NULL);
    }</font>
    return pmed-&gt;pstm ? S_OK : E_FAIL;</font>
  }

  return DV_E_FORMATETC;
}
</pre>
<p>
Of course, in real life, you would use a more interesting stream
than your CPU speed.
I just chose that one as an example.
</p>
<p>
As with our <code>HGLOBAL</code>-based data object,
you can drop this data object onto an Explorer folder
to create a file,
into an Outlook message to create an attachment,
and anywhere else a program supports the shell virtual file
transfer model.
And as with the <code>HGLOBAL</code> example,
you can set various optional information in the
<code>FILEGROUPDESCRIPTOR</code> in order to make the transfer
go more smoothly, particularly the expected stream size.
But I won't go into it because the theme of this series is
"It's the least you can do".
</p>
<p>
But already you know enough to solve this customer's problem:
</p>
<blockquote CLASS=m><p>
We need to know what directory the user dropped a file onto.
We need to transfer data from another computer, so what we do
is have the user drag a single dummy file,
and then once we find out where the user dropped the dummy file,
we can go in, delete the dummy file, and start transferring the
data from the remote computer and saving it into real files
in the destination directory.
</p>
</blockquote>
<p>
Next time, we'll look at the final storage medium that can
be used for file transfer, the <code>TYMED_ISTORAGE</code>.</p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (12)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-610923">
				<div id="div-comment-610923" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Nathan_works</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080319-00/?p=23073#comment-610923">
			March 19, 2008 at 10:06 am</a>		</div>

		<p>The customer&#8217;s comment seems more like your regular entries where the correct plan of action is not to tell the customer how to do what they ask, but get them to say what they really want. By backing away from the specific request to a more big-picture &quot;what are you trying to do/accomplish,&quot; since what they originally ask for is usually wrong or doesn&#8217;t make sense..</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-610943">
				<div id="div-comment-610943" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Koro</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080319-00/?p=23073#comment-610943">
			March 19, 2008 at 12:22 pm</a>		</div>

		<p>There&#8217;s also the (very useful) CreateStreamOnHGlobal function (so you never give the HGLOBAL directly)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-610953">
				<div id="div-comment-610953" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">herd</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080319-00/?p=23073#comment-610953">
			March 19, 2008 at 1:23 pm</a>		</div>

		<p>Does this work with virtual folder trees as well?</p>
<p>I could imagine that the cFileName member of the FILEDESCRIPTOR structure could hold subfolder names like &quot;.SubFldFile.txt&quot; and the shell would create the folder on the fly if it does not exist already, else show me the [this folder already contains a folder named &#8216;SubFld&#8217;&#8230;] dialog.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-610933">
				<div id="div-comment-610933" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">BryanK</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080319-00/?p=23073#comment-610933">
			March 19, 2008 at 11:07 am</a>		</div>

		<p>The customer can replace their &quot;dummy file&quot; with a FILEGROUPDESCRIPTOR with cItems equal to the count of files, and with each item being an IStream pointer (where reads from the stream give data from the original files &#8212; I bet there&#8217;s a shell interface to create this type of IStream object, but I&#8217;d have to look it up).</p>
<p>This would give the same effect as dragging multiple files from a folder, but since the source isn&#8217;t Explorer, the user doesn&#8217;t actually have to go select all those files. &nbsp;They can simply drag some &quot;single object&quot; from the customer&#8217;s program instead.</p>
<p>(This will also work when the target isn&#8217;t Explorer (aka isn&#8217;t a directory). &nbsp;What they&#8217;re asking for (finding the target path) won&#8217;t work in that case.)</p>
<p>It *sounds* like what they want to accomplish is copying a bunch of files while only making the user drag a single item. &nbsp;But of course, if that&#8217;s not really it, then this solution won&#8217;t help either. &nbsp;:-)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-610993">
				<div id="div-comment-610993" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Chris</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080319-00/?p=23073#comment-610993">
			March 19, 2008 at 8:25 pm</a>		</div>

		<p>Thanks for this series, really helpful</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-611003">
				<div id="div-comment-611003" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">non-english</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080319-00/?p=23073#comment-611003">
			March 20, 2008 at 5:53 am</a>		</div>

		<p>What does the phrase &quot;What a drag&quot; mean?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-611013">
				<div id="div-comment-611013" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">clipboard</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080319-00/?p=23073#comment-611013">
			March 20, 2008 at 6:00 am</a>		</div>

		<p>Is this info useful for programs to store virtual files in the clipboard? Is that possible?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-madq42 odd alt thread-odd thread-alt depth-1" id="comment-611023">
				<div id="div-comment-611023" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/MadQ1' rel='external nofollow' class='url'>MadQ1</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080319-00/?p=23073#comment-611023">
			March 20, 2008 at 8:29 am</a>		</div>

		<p>@non-english: In this particular case it is definition #18 at <a rel="nofollow" target="_new" href="http://dictionary.reference.com/browse/drag" rel="nofollow">http://dictionary.reference.com/browse/drag</a></p>
<p>&quot;(noun) 18. Slang. someone or something tedious; a bore: It&#8217;s a drag having to read this old novel.&quot;</p>
<p>Raymond is really just using it as a rethoric device, though.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-611063">
				<div id="div-comment-611063" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Martin</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080319-00/?p=23073#comment-611063">
			March 20, 2008 at 12:26 pm</a>		</div>

		<p>@MadQ</p>
<p>I like the way you explain &quot;what a drag&quot; means but leave it to &quot;non-english&quot; to work out what rhetorical device means.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-madq42 odd alt thread-odd thread-alt depth-1" id="comment-611083">
				<div id="div-comment-611083" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/MadQ1' rel='external nofollow' class='url'>MadQ1</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080319-00/?p=23073#comment-611083">
			March 20, 2008 at 2:24 pm</a>		</div>

		<p>Teach someone how to fish ;-) If he followed the link, he was already at the right place. Also, if he speaks any germanic- or latin-based language (or Greek,) he&#8217;ll know what it means.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-611893">
				<div id="div-comment-611893" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Andreas Nilsson</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080319-00/?p=23073#comment-611893">
			March 24, 2008 at 4:29 pm</a>		</div>

		<p>Any recommendations / hints to allow users to drag-n-drop a IShellLink (created-on-the-fly as an IStream) from an app-window to the desktop?</p>
<p>Thanks in advance,</p>
<p>Andreas Nilsson</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-612523">
				<div id="div-comment-612523" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">BryanK</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080319-00/?p=23073#comment-612523">
			March 25, 2008 at 2:24 pm</a>		</div>

		<p>You could create whatever kind of stream (probably backed by a fairly large amount of memory? &nbsp;or possibly something that reallocates memory on the fly as needed), create an instance of ShellLink (the default object that implements IShellLink), QI for IPersistStream, then save the IShellLink to the stream you created above. &nbsp;Then hand that stream off to the DnD interfaces.</p>
<p>At least, I *think* that should work (though I don&#8217;t know how the shell would know if the object being passed to it is also a shell link: maybe there&#8217;s a flag in the FORMATETC stuff). &nbsp;Never tried it. &nbsp;:-)</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

