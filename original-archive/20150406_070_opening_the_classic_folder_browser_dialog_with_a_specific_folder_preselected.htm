<html>
<head>
<title>Opening the classic folder browser dialog with a specific folder preselected</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>Opening the classic folder browser dialog with a specific folder preselected</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>April 6, 2015 / year-entry #71</td></tr>
<tr><td><b>Tags:</b></td><td>code</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20150406-00/?p=44303</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>24</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">Today's Little Program shows how to set the initial selection in the SHBrowse­For­Folder dialog. The design of the SHBrowse­For­Folder function had a defect: The BROWSEINFO structure doesn't have a cbSize member at the start. This means that the structure cannot ever change because the function would have no way of knowing whether you are calling...</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>
Today's Little Program shows how to set the initial selection
in the <code>SHBrowse&shy;For&shy;Folder</code> dialog.
</p>
<p>
The design of the <code>SHBrowse&shy;For&shy;Folder</code> function
had a defect:
The <code>BROWSEINFO</code> structure doesn't have a
<code>cbSize</code> member at the start.
This means that
the structure cannot ever change
because
<a HREF="http://blogs.msdn.com/b/oldnewthing/archive/2003/12/12/56061.aspx">
the function would have no way of knowing whether you are calling
with the old structure or the new one</a>.
If it weren't for this defect, setting the initial selection would
have been easy:
Add a <code>pidlInitialSelection</code> member to the structure
and have people fill it in.
</p>
<p>
Alas, any new functionality in the
<code>SHBrowse&shy;For&shy;Folder</code> function
therefore requires that the new functionality be expressed
within the constraints of the existing structure.
</p>
<p>
Fortunately, there's a callback that takes a message number.
</p>
<p>
The workaround, therefore, is to express any new functionalty
in the form of new callback messages.
</p>
<p>
And that's how the ability to set the initial selection in the
folder browser dialog came about.
A new message
<code>BFFM_<wbr>INITIALIZED</code> was created,
and in handling that message,
the callback can specify what it wants the selection to be.
</p>
<pre>
#define UNICODE
#define _UNICODE
#define STRICT_TYPED_ITEMIDS
#include &lt;windows.h&gt;
#include &lt;ole2.h&gt;
#include &lt;oleauto.h&gt;
#include &lt;shlobj.h&gt;
#include &lt;stdio.h&gt; // horrors! Mixing C and C++!

int CALLBACK Callback(
    HWND hwnd, UINT uMsg, LPARAM lParam, LPARAM lpData)
{
 switch (uMsg) {
 case BFFM_INITIALIZED:
  SendMessage(hwnd, BFFM_SETSELECTION, TRUE,
              reinterpret_cast&lt;LPARAM&gt;(L"C:\\Windows"));
  break;
 }
 return 0;
}

int __cdecl wmain(int, wchar_t **)
{
 <a HREF="http://blogs.msdn.com/b/oldnewthing/archive/2004/05/20/135841.aspx">CCoInitialize</a> init;
 TCHAR szDisplayName[MAX_PATH];
 BROWSEINFO info = { };
 info.pszDisplayName = szDisplayName;
 info.lpszTitle = TEXT("Pick a folder");
 info.ulFlags = BIF_RETURNONLYFSDIRS;
 info.lpfn = Callback;
 PIDLIST_ABSOLUTE pidl = SHBrowseForFolder(&amp;info);
 if (pidl) {
  SHGetPathFromIDList(pidl, szDisplayName);
  wprintf(L"You chose %ls\n", szDisplayName);
  CoTaskMemFree(pidl);
 }
 return 0;
}
</pre>
<p>
We initialize COM and then call the
<code>SHBrowse&shy;For&shy;Folder</code> function
with information that includes a callback.
The callback responds to the
<code>BFFM_<wbr>INITIALIZED</code> message by changing the selection.
</p>
<p>
It's not hard, but it's a bit cumbersome.
</p>
<p>
Sorry.
</p>
<p>
<b>Bonus chatter</b>:
The presence of the callback means that the function cannot
<a HREF="http://blogs.msdn.com/b/oldnewthing/archive/2014/08/11/10548975.aspx#10549125">
shunt the work to a new thread
when called from an MTA thread</a>
because you are now stuck
with the problem of which thread the callback should run on.
</p>
<ul>
<li>The callback may want to access resources
    that belong to the original thread,
    so that argues for the callback being run on the original thraed.</p>
<li>The callback may also want to access resources inside the dialog box,
    say in order to customize it.
    That argues for the callback being run on the new thread.
</ul>
<p>
You can't have it both ways,
so you're stuck.
</p>
<p>
But it doesn't really matter,
because you
<a HREF="http://blogs.msdn.com/b/oldnewthing/archive/2008/04/24/8420242.aspx">
shouldn't be performing UI from a multi-threaded apartment
anyway</a>.
There's not much point in making it easier for people to do the
wrong thing.</p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (24)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment byuser comment-author-wndsks even thread-even depth-1" id="comment-1183233">
				<div id="div-comment-1183233" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/skSdnW' rel='external nofollow' class='url'>skSdnW</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150406-00/?p=44303#comment-1183233">
			April 6, 2015 at 7:30 am</a>		</div>

		<p>The struct might not have a size member but you could invent a new BIF flag which increases the size or changes one of the existing members to be a pointer to another struct with more fields. (Yes, there is the buggy app stack garbage issue)</p>
<p>When coding something like this the callback naturally ends up on the UI thread (or at least it is synchronized with the UI thread), doing it any other way makes things strange and so much more complicated. If the callback was asynchronous/on another thread the UI would probably have to disable its input controls or just ignore mouse/keyboard input while a callback is active.</p>
<p>I&#39;m pretty sure parts of a IShellFolder implementation has to be free threaded these days while it was STA in Win95 so you could end up with UI on a MTA thread if someone has a &quot;creative&quot; folder implementation.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1183243">
				<div id="div-comment-1183243" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">DWalker</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150406-00/?p=44303#comment-1183243">
			April 6, 2015 at 7:32 am</a>		</div>

		<p>Why is the word &quot;apartment&quot; in MTA? &nbsp;Why not call it a multi-threaded model? &nbsp;I looked around Bing and I couldn&#39;t figure out the reason. &nbsp;Apartment seems like a strange word to throw in there. &nbsp;Why not a skyscraper or a swimming pool?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1183263">
				<div id="div-comment-1183263" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Anon</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150406-00/?p=44303#comment-1183263">
			April 6, 2015 at 8:16 am</a>		</div>

		<p>@DWalker</p>
<p>There&#39;s a lot of that in development. &#39;Apartments,&#39; &#39;Sockets,&#39; &#39;Singlets,&#39; &#39;Threads.&#39;</p>
<p>Every industry has it to a degree (woodworking uses a lot of anatomy, and vice-versa), but computing has some of the most tenuously-connected &#39;borrowed&#39; jargon of any.</p>
<p>The &quot;Apartment&quot; model is supposed to imply that one thread lives there and anyone else who wants access has to go through a third-party. But of course, that&#39;s not how Apartments work. If someone wants access to my apartment, I can open the door, or give them a key, or leave the door unlocked, or leave the key under the mat, or add them to my lease. Or, the least-effective and least-convenient, I could make them go through a third party (the landlord, or a neighbour).</p>
<p>And the analogy breaks down to the point of utter absurdity when talking free- or MTA.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1183273">
				<div id="div-comment-1183273" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">BrianM</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150406-00/?p=44303#comment-1183273">
			April 6, 2015 at 8:19 am</a>		</div>

		<p>COM objects &quot;live&quot; in exactly one apartment &#8211; that&#39;s more or less why the name &quot;apartment&quot; was chosen. &nbsp;The apartment may be associated with just one thread, with all MTA threads, or with no threads, but all objects in the same apartment get the same threading behavior. &nbsp;Threading and apartments are what makes the COM threading model just so easy to understand (I&#39;m being cynical here).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1183283">
				<div id="div-comment-1183283" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Erik</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150406-00/?p=44303#comment-1183283">
			April 6, 2015 at 8:54 am</a>		</div>

		<p>Why is the (apparent) convention to have a Size member in a structure to indicate its version, instead of say a Version member? With a size, I imagine you can only add new stuff, whereas you might want to replace stuff by other stuff also. Seems the result will be that in 50 years we&#39;re passing around 10kb structs with 50 functional bytes&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1183293">
				<div id="div-comment-1183293" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Bunk</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150406-00/?p=44303#comment-1183293">
			April 6, 2015 at 9:16 am</a>		</div>

		<p>@Erik: <a rel="nofollow" target="_new" href="http://blogs.msdn.com/b/oldnewthing/archive/2003/12/12/56061.aspx">blogs.msdn.com/&#8230;/56061.aspx</a></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1183323">
				<div id="div-comment-1183323" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">DWalker</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150406-00/?p=44303#comment-1183323">
			April 6, 2015 at 11:13 am</a>		</div>

		<p>@Erik: &nbsp;I wondered that too. &nbsp;A new version might want a smaller size Struct, or, as you say, a Struct with different contents but the same size. &nbsp;I understand checking the size of the struct &#8230; </p>
<p>The linked article says &quot;But the old version of the operating system should accept any size that is greater than or equal to the size it expects.&quot; </p>
<p>Maybe the struct can&#39;t get smaller for backwards-compatibility. &nbsp;Still, I would not rely on the size to INDICATE the version number. &nbsp;I would use a version number in the struct for that.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1183333">
				<div id="div-comment-1183333" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">DWalker</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150406-00/?p=44303#comment-1183333">
			April 6, 2015 at 11:16 am</a>		</div>

		<p>@BrianM: &nbsp;Not sure if you&#39;re being cynical in your entire message, or just the last part. &nbsp;I wonder why apartments were chosen, as opposed to, say, a motel or a long-term-care facility. &nbsp;I suppose they have to live somewhere&#8230; &nbsp;Put the objects out in the open prairie!</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1183343">
				<div id="div-comment-1183343" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Bunk</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150406-00/?p=44303#comment-1183343">
			April 6, 2015 at 11:34 am</a>		</div>

		<p>@Anon: All analogies break down. That&#39;s why they&#39;re analogies, and not identities. They&#39;re just mean to be suggestive of meaning.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1183353">
				<div id="div-comment-1183353" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">640k</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150406-00/?p=44303#comment-1183353">
			April 6, 2015 at 11:35 am</a>		</div>

		<p>@Bunk: As usual ms optimize for broken apps, and makes all development more cumbersome for developers who do the right thing. A reason why I left win32. Or actually, THE reason.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1183363">
				<div id="div-comment-1183363" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">JamesJohnston</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150406-00/?p=44303#comment-1183363">
			April 6, 2015 at 11:54 am</a>		</div>

		<p>&quot;For Windows Vista or later, it is recommended that you use IFileDialog with the FOS_PICKFOLDERS option rather than the SHBrowseForFolder function. This uses the Open Files dialog in pick folders mode and is the preferred implementation.&quot;</p>
<p>Similar statements exist for the old GetOpenFileName / GetSaveFileName APIs.</p>
<p>I wish more developers would heed this advice. &nbsp;I am sick and tired of using software that still uses the old Win95 folder browser (especially if they forego the Win2000 new-style folder dialog). &nbsp;The GetOpen/SaveFileName APIs can easily fall back to old Win2000-style file dialogs as well if the wrong flags are picked.</p>
<p>The problem with these old-style dialogs? &nbsp;There&#39;s no tree view on the left with my &quot;favorites&quot; included as a section. &nbsp;If I&#39;m working in one area or another, I&#39;ll commonly put it custom in my favorites list, so I can get to it quickly. &nbsp;A common trick I use with old-style dialogs is to copy/paste the path from an open Explorer window to get to it quickly in the dialog.</p>
<p>This old folder selection dialog is the absolute worst of the bunch, worse than the old file dialogs. &nbsp;If the app forgot to specify the Win2000 new-style flag, I can&#39;t even copy/paste a path!</p>
<p>Yet I still run across software that is copyrighted 2015 that still throws up legacy dialogs.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1183383">
				<div id="div-comment-1183383" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">John</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150406-00/?p=44303#comment-1183383">
			April 6, 2015 at 12:12 pm</a>		</div>

		<p>I would have expected the lack of a cbSize member to be fixed by introducing a SHBrowseForFolderEx function which takes a BROWSEINFOEX struct (now with a cbSize member).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1183393">
				<div id="div-comment-1183393" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Bunk</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150406-00/?p=44303#comment-1183393">
			April 6, 2015 at 12:25 pm</a>		</div>

		<p>@640K: Happy for you. We should all live in crystal palaces. The difference here is that Raymond characterizes the situation for SHBrowseÂ­ForÂ­Folder as a defect, not an optimization.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-hankhein odd alt thread-odd thread-alt depth-1" id="comment-1183403">
				<div id="div-comment-1183403" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Henri+Hein' rel='external nofollow' class='url'>Henri Hein</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150406-00/?p=44303#comment-1183403">
			April 6, 2015 at 12:25 pm</a>		</div>

		<p>@JamesJohnston:</p>
<p>I understand your grievances, but some (a lot) of us still have to support XP. &nbsp;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-mngoldeneagle even thread-even depth-1" id="comment-1183413">
				<div id="div-comment-1183413" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/MNGoldenEagle' rel='external nofollow' class='url'>MNGoldenEagle</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150406-00/?p=44303#comment-1183413">
			April 6, 2015 at 1:47 pm</a>		</div>

		<p>@Henri Hein: Is it that difficult to dynamically add a couple flags depending on what OS your running on? &nbsp;Most GUI toolkits should be doing this as a general rule anyway.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1183433">
				<div id="div-comment-1183433" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">640k</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150406-00/?p=44303#comment-1183433">
			April 6, 2015 at 2:48 pm</a>		</div>

		<p>No one is using SHBrowseÂ­ForÂ­Folder any more. GetOpenFileName is the thing to use when you want the user to select a folder. Just look at ms own apps, they have all migrated to use GetOpenFileName instead.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-hankhein even thread-even depth-1" id="comment-1183453">
				<div id="div-comment-1183453" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Henri+Hein' rel='external nofollow' class='url'>Henri Hein</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150406-00/?p=44303#comment-1183453">
			April 6, 2015 at 4:10 pm</a>		</div>

		<p>@MNGoldenEagle:</p>
<p>No, and I do try to up- and downgrade gracefully. &nbsp;I think JamesJohnston referred to the OFN_EXPLORER flag, which is only &quot;new&quot; in the context of XP and Win2k being newer than Windows 95/98. &nbsp;My problem is that I really *want* to use IFileDialog, but have yet to work on a project where I could shunt XP support.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1183493">
				<div id="div-comment-1183493" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Sven2</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150406-00/?p=44303#comment-1183493">
			April 7, 2015 at 2:33 am</a>		</div>

		<p>A very simple way to change it would be to just replace one of the pointer members in BROWSEINFO with cbSize (which would have to be pointer-sized then). Valid values for cbSize would be too small to be valid pointers, so SHBrowseForFolder can easily check for that.</p>
<p>It also makes the SHBrowseForFolder implementation very much straightforward:</p>
<p>if (info-&gt;cbSize == sizeof(BROWSEINFO_V1))</p>
<p>{</p>
<p> &nbsp;// version 1</p>
<p>}</p>
<p>else if (info-&gt;cbSize == sizeof(BROWSEINFO_V2))</p>
<p>{</p>
<p> &nbsp;// version 2</p>
<p>}</p>
<p>else if (info-&gt;cbSize &gt; 2048) // POINTER!</p>
<p>{</p>
<p> &nbsp;// version 0, the one before cbSize was added</p>
<p> &nbsp;szDisplayName = (char *) info-&gt;cbSize;</p>
<p>}</p>
<p>else error(invalid param)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-aegis03 even thread-even depth-1" id="comment-1183503">
				<div id="div-comment-1183503" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/dmex' rel='external nofollow' class='url'>dmex</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150406-00/?p=44303#comment-1183503">
			April 7, 2015 at 5:47 am</a>		</div>

		<p>&quot;The BROWSEINFO structure doesn&#39;t have a cbSize member at the start&quot;</p>
<p>The CONSOLE_SCREEN_BUFFER_INFO structure used by GetConsoleScreenBufferInfo had the same issue and thats how GetConsoleScreenBufferInfoEx and CONSOLE_SCREEN_BUFFER_INFOEX (including cbSize parameter) was included with Vista.</p>
<p>&quot;The workaround, therefore, is to express any new functionalty in the form of new callback messages.&quot;</p>
<p>Wow. Introduce SHBrowseÂ­ForÂ­FolderEx and a new structure including the cbSize parameter and be done with it before we get stuck implementing (and Microsoft having to support) dirty hacks supporting those features until the end of time.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1183653">
				<div id="div-comment-1183653" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Cesar</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150406-00/?p=44303#comment-1183653">
			April 7, 2015 at 7:18 pm</a>		</div>

		<p>@dmex: That sounds like new functionality, to be expressed in the form of a new callback message! Let&#39;s introduce a new message BFFM_EX where the callback can specify the address of the new structure!</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1183663">
				<div id="div-comment-1183663" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Paramanand Singh</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150406-00/?p=44303#comment-1183663">
			April 7, 2015 at 10:38 pm</a>		</div>

		<p>I like the comment &quot;// horrors! Mixing C and C++!&quot;. However horrible it seems, its a frequent practice to use stdio.h just to get access to the printf family.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1183683">
				<div id="div-comment-1183683" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">poizan42</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150406-00/?p=44303#comment-1183683">
			April 8, 2015 at 1:44 am</a>		</div>

		<p>@Paramanand Singh: The proper way is to include cstdio.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-mngoldeneagle even thread-even depth-1" id="comment-1183723">
				<div id="div-comment-1183723" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/MNGoldenEagle' rel='external nofollow' class='url'>MNGoldenEagle</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150406-00/?p=44303#comment-1183723">
			April 8, 2015 at 8:54 am</a>		</div>

		<p>@Cesar and dmex: I wonder if this came about due to the fact that they didn&#39;t realize they needed to modify this structure until after the Windows API was locked down for whichever release it was that inspired the shell team to add this callback workaround. &nbsp;The SHBrowseForFolderEx solution would make more sense and be more future-proof, but if they were stuck with their current API then that&#39;s a non-starter.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1183963">
				<div id="div-comment-1183963" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">JamesJohnston</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20150406-00/?p=44303#comment-1183963">
			April 9, 2015 at 5:23 am</a>		</div>

		<p>@Henri Hein: &nbsp;You can have it both ways: IFileDialog and support for Win XP. &nbsp;Like this&#8230; &nbsp;(We do this, and it works fine on XP):</p>
<p>if (FAILED(CoCreateInstance(CLSID_FileOpenDialog))) {</p>
<p> &nbsp; // We must be on Win XP; code to call legacy API goes here&#8230;</p>
<p>} else {</p>
<p> &nbsp; // Use our new IFileDialog&#8230;</p>
<p>}</p>
<p>Note that OFN_EXPLORER was introduced with Windows 95, not Windows 2000. &nbsp;If you don&#39;t specify that and you hook, you get an old Windows 3.1-style dialog (!). &nbsp;The documentation refers to this as the &quot;old-style&quot; dialog.</p>
<p>Note that Windows has to fall back on the older non-Vista style file dialogs for compatibility reasons when hooking is used. &nbsp;And if you use SHBrowseForFolder, you&#39;re doomed to the old dialogs, no matter what.</p>
<p>It&#39;s worth noting that the wrapper classes provided in old versions of MFC and Borland would routinely hook the dialog, even for very basic &quot;pick a simple file&quot; uses where the user didn&#39;t actually need hooking. &nbsp;That causes a fallback to the old Win2000-style dialog, or even the Win95-style dialog. &nbsp;So it seems this problem is more common than I&#39;d like. &nbsp;And I think many devs must still be using older versions of Visual Studio/MFC and don&#39;t bother working around this problem.</p>
<p>@640k: &nbsp;Are you sure those Microsoft apps aren&#39;t using IFileDialog to browse for a folder? &nbsp;I can&#39;t locate any flag that allows you to use GetOpenFileName to pick a folder&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

