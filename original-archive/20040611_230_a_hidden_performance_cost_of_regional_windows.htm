<html>
<head>
<title>A hidden performance cost of regional windows</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>A hidden performance cost of regional windows</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>June 11, 2004 / year-entry #231</td></tr>
<tr><td><b>Tags:</b></td><td>code</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20040611-00/?p=38923</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>22</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">Regional windows are neat, but they come at a cost. Most of the cost you can see directly. For example, constantly changing the region clearly generates a cost since you have to sit there and generate new regions all the time. One question that came up on an internal performance alias highlights one of the...</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>
Regional windows are neat, but they come at a cost.
Most of the cost you can see directly.
For example, constantly changing the region clearly generates
a cost since you have to sit there and generate new regions all
the time.
</p>
<p>
One question that came up on an internal performance alias
highlights one of the hidden costs of regional windows:
The putative window rectangle.
</p>
<p>
Suppose you have a large window but set a small window region.
How much worse is this than haveing a small window with a small
window region?
</p>
<p>
Quite a bit, actually.
</p>
<p>
Hit-testing is one of the most common operations performed by
a window manager. Given a point on the screen, find the window
that it corresponds to.  To speed this up, the window rectangle
is used to rule out windows quickly.  For example, if a window's
rectangle is (0,0)-(100,100) then the point (200,10) is clearly
not within the window since it doesn't fit in the rectangle.
Rectangle tests are fast.
</p>
<p>
If the window is regional, then the rectangle test is not good
enough, because the point may exist within the rectangle but outside
the region.  In that case, the point must be tested against the
window region itself.
</p>
<p>
But Windows uses the window rectangle as a "quick test" to see
if the region is worth checking.  If the point lies outside the
rectangle, then the window manager doesn't even bother checking
the region, which is good because region testing is comparatively slow.
</p>
<p>
In other word, the pseudocode for hit-testing goes something like
this:
</p>
<pre>
if (point is outside window rectangle)
  return no-hit;
else if (window has no region)
  return hit;
else if (point is inside region)
  return hit;
else
  return no-hit;
</pre>
<p>
So if you create a huge window with a tiny region, the window
manager can't rule out the hit-test based on the first (fast)
rectangle test.  It has to go to the third (slower) region test.
</p>
<p>
Moral of the story: When using regional windows,
try to keep the window rectangle reasonably close to the bounding
box of the region itself.
It helps the window manager decide more quickly
which window a point belongs to.</p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (22)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-182623">
				<div id="div-comment-182623" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">asdf</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040611-00/?p=38923#comment-182623">
			June 11, 2004 at 7:17 am</a>		</div>

		<p>Is the speed hit here going to kernel mode to test the kernel REGION object (how about an article or blurb why it&#8217;s stored in kernel mode in the first place)? REGION does contain the bounding rectangle in it so I&#8217;d imagine the PtInRegion function tests against that first.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-182633">
				<div id="div-comment-182633" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Aarrgghh</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040611-00/?p=38923#comment-182633">
			June 11, 2004 at 7:23 am</a>		</div>

		<p>I&#8217;d think the complexity of the region would be a big consideration, too. Is the array of rectangles in RGNDATAHEADER the actual internal representation of the region?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-182643">
				<div id="div-comment-182643" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Reuben Harris</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040611-00/?p=38923#comment-182643">
			June 11, 2004 at 7:40 am</a>		</div>

		<p>I&#8217;ve done a bit of graphics driver work and IIRC window regions are internally CLIPOBJs (<a target="_new" href="http://msdn.microsoft.com/library/default.asp?url=/library/en-us/graphics/hh/graphics/grstrcts_77zb.asp" rel="nofollow">http://msdn.microsoft.com/library/default.asp?url=/library/en-us/graphics/hh/graphics/grstrcts_77zb.asp</a>) &#8230; It&#8217;s a DDI-defined structure that usually boils down to a variable-length array of RECTs. </p>
<p>A complex region such as a circle shape is implemented as one RECT per scanline, top-down.<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-182673">
				<div id="div-comment-182673" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">asdf</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040611-00/?p=38923#comment-182673">
			June 11, 2004 at 8:33 am</a>		</div>

		<p>Regions aren&#8217;t CLIPOBJs, that&#8217;s just an abstraction for the device driver just like the RGNDATAHEADER is for user mode programs. From what I remember in the win95, nt, or dx7 ddks (I don&#8217;t remember which one), the raw region data looked something like:</p>
<p>struct Pair { long left, right; };</p>
<p>struct ScanLine {<br />
<br />  long top, bottom;<br />
<br />  size_t count;<br />
<br />  Pair pairs[count];<br />
<br />};<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-182683">
				<div id="div-comment-182683" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Serge Wautier</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040611-00/?p=38923#comment-182683">
			June 11, 2004 at 8:51 am</a>		</div>

		<p>asdf, Reuben,</p>
<p>&gt; A complex region such as a circle shape is implemented as one RECT per scanline, top-down</p>
<p>I&#8217;m totally unfamiliar with regions so I might be off-based here but this would mean that you can&#8217;t have a region that looks like a&#8230; hmm&#8230; &quot;lying C&quot; because it woud require 2 pairs per horizontal scan line.</p>
<p>+&#8211;+     +&#8211;+<br />
<br />+  +     +  +<br />
<br />+  +&#8212;&#8211;+  +<br />
<br />+           +<br />
<br />+&#8212;&#8212;&#8212;&#8211;+ (How does this show in proportional font ? :-( )</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-182703">
				<div id="div-comment-182703" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Serge Wautier</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040611-00/?p=38923#comment-182703">
			June 11, 2004 at 8:51 am</a>		</div>

		<blockquote><p>
  How does this show in proportional font ? :-( </p>
<p>Very badly :-(
</p></blockquote>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-182723">
				<div id="div-comment-182723" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Centaur</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040611-00/?p=38923#comment-182723">
			June 11, 2004 at 9:08 am</a>		</div>

		<p>Another moral would be to weigh all the pros and cons before making your windows nonrectangular. They slow down your application, they are hard to arrange with other windows, they need a custom non-client painting procedure and a custom non-client hit testing (so that the user can at least move your window), and, lastly, they are hard to make resizable.</p>
<p>Luna windows are implemented using regions, right?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-182753">
				<div id="div-comment-182753" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">mschaef</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040611-00/?p=38923#comment-182753">
			June 11, 2004 at 9:48 am</a>		</div>

		<p>&quot;Luna windows are implemented using regions, right? &quot;</p>
<p>Yes (plus some other stuff, of course).</p>
<p>A year or so ago, I was implementing a drawer-style window I wanted to be rectangular. In addition to doing my own non-client painting, I had to call SetWindowRgn (IIRC) to clear out the region and allow me to draw into the whole window rectangle. I don&#8217;t remember how SetWindowTheme affects this, but I&#8217;m pretty sure I ended up switching to using it to clear out the Luna theming on a per-window basis. One day, I want to explore using the visual styles API to draw the border too&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-182793">
				<div id="div-comment-182793" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Jack Mathews</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040611-00/?p=38923#comment-182793">
			June 11, 2004 at 12:36 pm</a>		</div>

		<p>Raymond:</p>
<p>Given the structure of the region data, wouldn&#8217;t an alpha blended layered window be much faster for hit testing than a region window?  It should be, because it&#8217;s just a one pixel lookup into a bitmap.  But I was curious if this was the case, and if maybe Microsoft may start evangelizing these in the future.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-182803">
				<div id="div-comment-182803" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://weblogs.asp.net/oldnewthing/' rel='external nofollow' class='url'>Raymond Chen</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040611-00/?p=38923#comment-182803">
			June 11, 2004 at 1:05 pm</a>		</div>

		<p>On the other hand, you can&#8217;t clip a DC to a bitmap.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-182843">
				<div id="div-comment-182843" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Jack Mathews</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040611-00/?p=38923#comment-182843">
			June 11, 2004 at 1:58 pm</a>		</div>

		<p>Raymond: Yeah, but if you didn&#8217;t need that clipping to happen that way, would it be faster?</p>
<p>Something off the top of my head would be something like the OSX dock.  It would be simple to not worry about the DC clipping for an object such as this, and fast hit testing would be nice.  I&#8217;m talking about an application designed around this alpha blending, not trying to hook onto others and change their window regions or anything.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-182863">
				<div id="div-comment-182863" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://weblogs.asp.net/oldnewthing/' rel='external nofollow' class='url'>Raymond Chen</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040611-00/?p=38923#comment-182863">
			June 11, 2004 at 2:39 pm</a>		</div>

		<p>I don&#8217;t know. That layering stuff is all newfangled.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-182743">
				<div id="div-comment-182743" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://weblogs.asp.net/oldnewthing/' rel='external nofollow' class='url'>Raymond Chen</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040611-00/?p=38923#comment-182743">
			June 11, 2004 at 9:18 am</a>		</div>

		<p>asdf: Why is the region kept in kernel mode? Well, where would *you* keep the region data then?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-183073">
				<div id="div-comment-183073" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">asdf</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040611-00/?p=38923#comment-183073">
			June 12, 2004 at 10:33 am</a>		</div>

		<p>Serge: anything you can draw in a black and white paint program can be represented as a region. The pair of rects thing is the winapi trying optimize regions while keeping them sorted top to bottom, left to right. This is a very good optimization compared to Mac regions (<a target="_new" href="http://groups.google.com/groups?selm=1991Sep30.141944.5043%40waikato.ac.nz" rel="nofollow">http://groups.google.com/groups?selm=1991Sep30.141944.5043%40waikato.ac.nz</a>) because Windows draws windows from child to parent to reduce overdraw (and flicker because it doesn&#8217;t draw to an offscreen surface until longhorn) and the most common operations here are subtracting rectangular donut holes (until XP came along with its oversized round titlebars on by default).</p>
<p>Raymond: how about in the user mode memory space of the process that created the region? It&#8217;s not that strange of a thing to do, DIBSECTIONs are stored there.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-183083">
				<div id="div-comment-183083" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://weblogs.asp.net/oldnewthing/' rel='external nofollow' class='url'>Raymond Chen</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040611-00/?p=38923#comment-183083">
			June 12, 2004 at 11:22 am</a>		</div>

		<p>Think about it. </p>
<p>If you kept the region data in user-space, then each time the mouse moves and USER needs to do a hit-test to decide which window should receive the message, it would have to context-switch to every process that has a regional window in order to do the region hit-test.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-183093">
				<div id="div-comment-183093" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">js</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040611-00/?p=38923#comment-183093">
			June 12, 2004 at 3:01 pm</a>		</div>

		<p>&lt;i&gt;If you kept the region data in user-space, then each time the mouse moves and USER needs to do a hit-test to decide which window should receive the message, it would have to context-switch to every process that has a regional window in order to do the region hit-test.&lt;/i&gt;</p>
<p>I&#8217;m not convinced every process would need to be visited if the region data were in shared memory.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-183103">
				<div id="div-comment-183103" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://weblogs.asp.net/oldnewthing/' rel='external nofollow' class='url'>Raymond Chen</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040611-00/?p=38923#comment-183103">
			June 12, 2004 at 3:17 pm</a>		</div>

		<p>Well if the memory is shared with kernel mode, then it&#8217;s in kernel mode again isn&#8217;t it?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-183143">
				<div id="div-comment-183143" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">js</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040611-00/?p=38923#comment-183143">
			June 12, 2004 at 4:25 pm</a>		</div>

		<p>I was thinking of shared with other processes, rather than shared with the kernel.  In an architecture where it&#8217;s the job of kernel-space code to route events to processes, that kernel-space code does need access to data structures describing the windows and their shapes.  But that activity could also be performed outside the kernel in a user-space process that used shared memory to coordinate window descriptions with application processes.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-183163">
				<div id="div-comment-183163" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Dan Maas</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040611-00/?p=38923#comment-183163">
			June 12, 2004 at 5:31 pm</a>		</div>

		<p>Couldn&#8217;t the window manager process handle hit testing?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-183173">
				<div id="div-comment-183173" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://weblogs.asp.net/oldnewthing/' rel='external nofollow' class='url'>Raymond Chen</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040611-00/?p=38923#comment-183173">
			June 12, 2004 at 5:57 pm</a>		</div>

		<p>js/Dan: Yes, the window manager could be a user-mode process instead of hanging out in kernel mode. In fact, that&#8217;s how it was in Windows NT 3.1, but for performance reasons the window manager moved into kernel mode not long afterwards.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-183203">
				<div id="div-comment-183203" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">asdf</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040611-00/?p=38923#comment-183203">
			June 12, 2004 at 9:24 pm</a>		</div>

		<p>To keep beating a dead horse, there is a context switch from kernel to the window&#8217;s thread to handle the WM_NCHITTEST message anyway. But now that I really think about it, I wouldn&#8217;t want it in the process&#8217; address space because then you can have the app take down the whole system.</p>
<p>But then I look here in Feng Yuan and it says Windows does an optimization where if the region is just a single rect created with CreateRectRgn, it is stored in the process&#8217; address space along with the pid.<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-183213">
				<div id="div-comment-183213" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://weblogs.asp.net/oldnewthing/' rel='external nofollow' class='url'>Raymond Chen</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040611-00/?p=38923#comment-183213">
			June 12, 2004 at 9:27 pm</a>		</div>

		<p>WM_NCHITTEST doesn&#8217;t happen inside the hardware interrupt handler. That&#8217;s much later in the input-handling process.</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

