<html>
<head>
<title>It rather involved being on the other side of this airtight hatchway: If you grant users full control over critical files, then it's not the fault of the system for letting users modify them</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>It rather involved being on the other side of this airtight hatchway: If you grant users full control over critical files, then it&#8217;s not the fault of the system for letting users modify them</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>September 2, 2010 / year-entry #249</td></tr>
<tr><td><b>Tags:</b></td><td>other</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20100902-00/?p=12963</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>55</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">Today's dubious security vulnerability is another example of If you reconfigure your computer to be insecure, don't be surprised that there's a security vulnerability. This example comes from by an actual security vulnerability report submitted to Microsoft: I have found a critical security vulnerability that allows arbitrary elevation to administrator from unprivileged accounts. Grant Full...</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>Today's dubious security vulnerability is another example of <a href="http://blogs.msdn.com/oldnewthing/archive/2010/01/14/9948124.aspx"> <i>If you reconfigure your computer to be insecure, don't be surprised that there's a security vulnerability</i></a>.</p>
<p> This example comes from by an actual security vulnerability report submitted to Microsoft: </p>
<blockquote class="q"><p>  I have found a critical security vulnerability that allows arbitrary elevation to administrator from unprivileged accounts. </p>
<ol>
<li>Grant Full Control of the Windows directory (and all its contents     and subdirectories)     to Everyone. </li>
<li>Log on as an unprivileged user and perform these actions... </li>
</ol>
</blockquote>
<p> I can just stop there because your brain has already stopped processing input because of all the alarm bells ringing after you read that first step. That first step gives away the farm. If you grant control to the entire contents of the Windows directory to non-administrators, then don't be surprised that they can run around and do bad things! </p>
<p> "If I remove all the locks from my doors, then bad guys can steal my stuff." </p>
<p> Yeah, so don't do that. This is not a security vulnerability in the door. </p>
<p><b> Bonus chatter</b></p>
<p>: There are many variations on this dubious security vulnerability. Actual vulnerability reports submitted to Microsoft include  </p>
<ul>
<li>"First, grant world-write permission to this registry key..." </li>
<li>"First, reconfigure Internet Explorer to allow scripting of     ActiveX controls not marked safe for scripting..." </li>
<li>"On a compromised machine, you can..." </li>
</ul>
<p> That last one is impressive for its directness. "Starting on the other side of this airtight hatchway..." </p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (55)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-858523">
				<div id="div-comment-858523" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Tom</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100902-00/?p=12963#comment-858523">
			September 2, 2010 at 7:11 am</a>		</div>

		<p>Honest question: how many of those reports did it take before the top of your head stopped exploding off in a comedic manner? &nbsp;</p>
<p>I&#39;m not sure I would ever develop full immunity to it.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-858533">
				<div id="div-comment-858533" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">TIago Magalh&#227;es</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100902-00/?p=12963#comment-858533">
			September 2, 2010 at 7:32 am</a>		</div>

		<p>Who submits these &quot;security vulnerability reports&quot;?</p>
<div class="post">[<i>Microsoft receives <a href="http://www.technologyreview.com/blog/editors/23100/" rel="nofollow">200,000 security vulnerability reports per year</a>. As you might imagine, most of them are junk, but we have to read them all just in case. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-858543">
				<div id="div-comment-858543" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Antonio Rodr&#237;guez</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100902-00/?p=12963#comment-858543">
			September 2, 2010 at 7:49 am</a>		</div>

		<p>Windows is, of course, to blame. Windows (and specially Windows Vista, of course) is insecure, because it shouldn&#39;t let users change those permissions. I bet many (if not most) of these reports are done by Linux pundits that don&#39;t even know they can cause the very same trouble if they did the same to their Linux system (i.e., giving world write access to the /bin/ directory). Of course, Windows&#39; UAC is the graphical version of Linux&#39;s sudo. But that doesn&#39;t matter, either. What a good OS Linux would be, if their users had another attitude&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-858553">
				<div id="div-comment-858553" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Dominik</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100902-00/?p=12963#comment-858553">
			September 2, 2010 at 7:50 am</a>		</div>

		<p>Speaking of security vulnerabilities&#8230;</p>
<p>Why does Windows load DLLs from the current WorkingDirectory?</p>
<p>I mean why provide that &#39;feature&#39; in the first place?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-858563">
				<div id="div-comment-858563" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Rangoric</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100902-00/?p=12963#comment-858563">
			September 2, 2010 at 8:03 am</a>		</div>

		<p>@Dominik</p>
<p>Because I have DLLs to load in there. I don&#39;t think that is the question you should be asking.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-858573">
				<div id="div-comment-858573" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Antonio Rodr&#237;guez</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100902-00/?p=12963#comment-858573">
			September 2, 2010 at 8:05 am</a>		</div>

		<blockquote><p>
  &gt; Why does Windows load DLLs from the current WorkingDirectory?
</p></blockquote>
<p>I&#39;d bet it&#39;s a remainder of the old times of Windows 1.0. It was easier (and required less code) to keep the executable&#39;s directory as current during application launch, than to implement additional logic in the library loader. That was, of course, 25 years ago. But now we are tied by compatibility&#8230;</p>
<p>It&#39;s easy to fix that on your application. Just set at boot the current directory to the executable path, and make sure you never change it. It isn&#39;t difficult, because you can reference any file by its absolute path. And if you need to get the absolute path from a base and a relative path, you can always write a function that does so. Doing so will prevent your application form being attacked by DLL insertion.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-858583">
				<div id="div-comment-858583" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100902-00/?p=12963#comment-858583">
			September 2, 2010 at 8:11 am</a>		</div>

		<p>@Antonio: We have such an application. We got bit because, by default, the open &amp; save dialog boxes will change the current directory.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-858603">
				<div id="div-comment-858603" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://lpetr.org/blog/' rel='external nofollow' class='url'>Leo Petr</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100902-00/?p=12963#comment-858603">
			September 2, 2010 at 8:11 am</a>		</div>

		<p>@Antonio: I disagree. What makes personal computers so wonderful is that anyone can start programming on them without having to acquire a special, unlocked developer edition of the operating system. Locked-down, unmodifiable devices like the iPad have their place, but we should not turn personal computers into the like.</p>
<p>The administrator account should always allow a sufficiently ingenious administrator to shoot themselves in the foot.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-858593">
				<div id="div-comment-858593" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://johntopley.com/' rel='external nofollow' class='url'>John Topley</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100902-00/?p=12963#comment-858593">
			September 2, 2010 at 8:11 am</a>		</div>

		<p>I&#39;m probably missing the point here, but shouldn&#39;t the ACLs on Windows system files be orthogonal to the permissions that processes have whilst executing? Even if I have Full Control over all the files, surely my ability to do things as a user is still governed by the permissions assigned to the groups I&#39;m a member of and group policies that are in effect etc.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-858613">
				<div id="div-comment-858613" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Alex Grigoriev</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100902-00/?p=12963#comment-858613">
			September 2, 2010 at 8:16 am</a>		</div>

		<p>@Dominic:</p>
<p>In Windowss XP SP2+, the current directory is searched second to last in LoadLibrary. Time to get with the program.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-858623">
				<div id="div-comment-858623" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Frederik Slijkerman</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100902-00/?p=12963#comment-858623">
			September 2, 2010 at 8:17 am</a>		</div>

		<p>@John: And how does Windows decide which files you can access/modify if you&#39;re a regular user? By checking the ACLs on the files.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-dwalker-wk odd alt thread-odd thread-alt depth-1" id="comment-858633">
				<div id="div-comment-858633" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/DWalker' rel='external nofollow' class='url'>DWalker</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100902-00/?p=12963#comment-858633">
			September 2, 2010 at 8:18 am</a>		</div>

		<p>I love these &quot;other side of this airtight hatchway&quot; stories. &nbsp;</p>
<p>At step 1, &quot;Grant Full Control of the Windows directory (and all its contents and subdirectories) to Everyone&quot;, we need to hear a disembodied voice calmly saying &quot;I can&#39;t do that, Dave&#8230;&quot;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-858643">
				<div id="div-comment-858643" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Barbie</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100902-00/?p=12963#comment-858643">
			September 2, 2010 at 8:25 am</a>		</div>

		<p>@John Topley: And where do you think Windows stores the data that says which group you&#39;re part of ?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-858653">
				<div id="div-comment-858653" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://johntopley.com/' rel='external nofollow' class='url'>John Topley</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100902-00/?p=12963#comment-858653">
			September 2, 2010 at 8:29 am</a>		</div>

		<p>@Barbie In the registry or within Active Directory if you&#39;re on a network I should imagine.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-858663">
				<div id="div-comment-858663" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Alex Grigoriev</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100902-00/?p=12963#comment-858663">
			September 2, 2010 at 8:30 am</a>		</div>

		<p>@John Topley:</p>
<p>&#8230;continuing your sentense: and user&#39;s access to all objects (including system files) is deduced from the object&#39;s ACL and the user&#39;s group membership. It&#39;s an ACL that allows or reject access to a particular user.</p>
<p>By the way, in Windows7+, there are ACLs that don&#39;t allow an administrator to get ownership to an object. Almighty administrator doesn&#39;t have powers anymore.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-858673">
				<div id="div-comment-858673" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Antonio Rodr&#237;guez</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100902-00/?p=12963#comment-858673">
			September 2, 2010 at 8:33 am</a>		</div>

		<p>@Joshua: you are right, and IMHO that is a bad design of the common dialog library: current directory is a process global setting, and components shouldn&#39;t change it without the main program explicitly asking for it. Of course, it can be solved by reverting the directory change after you get control back from the file dialog.</p>
<p>@Leo: those were the merry old days of writing simple BASIC programs in the Apple II. Now, computers are connected to the Internet, and run a variety of software, almost all of which isn&#39;t created or even loaded by the user. The OS&#39;s main function nowadays is to protect the user from unwanted software. I would love to go back to the days of easy programming, but I do not want my customers to get infected because one of my programs had a vulnerability :-( .</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-858683">
				<div id="div-comment-858683" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">MikeCaron</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100902-00/?p=12963#comment-858683">
			September 2, 2010 at 8:44 am</a>		</div>

		<p>@John: This may surprise you, but all file access done by users is done via processes running on the computer. To make a distinction is pointless, because &quot;Users&quot; can&#39;t directly do anything anyway! Therefore, permissions should just be per process.</p>
<p>In this hypothetical world, where every process has it&#39;s own set of permissions, the first line of today&#39;s punchline would be:</p>
<ol>
<li>Grant Full Control of the Windows directory (and all its contents and subdirectories) to Everyprocess. </li>
</ol>
<p>Suddenly, we&#39;re back in square one.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-858693">
				<div id="div-comment-858693" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Steve Syfuhs</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100902-00/?p=12963#comment-858693">
			September 2, 2010 at 9:07 am</a>		</div>

		<p>Starting with a compromised system&#8230;.</p>
<p>&#8230;It is possible to make it uncompromised by formatting the system and reinstalling Windows. &nbsp;This is a Denial of Service because the attacker can&#39;t do anything on the vulnerable system anymore&#8230;</p>
<p>&#8230;Therefore you should prevent users from formatting their drives and reinstalling Windows.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-858713">
				<div id="div-comment-858713" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://johntopley.com/' rel='external nofollow' class='url'>John Topley</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100902-00/?p=12963#comment-858713">
			September 2, 2010 at 9:30 am</a>		</div>

		<p>OK I get it now, thanks.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-858733">
				<div id="div-comment-858733" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">WendyHome</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100902-00/?p=12963#comment-858733">
			September 2, 2010 at 11:02 am</a>		</div>

		<p>&quot;1.Grant Full Control of the Windows directory (and all its contents and subdirectories) to Everyone. &quot; sounds like streaking on the football pitch without the aid of a policeman&#39;s helmet. &nbsp;OH! &#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-858743">
				<div id="div-comment-858743" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Anonymous Coward</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100902-00/?p=12963#comment-858743">
			September 2, 2010 at 11:59 am</a>		</div>

		<p>Antonio, the current directory is supposed to reflect the directory the user is currently working with. As such, it is obvious that the common dialogues should both use and set it. Doing otherwise would lead to a very frustrating user experience.</p>
<p>As for the rest of the DLL loading discussion, by default Windows XP SP2 sort of fixes this, as already mentioned. However, in rare cases you can still get bitten, namely when the legitimate DLL is not installed, for example because it is an optional component, which as it happens is a common use for DLLs.</p>
<p>However, you can call SetDllDirectory with an empty string to remove the current directory from the DLL search path altogether. A big downside is that this doesn&#39;t work for implicit DLLs so if you have any optional DLLs, don&#39;t for example mark the import optional and then check a registry key to see if can call the functions, because that will leave you vulnerable.</p>
<p>If it would have been my decision, I would probably have removed the current directory from the search path altogether (as if this function was called) but who knows, maybe there&#39;s so much software that relies on DLLs in the current directory that adding a shim or configuration option would be unworkable. But that would really surprise me.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-858753">
				<div id="div-comment-858753" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Poochner</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100902-00/?p=12963#comment-858753">
			September 2, 2010 at 12:51 pm</a>		</div>

		<p>@Wendy, Does streaking mean the same in English as in American (running out in public in the nude)?</p>
<p>As for searching the current directory, loading from the exe&#39;s directory makes perfect sense, but not so much a shifting point of view.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-858763">
				<div id="div-comment-858763" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Jules</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100902-00/?p=12963#comment-858763">
			September 2, 2010 at 1:04 pm</a>		</div>

		<p>@Poochner: Yes.</p>
<p>@John: Even if the user is restricted in what they can achieve by their group membership and this can&#39;t be changed, granting full access to the windows directory still allows them to completely compromise the machine, because they can trivially replace one of the standard .exes or .dlls and therefore cause the local system user to do whatever they want, e.g. replace winlogon.exe with your own version and reboot.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-858773">
				<div id="div-comment-858773" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Alexandre Grigoriev</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100902-00/?p=12963#comment-858773">
			September 2, 2010 at 1:09 pm</a>		</div>

		<p>@Anon:</p>
<p>&quot;the current directory is supposed to reflect the directory the user is currently working with&quot;.</p>
<p>It used to make sense with command line programs. With GUI when all user&#39;s files are opened mostly through the common dialog, which remembers its last directory anyway, the notion of the current directory is not worth much anymore.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-858783">
				<div id="div-comment-858783" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">DaveL</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100902-00/?p=12963#comment-858783">
			September 2, 2010 at 1:35 pm</a>		</div>

		<p>This reminds me of the QA person I worked with some years ago who would randomly modify some bytes of the executable and then submit a bug report when it crashed.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-858793">
				<div id="div-comment-858793" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Rob Manderson</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100902-00/?p=12963#comment-858793">
			September 2, 2010 at 2:50 pm</a>		</div>

		<p>@DaveL:</p>
<p>That&#39;s what you get for not writing a self-repairing app!</p>
<p>(Yikes!)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-858803">
				<div id="div-comment-858803" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Richard</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100902-00/?p=12963#comment-858803">
			September 2, 2010 at 4:14 pm</a>		</div>

		<p>@Alexandre Grigoriev:</p>
<blockquote><p>
  &gt;the notion of the current directory is not worth much anymore
</p></blockquote>
<p>Except it is. &nbsp;What if you open a file that does include an absolute path? &nbsp;The relative path is taken &quot;relative&quot; to the current directory. &nbsp;Why do you think short cut (.lnk) files have a &quot;Start in&quot; field. &nbsp;That field becomes the current directory for the running process. &nbsp;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-858813">
				<div id="div-comment-858813" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Nick</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100902-00/?p=12963#comment-858813">
			September 2, 2010 at 4:23 pm</a>		</div>

		<p>[My guess is that a lot of these reports are from people seeking &quot;street cred&quot;: &quot;You should hire me because I found N vulnerabilities in Windows.&quot; -Raymond]</p>
<p>That&#39;s probably part of it, but I think there really are a fair number of &quot;experts&quot; out there who really do think Windows is filled with holes and nobody but them seems capable of seeing them. &nbsp;It&#39;s kind of like people who see conspiracies everywhere and don&#39;t understand why everyone else doesn&#39;t see them too.</p>
<p>Reminds me of a little debate I had with somebody on Slashdot earlier this week. &nbsp;Talk about an exercise in futility, read it if you care: &nbsp;<a rel="nofollow" target="_new" href="http://slashdot.org/comments.pl?sid=1770122&amp;cid=33409712" rel="nofollow">slashdot.org/comments.pl</a></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-858703">
				<div id="div-comment-858703" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Paul M. Parks</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100902-00/?p=12963#comment-858703">
			September 2, 2010 at 9:26 am</a>		</div>

		<p>@Antonio Rodriguez: &quot;The OS&#39;s main function nowadays is to protect the user from unwanted software.&quot;</p>
<p>Now *that* is an expansive definition of an OS. I think some articles in Raymond&#39;s archive have touched on this theme.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-858723">
				<div id="div-comment-858723" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Michael Mol</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100902-00/?p=12963#comment-858723">
			September 2, 2010 at 9:44 am</a>		</div>

		<p>I wonder how many of these reports are from users looking for greater systemic &#39;depth&#39; in &#39;defense in depth.&#39; (Also known as a system override for stupid and/or malicious user-run code.)</p>
<p>To shift the analogy of the airtight hatchway, consider having a firewall between your network and the rest of the world. From a security standpoint, should you assume it&#39;s safe to have every workstation inside the network run without a firewall? My old college took (and still takes) that approach, and every year or two it seems like there&#39;s a new case of some machine catching a worm, and that worm spreads like wildfire across the internal network.</p>
<p>To be fair, there&#39;s already a degree of depth within Windows, with privilege separation. And, of course, if you implement an override, you&#39;ll be asked for an override for that override.* UAC was an override for users running as admin, and there&#39;s a registry setting for automating the elevation to UAC. (Should UAC pop up anyway when someone tries to modify that setting? What about the setting to override &lt;em&gt;that&lt;/em&gt; setting? Whee!)</p>
<p>* I know Raymond has made that point several times in the past, but I can&#39;t find the post I&#39;m looking for. I don&#39;t think it had to do with programs whose developers had an overdeveloped sense of awesomeness.</p>
<div class="post">[<i>My guess is that a lot of these reports are from people seeking &quot;street cred&quot;: &quot;You should hire me because I found N vulnerabilities in Windows.&quot; -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-858833">
				<div id="div-comment-858833" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Alexandre Grigoriev</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100902-00/?p=12963#comment-858833">
			September 2, 2010 at 4:56 pm</a>		</div>

		<p>@Richard:</p>
<p>If a program is using current directory to open its files, then it&#39;s badly written. A current directory is never guaranteed to point to anything meaningful. And not every directory can even be used as current. UNC paths can&#39;t.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-858843">
				<div id="div-comment-858843" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Alexandre Grigoriev</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100902-00/?p=12963#comment-858843">
			September 2, 2010 at 5:14 pm</a>		</div>

		<p>@Nick:</p>
<p>The /. guy also naively doesn&#39;t want to see that all OS are vulnerable to the tampering via an alternate boot, which he proclaims a genuine Windows weakness. Actually, with a boot drive encryption, Windows is immune against that, as well.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-858883">
				<div id="div-comment-858883" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Cheong</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100902-00/?p=12963#comment-858883">
			September 2, 2010 at 7:21 pm</a>		</div>

		<p>@Michael Mol: Oh firewall, my favorite story involves the fact that certain people doesn&#39;t (or pretend not to) understand putting machines in DMZ zone would remove protaction from firewalls. Some external users call-in to report they cannot connect, and the admins tweaked settings to add forwarded ports. Later they become annoyed, and found that putting server in DMZ zone and the users won&#39;t call in&#8230; When they were asked whether their servers are secure, they said yes because every servers are behind firewall&#8230;&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-858893">
				<div id="div-comment-858893" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100902-00/?p=12963#comment-858893">
			September 2, 2010 at 8:49 pm</a>		</div>

		<p>As for numbskull left a gaping hole that might get reported to Microsoft even though it&#39;s none of Microsoft&#39;s fault:</p>
<ol>
<li>Administrator installs cygwin sshd for his own use.</li>
<li>
<p>Administrator mounts /home onto C:Users because that&#39;s convenient.</p>
</li>
<li>
<p>Administrator enables public key authentication because its convenient for automation from some *nix box somewhere.</p>
</li>
<li>
<p>Some other user with access notices sshd is available and sets up his public key.</p>
</li>
<li>
<p>[much later] Administrator disables some other user&#39;s account as that user left the company (delete wouldn&#39;t help).</p>
</li>
<li>
<p>[much later] Some user notices that he can still log in via sshd public key authentication.</p>
</li>
</ol>
<p>What happened here is Administrator enabled sshd public key authentication without understanding the ramifications. The cygwin tools have their own implemenation of cached account information (not credentials but everything else required to log in). When using sshd&#39;s public key authentication, no password is required, so cygwin, having everything it needs, logs the user in without even trying to authenticate via LSA.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-858913">
				<div id="div-comment-858913" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Medinoc</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100902-00/?p=12963#comment-858913">
			September 3, 2010 at 1:20 am</a>		</div>

		<p>@Joshua: Another vulnerability via SSH server is FreeSSHd prior to Windows Vista: It&#39;s an interactive service, that can open &quot;Open&quot; dialog boxes&#8230; Hello, cmd.exe under NT AUTHORITY/SYSTEM account, from any user!</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-858923">
				<div id="div-comment-858923" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">640k</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100902-00/?p=12963#comment-858923">
			September 3, 2010 at 1:45 am</a>		</div>

		<p>A dumb user is not an excuse for writing sloppy code. Programs should NOT fail at the first user mistake, programs should help the user when the user makes mistakes.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-858933">
				<div id="div-comment-858933" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">640k</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100902-00/?p=12963#comment-858933">
			September 3, 2010 at 1:50 am</a>		</div>

		<p>@Alexandre Grigoriev: Actually, with a boot drive encryption, Windows is immune against that, as well.</p>
<p>Until you boot with a floppy/cd/usb dongle.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-858863">
				<div id="div-comment-858863" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Cheong</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100902-00/?p=12963#comment-858863">
			September 2, 2010 at 7:11 pm</a>		</div>

		<p>@Antonio Rodríguez: But *nix systems have their kinds of dumb things as well.</p>
<p>For example:</p>
<p>1) The infamous &quot;rm -rf /&quot; for those having habit to run as root at all time.</p>
<p>2) Tricking noob admins to grant root impersonation priviledge for all users without password by telling them modify sudo config file some way can allow them run sudo commands without typing password.</p>
<p>3) Granting full control of FTP access to web folder in certain event where users call in for unable to write files there, without recognising that&#39;d give them ability to write other other&#39;s folder as well&#8230;</p>
<p>Btw, there&#39;s something that Windows can copy from *nix for security. For example, in Linux email server would refuse to start if you got the /etc permission wrong. Perheps certain Windows system service can perform this kind of check as well&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-858873">
				<div id="div-comment-858873" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Cheong</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100902-00/?p=12963#comment-858873">
			September 2, 2010 at 7:11 pm</a>		</div>

		<p>@Antonio Rodríguez: But *nix systems have their kinds of dumb things as well.</p>
<p>For example:</p>
<p>1) The infamous &quot;rm -rf /&quot; for those having habit to run as root at all time.</p>
<p>2) Tricking noob admins to grant root impersonation priviledge for all users without password by telling them modify sudo config file some way can allow them run sudo commands without typing password.</p>
<p>3) Granting full control of FTP access to web folder in certain event where users call in for unable to write files there, without recognising that&#39;d give them ability to write other other&#39;s folder as well&#8230;</p>
<p>Btw, there&#39;s something that Windows can copy from *nix for security. For example, in Linux email server would refuse to start if you got the /etc permission wrong. Perheps certain Windows system service can perform this kind of check as well&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-858963">
				<div id="div-comment-858963" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://johntopley.com/' rel='external nofollow' class='url'>John Topley</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100902-00/?p=12963#comment-858963">
			September 3, 2010 at 4:21 am</a>		</div>

		<p>@Jules Yes, I realise that. Whilst replacing winlogon.exe might be trivial, I would suggest that writing your own version probably isn&#39;t!</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-858983">
				<div id="div-comment-858983" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Medinoc</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100902-00/?p=12963#comment-858983">
			September 3, 2010 at 7:09 am</a>		</div>

		<p>Thank you. This cleared some misunderstandings.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-858993">
				<div id="div-comment-858993" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Alex Grigoriev</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100902-00/?p=12963#comment-858993">
			September 3, 2010 at 7:13 am</a>		</div>

		<p>@640k:</p>
<p>If you don&#39;t know the password, you can&#39;t mount the encrypted drive, even if you boot from floppy/cd/usb. Because all metadata is also encrypted. That&#39;s the whole point of encrypting the drive. If you lose the laptop, your data won&#39;t leak.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-858903">
				<div id="div-comment-858903" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Medinoc</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100902-00/?p=12963#comment-858903">
			September 3, 2010 at 1:05 am</a>		</div>

		<p>By the way, I never understood *who* says an ActiveX control is safe for scripting. Is it the control maker or the administrator?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-858953">
				<div id="div-comment-858953" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Superdude</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100902-00/?p=12963#comment-858953">
			September 3, 2010 at 2:06 am</a>		</div>

		<p>@Paul M. Parks: Now *that* is an expansive definition of an OS.</p>
<p>It&#39;s the minimum you should require from an modern OS. Definitions like os=kernel+cli are of last millenia.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-mike-dimmick even thread-even depth-1" id="comment-858973">
				<div id="div-comment-858973" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Mike+Dimmick' rel='external nofollow' class='url'>Mike Dimmick</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100902-00/?p=12963#comment-858973">
			September 3, 2010 at 4:34 am</a>		</div>

		<p>@Medinoc: &quot;By the way, I never understood *who* says an ActiveX control is safe for scripting. Is it the control maker or the administrator?&quot;</p>
<p>It can be anyone. You register the control in the &#39;Safe for Scripting&#39; Component Category, which is just a registry setting. Typically, though, it&#39;s done by the control&#39;s DllRegisterServer function, and/or the installer (which may well call DllRegisterServer).</p>
<p>The other, and better, way is for the control author to implement IObjectSafety, which allows it to be a conversation rather than a yes/no answer.</p>
<p>Unfortunately, it was really common for control authors to do this without really thinking about whether it was truly safe for the control to be scripted. It became default-ON rather than default-OFF. This is particularly true of controls that would be useful in intranet applications but would be dangerous when used from the Web. Or even, applications that use the WebBrowser control, but are not Internet Explorer, and use ActiveX controls to make up part of the UI. Like Visual Studio&#39;s C++ wizards from VS2002 onwards (idiotic decision, because anti-virus programs wind up stopping some of them from working, and some of them broke when IE8 was released &#8211; oh, and they&#39;re so slow that they become useless).</p>
<p>Since &#39;Safe for Scripting&#39; is just a registry entry that anyone can add to, you couldn&#39;t easily stop a control known to be bad just by deleting it (and a flawed IObjectSafety implementation couldn&#39;t be stopped that way). So IE&#39;s &#39;kill bits&#39; are stored somewhere else.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-859053">
				<div id="div-comment-859053" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Richard Russell</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100902-00/?p=12963#comment-859053">
			September 3, 2010 at 1:39 pm</a>		</div>

		<p>@Alexandre: &quot;If a program is using current directory to open its files, then it&#39;s badly written&quot;.</p>
<p>Why? &nbsp;I&#39;ve written programs that are designed to be run from a shortcut, and which use the setting of the &#39;Start in&#39; property to determine the location of the files they will work on. &nbsp;What&#39;s wrong with that?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-859063">
				<div id="div-comment-859063" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Random832</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100902-00/?p=12963#comment-859063">
			September 3, 2010 at 2:53 pm</a>		</div>

		<p>&quot;Whilst replacing winlogon.exe might be trivial, I would suggest that writing your own version probably isn&#39;t!&quot;</p>
<p>ReactOS has an open-source version, one could use that as a starting point. Security through obscurity never works, and security through requiring a token bit of effort works even less.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-gregm odd alt thread-odd thread-alt depth-1" id="comment-859073">
				<div id="div-comment-859073" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/GregM' rel='external nofollow' class='url'>GregM</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100902-00/?p=12963#comment-859073">
			September 3, 2010 at 5:16 pm</a>		</div>

		<p>Richard, I&#39;d say that&#39;s the difference between opening files from the initial directory and from the current directory.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-859083">
				<div id="div-comment-859083" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Richard Russell</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100902-00/?p=12963#comment-859083">
			September 4, 2010 at 2:17 am</a>		</div>

		<p>@GregM: &quot;I&#39;d say that&#39;s the difference between opening files from the initial directory and from the current directory&quot;.</p>
<p>What you seem to be saying is that it&#39;s OK to use the Current Directory on initial entry to your program (because that&#39;s what the &#39;Start in&#39; property of the shortcut sets) but not later on. &nbsp;However I don&#39;t see the distinction; the only way the Current Directory can change is if the program itself does so (either directly using SetCurrentDirectory or indirectly, e.g. by calling GetOpenFileName without the OFN_NOCHANGEDIR flag) so if the program is written such that the Current Directory never changes, it should be OK to use it at any time.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-gregm odd alt thread-odd thread-alt depth-1" id="comment-859153">
				<div id="div-comment-859153" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/GregM' rel='external nofollow' class='url'>GregM</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100902-00/?p=12963#comment-859153">
			September 5, 2010 at 9:43 am</a>		</div>

		<p>Richard, if you can guarantee that, then yes. &nbsp;This means, for example, that your program never calls any third party code, either directly or indirectly, that changes the current directory, such as a printer driver that has a file dialog without that flag,.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-859173">
				<div id="div-comment-859173" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Engywuck</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100902-00/?p=12963#comment-859173">
			September 6, 2010 at 12:00 am</a>		</div>

		<p>At the Win7 introduction tour some Microsoft evangelist said (in german, translated by me): &quot;One of the most common questions Microsoft is asked is: &#39;Our users have administrator accounts on their computers. How can I make sure that they don&#39;t&#8230;&#39; &#8212; and at this point one can stop listening because the answer is always the same: Unless you stop having them have admin accounts you can&#39;t do anything, since every (full) Administrator has all the rights necessary to kill every limitation you could possibly add. Even GPO settings can be simply reversed by editing the registry.&quot;</p>
<p>And he&#39;s fully right: the person with the right to change everything by default has the right to do so. And topmost on every computer is the Local Administrator. In at least XP/W2k3 (not tested later) one could even get SYSTEM rights with some simple careful invocations of certain (included) programs&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-859183">
				<div id="div-comment-859183" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">640k</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100902-00/?p=12963#comment-859183">
			September 6, 2010 at 4:04 am</a>		</div>

		<p>&quot;current directory&quot; is a hack whose features has changed between windows versions and been completely removed on Wince. Can&#39;t trust it.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-859293">
				<div id="div-comment-859293" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100902-00/?p=12963#comment-859293">
			September 6, 2010 at 6:15 pm</a>		</div>

		<p>@Jules: actually in this particular case, writing your own winlogon.exe is not trivial, but not all that difficult either. You see, it&#39;s not all that hard to modify the binary near the entry point to load a .bin file somewhere else in memory and call CreateThread on it, followed by reading in another .bin to put the original code back and jump to it (syscall chaining).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-859543">
				<div id="div-comment-859543" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Stefan Kanthak</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100902-00/?p=12963#comment-859543">
			September 7, 2010 at 3:16 pm</a>		</div>

		<p>@Alex Grigoriev</p>
<p>Stop spreading FUD and misinformation!</p>
<ol>
<li>Relative, i.e. non-absolute paths, are always relative to the CWD.</li>
<li>
<p>CWD can of course be set to UNC paths, and Windows does.</p>
<p>&nbsp; Use Windows explorer, navigate to some network share using it&#39;s UNC path and double click any executable^Wfile there.</p>
<p>&nbsp; Check MSKB article 156276 (rather old.-P) too!</p>
</li>
</ol>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-859593">
				<div id="div-comment-859593" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Gechurch</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100902-00/?p=12963#comment-859593">
			September 7, 2010 at 5:39 pm</a>		</div>

		<p>This talk of modifying winlogon.exe has me confused. Who cares how hard it is to write? That&#39;s besides the point. If a user has write access to that file you are already on the other side of the air-tight hatch. You can modify a system binary that runs with full access. And this is hardly security through obscurity. By that definition every program and OS ever written uses security through obscurity throughout &#8211; because you can go in and change the code and it will do whatever you want! No, it&#39;s security through ACLs. If you modify those ACLs to give users full control of that file, don&#39;t be surprised that you have just lost said security.</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

