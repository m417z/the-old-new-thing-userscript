<html>
<head>
<title>Why does the runas command require its command line to be quoted?</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>Why does the runas command require its command line to be quoted?</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>August 15, 2011 / year-entry #195</td></tr>
<tr><td><b>Tags:</b></td><td>other</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20110815-00/?p=9903</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>18</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">Commenter teo complained that the runas command requires its command line to be quoted. Well, if you think about it, why single out runas? Pretty much all programs require their command line to be quoted if they contain special characters (like spaces that you want to be interpreted as part of a file name instead...</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>Commenter teo complained that <a href="http://blogs.msdn.com/oldnewthing/archive/2009/06/01/9673254.aspx#9707959"> the <code>runas</code> command requires its command line to be quoted</a>.</p>
<p> Well, if you think about it, why single out <code>runas</code>? Pretty much <i>all</i> programs require their command line to be quoted if they contain special characters (like spaces that you want to be interpreted as part of a file name instead of as an argument separator). The <code>runas</code> command is just doing things the way everybody else does. </p>
<p> Recall that on Windows, programs perform their own command line parsing. This isn't unix where the command shell does the work of parsing quotation marks and globs before handing the (now-partly-parsed) command line to the child process. Mind you, most programs do not do their own custom parsing; they rely on the C runtime library to do the parsing into arguments. </p>
<p> Okay, but let's single out the <code>runas</code> command anyway, because <code>runas</code> does live in a slightly different world. It is a convention dating back to MS-DOS that programs which accept a command line as an argument do so without requiring quoting. The archetypal example of this is the command processor itself. Whatever you pass after the <code>/C</code> flag is treated as the command line to execute. Once the <code>/C</code> is encountered, parsing stops and everything from there to the end of the raw command line is treated as the argument. (It also imposes the requirement that <code>/C</code> be the last parameter on the command line.) (Note also that there is a special weirdo rule in the <code>cmd.exe</code> parser with respect to the <code>/C</code> and <code>/K</code> switches; see <code>cmd&nbsp;/?</code> for details.) </p>
<p> (Therefore, if you want a program that forwards its command line to another program, the way to do this is not to <a href="http://blogs.msdn.com/b/oldnewthing/archive/2010/09/17/10063629.aspx#10064133"> parse your command line and then try to unparse it</a> but rather to just forward the original command line.) </p>
<p> The authors of the <code>runas</code> program appeared not to be aware of this historical convention at the time they wrote it. They just used the regular C runtime library command line parser, unaware that "programs which accept a command line on the command line" fall into a special alternate reality. Hence the need for the double-extra-quoting. </p>
<p> Back when the <code>runas</code> program was being developed, I pointed out this historical alternate reality to the people responsible for the <code>runas</code> program. They took my remarks under advisement but evidently chose to stick with the "standard" parsing rules rather than entering the little-known alternate reality. (As a consolation prize, they did add some examples at the end of the <code>runas&nbsp;/?</code> output to explain how quotation marks should be used.) </p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (18)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-930223">
				<div id="div-comment-930223" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">mastmaker</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110815-00/?p=9903#comment-930223">
			August 15, 2011 at 7:32 am</a>		</div>

		<p>Must be monday morning blues. I read the command aloud as &#39;roonaas&#39; (instead of &#39;run as&#39;) and wondered why I had never heard of such a strangely named command line tool.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-930233">
				<div id="div-comment-930233" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">640k</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110815-00/?p=9903#comment-930233">
			August 15, 2011 at 8:03 am</a>		</div>

		<p>Trial &amp; error with combinations of several ^ and &quot; will usually solve any parsing. No need to remember anything, or try to use your brain, you&#39;ll have to test it when you need it because some programs are gui programs which gets the whole command line, and other use a c run time parser, which has different parsing rules in different compilers. An util which prints it&#39;s args is very handy in these circumstances.</p>
<p>Example: A scheduled task which calls a batfile which calls runas which calls a program which should receive a &quot; as a parameter. Good luck solving it without trial &amp; error.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-930243">
				<div id="div-comment-930243" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Bob</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110815-00/?p=9903#comment-930243">
			August 15, 2011 at 8:16 am</a>		</div>

		<p>@640k: &nbsp;Problem is that if we rely on experimentation instead of documentation, we never know whether we are doing things &quot;correctly&quot; (as Microsoft intended) or whether we are taking advantage of some undocumented or inadvertent behavior. If the latter, then our work may cause some future version of Windows to do unnatural things (compatibility shims or other gunk) to avoid breaking our programs.</p>
<p>Of course, if everyone read the documentation, then this entertaining blog would have no reason to exist.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-930253">
				<div id="div-comment-930253" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110815-00/?p=9903#comment-930253">
			August 15, 2011 at 8:37 am</a>		</div>

		<p>So that&#39;s what it is. I couldn&#39;t figure out why it was misbehaving and finally had runas spawn a batch file from a path containing no spaces.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-930263">
				<div id="div-comment-930263" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Marty</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110815-00/?p=9903#comment-930263">
			August 15, 2011 at 8:39 am</a>		</div>

		<p>Ah, so you did have a time machine in this case&#8230; and it didn&#39;t change a thing. Well, so much for that plan.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-930273">
				<div id="div-comment-930273" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Danny</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110815-00/?p=9903#comment-930273">
			August 15, 2011 at 10:55 am</a>		</div>

		<p>He he here is the short&#8230; we see many years ago a young Ray talking to young developers (or maybe interns at the time) pointing out this alternative way and they shrug their shoulders with Ray saying a last warning &quot;the future will point to me that I am right and you&#39;re wrong&quot;&#8230;&lt;current time&gt;..Ray, the GOD, with his crowd at his feet, yelling at some now fat, older looking guys : &quot;I told you I was right, didn&#39;t I?!!&quot;</p>
<p>The end (or Hollywood would do 2 sequels and then a prequel)</p>
<div class="post">[<i>That&#39;s one way of looking at it. Or you could read it as &quot;runas is a new program and therefore should be applauded for ridding itself of the arcane, backward-compatible, insane command line parsing rules of the past.&quot; -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-930283">
				<div id="div-comment-930283" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Timothy Byrd</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110815-00/?p=9903#comment-930283">
			August 15, 2011 at 11:40 am</a>		</div>

		<p>By &quot;ridding itself of the arcane, backward-compatible, insane command line parsing rules of the past&quot;, what giant leap did it make for mankind? (As opposed to the small step of simpler development for the team, at the time?)</p>
<div class="post">[<i>A command line parser that parses its arguments more uniformly (and is therefore easier to understand)? -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-930293">
				<div id="div-comment-930293" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Duncan</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110815-00/?p=9903#comment-930293">
			August 15, 2011 at 12:11 pm</a>		</div>

		<p>Timothy, &nbsp;I think your sarcasm detectors may be on the blink&#8230; &nbsp;:)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-930303">
				<div id="div-comment-930303" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Anonymous Coward</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110815-00/?p=9903#comment-930303">
			August 15, 2011 at 4:47 pm</a>		</div>

		<p>I just looked up cmd /? and it tells us of the following quoting rules:</p>
<p>If no /S is present, and there are exactly two &quot;s, and there&#39;s no &amp;&lt;&gt;()@^| between them, and there are spaces between them, and the text between the quotes is an executable, then &quot;s are preserved. Otherwise, if the first character is a &quot; then this &quot; and the last &quot; are removed.</p>
<p>Now, this is a strange way of formulating things, since it&#39;s (to my mind) inside-out, so I&#39;ll try to rephrase it.</p>
<p>If the command string starts with a &quot; followed by an executable, followed by another &quot; then these two &quot; are removed, unless /S is present, or there are more &quot;s, or there&#39;s &amp;&lt;&gt;()@^| in the executable name, or there are no spaces in the executable name.</p>
<p>So, assuming cv*.exe are executables echoing their command line, you&#39;ll get:</p>
<p>cmd /c &quot;cv with spaces&quot; -&gt; &quot;cv with spaces&quot;</p>
<p>cmd /c &quot;cv with spaces&quot; xyzzy -&gt; &quot;cv with spaces&quot; xyzzy</p>
<p>cmd /s /c &quot;cv with spaces&quot; xyzzy -&gt; cv with spaces xyzzy</p>
<p>cmd /c &quot;cv with spaces&quot; &quot;xyzzy&quot; -&gt; cv with spaces&quot; &quot;xyzzy &#8211; NOTE: cv.exe will be run</p>
<p>cmd /c &quot;cv(braces)&quot; xyzzy -&gt; cv (braces) xyzzy &#8211; NOTE: cv.exe will be run, and a space is inserted; behaves like cv(braces) xyzzy</p>
<p>cmd /c &quot;&quot;cv(braces)&quot;&quot; xyzzy -&gt; &quot;cv(braces)&quot; xyzzy</p>
<p>cmd /c &quot;cv&quot; xyzzy -&gt; cv xyzzy</p>
<p>Now, the function of /S is obvious: it gives you an escape hatch from the other weird rules. You can say:</p>
<p>cmd /s /c &quot;&quot;cv&quot; &quot;xyzzy&quot;&quot;</p>
<p>cmd /s /c &quot;&quot;cv with spaces&quot; &quot;xyzzy&quot;&quot;</p>
<p>cmd /s /c &quot;&quot;cv(braces)&quot; &quot;xyzzy&quot;&quot;</p>
<p>And always know that the right executable / command is run with the parameters as you supplied them.</p>
<p>The more than 2 &quot;s rule looks like an old escape hatch. I think it had pretty much the same function as /S but it won&#39;t work as consistently, since it requires &quot;s to be present in either the executable or its arguments.</p>
<p>cmd /s /c &quot;cv with spaces&quot; -&gt; cv with spaces &#8211; which runs cv.exe.</p>
<p>cmd /c &quot;cv with spaces&quot; -&gt; &quot;cv with spaces&quot; &#8211; which is wrong if you intended the &quot;s to be used as your escape hatch.</p>
<p>The &amp;&lt;&gt;()@^| rule made it possible to feed multiple commands to cmd. Compare what happens if you enter these two commands:</p>
<p>cmd /k echo x&amp;echo y</p>
<p>cmd /k &quot;echo x&amp;echo y&quot;</p>
<p>From this, it follows that you can get the same behaviour as /S like this:</p>
<p>cmd /c &quot;cv with spaces&amp;&quot; -&gt; cv with spaces &#8211; runs cv.exe.</p>
<p>In case you&#39;re worried about the errorlevel: it is preserved correctly.</p>
<p>The ‘no spaces’ rule looks like a compatibility thing. Perhaps old programs freak out if their command line starts with a &quot; and it was desirable to still allow old programs to be run with a full quoted path. But it won&#39;t work if the path contains spaces (no short path is substituted) or if you&#39;re running multiple commands, since cmd doesn&#39;t distinguish between the two very different reasons for removing &quot;s and does it only once.</p>
<p>All this was a good reminder of why I got into the habit of writing in a real programming language even when doing tasks traditionally done with batch.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-930313">
				<div id="div-comment-930313" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ben</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110815-00/?p=9903#comment-930313">
			August 15, 2011 at 6:27 pm</a>		</div>

		<p>I admit my ignorance here, but how do you get access to the unparsed command line? I have searched to no avail.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-930323">
				<div id="div-comment-930323" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ben</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110815-00/?p=9903#comment-930323">
			August 15, 2011 at 6:32 pm</a>		</div>

		<p>Because I suck at searching. LPTSTR WINAPI GetCommandLine(void); I have a little helper app with stupid &quot;unparsing&quot; that I need to go and fix.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-briantkatchhotmail-com odd alt thread-odd thread-alt depth-1" id="comment-930343">
				<div id="div-comment-930343" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Brian+Tkatch' rel='external nofollow' class='url'>Brian Tkatch</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110815-00/?p=9903#comment-930343">
			August 16, 2011 at 5:42 am</a>		</div>

		<p>Wow, didn&#39;t know cmd /? had such a huge output.</p>
<p>&quot;(As a consolation prize&quot;</p>
<p>Punnery at it&#39;s best. :)</p>
<p>Console-ation &#8230; ha ha&#8230;. ferget it.</p>
<p>&quot;they did add some examples at the end of the runas /? output to explain how quotation marks should be used.)&quot;</p>
<p>They made an example of you&#8211;and i quote&#8211;by slashing your questions?</p>
<p>Or is /? actually the Raymond Parameter? So, runas /? actually means &quot;run as raymond&quot;. Which makes sense, because it gives comments and examples, and, who knows, might actually run the command in a couple years.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-930363">
				<div id="div-comment-930363" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">simcmd</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110815-00/?p=9903#comment-930363">
			August 16, 2011 at 9:26 am</a>		</div>

		<p>I would like a simulate flag on runas. It should spawn a replica of the current system as a virtual guest and run the command in it. And compare *everyting* relevant in the guest system before and after the command ran, and show the difference.</p>
<p>That whould be useful.</p>
<div class="post">[<i>Perhaps useful, but I don&#39;t see how creating a virtual machine falls within the scope of runas. (You also have to define &quot;relevant&quot;.) -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-930573">
				<div id="div-comment-930573" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Anonymous Coward</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110815-00/?p=9903#comment-930573">
			August 17, 2011 at 9:49 am</a>		</div>

		<p>Until it suddenly inexplicably breaks. Then the docs will be laughing at you.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-930593">
				<div id="div-comment-930593" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">640k</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110815-00/?p=9903#comment-930593">
			August 17, 2011 at 10:08 am</a>		</div>

		<p>There&#39;s no docs for what happens when nesting commands with batch, schtasks and runas. Also, there&#39;s usually only one combination of special chars which works, if any docs say otherwise it doesn&#39;t work!</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-930603">
				<div id="div-comment-930603" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Anonymous Coward</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110815-00/?p=9903#comment-930603">
			August 17, 2011 at 11:00 am</a>		</div>

		<p>There&#39;s no docs for &amp;c. &#8211; Now that&#39;s just trolling. Not to mention lying.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-930443">
				<div id="div-comment-930443" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">640k</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110815-00/?p=9903#comment-930443">
			August 17, 2011 at 4:37 am</a>		</div>

		<p>The documentaion means nothing, getting things to work means everything.</p>
<p>Some commands, like schtasks, are expecting combinations of &#39; and &quot;. Only admins can install scheduled tasks, therefore you have to run schtasks with runas, which complicates syntax considerably, so you want the command contained in a batch file. If password contains characters like %, &#39;, &quot; and space (which &quot;experts&quot; claim increases security), the best thing you can do is *getting things to work*, then reading the docs and laugh at it.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-931183">
				<div id="div-comment-931183" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">640k</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110815-00/?p=9903#comment-931183">
			August 20, 2011 at 11:04 am</a>		</div>

		<p>What is the url to where the exact combination of batch, schtasks and runas are documented?</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

