<html>
<head>
<title>What did Windows 3.1 do when you hit Ctrl+Alt+Del?</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>What did Windows 3.1 do when you hit Ctrl+Alt+Del?</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>September 12, 2014 / year-entry #221</td></tr>
<tr><td><b>Tags:</b></td><td>history</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20140912-00/?p=44083</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>29</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">This is the end of Ctrl+Alt+Del week, a week that sort of happened around me and I had to catch up with. The Windows 3.1 virtual machine manager had a clever solution for avoiding deadlocks: There was only one synchronization object in the entire kernel. It was called "the critical section", with the definite article...</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>This is the end of <kbd>Ctrl</kbd>+<kbd>Alt</kbd>+<kbd>Del</kbd> week, a week that sort of happened around me and I had to catch up with.</p>
<p> The Windows 3.1 virtual machine manager had a clever solution for avoiding deadlocks: There was only one synchronization object in the entire kernel. It was called "the critical section", with the definite article because there was only one. The nice thing about a system where the only available synchronization object is a single critical section is that deadlocks are impossible: The thread with the critical section will always be able to make progress because the only thing that could cause it to stop would be blocking on a synchronization object. But there is only one synchronization object (the critical section), and it already owns that. </p>
<p> When you hit <kbd>Ctrl</kbd>+<kbd>Alt</kbd>+<kbd>Del</kbd> in Windows 3.1, a bunch of crazy stuff happened. All this work was in a separate driver, known as the <i>virtual reboot device</i>. By convention, all drivers in Windows 3.1 were called the <i>virtual something device</i> because their main job was to virtualize some hardware or other functionality. That's where the funny name VxD came from. It was short for <i>virtual <var>x</var> device</i>. </p>
<p> First, the virtual reboot device driver checked which virtual machine had focus. If you were using an MS-DOS program, then it told all the device drivers to clean up whatever they were doing for that virtual machine, and then it terminated the virtual machine. This was the easy case. </p>
<p> Otherwise, the focus was on a Windows application. Now things got messy. </p>
<p> When the 16-bit Windows kernel started up, it gave the virtual reboot device the addresses of a few magic things. One of those magic things was a special byte that was set to 1 every time the 16-bit Windows scheduler regained control. When you hit <kbd>Ctrl</kbd>+<kbd>Alt</kbd>+<kbd>Del</kbd>, the virtual reboot device set the byte to 0, and it also registered a callback with the virtual machine manager to say "Call me back once the critical section becomes available." The callback didn't do anything aside from remember the fact that it was called at all. And then the code waited for &frac34; seconds. (Why &frac34; seconds? I have no idea.) </p>
<p> After &frac34; seconds, the virtual reboot device looked to see what the state of the machine was. </p>
<p> If the "call me back once the critical section becomes available" callback was never called, then the problem is that a device driver is stuck in the critical section. Maybe the device driver put an <i>Abort, Retry, Ignore</i> message on the screen that the user needs to respond to. The user saw this message: </p>
<table style="font-size: 80%; background-color: #0000AA; color: white; font-family: Consolas, monospace; font-weight: bold; hyphens: none">
<tr>
<td style="width: 80ex; padding: 5ex">     <br>     </p>
<div style="text-align: center"><span style="background-color: #AAAAAA; color: #0000AA">&nbsp;Procomm&nbsp;</span></div>
<div><br><br></div>
<div> This background non-Windows application is not responding. <br> <br> *&nbsp; Press any key to activate the non-Windows application.<br> *&nbsp; Press CTRL+ALT+DEL again to restart your computer. You will<br> &nbsp;&nbsp; lose any unsaved information.     </div>
<div><br><br></div>
<div style="text-align: center">&nbsp;&nbsp;Press any key to continue _</div>
</td>
</tr>
</table>
<p> After the user presses a key, focus was placed on the virtual machine that holds the critical section so the user can address the problem. A user who is still stuck can hit <kbd>Ctrl</kbd>+<kbd>Alt</kbd>+<kbd>Del</kbd> again to restart the whole process, and this time, execution will go into the "If you were using an MS-DOS program" paragraph, and the code will shut down the stuck virtual machine. </p>
<p> If the critical section was not the problem, then the virtual reboot device checked if the 16-bit kernel scheduler had set the byte to 1 in the meantime. If so, then it means that no applications were hung, and you got the message </p>
<table style="font-size: 80%; background-color: #0000AA; color: white; font-family: Consolas, monospace; font-weight: bold; hyphens: none">
<tr>
<td style="width: 80ex; padding: 5ex">     <br>     </p>
<div style="text-align: center"><span style="background-color: #AAAAAA; color: #0000AA">&nbsp;Windows&nbsp;</span></div>
<div><br><br></div>
<div> Although you can use CTRL+ALT+DEL to quit an application that has stopped responding to the system, there is no application in this state.<br> <br> To quit an application, use the application's quit or exit command, or choose the Close command from the Control menu.<br> <br> *&nbsp; Press any key to return to Windows.<br> *&nbsp; Press CTRL+ALT+DEL again to restart your computer. You will<br> &nbsp;&nbsp; lose any unsaved information in all applications.     </div>
<div><br><br></div>
<div style="text-align: center">&nbsp;&nbsp;Press any key to continue _</div>
</td>
</tr>
</table>
<p> (Anachronism alert: The System menu was called the Control menu back then.) </p>
<p> Otherwise, the special byte was still 0, which means that the 16-bit scheduler never got control, which meant that a 16-bit Windows application was not releasing control back to the kernel. The virtual reboot device then waited for the virtual machine to finish processing any pending virtual interrupts. (This allowed any pending MS-DOS emulation or 16-bit MS-DOS device drivers to finish up their work.) If things did not return to this sane state within 3&frac14; seconds, then you got this screen: </p>
<table style="font-size: 80%; background-color: #0000AA; color: white; font-family: Consolas, monospace; font-weight: bold; hyphens: none">
<tr>
<td style="width: 80ex; padding: 5ex">     <br>     </p>
<div style="text-align: center"><span style="background-color: #AAAAAA; color: #0000AA">&nbsp;Windows&nbsp;</span></div>
<div><br><br></div>
<div> The system is either busy or has become unstable.  You can wait and see if the system becomes available again and continue working or you can restart your computer.<br> <br> *&nbsp; Press any key to return to Windows and wait.<br> *&nbsp; Press CTRL+ALT+DEL again to restart your computer. You will<br> &nbsp;&nbsp; lose any unsaved information in all applications.     </div>
<div><br><br></div>
<div style="text-align: center">&nbsp;&nbsp;Press any key to continue _</div>
</td>
</tr>
</table>
<p> Otherwise, we are in the case where the system returned to a state where there are no active virtual interrupts. The kernel single-stepped the processor if necessary until the instruction pointer was no longer in the kernel, or until it had single-stepped for 5000 instructions and the instruction pointer was not in the heap manager. (The heap manager was allowed to run for more than 5000 instructions.) </p>
<p> At this point, you got the screen that Steve Ballmer wrote. </p>
<table style="font-size: 80%; background-color: #0000AA; color: white; font-family: Consolas, monospace; font-weight: bold">
<tr>
<td style="width: 80ex; padding: 5ex">     <br><br>     </p>
<div style="text-align: center"><span style="background-color: #AAAAAA; color: #0000AA">Contoso Deluxe Music Composer</span></div>
<div><br><br></div>
<div>&nbsp;&nbsp;This Windows application has stopped responding to the system.<br>          <br>          <nobr>&nbsp;&nbsp;*&nbsp; Press ESC to cancel and return to Windows.</nobr><br>          <nobr>&nbsp;&nbsp;*&nbsp; Press ENTER to close this application that is not responding.</nobr><br>          <nobr>&nbsp;&nbsp;&nbsp;&nbsp; You will lose any unsaved information in this application.</nobr><br>          <nobr>&nbsp;&nbsp;*&nbsp; Press CTRL+ALT+DEL again to restart your computer. You will</nobr><br>          <nobr>&nbsp;&nbsp;&nbsp;&nbsp; lose any unsaved information in all applications.</nobr><br>         </p>
<div><br><br></div>
</p>
</div>
</td>
</tr>
</table>
<p> If you hit <kbd>Enter</kbd>, then the 16-bit kernel terminated the application by doing <code>mov ax, 4c00h</code> followed by <code>int 21h</code>, which was the system call that applications used to exit normally. This time, the kernel is making the exit call on behalf of the stuck application. Everything looks like the application simply decided to exit normally. </p>
<p> The stuck application exits, the kernel regains control, and hopefully, things return to normal. </p>
<p> I should point out that I didn't write any of this code. "It was like that when I got here." </p>
<p> <b>Bonus chatter</b>: There were various configuration settings to tweak all of the above behavior. For example, you could say that <kbd>Ctrl</kbd>+<kbd>Alt</kbd>+<kbd>Del</kbd> always restarted the computer rather than terminating the current application. Or you could skip the check whether the 16-bit kernel scheduler had set the byte to 1 so that you could use <kbd>Ctrl</kbd>+<kbd>Alt</kbd>+<kbd>Del</kbd> to terminate an application even if it wasn't hung.&sup1; There was also a setting to restart the computer upon receipt of an NMI, the intention being that the signal would be triggered either by a dedicated add-on switch or by <a href="http://blogs.msdn.com/b/oldnewthing/archive/2007/01/30/1557491.aspx"> poking a ball-point pen in just the right spot</a>. (This is safer than just pushing the reset button because the restart would flush disk caches and shut down devices in an orderly manner.) </p>
<p> &sup1; This setting was intended for developers to assist in debugging their programs because if you went for this option, the program that got terminated is whichever one happened to have control of the CPU at the time you hit <kbd>Ctrl</kbd>+<kbd>Alt</kbd>+<kbd>Del</kbd>. This was, in theory, random, but in practice it often guessed right. That's because the problem was usually that a program got wedged into an infinite message loop, so most of the CPU was being run in the stuck application anyway. </p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (29)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-1150563">
				<div id="div-comment-1150563" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Darren</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140912-00/?p=44083#comment-1150563">
			September 12, 2014 at 7:26 am</a>		</div>

		<p>Fun fact: Lots of old mainframe operating systems called the OS the &quot;System Monitor,&quot; not because it monitored the system but because a &quot;monitor&quot; is a synchronization object you can suspend yourself in and pick up again when it gets signaled. I.e., it would be like naming the kernel &quot;the system critical section&quot;.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-iboyd odd alt thread-odd thread-alt depth-1" id="comment-1150573">
				<div id="div-comment-1150573" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/IanBoyd' rel='external nofollow' class='url'>IanBoyd</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140912-00/?p=44083#comment-1150573">
			September 12, 2014 at 7:49 am</a>		</div>

		<p>Intended or not; i liked this trip down the Ctrl+Alt+Delete hole. </p>
<p>It was also a trip down memory lane. Not only for the blue screens, but for the unintentional mention of Procomm. That, and Telix, were used a lot when BBSs existed.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1150583">
				<div id="div-comment-1150583" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Gabe</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140912-00/?p=44083#comment-1150583">
			September 12, 2014 at 7:55 am</a>		</div>

		<p>I love how the kernel single-stepped the processor! I wonder how often this technique has been used outside of debuggers.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1150593">
				<div id="div-comment-1150593" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Muzer_</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140912-00/?p=44083#comment-1150593">
			September 12, 2014 at 8:21 am</a>		</div>

		<p>I like this, very clever &#8211; though I got a bit lost at &quot;If things did not return to this sane state within 3¼ seconds, then you got this screen:&quot; and &quot;The kernel single-stepped the processor if necessary until the instruction pointer was no longer in the kernel, or until it had single-stepped for 5000 instructions and the instruction pointer was not in the heap manager.&quot;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1150603">
				<div id="div-comment-1150603" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Muzer_</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140912-00/?p=44083#comment-1150603">
			September 12, 2014 at 8:26 am</a>		</div>

		<p>To expand on that, which sane state is it talking about, and what is the kernel trying to achieve by single-stepping the processor (and which instruction pointer)?</p>
<div class="post">[<em>The sane state is explained in the previous sentence, once you ignore the parenthetical: &quot;&#8230; waited for the virtual machine to finish processing any pending virtual interrupts.&quot; And the purpose of single-stepping the processor is to get back to the application so we can pretend the application called <code>exit</code>. -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1150613">
				<div id="div-comment-1150613" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Rick C</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140912-00/?p=44083#comment-1150613">
			September 12, 2014 at 8:39 am</a>		</div>

		<p>The definite article: <a rel="nofollow" target="_new" href="http://www.youtube.com/watch?v=K3CWXqUqPFA#t=40">http://www.youtube.com/watch</a></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1150633">
				<div id="div-comment-1150633" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Azarien</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140912-00/?p=44083#comment-1150633">
			September 12, 2014 at 8:50 am</a>		</div>

		<p>@Muzer: Perhaps to get the name of the &quot;current&quot; executable, to be displayed on the blue screen.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1150643">
				<div id="div-comment-1150643" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">N I</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140912-00/?p=44083#comment-1150643">
			September 12, 2014 at 8:58 am</a>		</div>

		<p>This has been a fascinating series of articles. I love how clever 16-bit Windows had to be, in contrast to NT which was able to favor correctness up front.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1150653">
				<div id="div-comment-1150653" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Scott Brickey</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140912-00/?p=44083#comment-1150653">
			September 12, 2014 at 9:00 am</a>		</div>

		<p>So THAT&#39;S where VxD came from. Finally answered, after decades of not knowing (not that I was investigating the whole time).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1150673">
				<div id="div-comment-1150673" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">D V</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140912-00/?p=44083#comment-1150673">
			September 12, 2014 at 9:28 am</a>		</div>

		<p>It&#39;s absolutely stunning that Windows, in its pre-NT incarnation, was actually a somewhat-functioning piece of software. I&#39;m in a state of awe after reading this article. Favorite quote &#8211; &quot;Why 3/4 seconds? I have no idea&quot;. Just utter chaos, held together by bubble gum and match sticks. Truly an amazing piece of software.</p>
<div class="post">[<em>You had to pull a lot of tricks to squeeze three operating systems into 2MB of memory. -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1150693">
				<div id="div-comment-1150693" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Virtual troll Device</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140912-00/?p=44083#comment-1150693">
			September 12, 2014 at 10:28 am</a>		</div>

		<p>All my eyes could focus on those screens is &quot;You will lose any unsaved information&quot;. The &quot;of Death&quot; part in BSOD is not unfounded.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-yuhong-bao odd alt thread-odd thread-alt depth-1" id="comment-1150713">
				<div id="div-comment-1150713" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Yuhong+Bao' rel='external nofollow' class='url'>Yuhong Bao</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140912-00/?p=44083#comment-1150713">
			September 12, 2014 at 11:31 am</a>		</div>

		<p>I hope you will write about how Ctrl-Alt-Del changed in Win9x. Win32 apps are probably relatively easy, but it would be interesting to read about how it handled Win16 apps.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1150743">
				<div id="div-comment-1150743" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">foo any</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140912-00/?p=44083#comment-1150743">
			September 12, 2014 at 1:45 pm</a>		</div>

		<p>I was very confused about this:</p>
<p>&quot;The kernel single-stepped the processor if necessary until the instruction pointer was no longer in the kernel, or until it had single-stepped for 5000 instructions and the instruction pointer was not in the heap manager. (The heap manager was allowed to run for more than 5000 instructions.)&quot;</p>
<p>Then I remembered that there are actually two kernels involved here, the 32bit virtual machine manager and the 16bit Windows kernel. So the former single stepped the latter, right?</p>
<div class="post">[<em>The 16-bit kernel single-stepped itself. The 32-bit kernel simulated an int 1 into the 16-bit kernel, and the int 1 handler took over from there. -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1150753">
				<div id="div-comment-1150753" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Eddie</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140912-00/?p=44083#comment-1150753">
			September 12, 2014 at 2:08 pm</a>		</div>

		<p>Ctrl-Alt-Del week has been absolutely entertaining and informative.</p>
<p>Raymond, after all those tech news sites erroneously reported that Ballmer created the BSOD did any coworkers stop by your office and say &quot;look what you done?&quot;</p>
<div class="post">[<em>Yeah, like all of them. (Exaggerating.) -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1150763">
				<div id="div-comment-1150763" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">foo any</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140912-00/?p=44083#comment-1150763">
			September 12, 2014 at 2:34 pm</a>		</div>

		<p>Ah, thanks Raymond, the simulated interrupt was the missing link. I was wondering how the 16bit kernel single stepping itself would make any sense if the virtual machine manager just resumed it.</p>
<p>By the way, you mentioned NMIs. What did happen on Win 3.1 when an NMI took place? Did the VMM just ignore it? Pass it into the 16bit kernel? Die?</p>
<div class="post">[<em>Actually, it wasn&#39;t precisely like that. The 32-bit kernel simulated a call to a magic function (part of the magic information provided at startup) <span style="text-decoration:underline;">as if</span> it were the int 1 handler. That function would then decide whether further tracing was necessary; if so, it would install a true int 1 handler, set the TF flag, and <code>iret</code>. Oh, did I mention that all of the code throughout this entire endeavor (32-bit kernel and 16-bit kernel) was written in assembly? (And the virtual reboot device by default rebooted the system when an NMI occurred.) -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1150773">
				<div id="div-comment-1150773" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Muzer_</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140912-00/?p=44083#comment-1150773">
			September 12, 2014 at 3:47 pm</a>		</div>

		<p>Oh, I see. I had somehow misunderstood the term &quot;in the kernel&quot;, for some reason interpreting it as meaning in the working memory of the kernel (as in, some pointer on the stack somewhere had to disappear so it was no longer &quot;in the kernel&quot;), as opposed to the instruction pointer (which I now realise is synonymous with the program counter) having to stop pointing to memory belonging to the kernel. Thanks for correcting my stupid misunderstanding!</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-yuhong-bao even thread-even depth-1" id="comment-1150783">
				<div id="div-comment-1150783" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Yuhong+Bao' rel='external nofollow' class='url'>Yuhong Bao</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140912-00/?p=44083#comment-1150783">
			September 12, 2014 at 3:50 pm</a>		</div>

		<p>@Muzer_: To be more precise, I think it is referring to KRNL386.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1150813">
				<div id="div-comment-1150813" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">user</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140912-00/?p=44083#comment-1150813">
			September 13, 2014 at 7:47 am</a>		</div>

		<p>The whole week was awesome Raymond! What can you tell us about &quot;Abort, Retry, Fail&quot; message?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1150823">
				<div id="div-comment-1150823" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">12BitSlab</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140912-00/?p=44083#comment-1150823">
			September 13, 2014 at 8:14 am</a>		</div>

		<p>This past week is yet another reason why this is my favorite blog. &nbsp;Thanks, Raymond!</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1150833">
				<div id="div-comment-1150833" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">smf</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140912-00/?p=44083#comment-1150833">
			September 13, 2014 at 9:45 am</a>		</div>

		<p>&quot;The whole week was awesome Raymond! What can you tell us about &quot;Abort, Retry, Fail&quot; message?&quot;</p>
<p>@user</p>
<p>I&#39;m old school. I remember &quot;Abort, Retry, Ignore&quot;, IIRC it changed around dos 3.3</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1150843">
				<div id="div-comment-1150843" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">nobugz</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140912-00/?p=44083#comment-1150843">
			September 13, 2014 at 11:59 am</a>		</div>

		<p>Ah, I see Ballmer&#39;s hand in rewriting *that* one.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1150883">
				<div id="div-comment-1150883" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Innocent Bystander</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140912-00/?p=44083#comment-1150883">
			September 13, 2014 at 11:27 pm</a>		</div>

		<p>There is something particularly enchanting about these stories from the Windows 3.1 days. I think the hardware constraints forces the generation of &quot;nifty code&quot; that is both fun to read (and one assumes write) about. Win NT was a much more stable OS perhaps, but it was at least and order of magnitude slower at the time! I get the same enjoyment reading the original Quake sources (when can you open source Win 3.1 Raymond?). Sadly, modern hardware means we mostly have different priorities in this current day.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1150903">
				<div id="div-comment-1150903" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">ErikF</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140912-00/?p=44083#comment-1150903">
			September 14, 2014 at 4:05 am</a>		</div>

		<p>I&#39;m betting that the 3/4 second delay was to let VCACHE flush its buffers. I remember disk activity happening when I pressed Ctrl+Alt+Del (and also remember that hard disks were *not* fast back then!) Thanks again for the great series! There&#39;s something to be said for &quot;nifty code&quot;, but the downside to it is that such code often becomes unmaintainable and a possible source of problems later on.</p>
<div class="post">[<em>Well, there was no VCACHE in Windows 3.1, but I get your point. To let the disk cache flush. -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1150923">
				<div id="div-comment-1150923" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">user</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140912-00/?p=44083#comment-1150923">
			September 14, 2014 at 11:23 am</a>		</div>

		<p>@smf</p>
<p>I guess I&#39;m old</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1150933">
				<div id="div-comment-1150933" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">user</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140912-00/?p=44083#comment-1150933">
			September 14, 2014 at 1:57 pm</a>		</div>

		<p>Off topic &#8211; Raymond I guess those folks at Windows Phone team need your guidance badly, My phone was updating, It took more than an hour to reach to %93, then error 801882d2 happened and them instead of resuming the download, it started it all over again. a quick search showed that error 801882d2 is probably a server time-out error, does it really have to restart the download? can&#39;t it just resume it? Guys, Seriously?</p>
<div class="post">[<em>Try hitting Ctrl+Alt+Del. -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-cheong odd alt thread-odd thread-alt depth-1" id="comment-1150943">
				<div id="div-comment-1150943" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/cheong00' rel='external nofollow' class='url'>cheong00</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140912-00/?p=44083#comment-1150943">
			September 14, 2014 at 6:45 pm</a>		</div>

		<p>Yes, I think Win3.1 still using SMARTDRV.EXE to do caching things.</p>
<p>Btw, regarding &quot;unstable&quot; state in Win3.1, I remember I wondered about why sometimes the mouse cursor can move in &quot;unstable&quot; state and sometimes I can&#39;t (The Ctrl-Alt-Del keys are still functional in both cases) We used this to deduce how badly the system state is gone at that time.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1150953">
				<div id="div-comment-1150953" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Klimax</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140912-00/?p=44083#comment-1150953">
			September 15, 2014 at 6:49 am</a>		</div>

		<p>@cheong00</p>
<p>Correct:</p>
<p><a rel="nofollow" target="_new" href="http://support.microsoft.com/kb/83325/en-us">support.microsoft.com/&#8230;/en-us</a></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1151193">
				<div id="div-comment-1151193" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Mc</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140912-00/?p=44083#comment-1151193">
			September 16, 2014 at 2:56 am</a>		</div>

		<p>Anyone remember the &quot;crash&quot; &nbsp;where moving the mouse made the machine make beeping noises at you. Because the message queue was full? Much more entertaining than a blue screen.</p>
<div class="post">[<em>Oh, you mean <a href="http://blogs.msdn.com/b/oldnewthing/archive/2009/09/18/9896621.aspx">ticking death</a>. -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1151243">
				<div id="div-comment-1151243" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">DWalker</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140912-00/?p=44083#comment-1151243">
			September 16, 2014 at 8:58 am</a>		</div>

		<p>That KB article 83325 is quite interesting! &nbsp;I probably read it when it first came out. &nbsp;Windows, and all operating systems, have come a long way since then (only 23 years). &nbsp;</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

