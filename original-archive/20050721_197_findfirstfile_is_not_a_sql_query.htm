<html>
<head>
<title>FindFirstFile is not a SQL query</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>FindFirstFile is not a SQL query</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>July 21, 2005 / year-entry #198</td></tr>
<tr><td><b>Tags:</b></td><td>code</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20050721-16/?p=34863</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>15</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">The FindFirstFile function is not a SQL query. It's a very simple directory enumerator. There is a slightly fancier version called FindFirstFileEx, but even that function doesn't add much at present beyond filtering for directories or devices. You don't get to pass it sort criteria like or "return the files/directories sorted smallest file first", or...</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p><a href="http://msdn.microsoft.com/library/en-us/fileio/base/findfirstfile.asp"> The <code>FindFirstFile</code> function</a> is not a SQL query. It's a very simple directory enumerator. There is a slightly fancier version called <a href="http://msdn.microsoft.com/library/en-us/fileio/base/findfirstfileex.asp"> <code>FindFirstFileEx</code></a>, but even that function doesn't add much at present beyond filtering for directories or devices.</p>
<p> You don't get to pass it sort criteria like or "return the files/directories sorted smallest file first", or "<a href="http://groups.google.com/groups?selm=cftf1p%245ej%241@hercules.btinternet.com">return the files/directories in reverse order of creation</a>" The only filtering you can provide are the wildcard pattern and (if you use <code>FindFirstFileEx</code>) a directory filter. The wildcard language is very limited as well; it can't express queries like "files whose extension are either .exe or .dll" or "<a href="http://groups.google.com/groups?selm=MPG.18cd1851de9db08a989a93@news.hinet.hr">all files whose extension is .c plus all directories regardless of extension</a>". You also can't ask it questions like, "Tell me the total size of the files in this directory", for <a href="http://blogs.msdn.com/oldnewthing/archive/2004/12/28/336219.aspx"> as we saw earlier</a>, this question is underspecified. </p>
<p> If you want to do any of those advanced queries, you'll have to code it up yourself. Or as <a href="http://blogs.msdn.com/hippietim/">Hippie Tim</a> is fond of saying, "Start typing!" </p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (15)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-291853">
				<div id="div-comment-291853" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Scott</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050721-16/?p=34863#comment-291853">
			July 21, 2005 at 11:10 am</a>		</div>

		<p>It doesn&#8217;t look like hippie tim has followed his own advice on typing much.  It looked like his blog would actually be interesting.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-291863">
				<div id="div-comment-291863" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Mr J</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050721-16/?p=34863#comment-291863">
			July 21, 2005 at 11:18 am</a>		</div>

		<p>I can&#8217;t believe that all the people asking to do funky stuff with FindFirstFile haven&#8217;t considered that it&#8217;s probably more powerful and quicker to just suck all the results from FindFirstFile into a std::vector and do whatever the hell you like with it afterwards.</p>
<p>Is this a case of API dependecy ? Once you use an API to do a job, you start wanting it to do all the jobs.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-291893">
				<div id="div-comment-291893" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blogs.xceedsoft.com/plantem' rel='external nofollow' class='url'>Martin Plante</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050721-16/?p=34863#comment-291893">
			July 21, 2005 at 1:14 pm</a>		</div>

		<p>That&#8217;s exactly what we ended up doing in Xceed Zip ActiveX to support more advanced filtering and multiple masks in the same folder.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-291913">
				<div id="div-comment-291913" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">A</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050721-16/?p=34863#comment-291913">
			July 21, 2005 at 1:42 pm</a>		</div>

		<p>&quot;The only filtering you can provide are the wildcard pattern and (if you use FindFirstFileEx) a directory filter&quot;</p>
<p>Hmm, the current Platform SDK documentation claims FindExSearchLimitToDirectories is &quot;Reserved for future use&quot;.</p>
<p>What exactly can done with FindFirstFileEx that can&#8217;t be done with FindFirstFile? All of the new options appear to be flagged as &quot;reserved&quot; or &quot;not supported&quot;:</p>
<p>FindExSearchLimitToDirectories &#8211; &quot;Reserved for future use&quot;<br />
<br />FindExSearchLimitToDevices &#8211; &quot;This filtering type is not available&quot;<br />
<br />lpSearchFilter &#8211; &quot;this pointer must be NULL&quot;<br />
<br />dwAdditionalFlags &#8211; &quot;Reserved for future use&quot;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-291933">
				<div id="div-comment-291933" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Miles Archer</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050721-16/?p=34863#comment-291933">
			July 21, 2005 at 2:35 pm</a>		</div>

		<p>If there&#8217;s demand for SQL like querying on directories, why isn&#8217;t it added to the OS so everyone doesn&#8217;t have to write their own?</p>
<p>No, I don&#8217;t want to wait for Longhorn, WinFS, or whatever.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-291963">
				<div id="div-comment-291963" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Arlie Davis</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050721-16/?p=34863#comment-291963">
			July 21, 2005 at 3:43 pm</a>		</div>

		<p>The desire for SQL-like functionality is not feature creep.  It is doing the right job at the right place.</p>
<p>Consider access to file servers.  The right thing to do is to send the file server the filesystem query, have it process it, and send the results over the wire.  Slurping large directories to the client, just so the client can cherry-pick the handful of entries that are actually relevant, is wasteful.</p>
<p>I think SQL, or a SQL-like language, is the right thing, even for traditional filesystems.  How many different random queries do we have for interrogating filesystems?  Just look at FileInformationClass in the DDK.  I used to be an NT developer, so I know that the number of file information classes is in excess of 20.  Same thing for directory queries.  There are lots of little &quot;one-off&quot; collections of attributes.</p>
<p>The OS API would be a lot simpler if apps could provide the list of file attributes (columns), the source context (directory or entire directory tree), and a restriction clause (name matching, size, etc.).  And yeah, if you follow that to its natural conclusion you get SQL, which I see as a good thing.  Even WITHOUT all of the DBFS / WinFS stuff, it&#8217;s a good thing just for normal, traditional filesystems.</p>
<p>What makes this powerful is that the FS implementation has more information at hand to work with, and can therefore make better decisions when it is processing the query.  For example, FILE_NETWORK_OPEN_INFORMATION contains CreationTime, LastAccessTime, LastWriteTime, ChangeTime, AllocationSize, EndOfFile, and FileAttributes.  If all you need is EndOfFile and FileAttributes, there&#8217;s no need for the FS to grovel up the access times, or waste network time with them.</p>
<p>Yes, I know these attributes are on-hand for most FS implementations.  But there ARE reasonable collections of columns, representing sets of data that applications want, that are NOT all contained in a single file information class or API.  Apps are then forced to do multiple FS queries, and merge the results.</p>
<p>The OS should serve the needs of applications, not the other way around.  The OS should abstract common implementation details, where it makes sense to do so.  I want my SQL FS queries.<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-291973">
				<div id="div-comment-291973" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Chris</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050721-16/?p=34863#comment-291973">
			July 21, 2005 at 4:40 pm</a>		</div>

		<p><a rel="nofollow" target="_new" href="http://msdn.microsoft.com/library/default.asp?url=/library/en-us/dnanchor/html/indexserv.asp" rel="nofollow">http://msdn.microsoft.com/library/default.asp?url=/library/en-us/dnanchor/html/indexserv.asp</a></p>
<p><a rel="nofollow" target="_new" href="http://addins.msn.com/devguide.aspx#SqlQueries" rel="nofollow">http://addins.msn.com/devguide.aspx#SqlQueries</a></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-292003">
				<div id="div-comment-292003" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Jerry Pisk</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050721-16/?p=34863#comment-292003">
			July 21, 2005 at 6:17 pm</a>		</div>

		<p>And as we learned yesterday FindFirstFile does not even support long filenames. If you ask it to find *.htm it will act like an outdated Win16 code and return index.html as well.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-291943">
				<div id="div-comment-291943" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.benwatson.org' rel='external nofollow' class='url'>Ben</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050721-16/?p=34863#comment-291943">
			July 21, 2005 at 3:33 pm</a>		</div>

		<p>&gt;&gt;<br />
<br />If there&#8217;s demand for SQL like querying on directories, why isn&#8217;t it added to the OS so everyone doesn&#8217;t have to write their own? </p>
<p>No, I don&#8217;t want to wait for Longhorn, WinFS, or whatever.<br />
<br />&lt;&lt;</p>
<p>These two statements seem to be in direct contradiction. You want it in the OS but want it now? It *IS* being added to the OS (or was&#8230;I haven&#8217;t followed the latest news about WinFS for a few months). </p>
<p>Implementing &quot;SQL&quot; on a file system isn&#8217;t a trivial undertaking, and neither is adding a new API to the OS. Any reader of Raymond&#8217;s (or other) blogs will quickly realize this.</p>
<p>Until MS does write one that works OS-wide, we&#8217;re stuck with either 3rd-party libraries or waiting for MS to get it right and working.</p>
<p>Personally, I&#8217;d rather wait and have something that works well across the whole system.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-291993">
				<div id="div-comment-291993" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Arlie Davis</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050721-16/?p=34863#comment-291993">
			July 21, 2005 at 5:42 pm</a>		</div>

		<p>I know about Index Server, and it isn&#8217;t good enough.  It&#8217;s the right idea, but the implementation leaves a lot to be desired.  Mostly, it&#8217;s *optional*, and it&#8217;s rarely installed or configured correctly.  Also, it only applies to trees that the administrator has enabled for indexing.</p>
<p>Tell me &#8212; is content indexing enabled on your desktop?  On every directory?  Is it running?  Is it &#8212; most important of all &#8212; up to date?  Is it guaranteed to be up to date immediately after I call CreateFile + CloseHandle?</p>
<p>A SQL-like interface should be just as reliable and omnipresent as FindFirstFile.<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-dean-harding even thread-even depth-1" id="comment-292013">
				<div id="div-comment-292013" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Dean+Harding' rel='external nofollow' class='url'>Dean Harding</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050721-16/?p=34863#comment-292013">
			July 21, 2005 at 7:56 pm</a>		</div>

		<p>But we *are* getting the SQL-like features in WinFS.  I don&#8217;t see how you can expect that new features should be automatically back-ported to old versions of the OS.  It&#8217;s like asking Ford to install power steering, ABS and central locking into your 1974 Mustang&#8230; for free!</p>
<p>If you need more powerful searching, there&#8217;s a billion regular expression libraries out there, just use one of those to do your own.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-292073">
				<div id="div-comment-292073" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Nick Lamb</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050721-16/?p=34863#comment-292073">
			July 22, 2005 at 10:31 am</a>		</div>

		<p>The &quot;total size&quot; thing has been complicated by Windows developers traditionally not being told about the difference between the SIZE of something and its LENGTH.</p>
<p>Unix clearly differentiates between the questions &quot;What SIZE is this file?&quot; (ie how many disk blocks are needed to store it) and &quot;How LONG is this file?&quot; (ie if I open it, and read one byte at a time, how many bytes is that?).</p>
<p>This still leaves some subtle things to worry about for the application developer, as always, but it does mean the common question from users &quot;What&#8217;s using all the space on my 40GB disk?&quot; is an easy question to answer. There&#8217;s no possibility that you missed 850MB of ACLs, or that you mistakenly blame a 4GB long sparse file that&#8217;s only 1% filled.</p>
<p>The designers of BeOS made a rather strange decision here BTW. They wanted a more powerful query system, fair enough, but they integrated it into their BeFS. So all the parsing of the query, the special cases etc. are all handled deep in the BeFS code. On the one hand this gives a free hand to filesystem developers who want to add e.g. a query feature that matches prime numbers, but on the other hand every single 3rd party filesystem (e.g a RAMfs, a network file system) must either do without this functionality altogether, or include a fragile (and security critical) query parser of its own in kernelspace.</p>
<p>One thing BeOS did get right here was integration of update notification with file queries. So it&#8217;s very easy to write a GUI file chooser that remains up-to-date while other applications create, update and remove files. Legacy APIs like FindFirstFile can&#8217;t easily be modified to support this way of working.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-292083">
				<div id="div-comment-292083" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Arlie Davis</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050721-16/?p=34863#comment-292083">
			July 22, 2005 at 11:18 am</a>		</div>

		<p>I&#8217;m aware we&#8217;re getting SQL-like queries in WinFS, and I&#8217;m elated, and no, I don&#8217;t expect everything to be back-ported for free.</p>
<p>All I was emphasizing is that a decent query processor does not *require* that the filesystem become a database.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-292173">
				<div id="div-comment-292173" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.jasmusic.com' rel='external nofollow' class='url'>Joshua Schaeffer</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050721-16/?p=34863#comment-292173">
			July 22, 2005 at 6:02 pm</a>		</div>

		<p>Find* forces any complex search into a linear one, no matter how important or unimportant your design goals. You could have the most stunning gorgeous query engine in the universe and yet you still have to run through the Find* gauntlet. Let the disk thrashing continue.</p>
<p>When I first read the whitepapers for WinFS I was actually fascinated by the hierarchical object model, wondering why I hadn&#8217;t thought of it. Until it sank in that all this stuff was being dumped upon tired NTFS (right?). What a clusterf___. I&#8217;m disappointed.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-292773">
				<div id="div-comment-292773" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">msemack</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050721-16/?p=34863#comment-292773">
			July 26, 2005 at 12:10 pm</a>		</div>

		<p>Why are you dissapointed that WinFS is implemented on to of NTFS?  What do you think is so wrong about it?</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

