<html>
<head>
<title>Importance of alignment even on x86 machines</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>Importance of alignment even on x86 machines</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>August 27, 2004 / year-entry #320</td></tr>
<tr><td><b>Tags:</b></td><td>history</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20040827-00/?p=38033</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>17</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">Sometimes unaligned memory access will hang the machine. Some video cards do not let you access all the video memory at one go. Instead, you are given a window into which you can select which subset of video memory ("bank") you want to see. For example, the EGA video card had 256K of memory, split...</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>Sometimes unaligned memory access will hang the machine.</p>
<p> Some video cards do not let you access all the video memory at one go. Instead, you are given a window into which you can select which subset of video memory ("bank") you want to see. For example, the EGA video card had 256K of memory, split into four 64K banks. If you wanted to access memory in the first 64K, you had to select bank zero into the window, but if you wanted to access memory in the second 64K, then you had to select bank one. </p>
<p> Bank-switching makes memory access much more complicated, For example, if you want to copy a block of memory into bank-switched memory, you have to check when you are going to cross a bank boundary and break the copy up into pieces.  If you are doing something that requires non-sequential access (say, drawing a diagonal line), you have to check when your line is going to cross into another bank. </p>
<p> To simplify matters, Windows&nbsp;95 had a driver called VFLATD that made bank-switched memory look flat to the rest of the system. Flattening the bank-switched memory model was also crucial for <a href="http://msdn.microsoft.com/archive/en-us/ddraw7/directdraw7/ddover_5bnb.asp"> DirectDraw</a> support; in particular, the IDirectDrawSurface::Lock method gave you direct access to a (seemingly) flat expanse of video memory. For example, if the application wanted to see a 256K surface and accessed memory in the first 64K of memory, the VFLATD driver would select bank zero and map the 64K physical memory window into the first 64K of the virtual 256K memory window. </p>
<p> This worked great as long as everybody uses only aligned memory accesses.  But if you access unaligned memory, you can send VFLATD into an infinite loop and hang the machine. </p>
<p> Suppose you make an unaligned memory access that straddles two banks. This memory access can never be satisfied. A page fault is taken on the lower portion of the unaligned access, and VFLATD maps the lower bank into memory. Then a page fault is taken on the higher portion of the unaligned access, and VFLATD now has to map the upper bank; this unmaps the lower bank, since the video card is bank-switched and only one bank can be mapped ata time.  Now a page fault is taken on the lower portion, and the infinite loop continues. </p>
<p> Moral of the story: Keep those memory accesses aligned, even on the x86, which most people would consider to be one where it is "safe" to violate alignment rules. </p>
<p> Next time, <a href="http://blogs.msdn.com/oldnewthing/archive/2004/08/30/222631.aspx"> another example of how misaligned data access can create bugs x86</a>. </p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (17)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-206383">
				<div id="div-comment-206383" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.rose-hulman.edu/~gurganbl/' rel='external nofollow' class='url'>Brant Gurganus</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040827-00/?p=38033#comment-206383">
			August 27, 2004 at 7:20 am</a>		</div>

		<p>How is the memory banking different from considering memory as say 1024 8-bit memory banks in the kase of 1KiB of memory?  You have to specify the high bits to access higher memory.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-206393">
				<div id="div-comment-206393" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://pages.infinit.net/ctech/poupou.html' rel='external nofollow' class='url'>Sebastien Pouliot</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040827-00/?p=38033#comment-206393">
			August 27, 2004 at 8:01 am</a>		</div>

		<p>Did EGA really had 256K ? I though VGA cards started at 256K ?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-206403">
				<div id="div-comment-206403" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">mschaef</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040827-00/?p=38033#comment-206403">
			August 27, 2004 at 8:43 am</a>		</div>

		<p>The original EGA card had 64K standard and was upgradable to 256K. 640x350x16 colors requires around 110K.</p>
<p>VGA was also 256K, IBM&#8217;s other PS/2 video standard, the MCGA (used on the Model 25 and 30) had 64K. It had the VGA&#8217;s 256 color 320&#215;200 mode, as well as a 640&#215;480 monochrome mode.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-206413">
				<div id="div-comment-206413" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://mikedimmick.blogspot.com' rel='external nofollow' class='url'>Mike Dimmick</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040827-00/?p=38033#comment-206413">
			August 27, 2004 at 8:48 am</a>		</div>

		<p>Memory banking: you have to use some out-of-band mechanism (writing a value to a device register through a memory write or an I/O write) to change which bank of memory is visible through a &#8216;window&#8217; of addresses. Example: the Sinclair ZX Spectrum 128K models did this to allow addressibility of 128KB of RAM where the Z80 processor used could only address 64KB of addresses, including ROM (this computer used a separate I/O address space). 16K of the address space, between 0xC000 and 0xFFFF, could be mapped to any of 8 banks of memory. Banks 2 and 5 were permanently mapped at 8000 &#8211; BFFF and 4000 &#8211; 7FFF respectively. The hardware could also swap between two ROMs at 0000 &#8211; 3FFF on the cassette versions and an additional two ROMs (total of 4) on the disk versions. To configure the memory, you used I/O port 7FFD.</p>
<p>Sorry, indulging my archaic computing knowledge.</p>
<p>Similar concepts were available in Expanded Memory on the PC, using a window of memory addresses in the 640KB &#8211; 1MB region to map memory above 1MB on 16-bit machines in real mode. On 386 machines, the EMM386 TSR was capable of faking Expanded memory using Extended memory. Windows still does this for DOS programs, if required.</p>
<p>Finally, AWE provides similar capabilities for switching reserved physical memory into your virtual address space. See Raymond&#8217;s series of /3GB articles at <a target="_new" href="http://weblogs.asp.net/oldnewthing/archive/2004/08/22/218527.aspx" rel="nofollow">http://weblogs.asp.net/oldnewthing/archive/2004/08/22/218527.aspx</a>.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-206433">
				<div id="div-comment-206433" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blogs.msdn.com/tristank/' rel='external nofollow' class='url'>TristanK</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040827-00/?p=38033#comment-206433">
			August 27, 2004 at 9:38 am</a>		</div>

		<p>Ahh, sweet memory. I saved up for months for a Paradise EGA card (256Mb) for my 10Mhz 640K PC XT. It allegedly allowed 640x480x16, though my monitor was capable of only 640x350x16.</p>
<p>I don&#8217;t remember getting Windows 3.0 to work on it (vague memory of a memory limitation), but I managed to get it working in 640&#215;200 mono CGA mode. I was happy, and it was slow, and I gave up and went back to playing Ultima 5.</p>
<p>I think Speedball was the only game I remember that gave a choice between EGA (64K) and EGA (256K), and I never could tell the difference between the modes. I&#8217;m guessing that one was &quot;better&quot; cos it (possibly) used whole banks as back buffers&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-206443">
				<div id="div-comment-206443" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Adrian</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040827-00/?p=38033#comment-206443">
			August 27, 2004 at 9:53 am</a>		</div>

		<p>&quot;But if you access unaligned memory, you can send VFLATD into an infinite loop and hang the machine.&quot;</p>
<p>I wonder if that&#8217;s why so many of the machines I&#8217;ve owned will often hang when a DirectX application starts.  I&#8217;ve had Win95, 98, and NT4 boxes that can&#8217;t launch more than one DirectX application per session.  I still use the Win98 one, and, even with all the latest drivers, I run into this problem routinely.  I set IE to prompt for ActiveX controls so gratuitous Flash advertisements don&#8217;t lock me up.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-206453">
				<div id="div-comment-206453" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://rentzsch.com' rel='external nofollow' class='url'>rentzsch</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040827-00/?p=38033#comment-206453">
			August 27, 2004 at 1:11 pm</a>		</div>

		<p>Couldn&#8217;t VFLATD be aware of the bank boundaries and make two consecutive reads itself? In crude ascii art, assume we want to access &#8216;xxxx&#8217; which spans two banks:</p>
<p>aaaaxx|xxbbbb</p>
<p>VFLATD could read the lower bank first (possibly having to read up &#8216;aaxx&#8217;, and discarding the &#8216;aa&#8217;) and then the higher bank.</p>
<p>I&#8217;d imagine this would slow down VFLATD in general, so maybe it was a performance call?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-206463">
				<div id="div-comment-206463" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">RJ</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040827-00/?p=38033#comment-206463">
			August 27, 2004 at 2:44 pm</a>		</div>

		<p>Tangential topic:  &quot;atomic&quot; operations.  The Interlocked functions also fail for about the same reason.  But I guess the resulting bug is not as apparent as the machine hanging!</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-206473">
				<div id="div-comment-206473" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.codeproject.com/script/articles/list_articles.asp?userid=152' rel='external nofollow' class='url'>Mike Dunn</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040827-00/?p=38033#comment-206473">
			August 27, 2004 at 7:25 pm</a>		</div>

		<p>Ah, Ultima V, probably the best game I ever played on the old C=64.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-206483">
				<div id="div-comment-206483" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Anonymous Coward</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040827-00/?p=38033#comment-206483">
			August 27, 2004 at 7:41 pm</a>		</div>

		<p>I once worked at ICL (it used to be a once proud British computer company somewhat similar to IBM in scope).</p>
<p>At one point they made special EGA cards that had an extra display area on the bottom.  It was intended for customer service agents.  The intention was that normal programs ran in the EGA display area, and then caller id and other status information would appear in the special area.</p>
<p>The resulting overall display area was 640&#215;480 (ie VGA) but EGA used digital signals whereas VGA onwards has been analog signals.  It took me quite a while to try to get the damn card to work properly since it wasn&#8217;t quite clear what the issue was (ordinary EGA or VGA drivers didn&#8217;t quite work).  Then someone remembered how special the card was &#8230;</p>
<p>ICL was also one of the companies that paid for MS-DOS 4.  Not the MS-DOS 4 you know about now, but the special multi-tasking version.  I keep kicking myself that I never saved a copy.</p>
<p>And I only had a 16K ZX Spectrum.  Most of the games in the magazines required the 48K model.  Consequently when I typed them in I had to figure out how to make the code shorter.  Other developers still complain about the terseness or even lack of my comments :-)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-206523">
				<div id="div-comment-206523" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://weblogs.asp.net/larryosterman' rel='external nofollow' class='url'>Larry Osterman</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040827-00/?p=38033#comment-206523">
			August 27, 2004 at 11:38 pm</a>		</div>

		<p>AC: Drop me a line on my blog :)  I may know you IRL.  Especially since I wrote DOS 4.1 (ok, Kevin, Mike, and Matthew also did a lot of work too).<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-206533">
				<div id="div-comment-206533" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.accidentalscientist.com' rel='external nofollow' class='url'>Simon Cooke [exMSFT]</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040827-00/?p=38033#comment-206533">
			August 28, 2004 at 5:11 pm</a>		</div>

		<p>Ahh&#8230; AC&#8230; how I loved the ZX Spectrum :)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-206553">
				<div id="div-comment-206553" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">josh</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040827-00/?p=38033#comment-206553">
			August 29, 2004 at 12:41 am</a>		</div>

		<p>If you&#8217;ve got two windows or can align them on a finer granularity than the window size, this shouldn&#8217;t be a problem.  But EGA probably doesn&#8217;t meet either of those conditions.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-206563">
				<div id="div-comment-206563" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Anonymous Coward</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040827-00/?p=38033#comment-206563">
			August 29, 2004 at 12:56 am</a>		</div>

		<p>I apologise in advance to Raymond for threadjacking, but would like to nominate the Spectrum ROM disassembly book as the greatest computer book of all time.  You had to be there :-)</p>
<p>If you weren&#8217;t, software and hardware developed differently between the US and the UK in the 80&#8217;s.  The US developed (multiple) thousand dollar machines such as Apple II and the PC.  Even the mid to top range Amiga and Commodore machines were approaching those sort of price points.</p>
<p>On the other hand, the British market was very low.  Most machines were around the 100 pound (GBP) mark, were more limited but innovative for the price, and very widely owned.</p>
<p>Ultimately the US ended up being the leader in business software.  A generation of British programmers grew up on the limited machines and turned out to be excellent game programmers.  For the last decade, a lot of game software was written by those folks, and mostly published by US companies.</p>
<p>See this page for more info on the Spectrum:</p>
<p><a target="_new" href="http://www.nvg.ntnu.no/sinclair/computers/zxspectrum/zxspectrum.htm" rel="nofollow">http://www.nvg.ntnu.no/sinclair/computers/zxspectrum/zxspectrum.htm</a></p>
<p>Does Microsoft have any intention of a software museum?  I am thinking downloadable copies of DOS 1.0 and Windows 1.0 that can be run in VirtualPC.  Even a book with the dis-assembly of Bill&#8217;s first version of Basic :-)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-206573">
				<div id="div-comment-206573" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Norman Diamond</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040827-00/?p=38033#comment-206573">
			August 29, 2004 at 6:49 pm</a>		</div>

		<p>8/27/2004 9:38 AM TristanK</p>
<p>&gt; Ahh, sweet memory.  [&#8230;]<br />
<br />&gt; [&#8230;] (vague memory of a memory limitation),</p>
<p>No wonder end users get confused by all those kinds of memories.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-206783">
				<div id="div-comment-206783" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://weatherley.net' rel='external nofollow' class='url'>JamesW</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040827-00/?p=38033#comment-206783">
			August 31, 2004 at 7:02 am</a>		</div>

		<p>Just to continue the threadjack &#8211; anyone who&#8217;s interested can download a pdf of the complete Spectrum ROM disassembly from here:</p>
<p><a target="_new" href="ftp://ftp.worldofspectrum.org/pub/sinclair/books/CompleteSpectrumROMDisassemblyThe.pdf" rel="nofollow">ftp://ftp.worldofspectrum.org/pub/sinclair/books/CompleteSpectrumROMDisassemblyThe.pdf</a></p>
<p>Sinclair for Ever!</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-206903">
				<div id="div-comment-206903" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://elfz.laacz.lv' rel='external nofollow' class='url'>Einars Lielmanis</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040827-00/?p=38033#comment-206903">
			September 1, 2004 at 2:54 am</a>		</div>

		<p>Sweet nostalgy.</p>
<p>I know people who would &quot;die&quot; for this book something like ten years ago. As this book was unavailable in Latvia (and in all ex-USSR) we had legends and mentions going around about this book, but nobody had ever seen the book itself :) (and now I see IT!)</p>
<p>It&#8217;s most surprising how the ROM was developed so (almost) bug-free, if you think about the features it offers, as well as the programming conditions of that time (tape storage, lack of  debuggers, memory limtations..) It&#8217;s a wonder ANYTHING got written at all :)</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

