<html>
<head>
<title>How do I programmatically add a folder to my Documents library?</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>How do I programmatically add a folder to my Documents library?</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>November 7, 2016 / year-entry #233</td></tr>
<tr><td><b>Tags:</b></td><td>code</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20161107-00/?p=94655</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>15</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">You can use SHAddFolderPathToLibrary, but there's a catch.</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>
Today's Little Program adds a folder to the Documents library.
Remember that Little Programs do little to no error checking.
</p>
<p>
Today's smart pointer library is&hellip; (rolls dice)&hellip; nothing!
We're going with raw pointers.
</p>
<pre>
#define STRICT
#include &lt;windows.h&gt;
#include &lt;ole2.h&gt;
#include &lt;shlobj.h&gt;

int __cdecl wmain(int argc, wchar_t** argv)
{
  CoInitialize(nullptr);
  IShellLibrary* library;
  SHLoadLibraryFromKnownFolder(FOLDERID_DocumentsLibrary,
                               STGM_READWRITE, IID_PPV_ARGS(&amp;library));
  for (int i = 1; i &lt; argc; i++) {
    SHAddFolderPathToLibrary(library, argv[i]);
  }
  library-&gt;Release();
  CoUninitialize();
  return 0;
}
</pre>
<p>
This program uses some helper functions for manipulating libraries.
The <code>SH&shy;Load&shy;Library&shy;From&shy;Known&shy;Folder</code>
function
is a shorthand for
<code>Co&shy;Create&shy;Instance(CLSID_<wbr>Shell&shy;Library)</code> followed by
<code>IShell&shy;Library::<wbr>Load&shy;Library&shy;From&shy;Known&shy;Folder</code>,
and the
<code>SH&shy;Add&shy;Folder&shy;Path&shy;To&shy;Library</code> function
is a shorthand for
<code>SH&shy;Create&shy;Item&shy;From&shy;Parsing&shy;Name</code>
followed by
<code>IShell&shy;Library::<wbr>Add&shy;Folder</code>.
</p>
<p>
Run this program with the full path (or paths) to the folders
you want to add to the Documents Library, and&hellip; nothing happens.
</p>
<p>
Ah, because there's a gotcha with libraries:
After you make a change to a library, you need to commit your changes.
So let's fix that:
</p>
<pre>
#define STRICT
#include &lt;windows.h&gt;
#include &lt;ole2.h&gt;
#include &lt;shlobj.h&gt;

int __cdecl wmain(int argc, wchar_t** argv)
{
  CoInitialize(nullptr);
  IShellLibrary* library;
  SHLoadLibraryFromKnownFolder(FOLDERID_DocumentsLibrary,
                               STGM_READWRITE, IID_PPV_ARGS(&amp;library));
  for (int i = 1; i &lt; argc; i++) {
    SHAddFolderPathToLibrary(library, argv[i]);
  }
  <font COLOR=blue>library-&gt;Commit(); // add this line</font>
  library-&gt;Release();
  CoUninitialize();
  return 0;
}
</pre>
<p>
Okay, let's try it again.
Run this program with the full path (or paths) to the folders
you want to add to the Documents Library, and hooray! the folders
are added to the Documents Library.</p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (15)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1 parent" id="comment-1272445">
				<div id="div-comment-1272445" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Erik</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20161107-00/?p=94655#comment-1272445">
			November 7, 2016 at 8:44 am</a>		</div>

		<p>Makes one wonder. Is there a sane use-case where one would want to AddFolderPathsToLibrary, but not commit afterwards?</p>

		
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-oldnewthing bypostauthor odd alt depth-2 parent" id="comment-1272455">
				<div id="div-comment-1272455" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Raymond+Chen+-+MSFT' rel='external nofollow' class='url'>Raymond Chen - MSFT</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20161107-00/?p=94655#comment-1272455">
			November 7, 2016 at 9:14 am</a>		</div>

		<p>I think the Commit is a performance thing. Rebuilding the library after each individual Add would create wasted work if you were adding more than one.</p>

		
				</div>
		<ol class="children">
		<li class="comment even depth-3" id="comment-1272565">
				<div id="div-comment-1272565" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Erik</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20161107-00/?p=94655#comment-1272565">
			November 8, 2016 at 1:10 am</a>		</div>

		<p>Ah, makes sense. Thanks!</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-msn odd alt depth-3" id="comment-1273155">
				<div id="div-comment-1273155" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/poizan42' rel='external nofollow' class='url'>poizan42</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20161107-00/?p=94655#comment-1273155">
			November 13, 2016 at 5:40 am</a>		</div>

		<p>Well, they could commit on the final release, but doing important work when cleaning up is bad design.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment even thread-odd thread-alt depth-1 parent" id="comment-1272465">
				<div id="div-comment-1272465" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">pc</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20161107-00/?p=94655#comment-1272465">
			November 7, 2016 at 9:44 am</a>		</div>

		<p>Somebody totally needs to actually create a Smart Pointer Library Die to give to Raymond for Christmas.</p>

		
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-oldnewthing bypostauthor odd alt depth-2 parent" id="comment-1272475">
				<div id="div-comment-1272475" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Raymond+Chen+-+MSFT' rel='external nofollow' class='url'>Raymond Chen - MSFT</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20161107-00/?p=94655#comment-1272475">
			November 7, 2016 at 9:50 am</a>		</div>

		<p>Psst. Here&#8217;s a secret: The dice are loaded.</p>

		
				</div>
		<ol class="children">
		<li class="comment even depth-3" id="comment-1272525">
				<div id="div-comment-1272525" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20161107-00/?p=94655#comment-1272525">
			November 7, 2016 at 12:20 pm</a>		</div>

		<p>That just means we need to make an easy way to weight them.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment byuser comment-author-jeremytais odd alt depth-2" id="comment-1272485">
				<div id="div-comment-1272485" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/SimonRev' rel='external nofollow' class='url'>SimonRev</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20161107-00/?p=94655#comment-1272485">
			November 7, 2016 at 9:55 am</a>		</div>

		<p>I would totally buy some for my coworkers for Christmas, if any of them read this blog.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even depth-2 parent" id="comment-1272495">
				<div id="div-comment-1272495" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">ZLB</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20161107-00/?p=94655#comment-1272495">
			November 7, 2016 at 10:10 am</a>		</div>

		<p>I&#8217;m pretty much certain that the last place I worked at actually had a &#8216;Delimiter of the day&#8217; dice&#8230;</p>
<p>&#8230;and no. Chr(0) is NOT a good choice for joining strings! (I wish I was joking!)</p>

		
				</div>
		<ol class="children">
		<li class="comment odd alt depth-3" id="comment-1272555">
				<div id="div-comment-1272555" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">JDG</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20161107-00/?p=94655#comment-1272555">
			November 7, 2016 at 4:01 pm</a>		</div>

		<p>There is plenty of precedence for using &#8216;\0&#8217; to separate strings, such as environment blocks and REG_MULTI_SZ. It&#8217;s actually not particularly inconvenient in C with C-style strings.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1 parent" id="comment-1272505">
				<div id="div-comment-1272505" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Yukkuri</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20161107-00/?p=94655#comment-1272505">
			November 7, 2016 at 10:36 am</a>		</div>

		<p>I love the pointer dice roll (even if no actual dice are involved).</p>

		
				</div>
		<ol class="children">
		<li class="comment odd alt depth-2" id="comment-1272925">
				<div id="div-comment-1272925" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.dox.com.au' rel='external nofollow' class='url'>Ian Yates</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20161107-00/?p=94655#comment-1272925">
			November 10, 2016 at 12:00 pm</a>		</div>

		<p>Same.  Unfortunately it&#8217;s one of those things I enjoy that if I tried to show and explain it to anyone else I know they&#8217;d think I was weird.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment even thread-odd thread-alt depth-1" id="comment-1272585">
				<div id="div-comment-1272585" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Someone</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20161107-00/?p=94655#comment-1272585">
			November 8, 2016 at 3:49 am</a>		</div>

		<p>Why is this API available? Only the user himself (through Explorer) should be able to organize the Libraries, by exactly the argument as for the pin-to-taskbar feature.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-even depth-1 parent" id="comment-1272735">
				<div id="div-comment-1272735" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">bickerdyke</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20161107-00/?p=94655#comment-1272735">
			November 9, 2016 at 3:56 am</a>		</div>

		<p>Speaking of sane use-cases&#8230;. what would be the use case for a software (most likely during the installation process) to create document storage outside the user profiles document directory and adding that to the library instead of creating a directory INSIDE the users regular documents folder?</p>
<p>Wouldn&#8217;t this circumvent all of windows&#8217; profile management? Like, those additional directories would not be backuped along with the rest of the users profile*, it would not be moved to a data partition if a user tries to split up his system in a OS and data partition**</p>
<p>Where would be a suggested location for an additional application data directory that could be added to the document library? (in a safe and clean way)</p>
<p>* if not specified separately<br />
** assuming as somehow sane that some user data will always be stored within the OS partition</p>

		
				</div>
		<ol class="children">
		<li class="comment even depth-2" id="comment-1272775">
				<div id="div-comment-1272775" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Andrew Cook</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20161107-00/?p=94655#comment-1272775">
			November 9, 2016 at 8:34 am</a>		</div>

		<p>OneDrive, Dropbox, and SharePoint document libraries come to mind. You don&#8217;t really want them to roam with a user&#8217;s profile because, hey, they already roam a different way, and if you have a greedy synchronization stack (&#8220;up to date even before you log in!&#8221;) you don&#8217;t want them to invalidate a user&#8217;s profile. You may even want a different set of permissions (to line up with permissions on the remote site) that wouldn&#8217;t be reset by an overzealous &#8220;fix&#8221; to the user&#8217;s profile folder.</p>
<p>Granted, you could easily accomplish all this and more with a shell namespace extension, but COM is hard, so let&#8217;s just create an icon overlay and go shopping!</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

