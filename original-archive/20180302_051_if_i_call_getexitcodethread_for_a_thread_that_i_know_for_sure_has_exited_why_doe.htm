<html>
<head>
<title>If I call GetExitCodeThread for a thread that I know for sure has exited, why does it still say STILL_ACTIVE?</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>If I call GetExitCodeThread for a thread that I know for sure has exited, why does it still say STILL_ACTIVE?</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>March 2, 2018 / year-entry #51</td></tr>
<tr><td><b>Tags:</b></td><td>code</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20180302-00/?p=98145</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>9</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">Because that's not the thread handle you think it is.</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>
A customer reported that when they
took the thread handle returned by the
<code>_beginthread</code> function and passed it to
<code>Get&shy;Exit&shy;Code&shy;Thread</code>,
the function reported that the thread was
<code>STILL_</code><code>ACTIVE</code>,
even though the thread is known to have already exited.
</p>
<p>
The customer found this text in
<a HREF="http://msdn.microsoft.com/en-us/library/kdzttdcb.aspx">
the documentation for <code>_beginthread</code></a>
and wants more information about the case where the function can
return an invalid handle if the thread exits quickly.
</p>
<blockquote CLASS=q><p>
 If the thread that's generated by <b>_beginthread</b> exits quickly,
the handle that's returned to the caller of
<b>_beginthread</b> might be invalid or point to another thread.
</p>
</blockquote>
<p>
The point is that the <code>_begin&shy;thread</code> function
returns a handle to a thread, but that handle
is valid only as long as the thread is running.
<a HREF="https://blogs.msdn.microsoft.com/oldnewthing/20170929-00/?p=97115">
Once the thread exits, the handle spontaneously becomes invalid</a>,
at which point it becomes eligible for recycling.
</p>
<p>
The upshot of this is that the handle returned by
<code>_begin&shy;thread</code> is useless,
because it can go invalid for reasons outside your control.
</p>
<p>
The source code for the C runtime library is included with Visual Studio.
You can read the source code for the <code>_begin&shy;thread</code>
function if you want to understand what's going on.
</p>
<p>
The customer asked whether this behavior of
<code>_begin&shy;thread</code> would explain
the problem they are seeing.
<?P></p>
<p>
Yes, it is exactly the problem you are seeing.
Calling <code>Get&shy;Exit&shy;Code&shy;Thread</code>
with the handle returned by <code>_begin&shy;thread</code> is useless.
</p>
<ul>
<li>If the thread is running, then you will get
    <code>STILL_</code><code>ACTIVE</code>.</li>
<li>If the thread is not running, then you are using an invalid
    parameter and you will get garbage.
    The value <code>STILL_</code><code>ACTIVE</code> is one possible
    manifestation of garbage.</li>
</ul>
<p>
In general, the return value from <code>_begin&shy;thread</code>
is not useful and should not be used for anything other than
determining whether the thread was started successfully.
</p>
<p>
We recommend that if the customer wants to use the thread handle,
they should switch to <code>_begin&shy;thread&shy;ex</code>
and remember to close the handle when they are done.
</p>
<p>
The customer explained that their application
was originally developed by another company.
They had considered switching from
<code>_begin&shy;thread</code> to
<code>_begin&shy;thread&shy;ex</code>,
but didn't want to do so unless absolutely necessary,
because they would have to justify the time and money required
to fix the problem to their management.
</p>
<p>
Yes, switching from
<code>_begin&shy;thread</code> to
<code>_begin&shy;thread&shy;ex</code> will fix the problem.
As noted,
the handle returned by <code>_begin&shy;thread</code> is useless,
and any code that tries to do anything beyond test it for success
is like to run into problems exactly like the one you describe.
</p>
<p>
We learned about some people who
<a HREF="https://technet.microsoft.com/en-us/library/jj643252.aspx">
want documentation that a bad idea is a bad idea</a>.
But that documentation is already there in MSDN.
They already have the paperwork they need.
I couldn't quite figure out what the customer was looking for.
Did they just want a personalized version of the documentation
customized just for them?
</p>
<p>
If that's what you need, you can copy/paste the following paragraph.
</p>
<blockquote CLASS=m>
<p>
To whom it may concern,
</p>
<p>
It is my recommendation that the return value from the
<code>_begin&shy;thread</code> function should be used
only to determine whether the function succeeded.
In particular, the handle returned by the function is of
indeterminate lifetime and cannot be reliably used.
</p>
<p>
Sincerely,
</p>
<p>
Raymond Chen
</p>
</blockquote>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (9)	</div>

		<div id="respond" class="comment-respond">
		<h3 id="reply-title" class="comment-reply-title"> <small><a rel="nofollow" id="cancel-comment-reply-link" href="/oldnewthing/20180302-00/?p=98145#respond" style="display:none;">Cancel reply</a></small></h3>			<form action="https://blogs.msdn.microsoft.com/oldnewthing/wp-comments-post.php" method="post" id="commentform" class="comment-form">
				<p class="comment-form-comment"><textarea id="comment" name="comment" cols="45" rows="4" aria-required="true"></textarea></p><p class="comment-form-author"><label for="author">Name <span class="required">*</span></label> <input id="author" name="author" type="text" value="" size="30" maxlength="245" aria-required='true' required='required' /></p>
<p class="comment-form-email"><label for="email">Email <span class="required">*</span></label> <input id="email" name="email" type="text" value="" size="30" maxlength="100" aria-describedby="email-notes" aria-required='true' required='required' /></p>
<p class="comment-form-url"><label for="url">Website</label> <input id="url" name="url" type="text" value="" size="30" maxlength="200" /></p>
<p class="form-submit"><input name="submit" type="submit" id="submit" class="submit btn btn-default" value="Post Comment" /> <input type='hidden' name='comment_post_ID' value='98145' id='comment_post_ID' />
<input type='hidden' name='comment_parent' id='comment_parent' value='0' />
</p><p style="display: none;"><input type="hidden" id="akismet_comment_nonce" name="akismet_comment_nonce" value="73b8066ca1" /></p><p style="display: none;"><input type="hidden" id="ak_js" name="ak_js" value="28"/></p>			</form>
			</div><!-- #respond -->
	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment byuser comment-author-jeremytais even thread-even depth-1 parent" id="comment-1327475">
				<div id="div-comment-1327475" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/SimonRev' rel='external nofollow' class='url'>SimonRev</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180302-00/?p=98145#comment-1327475">
			March 2, 2018 at 8:36 am</a>		</div>

		<p>Here I was expecting the article to be about some thread that decided to return 253 as its exit code.</p>

		<div class="reply"><a rel='nofollow' class='comment-reply-link' href='https://blogs.msdn.microsoft.com/oldnewthing/20180302-00/?p=98145&#038;replytocom=1327475#respond' onclick='return addComment.moveForm( "div-comment-1327475", "1327475", "respond", "98145" )' aria-label='Reply to SimonRev'>Reply</a></div>
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-msn odd alt depth-2 parent" id="comment-1327595">
				<div id="div-comment-1327595" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/poizan42' rel='external nofollow' class='url'>poizan42</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180302-00/?p=98145#comment-1327595">
			March 3, 2018 at 4:58 am</a>		</div>

		<p>GetExitCode(Process|Thread) has always seemed badly designed to me. They could just have returned a DWORD instead with an error code including the possibility of ERROR_STILL_RUNNING or something like that. Instead we get a function returning a bool, setting the error with SetLastError() while returning the exitcode in an out parameter while making one possible value ambiguous.</p>
<p>Also the documentation for the functions does not give the best advice. They advice you to not return 253. Better advice would be to always check whether a thread is running with WaitForSingleObject(hThread, 0) and only get the exit code if it has exited.</p>

		<div class="reply"><a rel='nofollow' class='comment-reply-link' href='https://blogs.msdn.microsoft.com/oldnewthing/20180302-00/?p=98145&#038;replytocom=1327595#respond' onclick='return addComment.moveForm( "div-comment-1327595", "1327595", "respond", "98145" )' aria-label='Reply to poizan42'>Reply</a></div>
				</div>
		<ol class="children">
		<li class="comment even depth-3" id="comment-1327615">
				<div id="div-comment-1327615" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180302-00/?p=98145#comment-1327615">
			March 3, 2018 at 9:42 am</a>		</div>

		<p>To be fair your best advice is what I do. In continuation, I think the best way to check if running is WaitForSingleObject with zero timeout.</p>

		<div class="reply"><a rel='nofollow' class='comment-reply-link' href='https://blogs.msdn.microsoft.com/oldnewthing/20180302-00/?p=98145&#038;replytocom=1327615#respond' onclick='return addComment.moveForm( "div-comment-1327615", "1327615", "respond", "98145" )' aria-label='Reply to Joshua'>Reply</a></div>
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1 parent" id="comment-1327485">
				<div id="div-comment-1327485" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">R P (MSFT)</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180302-00/?p=98145#comment-1327485">
			March 2, 2018 at 9:13 am</a>		</div>

		<p>That&#8217;s all well and good, but can I use the handle from _beginthread to get the thread&#8217;s exit code?</p>

		<div class="reply"><a rel='nofollow' class='comment-reply-link' href='https://blogs.msdn.microsoft.com/oldnewthing/20180302-00/?p=98145&#038;replytocom=1327485#respond' onclick='return addComment.moveForm( "div-comment-1327485", "1327485", "respond", "98145" )' aria-label='Reply to R P (MSFT)'>Reply</a></div>
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-oldnewthing bypostauthor even depth-2" id="comment-1327535">
				<div id="div-comment-1327535" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Raymond+Chen+-+MSFT' rel='external nofollow' class='url'>Raymond Chen - MSFT</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180302-00/?p=98145#comment-1327535">
			March 2, 2018 at 4:01 pm</a>		</div>

		<p>Indeed, it is guaranteed <u>not</u> to work! <a href="https://blogs.msdn.microsoft.com/oldnewthing/20170929-00/?p=97115">Once the thread exits, the handle becomes invalid</a>, so you can&#8217;t use it to get the exit code.</p>

		<div class="reply"><a rel='nofollow' class='comment-reply-link' href='https://blogs.msdn.microsoft.com/oldnewthing/20180302-00/?p=98145&#038;replytocom=1327535#respond' onclick='return addComment.moveForm( "div-comment-1327535", "1327535", "respond", "98145" )' aria-label='Reply to Raymond Chen - MSFT'>Reply</a></div>
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment odd alt thread-even depth-1 parent" id="comment-1327855">
				<div id="div-comment-1327855" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Koro</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180302-00/?p=98145#comment-1327855">
			March 5, 2018 at 11:12 am</a>		</div>

		<p>At this point, you might as well just change _beginthread to return a dummy invalid handle on success to force people to not rely on this value.</p>

		<div class="reply"><a rel='nofollow' class='comment-reply-link' href='https://blogs.msdn.microsoft.com/oldnewthing/20180302-00/?p=98145&#038;replytocom=1327855#respond' onclick='return addComment.moveForm( "div-comment-1327855", "1327855", "respond", "98145" )' aria-label='Reply to Koro'>Reply</a></div>
				</div>
		<ol class="children">
		<li class="comment even depth-2" id="comment-1327975">
				<div id="div-comment-1327975" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180302-00/?p=98145#comment-1327975">
			March 5, 2018 at 8:21 pm</a>		</div>

		<p>Bad idea. I&#8217;ve come up with uses that are guaranteed to work. See DuplicateHandle for why it&#8217;s possible. (Note that you have to be synchronizing with the newly created thread somewhere or this is still racy).</p>

		<div class="reply"><a rel='nofollow' class='comment-reply-link' href='https://blogs.msdn.microsoft.com/oldnewthing/20180302-00/?p=98145&#038;replytocom=1327975#respond' onclick='return addComment.moveForm( "div-comment-1327975", "1327975", "respond", "98145" )' aria-label='Reply to Joshua'>Reply</a></div>
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1327905">
				<div id="div-comment-1327905" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">mikeb</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180302-00/?p=98145#comment-1327905">
			March 5, 2018 at 11:25 am</a>		</div>

		<p>To be fair to the customer, the way the documentation for the return value of _beginthread is written, it makes it seems like there is an chance that using the handle could work, maybe with some effort.</p>
<p>In my opinion, the documentation should include a direct statement of what you say in your article:  &#8220;The return value from _begin­thread should not be used for anything other than determining whether the thread was started successfully&#8221;</p>
<p>While the docs as written aren&#8217;t incorrect, without a clear, direct statement the documentation leaves the impression that there might be a way to use the handle safely.  Why force users to figure this out for themselves and possibly get it wrong, when you can just say what you mean?  (please keep in mind that the &#8216;you&#8217; here refers to Microsoft, not Raymond).</p>

		<div class="reply"><a rel='nofollow' class='comment-reply-link' href='https://blogs.msdn.microsoft.com/oldnewthing/20180302-00/?p=98145&#038;replytocom=1327905#respond' onclick='return addComment.moveForm( "div-comment-1327905", "1327905", "respond", "98145" )' aria-label='Reply to mikeb'>Reply</a></div>
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-wndsks even thread-even depth-1" id="comment-1328135">
				<div id="div-comment-1328135" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/skSdnW' rel='external nofollow' class='url'>skSdnW</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180302-00/?p=98145#comment-1328135">
			March 6, 2018 at 8:54 am</a>		</div>

		<p>Schrödinger&#8217;s handle. We know it was valid when we started but now, who knows. And we can&#8217;t even check.</p>

		<div class="reply"><a rel='nofollow' class='comment-reply-link' href='https://blogs.msdn.microsoft.com/oldnewthing/20180302-00/?p=98145&#038;replytocom=1328135#respond' onclick='return addComment.moveForm( "div-comment-1328135", "1328135", "respond", "98145" )' aria-label='Reply to skSdnW'>Reply</a></div>
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

