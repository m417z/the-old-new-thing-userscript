<html>
<head>
<title>A brief discussion on how best to respond to the end-session messages</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>A brief discussion on how best to respond to the end-session messages</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>March 29, 2017 / year-entry #80</td></tr>
<tr><td><b>Tags:</b></td><td>code</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20170329-00/?p=95855</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>25</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">You can start early, but be aware that the user might change their mind.</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>
A customer discovered that their application's shutdown code
sometimes deadlocked.
To address the problem, they moved the bulk of their shutdown code
to the <code>WM_END&shy;SESSION</code> message handler.
The customer
found
<a HREF="https://blogs.msdn.microsoft.com/oldnewthing/20130627-00/?p=3973">
my earlier discussion of the
<code>WM_END&shy;SESSION</code> message</a>
and wondered if they were doing the right thing.
</p>
<p>
Yes, it's okay to do shutdown activities in response to the
<code>WM_END&shy;SESSION</code> message,
provided that
the <code>wParam</code> is nonzero,
indicating that the session really is ending.
If the <code>wParam</code> is zero,
then it means that the session is <i>not</i> ending,
so you had better not destroy anything you still need.
</p>
<p>
Recall the shutdown sequence:
First, the application receives a
<code>WM_QUERY&shy;END&shy;SESSION</code> message.
Here is the traditional point at which
you can display a prompt to ask the user
whether they want to save their unsaved changes.&sup1;
Normally, you return <code>TRUE</code>,
but if the user hits <i>Cancel</i> or otherwise indicates
that they don't want to shut down after all,
then you return <code>FALSE</code>.
</p>
<p>
If you returned <code>TRUE</code>,
then you will eventually receive a
<code>WM_END&shy;SESSION</code> message
whose
<code>wParam</code> indicates whether the session
really is ending.
(The session might not actually be ending if another
application returned <code>FALSE</code>
to the <code>WM_QUERY&shy;END&shy;SESSION</code> message,
or if the user canceled shutdown from the UI.)
</p>
<p>
The customer shared some of their code,
and I noticed that they were destroying a window
in their <code>WM_END&shy;SESSION</code> message
handler, which is suspicious for two reasons:
</p>
<ol>
<li>
    If the <code>wParam</code> is <code>FALSE</code>,
    the application will continue to run, but it lost
    one of its windows!
</li>
<li>
    If the <code>wParam</code> is <code>TRUE</code>,
    then it's okay to destroy things, but remember that
    you are running under a time constraint,
    and
    <a HREF="https://blogs.msdn.microsoft.com/oldnewthing/20120105-00/?p=8683">
    the building is being demolished</a>,
    so you probably shouldn't be wasting time sweeping
    the floor and emptying the trash cans.
</li>
</ol>
<p>
What you could do is to kick off a background thread
to prepare for shutdown when you receive the
<code>WM_QUERY&shy;END&shy;SESSION</code> message.
For example, you might start
an autosave operation.
Whatever you do, make sure that it's okay for the operation
to occur even if the shutdown is subsequently canceled.
</p>
<p>
When you get the <code>WM_END&shy;SESSION</code> message,
you wait until that background operation completes
before telling the system,
"I'm good; you can shut down now."
</p>
<p>
Opportunistically starting the operation when you get the
<code>WM_QUERY&shy;END&shy;SESSION</code> message
means that you can respond more quickly to the
<code>WM_END&shy;SESSION</code> message.
</p>
<p>
&sup1;
In practice, displaying a prompt is usually not a good idea
because if you don't respond to the message after a few seconds,
the system will shut down without you.</p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (25)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1 parent" id="comment-1290525">
				<div id="div-comment-1290525" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Koro</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170329-00/?p=95855#comment-1290525">
			March 29, 2017 at 7:32 am</a>		</div>

		<p>Doing an auto-save on end-session seems like the worst thing: what if the process gets killed midway through writing the file? Data loss.</p>

		
				</div>
		<ol class="children">
		<li class="comment odd alt depth-2" id="comment-1290527">
				<div id="div-comment-1290527" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">creaothceann</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170329-00/?p=95855#comment-1290527">
			March 29, 2017 at 7:49 am</a>		</div>

		<p>@Koro: That&#8217;s why you use checksums and don&#8217;t automatically overwrite/delete old saves.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even depth-2" id="comment-1290535">
				<div id="div-comment-1290535" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Karellen</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170329-00/?p=95855#comment-1290535">
			March 29, 2017 at 7:50 am</a>		</div>

		<p>Unless you save in a transactional way:</p>
<p><a href="https://msdn.microsoft.com/en-us/library/windows/desktop/hh802690(v=vs.85)" rel="nofollow">https://msdn.microsoft.com/en-us/library/windows/desktop/hh802690(v=vs.85)</a>.aspx</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-oldnewthing bypostauthor odd alt depth-2" id="comment-1290585">
				<div id="div-comment-1290585" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Raymond+Chen+-+MSFT' rel='external nofollow' class='url'>Raymond Chen - MSFT</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170329-00/?p=95855#comment-1290585">
			March 29, 2017 at 9:04 am</a>		</div>

		<p>I meant crash recovery autosave, the one you do in case the program crashes so that on restart you can say &#8220;Hey, sorry about the crash. Do you want to recover the unsaved document?&#8221; Get that thing all ready to go, and if the user decides &#8220;Why yes, please save,&#8221; you just do a little renaming.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment even thread-odd thread-alt depth-1 parent" id="comment-1290546">
				<div id="div-comment-1290546" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">henke37</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170329-00/?p=95855#comment-1290546">
			March 29, 2017 at 8:32 am</a>		</div>

		<p>You&#8217;d think that Windows would let you expose to the system that there is unsaved changes and provide an unified interface in the shutdown screen to deal with the situation. It&#8217;s not a new situation.</p>

		
				</div>
		<ol class="children">
		<li class="comment odd alt depth-2 parent" id="comment-1290595">
				<div id="div-comment-1290595" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">dhiren</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170329-00/?p=95855#comment-1290595">
			March 29, 2017 at 9:04 am</a>		</div>

		<p>This is what I would love to see in the next Win10 update. What would be awesome would be if, instead of saying something like &#8216;this program is preventing you from shutting down&#8217;, it could say &#8216;this program has unsaved work&#8217; with a Save button next to each blocking program. </p>
<p>That way, I could save right from the shutdown screen, or click &#8216;Restart anyway&#8217; or &#8216;Force Restart&#8217; or whatever to discard the changes. </p>
<p>If a program is blocking the shutdown for reasons other than a pending save, then the existing &#8216;this program is preventing you from shutting down&#8217; message can be displayed, with a Review button that could switch back to the desktop, putting that window in focus. As soon as I resolve whatever&#8217;s blocking the shutdown, as soon as the blocking window is closed, switch back to the shutdown screen and continue with the shutdown.</p>

		
				</div>
		<ol class="children">
		<li class="comment even depth-3 parent" id="comment-1290596">
				<div id="div-comment-1290596" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Electron Shepherd</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170329-00/?p=95855#comment-1290596">
			March 29, 2017 at 9:51 am</a>		</div>

		<p>That sounds great, but I think the devil is in the details.</p>
<p>Firstly, you&#8217;ll need that time machine that the guys at Microsoft Research have developed and make sure that existing software (e.g. the ever-popular Word 2007) knows about this new way to save documents. </p>
<p>Then you have to worry about programs that have not yet saved their document, so you need to prompt the user for a location and filename. A previously saved document that can&#8217;t be re-saved  (if it was saved to a now-removed USB stick), is a special case of this, but would also need handling.</p>

		
				</div>
		<ol class="children">
		<li class="comment odd alt depth-4" id="comment-1290616">
				<div id="div-comment-1290616" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Dmitry</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170329-00/?p=95855#comment-1290616">
			March 29, 2017 at 12:01 pm</a>		</div>

		<p>Yeah, the current behavior is much better. Just kill all crap that is messing up on The Holy Update Reboot Trail. You know, &#8220;Reboot in 30 seconds&#8221; is the priority #1.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even depth-4 parent" id="comment-1290635">
				<div id="div-comment-1290635" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">dhiren</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170329-00/?p=95855#comment-1290635">
			March 29, 2017 at 1:23 pm</a>		</div>

		<p>Of course the actual implementation requirements would be a bit more than a few lines on a blog comment, but from a very end-user point of view, the obvious pitfalls that you mentioned are easily solved. Naturally, there would be various technical or back-compat reasons that things can&#8217;t be as simple in the end, but off-hand:<br />
&#8211; no time machine necessary &#8211; if the app doesn&#8217;t support the new functionality, it doesn&#8217;t get the new save button. Eventually (i.e. hopefully), most apps support the new functionality and everyone eventually (lol) upgrades to the newer versions.<br />
&#8211; if the user clicks Save but no existing filename is available, the app can request the shutdown screen to<br />
  a) display a save dialog on its behalf, which would likely make for a messy UI/workflow, so instead, rather&#8230;<br />
  b) fall back to the Review functionality, where we switch back to the desktop and focus the offending application, which would already most likely have its save dialog open already. Once the file&#8217;s been saved (or the save&#8217;s been cancelled) and the application closed, we go back to the shutdown screen<br />
  c) in fact, when the app receives the shutdown notification, since it already knows that it doesn&#8217;t have an existing filename to save to, it can just decline the opportunity to display the save button, and just fall back to Review instead<br />
&#8211; if the app encounters an error while saving, fall back to the Review functionality</p>
<p>The Review mode could be implemented such that if the user switches away from the program whose shutdown is being reviewed, then they just stay on the desktop and the shutdown is cancelled. </p>
<p>(Yes, this is something I&#8217;m passionate about for no reason whatsoever)</p>

		
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-oldnewthing bypostauthor odd alt depth-5" id="comment-1290645">
				<div id="div-comment-1290645" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Raymond+Chen+-+MSFT' rel='external nofollow' class='url'>Raymond Chen - MSFT</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170329-00/?p=95855#comment-1290645">
			March 29, 2017 at 1:49 pm</a>		</div>

		<p>One of the tricky parts is knowing when the user has switched away from the program. There are common cases (e.g., editing an OLE embedding) where there are multiple processes all working together as one &#8220;app&#8221;. You are waiting for the user to save in program X, and they click a toolbar button &#8211; but wait, that toolbar button is running in program Y because it&#8217;s a plug-in, and now we think the user has canceled the save. I also wonder if people will like the bouncing between environments (shutdown screen and Review mode).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even depth-5" id="comment-1290675">
				<div id="div-comment-1290675" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">ErikF</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170329-00/?p=95855#comment-1290675">
			March 29, 2017 at 3:55 pm</a>		</div>

		<p>Fast User Switching/Remote Desktop puts a whole bunch of wrenches in the works as well, because you may have programs on different desktops (with different credentials!) wanting to confirm; right now, Windows just lists which programs are being slow to quit. What do you do with those other programs? (I don&#8217;t think there is a good answer to this one, but maybe there is and I just can&#8217;t see it.)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-cheong odd alt depth-5" id="comment-1290715">
				<div id="div-comment-1290715" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/cheong00' rel='external nofollow' class='url'>cheong00</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170329-00/?p=95855#comment-1290715">
			March 29, 2017 at 7:21 pm</a>		</div>

		<p>Could it be desirable to add some flag in THUMBBUTTON for ITaskbarList3::ThumbBarAddButtons() so you could use as a button to be displayed on shutdown event if it waited for too long? In addition to the standard &#8220;force close&#8221; one.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment byuser comment-author-deltics even depth-4" id="comment-1291136">
				<div id="div-comment-1291136" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Deltics' rel='external nofollow' class='url'>Deltics</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170329-00/?p=95855#comment-1291136">
			April 2, 2017 at 6:48 pm</a>		</div>

		<p>I don&#8217;t think the time machine they built is fit for purpose.  Otherwise they wouldn&#8217;t be trying to sell it.</p>
<p><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170330-01/?p=95866" rel="nofollow">https://blogs.msdn.microsoft.com/oldnewthing/20170330-01/?p=95866</a></p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment odd alt depth-2 parent" id="comment-1290665">
				<div id="div-comment-1290665" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">640k</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170329-00/?p=95855#comment-1290665">
			March 29, 2017 at 3:49 pm</a>		</div>

		<p>Actually, instead I, and probably most people, hope windows will be even more aggressive to shut down obstructing applications, and not display &#8220;these apps doesn&#8217;t respond&#8221; AT ALL. F*ck those apps. Instead apps should implement auto-recover, that will also improve the experience when (not if) those apps crash. If you&#8217;re work-flow include putting important stuff in notepad, tough luck. Learn to use a better app instead.</p>

		
				</div>
		<ol class="children">
		<li class="comment even depth-3" id="comment-1290695">
				<div id="div-comment-1290695" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170329-00/?p=95855#comment-1290695">
			March 29, 2017 at 5:09 pm</a>		</div>

		<p>The newer apps (surprisingly) have worse accessibility than the older ones.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt depth-3" id="comment-1290725">
				<div id="div-comment-1290725" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Antonio Rodríguez</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170329-00/?p=95855#comment-1290725">
			March 29, 2017 at 7:37 pm</a>		</div>

		<p>You&#8217;d be surprised to know how many users rely on the close unsaved document to actually save their work. It&#8217;s a really bad idea (move the mouse a bit, and the pointer ends on &#8220;No&#8221; instead of &#8220;Yes&#8221;, losing your work), and I try to explain them why it&#8217;s a bad idea; but even then, they keep doing it.<br />
Force close all apps, and you&#8217;d destroy many people&#8217;s work, and get many angry headlines shouting &#8220;Microsoft removes the save function on Windows 11!&#8221;.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even depth-3" id="comment-1290735">
				<div id="div-comment-1290735" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Antonio Rodríguez</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170329-00/?p=95855#comment-1290735">
			March 29, 2017 at 7:46 pm</a>		</div>

		<p>Also, force-closing apps is what you get when features are dictated by technical writers in magazine and blogs which rely more in chronometer times for startup, shutdown and install, instead on real usability questions (which, admittedly, can&#8217;t be measured objectively): a newer version of Windows can&#8217;t be any good if it takes more to start up or install than the previous one, no matter what features it introduces.<br />
Actual users, on the other hand, don&#8217;t mind if they have to shut down their computers ten minutes before leaving work (in fact, that allows them to stop working ten minutes earlier!). And they don&#8217;t care at all about install times, because they never have, and never will, install Windows at their machines &#8211; computer stores or IT personnel do that for them.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt depth-3 parent" id="comment-1290745">
				<div id="div-comment-1290745" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Neil</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170329-00/?p=95855#comment-1290745">
			March 30, 2017 at 3:44 am</a>		</div>

		<p>I wish Windows 10 wouldn&#8217;t close all my InPrivate windows and install updates automatically. (I don&#8217;t know how big the time window to spot the new updates available notification is but I missed it last month&#8230;)</p>

		
				</div>
		<ol class="children">
		<li class="comment even depth-4" id="comment-1290755">
				<div id="div-comment-1290755" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Neil</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170329-00/?p=95855#comment-1290755">
			March 30, 2017 at 3:47 am</a>		</div>

		<p>Or maybe I&#8217;m just suffering from today&#8217;s XKCD: <a href="http://www.xkcd.com/1817/" rel="nofollow">http://www.xkcd.com/1817/</a></p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment odd alt depth-3" id="comment-1290995">
				<div id="div-comment-1290995" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">morlamweb</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170329-00/?p=95855#comment-1290995">
			March 31, 2017 at 7:16 am</a>		</div>

		<p>&#8220;Actually, instead I, and probably most people, &#8230;&#8221;.  Well, this right-thinking person would rather not have an overly aggressive shutdown, thanks.  I&#8217;d actually rather have a chance to save any unsaved data before the system shuts down.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment byuser comment-author-chd1 even depth-2" id="comment-1290935">
				<div id="div-comment-1290935" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/ChDF+T' rel='external nofollow' class='url'>ChDF T</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170329-00/?p=95855#comment-1290935">
			March 30, 2017 at 3:58 pm</a>		</div>

		<p>While this would be nice, it is not the simplest solution to this problem: When a user says &#8220;shutdown now&#8221; to the system (the &#8220;now&#8221; part is implicit, when they click the button), this guarantees you, that the user will not do anything with the document until he starts the computer again. That means, that it doesn&#8217;t matter if you ask them now or the next time they start your application. Ideally you already do the later in case the application exits unexpectedly (usually due to a crash), so that means no additional work &#8211; yay.<br />
This also moves the point of decision to a moment, where he has time to make an informed decision (because they see the document in question, can check timestamps in explorer, do whatever and are not in a hurry).</p>
<p>Implementing such a &#8220;do you want to save?&#8221; would also make &#8220;saving&#8221; special. What if my application would like to ask the user something else on shutdown? What if one application has more than one document with unsaved changes? What if saving is not possible anymore because something needed for saving (like some service, other process, physical medium) is already gone/terminated? Asking this kind of question using already existing APIs on the next application start makes things a lot easier.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment byuser comment-author-kwadwomi odd alt thread-even depth-1" id="comment-1290686">
				<div id="div-comment-1290686" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Master+Programmer' rel='external nofollow' class='url'>Master Programmer</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170329-00/?p=95855#comment-1290686">
			March 29, 2017 at 4:50 pm</a>		</div>

		<p>I find the Vista and later fullscreen shutdown UI frustrating and usually disable it through group policy. I agree the previous policy where apps (even hidden) could prevent shutdown was frustrating but at least it allowed you to save your doc in notepad or whatever else you didn&#8217;t have saved. Now with the fullscreen shutdown UI, you&#8217;re told notepad is not responding but only have the choice of canceling shutdown or losing your data. Not very good choices.</p>
<p>If MS really wants to developers to move to the autosave model they would lead the way with the builtin apps like notepad and paint.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-odd thread-alt depth-1" id="comment-1290835">
				<div id="div-comment-1290835" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Adrian</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170329-00/?p=95855#comment-1290835">
			March 30, 2017 at 9:10 am</a>		</div>

		<p>It would be cool to have a tool that simulates the various shutdown scenarios so that you can test how your apps responds without, you know, actually ending your session.  The tool would send the victim app the WM_QUERYENDSESSION and WM_ENDSESSION messages with all the right parameters (in the same way the system would in a real shutdown) and then kill the app&#8217;s process immediately after returning from WM_ENDSESSION.  Then restart the app and check your data recovery procedure.</p>
<p>Yep.  Sounds useful.  I think I&#8217;ll go write that.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-even depth-1" id="comment-1291065">
				<div id="div-comment-1291065" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Adrian</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170329-00/?p=95855#comment-1291065">
			April 1, 2017 at 7:02 am</a>		</div>

		<p>What&#8217;s never been clear to me is what happens if the system is being shut down while the application is in a modal loop.</p>
<p>I assume a top level window can receive WM_QUERYENDSESSION and WM_ENDSESSION while disabled, but what if the modal message loop is filtering messages and dispatching only to an owned window?  I know these messages are &#8220;sent,&#8221; but they&#8217;re sent cross-process, which I assume relies on the receiver pumping messages to the target window.</p>
<p>Perhaps that&#8217;s rare.  The standard dialog loop doesn&#8217;t filter messages as far as I can tell, nor does the move/resize loop.</p>
<p>But apps often rely on the assumption that modality is a rock-solid guarantee that nothing interesting will happen to the top level window.  I can imagine all sorts of problems where an app deadlocks trying to do an emergency save of the document while in some modal state.  I guess it&#8217;s the responsibility of the app to that no modal dialog or other model state could interfere with the ability to do an emergency save.  That sounds hard to test.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-odd thread-alt depth-1" id="comment-1291416">
				<div id="div-comment-1291416" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Andrei</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170329-00/?p=95855#comment-1291416">
			April 5, 2017 at 1:37 am</a>		</div>

		<p>I&#8217;m wondering why Word 2016 is not doing like this. I clicked on Shut Down and left the PC, only to return in the morning to a PC hung in Word&#8217;s &#8220;There are unsaved files&#8221; or similar message.</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

