<html>
<head>
<title>Wrapping some other scripting language inside a batch file</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>Wrapping some other scripting language inside a batch file</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>August 4, 2017 / year-entry #177</td></tr>
<tr><td><b>Tags:</b></td><td>code</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20170804-00/?p=96765</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>33</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">Polyglot to the rescue.</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>
Nobody actually enjoys batch programming,
but sometimes you can get away with writing in a language
you like better while retaining the <code>.cmd</code> extension.
Still, that leaves you having to get the extension for that
language registered on your target machines,
which can be tricky for xcopy-style deployment scenarios.
The solution then is to use a
<a HREF="http://en.wikipedia.org/wiki/Polyglot_(computing)">
polyglot</a>
header that is valid both as a batch file and in your target
language.
The header re-invokes the target language interpreter
with the batch file itself as input.
</p>
<p>
<b>Note</b>: That this trick isn't necessary if you can associate
the file extension with the scripting engine.
So you don't need to do this polyglot nonsense with,
say, PowerShell scripts, because the <code>.ps1</code>
extension is already associated with <code>powershell.exe</code>
(<a HREF="http://images.wikia.com/en.futurama/images/9/98/Love%27sLaboursLostinSpacets.png">where available</a>).
</p>
<p>
The general shape of a polyglot header is
</p>
<pre>
@rem prefix stuff
@&lang;<i>interpreter</i>&rang;.exe &lang;<i>interpreter options</i>&rang; "%~f0" %*
@goto :eof
&lang;<i>suffix stuff</i>&rang;
&lang;<i>the script itself</i>&rang;
&lang;<i>trail stuff</i>&rang;
</pre>
<p>
Prefixing each line with an at-sign prevents it from being echoed.
The first line is a comment, which lets you stick arbitrary goop
in front, in order to swallow up the <code>@rem</code>
and make the rest of the header invisible to the interpreter.
</p>
<p>
The <code>"%~f0" %*</code> sequence looks like line noise,
but it's actually a batch file idiom for
"A quoted, fully-qualified path to the batch file,
followed by the original arguments."
The <code>%~f0</code> part
uses the
<a HREF="http://www.microsoft.com/resources/documentation/windows/xp/all/proddocs/en-us/percent.mspx">
tilde operator</a>
to build up a full path to the <code>%0</code> (which is the
batch file itself).
And <code>%*</code> is a batch variable that expands to the
arguments passed to the batch file.
</p>
<p>
Anything after the <code>@goto :eof</code> is ignored by the
batch interpreter,
so you can add language-specific suffix stuff to finish up the
"start ignoring this" goop you set up on the first line.
</p>
<p>
Finally, in rare cases, you might need to add trail stuff at the end
of the script to balance out anything you set up in the header,
like closing an open set of braces.
This is rare because you usually close them up in the
&lang;suffix stuff&rang; part.
</p>
<p>
Okay, now that we see the general shape of a polyglot header,
let's look at some examples.
</p>
<p><b>Perl</b>
</p>
<pre>
@rem --*-Perl-*--
@perl.exe -x "%~f0" %*
goto :eof
#!perl
&lang;perl script&rang;
</pre>
<p>
This isn't a proper polyglot because we're running perl
in a special mode which is not the default (<code>-x</code>).
But hey,
we're trying to get things done, not solve some theoretical puzzle,
so running perl in a special mode is just fine if it gets the job done.
</p>
<p>
Note that if you want other special command line options to be passed
to perl, you can sneak them in with the <code>-x</code>.
For example, you might ask for <code>-Sx</code> to get poor-man's
command line switch auto-parsing.
</p>
<p>
The leading comment <code>--*-Perl-*--</code> is not used by either
perl or the command processor.
It's there by tradition,
so that when emacs users load the script into the editor,
<a HREF="http://www.gnu.org/software/emacs/manual/html_node/emacs/Choosing-Modes.html#Choosing-Modes">
it will be detected as a perl script</a>,
and perl-specific editing commands will be enabled.
</p>
<p>
<b>JavaScript</b>
</p>
<pre>
@if (1 == 0) @end /*
@cscript.exe /E:jscript /nologo "%~f0" %*
goto :eof
*/
&lang;<i>JScript script</i>&rang;
</pre>
<p>
Instead of using <code>@rem</code>,
the JScript polyglot header uses an <code>@if</code> conditional
that is never true.
This was chosen so that the opening syntax of the file matches
that of
<a HREF="http://msdn.microsoft.com/en-us/library/7kx09ct1(v=VS.80).aspx">
JScript conditional compilation</code></a>,
and the entire header gets gobbled up as
a false conditional followed by a big comment.
Note that JScript conditional compilation is a Microsoft extension,
but since <code>cscript</code> runs the Microsoft JScript engine
when you specify <code>/e:jscript</code>,
it's okay to use it anyway.
</p>
<p>
<b>Bonus chatter</b>:
Sometimes I miss the
<a HREF="http://www.jrttest.com/Help/Os2Bat.Html#EXTPROC">
<code>EXTPROC</code> directive</a></a>
from
OS/2's command interpreter,
then I realize that it really only solves half of the problem
(getting the command interpreter to hand control to another
scripting engine),
and doesn't solve the other half
(getting the scripting engine to ignore the start of the batch file).
The additional restriction that <code>EXTPROC</code> appear on the
first line of the batch file makes it harder to work the first line
into valid code in your target language.
</p>
<p>
<b>Bonus chatter 2</b>:
JScript is probably the most convenient alternative scripting
language because, while it may be
<a HREF="http://javascript.crockford.com/javascript.html">
the world's most misunderstood programming language</a>,
it's nevertheless immeasurably better than batch.
And it has come preinstalled since Windows&nbsp;2000,
so your script will work on pretty much any Windows computer of
modern interest.
The downside is that the version of JScript used by
<code>cscript</code>
<a HREF="https://msdn.microsoft.com/library/2z6exc9e(v=vs.100).aspx">
is ancient</a>.
</p>
<p>
PowerShell is very nice, but it wasn't standard-issue until
Windows&nbsp;7.
With the
<a HREF="https://support.microsoft.com/en-us/help/22882/windows-vista-end-of-support">
retirement of Windows Vista</a>,
we are finally in a situation where all supported versions of
Windows come with PowerShell.
It took eight years, but we made it.
(Note that you can't run PowerShell scripts by default.
You have to go in and
<a HREF="http://technet.microsoft.com/en-us/library/ee176949.aspx">
change an administrative setting first</a>.)
</p>
<p>
So maybe, if you're lucky, you may be able to declare the end of
the era of suffering with batch files.
I can more confidently say that the suffering of
Batch File Week is now over,
at least for now.
</p>
<p>
<b>Bonus content</b>:
Here'a Web page which demonstrates various
<a HREF="http://www.dostips.com/DtTipsStringManipulation.php">
batch file string manipulation</a>
operations.</p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (33)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-1305195">
				<div id="div-comment-1305195" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Bartosz Dziewo≈Ñski</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170804-00/?p=96765#comment-1305195">
			August 4, 2017 at 7:29 am</a>		</div>

		<p>Fascinating and terrible.</p>
<p>For science, I threw together a Ruby version. The `@rem = &#8216;&#8230;&#8217;` sets an instance variable called &#8216;rem&#8217;, conveniently gobbling up the polyglot header.</p>
<p>@rem = &#8216;<br />
@ruby.exe &#8220;%~f0&#8221; %*<br />
@goto :eof<br />
&#8216;<br />
puts &#8216;Hello from Ruby!&#8217;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1305205">
				<div id="div-comment-1305205" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Peter Doubleday</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170804-00/?p=96765#comment-1305205">
			August 4, 2017 at 7:33 am</a>		</div>

		<p>Finishing the week on a high note!</p>
<p>I genuinely didn&#8217;t realise that batch files have an equivalent mechanism for the *nix shebang.  And although I suspect the general reaction to &#8220;it has an <b>emacs</b> mode hint&#8221; would either be total indifference, or a demand for the same thing in <b>vim</b> &#8230; it works for me.</p>
<p>Thanks for a very entertaining week.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1305206">
				<div id="div-comment-1305206" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">George Byrkit</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170804-00/?p=96765#comment-1305206">
			August 4, 2017 at 7:44 am</a>		</div>

		<p>Looks like the &#8216;change an administrative setting first&#8217; webpage regarding PowerShell has been deprecated.  Nothing there except a suggested link to the &#8216;new&#8217; documentation.  A lot of the content has been removed and/or reorganized, with a number of auto-redirects, and no obvious description of the setting that needs to be changed.  Or else I&#8217;m missing something&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1305216">
				<div id="div-comment-1305216" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://www.rahul.tech/' rel='external nofollow' class='url'>rahuldottech</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170804-00/?p=96765#comment-1305216">
			August 4, 2017 at 7:46 am</a>		</div>

		<p>Uhm. I think I might just be the only human who actually <i>enjoys</i> scripting in Batch. I&#8217;ve always found it challenging and fun :P</p>
<p>While this is certainly very cool (and who actually liked Vista anyway?), I&#8217;m always going to remember all those days spent in the school computer lab, trying to get huge complicated scripts to work. I&#8217;m 16 years old and batch was one of the first languages that I started with, so it has a special place in my heart.</p>
<p>I&#8217;ve done stupid stuff like made a renderfarm, a <a href="https://github.com/rahuldottech/percent-decoder" rel="nofollow">percent-encoded data decoder</a>, an <a href="https://github.com/rahuldottech/netcat-http-server-for-windows" rel="nofollow">HTTP server</a>, and a <a href="https://github.com/rahuldottech/UPDATRR" rel="nofollow">remote command deployment system</a></p>
<p>Also, <a / rel="nofollow">this</a> WiFi Rickrolling system is something that I&#8217;m extremely proud of.</p>
<p>Yeah, you&#8217;re not going be the first one to call me a monster. But honestly, getting stuff done in batch gives me a weird sense of satisfaction.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1 parent" id="comment-1305235">
				<div id="div-comment-1305235" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">pc</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170804-00/?p=96765#comment-1305235">
			August 4, 2017 at 8:07 am</a>		</div>

		<p>Why would you need to do a batch-polyglot for JScript? Doesn&#8217;t .js default to running it with cscript or wscript? Is this in case you need it to use one or the other?</p>
<p>While these are pretty nifty tricks, I&#8217;m trying to imagine &#8220;xcopy-style deployment scenarios&#8221; where you were limited to one file. Even for most the most limited deployment scenarios, having one file in your actual language and then a separate batch file to run it with your desired arguments and switches and environment and such would work fine, right? What am I missing?</p>

		
				</div>
		<ol class="children">
		<li class="comment odd alt depth-2" id="comment-1305285">
				<div id="div-comment-1305285" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Rick C</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170804-00/?p=96765#comment-1305285">
			August 4, 2017 at 9:15 am</a>		</div>

		<p>This is for some case where you need to run your script as a .cmd, perhaps because the script is started off by something you can&#8217;t change.  You can rewrite the script (in this example) in Perl or JS, but still fire it off as if it were a batch job.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-oldnewthing bypostauthor even depth-2" id="comment-1305376">
				<div id="div-comment-1305376" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Raymond+Chen+-+MSFT' rel='external nofollow' class='url'>Raymond Chen - MSFT</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170804-00/?p=96765#comment-1305376">
			August 4, 2017 at 5:05 pm</a>		</div>

		<p>.js files default to wscript, but if you&#8217;re running it from the command prompt, you probably want cscript.</p>
<p>And the single-file scenario is the &#8220;Copy this script to your machine and run it and send me the output.&#8221; As opposed to &#8220;Copy these two files to your machine, make sure they are in the same directory, and run the first file, not the second one.&#8221;</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1 parent" id="comment-1305236">
				<div id="div-comment-1305236" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Pierre B.</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170804-00/?p=96765#comment-1305236">
			August 4, 2017 at 8:19 am</a>		</div>

		<p>&#8220;Nobody actually enjoys batch programming, but sometimes you can get away with writing in a language you like better while retaining the .cmd extension. Still, that leaves you having to get the extension for that language registered on your target machines, which can be tricky for xcopy-style deployment scenarios.&#8221;</p>
<p>I don&#8217;t understand how you do that and some search on the web did not come up with anything of value.</p>
<p>What do you need to register where to get a script in another language while retain the .cmd extension?</p>
<p>(The only alternative I see is that the quoted sentences are actually independent of each other even though they sound related the way they&#8217;re written?)</p>

		
				</div>
		<ol class="children">
		<li class="comment even depth-2" id="comment-1305255">
				<div id="div-comment-1305255" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">pc</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170804-00/?p=96765#comment-1305255">
			August 4, 2017 at 8:37 am</a>		</div>

		<p>The point is that you don&#8217;t need to register a separate extension, you can leave your file as a .cmd file, which Windows will run as a batch file, and when interpreted as a batch file it runs the interpreter of the language you actually want, which loads up that same file in that language.</p>
<p>Which is a neat trick, and you can find on the web impressive polyglots where one file does something meaningful in a bazillion languages. Raymond here is trying to describe why such a thing may be practically useful in some particular circumstances.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt depth-2" id="comment-1305275">
				<div id="div-comment-1305275" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Antonio Rodr√≠guez</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170804-00/?p=96765#comment-1305275">
			August 4, 2017 at 8:50 am</a>		</div>

		<p>What Raymond is talking about is registering extensions for *other* script languages. For example, you can copy-deploy Perl by copying perl.exe to System32 (or anywhere within the path). But if you want be able to run (&#8220;open&#8221;) *.pl files with Perl, you have to register the .pl extension and associate it with perl.exe.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1 parent" id="comment-1305265">
				<div id="div-comment-1305265" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Stuart</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170804-00/?p=96765#comment-1305265">
			August 4, 2017 at 8:49 am</a>		</div>

		<p>So does that mean that in future we&#8217;ll get a PowerShell Week instead of Batch File Week? Or would that get folded into CLR Week?</p>

		
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-oldnewthing bypostauthor odd alt depth-2" id="comment-1305326">
				<div id="div-comment-1305326" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Raymond+Chen+-+MSFT' rel='external nofollow' class='url'>Raymond Chen - MSFT</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170804-00/?p=96765#comment-1305326">
			August 4, 2017 at 10:23 am</a>		</div>

		<p>I don&#8217;t know enough about PowerShell to write intelligently about it. I look forward to somebody else&#8217;s PowerShell week.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment even thread-odd thread-alt depth-1 parent" id="comment-1305295">
				<div id="div-comment-1305295" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Antonio Rodr√≠guez</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170804-00/?p=96765#comment-1305295">
			August 4, 2017 at 9:22 am</a>		</div>

		<p>Instead of using a polyglot header, I&#8217;d prefer to split the alternate language section into its own file with its correct file extension (what an idea!) and just use a simple batch file to call it. For example, if I wanted to use Python, I&#8217;d put all the Python code in a file called script.py, and would create a script.bat file with this single line:</p>
<p>@python &#8220;%~d0%~p0%~n0.py&#8221; %*</p>
<p>Advantages: leaving the Python section in its own file with the correct extension, and using a generic file to bootstrap any Python script (which can then be used as a template). Disadvantages: it uses two files instead of one, and the string of tilde operators (drive-path-filename without extension-.py extension) could be posted to the yearly Obfuscated C Contest if it were valid C O:-) . But, hey, I don&#8217;t think there would be much need to debug this, right? Right? (Famous last words&#8230;).</p>

		
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-ramon-sola odd alt depth-2 parent" id="comment-1305296">
				<div id="div-comment-1305296" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Ram%C3%B3n+Sola' rel='external nofollow' class='url'>Ram√≥n Sola</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170804-00/?p=96765#comment-1305296">
			August 4, 2017 at 9:30 am</a>		</div>

		<p>&#8220;%~dpn0.py&#8221; is shorter and cleaner, and I think it achieves the same result.</p>

		
				</div>
		<ol class="children">
		<li class="comment even depth-3" id="comment-1305366">
				<div id="div-comment-1305366" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Antonio Rodr√≠guez</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170804-00/?p=96765#comment-1305366">
			August 4, 2017 at 4:24 pm</a>		</div>

		<p>Right. It is documented, and works both in Windows XP and Windows 7. It is also shorter than my solution, but not more readable. So it is equal or better in any respect :-) . Thanks.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment odd alt depth-2 parent" id="comment-1305345">
				<div id="div-comment-1305345" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">ErikF</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170804-00/?p=96765#comment-1305345">
			August 4, 2017 at 11:31 am</a>		</div>

		<p>But with Raymond&#8217;s method, you only need to copy/download one file. That&#8217;s an awfully useful feature for a bootstrapping script.</p>

		
				</div>
		<ol class="children">
		<li class="comment even depth-3 parent" id="comment-1305356">
				<div id="div-comment-1305356" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Antonio Rodr√≠guez</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170804-00/?p=96765#comment-1305356">
			August 4, 2017 at 4:13 pm</a>		</div>

		<p>Remember that you are writing code in a foreign script language. Even in the case of Raymond&#8217;s method, you need to copy also the language interpreter (for example, phyton.exe) and the required libraries/extensions.</p>
<p>The exception is JScript. But, as somebody else mentioned, every Windows version which includes JScript also comes with the relevant file associations, so you can run a .js script directly, without polyglot headers or launcher scripts.</p>

		
				</div>
		<ol class="children">
		<li class="comment odd alt depth-4 parent" id="comment-1305466">
				<div id="div-comment-1305466" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Andrew Cook</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170804-00/?p=96765#comment-1305466">
			August 7, 2017 at 5:46 am</a>		</div>

		<p>You&#8217;re not limited to the shebang line here; you can add other commands in Batch before the call to your interpreter of choice. Including using BitsAdmin or FTP to download the interpreter, or NET USE at a WebDAV server and let Windows handle downloads for you.</p>

		
				</div>
		<ol class="children">
		<li class="comment even depth-5" id="comment-1305565">
				<div id="div-comment-1305565" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ben Voigt</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170804-00/?p=96765#comment-1305565">
			August 7, 2017 at 8:59 am</a>		</div>

		<p>Naturally, those tricks also work for fetching a separated script file.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment odd alt thread-even depth-1" id="comment-1305335">
				<div id="div-comment-1305335" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">DWalker07</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170804-00/?p=96765#comment-1305335">
			August 4, 2017 at 10:45 am</a>		</div>

		<p>Ah, so &#8220;prefix stuff&#8221; in the template means &#8220;an indicator for the programming language or interpreter of choice to start ignoring stuff&#8221;.  It took me a while to get that.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-odd thread-alt depth-1" id="comment-1305355">
				<div id="div-comment-1305355" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">James</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170804-00/?p=96765#comment-1305355">
			August 4, 2017 at 2:16 pm</a>		</div>

		<p>The normal Python interpreter also has a `-x` command-line option for this, but it skips only a single line of the file, so you have to jam everything into one line:</p>
<p>python.exe -x &#8220;%~f0&#8221; %* &amp; goto :EOF</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-alegrigoriev odd alt thread-even depth-1" id="comment-1305386">
				<div id="div-comment-1305386" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/alegr1' rel='external nofollow' class='url'>alegr1</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170804-00/?p=96765#comment-1305386">
			August 4, 2017 at 7:08 pm</a>		</div>

		<p>:# This file contains BASH and CMD scripts<br />
:&lt;&lt;&quot;::CMDLITERAL&quot;<br />
@echo off<br />
goto :batch_file<br />
::CMDLITERAL</p>
<p>echo Bash invoked!</p>
<p>exit 0</p>
<p>:batch_file<br />
echo CMD invoked</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-odd thread-alt depth-1 parent" id="comment-1305395">
				<div id="div-comment-1305395" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">voo</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170804-00/?p=96765#comment-1305395">
			August 5, 2017 at 3:11 am</a>		</div>

		<p>&#8220;Note that you can&#8217;t run PowerShell scripts by default. You have to go in and change an administrative setting first.&#8221;<br />
Indeed, rather annoying and not really a security feature since you can just write a batch script that evokes the PowerShell script and tell it to ignore the execution policy. </p>
<p>Basically just a simple batch file that contains:<br />
powershell.exe -NoProfile -ExecutionPolicy Bypass  -file realScript.ps1 %*</p>
<p>Which is how Microsoft itself ships a lot of scripts these days (e.g. the TFS build agent start script). But now I have to see how to create a Polyglot PowerShell script &#8211; I&#8217;m sure there are already solutions for this on the web but it seems like a fun challenge!</p>

		
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-jernej-ms-live odd alt depth-2" id="comment-1305715">
				<div id="div-comment-1305715" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/ender9' rel='external nofollow' class='url'>ender9</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170804-00/?p=96765#comment-1305715">
			August 8, 2017 at 2:42 am</a>		</div>

		<p>&gt; But now I have to see how to create a Polyglot PowerShell script</p>
<p>Not easy, because PowerShell refuses to run scripts that don&#8217;t end in .ps1 extension.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1 parent" id="comment-1305397">
				<div id="div-comment-1305397" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">mihailik</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170804-00/?p=96765#comment-1305397">
			August 5, 2017 at 5:36 am</a>		</div>

		<p>I present to you THE DANGEROUS CLUBMAN<br />
&#8212; because of its leading character</p>
<p>0&lt;/* :<br />
@cscript/nologo /E:jscript %~f0 %*&amp;@goto:EOF&amp;:*/0</p>

		
				</div>
		<ol class="children">
		<li class="comment odd alt depth-2" id="comment-1305425">
				<div id="div-comment-1305425" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">laonianren</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170804-00/?p=96765#comment-1305425">
			August 6, 2017 at 9:48 am</a>		</div>

		<p>Bravo!</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment even thread-odd thread-alt depth-1" id="comment-1305406">
				<div id="div-comment-1305406" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Marvy</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170804-00/?p=96765#comment-1305406">
			August 5, 2017 at 10:14 am</a>		</div>

		<p>At first I was thinking &#8220;there is no hope of this parsing correctly in any sane language&#8221;.</p>
<p>Then I saw your Perl version, and I thought &#8220;fine, but that&#8217;s cheating, the -x is specially designed for such things, but most languages don&#8217;t have an equivalent&#8221;.</p>
<p>Then I saw JScript, and I thought &#8220;fine, but you got lucky there that the @ character does what you want in both cases&#8221;.</p>
<p>Then I saw Ruby in the comments and I thought &#8220;this is getting crazy, but you can&#8217;t keep getting lucky forever; I bet no one will manage to get it to work for Python&#8221;.</p>
<p>Then I kept reading the comments and saw someone got it to work for Python.  Maybe this is more versatile than I thought.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-even depth-1" id="comment-1305455">
				<div id="div-comment-1305455" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Neil</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170804-00/?p=96765#comment-1305455">
			August 7, 2017 at 2:06 am</a>		</div>

		<p>I use the `for` command for case-sensitive key-value lookup, something like this:</p>
<p>for %%a in (Tue.s Wed.nes Thu.rs Sat.ur) do if %v%==%%na set v=%v%%%xa<br />
echo %v:.=%day</p>
<p>(less readably you can switch the name and extension and add the . to the comparison instead to avoid having to remove it from the result)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-martin-baschnegger even thread-odd thread-alt depth-1" id="comment-1305705">
				<div id="div-comment-1305705" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Martin+Ba.+_' rel='external nofollow' class='url'>Martin Ba. _</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170804-00/?p=96765#comment-1305705">
			August 8, 2017 at 2:29 am</a>		</div>

		<p>&#8220;So maybe, if you&#8217;re lucky, you may be able to declare the end of the era of suffering with batch files.&#8221; &#8211; if only Powershell wasn&#8217;t such a POOR replacement for batch files. PS is a nice shell+scripting environment. But man, the way it interfaces with the outside world (that is, executables and othe scripts or batch files) is so arcane, I&#8217;d rather write batch files half the time.</p>
<p>IMHO, MS has managed to replace batch hell with PS hell. You decide where you&#8217;d rather be.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-even depth-1 parent" id="comment-1306155">
				<div id="div-comment-1306155" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Stefan Kanthak</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170804-00/?p=96765#comment-1306155">
			August 11, 2017 at 7:52 am</a>		</div>

		<p>Why don&#8217;t you use the more appropriate &#8220;exit /b&#8221; instead of &#8220;goto :eof&#8221; to exit the batch script?</p>

		
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-oldnewthing bypostauthor even depth-2 parent" id="comment-1306225">
				<div id="div-comment-1306225" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Raymond+Chen+-+MSFT' rel='external nofollow' class='url'>Raymond Chen - MSFT</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170804-00/?p=96765#comment-1306225">
			August 11, 2017 at 12:47 pm</a>		</div>

		<p>Habit.</p>

		
				</div>
		<ol class="children">
		<li class="comment odd alt depth-3" id="comment-1306286">
				<div id="div-comment-1306286" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Erkin Alp G√ºney</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170804-00/?p=96765#comment-1306286">
			August 12, 2017 at 5:42 am</a>		</div>

		<p>He might have forgotten he asked to the Microsoft&#8217;s backward compatibility specialist.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment even thread-odd thread-alt depth-1" id="comment-1306285">
				<div id="div-comment-1306285" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Erkin Alp G√ºney</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170804-00/?p=96765#comment-1306285">
			August 12, 2017 at 5:41 am</a>		</div>

		<p>WSL would make this more complicated.</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

