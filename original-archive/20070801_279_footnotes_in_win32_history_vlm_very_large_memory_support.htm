<html>
<head>
<title>Footnotes in Win32 history: VLM (Very Large Memory) support</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>Footnotes in Win32 history: VLM (Very Large Memory) support</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>August 1, 2007 / year-entry #280</td></tr>
<tr><td><b>Tags:</b></td><td>history</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20070801-00/?p=25763</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>37</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">A long-forgotten footnote in Win32 history is the set of functions known as "VLM" for "Very large Memory". To understand VLM, you first need to understand the Alpha AXP. The Alpha AXP was a wonderful architecture and I was sad to see it go. Partly because it meant that the years I spent learning the...</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>A long-forgotten footnote in Win32 history is the set of functions known as "VLM" for "Very large Memory". To understand VLM, you first need to understand the Alpha AXP.</p>
<p> The Alpha AXP was a wonderful architecture and I was sad to see it go. Partly because it meant that the years I spent learning the ins and outs of the processor were now just wasted space in my brain, good only for muttering incoherently during meetings and blog entries. Hang on a second... </p>
<p> The Alpha AXP was a 64-bit processor. None of this "64-bit mode" versus "32-bit mode" that we have with the AMD64 and EM64T (and early versions of the Itanium). It was 64-bit all the time. Now, the instruction set did provide a few arithmetic instructions which operated on 32-bit values, but the results were always sign-extended back up to 64 bits. This one concession to 32-bit code meant that you could run code that was conceptually 32-bit on this 64-bit CPU: All the operating system has to do is treat the 32-bit addresses 0x00000000 through 0x7FFFFFFF as 64-bit addresses 0x00000000`00000000 through 0x00000000`7FFFFFFF, and treat 32-bit addresses 0x80000000 through 0xFFFFFFFF as 64-bit addresses 0xFFFFFFFF`80000000 through 0xFFFFFFFF`FFFFFFFF, The processor's natural sign extension did the rest. </p>
<p> (And now you can see another reason why there is a no-man's land around the 2GB boundary. If objects were allowed to cross the 2GB boundary, they would end up being split up when converted to the Alpha AXP's 64-bit address space.) </p>
<p> This is sort of analogous to running 16-bit Windows programs on an 80386 processor. Your 16-bit program could still use those 32-bit registers if it only knew they were there. </p>
<p> This clever design of the Alpha AXP meant that you could read through quite a bit of Alpha AXP assembly language without being able to tell whether the code was designed as 32-bit or 64-bit code since it all looked the same. The only giveaway would be when the code loaded a pointer from memory. </p>
<p> Anyway, back to VLM. Windows&nbsp;NT on an Alpha AXP was a 32-bit operating system on a 64-bit processor. The 32-bit address space was only a tiny fraction of the full 64-bit address space available to the processor. And VLM gave you access to that space that would otherwise go wasted. </p>
<p> You allocated memory in the 64-bit address space with functions like <code>VirtualAllocVlm</code>. All of the VLM functions operated on 64-bit pointers (called <code>PVOID64</code>). Allocating memory via VLM returned you a <code>PVOID64</code>, a 64-bit pointer to the memory, and your program had to use these 64-bit pointers to access the memory. And like its successor AWE, VLM allocated non-paged memory. </p>
<p> In addition to allocating memory, there were special functions for memory-mapping a file into the 64-bit address space and performing disk I/O into and out of these 64-bit addresses. But that's about it. The rest of Win32 still used 32-bit pointers, so you couldn't pass these 64-bit addresses to functions like <code>lstrcmpi</code>. You were given the raw materials for allocating memory in the 64-bit address space and the rest was up to you. </p>
<p> These functions were designed for high-end database programs which required enormous quantities of memory and (more importantly) address space. The memory wasn't pageable because high-end database programs invariably perform their own highly specialized memory management, and paging just gets in the way. </p>
<p> With the death of the Alpha AXP also came the death of VLM, since the Alpha AXP was the only architecture that supported 64-bit addresses in 32-bit code. </p>
<p> This model of programming is not dead, however. It was seen in Windows&nbsp;3.1 with the <code>WINMEM32</code> library (which even let you create 32-bit code segments!), and a more restricted version of it lives on in AWE. </p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (37)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-532323">
				<div id="div-comment-532323" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Tim Smith</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070801-00/?p=25763#comment-532323">
			August 1, 2007 at 10:06 am</a>		</div>

		<p>Ah, the good old days. &nbsp;Many years ago even before Alpha VMS was released, I was tasked with converting our SCADA system from VAX/VMS to the Alpha. &nbsp;This included some assembly and even some system level code. &nbsp;I think I used a pre-release DEC 5100. &nbsp;Compiled very fast but the link times where horrible.</p>
<p>I really enjoyed that processor. &nbsp;Dealing with the 32bit to 64bit and back conversions were a LOT simpler than people might think. &nbsp;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-532333">
				<div id="div-comment-532333" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Pete</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070801-00/?p=25763#comment-532333">
			August 1, 2007 at 10:11 am</a>		</div>

		<p>Awesome post, Raymond. &nbsp;Thanks. &nbsp;:)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-532343">
				<div id="div-comment-532343" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">vince</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070801-00/?p=25763#comment-532343">
			August 1, 2007 at 10:32 am</a>		</div>

		<p>and despite the death of Alpha, at least 1/3 of academic papers in computer architecture still use a really old version of an Alpha simulator for their research. &nbsp;Another 1/3 use MIPS. &nbsp;It makes you wonder.</p>
<p>If you still have any old Alpha hardware kicking around you can run modern versions of Linux on it. &nbsp;I have an Alpha around running the newest version of debian-unstable. &nbsp;Fully 64 bits too, none of this &quot;32 bit OS on a 64-bit architecture&quot; nonsense.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-532383">
				<div id="div-comment-532383" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Wang-Lo</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070801-00/?p=25763#comment-532383">
			August 1, 2007 at 11:23 am</a>		</div>

		<p>&quot;at least 1/3 of academic papers in computer architecture still use a really old version of an Alpha simulator&quot;</p>
<p>Probably for the same reasons that medieval scholars of sundry native tongues communicated in Latin.</p>
<p>(.) &nbsp;Both are fully specified and accessable to serious students.</p>
<p>(.) &nbsp;Neither is in living, daily use, so there are no natural forces operating to evolve them.</p>
<p>(.) &nbsp;Both arose from powerful traditions, developed by races famous for practicality.</p>
<p>(.) &nbsp;Both are robust, rich, complete, and tested by extensive use.</p>
<p>(.) &nbsp;Both possess a certain austere beauty for those who can appreciate such things.</p>
<p>Of course, the analogy must fail at some point. &nbsp;For example, middle school pupils are not commonly tortured with irregular Alpha noun declensions.</p>
<p>-Wang-Lo.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-532403">
				<div id="div-comment-532403" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">oliver</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070801-00/?p=25763#comment-532403">
			August 1, 2007 at 11:50 am</a>		</div>

		<p>As I&#8217;m not that familiar with 64-bit architectures and related things, I&#8217;m wondering why the AXP doesn&#8217;t map 32-bit space completely to 0x00000000<code>00000000 through 0x00000000</code>FFFFFFFF ? Anyone can explain that to me?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-532413">
				<div id="div-comment-532413" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">mirobin</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070801-00/?p=25763#comment-532413">
			August 1, 2007 at 12:08 pm</a>		</div>

		<p>It was already explained:</p>
<p>&quot;Now, the instruction set did provide a few arithmetic instructions which operated on 32-bit values, but the results were always sign-extended back up to 64 bits&quot;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-532423">
				<div id="div-comment-532423" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Tim</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070801-00/?p=25763#comment-532423">
			August 1, 2007 at 12:44 pm</a>		</div>

		<p>Raymond, I&#8217;m so proud of you! You made it through an entire technical post without kowtowing to the nitpickers.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-532433">
				<div id="div-comment-532433" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">David Walker</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070801-00/?p=25763#comment-532433">
			August 1, 2007 at 1:01 pm</a>		</div>

		<p>Interesting post, thanks Raymond!</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-532473">
				<div id="div-comment-532473" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Gabe</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070801-00/?p=25763#comment-532473">
			August 1, 2007 at 5:31 pm</a>		</div>

		<p>Does anybody know of an app that used VLM (besides SQL Server or Oracle)?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-532493">
				<div id="div-comment-532493" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://sixyears.wordpress.com' rel='external nofollow' class='url'>IV</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070801-00/?p=25763#comment-532493">
			August 1, 2007 at 7:01 pm</a>		</div>

		<p>Great post Raymond.</p>
<p>What a coincidence, I was just looking back at some alpha papers. I remember extending Excel on Alpha having some problems with parameters on the stack, it was a beast on net I/O too.. Heck was it Citrix that ran on it too so some serious precursor to terminal services must have been developed too.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-532503">
				<div id="div-comment-532503" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">IV</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070801-00/?p=25763#comment-532503">
			August 1, 2007 at 7:07 pm</a>		</div>

		<p>And those VLM extensions now the total flashback occured, back then I was under impression those were meant for other architectures not only alpha. Despite it being immediatelly usable I guess and those boxes looked mean (both 300Mhz and 500Mhz version), they had some serious backplanes, some weird silver alien s*t inside :-), I am interested whether Itanium was around at that time (1998?)?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-532523">
				<div id="div-comment-532523" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Jalf</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070801-00/?p=25763#comment-532523">
			August 1, 2007 at 7:33 pm</a>		</div>

		<p>Mmm, alpha&#8230;</p>
<p>We coded our kernel on alphas in our OS class at Comp. science. Good times. :)</p>
<p>Very nice architecture indeed.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-532543">
				<div id="div-comment-532543" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Jonathan Wilson</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070801-00/?p=25763#comment-532543">
			August 1, 2007 at 8:45 pm</a>		</div>

		<p>Itanium wasnt around at that time, IIRC it is a loose descendant of Alpha created after DEC disappeared and Intel ended up with some of DEC&#8217;s processor IP.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-532463">
				<div id="div-comment-532463" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">KJK::Hyperion</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070801-00/?p=25763#comment-532463">
			August 1, 2007 at 5:21 pm</a>		</div>

		<p>I studied Alpha AXP a little, a long time ago. I remember being impressed by the clean architecture, fixed-width instructions, integrated FPU (hey, I&#8217;m a PC man), and especially the fact it had exactly *one* privileged opcode (call_pal, which would call into the firmware, itself written in PALcode, a privileged form of AXP binary code) &#8211; this makes the AXP almost trivial to virtualize/emulate. It should not come as a surprise that so much innovative academic work, e.g. binary-to-binary compilers, was based on the AXP</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-532483">
				<div id="div-comment-532483" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://deadnode.org/' rel='external nofollow' class='url'>James</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070801-00/?p=25763#comment-532483">
			August 1, 2007 at 5:38 pm</a>		</div>

		<p>Oliver: The problem with that is then you end up with negative 32 bit numbers mapping to positive 64 bit ones. By sign-extending it instead, all the positive/negative, addition/subtraction and overflow operations operate as expected. It also stops any genuine 64 bit apps getting upset about having a kernel 2Gb into their address space, instead of at the top in its own half. Why complicate the address map by having two distinct userspace areas with the kernel in between, when you could have a single dividing line instead?</p>
<p>I never owned one myself, but did like the idea of an Alpha; I remember the Multia being quite popular for hobbyists at one time (including being the original platform for Slashdot!), but Ebay doesn&#8217;t have any at the moment AFAICS.</p>
<p>&quot;This is sort of analogous to running 16-bit Windows programs on an 80386 processor. Your 16-bit program could still use those 32-bit registers if it only knew they were there.&quot;</p>
<p>Closer still, in fact: the &quot;16 bit&quot; registers we see on 386 and later systems (AX/BX/CX etc) are the bottom half of the 32 bit variants, (EAX/EBX/ECX&#8230;) &#8211; it *is* using them, just ignoring the top half thereof, just as you do on AXP with the bottom 32 of the 64 bits. Or you get get into a whole world of pain mixing x87 floating point operations with MMX, since Intel&#8217;s implementation &#8216;recycled&#8217; the same physical registers for both functions&#8230;</p>
<p>There&#8217;s also &quot;unreal mode&quot; (32 bit memory access from 16 bit code) &#8211; which sounds superficially similar to WINMEM32, but I can&#8217;t find any information on the latter at the moment.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-532553">
				<div id="div-comment-532553" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Anon</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070801-00/?p=25763#comment-532553">
			August 2, 2007 at 1:31 am</a>		</div>

		<p>I wonder why Microsoft didn&#8217;t release a 64 bit Windows on Alpha or Mips? You can see they had it running internally for ages. Look at the machine types in PE executable files &#8211; IMAGE_FILE_MACHINE_ALPHA64 has been around in various SDKs and DDKs for ages.</p>
<p>It seems like if you&#8217;re going to port a medium size application to a Risc platform it&#8217;s not that much harder to go from 32 bit to 64 bit. In a twisted sort of way, the sort of people that port to Risc would probably like the challenge of porting to 64 bit.</p>
<p>And even if no one bought it seems like it would be good as scalability demonstration, which was all the 32 bit Risc ports of NT 4.0 or Windows XP x64 for that matter ended up being. &nbsp;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-532573">
				<div id="div-comment-532573" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Yuhong Bao</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070801-00/?p=25763#comment-532573">
			August 2, 2007 at 1:51 am</a>		</div>

		<p>What if Win2000 was actually released for the Alpha? Because by the time the Alpha was dropped, Win2000 was close to release.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-532583">
				<div id="div-comment-532583" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Anon</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070801-00/?p=25763#comment-532583">
			August 2, 2007 at 1:58 am</a>		</div>

		<p>@Wang-Lo</p>
<p>&quot;developed by races famous for practicality.&quot;</p>
<p>Latin = Italians, Alpha = Americans?</p>
<p>FYI Americans get antsy when people talk about race. Especially bloody foreigners ;-)</p>
<p>@Jonathan Wilson</p>
<p>&quot;Itanium wasnt around at that time, IIRC it is a loose descendant of Alpha created after DEC disappeared and Intel ended up with some of DEC&#8217;s processor IP.&quot;</p>
<p>More like the red headed illegitimate child.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-532593">
				<div id="div-comment-532593" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Yuhong Bao</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070801-00/?p=25763#comment-532593">
			August 2, 2007 at 2:01 am</a>		</div>

		<p>In fact, how about trying to build the final version of Windows 2000 for the DEC Alpha?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-mike-dimmick odd alt thread-odd thread-alt depth-1" id="comment-532613">
				<div id="div-comment-532613" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Mike+Dimmick' rel='external nofollow' class='url'>Mike Dimmick</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070801-00/?p=25763#comment-532613">
			August 2, 2007 at 6:08 am</a>		</div>

		<p>IIRC, the reason that Windows 2000/Alpha64 was never released was simply that Compaq (who&#8217;d bought out DEC) decided not to support it. With only a single OEM customer, and that customer deciding to drop support, it wasn&#8217;t economical to continue.</p>
<p>64-bit Windows on Alpha continued to be developed and used internally as a &#8216;mule&#8217; (to use the car maker term) to validate the 64-bit concepts while Intel got working Itanium silicon going (IA-64 having been in the works as a joint venture with HP since 1994). I seem to remember they were still used as build machines inside Microsoft until quite recently (still outperforming x86s!)</p>
<p>The first commercially-released 64-bit version of Windows was &quot;Windows Advanced Server, Limited Edition&quot; in 2001 (for Itanium). It couldn&#8217;t really be called either Windows 2000 nor Windows Server 2003 &#8211; it landed in an awkward time frame around about the Windows XP launch, before the Windows Server 2003 security push that delayed that product a further year. There was also an Itanium version of Windows XP intended for use on workstations, but the hardware ended up being too expensive for most people.</p>
<p>Itanium still has a performance-per-clock lead, particularly in floating-point, even over Core 2/Xeon, but clock rates have never even approached x86, which regained the integer lead a while back (actually AMD Opterons rather than Intels). The Itanium 2 currently tops out at 1.6GHz on 533MHz FSB, while the fastest Core 2-based Xeon, model 5160, runs at 3.0GHz on a 1333MHz FSB. The Itanium is more efficient than the Xeon, in performance per clock, but it&#8217;s not twice as efficient. Itaniums do have more on-board cache, though, at 12MB rather than the Xeon&#8217;s 4MB (2x4MB in the case of the quad-core 53xx series &#8211; this is basically two Core 2 Duo cores in the same package) which might be beneficial in some applications.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-532633">
				<div id="div-comment-532633" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://jasonhaley.com/blog/archive/2007/08/02/140130.aspx' rel='external nofollow' class='url'>Jason Haley</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070801-00/?p=25763#comment-532633">
			August 2, 2007 at 10:19 am</a>		</div>

		
		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-532683">
				<div id="div-comment-532683" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Neil</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070801-00/?p=25763#comment-532683">
			August 2, 2007 at 10:48 am</a>		</div>

		<p>&#8230; the WINMEM32 library &#8230; even let you create 32-bit code segments!</p>
<p>I read somewhere that Windows 3.11 GDI just turned its own code segments from 16-bit to 32-bit. As I recall, it used xor ax, ax; mov ah, 0x80; add ax, ax; to test whether it was still in 16 bit mode (the carry flag would be set).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-xepol even thread-even depth-1" id="comment-532753">
				<div id="div-comment-532753" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Xepol' rel='external nofollow' class='url'>Xepol</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070801-00/?p=25763#comment-532753">
			August 2, 2007 at 11:25 am</a>		</div>

		<p>Nothing quite like entrenching doing things the wrong way.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-532783">
				<div id="div-comment-532783" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">KJK::Hyperion</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070801-00/?p=25763#comment-532783">
			August 2, 2007 at 11:57 am</a>		</div>

		<p>Also: technically, 64-bit pointers are still supported (see PVOID64), but they are just an artificial compiler construct to define data structures that are binary-compatible between 32 and 64 bit. Similarly, PVOID32 is a pointer that&#8217;s always 32 bits in width, regardless of architecture</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-jamesnt even thread-even depth-1" id="comment-532893">
				<div id="div-comment-532893" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/JamesNT' rel='external nofollow' class='url'>JamesNT</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070801-00/?p=25763#comment-532893">
			August 2, 2007 at 3:02 pm</a>		</div>

		<p>It&#8217;s moments like this that make me sick to my stomach that I skipped all those days in my assembly language class.</p>
<p>Sigh.</p>
<p>Great post, Mr. Chen, thank you!!</p>
<p>JamesNT</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-532623">
				<div id="div-comment-532623" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">KJK::Hyperion</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070801-00/?p=25763#comment-532623">
			August 2, 2007 at 9:27 am</a>		</div>

		<p>James: &quot;unreal&quot; mode, if I remember correctly, is a *bug* in the x86 that was exploited, among others, by Ultima 7. The trick is that segment descriptors and selectors are just shadows of internal MMU registers &#8211; unless the corresponding selector registers are overwritten explicitely, the internal registers they map to will remain unchanged. The official documentation states that you need to reload segments before returning to real mode, but it turns out it&#8217;s not necessary in practice</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-532923">
				<div id="div-comment-532923" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Yuhong Bao</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070801-00/?p=25763#comment-532923">
			August 2, 2007 at 5:10 pm</a>		</div>

		<p>In fact the last Win2k Alpha build was 2128:</p>
<p><a rel="nofollow" target="_new" href="http://www.alphant.com/articles/windows2000.html" rel="nofollow">http://www.alphant.com/articles/windows2000.html</a></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-532933">
				<div id="div-comment-532933" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Yuhong Bao</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070801-00/?p=25763#comment-532933">
			August 2, 2007 at 5:17 pm</a>		</div>

		<p>In fact, how about building the final build 2195 of Win2k for Alpha to show how much Alpha is remaining in that build and for running on the remaining Alpha systems and to try out VLM? </p>
<div class=post>[<i>Okay, let me get this straight. You are asking me why I don&#8217;t (1) requisition an old Alpha machine from the archives (what do I put in the &#8220;business justification&#8221; box? &#8220;Because some blogger told me to&#8221;?), (2) install Windows NT 4 on it, (3) request access to the Windows 2000 source code (that pesky &#8220;business justification&#8221; box again), (4) do { learn how to build it, kick off a build } while (build failed), (5) burn some CDs, (6) install, (7) write a VLM program, (8) run it, (9) post a blog message saying &#8220;I did it.&#8221; If you need an answer to that question, I feel sorry for you. You&#8217;re going to have a difficult life not knowing the difference between what is reasonable and unreasonable. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-532973">
				<div id="div-comment-532973" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.levicki.net/' rel='external nofollow' class='url'>Igor</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070801-00/?p=25763#comment-532973">
			August 2, 2007 at 7:09 pm</a>		</div>

		<blockquote><p>
  Now, the instruction set did provide a few</p>
<p>  arithmetic instructions which operated on</p>
<p>  32-bit values, but the results were always</p>
<p>  sign-extended back up to 64 bits.
</p></blockquote>
<p>Raymond, is that the reason why Windows still uses SIGNED pointers today?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-532983">
				<div id="div-comment-532983" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.levicki.net/' rel='external nofollow' class='url'>Igor</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070801-00/?p=25763#comment-532983">
			August 2, 2007 at 7:17 pm</a>		</div>

		<p>By the way Raymond, he didn&#8217;t mean you should personally build it, but that the Microsoft should do it, (probably as a gesture of a good will and for historical reasons) and without support obligation since even Windows 2000 is on the verge of being an unsupported OS.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-533003">
				<div id="div-comment-533003" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Yuhong Bao</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070801-00/?p=25763#comment-533003">
			August 2, 2007 at 10:31 pm</a>		</div>

		<p>Indeed, I am not asking MS to build XP or later for Alpha, which would make no sense.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-533013">
				<div id="div-comment-533013" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Yuhong Bao</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070801-00/?p=25763#comment-533013">
			August 2, 2007 at 10:36 pm</a>		</div>

		<p>I don&#8217;t have an Alpha, BTW, but there are those who have them.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-533023">
				<div id="div-comment-533023" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Yuhong Bao</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070801-00/?p=25763#comment-533023">
			August 2, 2007 at 10:38 pm</a>		</div>

		<p>BTW, it is quite sad that the Alpha was dropped that close to RTM.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-533443">
				<div id="div-comment-533443" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://sixyears.wordpress.com' rel='external nofollow' class='url'>AV</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070801-00/?p=25763#comment-533443">
			August 3, 2007 at 4:15 pm</a>		</div>

		<p>I can see where that comment is coming from having heard that Cutler did provide a 64bit port very early in the days and that 5.0 was a primary target around that timeframe.</p>
<p>So either Itanium was around or Alpha was very close to a 5.0 build. I would guess the latter just because of historical links, and hey how far could a 5.1 build be from it :-)</p>
<p>However, I agree it is pointless, better to put a Linux piece on it and have fun.</p>
<p>Anyway, does anyone know the details of that DEC IP that got shifted to Intel for Itanium? Would appreciated any links too, reason being I have heard stories that some of it is relevant to their competition with AMD but nothing concrete on it.</p>
<p>Cheers.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-533453">
				<div id="div-comment-533453" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://sixyears.wordpress.com' rel='external nofollow' class='url'>EV</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070801-00/?p=25763#comment-533453">
			August 3, 2007 at 4:23 pm</a>		</div>

		<p>And while on rumours, don&#8217;t know where to verify this, someone else reminded me the other day again that Vista aka 6.0 was dropped after a two year work on old 5.1 trunk, one of the reasons being first ever?? adoption of C++ for the implementation.</p>
<p>Pitty there is still no thin equivalent or answer to Linux and who knows it might be screwed up with 2008 Core Server attempt. For one there is not enough samples and very little on new/old cryptography and I/O. Without more of it, the open source will be an alternative for all architectures until 2012 at least.</p>
<p>Apologies to Raymond if this is an inappropriate place or topic but any details/pointers on the above greatly appreciated.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-533843">
				<div id="div-comment-533843" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">DEC</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070801-00/?p=25763#comment-533843">
			August 7, 2007 at 12:33 am</a>		</div>

		<p>Many people don&#8217;t realize that the non x86 versions of Windows NT 4.0 (Alpha and MIPS) would run x86 code in an emulator (in this case a virtualized i486). To improve performance, DEC released their own Intel-to-Alpha emulator &amp; translator called FX!32 which would attempt to convert as much code x86 as possible to native Alpha. What&#8217;s really interesting is that it would optimize itself each time the user would run an executable. So the first time a program was run, it would mostly be emulated but every subsequent run would convert more of the code. After several runs, the majority of the program would be native code. I wonder if this approach would be viable under WoW64?</p>
<p>Full article (about half-way down) here: <a rel="nofollow" target="_new" href="http://www.windowsitlibrary.com/Content/435/06/4.html" rel="nofollow">http://www.windowsitlibrary.com/Content/435/06/4.html</a></p>
<p>R.I.P. DEC. Yet another innovative company brought down by inept management and the wish of a competitor to buy out and dismember a rival.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-534053">
				<div id="div-comment-534053" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://sixyears.wordpress.com' rel='external nofollow' class='url'>XV</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070801-00/?p=25763#comment-534053">
			August 7, 2007 at 3:41 pm</a>		</div>

		<p>I seem to recall that one, it was a service no?, and seeing that Slashdot and Don is pushing for women in IT topic, I believe it was a woman behind it (from a team of two) behind FX.</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

