<html>
<head>
<title>Why is my crash dump file filled with 0xAAAAAAAA?</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>Why is my crash dump file filled with 0xAAAAAAAA?</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>November 4, 2016 / year-entry #232</td></tr>
<tr><td><b>Tags:</b></td><td>other</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20161104-00/?p=94645</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>13</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">No, it's just that the original data was scrubbed out.</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>
A customer was studying a minidump
collected by Windows Error Reporting.
The minidump includes the contents of the stack,
but the contents are randomly filled with 0xAAAAAAAA.
</p>
<pre>
00f3ac5c  00f3d1c0
00f3ac60  592ccae2 contoso!AppWndProc+0x1c5b
00f3ac64  aaaaaaaa
00f3ac68  aaaaaaaa
00f3ac6c  aaaaaaaa
00f3ac70  aaaaaaaa
00f3ac74  00000000
00f3ac78  00000000
00f3ac7c  58e75a46 contoso!WndProcGeneric
00f3ac80  504e7fea cohelp!allyourbuttons+0x5aba
00f3ac84  aaaaaaaa
00f3ac88  aaaaaaaa
00f3ac8c  00000000
00f3ac90  00000000
00f3ac94  0ee26838
00f3ac98  00000000
00f3ac9c  aaaaaaaa
00f3aca0  58ec7405 contoso!GetBlockBeforeCapture+0x2e
00f3aca4  0ee26838
00f3aca8  0fd6db10
00f3acac  00000000
00f3acb0  aaaaaaaa
00f3acb4  00f3ad04
00f3acb8  58ec732f contoso!FindDrawingFromGraphicId+0x136
00f3acbc  aaaaaaaa
00f3acc0  00000000
00f3acc4  00000000
00f3acc8  00000000
00f3accc  00000000
00f3acd0  aaaaaaaa
00f3acd4  aaaaaaaa
00f3acd8  aaaaaaaa
</pre>
<p>
What's going on here?
</p>
<p>
What's going on is that the minidump has been filtered.
The customer missed this message from the debugger that
was printed at the top of the debug session:
</p>
<blockquote CLASS=q>
<p STYLE="border-bottom: solid 1px black">
User Mini Triage Dump File: Only registers, stack and portions of memory are available
</p>
<p>
The user dump currently examined is a triage dump. Consequently, only a subset of debugger
functionality will be available. If needed, please collect a minidump or a heap dump.
</p>
<ul>
<li>To create a mini user dump use the command: .dump /m &lt;filename&gt;</li>
<li>To create a full user dump use the command: .dump /ma &lt;filename&gt;</li>
</ul>
<p>
Triage dumps have certain values on the stack and in the register contexts overwritten with
pattern <code>0xAAAAAAAA</code>. If you see this value
</p>
<ol>
<li>the original value was not <code>NULL</code>
<li>the original value was not a direct pointer to a loaded or unloaded image
<li>the original value did not point to an object whose VFT points to a loaded or
         unloaded image (indirect pointer)</p>
<li>the original value did not point to the stack itself or any memory area added to
         the dump (TEB, PEB, memory for CLR stackwalk or exceptions, etc.)</p>
<li>the original value was not a valid handle value
</p>
</blockquote>
<p>
After receiving this explanation, the customer was still a bit dubious.
"A lot of function parameters in the dump are being given as
<code>0xAAAAAAAA</code>,
which suggests that they have been filtered out.
But I thought constant strings and plain integers should still be
on the stack.
Does the fact that I don't see them mean that they were corrupted?"
</p>
<p>
If you look at the information banner printed by the debugger,
you can see that plain integers are not on the list of things
exempt from filtering.
You might still see an integer if it happens to match a value
that is exempt from filtering, such as if it happens to be zero
or match a valid handle.
</p>
<p>
As for constant strings, it depends on how the constant string
is stored.
If it's a literal string embedded in a module, then it would
be exempt from filtering according to rule&nbsp;2.
But if the string were copied to the heap or to the stack,
then that would make it subject to filtering.</p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (13)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1 parent" id="comment-1272226">
				<div id="div-comment-1272226" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ray Koopa</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20161104-00/?p=94645#comment-1272226">
			November 4, 2016 at 7:19 am</a>		</div>

		<p>And I thought it was an outcry from a failed application.</p>

		
				</div>
		<ol class="children">
		<li class="comment odd alt depth-2" id="comment-1272235">
				<div id="div-comment-1272235" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Jason</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20161104-00/?p=94645#comment-1272235">
			November 4, 2016 at 7:30 am</a>		</div>

		<p>&#8220;Well, it wouldn&#8217;t have outputted 0xAAAAAAAA while it was crashing.&#8221;</p>
<p>&#8220;Maybe the debugger was taking dictation?&#8221;</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment even thread-odd thread-alt depth-1 parent" id="comment-1272245">
				<div id="div-comment-1272245" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Damien</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20161104-00/?p=94645#comment-1272245">
			November 4, 2016 at 8:04 am</a>		</div>

		<p>&#8220;No, it’s just that the original data was scrubbed out.&#8221; isn&#8217;t usually an answer to a &#8220;Why&#8221; question, and certainly not the one posed in the title</p>

		
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-aadsso-1live-com0003400182c5b091 odd alt depth-2 parent" id="comment-1272255">
				<div id="div-comment-1272255" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Eddie+Lotter' rel='external nofollow' class='url'>Eddie Lotter</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20161104-00/?p=94645#comment-1272255">
			November 4, 2016 at 9:17 am</a>		</div>

		<p>Unless I completely misunderstood your post, it looks like a strawman argument. Raymond doesn&#8217;t answer &#8220;No&#8221; to a &#8220;Why&#8221; question.</p>

		
				</div>
		<ol class="children">
		<li class="comment even depth-3 parent" id="comment-1272305">
				<div id="div-comment-1272305" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">parkrrrr</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20161104-00/?p=94645#comment-1272305">
			November 4, 2016 at 12:14 pm</a>		</div>

		<p>He does, sort of. It&#8217;s the tl;dr subhead for this post on the main page. You can&#8217;t see it from here.</p>

		
				</div>
		<ol class="children">
		<li class="comment odd alt depth-4 parent" id="comment-1272315">
				<div id="div-comment-1272315" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Rick C</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20161104-00/?p=94645#comment-1272315">
			November 4, 2016 at 12:33 pm</a>		</div>

		<p>Likely the subhead was an answer to the question asked in the article, &#8220;Does the fact that I don&#8217;t see them mean that they were corrupted?&#8221;</p>

		
				</div>
		<ol class="children">
		<li class="comment even depth-5" id="comment-1272335">
				<div id="div-comment-1272335" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ivan K</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20161104-00/?p=94645#comment-1272335">
			November 4, 2016 at 4:41 pm</a>		</div>

		<p>With the all-caps AAys I thought it might be the answer to &#8220;Does Microsoft also agree that my feature is the coolest ever and think I deserve a bonus despite the crashes&#8221;? (Fonzie / Happy Days reference)</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment odd alt depth-2" id="comment-1272355">
				<div id="div-comment-1272355" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.silverbacknetworks.tech' rel='external nofollow' class='url'>Josh B</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20161104-00/?p=94645#comment-1272355">
			November 4, 2016 at 7:10 pm</a>		</div>

		<p>Raymond answered fine. &#8220;Why is there so much 0xAAAAAAAA in my dump?&#8221; &#8220;Because the data was filtered out.&#8221;</p>
<p>Now you have a follow-up question: &#8220;Why is the data filtered out?&#8221; That&#8217;s not answered, perhaps because it should be blindingly obvious to anyone who pays attention to attitudes toward Microsoft: Privacy advocates, businesses, and general haters would foam at the mouth that Microsoft was transmitting confidential information and spying on their customers, even more so than they already do. It&#8217;s a way of appeasing the public, and removing any potential temptation from its employees.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1 parent" id="comment-1272246">
				<div id="div-comment-1272246" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Matteo Italia</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20161104-00/?p=94645#comment-1272246">
			November 4, 2016 at 11:05 am</a>		</div>

		<p>I still don&#8217;t get why these values are filtered in this particular kind of minidump &#8211; to keep the size down? For privacy? Something else?</p>

		
				</div>
		<ol class="children">
		<li class="comment odd alt depth-2" id="comment-1272285">
				<div id="div-comment-1272285" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">DWalker07</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20161104-00/?p=94645#comment-1272285">
			November 4, 2016 at 11:11 am</a>		</div>

		<p>Exactly.  WHY are these values filtered out?  So we won&#8217;t waste time looking at them, perhaps?  Is that the reason?</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment even thread-odd thread-alt depth-1 parent" id="comment-1272256">
				<div id="div-comment-1272256" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Yukkuri</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20161104-00/?p=94645#comment-1272256">
			November 4, 2016 at 11:32 am</a>		</div>

		<p>Why is any data being scrubbed?</p>

		
				</div>
		<ol class="children">
		<li class="comment odd alt depth-2" id="comment-1272295">
				<div id="div-comment-1272295" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Yukkuri</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20161104-00/?p=94645#comment-1272295">
			November 4, 2016 at 11:53 am</a>		</div>

		<p>would this be the reason why? </p>
<p><a href="http://www.google.com/patents/US8645763" rel="nofollow">http://www.google.com/patents/US8645763</a></p>
<p>&#8220;To reduce the risk of user-specific personal being included in the memory dump, portions of memory that contain data characteristic of personal data are “poisoned” by overwriting the data values with overwrite values.&#8221;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even depth-2" id="comment-1272425">
				<div id="div-comment-1272425" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">smf</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20161104-00/?p=94645#comment-1272425">
			November 6, 2016 at 9:25 am</a>		</div>

		<p>&#8220;Why is any data being scrubbed?&#8221;</p>
<p>Triage in medicine isn&#8217;t about diagnosing everything wrong with the patient, it&#8217;s about figuring out the order to deal with the patients to get the best overall outcome.</p>
<p>My guess is that a triage dump is smaller to transmit &amp; store plus it&#8217;s probably easier to look at.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

