<html>
<head>
<title>How do I create a directory where people can create subdirectories but cannot mess with those created by other users?</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>How do I create a directory where people can create subdirectories but cannot mess with those created by other users?</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>May 24, 2016 / year-entry #109</td></tr>
<tr><td><b>Tags:</b></td><td>tipssupport</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20160524-00/?p=93515</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>11</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">Advanced ACL games.</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>
A customer was having trouble setting up security for a new file share
for which they wanted a particular usage model:
</p>
<blockquote CLASS=q><p>
What we would like is for everybody to be able to create
new files and folders on the share but not overwrite existing
content.
We can't find the correct set of ACLs that give us what we want.
We found "Create Folders / Append Data",
which sounds like it lets you create folders
and append to existing files on the share,
but it doesn't let you create files.
Is that correct?
What's more,
when we tried it,
it didn't seem to do what it says on the tin.
We can create folders, and we can create empty files,
but we are unable to write any content into those files.
Maybe the permissions we are setting up don't make sense?
Can you suggest a security configuration that gives us what we want?
</p>
</blockquote>
<p>
"Create Folders / Append Data" access is one of the many
two-headed permissions in file system security.
It means
"<a HREF="https://msdn.microsoft.com/en-us/library/windows/desktop/gg258116(v=vs.85).aspx"
>If applied to a folder, you can create folders.
If applied to a file, you can append data</a>."
That's what the slash is trying to tell you.
</p>
<p>
What you can do is set
"Create Folders / Append Data" on the root folder,
but mark it is non-inheritable.
This means that users can create folders in the root,
but since it doesn't inherit,
they will not be able to create folders inside any folders
they create, nor will they be able to append to any files
they create.
(On the other hand, that seems to result in the situation
described above, where you can create a file but you can't
write anything to it, because writing to an empty file
is equivalent to appending.)
</p>
<p>
But let's suppose that the customer's
"not overwrite existing content" really means
"not overwrite existing content created by other users".
In other words, we want to let users create new content,
and they can do whatever they want to the content they created,
but they can't mess with content created by others.
</p>
<p>
As noted by my colleague Pavel Lebedinsky some time ago,
<a HREF="https://blogs.msdn.microsoft.com/oldnewthing/20070726-00/?p=25833#comment-530953">
the Windows temp directory is set up very similar to what you want</a>.
</p>
<pre>
C:\Windows&gt;cacls temp
                BUILTIN\Users:(CI)(special access:)
                                  SYNCHRONIZE
                                  FILE_WRITE_DATA
                                  FILE_APPEND_DATA
                                  FILE_EXECUTE
 
                BUILTIN\Administrators:F
                BUILTIN\Administrators:(OI)(CI)(IO)F
                NT AUTHORITY\SYSTEM:F
                NT AUTHORITY\SYSTEM:(OI)(CI)(IO)F
                CREATOR OWNER:(OI)(CI)(IO)F
</pre>
<p>
Administrators and SYSTEM get full access to everything,
but that's not unusual.
The interesting ACEs are the ones for Users and CREATOR OWNER.
</p>
<p>
The dual-headed-ness of many file system access mask values makes
the output a little harder to understand,
because <code>FILE_<wbr>WRITE_<wbr>DATA</code> means different
things depending on whether you apply it to a file or to a folder.
Let's see what we can figure out.
</p>
<p>
The Users ACE is marked Container Inherit (CI) which means that it
applies to this folder and subfolders, but not to files.
<code>FILE_<wbr>WRITE_<wbr>DATA</code>
applied to a folder means <code>FILE_<wbr>ADD_<wbr>FILE</code>,
so users can create files in this folder or any subfolders.
<code>FILE_<wbr>APPEND_<wbr>DATA</code> applied to a folder means
<code>FILE_<wbr>ADD_<wbr>SUBDIRECTORY</code>, so users can
create subdirectories in this folder or any subfolders.
And
<code>FILE_<wbr>EXECUTE</code> applied to a folder means
<code>FILE_<wbr>TRAVERSE</code>, so users can traverse
through this folder any subfolders.
</p>
<p>
Recall that
CREATOR OWNER is a placeholder ACE.
Nobody actually has CREATOR OWNER;
rather,
<a HREF="http://blogs.msdn.com/larryosterman/archive/2004/09/01/224051.aspx">
it is a template that gets applied to newly-created objects</a>.
Therefore,
the CREATOR OWNER ACE gets applied to files and folders that
users create,
and the user who created the file or folder is inserted as the owner.
Here, the ACE is saying that users have full control over any folders
or files that they create.
</p>
<p>
The security settings for the Windows temp directory are a good start
for fiddling around with usage patterns like the one the customer is looking for.
In fact, it may already be what the customer wants.
</p>
<p>
The customer thanked us for the information.</p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (11)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-1250276">
				<div id="div-comment-1250276" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">jspenguin</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160524-00/?p=93515#comment-1250276">
			May 24, 2016 at 7:31 am</a>		</div>

		<p>Sounds like they want the equivalent of the &#8220;sticky&#8221; bit from UNIX. Linux has had full ACLs on most filesystems for years now, but it&#8217;s amazing what could be accomplished with just a few permission bits.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1250285">
				<div id="div-comment-1250285" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">12BitSlab</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160524-00/?p=93515#comment-1250285">
			May 24, 2016 at 7:35 am</a>		</div>

		<p>Raymond, thanks is this is very timely.  I passed this blog post on to our internal support team (i.e., sys admins) because they are dealing with something similar right now.  Again, thanks!</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1 parent" id="comment-1250335">
				<div id="div-comment-1250335" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ben Voigt</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160524-00/?p=93515#comment-1250335">
			May 24, 2016 at 8:58 am</a>		</div>

		<p>Attempting to translate &#8220;it is a template that gets applied to newly-created objects&#8221; into real-world implications&#8230;</p>
<p>This means that exercising the &#8220;Take Ownership&#8221; action will not actually grant privileges associated with CREATOR/OWNER to the newly designated owner; those remain with the original (at the time of file creation) owner.  Correct?</p>

		
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-alegrigoriev odd alt depth-2 parent" id="comment-1250365">
				<div id="div-comment-1250365" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/alegr1' rel='external nofollow' class='url'>alegr1</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160524-00/?p=93515#comment-1250365">
			May 24, 2016 at 9:44 am</a>		</div>

		<p>&#8220;Take ownership&#8221; doesn&#8217;t modify the ACL, it just changes the owner. CREATOR-OWNER permissions are set up to apply to the contained objects. If you check the permissions info, the files actually lose it, they have an entry for an actual user. Thus, the new owner will not automatically have the access.</p>

		
				</div>
		<ol class="children">
		<li class="comment even depth-3" id="comment-1250438">
				<div id="div-comment-1250438" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ben Voigt</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160524-00/?p=93515#comment-1250438">
			May 24, 2016 at 3:22 pm</a>		</div>

		<p>@alegr1 Well, changing a user&#8217;s (or his token&#8217;s, in the case of UAC) group membership doesn&#8217;t modify ACLs either, but it certainly does affect the effective permissions.  It&#8217;s good to know that the change in owner doesn&#8217;t impact permission evaluation.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment byuser comment-author-fleet-command odd alt thread-odd thread-alt depth-1" id="comment-1250465">
				<div id="div-comment-1250465" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Fleet+Command' rel='external nofollow' class='url'>Fleet Command</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160524-00/?p=93515#comment-1250465">
			May 25, 2016 at 2:29 am</a>		</div>

		<p>I remember studying all this 10 years ago during my MCSE training&#8230; Lots of things have changed but not these.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-fredericmagnyf even thread-even depth-1 parent" id="comment-1250485">
				<div id="div-comment-1250485" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Medinoc' rel='external nofollow' class='url'>Medinoc</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160524-00/?p=93515#comment-1250485">
			May 25, 2016 at 4:32 am</a>		</div>

		<p>If I got it right, &#8220;Creator Owner&#8221; permissions should always be marked &#8220;Inherit Only&#8221;, correct?</p>

		
				</div>
		<ol class="children">
		<li class="comment odd alt depth-2" id="comment-1250495">
				<div id="div-comment-1250495" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">dave</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160524-00/?p=93515#comment-1250495">
			May 25, 2016 at 5:12 am</a>		</div>

		<p>Doesn&#8217;t really matter, since as an ACE applying to &#8216;this object&#8217;, it will never be matched against an accessor.<br />
But yes, for clarity make it inherit-only.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment even thread-odd thread-alt depth-1 parent" id="comment-1250595">
				<div id="div-comment-1250595" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">MarcK4096</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160524-00/?p=93515#comment-1250595">
			May 26, 2016 at 5:54 am</a>		</div>

		<p>CREATOR OWNER has been a very helpful.  I was lucky enough to encounter a sample set up by another admin years ago.  It&#8217;s very handy for allowing user profile folders with the proper permissions to be created by the user during the first logon.</p>

		
				</div>
		<ol class="children">
		<li class="comment odd alt depth-2 parent" id="comment-1250658">
				<div id="div-comment-1250658" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Malcolm</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160524-00/?p=93515#comment-1250658">
			May 26, 2016 at 2:04 pm</a>		</div>

		<p>CREATOR GROUP is another handy one if you&#8217;re willing to go out on a limb and change a user&#8217;s primary group. I came up with an idea many years ago to create a unique group per user for all our admin accounts, make it the primary group for each admin user, and then assign an audit ACL, from the top down, to everything on the file server and have the audit ACL set to CREATOR GROUP on an obscure operation that&#8217;s likely to rarely be used (such as failure to take ownership). Why?</p>
<p>Well, suppose you have a non-Windows system, like a NetApp filer, and therefore cannot be assured that the group policy setting to make files written by Administrators group be owned by the individual account will be honoured in all circumstances. Or, you do not want to lose the flexibility that having the file owned by Administrators gives you, but want traceability too. Take three admin users &#8230; Alice, Bob and Sue. You create an AdminUser:Alice, AdminUser:Bob, AdminUser:Sue group. Assign respectively as the primary group for Alice, Bob and Sue.</p>
<p>When Alice, Bob and Sue create files/folders, they will be owned by Administrators. However, if you look at the security ACL it will have an entry created from your inheritable CREATOR GROUP ACE. When this ACL is written, it will have the primary group of each user and therefore tell you which one actually created it &#8211; while allowing you to retain the flexibility that ownership by Administrators was designed to give you in the first place.</p>
<p>I tested this and it worked, but it never made it into production. Instead, we limited the number of admins. But someone out there might want to try it and see how it works. You may run into limits for direct membership of Domain Users if you have a large number of admins and an AD domain set at a very old functional level (like, Windows 2000 level). Caveat emptor ;)</p>

		
				</div>
		<ol class="children">
		<li class="comment even depth-3" id="comment-1250665">
				<div id="div-comment-1250665" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Malcolm</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160524-00/?p=93515#comment-1250665">
			May 26, 2016 at 2:12 pm</a>		</div>

		<p>I should also add: it doesn&#8217;t need to be a security ACL but that way, it does not show up in discretionary ACLs, and also does not run the risk of disrupting normal file permissions. Say you set a CREATOR GROUP, full access, discretionary ACL and an ordinary user creates a folder? It suddenly has Domain Users FULL access&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

