<html>
<head>
<title>Why does the Windows calculator generate tiny errors when calculating the square root of a perfect square?</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>Why does the Windows calculator generate tiny errors when calculating the square root of a perfect square?</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>June 28, 2016 / year-entry #134</td></tr>
<tr><td><b>Tags:</b></td><td>non-computer</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20160628-00/?p=93765</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>35</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">Because it doesn't know that it's a perfect square.</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>
Try this:
Fire up the Windows calculator and ask it to compute
&#x221a;4 &minus; 2.
The answer is not zero.
It's
&minus;1.068281969439142e&minus;19.
"I thought
<a HREF="https://blogs.msdn.microsoft.com/oldnewthing/20040525-00/?p=39193">
the Windows calulator used an arbitrary precision arithmetic library</a>.
How come the answer isn't exactly zero?"
</p>
<p>
If you read closely in that article,
you'll see that it says that the Windows calculator uses an arbitrary
precision arithmetic library for basic operations
but not for advanced operations,
and square-root is called out explicitly as an advanced operation.
Specifically, it uses an arbitrary precision arithmetic library for
rational operations:
addition, subtraction, multiplication, division,
and raising to a positive integer power.
Other operations use an extended precision library
that produces
32
digits of precision.
</p>
<p>
Even if the value you are taking the square root of
happens to be a perfect square,
the calculator doesn't realize that.
It doesn't try to calculate an integer square root first,
and then fall back to the floating point version
if the integer square root fails to produce an exact result.
It just goes for the square root via the extended precision library.
</p>
<p>
What you're seeing, therefore, is the usual vagaries of
floating point arithmetic,
compounded by the fact that the extended precision library
does not have a custom algorithm dedicated to high-precision
square roots.
Instead, the extended precision library calculates
the square root via the following identity:
</p>
<table BORDER=0>
<tr>
<td ROWSPAN=2></td>
<td VALIGN=center ROWSPAN=5 STYLE="font-size: 500%; position: relative; top: -.25ex">{</td>
<td></td>
<td></td>
</tr>
<tr>
<td VALIGN=bottom>error&nbsp;</td>
<td VALIGN=bottom>if <var>x</var> &lt; 0</td>
</tr>
<tr>
<td>&#x221A;<var>x</var> =</td>
<td>0&nbsp;</td>
<td>if <var>x</var> = 0</td>
</tr>
<tr>
<td ROWSPAN=2></td>
<td VALIGN=top>exp(&frac12; ln <var>x</var>)</td>
<td VALIGN=top>if <var>x</var> &gt; 0</td>
</tr>
<tr>
<td>
<td>
<td></td>
</tr>
</table>
<p>
The value of
1.99999999999999999989317180305609
is good to 20 digits of precision.
Not as good as the 32 digits that a custom-written square root
algorithm would have produced,
but not too shabby.
</p>
<p>
(An error of one part in 10&sup2;&#x2070;
lets you express the distance
from earth to Alpha Centauri with an error of
less than a millimeter.)</p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (35)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1 parent" id="comment-1254065">
				<div id="div-comment-1254065" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Sven2</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160628-00/?p=93765#comment-1254065">
			June 28, 2016 at 7:36 am</a>		</div>

		<p>If the library knows it will produce a result up to n digits of precision, couldn&#8217;t it round to e.g. n-1 digits after that? It would bring calculations that happen to end at a nice round number down to that number, while affecting those that don&#8217;t somewhere down on the 20th digit only.</p>

		
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-oldnewthing bypostauthor odd alt depth-2" id="comment-1254095">
				<div id="div-comment-1254095" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Raymond+Chen+-+MSFT' rel='external nofollow' class='url'>Raymond Chen - MSFT</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160628-00/?p=93765#comment-1254095">
			June 28, 2016 at 8:11 am</a>		</div>

		<p>Here, n=32, so rounding to 31 significant digits would result in 1.999999999999999999893171803056. No improvement. Noting also, of course, that the rounding is done in binary, not decimal.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment even thread-odd thread-alt depth-1" id="comment-1254075">
				<div id="div-comment-1254075" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">French Guy</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160628-00/?p=93765#comment-1254075">
			June 28, 2016 at 7:39 am</a>		</div>

		<p>I got -8.1648465955514287168521180122928e-39 in scientific mode and the same result as you in standard mode. I also calculated exp(½ ln 4)-2 and came up with the same result as √4-2, so my guess is that scientific mode uses higher precision.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-iboyd odd alt thread-even depth-1" id="comment-1254085">
				<div id="div-comment-1254085" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/IanBoyd' rel='external nofollow' class='url'>IanBoyd</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160628-00/?p=93765#comment-1254085">
			June 28, 2016 at 7:52 am</a>		</div>

		<p>I guess the answer boils down to: *&#8221;Because the natural log of four is a transcendental number&#8221;*</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-odd thread-alt depth-1 parent" id="comment-1254105">
				<div id="div-comment-1254105" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Antonio Rodríguez</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160628-00/?p=93765#comment-1254105">
			June 28, 2016 at 8:11 am</a>		</div>

		<p>Arbitrary numeric precision isn&#8217;t just hard to achieve. Sometimes it is impossible. Transcendental numbers (like sqrt(2) or ln(4)) have an infinite number of decimal places, and can&#8217;t be represented numerically. The only way to deal with them is symbolically. And that, of course, is far out of the reach of a &#8220;desktop accessory&#8221; calculator (where simplicity of operation outweighs almost all other concerns).</p>

		
				</div>
		<ol class="children">
		<li class="comment odd alt depth-2" id="comment-1254136">
				<div id="div-comment-1254136" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">bmm6o</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160628-00/?p=93765#comment-1254136">
			June 28, 2016 at 8:48 am</a>		</div>

		<p>Picking nits: sqrt(2) is irrational but not transcendental.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even depth-2 parent" id="comment-1254235">
				<div id="div-comment-1254235" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Mark Y</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160628-00/?p=93765#comment-1254235">
			June 28, 2016 at 2:08 pm</a>		</div>

		<p>I&#8217;m pretty sure sqrt(2) is NOT transcendental, but merely irrational.  In fact, it&#8217;s about as tame as irrational numbers get.</p>

		
				</div>
		<ol class="children">
		<li class="comment odd alt depth-3" id="comment-1254296">
				<div id="div-comment-1254296" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">French Guy</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160628-00/?p=93765#comment-1254296">
			June 29, 2016 at 1:08 am</a>		</div>

		<p>Square roots of rational numbers are indeed not transcendental (because they are roots of polynoms with rational coefficients), but logarithms (and exponentials) of rational numbers are. And even non-transcendental irrational numbers cannot be represented numerically with a finite number of digits, so they have to be handled symbolically for exact calculations.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment even depth-2 parent" id="comment-1254355">
				<div id="div-comment-1254355" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Persona Non Grata</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160628-00/?p=93765#comment-1254355">
			June 29, 2016 at 7:32 am</a>		</div>

		<p>Hey Raymond, I have a sibling response that is &#8220;awaiting moderation&#8221;.  Do you know why my posts keep getting flagged?</p>

		
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-oldnewthing bypostauthor odd alt depth-3 parent" id="comment-1254395">
				<div id="div-comment-1254395" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Raymond+Chen+-+MSFT' rel='external nofollow' class='url'>Raymond Chen - MSFT</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160628-00/?p=93765#comment-1254395">
			June 29, 2016 at 8:01 am</a>		</div>

		<p>First-time commenters are auto-moderated and I have been too busy to dig through the &#8220;awaiting moderation&#8221; pile lately. (Note also that I will not approve comments with bogus email addresses.)</p>

		
				</div>
		<ol class="children">
		<li class="comment even depth-4" id="comment-1254456">
				<div id="div-comment-1254456" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Persona Non Grata</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160628-00/?p=93765#comment-1254456">
			June 29, 2016 at 11:22 am</a>		</div>

		<p>Thanks!</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment odd alt thread-even depth-1" id="comment-1254115">
				<div id="div-comment-1254115" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.mysticetus.com' rel='external nofollow' class='url'>Dave</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160628-00/?p=93765#comment-1254115">
			June 28, 2016 at 8:27 am</a>		</div>

		<p>*Calculating (in title)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-odd thread-alt depth-1 parent" id="comment-1254125">
				<div id="div-comment-1254125" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160628-00/?p=93765#comment-1254125">
			June 28, 2016 at 8:36 am</a>		</div>

		<p>Wow! What&#8217;s funny is had calc used the actual FPU instructions this problem would not so easily be found because it could do exp2(1/2 log2 x) as that is what the FPU provides.</p>

		
				</div>
		<ol class="children">
		<li class="comment odd alt depth-2 parent" id="comment-1254145">
				<div id="div-comment-1254145" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Steinar H. Gunderson</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160628-00/?p=93765#comment-1254145">
			June 28, 2016 at 9:13 am</a>		</div>

		<p>No, the FPU provides an actual square root instruction (FSQRT). And for the value 4.0, it produces exactly 2.0.</p>

		
				</div>
		<ol class="children">
		<li class="comment even depth-3" id="comment-1254276">
				<div id="div-comment-1254276" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Pseudonym</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160628-00/?p=93765#comment-1254276">
			June 28, 2016 at 9:07 pm</a>		</div>

		<p>Of course you meant sqrtss or sqrtsd, because nobody in their right mind would use fsqrt these days.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment byuser comment-author-hikari odd alt depth-2 parent" id="comment-1254146">
				<div id="div-comment-1254146" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Chris+Crowther' rel='external nofollow' class='url'>Chris Crowther</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160628-00/?p=93765#comment-1254146">
			June 28, 2016 at 10:40 am</a>		</div>

		<p>Given Windows has had a calculator since Windows 1.0, I wouldn&#8217;t be surprised if the innards of the current incarnation date back that far.  FPUs were an option at least up until 386, I think?  Although a lot of software required them to run; not sure if that included Windows or not.</p>

		
				</div>
		<ol class="children">
		<li class="comment even depth-3" id="comment-1254195">
				<div id="div-comment-1254195" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Myria</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160628-00/?p=93765#comment-1254195">
			June 28, 2016 at 12:18 pm</a>		</div>

		<p>The 486 was the last Intel CPU that had a model without an FPU built-in.  The &#8220;SX&#8221; model did not have an FPU, but the &#8220;DX&#8221; and &#8220;DX2&#8221; models did.  Starting with the Pentium, all Intel and clone CPUs thereof have an FPU.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-matteo odd alt depth-3" id="comment-1254225">
				<div id="div-comment-1254225" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Matteo+Italia' rel='external nofollow' class='url'>Matteo Italia</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160628-00/?p=93765#comment-1254225">
			June 28, 2016 at 1:22 pm</a>		</div>

		<p>If you read the linked article, it&#8217;s explained that the internals of calc have been completely rewritten:<br />
&gt; The innards of Calc &#8211; the arithmetic engine &#8211; was completely thrown away and rewritten from scratch. The standard IEEE floating point library was replaced with an arbitrary-precision arithmetic library.</p>
<p>Besides, I would find really hard to believe that Windows 1 Calc used arbitrary precision arithmetic&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1254135">
				<div id="div-comment-1254135" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Paul Potts</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160628-00/?p=93765#comment-1254135">
			June 28, 2016 at 8:42 am</a>		</div>

		<p>Hmmm, I thought your statement about the error in representing the distance from Earth to Alpha Centauri might be nonsense, but I did the math  myself. It seems to be pretty accurate. Food for thought about just how accurate floating point numbers really can be, at least if they aren&#8217;t ruined  by algorithms that wind up losing a lot of precision.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1 parent" id="comment-1254155">
				<div id="div-comment-1254155" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Remy Lebeau</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160628-00/?p=93765#comment-1254155">
			June 28, 2016 at 11:01 am</a>		</div>

		<p>This is even worse in Windows 7&#8217;s calculator.  √4 − 2 produces -8.1648465955514287168521180122928e-39 !</p>

		
				</div>
		<ol class="children">
		<li class="comment even depth-2" id="comment-1254465">
				<div id="div-comment-1254465" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">12BitSlab</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160628-00/?p=93765#comment-1254465">
			June 29, 2016 at 12:30 pm</a>		</div>

		<p>I would expect for there to be 2 answers; 0 and -4.  But, then again, I attended public schools so&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt depth-2" id="comment-1254535">
				<div id="div-comment-1254535" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">French Guy</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160628-00/?p=93765#comment-1254535">
			June 30, 2016 at 3:08 am</a>		</div>

		<p>It is actually much better (1e-39 is much smaller than 1e-19). And, like I said earlier, it depends on whether you&#8217;re in standard or scientific mode.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1254185">
				<div id="div-comment-1254185" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Myria</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160628-00/?p=93765#comment-1254185">
			June 28, 2016 at 12:10 pm</a>		</div>

		<p>This could be solved by an algorithm that detects when a rational root has a rational answer, but it may not be worthwhile.</p>
<p>Now if only the Windows 10 calculator could do everything the Windows 7 calculator could, like accept key sequences like &#8220;2y3&#8221; via copy and paste, I&#8217;d be happier.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-aadsso-1live-com000340019af3cc36 odd alt thread-odd thread-alt depth-1 parent" id="comment-1254265">
				<div id="div-comment-1254265" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Richard+T+Russell' rel='external nofollow' class='url'>Richard T Russell</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160628-00/?p=93765#comment-1254265">
			June 28, 2016 at 3:16 pm</a>		</div>

		<p>I wonder why the exp(½ ln x) method was used when it&#8217;s straightforward to calculate the square-root directly.  The so-called &#8216;long division&#8217; square-root algorithm, that most of us were probably taught at school, is particularly simple and elegant when implemented in binary.  It&#8217;s guaranteed to give a precise result when finding the square-root of a perfect square, and is probably how the FPU&#8217;s fsqrt instruction does it.</p>

		
				</div>
		<ol class="children">
		<li class="comment even depth-2" id="comment-1254295">
				<div id="div-comment-1254295" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Pseudonym</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160628-00/?p=93765#comment-1254295">
			June 28, 2016 at 9:13 pm</a>		</div>

		<p>Nope, modern FPUs use the Goldschmidt algorithm to compute square roots.</p>
<p>To compute sqrt(x), start with y(0) as an approximation to 1/sqrt(b) (usually calculated using a lookup table, but see also Walsh&#8217;s method). Set b(0) = x, and iterate:</p>
<p>b(i) = b(i-1) y(i-1)^2<br />
y(i) = (3 &#8211; b(i)) / 2</p>
<p>Then sqrt(x) = b(0) * y(0) * y(1) * y(2) * &#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment odd alt thread-even depth-1 parent" id="comment-1254275">
				<div id="div-comment-1254275" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Azarien</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160628-00/?p=93765#comment-1254275">
			June 28, 2016 at 4:17 pm</a>		</div>

		<p>I hate the Windows 10 &#8220;modern&#8221; calculator so much, that I started writing my own.</p>

		
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-dwalker-wk even depth-2 parent" id="comment-1254316">
				<div id="div-comment-1254316" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/DWalker' rel='external nofollow' class='url'>DWalker</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160628-00/?p=93765#comment-1254316">
			June 29, 2016 at 6:03 am</a>		</div>

		<p>I spent $5.99 and 10 minutes of my time at a store, and I have a perfectly good calculator sitting on my desk.  </p>
<p>It only shows results to 12 digits though, but that&#8217;s good enough for most things.</p>

		
				</div>
		<ol class="children">
		<li class="comment odd alt depth-3" id="comment-1254475">
				<div id="div-comment-1254475" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Vince</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160628-00/?p=93765#comment-1254475">
			June 29, 2016 at 12:43 pm</a>		</div>

		<p>Does it have copy/paste? ;)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even depth-3" id="comment-1254556">
				<div id="div-comment-1254556" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Azarien</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160628-00/?p=93765#comment-1254556">
			June 30, 2016 at 4:41 am</a>		</div>

		<p>Cool. But does it have copy&amp;paste with the PC?</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment byuser comment-author-raykoopa odd alt depth-2 parent" id="comment-1254635">
				<div id="div-comment-1254635" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Ray+Koopa' rel='external nofollow' class='url'>Ray Koopa</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160628-00/?p=93765#comment-1254635">
			June 30, 2016 at 8:45 am</a>		</div>

		<p>You can install the old calculator. Just google for it =]</p>

		
				</div>
		<ol class="children">
		<li class="comment even depth-3" id="comment-1254745">
				<div id="div-comment-1254745" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">ender</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160628-00/?p=93765#comment-1254745">
			July 1, 2016 at 5:10 am</a>		</div>

		<p>I copied win32calc.exe from LTSB install.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment byuser comment-author-raykoopa odd alt thread-odd thread-alt depth-1" id="comment-1254625">
				<div id="div-comment-1254625" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Ray+Koopa' rel='external nofollow' class='url'>Ray Koopa</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160628-00/?p=93765#comment-1254625">
			June 30, 2016 at 8:44 am</a>		</div>

		<p>Sigh&#8230; guess we&#8217;ll never get close to Alpha Centauri.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1 parent" id="comment-1254806">
				<div id="div-comment-1254806" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Random832</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160628-00/?p=93765#comment-1254806">
			July 1, 2016 at 9:23 am</a>		</div>

		<p>The answer&#8217;s actually -8.1648465955514287168521180122928e-39 for me &#8211; quite a lot better, but still not exact. Not sure why the difference</p>
<p>&gt; compounded by the fact that the extended precision library does not have a custom algorithm dedicated to high-precision square roots.</p>
<p>Here&#8217;s the real issue. It&#8217;s confusing to people because &#8216;Everyone Knows&#8217; that &#8220;the square root function&#8221; (i.e. the regular double precision square root function, as used on many different apps such as Excel, the *old* calculator, etc) handles perfect squares (to include not only squares of integers but also any such number divided by any power of 4) just fine up to what can be represented in a double, and they expect an extended precision library to do the same or better.</p>

		
				</div>
		<ol class="children">
		<li class="comment odd alt depth-2" id="comment-1255035">
				<div id="div-comment-1255035" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">French Guy</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160628-00/?p=93765#comment-1255035">
			July 5, 2016 at 5:35 am</a>		</div>

		<p>The difference is which mode your calculator is in, like I said at the beginning of comments. Standard gives you the same answer as Raymond, while Scientific gives you this more precise answer.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment byuser comment-author-mndos even thread-odd thread-alt depth-1" id="comment-1255595">
				<div id="div-comment-1255595" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/MacIn173' rel='external nofollow' class='url'>MacIn173</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160628-00/?p=93765#comment-1255595">
			July 9, 2016 at 7:25 am</a>		</div>

		<p>The most funny part is that actually calculates 4^0.5 as 2, but 2-2 != 0.</p>
<p>In scientific mode: 4 Y 0.5 Enter gives you 2 (not some &#8220;almost 2&#8221;); &#8211; 2 Enter gives you 1,0605907030850721689734498566293e-38<br />
So, while showing correct &#8220;2&#8221; on screen, it keeps result internally not as an integer.</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

