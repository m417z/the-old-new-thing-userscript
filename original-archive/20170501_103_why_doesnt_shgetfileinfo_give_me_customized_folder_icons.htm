<html>
<head>
<title>Why doesn't SHGetFileInfo give me customized folder icons?</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>Why doesn&#8217;t SHGetFileInfo give me customized folder icons?</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>May 1, 2017 / year-entry #104</td></tr>
<tr><td><b>Tags:</b></td><td>code</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20170501-00/?p=96075</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>9</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">Because you asked for it that way.</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>
A customer reported that they were unable to
obtain cutomized folder icons.
Whenever they asked for the icon for a folder,
they always got a plain folder icon,
Even if they asked for folders
like My Documents, which 
come with their own custom icons.
The customer says that they are using the code from
<a HREF="https://www.codeproject.com/articles/2532/obtaining-and-managing-file-and-folder-icons-using">
this Web site</a>:
</p>
<pre>
public static System.Drawing.Icon GetFileIcon(string name, IconSize size, 
                                              bool linkOverlay)
{
    Shell32.SHFILEINFO shfi = new Shell32.SHFILEINFO();
    uint flags = Shell32.SHGFI_ICON | Shell32.SHGFI_USEFILEATTRIBUTES;
    
    if (true == linkOverlay) flags += Shell32.SHGFI_LINKOVERLAY;


    /* Check the size specified for return. */
    if (IconSize.Small == size)
    {
        flags += Shell32.SHGFI_SMALLICON ; // include the small icon flag
    } 
    else 
    {
        flags += Shell32.SHGFI_LARGEICON ;  // include the large icon flag
    }
    
    Shell32.SHGetFileInfo( name, 
        Shell32.FILE_ATTRIBUTE_NORMAL, 
        ref shfi, 
        (uint) System.Runtime.InteropServices.Marshal.SizeOf(shfi), 
        flags );


    // Copy (clone) the returned icon to a new object, thus allowing us 
    // to call DestroyIcon immediately
    System.Drawing.Icon icon = (System.Drawing.Icon)
                         System.Drawing.Icon.FromHandle(shfi.hIcon).Clone();
    User32.DestroyIcon( shfi.hIcon ); // Cleanup
    return icon;
}
</pre>
<p>
As I noted some time ago,
<a HREF="https://blogs.msdn.microsoft.com/oldnewthing/20040601-00/?p=39073">
the
<code>SHGFI_USE&shy;FILE&shy;ATTRIBUTES</code> flag means</a>
"Pretend that the file/directory exists,
and that its file attributes are what I passed as the dwFileAttributes parameter.
Do this regardless of whether it actually exists or not."
</p>
<p>
Since you're passing the flag,
and you say "Trust me, it's a directory,"
the shell says,
"Okay, then here's the icon for a standard directory.
I can't give you anything better than that
because you told me not to access the disk."
</p>
<p>
If you want to get the icon for a live file or directory,
then remove the
<code>SHGFI_USE&shy;FILE&shy;ATTRIBUTES</code> flag.
</p>
<p>
<b>Bonus chatter</b>:
Yes,
somebody posted a comment on that Web site asking
how to get the function to work for special folders,
and somebody else posted the same answer
(namely, remove the
<code>SHGFI_USE&shy;FILE&shy;ATTRIBUTES</code> flag).
But that question/answer was posted long after
our customer asked the question.</p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (9)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment byuser comment-author-bboorman even thread-even depth-1" id="comment-1294575">
				<div id="div-comment-1294575" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Brian_EE' rel='external nofollow' class='url'>Brian_EE</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170501-00/?p=96075#comment-1294575">
			May 1, 2017 at 7:34 am</a>		</div>

		<p>Another example of &#8220;You get what you pay for&#8221;.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1 parent" id="comment-1294585">
				<div id="div-comment-1294585" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Koro</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170501-00/?p=96075#comment-1294585">
			May 1, 2017 at 7:49 am</a>		</div>

		<p>This is what I hate about copy-paste code. People treating Win32 as a &#8220;black box&#8221; and wanting nothing to do with it, and only copy-pasting chunks of code from &#8220;p/invoke&#8221; websites without understanding.</p>
<p>That and this code is not exception-safe (could leak the shfi.hIcon) and it does not Dispose the initial icon object before calling DestroyIcon.</p>

		
				</div>
		<ol class="children">
		<li class="comment even depth-2 parent" id="comment-1294695">
				<div id="div-comment-1294695" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">ErikF</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170501-00/?p=96075#comment-1294695">
			May 1, 2017 at 10:35 am</a>		</div>

		<p>I also find adding bitflags to be dangerous; C# supports bitwise operators just fine (and they don&#8217;t do weird stuff if you duplicate flags!)</p>

		
				</div>
		<ol class="children">
		<li class="comment odd alt depth-3" id="comment-1294725">
				<div id="div-comment-1294725" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Koro</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170501-00/?p=96075#comment-1294725">
			May 1, 2017 at 11:48 am</a>		</div>

		<p>This code is obviously old VB WinForms code hastily ported to C#.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1294765">
				<div id="div-comment-1294765" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://nbtparse.org' rel='external nofollow' class='url'>Kevin</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170501-00/?p=96075#comment-1294765">
			May 1, 2017 at 4:30 pm</a>		</div>

		<p>&gt; flags +=</p>
<p>Ugh.  Bit flags are not numbers.  You don&#8217;t add them.  You bitwise-OR them.</p>
<p>Sure, it gives you the same result either way, and the performance difference is negligible to nonexistent.  But that&#8217;s not the point.  The point is that you&#8217;re doing something that doesn&#8217;t make logical sense.  If you accidentally add a flag twice, you get random garbage.  If you accidentally bitwise-OR it twice, nothing happens.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1 parent" id="comment-1294925">
				<div id="div-comment-1294925" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Alex Guteniev</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170501-00/?p=96075#comment-1294925">
			May 2, 2017 at 6:32 am</a>		</div>

		<p>How does SHGetFileInfo know that the path is a folder then, assuming FILE_ATTRIBUTE_DIRECTORY is not passed?</p>

		
				</div>
		<ol class="children">
		<li class="comment even depth-2" id="comment-1294927">
				<div id="div-comment-1294927" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">David Trapp</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170501-00/?p=96075#comment-1294927">
			May 2, 2017 at 6:44 am</a>		</div>

		<p>By accessing the path you passed and checking what type of file it is.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-wndsks odd alt depth-2" id="comment-1294945">
				<div id="div-comment-1294945" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/skSdnW' rel='external nofollow' class='url'>skSdnW</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170501-00/?p=96075#comment-1294945">
			May 2, 2017 at 7:31 am</a>		</div>

		<p>It doesn&#8217;t and the source article also knows this: &#8220;The code for GetFolderIcon is very similar to GetFileIcon, except that the dwFileAttributes parameter is passed Shell32.FILE_ATTRIBUTE_DIRECTORY as opposed to Shell32.FILE_ATTRIBUTE_NORMAL for files.&#8221;</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1295655">
				<div id="div-comment-1295655" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Alex Cohn</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170501-00/?p=96075#comment-1295655">
			May 9, 2017 at 10:15 pm</a>		</div>

		<p>Why doesn&#8217;t Explorer use this flag when it come across FILE_ATTRIBUTE_OFFLINE?</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

