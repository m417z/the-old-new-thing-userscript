<html>
<head>
<title>How is it possible to run Wordpad by just typing its name even though it isn't on the PATH?</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>How is it possible to run Wordpad by just typing its name even though it isn&#8217;t on the PATH?</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>July 25, 2011 / year-entry #178</td></tr>
<tr><td><b>Tags:</b></td><td>code</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20110725-00/?p=10073</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>29</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">In a comment completely unrelated to the topic, Chris Capel asks how Wordpad manages to run when you type its name into the Run dialog even though the command prompt can't find it? In other words, the Run dialog manages to find Wordpad even though it's not on the PATH. Chris was unable to find...</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>In a comment completely unrelated to the topic, Chris Capel asks <a href="http://blogs.msdn.com/oldnewthing/archive/2008/09/19/8957959.aspx#8958938"> how Wordpad manages to run when you type its name into the Run dialog even though the command prompt can't find it</a>? In other words, the Run dialog manages to find Wordpad even though it's not on the <code>PATH</code>.</p>
<p> Chris was unable to find anywhere I discussed this issue earlier, but it's there, just <a href="http://blogs.msdn.com/oldnewthing/archive/2004/09/01/223936.aspx"> with Internet Explorer as the application instead of Wordpad</a>. </p>
<p> It's through the magic of <code>App Paths</code>. </p>
<p> <code>App Paths</code> was introduced in Windows&nbsp;95 to address the <i>path pollution</i> problem. Prior to the introduction of <code>App Paths</code>, typing the name of a program without a fully-qualified path resulted in a search along the path, and if it wasn't found, then that was the end of that. File not found. As a result, it became common practice for programs, as part of their installation, to edit the user's <code>AUTOEXEC.BAT</code> and add the application's installation directory to the path. </p>
<p> This had a few problems. </p>
<p> First of all, editing <code>AUTOEXEC.BAT</code> is decidedlly nontrivial since batch files can have control flow logic like <code>IF</code> and <code>CALL</code> and <code>GOTO</code>. Finding the right <code>SET PATH=...</code> or <code>PATH ...</code> command is an exercise in code coverage analysis, especially since MS-DOS 6 added multi-config support to <code>CONFIG.SYS</code>, so the value of the <code>CONFIG</code> environment variable is determined at runtime. If you wanted to avoid hanging your setup program, you would have to <a href="http://blogs.msdn.com/b/ericlippert/archive/2011/02/24/never-say-never-part-two.aspx"> solve the Halting Problem</a>. (You can't just stick at <code>PATH ...</code> at the beginning because it might get wiped out by a later <code>PATH</code> command, and you can't just stick it at the end, because control might never reach last line of the batch file.) </p>
<p> And of course, very few uninstall programs would take the time to undo the edits the installer performed, and even if they tried, there's no guarantee that the undo would be successful, since the user (or another installer!) may have edited the <code>AUTOEXEC.BAT</code> file in the meantime. </p>
<p> Even if you postulate the existence of the <i><code>AUTOEXEC.BAT</code> editing fairy</i> who magically edits your <code>AUTOEXEC.BAT</code> for you, you still run into the <code>PATH</code> length limit. The maximum length of a command line was 128 characters in MS-DOS, and if each program added itself to the <code>PATH</code>, it wouldn't be long before the <code>PATH</code> reached its maximum length. </p>
<p> <b>Pre-emptive Yuhong Bao irrelevant detail that has no effect on the story</b>: Windows&nbsp;95 increased the maximum command line length, but the program being launched needed to know where to look for the "long command line". And that didn't help existing installers which were written against the old 128-character limit. Give them an <code>AUTOEXEC.BAT</code> with a line longer than 128 characters and you had a good chance that you'd hit a buffer overflow bug. </p>
<p> On top of the difficulty of adding more directories to the <code>PATH</code>, there was the recognition that this was another case of <a href="http://blogs.msdn.com/oldnewthing/archive/2008/12/11/9193695.aspx"> using a global setting to solve a local problem</a>. It seemed wasteful to add a directory to the path just so you could find <i>one file</i>. Each additional directory on the path slowed down path sarching operations, even the ones unrelated to locating that one program. </p>
<p> Enter <code>App Paths</code>. The idea here is that instead of adding your application directory to the path, you just create <a href="http://msdn.microsoft.com/ee872121.aspx"> an entry under the <code>App Paths</code> key</a> saying, "If somebody is looking to execute <code>contoso.exe</code>, I put it over here." Instead of adding an entire directory to the path, you just add a single file, and it's used only for application execution purposes, so it doesn't slow down other path search operations like loading DLLs. </p>
<p> (Note that <a href="http://msdn.microsoft.com/en-us/ms997545.aspx"> the old documentation on App Paths</a> has been superseded by the new documentation linked above.) </p>
<p> Now that there was a place to store information associated with a particular application, you may as well use it for other stuff as well. A secondary source of path pollution came from applications which added not only the application directory to the path, but also a helper directory where the application kept its DLLs. To address this, an additional <code>Path</code> value specified which directories your application wanted to be added to the path before it was executed. Over time, additional attributes were added to the <code>App Paths</code> key, such as <a href="http://blogs.msdn.com/b/oldnewthing/archive/2011/06/30/10181645.aspx"> the <code>UseUrl</code> value</a> we saw some time ago. </p>
<p> When you type the name of a program into the Run dialog (with no path), the <code>Shell&shy;Execute</code> function checks if the name corresponds to an application registered under <code>App Paths</code>. If so, then it uses the registration information to launch the application. Hooray, applications can be run by just typing their name without requiring them to modify the global path. </p>
<p> Note that this extra lookup is performed only by the <code>Sh&shy;ellExecute</code> family of functions, so if you use <code>Create&shy;Process</code> or <code>Search&shy;Path</code>, you'll still get <code>ERROR_<wbr>FILE_<wbr>NOT_<wbr>FOUND</wbr></wbr></wbr></code>. </p>
<p> Now, the intent was that the registered full path to the application is the same as the registered short name, just with a full path in front. For example, <code>wordpad.exe</code> registers the full path of <code>%ProgramFiles%\<wbr>Windows NT\<wbr>Accessories\<wbr>WORDPAD.EXE</wbr></wbr></wbr></code>. But there's no check that the two file names match. The Pbrush folks took advantage of this by registering an application path entry for <code>pbrush.exe</code> with a full path of <code>%SystemRoot%\<wbr>System32\<wbr>mspaint.exe</wbr></wbr></code>: That way, when somebody types <code>pbrush</code> into the Run dialog, they get redirected to <code>mspaint.exe</code>. </p>
<p> Sneaky. </p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (29)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-926503">
				<div id="div-comment-926503" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Helge Klein</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110725-00/?p=10073#comment-926503">
			July 25, 2011 at 7:17 am</a>		</div>

		<p>For once, I wrote about something before Raymond ;-) Here is my take on App Paths: <a rel="nofollow" target="_new" href="http://helgeklein.com/blog/2010/08/how-the-app-paths-registry-key-makes-windows-both-faster-and-safer/" rel="nofollow">helgeklein.com/&#8230;/how-the-app-paths-registry-key-makes-windows-both-faster-and-safer</a></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-926523">
				<div id="div-comment-926523" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Dan Bugglin</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110725-00/?p=10073#comment-926523">
			July 25, 2011 at 7:38 am</a>		</div>

		<p>I always wondered why there was no pbrush.exe stub for old programs. &nbsp;Now I know why&#8230; shellexecute will still work for legacy apps that want to launch paint.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-926533">
				<div id="div-comment-926533" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">NB</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110725-00/?p=10073#comment-926533">
			July 25, 2011 at 7:41 am</a>		</div>

		<p>Raymond, do you frown upon what the PBrush folks used App Paths for?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-926543">
				<div id="div-comment-926543" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">VirtualBlackFox</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110725-00/?p=10073#comment-926543">
			July 25, 2011 at 7:42 am</a>		</div>

		<p>Sadly as the console doesn&#39;t support them command line programs still need to rely on PATH and expose all files in their directories (As they did for years anyway)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-joshuaganes even thread-even depth-1" id="comment-926553">
				<div id="div-comment-926553" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Joshua+Ganes' rel='external nofollow' class='url'>Joshua Ganes</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110725-00/?p=10073#comment-926553">
			July 25, 2011 at 7:50 am</a>		</div>

		<p>You mention that this will not work if you call CreateProcess or similar. Was this intentional? If so, was it to address compatibility, to save development time, or was it a technical limitation?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-926563">
				<div id="div-comment-926563" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110725-00/?p=10073#comment-926563">
			July 25, 2011 at 8:15 am</a>		</div>

		<p>As you probably know, cmd.exe resolves App Paths as well. It&#39;s obviously not using ShellExecute as it passes command lines.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-926573">
				<div id="div-comment-926573" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">MikeCaron</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110725-00/?p=10073#comment-926573">
			July 25, 2011 at 8:22 am</a>		</div>

		<p>Joshua &#8211; my guess is to prevent something like</p>
<p>CreateProcess(&quot;myHelper.exe&quot;);</p>
<p>from executing &quot;C:someOtherProgrammyHelper.exe&quot; rather then their own &quot;myHelper.exe&quot;. (If you are using ShellExecute, it implies that you&#39;re executing an action like a User would. If you&#39;re using CreateProcess, you&#39;re executing an action like a cold, unfeeling program which is expected to supply the full path)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-926583">
				<div id="div-comment-926583" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">JM</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110725-00/?p=10073#comment-926583">
			July 25, 2011 at 8:30 am</a>		</div>

		<p>@VirtualBlackFox: that&#39;s what the START built-in is for. I think it&#39;s been around since Windows 95, same as app paths (but I might be wrong).</p>
<p>@Joshua (2nd): I don&#39;t know what cmd.exe you&#39;re using, but mine doesn&#39;t resolve App Paths if I just enter an executable name. What cmd.exe does do (even without START) is launch documents based on their extensions, but this requires that the document in question is on the search path.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-926593">
				<div id="div-comment-926593" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Evan</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110725-00/?p=10073#comment-926593">
			July 25, 2011 at 8:54 am</a>		</div>

		<p>@Mike Caron: Except that (at least according to Helge Klein&#39;s post) &#39;App Paths&#39; is the last place consulted for &#39;myHelper.exe&#39;.</p>
<p>It also has the (unfortunate?) side effect that App Paths is apparently not consulted when running a program from cmd.exe (try running pbrush from there).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-chuckop odd alt thread-odd thread-alt depth-1" id="comment-926603">
				<div id="div-comment-926603" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/ChuckOp' rel='external nofollow' class='url'>ChuckOp</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110725-00/?p=10073#comment-926603">
			July 25, 2011 at 9:19 am</a>		</div>

		<p>Presumably you don&#39;t want to mess with console behavior with something that is very specific to Windows and the shell.</p>
<p>You can get the behavior in the console by using the START command:</p>
<p>cd</p>
<p>REM This won&#39;t work</p>
<p>wordpad.exe</p>
<p>REM This will work</p>
<p>start wordpad.exe</p>
<p>[Second attempt to post comment]</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-926613">
				<div id="div-comment-926613" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">SimonRev</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110725-00/?p=10073#comment-926613">
			July 25, 2011 at 9:53 am</a>		</div>

		<p>Fortunately 4NT at least handles AppPaths. &nbsp;I actually didn&#39;t know that pbrush was a &quot;redirect&quot; to mspaint.exe, but lo and behold, I type in &quot;which pbrush&quot; in 4NT this morning and it prints out &quot;pbrush is an external : C:WINDOWSsystem32mspaint.exe&quot;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-926623">
				<div id="div-comment-926623" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Troll</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110725-00/?p=10073#comment-926623">
			July 25, 2011 at 10:33 am</a>		</div>

		<p>App paths is one of the coolest features in Windows and Microsoft has done a very poor job of making developers and users aware of it. Also, one strange thing is I see environment variables for system predefined paths but the paths I define myself don&#39;t support environment variables? I can&#39;t use %ProgramFiles%. One has to use absolute paths or Program Files but .. works only if Program Files is on your system drive.</p>
<div class="post">[<i>Did you remember to set the type to REG_<span style="color:#ff0000;">EXPAND</span>_SZ? -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-926633">
				<div id="div-comment-926633" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Gabe</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110725-00/?p=10073#comment-926633">
			July 25, 2011 at 10:50 am</a>		</div>

		<p>The easiest way to start WordPad is to just run &quot;write&quot; &#8212; it even works from the command line or CreateProcess!</p>
<p>This works because the Windows 3.x and earlier &quot;word processor&quot; was called Write.exe, so apps that displayed READMEs and such expected to be able to run WindowsWrite.exe (or the WindowsSystem32 version). When Win95 came around and replaced Write with WordPad, they made Write a stub that just invokes WordPad so as not to break everything that hardcoded one of those paths.</p>
<p>It&#39;s so convenient (only 5 letters instead of 7) that to this day I only ever type &quot;write&quot; instead of &quot;wordpad&quot;.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-926643">
				<div id="div-comment-926643" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Troll</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110725-00/?p=10073#comment-926643">
			July 25, 2011 at 11:31 am</a>		</div>

		<p>&quot;Did you remember to set the type to REG_EXPAND_SZ&quot;</p>
<p>Oops yes of course! Thanks.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-926673">
				<div id="div-comment-926673" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Jim</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110725-00/?p=10073#comment-926673">
			July 25, 2011 at 3:06 pm</a>		</div>

		<p>Oops, Gabe was actually saying something completely different, sorry!</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-926683">
				<div id="div-comment-926683" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Jim</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110725-00/?p=10073#comment-926683">
			July 25, 2011 at 5:17 pm</a>		</div>

		<p>Of course, if the comment software eats my comment, I don&#39;t need to apologise anyway. (I was apologising for posting a comment that misunderstood him slightly.)</p>
<p>My comment was: App Paths were useful back on XP for running things quickly. I tended to use &quot;winword&quot; to run Word and &quot;excel&quot; to (duh) run Excel. They&#39;re pretty redundant now, for users at least, with the new start menu. I can just type &quot;word&quot; or even &quot;wo&quot; and Windows guesses the right shortcut.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-jamesnt even thread-even depth-1" id="comment-926693">
				<div id="div-comment-926693" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/JamesNT' rel='external nofollow' class='url'>JamesNT</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110725-00/?p=10073#comment-926693">
			July 25, 2011 at 7:01 pm</a>		</div>

		<p>Back in the MS-DOS days I was bitten myself a few times by issues with apps writing to autoexec.bat to add themselves to the path. &nbsp;Games were infamaous for doing this. &nbsp;The most common issue I had was paths that were to long.</p>
<p>JamesNT</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-926703">
				<div id="div-comment-926703" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Worf</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110725-00/?p=10073#comment-926703">
			July 25, 2011 at 11:02 pm</a>		</div>

		<p>I think the reason CreateProcess() doesn&#39;t respect App Paths is becuase of the layering thing. CreateProcess, along with many others (Thread, File, etc) is a kernel level API call. You&#39;re aking the kernel to do the task directly, and the kernel has no idea about the fancy things everyone on top uses. It just loads a file and attempts to execute it through the loader.</p>
<p>ShellExecuteEx though, uses the shell conventions, so it can launch documents and other non-executables by using the shell-specific registrations that map documents to applications, app paths, etc. Once it finds the proper command line, ShellExecuteEx passes the kernel a proper command via CreateProcess&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-926713">
				<div id="div-comment-926713" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">ultramage</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110725-00/?p=10073#comment-926713">
			July 26, 2011 at 6:21 am</a>		</div>

		<p>Wow, thank you so much for this post! All these years I&#39;ve been filling my PATH variable with packages like svn, php, perl, python, and cygwin &#8211; whose installation instructions are just &quot;add directory to PATH&quot;. This will also help prevent dlls shipped with these apps from leaking everywhere.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-926723">
				<div id="div-comment-926723" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Alex Grigoriev</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110725-00/?p=10073#comment-926723">
			July 26, 2011 at 7:28 am</a>		</div>

		<p>Chuck Norris can solve the Halting Problem. He will halt the machine.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-926823">
				<div id="div-comment-926823" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">about:blank</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110725-00/?p=10073#comment-926823">
			July 26, 2011 at 10:07 am</a>		</div>

		<p>The Run dialog needs a &quot;Run as administrator privileges&quot; checkbox to be useful to launch programs under Vista/7.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-926883">
				<div id="div-comment-926883" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">AC</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110725-00/?p=10073#comment-926883">
			July 26, 2011 at 11:54 am</a>		</div>

		<p>I don&#39;t think you have to solve the HP. You already know that Windows is running, i.e. autoexec.bat did halt in some way. It would of course still be very much non-trivial and the wrong way to do things.</p>
<p>(Although I&#39;m not sure if I anger you by posting this. You seem to be irritated by YB posting OT side remarks, the nitpicker&#39;s corner might really upset you??)</p>
<div class="post">[<i>You&#39;re assuming nobody has edited autoexec.bat since boot. (And that the user did not perform a Shift+F8 step-by-step boot.) -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-926903">
				<div id="div-comment-926903" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Jim</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110725-00/?p=10073#comment-926903">
			July 26, 2011 at 12:20 pm</a>		</div>

		<p>@about:blank :</p>
<p>Unless you need a browse button, just use the search box in the start menu. Anything you type into Run will work there too (though it could potentially do something different, if there&#39;s a conflict). In fact even browsing for is faster there really (try typing &quot;C:&quot; and using the arrow keys). Plus it&#39;s one less keystroke to get there!</p>
<p>The punchline is, if you didn&#39;t already know, running something from the search box by pressing shift+enter instead of just enter runs as admin.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-jamesnt odd alt thread-odd thread-alt depth-1" id="comment-926923">
				<div id="div-comment-926923" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/JamesNT' rel='external nofollow' class='url'>JamesNT</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110725-00/?p=10073#comment-926923">
			July 26, 2011 at 1:11 pm</a>		</div>

		<p>@AC</p>
<p>There are times when I think Mr. Chen does enjoy calling people out on some of the more &quot;special&quot; things they say. &nbsp;However, there are times he is obviously irritated. &nbsp;One never knows regarding one with the personality of a thermonuclear device. &nbsp;:)</p>
<p>JamesNT</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-926933">
				<div id="div-comment-926933" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Gabe</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110725-00/?p=10073#comment-926933">
			July 26, 2011 at 2:10 pm</a>		</div>

		<p>Jim: Do you mean Ctrl+Shift+Enter? Just Shift+Enter doesn&#39;t do anything different for me.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-926983">
				<div id="div-comment-926983" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Kelden</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110725-00/?p=10073#comment-926983">
			July 27, 2011 at 1:15 am</a>		</div>

		<p>Why is PowerShell set in the PATH then?</p>
<p>On every new installation of Windows (7 tested), I have</p>
<p>C:WindowsSystem32WindowsPowerShellv1.0</p>
<p>in my PATH</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-927063">
				<div id="div-comment-927063" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">benjamin</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110725-00/?p=10073#comment-927063">
			July 27, 2011 at 9:24 am</a>		</div>

		<p>@Gabe: I do the same thing with pbrush. I still call MS Paint &#39;Paintbrush&#39; anyway.</p>
<p>Of course, I also still close windows by double-clicking the top left, so maybe I&#39;m just set in my ways.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-927143">
				<div id="div-comment-927143" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Jim</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110725-00/?p=10073#comment-927143">
			July 27, 2011 at 11:22 am</a>		</div>

		<p>Gabe: Oops, you&#39;re right, thanks.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-927453">
				<div id="div-comment-927453" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Aaron</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110725-00/?p=10073#comment-927453">
			July 29, 2011 at 5:12 am</a>		</div>

		<p>What happens if I were to write my new super text editor and decide to call it WORDPAD.EXE and try to set its App Path? &nbsp;Would registration fail or would it register but only ever find MS WORDPAD.EXE as it was registred first?</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

