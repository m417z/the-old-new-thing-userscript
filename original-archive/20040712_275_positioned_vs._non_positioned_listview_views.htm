<html>
<head>
<title>Positioned vs. non-positioned listview views</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>Positioned vs. non-positioned listview views</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>July 12, 2004 / year-entry #276</td></tr>
<tr><td><b>Tags:</b></td><td>code</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20040712-00/?p=38483</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>7</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">Occasionally, I'll see a question that betrays a lack of understanding of difference between the positioned and non-positioned listview views. The question usually goes along the lines of "I inserted an item with LVM_INSERTITEM but it went to the end of the list instead of in the location I inserted it." To understand what is...</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>Occasionally, I'll see a question that betrays a lack of understanding  of difference between the positioned and non-positioned listview views.  The question usually goes along the lines of "I inserted an item  with LVM_INSERTITEM but it went to the end of the list instead of in  the location I inserted it."</p>
<p>  To understand what is going on, you need to know that some listview  views are "positioned" and others are "non-positioned".  </p>
<p>  "(Large) icon view", "small icon view", and "tile view" are  positioned views.  Each item carries its own coordinates,  which you can customize via LVM_SETITEMPOSITION.  When a new item  is inserted, it gets an item index based on the insertion  point, but its physical location on the screen is the first available  space not already occupied by another item. Existing items are not  moved around to make room for the inserted item.  </p>
<p>  The other views, "list view" and "report (aka details) view",  are non-positioned views.  In these views, items do not get to  choose their positions.  Instead, the position of an item is  determined by its item index.  In non-positioned views,  inserting or deleting  an item will indeed cause all subsequent items to shift.  </p>
<p>  Now you can answer the question.  Why did the item go to the  end of the list instead of at the position the caller inserted it?  </p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (7)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-194053">
				<div id="div-comment-194053" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.codeproject.com/script/articles/list_articles.asp?userid=152' rel='external nofollow' class='url'>Mike Dunn</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040712-00/?p=38483#comment-194053">
			July 12, 2004 at 9:00 am</a>		</div>

		<p>The mistake I see most often is people using LVM_INSERTITEM to add text to columns 2 and beyond, instead of LVM_SETITEMTEXT. There&#8217;s a leaky abstraction there in that LVM_INSERTITEM inserts a whole <em>row</em> and you have to use some other message for the later columns.</p>
<p>Thinking that you use LVM_INSERTITEM for those columns seems like a natural assumption since LVITEM has a iSubItem member.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-194063">
				<div id="div-comment-194063" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://weblogs.asp.net/oldnewthing/' rel='external nofollow' class='url'>Raymond Chen</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040712-00/?p=38483#comment-194063">
			July 12, 2004 at 9:02 am</a>		</div>

		<p>Nothing leaky about it. The abstraction is maintained. There are items and subitems.</p>
<p>What would it mean to &quot;insert a subitem&quot;?  Would all the subsequent subitems shift down by one? What happens to the last subitem that doesn&#8217;t have a column?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-194123">
				<div id="div-comment-194123" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.codeproject.com/script/articles/list_articles.asp?userid=152' rel='external nofollow' class='url'>Mike Dunn</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040712-00/?p=38483#comment-194123">
			July 12, 2004 at 11:03 am</a>		</div>

		<p>I think it&#8217;s leaky because it&#8217;s exposing the fact that an &quot;item&quot; means &quot;a whole row&quot;. You first use LVM_INSERTITEM which sets the text in subitem 0. LVM_INSERTITEM also inserts an empty string in all subsequent subitems, but from just looking at the list you wouldn&#8217;t know this.<br />
<br />So Joe Newbie Programmer thinks, &quot;ok now I need to put a string in subitem 1, so I&#8217;ll use LVM_INSERTITEM again and set LVITEM::iSubItem to 1&quot;. Of course, this is wrong. He has to figure out (or have someone explain) that there&#8217;s a different message he has to use for subitems 1 to n.</p>
<p>It&#8217;s one of those things that, once you learn the right way, you don&#8217;t forget it. But the first time is always a bit weird because until you start coding with a list control, you don&#8217;t know that subitem 0 is different from the others.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-194283">
				<div id="div-comment-194283" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://weblogs.asp.net/oldnewthing' rel='external nofollow' class='url'>Raymond Chen</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040712-00/?p=38483#comment-194283">
			July 12, 2004 at 7:50 pm</a>		</div>

		<p>That&#8217;s not a leaky abstraction. It&#8217;s an abstraction that may be have been poorly-designed, but it&#8217;s still an abstraction.</p>
<p>Item = unit of selection (includes icon, text, state, supplementary info)</p>
<p>Subitem 0 = item text</p>
<p>Subitem &gt;0 = supplementary info</p>
<p>The confusing bit is that subitem=0 means &quot;the item&#8217;s text&quot;.</p>
<p>There is no implementation &quot;leaking out&quot; &#8211; you might think that the implementation is leaking out &#8211; that listview internally has a list of subitems and subitem 0 happens to be the item text &#8211; but in fact that&#8217;s not how listview organizes the items internally.</p>
<p>If you still claim that something is leaking out, the thing that is &quot;leaking&quot; isn&#8217;t even the implementation.<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-194293">
				<div id="div-comment-194293" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.codeproject.com/script/articles/list_articles.asp?userid=152' rel='external nofollow' class='url'>Mike Dunn</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040712-00/?p=38483#comment-194293">
			July 12, 2004 at 8:43 pm</a>		</div>

		<p>OK, we agree that there&#8217;s a hurdle there for newbies, but we disagree on what to call it. ;)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-195803">
				<div id="div-comment-195803" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://weblogs.asp.net/bencon' rel='external nofollow' class='url'>Ben Constable</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040712-00/?p=38483#comment-195803">
			July 15, 2004 at 10:36 pm</a>		</div>

		<p>When is ListView going to have editable subitems? This is something that I have wanted for a long time.<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-195823">
				<div id="div-comment-195823" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://weblogs.asp.net/oldnewthing/' rel='external nofollow' class='url'>Raymond Chen</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040712-00/?p=38483#comment-195823">
			July 15, 2004 at 10:40 pm</a>		</div>

		<p>Remember, folks, this blog is about history not about the future.</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

