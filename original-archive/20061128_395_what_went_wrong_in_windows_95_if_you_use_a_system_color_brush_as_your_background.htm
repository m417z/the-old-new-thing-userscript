<html>
<head>
<title>What went wrong in Windows 95 if you use a system color brush as your background brush?</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>What went wrong in Windows 95 if you use a system color brush as your background brush?</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>November 28, 2006 / year-entry #396</td></tr>
<tr><td><b>Tags:</b></td><td>code;history</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20061128-06/?p=28893</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>24</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">If you want to register a window class and use a system color as its background color, you set the hbrBackground member to the desired color, plus one, cast to an HBRUSH: wc.hbrBackground = (HBRUSH)(COLOR_WINDOW + 1); Windows 95 introduced "system color brushes", which are a magic type of brush which always paint in the corresponding...</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>
If you want to register a window class and use a system color
as its background color, you set the <code>hbrBackground</code> member
to the desired color, plus one, cast to an <code>HBRUSH</code>:
</p>
<pre>
wc.hbrBackground = (HBRUSH)(COLOR_WINDOW + 1);
</pre>
<p>
Windows&nbsp;95 introduced "system color brushes",
which are a magic type of brush which always paint in the
corresponding system color, even if the system color changes.
</p>
<pre>
HBRUSH hbrWindow = GetSysColorBrush(COLOR_WINDOW);
</pre>
<p>
The <code>hbrWindow</code> brush will always paint in the
color corresponding to <code>GetSysColor(COLOR_WINDOW)</code>,
even if the user changes the color scheme later.
</p>
<p>
Now, you might be tempted to use a system color brush as
your class background brush.
After all, if you want the background to be the system window color,
why not use a brush that is always the system window color?
</p>
<p>
Well, because the documentation for <code>GetSysColorBrush</code>
explicitly tells you not to do that.
If you tried this on Windows&nbsp;95, it would have seemed to work
for a while, and then bad things would start happening.
</p>
<p>
The system color brushes were added as a convenience to save people
the trouble of having to create solid color brushes just to draw
a system color.
Profiling in Windows&nbsp;95 revealed that a lot of time was
spent by applications creating solid brushes, using them briefly,
and then destroying them, so anything that could be done to reduce
the rate at which applications needed to do this was a good thing.
</p>
<p>
The system color brushes were implemented in Windows&nbsp;95
by creating them and then telling GDI, "Hey, if somebody tries
to <code>DeleteObject</code> this brush, don't let them."
This prevented the system color brushes from being accidentally
destroyed.
</p>
<p>
Except when it didn't.
</p>
<p>
When you registered a window class with a background brush
(and by that, I mean an honest-to-goodness brush and not a
pseudo-brush you get from that
<code>(HBRUSH)(COLOR_xxx + 1)</code> stuff)
the window manager did the same thing to the brush as it
did to the system color brushes: It told GDI,
"Hey, if somebody tries
to <code>DeleteObject</code> this brush, don't let them."
This prevented people from destroying brushes while the window
manager was still using them to draw the background of a window.
</p>
<p>
When you unregistered the window class, the window manager told
GDI, "Okay, delete this brush, and yes, I told you not to let
anyone <code>DeleteObject</code> it, but I'm overriding it
because I was the one who protected it in the first place.
I'm just cancelling my previous instructions to protect this brush."
The window manager takes responsibility for
destroying the brush when you register the class;
therefore, when you unregister the class, the window manager
is obligated to clean up and destroy the brush.
(Actually, it's a little more complicated than that, because it is
legal to use one brush as the background brush for multiple
window classes, but let's ignore that case for now.)
</p>
<p>
Do you see the problem yet?
</p>
<p>
What if you registered a window class with a system color brush
as the background brush and then unregistered it?
(Don't forget that classes are automatically unregistered when
the process exits.)
When you registered the class, the brush got protected,
and when you unregistered the class, the Windows&nbsp;95 window manager
<strong>told GDI to override the protection and
destroy the brush anyway</strong>.
</p>
<p>
Oops, we just destroyed a system color brush.
Even though those brushes were protected,
the protection didn't work here because you went through the
code path where the window manager said,
"Override the safety interlocks!"
</p>
<p>
But of course, you didn't need to use a system color brush in the
first place.
You should have used that
<code>(HBRUSH)(COLOR_xxx + 1)</code> pseudo-brush.
</p>
<p>
(Note to nitpickers: This story talked about Windows&nbsp;95.
It does not apply to any other version of Windows.
The problem may or may not exist in those other versions;
I make no claims.)</p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (24)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-445833">
				<div id="div-comment-445833" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Bob</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20061128-06/?p=28893#comment-445833">
			November 28, 2006 at 10:17 am</a>		</div>

		<p>So what happened when people went down this code path? Palette corruption? Random crashes?</p>
<p>For that matter, what tipped you guys off that people were doing this?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-445843">
				<div id="div-comment-445843" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Peter Ritchie</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20061128-06/?p=28893#comment-445843">
			November 28, 2006 at 10:40 am</a>		</div>

		<p>What happens? &nbsp;Now they&#8217;re using a brush handle that in the best case is just &quot;freed&quot;, or it has been re-used as a different colour brush. &nbsp;Worst case, it&#8217;s not a brush handle anymore and who knows what will happen in that case&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-445853">
				<div id="div-comment-445853" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Frederik Slijkerman</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20061128-06/?p=28893#comment-445853">
			November 28, 2006 at 10:45 am</a>		</div>

		<p>It would have been better if the Win95 developers would have introduced a new &#8216;system&#8217; flag for brushes instead of re-using the &#8216;do not delete because I am a class brush&#8217; flag&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-445863">
				<div id="div-comment-445863" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">JS</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20061128-06/?p=28893#comment-445863">
			November 28, 2006 at 10:56 am</a>		</div>

		<p>I love you, .NET.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-445893">
				<div id="div-comment-445893" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Aaron</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20061128-06/?p=28893#comment-445893">
			November 28, 2006 at 11:05 am</a>		</div>

		<p>re: Frederik</p>
<p>Yeah, on casual analysis this just looks like bad design. &nbsp;Don&#8217;t implement an optimization and then break that very same optimization by implementing something that unregisters/destroys/whatever the handle regardless. &nbsp;Couldn&#8217;t the code check to see if the handle was some sort of special &quot;immortal&quot; handle and not tear it down in that case? &nbsp;Where these two features implemented by different groups or something?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-445933">
				<div id="div-comment-445933" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">GregM</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20061128-06/?p=28893#comment-445933">
			November 28, 2006 at 12:17 pm</a>		</div>

		<p>I take it that &quot;don&#8217;t destroy this&quot; was just a flag and not a reference count.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-445953">
				<div id="div-comment-445953" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">ping?</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20061128-06/?p=28893#comment-445953">
			November 28, 2006 at 12:36 pm</a>		</div>

		<p>Why wasn&#8217;t it done with a reference count in the first place?&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-446023">
				<div id="div-comment-446023" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Mike</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20061128-06/?p=28893#comment-446023">
			November 28, 2006 at 1:44 pm</a>		</div>

		<p>Isn&#8217;t hindsight wonderful? &nbsp;Obviously what happened was that originally there wasn&#8217;t (and as far as I know still isn&#8217;t) any support for reference counted brushes. &nbsp;Nothing wrong with that, it wasn&#8217;t deemed necessary in the original design.</p>
<p>So then along comes sombody who notices this perf issue. &nbsp;The GDI guys already have a mechanism to prevent &quot;system&quot; brushes from being deleted so it&#8217;s a trivial feature to implement. &nbsp;They either don&#8217;t remember or don&#8217;t know that the USER guys (a different team remember) are already monkeying around with this flag on thier own whim and boom you have a bug.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-446033">
				<div id="div-comment-446033" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Gabe</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20061128-06/?p=28893#comment-446033">
			November 28, 2006 at 1:51 pm</a>		</div>

		<p>Keep in mind this was 1995. Back then programmers were expected to cooperate with the system, and documenting what not to do was considered sufficient. That&#8217;s laughable now in the days where users must be protected from programmers, but it wasn&#8217;t then.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-446053">
				<div id="div-comment-446053" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Kuwanger</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20061128-06/?p=28893#comment-446053">
			November 28, 2006 at 2:40 pm</a>		</div>

		<p>&#8220;Keep in mind this was 1995. Back then programmers were expected to<br />
cooperate with the system, and documenting what not to do was<br />
considered sufficient.&#8221;</p>
<p>I disagree. &nbsp;While it was the case that many people were used<br />
to the idea, having moved over from Win16, and it was assumed that<br />
programmers weren&#8217;t nefarious, it wasn&#8217;t the case that it was assumed<br />
documentation would be a sufficient protection.</p>
<p>Simply put, programs crashed because of bugs. &nbsp;One of the main<br />
selling points of Windows 95, over Windows 3.11, was a greatly<br />
increased resistance to program crashes causing system-wide failures<br />
(along, of course, with a 32-bit api). &nbsp;Yet competitors of the<br />
time (OS/2 and Windows NT being good examples) implemented a truly<br />
separate memory address space (ie, they didn&#8217;t, AFAIK, leave critical<br />
shared DLLs in a read/writeable share arena where any program could do<br />
nasty things effecting all running programs) and worked to resolve<br />
misbehaving programs from causing the system to crash or other programs<br />
running at the same time to malfunction in unexpected (for the user)<br />
ways; ie, a programmer gotcha wouldn&#8217;t be covered and programs that did<br />
malfunction would almost certainly rapidly crash themselves alone.</p>
<p>Having said all that, this was clearly a bug and an oversight in the<br />
original design. &nbsp;Whoever designed it clearly wasn&#8217;t thinking far<br />
enough ahead to actual usage. &nbsp;Certainly such is a common affair<br />
in programming (sadly), but that doesn&#8217;t really excuse in any way this<br />
instance. &nbsp;In any case, it sounds like old news and an interesting<br />
example of how a simple design change many times need more thought put<br />
into it.</p>
<div class="post">[<i>System color brushes were a new Windows 95<br />
feature. I thought you folks decided that people who mis-use new<br />
features deserve what they get. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-446083">
				<div id="div-comment-446083" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">waleri</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20061128-06/?p=28893#comment-446083">
			November 28, 2006 at 3:41 pm</a>		</div>

		<p>For me is much more interesting, why the value is +1</p>
<div class="post">[<i>You should be able to figure this out on your own. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-446093">
				<div id="div-comment-446093" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Kuwanger</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20061128-06/?p=28893#comment-446093">
			November 28, 2006 at 3:44 pm</a>		</div>

		<p>&quot;System color brushes were a new Windows 95 feature. I thought you folks decided that people who mis-use new features deserve what they get.&quot;</p>
<p>Perhaps I&#8217;m not understanding the effects of destroying the system color brushes, but does that have a system-wide effect? &nbsp;If so, I&#8217;d like to point out that memory protection was also a new Windows 95 feature. &nbsp;It&#8217;d seem appropriate to make either the system color brushes read-only to processes or give each process their own copy.</p>
<p>If, however, system color brushes are local to a process only and the effect is merely one application trashing itself, then I guess I don&#8217;t see it as much of a big deal. &nbsp;It&#8217;d probably help if I were to study the MSDN before spouting off, eh?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-446173">
				<div id="div-comment-446173" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">640k</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20061128-06/?p=28893#comment-446173">
			November 28, 2006 at 7:16 pm</a>		</div>

		<blockquote><p>
  [You should be able to figure this out on your own. -Raymond]
</p></blockquote>
<p>Does that reply mean:</p>
<ol>
<li>It&#8217;s obvious and too time consuming for you to explain.</li>
<li>
<p>You don&#8217;t know.</p>
</li>
<li>
<p>A polite way to tell people to use the suggestion box instead.</p>
</li>
<li>
<p>You really think all readers are able to figure this out on their own.</p>
</li>
</ol>
<p>PS I&#8217;m not able to figure this out on my own.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-446193">
				<div id="div-comment-446193" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Stu</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20061128-06/?p=28893#comment-446193">
			November 28, 2006 at 8:18 pm</a>		</div>

		<p>So what you&#8217;re saying, Raymond, is that there is a bug in Windows 95&#8217;s handling of system colour brushes in conjunction with Window backgrounds?</p>
<p>So why wasn&#8217;t it fixed!? I can understand keeping bug-compatability with older versions of Windows, but this was a new feature!</p>
<div class="post">[<i>What&#8217;s to fix? Programs that encountered this problem were breaking the rules. They deserved to lose. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-446203">
				<div id="div-comment-446203" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Neal</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20061128-06/?p=28893#comment-446203">
			November 28, 2006 at 8:23 pm</a>		</div>

		<p>I haven&#8217;t done any programming in 5 years, and did very little gdi stuff when I did, but I&#8217;ll take a guess at it. &nbsp;COLOR_XXX&#8217;s are defined starting at 0, hence the first would give you a null brush, which is either not a good thing or it has a special meaning (believe this is the case) therefore the +1.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-446213">
				<div id="div-comment-446213" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Chris</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20061128-06/?p=28893#comment-446213">
			November 28, 2006 at 8:25 pm</a>		</div>

		<p>640k,</p>
<p>Check out the COLOR_XXXX #defines in winuser.h, especially COLOR_SCROLLBAR</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-446243">
				<div id="div-comment-446243" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Norman Diamond</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20061128-06/?p=28893#comment-446243">
			November 29, 2006 at 3:26 am</a>		</div>

		<p>&gt; The (HBRUSH)(COLOR_xxx+1) thing existed since</p>
<p>&gt; Windows 1.0 and always created a tracking</p>
<p>&gt; pseudo-brush.</p>
<p>I thought this description in the base note</p>
<p>&gt; Windows 95 introduced &#8220;system color brushes&#8221;,</p>
<p>&gt; which are a magic type of brush which always</p>
<p>&gt; paint in the corresponding system color, even</p>
<p>&gt; if the system color changes.</p>
<p>meant that the older type didn&#8217;t magically track system colour changes.</p>
<div class="post">[<i>The (HBRUSH)(COLOR_xxx+1) pseudo-brushes always<br />
tracked. GetSysColorBrush provides real-brush equivalents to those<br />
pseudo-brushes (which work only in window class background<br />
registration). -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-446223">
				<div id="div-comment-446223" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Norman Diamond</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20061128-06/?p=28893#comment-446223">
			November 28, 2006 at 8:54 pm</a>		</div>

		<p>&gt; But of course, you didn&#8217;t need to use a</p>
<p>&gt; system color brush in the first place. You</p>
<p>&gt; should have used that (HBRUSH)(COLOR_xxx + 1)</p>
<p>&gt; pseudo-brush.</p>
<p>But of course you[*] DID need to use a system colour brush in the first place. &nbsp;When you discovered that you had to use that (HBRUSH)(COLOR_xxx + 1) pseudo-brush instead, you lost the following capability:</p>
<p>&gt; a magic type of brush which always paint in</p>
<p>&gt; the corresponding system color, even if the</p>
<p>&gt; system color changes</p>
<p>Pedantic correction to my own writing: &nbsp;you[*] didn&#8217;t lose that capability because</p>
<p>&gt; it seemed to work for a while, and then bad</p>
<p>&gt; things would start happening.</p>
<p>So you[*] never had that capability in the first place, you lost a misguided hope of having that capability. &nbsp;Still, I see how the idea sure looked attractive to programmers of the day, just as you[**] did.</p>
<p>[* &#8220;you&#8221; = impersonal 2nd-person developer not Mr. Chen]</p>
<p>[** &#8220;you&#8221; = Mr. Chen, just to add an off-topic token abuse of an ambiguous grammar]</p>
<div class="post">[<i>I don&#8217;t know what you&#8217;re talking about. The (HBRUSH)(COLOR_xxx+1) thing existed since Windows 1.0 and always created a tracking pseudo-brush. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-446253">
				<div id="div-comment-446253" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Jon</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20061128-06/?p=28893#comment-446253">
			November 29, 2006 at 5:30 am</a>		</div>

		<p>a bit offtopic, but would you care to comment about the vista shutdown menu discussion?</p>
<div class="post">[<i>If you&#8217;ve been following this site you&#8217;d know<br />
that is not something I write about. (What&#8217;s the title of this blog<br />
again?) All I&#8217;m going to say is that there&#8217;s more to it than people<br />
make it out to be. All you&#8217;ve seen so far is one side of the story.<br />
-Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-kjkhyperion odd alt thread-odd thread-alt depth-1" id="comment-446273">
				<div id="div-comment-446273" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">KJK::Hyperion</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20061128-06/?p=28893#comment-446273">
			November 29, 2006 at 6:42 am</a>		</div>

		<p>Jon, I will comment if it&#8217;s the same to you. That article is full of shit. Windows gives exactly two options, and they are the right ones, you know, those Joel pleads for, and I don&#8217;t understand what the hell the article is even about. Maybe about that &quot;advanced&quot; pop-up menu nobody concerned will ever see</p>
<p>The new &quot;sleep mode&quot; that debuts in Vista is also the &quot;right choice&quot;: it works as stand-by, i.e. instant power-on, but behind the scenes it also performs a hibernate, so when the power goes off or 20 minutes pass, the computer safely turns off and your session is preserved</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-446283">
				<div id="div-comment-446283" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Stu</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20061128-06/?p=28893#comment-446283">
			November 29, 2006 at 7:04 am</a>		</div>

		<p>&#8220;[What&#8217;s to fix? Programs that encountered this problem were breaking the rules. They deserved to lose. -Raymond]&#8221;</p>
<p>But in this case, seeing as it is a new feature and all, the &#8220;rules&#8221; were probably written around the bug.</p>
<div class="post">[<i>It was designed that way on purpose. The<br />
assumption is that programmers aren&#8217;t stupid. Programming is hard<br />
because nobody said it was going to be easy. Before commenting further<br />
please read <a href="http://blogs.msdn.com/oldnewthing/archive/2005/10/21/483438.aspx" rel="nofollow">this article</a>. I get the feeling most of the people saying that it&#8217;s a bug don&#8217;t understand the mindset of the day. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-447053">
				<div id="div-comment-447053" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">0x0d</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20061128-06/?p=28893#comment-447053">
			November 30, 2006 at 5:21 pm</a>		</div>

		<p>nice example how bug turns into feature, when nobody want fix it :)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-447123">
				<div id="div-comment-447123" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Norman Diamond</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20061128-06/?p=28893#comment-447123">
			November 30, 2006 at 8:17 pm</a>		</div>

		<blockquote><p>
  If you want Windows NT you know where to get</p>
<p>  it.
</p></blockquote>
<p>On its own that statement is true, but it&#8217;s not a valid answer to complaints about Windows 95. &nbsp;People who wanted to pay for Windows NT instead of paying for Windows 95 (or 98) didn&#8217;t know where to get it. &nbsp;Unless we could make do with slyly configured crippled selections of hardware from about two vendors, we had to pay twice in order to get Windows NT.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-447063">
				<div id="div-comment-447063" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">0x0d</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20061128-06/?p=28893#comment-447063">
			November 30, 2006 at 5:25 pm</a>		</div>

		<p>/*It was designed that way on purpose. The assumption is that programmers aren&#8217;t stupid.*/</p>
<p>But note that win&#8217;95 pretended to be multitasking OS. So it should at least _try_ to protect programs from being corrupted by closing handles from other programs. So this is a bug in this protection.</p>
<div class=post>[<i>If you want Windows NT you know where to get it. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

