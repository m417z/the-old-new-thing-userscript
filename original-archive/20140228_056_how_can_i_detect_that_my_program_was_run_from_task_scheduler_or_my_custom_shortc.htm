<html>
<head>
<title>How can I detect that my program was run from Task Scheduler, or my custom shortcut, or a service, or whatever</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>How can I detect that my program was run from Task Scheduler, or my custom shortcut, or a service, or whatever</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>February 28, 2014 / year-entry #57</td></tr>
<tr><td><b>Tags:</b></td><td>code</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20140228-00/?p=1633</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>53</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">Suppose you want your program to behave differently depending on whether it is launched from the Start menu, or by clicking the pinned icon on the taskbar, or by Scheduled Task, or from a service, or whatever. How can a program detect and distinguish these scenarios? The answer is you don't. And you shouldn't try....</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>Suppose you want your program to behave differently depending on whether it is launched from the Start menu, or by clicking the pinned icon on the taskbar, or by Scheduled Task, or from a service, or whatever. How can a program detect and distinguish these scenarios?</p>
<p> The answer is you don't. <i>And you shouldn't try</i>. </p>
<p> Instead of trying to guess how your program was executed, you should have the launcher <i>tell you</i> how they are executing your program. You do this by registering a different command line for each of the scenarios, and then checking for that command line in the program. (We saw a variation of this <a href="http://blogs.msdn.com/b/oldnewthing/archive/2014/02/21/10501953.aspx"> a little while ago</a>.) </p>
<p> For example, you could have your Start menu shortcut contain one command line parameter, <a href="http://blogs.msdn.com/b/oldnewthing/archive/2011/06/01/10170113.aspx"> give the taskbar pinned shortcut a different command line parameter</a>, register yet another command line parameter with the task scheduler, and have the service launch the program with a still different command line parameter. </p>
<p> They all run the same program, but the command line parameter lets the program know what context it is being run in and alter its behavior accordingly. </p>
<p> It's like creating multiple email addresses that all map to the same inbox. Many email services let you take an email address and <a href="http://windowsteamblog.com/windows_live/b/windowslive/archive/2011/02/03/hotmail-delivers-aliases-to-help-you-manage-and-secure-your-email-account.aspx"> insert a plus sign followed by anything else you like</a> before the at-sign, and it'll all get delivered to the same inbox. The thing after the plus-sign is ignored for delivery purposes, but you can use it to help organize your inbox, so you know that the message sent to <i>bob+expos@contoso.com</i> is related to your fantasy baseball team, whereas <i>bob+ff@contoso.com</i> is something about your frequent flier account. </p>
<p> One thing you shouldn't do is try to guess, however. Programs that magically change their behavior based on details of the environment lead to problems that are very difficult to debug. </p>
<p> Given this discussion, perhaps you can provide guidance to this customer: </p>
<blockquote class="q"><p> How can my DLL detect that it is running inside a service? </p>
</blockquote>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (53)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-1109543">
				<div id="div-comment-1109543" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Damien</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140228-00/?p=1633#comment-1109543">
			February 28, 2014 at 7:03 am</a>		</div>

		<p>Have the service tell the DLL during an initialization stage or during usage &quot;hey, I&#39;m a service by the way.&quot;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1109553">
				<div id="div-comment-1109553" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Paul Z</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140228-00/?p=1633#comment-1109553">
			February 28, 2014 at 7:03 am</a>		</div>

		<p>I assume the answer to the question is: It can&#39;t, and you are a bad person for wanting to. If you really need to know, arrange for the service to tell you, by calling an API that means &quot;Hey, you&#39;re inside a service!&quot;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1109563">
				<div id="div-comment-1109563" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140228-00/?p=1633#comment-1109563">
			February 28, 2014 at 7:06 am</a>		</div>

		<p>I normally would respond with something like &quot;What are you planning on doing with that information?&quot; Also, if you think you know how to check you don&#39;t. I use a program regularly that runs as a service but services.exe is not the parent process and spawns interactive children.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1109573">
				<div id="div-comment-1109573" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">SMW</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140228-00/?p=1633#comment-1109573">
			February 28, 2014 at 7:21 am</a>		</div>

		<p>It&#39;s a shame that Bob is still using the Expos in his fantasy baseball league. &nbsp;No wonder he keeps doing poorly.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1109583">
				<div id="div-comment-1109583" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ian Boyd</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140228-00/?p=1633#comment-1109583">
			February 28, 2014 at 7:21 am</a>		</div>

		<p>Bonus Chatter</p>
<p>As of Windows Vista, the &quot;Allow service to interact with desktop&quot; checkbox on a service&#39;s &quot;Log On&quot; tab is vestigial. It does nothing. </p>
<p>If you attempt to start any service with the option checked, the Service Control Manager will generate an event 7030 (EVENT_SERVICE_NOT_INTERACTIVE) in the System event log:</p>
<p>&gt; The %1 service is marked as an interactive service. However, the system is configured to not allow interactive services. This service may not function properly.</p>
<p>The &quot;Interactive Services Detection&quot; service (aka UI0Detect) will attempt to watch for services that have created a UI and are awaiting user input. The service was enabled by default of Windows Vista and disabled by default on Windows 7.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1109593">
				<div id="div-comment-1109593" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Mungo</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140228-00/?p=1633#comment-1109593">
			February 28, 2014 at 7:34 am</a>		</div>

		<p>I will stop all running services trough the servicemanager and if I am still running at the end I know I am not running inside a service.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1109603">
				<div id="div-comment-1109603" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Peter</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140228-00/?p=1633#comment-1109603">
			February 28, 2014 at 7:52 am</a>		</div>

		<p>Many of you seem to assume that the comustomer controls the code for both the service and the DLL. &nbsp;What&#39;s he supposed to do if his DLL is being loaded by someone else&#39;s service?</p>
<p>A common reason for wanting to know how you were launched is so that you can display additional output when you&#39;re run from the command line. &nbsp;A command line parameter is not reliable in this case since the end user has to remember to enter it.</p>
<p>@Mungo: Awesome. :)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1109613">
				<div id="div-comment-1109613" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Damien</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140228-00/?p=1633#comment-1109613">
			February 28, 2014 at 7:56 am</a>		</div>

		<p>@Peter &#8211; no, I assume that I get to choose what contract I expose from my DLL for consuming applications to use. If they don&#39;t follow the contract I&#39;m providing, then I may do stupid things, but no more stupid than if I&#39;d created some heuristics that &quot;guessed&quot; at my runtime environment and got it wrong.</p>
<p>I&#39;m also liking @Mungo&#39;s solution though.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-aegis03 even thread-even depth-1" id="comment-1109623">
				<div id="div-comment-1109623" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/dmex' rel='external nofollow' class='url'>dmex</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140228-00/?p=1633#comment-1109623">
			February 28, 2014 at 8:23 am</a>		</div>

		<p>&gt; How can my DLL detect that it is running inside a service?</p>
<p>GetModuleHandle(&quot;svchost.exe&quot;)</p>
<div class="post">[<em>Not all services are called svchost.exe -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1109633">
				<div id="div-comment-1109633" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">ZLB</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140228-00/?p=1633#comment-1109633">
			February 28, 2014 at 8:29 am</a>		</div>

		<p>This only works under Vista and onwards but if ProcessToSessionId(&#8230;) for current process returns session id 0, then we&#39;re running in a service or a child process of a session.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1109653">
				<div id="div-comment-1109653" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ben</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140228-00/?p=1633#comment-1109653">
			February 28, 2014 at 8:37 am</a>		</div>

		<p>+1 @Mungo, a neat solution which fulfils the requirements. :-)</p>
<p>Probably the real issue is that when running as a service they run as localsystem so a bunch of stuff they expect isn&#39;t set up. So just check who you are.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1109663">
				<div id="div-comment-1109663" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Random User 4328545734</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140228-00/?p=1633#comment-1109663">
			February 28, 2014 at 8:38 am</a>		</div>

		<p>And here I thought Bob&#39;s second address was going to have something to do with Final Fantasy.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-maurits even thread-even depth-1" id="comment-1109673">
				<div id="div-comment-1109673" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Maurits+%5BMSFT%5D' rel='external nofollow' class='url'>Maurits [MSFT]</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140228-00/?p=1633#comment-1109673">
			February 28, 2014 at 8:48 am</a>		</div>

		<p>When you install the service, add &quot;&#8230; /service&quot; to the lpBinaryPathName argument to CreateService.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-hikari odd alt thread-odd thread-alt depth-1" id="comment-1109683">
				<div id="div-comment-1109683" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Chris+Crowther' rel='external nofollow' class='url'>Chris Crowther</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140228-00/?p=1633#comment-1109683">
			February 28, 2014 at 9:00 am</a>		</div>

		<p>It would never occur to me to do this any other way other than by checking the command line for some switch that told me it was launching via the scheduler.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1109703">
				<div id="div-comment-1109703" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Gabe</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140228-00/?p=1633#comment-1109703">
			February 28, 2014 at 9:11 am</a>		</div>

		<p>Detecting whether you&#39;re running in a service can be accomplished in several ways, some better than others:</p>
<p>1. Check to see if your parent (or ancestor) process is services.exe.</p>
<p>2. Check to see if you&#39;re running in session 0.</p>
<p>3. Check to see if your process token has the SE_SERVICE_LOGON_NAME privilege.</p>
<div class="post">[<em>I guess you didn&#39;t learn the lesson from today&#39;s article. -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1109713">
				<div id="div-comment-1109713" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">smf</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140228-00/?p=1633#comment-1109713">
			February 28, 2014 at 9:44 am</a>		</div>

		<p>the only way to know how you are running is to run:</p>
<p>shutdown -s -t 0</p>
<p>After that command has done it&#39;s job then you know you aren&#39;t running.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1109723">
				<div id="div-comment-1109723" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Yuri</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140228-00/?p=1633#comment-1109723">
			February 28, 2014 at 10:00 am</a>		</div>

		<p>The question is probably misguided, why does the customer wants to know if his DLL is running inside a service? If the customer reply back, refer him to the preferred way to check if Contoso widget feature is enabled at runtime.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1109733">
				<div id="div-comment-1109733" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">JM</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140228-00/?p=1633#comment-1109733">
			February 28, 2014 at 10:06 am</a>		</div>

		<p>Mungo&#39;s solution does not work because it assumes all services being asked to stop will stop. However, a stop request is just that, and if a service does nothing with it, at the end the best you know is that you&#39;re either not in a service, or you are in one of the services that didn&#39;t stop (for whatever reason). To correct the solution, all you have to do is find the processes hosting the services and kill them instead. If you&#39;re going for this approach, I recommend taking some measures against people who are willing to find you and kill you instead.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1109753">
				<div id="div-comment-1109753" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Stefan Kanthak</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140228-00/?p=1633#comment-1109753">
			February 28, 2014 at 11:02 am</a>		</div>

		<p>There&#39;s but a BUT: Windows has NO separate directory where the service binaries are stored.</p>
<p>Joe Average, exploring the &quot;System&quot; directory and double-clicking for example &quot;services.exe&quot; might wonder why this program produces no output at all but keeps running.</p>
<p>And of course your own &quot;service.exe&quot; has to behave differently: when started as service all STD_*_HANDLE are 0L.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1109763">
				<div id="div-comment-1109763" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ken Hagan</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140228-00/?p=1633#comment-1109763">
			February 28, 2014 at 11:16 am</a>		</div>

		<p>Some interesting ideas here for service detection, but we should all bear in mind that (to justify its existence) any such proposal needs to be significantly more reliable than the following, which is nearly always accurate and (probably) &quot;fails safe&quot;.</p>
<p> &nbsp; bool IsRunningAsService()</p>
<p> &nbsp; {</p>
<p> &nbsp; &nbsp; &nbsp;return false; // No you aren&#39;t, and even if you are then it&#39;s none of your business!</p>
<p> &nbsp; }</p>
<p>(I was inspired by the implementation of std::uncaught_exception() in an unnamed C++ compiler from the late 1990s.)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1109773">
				<div id="div-comment-1109773" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140228-00/?p=1633#comment-1109773">
			February 28, 2014 at 11:20 am</a>		</div>

		<p>Indeed Gabe did not. I already posted the existence of a counterexample to #1 which happens. #3 happens whenever the running user can log in as a service.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1109783">
				<div id="div-comment-1109783" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140228-00/?p=1633#comment-1109783">
			February 28, 2014 at 11:22 am</a>		</div>

		<p>Huh what happened to my content. Should have read &quot;counterexample to #1 which happens to also be a counterexample to #2&quot;.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1109793">
				<div id="div-comment-1109793" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">hold on</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140228-00/?p=1633#comment-1109793">
			February 28, 2014 at 11:32 am</a>		</div>

		<p>What if the customer&#39;s DLL is being loaded by another DLL? &nbsp;Do we know it is feasible to expect all upstream DLLs to all update their API contracts to expose &quot;I&#39;m running as a service&quot; to accommodate the downstream DLL&#39;s supposed need to determine its execution environment?</p>
<p>As you can see, without sufficient additional information or context about the actual situation and problem, I remain unconvinced that Raymond&#39;s &quot;lesson&quot; here fully or necessarily applies to the customer&#39;s case&#8211;to my mind it isn&#39;t 100% analogous to the program-launch scenario the post started with.</p>
<p>Anyway, there is nothing difficult about this. &nbsp;You can easily get your own process ID, and there&#39;s a set of APIs to enumerate installed services and get their current execution statuses including process ID [<a rel="nofollow" target="_new" href="http://msdn.microsoft.com/en-us/library/windows/desktop/ms685974(v=vs.85).aspx">msdn.microsoft.com/&#8230;/ms685974(v=vs.85).aspx</a>]. &nbsp;So there is no need for additional assumptions on session ID, ancestor processes or what-not. &nbsp;That said, this assumes &quot;detecting whether I&#39;m running inside a service&quot; is even the correct approach to whatever the underlying problem is. &nbsp;It seems more likely that the underlying problem is merely exposed as a side effect of running inside a service, but may well also manifest in other configurations, in which case detecting whether you are running inside a service is only a partial fix at best.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1109803">
				<div id="div-comment-1109803" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Evan</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140228-00/?p=1633#comment-1109803">
			February 28, 2014 at 11:49 am</a>		</div>

		<p>@Ken: &quot;bool IsRunningAsService() { return false; }&quot;</p>
<p>Also similar to <a rel="nofollow" target="_new" href="http://blogs.msdn.com/b/oldnewthing/archive/2004/02/11/71307.aspx">blogs.msdn.com/&#8230;/71307.aspx</a></p>
<p>That&#39;s one of my favorite stories from this blog.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1109823">
				<div id="div-comment-1109823" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Nick</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140228-00/?p=1633#comment-1109823">
			February 28, 2014 at 12:26 pm</a>		</div>

		<p>Well you can ask the service controller for extended status of all services, look for one with your PID, and ignore the answer anyway because it shouldn&#39;t matter to you whether you&#39;re in a service, you&#39;re a DLL, you have one job.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-maurits odd alt thread-odd thread-alt depth-1" id="comment-1109843">
				<div id="div-comment-1109843" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Maurits+%5BMSFT%5D' rel='external nofollow' class='url'>Maurits [MSFT]</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140228-00/?p=1633#comment-1109843">
			February 28, 2014 at 1:01 pm</a>		</div>

		<p>All of the &quot;check the list of services&quot; solutions require that the service be running under a token that has at least SC_MANAGER_CONNECT and SC_MANAGER_ENUMERATE_SERVICE access, which may not be the case.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1109853">
				<div id="div-comment-1109853" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ben</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140228-00/?p=1633#comment-1109853">
			February 28, 2014 at 1:31 pm</a>		</div>

		<p>Now, obviously you shouldn&#39;t, but you can find out if you are running in a service using WMI, which exists to provide this kind of diagnostic information&#8230; just ask for the Win32_Service with your ProcessId. If there is one, you are running in a service process.</p>
<p>However this probably won&#39;t achieve what you want because you might be running as a worker process for the service, or in a COM out-of-process host on behalf of a service, and so on, and you probably want these scenarios to be treated the same way as running in a service.</p>
<p>So the real answer, as Frozone&#39;s wife said, is &quot;WHY do you WANT to KNOW?&quot; </p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1109863">
				<div id="div-comment-1109863" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Crescens2k</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140228-00/?p=1633#comment-1109863">
			February 28, 2014 at 1:50 pm</a>		</div>

		<p>Just because I feel like bucking the trend a little bit.</p>
<p>If the DLL asks am I running as a service, the answer should always be yes. A definition of the English word Service is &quot;The action of helping or doing work for someone.&quot; All programs exist to do work on behalf of the users, so it is a service.</p>
<p>Even when Skynet comes online, again, it will be a service but this time the service will be on behalf of an insane AI, not a human.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1109873">
				<div id="div-comment-1109873" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">hold on</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140228-00/?p=1633#comment-1109873">
			February 28, 2014 at 2:17 pm</a>		</div>

		<p>The more I think about it, the more likely it seems that the underlying problem has to do with either running in a non-interactive session, or differences in privileges or access permissions (note: the exact differences will vary depending on exactly which privileges the service asks for, plus other factors). &nbsp;The fact that those issues happen to come up as a result of running inside a service is just a surface trigger and not the root cause.</p>
<p>So in one sense Raymond&#39;s &quot;lesson&quot; applies, in that &quot;how do I detect I&#39;m running in a service&quot; is usually probably not the right question to ask. &nbsp;But I don&#39;t think &quot;let the client tell you&quot; is necessarily a good answer either for that.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1109883">
				<div id="div-comment-1109883" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140228-00/?p=1633#comment-1109883">
			February 28, 2014 at 2:46 pm</a>		</div>

		<p>Let me make one thing abundantly clear. If your DLL does something different depending on whether or not it is on an interactive session, we will not be accepting it as a dependency. We have a testing policy that results in the spinning up of pseudo-services that work exactly like services except they aren&#39;t started via the service manager and are on an interactive session (to stop service we just kill them). If your code tries to display any UI you could hang the autotester. Other sites may need to do likewise. So, don&#39;t.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1109893">
				<div id="div-comment-1109893" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">ChrisR</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140228-00/?p=1633#comment-1109893">
			February 28, 2014 at 3:02 pm</a>		</div>

		<p>@Joshua: &nbsp;I doubt anybody here knows what product you work on, and to be honest, nobody probably even cares that you won&#39;t take them as a dependency.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1109643">
				<div id="div-comment-1109643" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Peter</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140228-00/?p=1633#comment-1109643">
			February 28, 2014 at 8:31 am</a>		</div>

		<p>@Damien I also think that&#39;s a bad assumption. &nbsp;If you&#39;re being loaded by someone else&#39;s services, then chances are that they dictated the API you must expose in order to work with them. &nbsp;You also have to consider the case where your DLL is *accidentally* pulled into a service (perhaps through a dependency in another DLL, for example).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1109693">
				<div id="div-comment-1109693" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Damien</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140228-00/?p=1633#comment-1109693">
			February 28, 2014 at 9:04 am</a>		</div>

		<p>@Peter &#8211; in most plug-in scenarios, the host is well known, and will not be switching between being e.g. an application or a service. Those are the type of scenarios where I think it&#39;s likely that the host dictates the API &#8211; or are you thinking of something else.</p>
<p>Most DLLs I work with are still ones that offer some service *to* the executable that loads them, and the contract is dictated by the DLL side.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1109913">
				<div id="div-comment-1109913" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Deduplicator</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140228-00/?p=1633#comment-1109913">
			February 28, 2014 at 5:47 pm</a>		</div>

		<p>Heisenbugs we love you. So much we want the &#39;next best thing&#39; whenever we are not multithreaded&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1109743">
				<div id="div-comment-1109743" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Damien</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140228-00/?p=1633#comment-1109743">
			February 28, 2014 at 10:17 am</a>		</div>

		<p>I also think that the question is misguided because it&#39;s probably at too high a granularity. If the DLL wants to (say) know whether it can or should display UI, it should get its callers to specify *that* rather than that they&#39;re a service. Some callers might want the DLL to work or fail silently (via error codes or exceptions) because, for whatever reason, the DLLs attempts at UI will be misinterpreted, confusing, etc.</p>
<p>This does also go back to @Peter&#39;s &quot;know whether you&#39;re running on the command line and display extra output&quot; &#8211; so, the main executable has been told &quot;shut up, show no output via flags or configuration&quot;, but the DLL should decide for *itself* whether to output additional information? That feels wrong too.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1109933">
				<div id="div-comment-1109933" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140228-00/?p=1633#comment-1109933">
			February 28, 2014 at 7:35 pm</a>		</div>

		<p>@Harry Johnston: Not if you have no code that cares. All (100%) of bugs thought due to service context turned out to be differences in permissions between the testing account and the target service account or somebody trying to use a map drive from a service context.</p>
<p>We got very lucky had had no session 0 violation.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1109813">
				<div id="div-comment-1109813" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Myria</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140228-00/?p=1633#comment-1109813">
			February 28, 2014 at 12:15 pm</a>		</div>

		<p>This is to be used *for diagnostic and survey purposes only*, but you can use a CreateToolhelp32Snapshot + Process32FirstW + Process32NextW loop once to find yourself and get your parent process ID, then another such loop to find your parent process&#39;s information. &nbsp;Do this as near to process startup as possible, because your parent is free to terminate whenever it feels like it. &nbsp;This can fail, you can sometimes get the wrong answer for several reasons, and Raymond&#39;s caveats that are the subject of this blog post still apply, so *please* only use this for diagnostic and survey purposes only. &nbsp;Your customers will thank you.</p>
<p>Two reasons you can get the wrong answer: &nbsp;1. Parent process can terminate and another new process can take its former PID. &nbsp;2. The process that spawned you specified a different process than itself to be your &quot;parent&quot; (possible since NT began but only via undocumented APIs; Vista added a documented way). &nbsp;And these are just two reasons why it&#39;s unreliable.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1109943">
				<div id="div-comment-1109943" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Harry Johnston</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140228-00/?p=1633#comment-1109943">
			March 1, 2014 at 1:50 am</a>		</div>

		<p>@Joshua: there are any number of other potentially relevant differences, such as (to choose a few at random from the top of my head) the presence or absence of explorer or other processes in the same session, the contents of the environment block, and registry entries that are only in HKEY_CURRENT_USER if the user account in question has been logged in interactively.</p>
<p>But, yeah, if you&#39;re confident in the part of the code that interacts with Windows and only need to test the logic flow, I guess you&#39;d be OK.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1109923">
				<div id="div-comment-1109923" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Harry Johnston</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140228-00/?p=1633#comment-1109923">
			February 28, 2014 at 6:12 pm</a>		</div>

		<p>@Gabe: off-topic, but #3 won&#39;t work anyway. &nbsp;I was recently surprised to discover that the logon rights (such as SeInteractiveLogonRight and SeServiceLogonRight) are not included in logon tokens. &nbsp;</p>
<p>As far as I can tell this is the only way that account rights (Se*Right) differ from account privileges (Se*Privilege). &nbsp;I always thought they were the same thing apart from what they were used for, but it turns out they&#39;re not, quite.</p>
<p>@Joshua: I hope you also do thorough testing in a genuine service context? &nbsp;It is possible for code to have bugs that only exhibit when run as a service. &nbsp;I don&#39;t think it&#39;s even all that uncommon.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1109953">
				<div id="div-comment-1109953" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Azarien</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140228-00/?p=1633#comment-1109953">
			March 1, 2014 at 2:23 am</a>		</div>

		<p>@Ian Boyd: You contradicted yourself. First you write that &quot;Allow service to interact with desktop&quot; option does nothing on Vista, then you elaborate what it does on Vista.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1109963">
				<div id="div-comment-1109963" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Neil</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140228-00/?p=1633#comment-1109963">
			March 1, 2014 at 2:45 am</a>		</div>

		<p>Sadly program &quot;Z Server&quot;, despite its name, doesn&#39;t actually work as a service, which is what you really want things running on a server to be, so that you don&#39;t actually have to log it on after a reboot.</p>
<p>I assume the creator of program &quot;Z Server&quot; wants to improve the program so that it works as a service. They&#39;ve decided that the best way is to find out what breaks, and detect whether they&#39;re a service in order to use a different method for performing the problematic operation.</p>
<p>Of course what they really need to do is to redesign their program, for example by splitting it up into UI and non-UI portions.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1109973">
				<div id="div-comment-1109973" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">640k</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140228-00/?p=1633#comment-1109973">
			March 1, 2014 at 6:59 am</a>		</div>

		<p>The Answer to the original question:</p>
<p><a rel="nofollow" target="_new" href="http://msdn.microsoft.com/en-us/library/system.environment.userinteractive%28v=vs.110%29.aspx">msdn.microsoft.com/&#8230;/system.environment.userinteractive%28v=vs.110%29.aspx</a></p>
<p>(and if you&#39;re writing a non-.net library, you can investigate the .net code and do the same)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1109983">
				<div id="div-comment-1109983" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Harry Johnston</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140228-00/?p=1633#comment-1109983">
			March 1, 2014 at 2:09 pm</a>		</div>

		<p>@Azarien: no, I disagree. &nbsp;Those aren&#39;t things the flag does, they&#39;re side-effects, things other system components do in response. &nbsp;(By way of analogy, if I call WriteProcessMemory, the anti-virus software might terminate my program, but that doesn&#39;t mean that terminating the program is what WriteProcessMemory &quot;does&quot;.)</p>
<p>On the other hand, &quot;allow service to interact with desktop&quot; does (presumably) cause the process to be launched on the Winsta0Default desktop rather than in a separate per-service window station. &nbsp;That no longer makes it possible to directly interact with the user, but it nonetheless affects the program&#39;s context in a way that (IMO) counts as something the flag does. :-)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1109993">
				<div id="div-comment-1109993" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joker_vD</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140228-00/?p=1633#comment-1109993">
			March 1, 2014 at 6:15 pm</a>		</div>

		<p>Also, one can call StartServiceCtrlDispatcher with a more-or-less valid service table. </p>
<p>If it returns zero and GetLastError returns ERROR_FAILED_SERVICE_CONTROLLER_CONNECT — then you&#39;re not running in a service.</p>
<p>If it returns zero and GetLastError returns ERROR_SERVICE_ALREADY_RUNNING — then you&#39;re running in a service.</p>
<p>If it returns a non-zero value&#8230; well, I guess you screwed up someone&#39;s service. Oops.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-xpclientgmail-com even thread-even depth-1" id="comment-1110003">
				<div id="div-comment-1110003" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/xpclient' rel='external nofollow' class='url'>xpclient</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140228-00/?p=1633#comment-1110003">
			March 2, 2014 at 3:48 am</a>		</div>

		<p>Is there a way for a launcher to specify which on monitor an app should open in a multi-mon configuration? The shortcut file (.lnk) should have the ability to store this just like it can specify a window state (Normal, Maximized, Minimized).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-cheong odd alt thread-odd thread-alt depth-1" id="comment-1110013">
				<div id="div-comment-1110013" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/cheong00' rel='external nofollow' class='url'>cheong00</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140228-00/?p=1633#comment-1110013">
			March 2, 2014 at 5:50 pm</a>		</div>

		<p>&gt; How can my DLL detect that it is running inside a service?</p>
<p>But there&#39;s something different about running in a service.</p>
<p>Say, if you write library for Win7+ and it runs under desktop application, maybe you don&#39;t need to care much about hybrid sleep because most users still used to shutdown everything because hitting the &quot;power button like button&quot; on start menu. If your library is running under a service, you have no choice but to properly handle power events if your code acquires external resources. In such case maybe it&#39;s desirable to make it generates an error condition in case it detects the code run in service environment (fail fast).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1110023">
				<div id="div-comment-1110023" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Henke37</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140228-00/?p=1633#comment-1110023">
			March 3, 2014 at 2:59 am</a>		</div>

		<p>Hmm, why not do whatever Process Explorer does to demultiplex the services? Then it is just a matter of finding the process you are in.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1110043">
				<div id="div-comment-1110043" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Anon</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140228-00/?p=1633#comment-1110043">
			March 3, 2014 at 8:36 am</a>		</div>

		<p>@Henke37</p>
<p>I think you missed the point of the article, which is that you shouldn&#39;t try, and have no good reason to do so.</p>
<p>If you think you do, you&#39;re wrong.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-zlynx even thread-even depth-1" id="comment-1110093">
				<div id="div-comment-1110093" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Zan+Lynx%27' rel='external nofollow' class='url'>Zan Lynx'</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140228-00/?p=1633#comment-1110093">
			March 3, 2014 at 9:28 am</a>		</div>

		<p>The extra annoying thing about command line arguments to determine where the program is running from is the general lack of documentation.</p>
<p>So what happens if I want to create my own scheduler item for the program? I have to know about the magic command line argument. Same for when I want to make a quick launcher or my own shortcut.</p>
<p>Please, if you do it, make the program show a command line options dialog box when it is run without the right options.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1110103">
				<div id="div-comment-1110103" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Gabe</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140228-00/?p=1633#comment-1110103">
			March 3, 2014 at 9:29 am</a>		</div>

		<p>I&#39;m not sure what lesson I didn&#39;t learn. The lesson for &quot;how can I detect how my process was launched?&quot; is that you should just have the user tell you rather than guessing. Let them put a &quot;/quiet&quot; switch on the command line if they don&#39;t want the dialog popping up from their scheduled task.</p>
<p>The exercise to answer &quot;how can my DLL detect that it is running inside a service?&quot; implies to me that the DLL is being loaded into an unknown process (like a COM object, perhaps), so there is no way to get the loading process to tell you how it was launched. Thus, you have to guess.</p>
<p>I suppose in the general case you can make the argument that you shouldn&#39;t detect things like whether you&#39;re running in a service, or how much RAM the machine has, or whether you&#39;re running in a VM.</p>
<p>In reality, though, it&#39;s useful information to put in your debug log because environmental conditions that &quot;shouldn&#39;t matter&quot; could be the key hint as to why your product is failing in ways you can&#39;t reproduce.</p>
<p>So let&#39;s say that when somebody tries to use my plug-in, I check to see if their trial period expired. If it did, I want to put up a dialog to give them a chance to purchase it. Of course putting up a dialog in a service will just hang the thread, (possibly hanging the service) because no user will ever be around to click on it. I want to detect that there&#39;s no user around to click and just log an error message.</p>
<p>Depending on what I really want to know, I might want to look for session 0, check to see if my process token doesn&#39;t have the S-1-5-4 SID (the user logged on interactively), figure out if my process ID matches that of a known service, or maybe check to see if my window station doesn&#39;t have the WSF_VISIBLE flag.</p>
<p>For my debug log I probably want to know what services are running in the same process. For determining whether to show a message box, MSDN suggests (indirectly, via <a rel="nofollow" target="_new" href="http://msdn.microsoft.com/en-us/library/system.environment.userinteractive%28v=vs.110%29.aspx">msdn.microsoft.com/&#8230;/system.environment.userinteractive%28v=vs.110%29.aspx</a>) checking the WSF_VISIBLE flag.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1110173">
				<div id="div-comment-1110173" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Anon</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140228-00/?p=1633#comment-1110173">
			March 3, 2014 at 12:31 pm</a>		</div>

		<p>@Gabe</p>
<p>In reality, the environmental conditions shouldn&#39;t matter. You shouldn&#39;t care, say, whether you&#39;re in a VM, all you should care about is that you&#39;re failing when you get Data X, and you need to properly handle Data X. </p>
<p>What I often find when I open an application&#39;s log after a crash is that the application has logged everything about the user&#39;s environment and nothing useful about the actual cause of the crash.</p>
<p>Developers spend an enormous amount of time trying to figure out how to control the user&#39;s environment when they should instead be controlling how their code responds to the user&#39;s environment. I see this all the time in .NET code where the developer spends an enormous amount of time creating complex error handling routines for user input, but doesn&#39;t do, say, null checking when internally passing values to code that chokes on nulls.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1110193">
				<div id="div-comment-1110193" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140228-00/?p=1633#comment-1110193">
			March 3, 2014 at 3:49 pm</a>		</div>

		<p>@Harry Johnston: You are confusing non-interactive with service.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1110383">
				<div id="div-comment-1110383" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Mr Cranky</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140228-00/?p=1633#comment-1110383">
			March 4, 2014 at 11:13 am</a>		</div>

		<p>Every morning before I leave for work, I check to make sure I have my bullet-proof vest on by shooting myself in the stomach. &nbsp;</p>
<p>So far, I&#39;ve never forgotten it.</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

