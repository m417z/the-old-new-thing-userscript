<html>
<head>
<title>Stop cherry-picking, start merging, Part 7: Preventing a change from leaving a branch</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>Stop cherry-picking, start merging, Part 7: Preventing a change from leaving a branch</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>March 20, 2018 / year-entry #64</td></tr>
<tr><td><b>Tags:</b></td><td>other</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20180320-00/?p=98275</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>9</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">More advanced merge base tricks.</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>
Still continuing
our exploration of
<a HREF="https://blogs.msdn.microsoft.com/oldnewthing/20180314-00/?p=98235">
using merges as a replacement for cherry-picking</a>, 
here's another scenario you can now solve:
</p>
<p>
<b>How do I make a change in a branch that will not propagate
when it merges?</b>
</p>
<p>
Suppose you have a develop branch where active development occurs,
and you also have a release branch that represents the current
release candidate.
Bug fixes in the release branch are regularly
merged back into the develop branch.
But what if there's a fix in the release branch that you don't want
to merge back into the develop branch?
</p>
<p>
For example, maybe the component in question has already fixed the
problem in the develop branch,
but the fix came as part of a larger refactoring of the component.
You want to apply a targeted fix to the release branch,
but that targeted fix should not merge back to the develop branch.
</p>
<p>
It turns out that you already know how to do this.
</p>
<p>
This is basically the same thing as
<a HREF="https://blogs.msdn.microsoft.com/oldnewthing/20180319-00/?p=98265">
Replacing the temporary fix with the permanent fix</a>,
just with different names for the branches.
</p>
<p>
Here's the original diagram from last time:
</p>
<svg width="0" height="0">
 <defs>
  <marker id="arrowhead" markerWidth="5" markerHeight="5" refX="-2" refY="0"
    viewBox="-6 -6 12 12" orient="auto">
    <polygon points="-2,0 -5,5 5,0 -5,-5" fill="black" stroke="black"
      stroke-dasharray="1 0" />
  </marker>
  <path id="larr" d="M20,10 L3,10" stroke="black"
   marker-end="url(#arrowhead)" />
  <path id="larr3" d="M98,10 L3,10" stroke="black"
   marker-end="url(#arrowhead)" />
  <path id="nwarr" d="M20,20 L3,3" stroke="black"
   marker-end="url(#arrowhead)" />
  <path id="swarr" d="M20,2 L3,17" stroke="black"
   marker-end="url(#arrowhead)" />
  <path id="swarr3" d="M98,2 L6,57" stroke="black"
   marker-end="url(#arrowhead)" />
 </defs>
</svg>
<table CELLSPACING=1 STYLE="text-align: center" TITLE="Described in text.">
<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
<td>apple</td>
<td>&nbsp;</td>
<td>&nbsp;</td>
<td>&nbsp;</td>
<td>berry</td>
</tr>
<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
<td STYLE="border: solid 1px black; width: 50px; font-size: 120%">M1</td>
<td COLSPAN=3>
<svg width="98" height="20"><foreignObject>&larr; &larr; &larr;</foreignObject><use href="#larr3"/></svg>
</td>
<td STYLE="border: solid 1px black; width: 50px; font-size: 120%">M2</td>
<td>&nbsp;</td>
<td>master</td>
</tr>
<tr>
<td>apple</td>
<td>
<svg width="20" height="20"><foreignObject>&#x2199;&#xfe0e;</foreignObject><use href="#swarr"/></svg>
</td>
<td>&nbsp;</td>
<td>&nbsp;</td>
<td>berry</td>
<td>
<svg width="20" height="20"><foreignObject>&#x2199;&#xfe0e;</foreignObject><use href="#swarr"/></svg>
</td>
</tr>
<tr>
<td STYLE="border: solid 1px black; width: 50px; font-size: 120%">A</td>
<td COLSPAN=3>
<svg width="98" height="20"><foreignObject>&larr; &larr; &larr;</foreignObject><use href="#larr3"/></svg>
</td>
<td STYLE="border: solid 1px black; width: 50px; font-size: 120%">P</td>
<td>&nbsp;</td>
<td>&nbsp;</td>
<td>&nbsp;</td>
<td>patch</td>
</tr>
<tr>
<td>&nbsp;</td>
<td>
<svg width="20" height="20"><foreignObject>&#x2196;&#xfe0e;</foreignObject><use href="#nwarr"/></svg>
</td>
<td>&nbsp;</td>
<td>&nbsp;</td>
<td>&nbsp;</td>
<td>
<svg width="20" height="20"><foreignObject>&#x2196;&#xfe0e;</foreignObject><use href="#nwarr"/></svg>
</td>
</tr>
<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
<td STYLE="border: solid 1px black; width: 50px; font-size: 120%">F1</td>
<td COLSPAN=3>
<svg width="98" height="20"><foreignObject>&larr; &larr; &larr;</foreignObject><use href="#larr3"/></svg>
</td>
<td STYLE="border: solid 1px black; width: 50px; font-size: 120%">F2</td>
<td>&nbsp;</td>
<td>feature</td>
</tr>
<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
<td>apple</td>
<td>&nbsp;</td>
<td>&nbsp;</td>
<td>&nbsp;</td>
<td>apple</td>
</tr>
</table>
<p>
In the diagram from last time,
we have a common commit A onto which which a master branch and feature
branch have been committing.
We create a patch branch from the common commit A
and apply a fix to it (changing <code>apple</code>
to <code>berry</code>), producing commit P.
We merge that branch into the master branch (producing commit M2
with the fix),
and we also merge it into the feature branch with <code>-s ours</code>
to indicate that we don't want any code changes from this merge;
we are creating it only for bookkeeping purposes.
The line remains unchanged in the feature branch.
</p>
<p>
From what we saw last time, this means that when the master
branch merges into the feature branch, the line will remain unchanged.
</p>
<p>
Okay, now rename the branches.
Rename the master branch to the release branch,
and rename the feature branch to the develop branch.
</p>
<table CELLSPACING=1 STYLE="text-align: center" TITLE="Described in text.">
<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
<td>apple</td>
<td>&nbsp;</td>
<td>&nbsp;</td>
<td>&nbsp;</td>
<td>berry</td>
</tr>
<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
<td STYLE="border: solid 1px black; width: 50px; font-size: 120%">M1</td>
<td COLSPAN=3>
<svg width="98" height="20"><foreignObject>&larr; &larr; &larr;</foreignObject><use href="#larr3"/></svg>
</td>
<td STYLE="border: solid 1px black; width: 50px; font-size: 120%">M2</td>
<td>&nbsp;</td>
<td>release</td>
</tr>
<tr>
<td>apple</td>
<td>
<svg width="20" height="20"><foreignObject>&#x2199;&#xfe0e;</foreignObject><use href="#swarr"/></svg>
</td>
<td>&nbsp;</td>
<td>&nbsp;</td>
<td>berry</td>
<td>
<svg width="20" height="20"><foreignObject>&#x2199;&#xfe0e;</foreignObject><use href="#swarr"/></svg>
</td>
</tr>
<tr>
<td STYLE="border: solid 1px black; width: 50px; font-size: 120%">A</td>
<td COLSPAN=3>
<svg width="98" height="20"><foreignObject>&larr; &larr; &larr;</foreignObject><use href="#larr3"/></svg>
</td>
<td STYLE="border: solid 1px black; width: 50px; font-size: 120%">P</td>
<td>&nbsp;</td>
<td>&nbsp;</td>
<td>&nbsp;</td>
<td>patch</td>
</tr>
<tr>
<td>&nbsp;</td>
<td>
<svg width="20" height="20"><foreignObject>&#x2196;&#xfe0e;</foreignObject><use href="#nwarr"/></svg>
</td>
<td>&nbsp;</td>
<td>&nbsp;</td>
<td>&nbsp;</td>
<td>
<svg width="20" height="20"><foreignObject>&#x2196;&#xfe0e;</foreignObject><use href="#nwarr"/></svg>
</td>
</tr>
<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
<td STYLE="border: solid 1px black; width: 50px; font-size: 120%">F1</td>
<td COLSPAN=3>
<svg width="98" height="20"><foreignObject>&larr; &larr; &larr;</foreignObject><use href="#larr3"/></svg>
</td>
<td STYLE="border: solid 1px black; width: 50px; font-size: 120%">F2</td>
<td>&nbsp;</td>
<td>develop</td>
</tr>
<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
<td>apple</td>
<td>&nbsp;</td>
<td>&nbsp;</td>
<td>&nbsp;</td>
<td>apple</td>
</tr>
</table>
<p>
Again, we start with a common commit A onto which a release branch
and a develop branch have been committing.
We create a patch branch that contains the version of the fix that
goes into the release branch and merge that into the release branch.
We then take that same patch branch and merge it with
<code>-s ours</code> into the develop branch, resulting in no code
change.
</p>
<p>
When the release branch merges into the develop branch,
the changes will be discarded because the patch commit P
will be a merge base, and relative to that merge base,
the release branch didn't do anything, and the develop branch
reverted the change.
Therefore, the result of the merge is a revert of P.
</p>
<p>
I've heard people say that "In git, there is no way to prevent a change
from propagating during a merge."
Well, maybe not, but I just did it.
</p>
<p>
What happens, is that the commit propagates during the merge,
but we have prearranged the merge base so that the result of the propagation
is "no change".
Technically the commit propagated:
After the merge of the release branch into the develop branch,
you can ask for branches that contain commit M2,
and it will say that the commit is present in the develop branch.
</p>
<p>
The git-theorists are correct in that the commit did propagate
during the merge.
The git-pragmatists are correct in that the effect of the propagation
is no change to the develop branch.
Both sides are correct.
Everybody wins.</p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (9)	</div>

		<div id="respond" class="comment-respond">
		<h3 id="reply-title" class="comment-reply-title"> <small><a rel="nofollow" id="cancel-comment-reply-link" href="/oldnewthing/20180320-00/?p=98275#respond" style="display:none;">Cancel reply</a></small></h3>			<form action="https://blogs.msdn.microsoft.com/oldnewthing/wp-comments-post.php" method="post" id="commentform" class="comment-form">
				<p class="comment-form-comment"><textarea id="comment" name="comment" cols="45" rows="4" aria-required="true"></textarea></p><p class="comment-form-author"><label for="author">Name <span class="required">*</span></label> <input id="author" name="author" type="text" value="" size="30" maxlength="245" aria-required='true' required='required' /></p>
<p class="comment-form-email"><label for="email">Email <span class="required">*</span></label> <input id="email" name="email" type="text" value="" size="30" maxlength="100" aria-describedby="email-notes" aria-required='true' required='required' /></p>
<p class="comment-form-url"><label for="url">Website</label> <input id="url" name="url" type="text" value="" size="30" maxlength="200" /></p>
<p class="form-submit"><input name="submit" type="submit" id="submit" class="submit btn btn-default" value="Post Comment" /> <input type='hidden' name='comment_post_ID' value='98275' id='comment_post_ID' />
<input type='hidden' name='comment_parent' id='comment_parent' value='0' />
</p><p style="display: none;"><input type="hidden" id="akismet_comment_nonce" name="akismet_comment_nonce" value="7079c2617c" /></p><p style="display: none;"><input type="hidden" id="ak_js" name="ak_js" value="131"/></p>			</form>
			</div><!-- #respond -->
	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-1330105">
				<div id="div-comment-1330105" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Simon Clarkstone</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180320-00/?p=98275#comment-1330105">
			March 20, 2018 at 7:09 am</a>		</div>

		<p>This series is certainly giving me a better idea of how to think creatively in solving problems with Git.</p>

		<div class="reply"><a rel='nofollow' class='comment-reply-link' href='https://blogs.msdn.microsoft.com/oldnewthing/20180320-00/?p=98275&#038;replytocom=1330105#respond' onclick='return addComment.moveForm( "div-comment-1330105", "1330105", "respond", "98275" )' aria-label='Reply to Simon Clarkstone'>Reply</a></div>
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1 parent" id="comment-1330115">
				<div id="div-comment-1330115" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Rick</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180320-00/?p=98275#comment-1330115">
			March 20, 2018 at 7:32 am</a>		</div>

		<p>I&#8217;m having trouble generalizing this technique to prevent the patch from being merged into multiple feature branches, all of which may potentially have different merge bases with the master branch.</p>
<p>Can you explain how to handle the situation where you want to avoid merging the change into two different development branches?</p>

		<div class="reply"><a rel='nofollow' class='comment-reply-link' href='https://blogs.msdn.microsoft.com/oldnewthing/20180320-00/?p=98275&#038;replytocom=1330115#respond' onclick='return addComment.moveForm( "div-comment-1330115", "1330115", "respond", "98275" )' aria-label='Reply to Rick'>Reply</a></div>
				</div>
		<ol class="children">
		<li class="comment even depth-2 parent" id="comment-1330135">
				<div id="div-comment-1330135" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Vilx-</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180320-00/?p=98275#comment-1330135">
			March 20, 2018 at 11:24 am</a>		</div>

		<p>Shouldn&#8217;t the same approach work? Create your Patch Branch and then merge it into all of the relevant branches one after another.</p>

		<div class="reply"><a rel='nofollow' class='comment-reply-link' href='https://blogs.msdn.microsoft.com/oldnewthing/20180320-00/?p=98275&#038;replytocom=1330135#respond' onclick='return addComment.moveForm( "div-comment-1330135", "1330135", "respond", "98275" )' aria-label='Reply to Vilx-'>Reply</a></div>
				</div>
		<ol class="children">
		<li class="comment odd alt depth-3" id="comment-1330145">
				<div id="div-comment-1330145" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Martin Bonner</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180320-00/?p=98275#comment-1330145">
			March 20, 2018 at 12:07 pm</a>		</div>

		<p>Specifically, create your patch branch from a commit that is old enough to be an ancestor of all the feature branches (probably the commit that introduced the code you are patching)</p>

		<div class="reply"><a rel='nofollow' class='comment-reply-link' href='https://blogs.msdn.microsoft.com/oldnewthing/20180320-00/?p=98275&#038;replytocom=1330145#respond' onclick='return addComment.moveForm( "div-comment-1330145", "1330145", "respond", "98275" )' aria-label='Reply to Martin Bonner'>Reply</a></div>
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1330125">
				<div id="div-comment-1330125" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Alan</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180320-00/?p=98275#comment-1330125">
			March 20, 2018 at 9:30 am</a>		</div>

		<p>I&#8217;ve been enjoying the series. You&#8217;ve certainly convinced me to be <i>far</i> more wary of cherry-picking, but more importantly, I have a much more solid grasp of how merges happen, can reason about them better, and can potentially solve more general problems. Which, I suspect was the real thing you wanted to teach. :-)</p>

		<div class="reply"><a rel='nofollow' class='comment-reply-link' href='https://blogs.msdn.microsoft.com/oldnewthing/20180320-00/?p=98275&#038;replytocom=1330125#respond' onclick='return addComment.moveForm( "div-comment-1330125", "1330125", "respond", "98275" )' aria-label='Reply to Alan'>Reply</a></div>
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1 parent" id="comment-1330155">
				<div id="div-comment-1330155" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Martin Bonner</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180320-00/?p=98275#comment-1330155">
			March 20, 2018 at 12:10 pm</a>		</div>

		<p>How many more episodes are you planning of this?  I want to point my office at the series when it&#8217;s done.</p>

		<div class="reply"><a rel='nofollow' class='comment-reply-link' href='https://blogs.msdn.microsoft.com/oldnewthing/20180320-00/?p=98275&#038;replytocom=1330155#respond' onclick='return addComment.moveForm( "div-comment-1330155", "1330155", "respond", "98275" )' aria-label='Reply to Martin Bonner'>Reply</a></div>
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-oldnewthing bypostauthor even depth-2" id="comment-1330175">
				<div id="div-comment-1330175" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Raymond+Chen+-+MSFT' rel='external nofollow' class='url'>Raymond Chen - MSFT</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180320-00/?p=98275#comment-1330175">
			March 20, 2018 at 2:58 pm</a>		</div>

		<p>Currently plan is for Friday to be the final installment.</p>

		<div class="reply"><a rel='nofollow' class='comment-reply-link' href='https://blogs.msdn.microsoft.com/oldnewthing/20180320-00/?p=98275&#038;replytocom=1330175#respond' onclick='return addComment.moveForm( "div-comment-1330175", "1330175", "respond", "98275" )' aria-label='Reply to Raymond Chen - MSFT'>Reply</a></div>
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment odd alt thread-even depth-1 parent" id="comment-1330165">
				<div id="div-comment-1330165" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Bradley</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180320-00/?p=98275#comment-1330165">
			March 20, 2018 at 1:41 pm</a>		</div>

		<p>I&#8217;m loving all this technical git stuff, but part of me worries about implementing this on a large team, where one little mistake to how a branch or a merge is done, can cascade in to hours and hours of fixing things down the road.</p>

		<div class="reply"><a rel='nofollow' class='comment-reply-link' href='https://blogs.msdn.microsoft.com/oldnewthing/20180320-00/?p=98275&#038;replytocom=1330165#respond' onclick='return addComment.moveForm( "div-comment-1330165", "1330165", "respond", "98275" )' aria-label='Reply to Bradley'>Reply</a></div>
				</div>
		<ol class="children">
		<li class="comment even depth-2" id="comment-1330205">
				<div id="div-comment-1330205" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Richard</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180320-00/?p=98275#comment-1330205">
			March 20, 2018 at 3:25 pm</a>		</div>

		<p>The takeaway was in the title of the series &#8211; don&#8217;t cherrypick unless you really, really want to.</p>
<p>It seems that cherrypick is really a tool for creating patch branches that contain the commits you actually want to bring over.</p>
<p>That&#8217;s not what I thought. Thank you Raymond Chen!</p>

		<div class="reply"><a rel='nofollow' class='comment-reply-link' href='https://blogs.msdn.microsoft.com/oldnewthing/20180320-00/?p=98275&#038;replytocom=1330205#respond' onclick='return addComment.moveForm( "div-comment-1330205", "1330205", "respond", "98275" )' aria-label='Reply to Richard'>Reply</a></div>
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

