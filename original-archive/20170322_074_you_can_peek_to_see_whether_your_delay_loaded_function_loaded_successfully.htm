<html>
<head>
<title>You can peek to see whether your delay-loaded function loaded successfully</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>You can peek to see whether your delay-loaded function loaded successfully</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>March 22, 2017 / year-entry #75</td></tr>
<tr><td><b>Tags:</b></td><td>code</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20170322-00/?p=95796</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>18</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">Predicting the future.</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>
<a HREF="https://msdn.microsoft.com/library/windows/desktop/mt403328(v=vs.85).aspx">
The
<code>Query&shy;Optional&shy;Delay&shy;Loaded&shy;API</code> function</a>
lets you ask whether a function marked as delay-loaded was in fact found.
Here's a tiny demonstration:
</p>
<pre>
#include &lt;windows.h&gt;
#include &lt;commdlg.h&gt;
#include &lt;libloaderapi2.h&gt;
#include &lt;stdio.h&gt;

EXTERN_C IMAGE_DOS_HEADER <a HREF="https://blogs.msdn.microsoft.com/oldnewthing/20041025-00/?p=37483">__ImageBase</a>;
#define HMODULE_THISCOMPONENT reinterpret_cast&lt;HMODULE&gt;(&amp;__ImageBase)

int __cdecl main(int argc, char** argv)
{
    if (QueryOptionalDelayLoadedAPI(HMODULE_THISCOMPONENT,
          "comdlg32.dll", "GetOpenFileNameW", 0))
    {
        printf("GetOpenFileNameW can be called!\n");
    }
    return 0;
}
</pre>
<p>
This gives you function-by-function granularity on checking whether
a delay-loaded function was successfully loaded,
which is an improvement over
<a HREF="https://msdn.microsoft.com/library/8yfshtha.aspx">
being told whether all the imports for a DLL were loaded</a>.
</p>
<p>
Note also that the original problem with the Win16 model for weak
linking wasn't that
<a HREF="https://twitter.com/rosyna/status/710650988034568192">
developers built but never ran their programs</a>.
Developers built their programs, and they ran
fine on all the systems they tested
because the function was present on all the systems they tested.
<i>It never occurred to them that the function might not exist
in the first place</i>.
I mean, suppose you wrote a 16-bit program that called
<code>Get&shy;Open&shy;File&shy;Name</code>.
It runs great on all your systems!
But oh no, you get a report from a customer that it crashes
on their system.
The reason:
<code>COMMDLG.DLL</code> was not a mandatory OS component.
Users had the option of installing Windows without it,
at which point all the programs that called
<code>Get&shy;Open&shy;File&shy;Name</code>
would start crashing.
</p>
<p>
Win32's response to this was
"If you want weak linking,
<a HREF="http://catb.org/jargon/html/I/If-you-want-X--you-know-where-to-find-it-.html">
you know where to find it</a>."
Namely, <code>Get&shy;Proc&shy;Address</code>.
The fact that you called a function to get an address
will hopefully remind you to check whether the function actually
succeeded.
</p>
<p>
The introduction of the
<code>Query&shy;Optional&shy;Delay&shy;Loaded&shy;API</code> function
is to allow Store apps (which are not allowed by policy to call
<code>Load&shy;Library</code>) to detect whether their delay-loaded
function actually got loaded.
The fact that the requested functions are in the delay-loaded
function table means that a static analysis can still find all
the functions that the program could potentially call.</p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (18)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment byuser comment-author-koldude even thread-even depth-1 parent" id="comment-1289735">
				<div id="div-comment-1289735" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/kantos' rel='external nofollow' class='url'>kantos</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170322-00/?p=95796#comment-1289735">
			March 22, 2017 at 7:17 am</a>		</div>

		<p>Odd they added a new ANSI API. I had thought adding new ANSI APIs was explicitly banned in WINDIV. When I checked it appears there is no Unicode version of this.</p>

		
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-jeremytais odd alt depth-2 parent" id="comment-1289736">
				<div id="div-comment-1289736" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/SimonRev' rel='external nofollow' class='url'>SimonRev</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170322-00/?p=95796#comment-1289736">
			March 22, 2017 at 7:28 am</a>		</div>

		<p>The reason, I imagine, is because there is no GetProcAddressW function.  Function exports are in ANSI (or possibly even ASCII).</p>
<p>I do find it mildly surprising that the filename parameter isn&#8217;t Unicode though.  I wonder what you would do if the DLL file were inexpressable in the current character set.</p>

		
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-koldude even depth-3 parent" id="comment-1289745">
				<div id="div-comment-1289745" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/kantos' rel='external nofollow' class='url'>kantos</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170322-00/?p=95796#comment-1289745">
			March 22, 2017 at 7:45 am</a>		</div>

		<p>so apparently the method name parameter is safe because &#8220;Error	C3872	&#8216;0x2019&#8217;: this character is not allowed in an identifier&#8221;. But I was able to make a dll with the name ðŸ’©.dll, although it did give a linker warning that it might not load on other systems, so in theory the module name parameter should be Unicode.</p>

		
				</div>
		<ol class="children">
		<li class="comment odd alt depth-4 parent" id="comment-1289815">
				<div id="div-comment-1289815" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Myria</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170322-00/?p=95796#comment-1289815">
			March 22, 2017 at 12:15 pm</a>		</div>

		<p>If you name a DLL with non-ASCII letters, you won&#8217;t be able to hard-link programs to the import library and have them run properly.  This is because the DLL name in the PE import table format is ASCII &#8211; the OS won&#8217;t be able to load the DLL.</p>
<p>However, if you&#8217;re willing to always use LoadLibrary[Ex]W+GetProcAddress with the DLL, Unicode DLL names are fine.</p>

		
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-koldude even depth-5" id="comment-1289895">
				<div id="div-comment-1289895" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/kantos' rel='external nofollow' class='url'>kantos</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170322-00/?p=95796#comment-1289895">
			March 23, 2017 at 5:24 am</a>		</div>

		<p>I tested this this morning, it seems that the linker is mixed in some ways. It will generate a UTF-8 exports table. But the Module itself can&#8217;t be linked because the .lib parser does require CP1252 for some reason. In theory the fix should be upgrading the lib parser to support a flag saying that it&#8217;s UTF-8 and then make all future libraries use that.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment odd alt depth-4" id="comment-1289935">
				<div id="div-comment-1289935" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Yukkuri</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170322-00/?p=95796#comment-1289935">
			March 23, 2017 at 10:35 am</a>		</div>

		<p>Poop dot dll. Now that&#8217;s honest naming!</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment byuser comment-author-koldude even depth-3 parent" id="comment-1289746">
				<div id="div-comment-1289746" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/kantos' rel='external nofollow' class='url'>kantos</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170322-00/?p=95796#comment-1289746">
			March 22, 2017 at 7:52 am</a>		</div>

		<p>I correct myself <a href="http://en.cppreference.com/w/cpp/language/identifiers" rel="nofollow">identifiers</a> can be unicode, just not emoji</p>

		
				</div>
		<ol class="children">
		<li class="comment odd alt depth-4" id="comment-1289755">
				<div id="div-comment-1289755" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Karellen</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170322-00/?p=95796#comment-1289755">
			March 22, 2017 at 8:27 am</a>		</div>

		<p>Note that a platform ABI may be more strict than the C++ language allows for. The PE file format may restrict identifiers more than the C++ language allows for. And the Windows platform may further restrict identifiers more than its file formats allow.</p>
<p>Conversely, a platform ABI may be less strict than the C++ language allows. The C++ language disallows identifiers that are also C++ keywords, e.g. &#8220;class&#8221;. But the Windows platform may allow an identifier called &#8220;class&#8221; &#8211; you just can&#8217;t use it natively from C++. You may have to use LoadLibrary()/GetProcAddress() to bind it to a different identifier in your program.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment even depth-3" id="comment-1289805">
				<div id="div-comment-1289805" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Myria</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170322-00/?p=95796#comment-1289805">
			March 22, 2017 at 12:08 pm</a>		</div>

		<p>The filename parameter isn&#8217;t UTF-16 because this function is reading the PE headers and delay-load import table of hParentModule.  The DLL names are in ASCII in the import table, so you might as well use the same format for the API.  Same for the function name.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment odd alt depth-2" id="comment-1289795">
				<div id="div-comment-1289795" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Myria</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170322-00/?p=95796#comment-1289795">
			March 22, 2017 at 12:02 pm</a>		</div>

		<p>The DLL names and export names in the PE file format are byte strings, not UTF-16 strings, so it wouldn&#8217;t serve a purpose.  It&#8217;s more like they are ASCII, rather than ANSI.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment byuser comment-author-yuhong-bao even thread-odd thread-alt depth-1" id="comment-1289785">
				<div id="div-comment-1289785" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Yuhong+Bao' rel='external nofollow' class='url'>Yuhong Bao</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170322-00/?p=95796#comment-1289785">
			March 22, 2017 at 11:34 am</a>		</div>

		<p>AFAIK COMMDLG was not optional in Win3.1, but it was not part of Win3.0 and programs was supposed to redistribute it onto Win3.0 systems.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-even depth-1 parent" id="comment-1289865">
				<div id="div-comment-1289865" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170322-00/?p=95796#comment-1289865">
			March 22, 2017 at 8:03 pm</a>		</div>

		<p>Incidentally, you can always call LoadLibrary. Procedure:</p>
<p>1) Take the address of ReadFileW. It will be in your own image area (trampoline placed by the linker to reduce the number of fixups).<br />
2) Follow the jmp instruction at the address of ReadFileW to get the real address.<br />
3) Ascend memory until you find MZ at the start of a page with the PE header pointer pointing to a valid PE header.<br />
4) Interpret the executable image to find the exports section. Walk the exports table for LoadLibrary.</p>

		
				</div>
		<ol class="children">
		<li class="comment even depth-2 parent" id="comment-1289867">
				<div id="div-comment-1289867" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Stephen</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170322-00/?p=95796#comment-1289867">
			March 23, 2017 at 12:48 am</a>		</div>

		<p>5) Hope that the bytes &#8216;MZ&#8217; doesn&#8217;t appear anywhere else.</p>
<p>:)</p>

		
				</div>
		<ol class="children">
		<li class="comment odd alt depth-3" id="comment-1289965">
				<div id="div-comment-1289965" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170322-00/?p=95796#comment-1289965">
			March 23, 2017 at 1:30 pm</a>		</div>

		<p>Non-issue. You keep going until you decode a valid header.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment even depth-2" id="comment-1290246">
				<div id="div-comment-1290246" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Tautvydas Zilys</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170322-00/?p=95796#comment-1290246">
			March 27, 2017 at 10:26 am</a>		</div>

		<p>Or just use VirtualQuery instead of scanning memory manually. Way less error prone.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment byuser comment-author-fredericmagnyf odd alt thread-odd thread-alt depth-1 parent" id="comment-1289875">
				<div id="div-comment-1289875" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Medinoc' rel='external nofollow' class='url'>Medinoc</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170322-00/?p=95796#comment-1289875">
			March 23, 2017 at 2:36 am</a>		</div>

		<p>But since it&#8217;s a Windows-10-only function, you still need to access it dynamically (through delay-loading if you&#8217;re on a Metro app?) if you want to run on earlier platforms, so there&#8217;s a bit of a chicken-and-egg scenario here&#8230;</p>

		
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-wndsks even depth-2" id="comment-1290135">
				<div id="div-comment-1290135" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/skSdnW' rel='external nofollow' class='url'>skSdnW</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170322-00/?p=95796#comment-1290135">
			March 25, 2017 at 6:56 am</a>		</div>

		<p>It exists in 8/8.1 as well, never trust MSDN version numbers!</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment odd alt thread-even depth-1" id="comment-1289885">
				<div id="div-comment-1289885" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Neil</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170322-00/?p=95796#comment-1289885">
			March 23, 2017 at 3:22 am</a>		</div>

		<p>Actually even on Win16 your program wouldn&#8217;t even start if the DLL hadn&#8217;t been installed. Where things went wrong is when the installed version wasn&#8217;t new enough and was missing an export that the program needed. Or both programs had installed the DLL locally, which didn&#8217;t work when you started the older program first. Or someone else&#8217;s broken installer had downgraded the shared copy of the DLL to an earlier version.</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

