<html>
<head>
<title>Solutions that require a time machine: Making applications which require compatibility behaviors crash so the developers will fix their bug before they ship</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>Solutions that require a time machine: Making applications which require compatibility behaviors crash so the developers will fix their bug before they ship</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>January 31, 2011 / year-entry #22</td></tr>
<tr><td><b>Tags:</b></td><td>other</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20110131-00/?p=11633</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>76</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">A while ago, I mentioned that there are many applications that rely on WM_PAINT messages being delivered even if there is nothing to paint because they put business logic inside their WM_PAINT handler. As a result, Windows sends them dummy WM_PAINT messages. Jerry Pisk opines, Thanks to the Windows team going out of their way...</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>A while ago, I mentioned that <a href="http://blogs.msdn.com/oldnewthing/archive/2006/03/27/561924.aspx"> there are many applications that rely on <code>WM_<wbr>PAINT</wbr></code> messages being delivered even if there is nothing to paint</a> because they put business logic inside their <code>WM_<wbr>PAINT</wbr></code> handler. As a result, Windows sends them dummy <code>WM_<wbr>PAINT</wbr></code> messages.</p>
<p> <a href="http://blogs.msdn.com/oldnewthing/archive/2006/03/27/561924.aspx#562184"> Jerry Pisk opines</a>, </p>
<blockquote class="q"><p> Thanks to the Windows team going out of their way not to break poorly written applications developers once again have no incentive to clean up their act and actually write working applications. If an application requires a dummy WM_<wbr>PAINT not to crash it should be made to crash as soon as possible so the developers go in and fix it before releasing their "code".  </wbr></p>
</blockquote>
<p> In other words, Jerry recommends that Microsoft use the time machine that Microsoft Research has been secretly perfecting for the past few years. (They will sometimes <a href="http://www.wired.com/gadgetlab/2010/11/time-travel/"> take it out for a spin and fail to cover their tracks</a>.) </p>
<p> In 1993, Company&nbsp;X writes a program that relies on <code>WM_<wbr>PAINT</wbr></code> messages arriving in a particular order relative to other messages. (And just to make things more interesting, in 1994, Company&nbsp;X goes out of business, or they discontinue the program in question, or the only person who understands the code leaves the company or dies in a plane crash.) </p>
<p> In 1995, changes to Windows alter the order of messages, and in particular, <code>WM_<wbr>PAINT</wbr></code> messages are no longer sent under certain circumstances. I suspect that the reason for this is the introduction of the taskbar. Before the taskbar,  <a href="http://blogs.msdn.com/oldnewthing/archive/2004/10/28/249044.aspx"> minimized windows appeared as icons on your desktop</a> and therefore received <code>WM_<wbr>PAINT</wbr></code> messages while minimized. But now that applications minimize to the taskbar, minimized windows are sent off screen and never actually paint. The taskbar button does the job of representing the program on the screen. </p>
<p> Okay, now let's put Jerry in charge of solving this compatibility problem. He recommends that instead of sending a dummy <code>WM_<wbr>PAINT</wbr></code> message to these programs to keep them happy, these programs should instead be made to crash as soon as possible, so that the developers can go in and fix the problem before they release the program. </p>
<p> In other words, he wants to take the Microsoft Research time machine back to 1993 with a beta copy of Windows&nbsp;95 and give it to the programmers at Company&nbsp;X and tell them, "Your program crashes on this future version of Windows that doesn't exist yet in your time. Fix the problem before you release your code. (Oh, and by the way, <a href="http://www.baseball-reference.com/postseason/1993_WS.shtml"> the Blue Jays are going to repeat</a>.)" </p>
<p> Or maybe I misunderstood his recommendation. </p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (76)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-891613">
				<div id="div-comment-891613" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">CGomez</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110131-00/?p=11633#comment-891613">
			January 31, 2011 at 7:06 am</a>		</div>

		<p>No, you got it about right. &nbsp;Some people don&#39;t think things through or have the experience of shipping operating systems for decades.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-891633">
				<div id="div-comment-891633" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">lister</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110131-00/?p=11633#comment-891633">
			January 31, 2011 at 7:19 am</a>		</div>

		<p>GO JAYS! :^D</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-891643">
				<div id="div-comment-891643" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Bob G</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110131-00/?p=11633#comment-891643">
			January 31, 2011 at 7:20 am</a>		</div>

		<p>@Sunil: sounds right, better hope that Microsoft Research are solving the halting problem in their tea breaks between building the time machine. :-)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-891653">
				<div id="div-comment-891653" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Vladimir</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110131-00/?p=11633#comment-891653">
			January 31, 2011 at 7:26 am</a>		</div>

		<p>I think a more sensible variation of this suggestion (and perhaps what Jerry meant in the first place) is to have all NEW applications crash (or better, simply not receive dummy WM_PAINT messages), while maintaining compatibility with old versions. This could be done with a &quot;whitelist&quot; (e.g. apps with a manifest get the new behaviour) or &quot;blacklist&quot; (the application compatibility database).</p>
<div class="post">[<i>What about plug-ins? A new app loads a plug-in which requires the old behavior. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-891663">
				<div id="div-comment-891663" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Dan Bugglin</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110131-00/?p=11633#comment-891663">
			January 31, 2011 at 7:31 am</a>		</div>

		<p>He makes the assumption that the developers of the application can and will update it for the latest and greatest Windows. &nbsp;Which doesn&#39;t always happen.</p>
<p>He also makes the assumption that making random programs crash that worked just fine on the old Windows will NOT negatively affect sales of the new Windows.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-891673">
				<div id="div-comment-891673" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Mathieu Garstecki</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110131-00/?p=11633#comment-891673">
			January 31, 2011 at 7:34 am</a>		</div>

		<p>Sunil Joshi: here lies the whole problem, how can you distinguish between drawing and business code ?</p>
<p>Even if it was possible, what would be the result ? Your Very Important Business Application developed, several years ago by some contractors, with no source code (it disappeared in the Big NAS Collapse of &#39;01), breaks because that version of Windows got pedantic on what code can go in WM_PAINT message handlers, for some bizarre reason only understood by Microsoft and some geeks that read The Old New Thing. Good way to give new customers to the competition !</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-891683">
				<div id="div-comment-891683" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Simon</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110131-00/?p=11633#comment-891683">
			January 31, 2011 at 7:37 am</a>		</div>

		<p>&gt; What about plug-ins? A new app loads a plug-in which requires the old behavior. -Raymond</p>
<p>Can you give me an actual example where this was/is happening? Your argument reads like an thought up excuse not like a real issue.</p>
<div class="post">[<i>Example 1: Explorer (shell extensions are plug-ins). Example 2: Office (plug-ins are, um, Office plug-ins). Example 3: Common dialog box (which is itself a plug-in inside a host application which may have compatibility shims applied). Explorer and common dialogs struggle with this issue a lot. I suspect Office does too. I found it interesting that you consider something we struggle with constantly to be a made-up excuse. Every COM object is a plug-in. There are a lot of COM objects. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-891693">
				<div id="div-comment-891693" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Dennis</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110131-00/?p=11633#comment-891693">
			January 31, 2011 at 7:39 am</a>		</div>

		<p>Why would you want to try to install Windows 95 in 1993, you can easily install Windows 3.11 in 2011&#8230;</p>
<p>What i&#39;m saying is that for one poorly written program, the user can always install (on a seperate box, or virtual machine) an OS that will run that program.</p>
<p>Maybe as a bonus, another company/developer will see that as an opportunity to create a good solution. Or maybe there is already another better program available, but the user is too &#39;lazy&#39; to search&#8230; because it already works!</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-891703">
				<div id="div-comment-891703" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Sunil Joshi</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110131-00/?p=11633#comment-891703">
			January 31, 2011 at 7:39 am</a>		</div>

		<p>@Mathieu Garstecki</p>
<p>Quite &#8211; to make it clear I was not suggesting that Windows perform such detection; I was attempting (and clearly failing) to be ironic although I think Bob G got my drift.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-891713">
				<div id="div-comment-891713" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Charles C</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110131-00/?p=11633#comment-891713">
			January 31, 2011 at 7:39 am</a>		</div>

		<p>The point is that if windows keep doing that, it will become unmanageable eventually.</p>
<p>What is the point to maintain the OS backward compatible with an application even if the original author had no incentive to maintain it?</p>
<div class="post">[<i>Because <a href="http://blogs.msdn.com/b/oldnewthing/archive/2006/11/20/1109012.aspx" rel="nofollow">it takes only one program to foul an upgrade</a>. The original author may not care, but the original <span style="text-decoration:underline;">customer</span> does! -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-891723">
				<div id="div-comment-891723" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Adam Rosenfield</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110131-00/?p=11633#comment-891723">
			January 31, 2011 at 7:46 am</a>		</div>

		<p>@Simon: Consider an application that loads a plugin DLL which subclasses your main window and modifies its WM_PAINT handler. &nbsp;Now suddenly you&#39;re doing business logic in WM_PAINT when you weren&#39;t before.</p>
<p>@Sunil Joshi: I picked up the irony (or is it sarcasm?) if your post, though I admit it was subtle.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-891733">
				<div id="div-comment-891733" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">MarcBernard</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110131-00/?p=11633#comment-891733">
			January 31, 2011 at 7:47 am</a>		</div>

		<p>Looking forward (or is it backward?) to Microsoft Chronology System for Windows 2011 Enterprise Studio Version.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-891743">
				<div id="div-comment-891743" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Simon</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110131-00/?p=11633#comment-891743">
			January 31, 2011 at 7:49 am</a>		</div>

		<p>@Adam: Yeah, I do see the point. But I was asking for an actual case where this would become a problem. (And where white-/blacklisting the parent application wouldn&#39;t help)</p>
<div class="post">[<i>You&#39;re going to white-/blacklist Explorer? What if the bad plug-in is a shell extension, injected into every process via the File.Open dialog box. Now you have to blacklist your entire computer. You&#39;ve gained nothing. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-891773">
				<div id="div-comment-891773" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Skyborne</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110131-00/?p=11633#comment-891773">
			January 31, 2011 at 8:02 am</a>		</div>

		<p>I need to add, because nothing is obvious on the Internet, that I named a specific program and plugin for example purposes only, to make said example easier to understand instead of saying &quot;a program&quot; and &quot;a plugin&quot; all the time. &nbsp;It isn&#39;t meant to imply bad behavior on the part of the fictitious plugin authors, nor the real program.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-891793">
				<div id="div-comment-891793" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">James</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110131-00/?p=11633#comment-891793">
			January 31, 2011 at 8:08 am</a>		</div>

		<p>&quot;@Adam: Yeah, I do see the point.&quot;</p>
<p>If you hadn&#39;t said that Simon, you&#39;d be an idiot.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-891803">
				<div id="div-comment-891803" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">GSerg</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110131-00/?p=11633#comment-891803">
			January 31, 2011 at 8:23 am</a>		</div>

		<p>As a somewhat related note: It has actually been encouraged to put the business logic into a paint handler. The reasoning was, &quot;You don&#39;t want to confuse your users by not displaying your app until you have finished some startup calculations. They will think your program failed to start, and will try to launch it again, potentially causing problems. Instead, put your business logic into WM_PAINT handler, so that your calculation begins after the non-client area (that is, border of your window) has appeared, this will tell the user the application has started, and they will happily wait.&quot;</p>
<p>I personally never did this, but I clearly remember the recommendation, and the source was quite credible.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-891813">
				<div id="div-comment-891813" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Simon</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110131-00/?p=11633#comment-891813">
			January 31, 2011 at 8:28 am</a>		</div>

		<blockquote><p>
  Skyborne: if MS prevented foobar2000 from running [&#8230;]
</p></blockquote>
<p>We&#39;re not talking about blocking an application. We&#39;re talking about enabling the WM_PAINT-fix only for a selected set of applications much like many other compatibility shims. No harm done if your application gets too many WM_PAINT messages yet future applications will be written properly.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-891823">
				<div id="div-comment-891823" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Jim Lyon</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110131-00/?p=11633#comment-891823">
			January 31, 2011 at 8:32 am</a>		</div>

		<p>While you can&#39;t change the past, there ARE things you can do to help the future. Nobody[1] intentionally does silly things like put business logic in the WM_PAINT handler, and most would happily remove it if the bug is found during testing. The trick is to have a &quot;persnickety&quot; mode in Windows that looks for all kind of unusual things, that rearranges messages that usually arrive in a fixed order, runs heap consistency checkers often, and so forth.</p>
<p>Actually, there is such a mode: it&#39;s call AppVerifier. If you&#39;re not using it during development and test, you&#39;re doing your users a disservice. (And it would do the world good for Microsoft to extend AppVerifier every time it creates a new API set.)</p>
<p>&#8212; jimbo</p>
<p>[1] Well, almost nobody. &nbsp; (-:</p>
<div class="post">[<i>Hey wait, if your business logic is entirely visual, then it is quite common to <a href="http://blogs.msdn.com/b/oldnewthing/archive/2003/08/29/54728.aspx" rel="nofollow">put business logic in the WM_PAINT handler</a>. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-891833">
				<div id="div-comment-891833" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Anders</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110131-00/?p=11633#comment-891833">
			January 31, 2011 at 8:34 am</a>		</div>

		<p>The real problem here is that in companies this problem will surface during a windows upgrade project, causing the cost to be incurred due to a &quot;windows upgrade&quot;, not due to bad programming. Even worse, consultants may suggest that the real fix is to rewrite those applications in latest whatever or do a full market survey before replacing the application.</p>
<p>At the end of the day you could end up statying at the old windows, or even worse for Microsoft hitting a price point where they may just as well migrate to another platform like Mac OS X with wine&#8230;.</p>
<p>That&#39;s the kind of power buisness applications have compared to off the shelf applications.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-891843">
				<div id="div-comment-891843" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Simon</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110131-00/?p=11633#comment-891843">
			January 31, 2011 at 8:35 am</a>		</div>

		<p>@Jim: AppVerifier should be enabled by default in Visual Studio for example. You need intelligent defaults for stupid developers (me included).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-maurits even thread-even depth-1" id="comment-891853">
				<div id="div-comment-891853" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Maurits+%5BMSFT%5D' rel='external nofollow' class='url'>Maurits [MSFT]</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110131-00/?p=11633#comment-891853">
			January 31, 2011 at 8:42 am</a>		</div>

		<p>This problem is not unique to Windows, it&#39;s generic to all platforms.</p>
<p>One solution is to have a &quot;strict mode&quot; switch on the platform which pops up assertions whenever questionable behavior is detected. &nbsp;Developers develop in &quot;strict mode&quot;; customers run in &quot;normal mode&quot;; testers test both ways.</p>
<div class="post">[<i>We already have a &quot;strict mode&quot; (chk builds). But people don&#39;t run them because &quot;it asserts too much.&quot; -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-891873">
				<div id="div-comment-891873" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">K</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110131-00/?p=11633#comment-891873">
			January 31, 2011 at 8:55 am</a>		</div>

		<p>Astonishing. Apple must have a Time machine (and not the backup software kind), because they do this with every major release of OS-X. That should also explain why their stocks are worth so much right now.</p>
<p>A bit of Apple&#39;s philosophy wouldn&#39;t hurt MS, and the opposite is also true (not breaking every single piece of code with 10.4 -&gt; 10.5).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-jader3rd even thread-even depth-1" id="comment-891883">
				<div id="div-comment-891883" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/jader3rd' rel='external nofollow' class='url'>jader3rd</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110131-00/?p=11633#comment-891883">
			January 31, 2011 at 8:56 am</a>		</div>

		<p>I think what Jerry was complaining about is the fact that Windows does have a history of finding a bug, fixing it, doing QA and discovering it breaks some applications, and then leaves the bug around. While I wouldn&#39;t want a fix like that come out in an Service Pack, I would like them to get fixed for new OS releases. </p>
<p>This then bring up the business argument of &quot;No will use new versions of Windows if their applications don&#39;t run on it.&quot; But if every application ever written for windows will run on any version of Windows it does beg the question of &quot;Why would I get a new version of Windows if nothing has changed.&quot; If the application can be changed such that it will work on the original version of Windows, and on a fixed version, I think that the Windows team should fix the bug.</p>
<p>I hope to see more of these types of changes, because that will (hopefully) free up the Windows team to make these improvments, because anyone needing an old application can run it in a virtual instance of the old version of Windows.</p>
<div class="post">[<i>It&#39;s not true that every application ever written for Windows will run on <span style="text-decoration:underline;">any</span> version of Windows. Your application designed for Windows XP won&#39;t run on Windows 95, for example. Compatibility typically only moves in one direction. (And <a href="http://blogs.msdn.com/b/oldnewthing/archive/2005/10/05/477317.aspx" rel="nofollow">virtual machines have their own problems</a>.) -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-891903">
				<div id="div-comment-891903" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Simon</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110131-00/?p=11633#comment-891903">
			January 31, 2011 at 9:15 am</a>		</div>

		<p>&gt;&gt;&gt; What about plug-ins? A new app loads a plug-in which requires the old behavior. -Raymond</p>
<p>&gt;&gt; Can you give me an actual example where this was/is happening? [&#8230;]</p>
<p>&gt;Example 1: Explorer (shell extensions are plug-ins).</p>
<p>&gt;Example 2: Office (plug-ins are, um, Office plug-ins).</p>
<p>&gt;Example 3: Common dialog box (which is itself a plug-in inside a host application which may have compatibility shims applied).</p>
<p>Raymond, tell me then how many of these applications/plugins/COM objects rely on the old WM_PAINT behaviour. What plugin would break? Give me names, numbers please. I can&#39;t come up with any cases where the WM_PAINT order would make a difference.</p>
<p>And yes, you could blacklist Explorer and/or Office. Or not list them and let them opt-in whenever a popular, listed plugin is loaded.</p>
<p>The reality is this: As you pointed out, just fixing the bug is a bad idea. Not fixing the bug is also a bad idea. Another reality is that lot&#39;s of old applications don&#39;t work correctly on current windows releases. 256-color fullscreen games for example (because Windows nowadays sometimes changes the color palette behind the games back). So why not do the right thing (the MIT approach) and force future applications to work correctly?</p>
<div class="post">[<i>I didn&#39;t realize you were talking about WM_PAINT specifically; I thought you were talking about compatibility in general. I do not know off the top of my head the names of any programs why rely on the dummy WM_PAINT, but I know they exist because I&#39;ve seen the bug reports. The one I remember is some app that encountered a divide-by-zero bug if it didn&#39;t get its dummy paint. I thought I mentioned that in the original article. Oh yes, I did. (And imagine the huge list of opt-ins applications would have to include. &quot;No, don&#39;t send me dummy paints (but I promise I won&#39;t crash if I get them anyway).&quot; &quot;No, don&#39;t invalidate the screen if I pass NULL to InvalidateWindow.&quot; &quot;No, you don&#39;t need to return exactly TRUE from IsWindow; I can handle other nonzero values.&quot; And so on. And then you&#39;d have to <a href="http://blogs.msdn.com/b/oldnewthing/archive/2007/07/23/4003873.aspx" rel="nofollow">add tests all through the OS for every single one of these tiny little things</a>. IsWindow would change from &quot;if itnernal_algorithm(hwnd)) { <span style="text-decoration:underline;">if (ApplicationCompatibilityFlag(ISWINDOW_MUST_RETURN_EXACTLY_TRUE)) return TRUE;</span> else return 42; } else return FALSE;&quot; Congratulations, you just bloated the IsWindow function. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-891923">
				<div id="div-comment-891923" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">John</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110131-00/?p=11633#comment-891923">
			January 31, 2011 at 9:29 am</a>		</div>

		<p>I think this is really a question of philosophy. &nbsp;You have two choices:</p>
<ol>
<li>Provide backward compatibility hacks that keep bad old programs running at the expense of people writing new bad programs.</li>
<li>
<p>Break backward compatibility so that new programs will have to be written correctly at the expense of old bad programs breaking.</p>
</li>
</ol>
<p>Obviously choice 1 makes the most sense from a business perspective, so that&#39;s what Microsoft went with. &nbsp;The upside is that Lotus Notes 1.0 will work in Windows 2038. &nbsp;The downside is that Microsoft has to go out of their way to ensure that backward compatibility is maintained. &nbsp;At some point in the future, the cost of maintaining that compatibility is going to be outweighed by the benefit.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-891933">
				<div id="div-comment-891933" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Evan</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110131-00/?p=11633#comment-891933">
			January 31, 2011 at 9:34 am</a>		</div>

		<p>@jader3rd: Not breaking backwards compatibility doesn&#39;t mean nothing changes.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-891943">
				<div id="div-comment-891943" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Rangoric</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110131-00/?p=11633#comment-891943">
			January 31, 2011 at 9:38 am</a>		</div>

		<p>@Simon &#8211; Are you expecting him to have a list of every single plug in, application, and extension, and ALSO what rules they &quot;break&quot;?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-891963">
				<div id="div-comment-891963" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">JJJ</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110131-00/?p=11633#comment-891963">
			January 31, 2011 at 9:57 am</a>		</div>

		<p>@Dennis: &nbsp;&quot;What i&#39;m saying is that for one poorly written program, the user can always install (on a seperate box, or virtual machine) an OS that will run that program.&quot;</p>
<p>Virtualization can be a solution, but you run into problems when you no longer want the old app to be isolated. &nbsp;Perhaps you want to parse its output, or automate it, or invoke it from a brand new C# utility that your company created.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-891973">
				<div id="div-comment-891973" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Paul M. Parks</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110131-00/?p=11633#comment-891973">
			January 31, 2011 at 10:12 am</a>		</div>

		<p>@Dennis: &quot;Why would you want to try to install Windows 95 in 1993, you can easily install Windows 3.11 in 2011&#8230;&quot;</p>
<p>It&#39;s not always so easy. Pat solutions like this sound great in a blog comment, but implementing them for actual customers is another matter.</p>
<p>&quot;&#8230;[F]or one poorly written program, the user can always install (on a seperate box, or virtual machine) an OS that will run that program.&quot;</p>
<p>What if that program needs to be part of each employee&#39;s day-to-day work, on each employee&#39;s workstation? I have a few of those on my office machine right now.</p>
<p>&quot;Maybe as a bonus, another company/developer will see that as an opportunity to create a good solution. Or maybe there is already another better program available, but the user is too &#39;lazy&#39; to search&#8230; because it already works!&quot;</p>
<p>You may be confusing laziness with frugality, or a lack of interest in the latest buzzwordology, or a resistance to paying someone to write something that already exists, and works. Most people aren&#39;t interested in the explanations for why their software stopped working in Windows 7. They just want it to work, and if they have to choose between upgrading to a new OS or having their software continue to work, they&#39;ll usually choose whichever is cheaper and less disruptive. Sadly, I&#39;m writing this from an XP machine because the &quot;new OS&quot; option was more expensive for this particular company.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-891983">
				<div id="div-comment-891983" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Skyborne</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110131-00/?p=11633#comment-891983">
			January 31, 2011 at 10:42 am</a>		</div>

		<p>@Simon: I&#39;ll need your definitions of &#39;whitelist&#39; and &#39;blacklist&#39; to understand what you&#39;re trying to tell me, because mine are not related to compatibility shims in any way. &nbsp;If I blacklist a program, then it doesn&#39;t run.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-leo-davidson even thread-even depth-1" id="comment-892003">
				<div id="div-comment-892003" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Leo+Davidson' rel='external nofollow' class='url'>Leo Davidson</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110131-00/?p=11633#comment-892003">
			January 31, 2011 at 11:25 am</a>		</div>

		<blockquote><p>
  What about plug-ins?
</p></blockquote>
<p>Could you tie the shim to the module that registered the window, rather than the one which started the process?</p>
<p>I guess subclassed windows may cause problems, so maybe the module where the window-proc or dialog-proc resides.</p>
<p>Of course, this may be more complex than it&#39;s worth, even if it does work. If there isn&#39;t a big downside to the dummy WM_PAINT messages then I&#39;m not sure why anyone cares. I mean, if the only complaint is the complexity of the Windows code-base then adding elaborate ways to break new apps without breaking old ones would surely add to the complexity, not reduce it.</p>
<blockquote><p>
  We already have a &quot;strict mode&quot; (chk builds). But people don&#39;t run them because &quot;it asserts too much.&quot;
</p></blockquote>
<p>The checked builds are useful but I think it&#39;s fairly obvious why they are not more widely used.</p>
<p>It&#39;s not just that they assert too much. They assert for too many things (I only want to debug my own code, not everyone else&#39;s). More importantly, turning the &quot;mode&quot; on and off requires you to re-install the whole OS (or have a (real, virtual or dual-boot) machine dedicated to it).</p>
<p>So you have to really want/need to use a checked build before it seems worth the time and money cost. It doesn&#39;t seem like something you&#39;d want on machines people use day-to-day and thus isn&#39;t something you&#39;d get good test coverage out of unless you have fully automated build, deployment and test scripts that you can fling at a dedicated test machine. Some people do have that but it reduces the potential users even further.</p>
<p>There are simpler tools/modes/flags like PageHeap and the compatibility/verification tools which can be really (and realistically) useful for testing, yet which are relatively unknown. Even then, though, people rarely turn them on unless they suspect there is a problem.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-892023">
				<div id="div-comment-892023" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Mike</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110131-00/?p=11633#comment-892023">
			January 31, 2011 at 12:15 pm</a>		</div>

		<p>@John Here&#39;s some marketing hooks:</p>
<p>Windows &#8211; Full of bugs because we we&#39;re afraid of alienating a couple insurance agencies in Topeka.</p>
<p>Windows &#8211; The most bloated code base in the industry so that every app you&#39;ll never use will work forever.</p>
<p>Windows &#8211; We could change the world, but we&#39;d rather make up excuses.</p>
<div class="post">[<i>It&#39;s not just &quot;a couple of insurance agencies in Topeka.&quot; It&#39;s &quot;<span style="text-decoration:underline;">your company</span>&quot;. And <a href="http://blogs.msdn.com/b/oldnewthing/archive/2006/11/06/999999.aspx" rel="nofollow">major worldwide corporations</a>. These are apps you use. (And the challenge of Windows is changing the world without breaking the world.) -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-892033">
				<div id="div-comment-892033" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Tyler</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110131-00/?p=11633#comment-892033">
			January 31, 2011 at 12:26 pm</a>		</div>

		<p>@Mike</p>
<p>Windows &#8211; So that in house app that was written in 1993 that STILL runs your Fortune 500 company can still run.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-892053">
				<div id="div-comment-892053" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Gabe</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110131-00/?p=11633#comment-892053">
			January 31, 2011 at 1:47 pm</a>		</div>

		<p>K: Apple doesn&#39;t have a time machine; they just don&#39;t care when they break old programs. No Fortune 500 company has a mission-critical MacOS app, so who cares when old stuff breaks? Since Apple is the only company that can make hardware that runs MacOS, they can just stop making hardware that runs old versions of their OS and eventually everybody will be forced to upgrade.</p>
<p>Contrast that to Windows, where anybody can make hardware that still runs WinXP, so MS doesn&#39;t have the leverage to force upgrades that Mike seems to assume. Vista was released 4 years ago, yet &#8212; if you&#39;re willing to believe Wikipedia (<a rel="nofollow" target="_new" href="http://en.wikipedia.org/w/index.php?title=Usage_share_of_operating_systems&amp;oldid=411197805" rel="nofollow">en.wikipedia.org/&#8230;/index.php</a>) &#8212; XP is still the most popular OS in the world! While XP has as much market share as the following two versions combined, the latest MacOS has nearly double the market share of the previous two versions combined.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-892063">
				<div id="div-comment-892063" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">AC</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110131-00/?p=11633#comment-892063">
			January 31, 2011 at 2:18 pm</a>		</div>

		<p>@Bob G:</p>
<p>But that&#39;s easy because the Halting Problem can be reduced to having a time machine.</p>
<p>(Time machine -&gt; unbounded CPU time available in a fixed time slice -&gt; decide HP)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-892073">
				<div id="div-comment-892073" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">R. Bemrose</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110131-00/?p=11633#comment-892073">
			January 31, 2011 at 2:36 pm</a>		</div>

		<p>Doc&#8230;. you built a time machine&#8230; out of a Delorean?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-892083">
				<div id="div-comment-892083" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Anonymous</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110131-00/?p=11633#comment-892083">
			January 31, 2011 at 2:52 pm</a>		</div>

		<p>@Joshua: That&#39;s ridiculous; just don&#39;t have your dev machine connected to the internet/network.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-891623">
				<div id="div-comment-891623" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Sunil Joshi</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110131-00/?p=11633#comment-891623">
			January 31, 2011 at 7:06 am</a>		</div>

		<p>What he is implicitly suggesting is that applications should not make any assumptions about WM_PAINT messages (i.e. put no business logic in the handlers) and that Windows should *some how* detect that an application has being doing something other than painting in response to such messages. Once Windows has detected this, the application should be terminated immediately. How Windows is supposed to detect this is an entirely different question&#8230;.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-maurits even thread-even depth-1" id="comment-892093">
				<div id="div-comment-892093" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Maurits+%5BMSFT%5D' rel='external nofollow' class='url'>Maurits [MSFT]</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110131-00/?p=11633#comment-892093">
			January 31, 2011 at 3:20 pm</a>		</div>

		<p>&gt; But people don&#39;t run them</p>
<p>I do. &nbsp;And I find a lot of bugs that way.</p>
<p>Do chk builds still send dummy WM_PAINT messages?</p>
<div class="post">[<i><a href="http://blogs.msdn.com/b/oldnewthing/archive/2006/08/15/701130.aspx" rel="nofollow">Imagine if they didn&#39;t</a>. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-892103">
				<div id="div-comment-892103" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">James Sutherland</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110131-00/?p=11633#comment-892103">
			January 31, 2011 at 3:52 pm</a>		</div>

		<p>&quot;A few people would be mad and wouldn&#39;t be able to run an old app anymore. &nbsp;What do you think they&#39;re going to do? &nbsp;Move their whole organization to Linux or Mac just because of one app? &nbsp;Even if that app is critical to their business? &nbsp;What exactly is their other option? &nbsp;Their critical app only works on Windows!&quot;</p>
<p>What really happens is BigCorp finds their stock control application, or whatever, doesn&#39;t work properly under Windows Vista when it did under Windows XP &#8211; so, they stay with XP. Their intranet doesn&#39;t work with IE 7 &#8211; so they ban Firefox and mandate that all new web development has to be IE 6 compatible. They use their purchasing power to demand that Dell and Sony keep making machines that run Windows XP for them, they insist their antivirus and word processing software stay Windows XP compatible &#8211; and before you know it, Microsoft&#39;s upgrade revenue has crashed, and we are all stuck developing and testing for a decade-old version of Windows, unable to use all the nice new features.</p>
<p>Perhaps one day checked build will be a boot time option, and later we will reach the point where rebooting in checked mode is the first reaction to a machine misbehaving &#8211; but for now, big businesses seem to apply logic amounting to &#39;if it worked under version X and doesn&#39;t work under version Y, then version Y is faulty and we aren&#39;t upgrading&#39; &#8230; and I have to admit, they do actually have a point, even if it is a case of version Y having fixed a bug that this other product relied on.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-891753">
				<div id="div-comment-891753" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Skyborne</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110131-00/?p=11633#comment-891753">
			January 31, 2011 at 7:58 am</a>		</div>

		<p>@Simon: if MS prevented foobar2000 from running because foo_obscure MAY be loaded, then they&#39;re over-blocking: everyone who is NOT running foo_obscure is unnecessarily punished for its failure. &nbsp;What could foobar2000 do (assuming foo_obscure is closed-source) to allow it to run when it doesn&#39;t have foo_obscure, that would also *requires* foo_obscure to fix their problem instead of just adapting it to the new version and causing trouble again?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-891893">
				<div id="div-comment-891893" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110131-00/?p=11633#comment-891893">
			January 31, 2011 at 9:09 am</a>		</div>

		<p>[We already have a &quot;strict mode&quot; (chk builds). But people don&#39;t run them because &quot;it asserts too much.&quot; -Raymond]</p>
<p>I&#39;ll gladly run it myself if all hotfixes are available for it. Last I checked hotfixes for checked builds cannot be downloaded. My dev box is *not* going to have swiss-cheese security.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-maurits even thread-even depth-1" id="comment-892123">
				<div id="div-comment-892123" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Maurits+%5BMSFT%5D' rel='external nofollow' class='url'>Maurits [MSFT]</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110131-00/?p=11633#comment-892123">
			January 31, 2011 at 5:18 pm</a>		</div>

		<blockquote><p>
  Imagine if they didn&#39;t
</p></blockquote>
<p>Exactly&#8230; fre/chk does not suffice for a Win32 &quot;strict mode&quot;. &nbsp;chk + AppVerifier + static code analysis goes a little further down the path but there is still opportunity for further opt-in enforcement of the Win32 app contract.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-892133">
				<div id="div-comment-892133" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Cheong</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110131-00/?p=11633#comment-892133">
			January 31, 2011 at 5:25 pm</a>		</div>

		<p>[Hey wait, if your business logic is entirely visual, then it is quite common to put business logic in the WM_PAINT handler. -Raymond]</p>
<p>I agree.</p>
<p>I&#39;ve seen one application that, instead of relying on built-in Now() function, reads formatted time string from the &quot;clock&quot; control (which internally also use Now()&#8230;) and passes it to corresponding business logic components. The control updates it&#39;s time on WM_PAINT (which is fine because afterall, for the control, even if Windows don&#39;t pass WM_PAINT to minimized window, it doesn&#39;t really matter if the displayed time is not updated when the time is not to be displayed), so if windows don&#39;t receive WM_PAINT when minimized, that application will break.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-891913">
				<div id="div-comment-891913" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Mike</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110131-00/?p=11633#comment-891913">
			January 31, 2011 at 9:28 am</a>		</div>

		<p>Each new version of Windows seems to include some &quot;compatibility&quot; mode for the older versions, including things like a DOS emulator, in order to keep the old apps working. &nbsp;Except it seems that it&#39;s an afterthought every time. &nbsp;How about rejecting the idea that each new Windows version is just an &quot;upgrade&quot;, but a totally different system? &nbsp;Running code meant to run on previous versions of Windows simply doesn&#39;t run in a native fashion. &nbsp;It would run under some compatibility mode. &nbsp;Misbehaving apps that people actually care about are fairly rare and the users involved are generally willing to do a little work to make them work right.</p>
<p>Why is it that Microsoft, with its leverage on the market, never uses that leverage to force the customers/users to do things differently? &nbsp;If you just fixed the &quot;bug&quot;, what would happen? &nbsp;A few people would be mad and wouldn&#39;t be able to run an old app anymore. &nbsp;What do you think they&#39;re going to do? &nbsp;Move their whole organization to Linux or Mac just because of one app? &nbsp;Even if that app is critical to their business? &nbsp;What exactly is their other option? &nbsp;Their critical app only works on Windows! &nbsp;Forget the &quot;the customer is always right&quot; nonsense occasionally and just *do the right thing*. &nbsp;Turns out it won&#39;t hurt as much as you seem to think.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-891953">
				<div id="div-comment-891953" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">John</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110131-00/?p=11633#comment-891953">
			January 31, 2011 at 9:41 am</a>		</div>

		<p>@Mike: &nbsp;Yeah, that&#39;s a good marketing hook.</p>
<p>Windows &#8211; Because you don&#39;t have any other options.</p>
<p>Windows &#8211; Because we&#39;ve got you by the balls.</p>
<p>Windows &#8211; What are you gonna do about it, ***?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-892143">
				<div id="div-comment-892143" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Steve</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110131-00/?p=11633#comment-892143">
			January 31, 2011 at 6:15 pm</a>		</div>

		<p>No, if the application is using the API incorrectly it should break. &nbsp;If you want to run an application from 1993 that worked in 1993 use a virtual machine with Windows 3.11/95 on it. &nbsp;Microsoft should remove all the cruft, legacy functions and rubbish that is floating around in the Win32 api, it is a total mess. &nbsp;Deprecate and remove over multiple releases. &nbsp;At the moment Microsoft just does the deprecate part and never removes the function &quot;just in case&quot; some application might break. &nbsp;This legacy rubbish is holding Microsoft back.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-892153">
				<div id="div-comment-892153" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">MS</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110131-00/?p=11633#comment-892153">
			January 31, 2011 at 6:55 pm</a>		</div>

		<p>@Steve, Mike, et al.</p>
<p>Maybe you haven&#39;t been paying attention, but that solution is not really the panacea you describe. &nbsp;Raymond has addressed the virtual machine argument in several posts. &nbsp;He has even addressed the argument that the backwards compatibility is somehow a form of bloat. &nbsp;The vast majority of these things are completely miniscule in terms of speed/code size. &nbsp;Finally, the API certain evolves over time, it grows and is pruned version to version. &nbsp;I would challenge you &#8212; if things are so old and full of &quot;cruft&quot;, you should have no problem naming 100 functions that should be removed. &nbsp;Like, truly bad, not &quot;it looks old so I do not like it&quot; (the sort of petulance you are displaying right now). &nbsp;I can name four off the top of my head, but that is it, and I have been doing Windows development for a long time. &nbsp;Deliberately breaking backwards compatibility is not worth doing, as the downsides outweigh the upsides by a huge factor. &nbsp;I think you are making a huge fallacy: &quot;Because I do not use it, no one else does, because I am the clearly the most special person ever.&quot;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-892013">
				<div id="div-comment-892013" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">James Schend</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110131-00/?p=11633#comment-892013">
			January 31, 2011 at 11:31 am</a>		</div>

		<p>@K: Microsoft and Apple are basically on the opposite sides of this particular continuum. From my experience with System 7.0 breaking *virtually every app I used*, then OS X 10.2 breaking *virtually every app I used* all over again&#8211; well, I switched to Windows.</p>
<p>If you&#39;re happy with the way Apple does business, good for you. I use it on my home laptop. But I&#39;d personally never recommend a corporation invest in an Apple solution which could, at any time, break all of their critical business software.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-892163">
				<div id="div-comment-892163" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Moi</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110131-00/?p=11633#comment-892163">
			January 31, 2011 at 7:56 pm</a>		</div>

		<p>Could it be that for a lot of posters this is their first time on this blog? </p>
<p>I&#39;m having a very strong déjà vu here, not only with some of the suggestions (treat it as a new system, virtual machines&#8230; wow, brand new ideas! genius!) but also with the discussion in general.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-892173">
				<div id="div-comment-892173" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Sven</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110131-00/?p=11633#comment-892173">
			January 31, 2011 at 8:07 pm</a>		</div>

		<p>You know, I find all of this talk about why you can&#39;t have a whitelist rather baffling, considering that as of Windows 7, such a whitelist to disable compatibility shims does in fact exist: <a target="_new" href="http://msdn.microsoft.com/en-us/library/dd371711(VS.85).aspx" rel="nofollow">msdn.microsoft.com/&#8230;/dd371711(VS.85).aspx</a></p>
<p>So why wasn&#39;t the plugin scenario an issue for this?</p>
<div class="post">[<i>The plugin issue is still an issue. If an application specifies any of those behaviors, the application vendor has accepted responsibility for the plug-in problem. If your application hosts plug-ins outside your control, then you probably can&#39;t request the new behaviors because you don&#39;t know if the plug-ins are compatible with them. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-892183">
				<div id="div-comment-892183" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">jamesds</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110131-00/?p=11633#comment-892183">
			January 31, 2011 at 10:12 pm</a>		</div>

		<p>Each version of Windows should be cludge-free (i.e. no special-case handling of apps) and should some with the ability to run N previous versions of Windows in a VM so that old apps continue to function. &nbsp;The VM should be totally seamless &#8211; like &#39;Seamless Mode&#39; in VMWare (or is it Parallels &#8211; can&#39;t remember!).</p>
<p>Virtualisation and CPU horsepower are good enough these days for no apparent performance degradation. &nbsp;Each version of Windows comes out without special-case hacks for specific applications &amp; all apps &#39;just work&#39;. &nbsp;(it&#39;s conceivable that Windows would come supplied with a database of known apps associated with the version of Windows that they should be run under)</p>
<div class="post">[<i>I can see the news article. &quot;Windows N requires 512MB of memory per application because it runs everything not specifically marked as Version N-compatible in a virtual machine. Congratulations, your 4GB machine can run eight apps.&quot; -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-892193">
				<div id="div-comment-892193" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Miral</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110131-00/?p=11633#comment-892193">
			January 31, 2011 at 10:38 pm</a>		</div>

		<p>Shouldn&#39;t the default, though, be to disable those dummy WM_PAINTs unless a compatibility flag is set? &nbsp;(Which general users could set via the &quot;previous OS compatibility&quot; tab and site admins could set more fine-grained using the compatibility resource kit.) &nbsp;That way, &quot;live&quot; apps should eventually get fixed, if they&#39;re relying on undesirable behaviour; while the &quot;dead&quot; apps can continue to run by enabling the flag.</p>
<p>Granted, this does lead to bloating of the code to handle these compatibility hacks, but that&#39;s already necessary anyway; it doesn&#39;t seem like a big addition.</p>
<p>I wouldn&#39;t think too many users would have a problem with &quot;hey, this worked on my old OS, and it doesn&#39;t work on this one, so maybe I need to set the compatibility mode to my previous OS to make it work again&quot;&#8230;</p>
<div class="post">[<i>You&#39;re assuming it&#39;s as simple as finding the GenerateDummyPaint() function and commenting it out. In reality, it&#39;s something distributed throughout the window manager as a side effect of other behavior, like RDW_INTERNALPAINT. (And suppose you&#39;re a corporate with <a href="http://blogs.msdn.com/b/oldnewthing/archive/2006/11/06/999999.aspx" rel="nofollow">9000 internal applications</a>. Do you really want to sit down and test each and every one to decide which compatibility modes to use for each one? And now suppose you&#39;re a non-technical end user. A program doesn&#39;t work. You don&#39;t know about these &quot;compatibility modes&quot;. All you know is that your program doesn&#39;t work.) -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-892213">
				<div id="div-comment-892213" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">peterchen</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110131-00/?p=11633#comment-892213">
			January 31, 2011 at 11:05 pm</a>		</div>

		<p>Why do some want to break backward compatibility so badly. No, really, why?</p>
<p>Because it leads to cleaner code? That&#39;s something developers care about, not users. Few people like to analyze such situations, analyze such code, it&#39;s not an &quot;interesting problem&quot; in the curriculum of comp sci. News flash: most code is boring, code that pays money doubly so.</p>
<p>Because it stops developers making the same mistakes? It does not: they will continue to get their education from the current implementation, instead of reading the documents. They&#39;ll just come up with new ones. &quot;No problem, minimized windows never get a WM_PAINT, we don&#39;t need to handle that as a special case!&quot;</p>
<p>Because developers could fix other bugs? Yes they could, but they first need to rewrite that 1993 Win16 app as a 64 bit unicode WxF fest with Silverlight frontend. In an extreme driven agile way. Because that&#39;s what that insurance company in Topeka pays for.</p>
<p>Because it reduces sizeof(WindowsInstall)? Yes, but by what? Five percent? If you don&#39;t change the order of magnitude, most users will be unaffected.</p>
<p>Punishing wrongdoers? Go for it, but keep the civilians out of this.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-892233">
				<div id="div-comment-892233" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">peterchen</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110131-00/?p=11633#comment-892233">
			January 31, 2011 at 11:05 pm</a>		</div>

		<p>Why do some want to break backward compatibility so badly. No, really, why?</p>
<p>Because it leads to cleaner code? That&#39;s something developers care about, not users. Few people like to analyze such situations, analyze such code, it&#39;s not an &quot;interesting problem&quot; in the curriculum of comp sci. News flash: most code is boring, code that pays money doubly so.</p>
<p>Because it stops developers making the same mistakes? It does not: they will continue to get their education from the current implementation, instead of reading the documents. They&#39;ll just come up with new ones. &quot;No problem, minimized windows never get a WM_PAINT, we don&#39;t need to handle that as a special case!&quot;</p>
<p>Because developers could fix other bugs? Yes they could, but they first need to rewrite that 1993 Win16 app as a 64 bit unicode WxF fest with Silverlight frontend. In an extreme driven agile way. Because that&#39;s what that insurance company in Topeka pays for.</p>
<p>Because it reduces sizeof(WindowsInstall)? Yes, but by what? Five percent? If you don&#39;t change the order of magnitude, most users will be unaffected.</p>
<p>Punishing wrongdoers? Go for it, but keep the civilians out of this.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-892223">
				<div id="div-comment-892223" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Sven</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110131-00/?p=11633#comment-892223">
			January 31, 2011 at 11:05 pm</a>		</div>

		<p>&quot;If your application hosts plug-ins outside your control, then you probably can&#39;t request the new behaviors because you don&#39;t know if the plug-ins are compatible with them.&quot;</p>
<p>Okay, then the question becomes: since shell extensions are loaded by the common file dialogs, doesn&#39;t that mean that every single application using those dialogs cannot safely request the new behaviours? Doesn&#39;t that essentially mean nearly every single application? So what&#39;s the point of that manifest option at all, if no one can really use it?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-892243">
				<div id="div-comment-892243" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Sven</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110131-00/?p=11633#comment-892243">
			January 31, 2011 at 11:05 pm</a>		</div>

		<p>&quot;If your application hosts plug-ins outside your control, then you probably can&#39;t request the new behaviors because you don&#39;t know if the plug-ins are compatible with them.&quot;</p>
<p>Okay, then the question becomes: since shell extensions are loaded by the common file dialogs, doesn&#39;t that mean that every single application using those dialogs cannot safely request the new behaviours? Doesn&#39;t that essentially mean nearly every single application? So what&#39;s the point of that manifest option at all, if no one can really use it?</p>
<div class="post">[<i>There are many applications that don&#39;t load common file dialogs. They&#39;re things like services or apps with no real UI; they just sit there and churn through data. But your typical GUI app is probably of luck. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-892253">
				<div id="div-comment-892253" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Drak</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110131-00/?p=11633#comment-892253">
			January 31, 2011 at 11:12 pm</a>		</div>

		<p>Here&#39;s a suggestion which might be extremely stupid, but here it comes anyway:</p>
<p>Could there be a (Simple for MS) way to bring out a developer edition for windows WITHOUT all the backwards compatibility shims so that developers who were willing could develop in (what is at this moment) only the correct way?</p>
<p>Might be too difficult to do, I only do .Net on Windows so the suggestion might be silly.</p>
<div class="post">[<i>You&#39;re assuming it&#39;s easy to identify all the compatibility behaviors and simply ifdef them out and assume you don&#39;t need to re-test anything. A lot of compatibility behaviors are more than just an ifdef; they are baked into the design. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-892263">
				<div id="div-comment-892263" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Worf</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110131-00/?p=11633#comment-892263">
			January 31, 2011 at 11:21 pm</a>		</div>

		<p>How about a third option. Windows works just the way it is. However, when an app is run in debug mode, the compatibility hacks are turned off. This way, no blacklist is needed &#8211; plugins inherit whatever mode their hosting process is (retail, normally) even if it was a debug DLL. But a process running a debug EXE automatically tells Windows &quot;don&#39;t be special for me&quot;. It&#39;s debug mode, things are allowed to crash so you can catch it in the debugger.</p>
<p>As for Windows vs. MacOS &#8211; Apple&#39;s policy has been extremely clear &#8211; use only the documented APIs that aren&#39;t deprecated. Use private APIs, or hacks that aren&#39;t supported, and they will not care if it breaks. The most common causes for things to break is use of private APIs because Apple has a very nasty tendency to do a ton of stuff to private APIs. (And various OS enhancements that dig deep into the OS do break, often enough to render a system unbootable).</p>
<div class="post">[<i>This means that there would be a runtime switch for every single compatiblity hack, even the ones that are <a href="http://blogs.msdn.com/b/oldnewthing/archive/2007/07/23/4003873.aspx" rel="nofollow">zero lines of code</a>. Congratulations, you changed &quot;return Helper() != 0&quot; to &quot;return ApplicationCompatibilityHacksDisabled() ? Helper() : Helper() != 0;&quot; Yay, you added an extra function call to every compatibility hack, even the zero-line ones. And that doesn&#39;t even address the design changes that were made for compatibility. Should there be two designs for each feature, one that takes compatibility into account and another that doesn&#39;t? -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-892273">
				<div id="div-comment-892273" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Cheong</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110131-00/?p=11633#comment-892273">
			February 1, 2011 at 12:21 am</a>		</div>

		<p>@Drak: I don&#39;t think that will help.</p>
<p>For one thing, those applications behaves correctly as they were written. Just fail if the rule change in Windows N+1 version or above. But when there&#39;s apparently a need to change, the origional writter may not exist anymore, so noone is going to test and fix the application in your new developer versions without compatibility shims.</p>
<p>For the others, I doubt any company will allocate resources (time, money, etc.) to fix the bugs that only show up in such &quot;developer version&quot;. This edition may end up being &quot;something nobody who uses the feature actually wants&quot;.</p>
<p>Also, people who&#39;re willing to do things correctly will try to do things correctly, instead of abusing events in ways that doesn&#39;t intend to be used.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-892293">
				<div id="div-comment-892293" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Neil</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110131-00/?p=11633#comment-892293">
			February 1, 2011 at 2:34 am</a>		</div>

		<p>Why not provide grades of Windows logo?</p>
<p>Bronze (normal): Asserts in a checked build</p>
<p>Silver: Uses 3rd party libraries that assert</p>
<p>Gold: Does not assert</p>
<p>P.S. I still remember WM_PAINTICON.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-892303">
				<div id="div-comment-892303" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Hmmm</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110131-00/?p=11633#comment-892303">
			February 1, 2011 at 3:35 am</a>		</div>

		<p>[I don&#39;t see how you think the argument has no precedent. Vista broke a lot of stuff. Nobody bought it. -Raymond]</p>
<p>Well this argument will always be lost by the side without the hard data. Unless we know the ratio of bugs fixed in the OS itself vs compatibility related bugs nobody can say either way.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-892313">
				<div id="div-comment-892313" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Christian</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110131-00/?p=11633#comment-892313">
			February 1, 2011 at 4:15 am</a>		</div>

		<p>I want to thank everyone like Raymond who does the work of keeping this compatible and who just does their job to fix or advance Windows or every other program instead of enforcing strnage rules about great designs and how everyone must be forced to change working programms.</p>
<p>Windows will be successful exactly as long as the old ways of doing it stay in place. I hope never ever a bunch of kids is let loose to manage Windows development like it happened with Windows.</p>
<p>I hope the &quot;Raymond Chen Camp&quot; will win in the future to spare us things like Windows Home Server&#39;s removing of its best part or a Windows Mobile which is incompatible with its predecessor.</p>
<p>Everytime some kid decides to remove a feature or compatibility, I suffer.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-892323">
				<div id="div-comment-892323" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">terryf</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110131-00/?p=11633#comment-892323">
			February 1, 2011 at 4:49 am</a>		</div>

		<p>I do sw development for a living and do work for a large corporation. Around here the mantra for the software is &quot;it HAS to work&quot;. That&#39;s it.</p>
<p>For a customer it doesn&#39;t really matter, where the error is &#8211; in your application, in the spec, in the library you use from a third-party component, in windows, in your compiler.</p>
<p>My job as a sw developer is to figure these things out and just make it work. From reading Raymond&#39;s articles, this seems to be his/microsoft&#39;s mindset as well and for me this is definately the right thing to do, bcause if you try to think outside the technical mindset, then why should the world at large, care about the shim or whatever windows uses to make the application you need to use, work?</p>
<p>As a customer, I just want it to work, and why shouldn&#39;t I? It isn&#39;t my fault that some deeply technical things somewhere have gone wrong ten years ago.</p>
<p>I say, good work for both MS and Raymond for trying to educate people in the way the real world works.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-892363">
				<div id="div-comment-892363" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Simon</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110131-00/?p=11633#comment-892363">
			February 1, 2011 at 7:26 am</a>		</div>

		<blockquote><p>
  [&#8230; And then you&#39;d have to add tests all through the OS for every single one of these</p>
<p>  tiny little things. IsWindow would change from &quot;if itnernal_algorithm(hwnd)) { if</p>
<p>  (ApplicationCompatibilityFlag(ISWINDOW_MUST_RETURN_EXACTLY_TRUE)) return TRUE;</p>
<p>  else return 42; } else return FALSE;&quot; Congratulations, you just bloated the</p>
<p>  IsWindow function. -Raymond]
</p></blockquote>
<p>Thanks for pointing this out, Raymond! Point taken.</p>
<p>+1 vote to enable AppVerifier by default in Visual Studio.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-892283">
				<div id="div-comment-892283" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">K</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110131-00/?p=11633#comment-892283">
			February 1, 2011 at 12:41 am</a>		</div>

		<p>People have been missing my point:</p>
<p>Of course Apple does not have a time machine. And they break stuff quite a bit more often than strictly necessary, not for bug fixing, but just because. MS on the other hand doesn&#39;t even fix bugs. The philosophies are so far apart, it&#39;s not even funny, and I can see the advantages and disadvantages of both sides.</p>
<p>But one thing is just not true: Raymond complains that fixing the bug would impair business badly. It would not. MS has such a domination on the market that dropping backwards compatibility would not do much. Corporations could not switch to Linux or Mac over night if they are unhappy with that new windows that breaks one of their applications. And even if: Apple does not suffer bad business when they break things. Why should MS? It&#39;s an argument that doesn&#39;t have a precedence, just a fear of &quot;OMG, they *might* not buy windows&quot;, but who are you kidding?</p>
<p>One could argue that it might be hard to sell them &quot;Vista 2&quot; which not only is not an improvement, but also breaks an important app. Yes, that is true. But on the other hand: Do you really think it is necessary to sell them a product of which you know they don&#39;t need? Aren&#39;t we engineers who try to write good software? If you fix all the bugs and break 1% of all apps that have been written 5 years ago, that seems a decent trade off. Imagine how fast and stable such a system could be without so much legacy code, and what a joy it would be to use an elegant system API.</p>
<div class="post">[<i>I don&#39;t see how you think the argument has no precedent. Vista broke a lot of stuff. Nobody bought it. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-892373">
				<div id="div-comment-892373" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">JJJ</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110131-00/?p=11633#comment-892373">
			February 1, 2011 at 8:44 am</a>		</div>

		<p>&quot;However, when an app is run in debug mode, the compatibility hacks are turned off.&quot;</p>
<p>In addition to what Raymond said, this method is a whole lot of effort for roughly zero gain. &nbsp;It&#39;s opt-in for people who want a way to verify that they aren&#39;t relying on compatibility hacks. &nbsp;But the compatibility hacks in Windows would still have to exist because there are people who aren&#39;t willing to opt in, and those people may very well write popular or important applications that must not break between Windows versions.</p>
<p>I know I can&#39;t be the only person here who&#39;s worked with people that compiled only in release mode because the app doesn&#39;t work in debug mode.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-maurits odd alt thread-odd thread-alt depth-1" id="comment-892433">
				<div id="div-comment-892433" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Maurits+%5BMSFT%5D' rel='external nofollow' class='url'>Maurits [MSFT]</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110131-00/?p=11633#comment-892433">
			February 1, 2011 at 11:27 am</a>		</div>

		<p>I suppose, JJJ, you would advocate removing speed limit signs&#8230; because they take a lot of effort to put up, and people speed anyway?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-892453">
				<div id="div-comment-892453" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Jules</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110131-00/?p=11633#comment-892453">
			February 1, 2011 at 12:36 pm</a>		</div>

		<p>@K. &nbsp;Sure, Apple breaks stuff with new releases that Microsoft would keep compatible. &nbsp;Which is probably one of the reasons why OSX languishes with around 7% of market share (or probably lower &#8212; these figures are based on web client stats, and it&#39;s been suggested that most machines that aren&#39;t accessing the web are probably running Windows). &nbsp;And why &#8211; at least until the iPhone launched &#8211; Apple&#39;s value sat at somewhere in the region of a tenth Microsoft&#39;s.</p>
<p>(Current Apple share prices are buoyed by the success of the iPhone and iPad. &nbsp;I&#39;m betting that we&#39;ll see brand fatigue set in on those at some point in the next couple of years and Apple shares will slide downwards.)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-892483">
				<div id="div-comment-892483" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">JJJ</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110131-00/?p=11633#comment-892483">
			February 1, 2011 at 1:17 pm</a>		</div>

		<p>@Maurits: &nbsp;I don&#39;t get your analogy. &nbsp;Are the compatibility hacks the speed limit signs and people speeding are bad programmers? &nbsp;So you&#39;re asking me if I think we should remove compatibility hacks because people program bad anyway?</p>
<p>No&#8230; I don&#39;t think that at all. &nbsp;That&#39;s not even remotely close to what I said.</p>
<p>And are we supposed to be pretending that putting up a speed limit sign is a gargantuan effort? &nbsp;I didn&#39;t get that part either. &nbsp;It takes one person less than an hour to put up a sign.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-maurits even thread-even depth-1" id="comment-892503">
				<div id="div-comment-892503" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Maurits+%5BMSFT%5D' rel='external nofollow' class='url'>Maurits [MSFT]</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110131-00/?p=11633#comment-892503">
			February 1, 2011 at 2:25 pm</a>		</div>

		<p>Rules of Win32 programming = rules of the road</p>
<p>People who run only the release build because the debug build doesn&#39;t work = people who speed because they&#39;re late</p>
<p>Assertions + appverifier + other &quot;strict mode&quot; checks = speed limit signs (reading a speed limit sign is opt-in)</p>
<p>Crashes + other broken behavior = traffic cop giving out tickets (not following the speed limit has consequences)</p>
<p>Popular apps that get shimmed even though they break the rules = Steve Jobs parking in handicapped spots without a license plate</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-892533">
				<div id="div-comment-892533" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Sven</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110131-00/?p=11633#comment-892533">
			February 1, 2011 at 4:48 pm</a>		</div>

		<p>&quot;There are many applications that don&#39;t load common file dialogs. They&#39;re things like services or apps with no real UI; they just sit there and churn through data. But your typical GUI app is probably of luck.&quot;</p>
<p>And the bonus question: why isn&#39;t this information listed anywhere (that I could find)? It seems to me that the fact that the setting could be dangerous for any application that shows a file dialog would be rather important.</p>
<div class="post">[<i>Because the kernel guys follow <a href="http://blogs.msdn.com/b/oldnewthing/archive/2007/05/03/2383346.aspx" rel="nofollow">the classical model of process design</a>, where a process has full control over what code runs in it. It is therefore obvious (to them) that if you choose to load code into your process, you are responsible for ensuring that it conforms to your settings. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-892583">
				<div id="div-comment-892583" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">LAURAG</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110131-00/?p=11633#comment-892583">
			February 1, 2011 at 11:34 pm</a>		</div>

		<p>Please excuse me for sounding ignorant if I do, I am a Massage therapist and some how found myself reading through this blog. I can appriciate the do it right mentality. Oh and how do I get in on that time machine ride? I knew geeks were super cool!</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-892783">
				<div id="div-comment-892783" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">JamesNT</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110131-00/?p=11633#comment-892783">
			February 2, 2011 at 2:04 pm</a>		</div>

		<p>I cannot believe the insanity I am seeing here. &nbsp;The very people who are shoving the idea that bad apps should just be broken are hypocrites. &nbsp;They&#39;ll take the &quot;Holier Than Thou&quot; road on this blog to make themselves feel superior to Raymond, but as soon as they install Windows 8 and some little rinky-dink app they need quits working it&#39;ll all be: &quot;STUPID MICROSOFT!! &nbsp;My little hextris game worked under Windows 7 but as soon as I upgraded to Windows 8, it crashes!&quot; &nbsp;Nevermind the fact that hextris exploits a bug in Windows 7 to allow it to redraw itself faster that was fixed in Windows 8. &nbsp;When they are inconvenienced, it&#39;s all MS&#39;s fault.</p>
<p>JamesNT</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-892813">
				<div id="div-comment-892813" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Roman Zenka</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110131-00/?p=11633#comment-892813">
			February 2, 2011 at 5:56 pm</a>		</div>

		<p>I actually think that the time machine idea is fantastic. Combine it with an idea of a multiverse, and here is what you gotta do:</p>
<p>Make a version of Windows that would for every operation where something is undefined excercise a random possible behavior. WM_PAINT is not guaranteed to be sent? Then sometimes send it, sometimes not. Sometimes send it every millisecond. Then don&#39;t send it for an entire day.</p>
<p>You test your software on this multiverse version of Windows. Since the future will only narrow the undefined behaviors down (otherwise Microsoft would be maliciously breaking things, and that&#39;s not what they do), you should be perfectly future-proof. How&#39;s that?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-893443">
				<div id="div-comment-893443" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">j03m</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110131-00/?p=11633#comment-893443">
			February 4, 2011 at 3:37 pm</a>		</div>

		<p>Apple broke backwards compatibility. They arguably have better consumer desktop and mobile products now then MSFT.</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

