<html>
<head>
<title>Dither me this</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>Dither me this</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>September 22, 2016 / year-entry #201</td></tr>
<tr><td><b>Tags:</b></td><td>history</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20160922-00/?p=94365</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>17</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">Where did the error go?</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>
For some reason,
the Internet got
<a HREF="https://www.reddit.com/r/programming/comments/4nksc9/image_dithering_eleven_algorithms_and_source_code/">
all excited</a>
<a HREF="https://news.ycombinator.com/item?id=11886318">
about dithering</a> a few months ago,
linking primarily to
<a HREF="http://www.tannerhelland.com/4660/dithering-eleven-algorithms-source-code/">
this article about eleven dithering algorithms</a>.
(Here's
<a HREF="http://www.crisluengo.net/index.php/archives/355">
another article about dithering</a>.)
</p>
<p>
Which reminded me of a dithering story.
</p>
<p>
The folks at Microsoft Research,
when not working on their time machine,
occasionally produce code for product teams.
Some time ago,
the Internet Explorer team received some code from
Research 
that implemented an improved dithering algorithm.
</p>
<p>
One of my colleagues reviewed the code,
and noticed that, among other things,
the algorithm rejected the convention wisdom
mentioned in
<a HREF="http://www.tannerhelland.com/4660/dithering-eleven-algorithms-source-code/">
Tanner Helland's article</a>:
</p>
<blockquote CLASS=q><p>
Typically, when we finish processing a line of the image,
we discard the error value we've been tracking
and start over again at an error of
"0" with the next line of the image.
</p>
</blockquote>
<p>
Rather than
throwing away the accumulated error,
the algorithm distributed the error in the final
pixel into the next scan row, so that the error
from the last pixel in the row wouldn't be lost.&sup1;
It also had a separate algorithm for the last row
of the bitmap, pushing all the error to the right
since there is no row below.
</p>
<p>
I have no idea what it did with the error from the
final pixel.
Maybe it uploaded it to a server where all the lost
errors are archived.
</p>
<p>
My colleague asked why the algorithm was so
meticulous about not throwing away accumulated error,
at a cost of significant algorithmic complexity.
The developer explained,
"Because it's correct.
We want to minimize the error,
and if you throw it away at the end of the row,
then you never get to compensate for it in the next row.
The total error in the image is higher as a result."
</p>
<p>
This is a case of getting so engrossed by the
mathematical perfection of your algorithm that
you lose sight of the original problem.
</p>
<p>
The goal of dithering is to improve the appearance
of an image when it is quantized,
that is, when it is displayed with a lower color
resolution than the original image.
The principle behind Floyd-Steinberg dithering
is to keep track of how far your quantized color
is from the ideal color
and to distribute that error into future
nearby pixels,
in order to give those pixels a chance to compensate
for the quantization error.
</p>
<p>
But minimizing error is not the goal of dithering.
It is merely a technique.
The goal of dithering is to
make an image that looks good.
</p>
<p>
My colleague asked,
"What if the image is clipped due to layout,
or because the user scrolls the page so that
the image is only half-visible.
Do you go back and re-dither the visible portion of the image?"
</p>
<p>
The developer admitted that the image is dithered
only once.
If the image is clipped,
the clipping is applied to
the dithered version.
</p>
<p>
"Well, then, when the image gets clipped,
what happens to all the error in the clipped-out portion?
Oh, wait, I'll tell you: It's thrown away."
</p>
<p>
As an extreme case of this,
consider dragging another window so it partially covers
the dithered image.
Does the image re-dither to account for the fact that
some of its error is now covered by another window?
No, the dithered image is just the dithered image,
and it gets clipped and occluded just like any other image.
</p>
<p>
So there's really no point in being so anal-retentive
about the error in the last column and last row of the image.
First of all, it creates a discontinuity in the algorithm,
so that the last column and last row of the image get
dithered differently from the other pixels,
which may result in a "band" at the edge if there is a large
area of uniform color.
</p>
<p>
Besides, that error
can get lost to occlusion or clipping.
And don't try to "repair" the image when that happens.
Not only is it computationally expensive,
but it would result in
the somewhat disturbing effect that moving a window
over the image results in the image developing a
constantly changing "fringe" as the last visible row
and column of the image constantly recalculates.
</p>
<p>
Getting rid of the special cases for the last row and column
simplified the algorithm.
What's more,
in the era where CPUs had limited on-chip cache
(measured in single-digit kilobytes),
it meant that the code and look-ahead row
could fit into cache,
leaving all the memory bandwidth available for
accessing the actual bitmap.
</p>
<p>
This was a soft real-time algorithm,
because the user is waiting for the image to appear
on the screen, so improvements
in speed were far more valuable than barely perceptible
improvements in visual quality.
</p>
<p>
&sup1;
I forget how large the error diffusion matrix was exactly.
Didn't realize there was going to be a quiz over 20 years later.
Let's assume it was the classic Floyd-Steinberg dither,
which pushes error only one pixel out.
(Although I seem to recall it had a larger diffusion matrix,
because there was some odd/even weirdness.)</p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (17)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1 parent" id="comment-1265685">
				<div id="div-comment-1265685" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">pc</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160922-00/?p=94365#comment-1265685">
			September 22, 2016 at 7:44 am</a>		</div>

		<p>I&#8217;ve worked on some computers that were clearly where all the leftover error had traveled to.</p>

		
				</div>
		<ol class="children">
		<li class="comment odd alt depth-2" id="comment-1265745">
				<div id="div-comment-1265745" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ray Koopa</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160922-00/?p=94365#comment-1265745">
			September 23, 2016 at 12:18 am</a>		</div>

		<p>This was probably the computer who defined the last node of the internet.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment even thread-odd thread-alt depth-1" id="comment-1265695">
				<div id="div-comment-1265695" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Adrian</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160922-00/?p=94365#comment-1265695">
			September 22, 2016 at 9:06 am</a>		</div>

		<p>&#8220;the Internet got all excited about dithering&#8221;</p>
<p>You might say they were all in a dither. ;-)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-retep998 odd alt thread-even depth-1 parent" id="comment-1265705">
				<div id="div-comment-1265705" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Peter+Atashian' rel='external nofollow' class='url'>Peter Atashian</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160922-00/?p=94365#comment-1265705">
			September 22, 2016 at 9:10 am</a>		</div>

		<p>And yet, no matter how much work they put into their dithering algorithm, it was still fundamentally wrong because they never accounted for the non-linear nature of sRGB. Even today, modern browsers are still incapable of so much as resizing an image correctly. Seriously, modern graphics APIs have stuff built in for this and GPUs have lookup tables so it is super cheap to account for sRGB, and yet so much software disregards it.</p>

		
				</div>
		<ol class="children">
		<li class="comment even depth-2 parent" id="comment-1265716">
				<div id="div-comment-1265716" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.silverbacknetworks.tech' rel='external nofollow' class='url'>Josh B</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160922-00/?p=94365#comment-1265716">
			September 22, 2016 at 12:55 pm</a>		</div>

		<p>Like replacing JPEG with any better format from the last 20 years, the collective &#8220;Meh&#8221; from everyone, even developers, stops progress once there&#8217;s some standard. The pain of sticking with the new has the outweigh inertia; if it hadn&#8217;t been for Unisys PNG wouldn&#8217;t exist or only as a niche format too. True for pretty much every field of human endeavor&#8230;.</p>

		
				</div>
		<ol class="children">
		<li class="comment odd alt depth-3 parent" id="comment-1265725">
				<div id="div-comment-1265725" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Douglas</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160922-00/?p=94365#comment-1265725">
			September 22, 2016 at 2:12 pm</a>		</div>

		<p>My favorite one is how we can&#8217;t get an image format that:<br />
1) Supports animation<br />
2) Supports more than 256 colors<br />
3) Is supported by more than one (Blink-based Opera counts as Chrome here) browser right out of the box</p>
<p>Actually, APNG is supported by both FF and Safari, and Chrome will support it soon™, so the situation is almost okay.</p>
<p>Checking online, APNG came out in 2004, took 3 years to get turned down, and almost another ten to get semi-widely adopted. Progress!</p>

		
				</div>
		<ol class="children">
		<li class="comment even depth-4 parent" id="comment-1265766">
				<div id="div-comment-1265766" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">henke37</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160922-00/?p=94365#comment-1265766">
			September 23, 2016 at 4:58 am</a>		</div>

		<p>At this point you just throw H.264 at it.</p>

		
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-samuel-bronson odd alt depth-5" id="comment-1266475">
				<div id="div-comment-1266475" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Samuel+Bronson' rel='external nofollow' class='url'>Samuel Bronson</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160922-00/?p=94365#comment-1266475">
			September 28, 2016 at 10:34 pm</a>		</div>

		<p>Does h.264 work in IMG elements now?</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment byuser comment-author-retep998 even depth-3 parent" id="comment-1265735">
				<div id="div-comment-1265735" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Peter+Atashian' rel='external nofollow' class='url'>Peter Atashian</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160922-00/?p=94365#comment-1265735">
			September 22, 2016 at 2:35 pm</a>		</div>

		<p>This has nothing to do with being a new format. Almost all images on the internet are already sRGB and almost all monitors are sRGB (although many are calibrated poorly). This would be nothing more than an internal change in browser rendering engines to load textures as sRGB so they are converted to linear when sampled, and then enable sRGB on the output framebuffer. Nobody else would have to do anything and everything would magically become better.</p>

		
				</div>
		<ol class="children">
		<li class="comment odd alt depth-4" id="comment-1265736">
				<div id="div-comment-1265736" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Drak</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160922-00/?p=94365#comment-1265736">
			September 22, 2016 at 10:19 pm</a>		</div>

		<p>As far as I know, most web browsers (on the desktop) use sRGB&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment even depth-3" id="comment-1265935">
				<div id="div-comment-1265935" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">smf</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160922-00/?p=94365#comment-1265935">
			September 24, 2016 at 2:01 am</a>		</div>

		<p>&#8220;if it hadn’t been for Unisys PNG wouldn’t exist or only as a niche format too.&#8221;</p>
<p>I think you&#8217;ve overplaying Unisys involvement with PNG.</p>
<p>&#8220;Welch filed a patent application for the LZW method in June 1983. The resulting patent, US 4558302, granted in December 1985, was assigned to Sperry Corporation who subsequently merged with Burroughs Corporation in 1986 and formed Unisys.[28] Further patents were obtained in the United Kingdom, France, Germany, Italy, Japan and Canada.&#8221;</p>
<p>It was only because GIF use LZW and Unisys started asking for patent licenses that someone invented PNG.</p>
<p>By your reasoning, we could also thank Microsoft for Linux.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment odd alt depth-2 parent" id="comment-1265755">
				<div id="div-comment-1265755" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Don Reba</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160922-00/?p=94365#comment-1265755">
			September 23, 2016 at 12:33 am</a>		</div>

		<p>For the small deltas involved, the non-linearity is usually not significant. I compared dithering in RGB and in Lab colour spaces back when converting 24-bit graphics assets into 565 16-bit for WinCE apps, and it didn&#8217;t make a substantial difference.</p>

		
				</div>
		<ol class="children">
		<li class="comment even depth-3" id="comment-1265945">
				<div id="div-comment-1265945" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">smf</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160922-00/?p=94365#comment-1265945">
			September 24, 2016 at 2:16 am</a>		</div>

		<p>Eyes and monitors are not calibrated for perfect linearity either. If your monitor is hooked up to a 15 pin vga graphics card then linearity and monotonicity is an issue.</p>
<p>All dithering is supposed to do is break up the banding you would get if you just dropped the lowest significant bits, replacing the banding with something as unnoticeable as possible. Over the years I&#8217;ve seen dithering which I&#8217;d rather just turn off as it interfered with the signal to noise ration. I&#8217;d like to see a c64 artist dither algorithm, that could take the box art of a commodore 64 game and turn it into a loading screen in the style of the original artists in a c64 compatible graphics format. Maybe one we will have the processing power to duplicate their work.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1265765">
				<div id="div-comment-1265765" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">jimbo1qaz</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160922-00/?p=94365#comment-1265765">
			September 23, 2016 at 12:45 am</a>		</div>

		<p>Bisqwit (TASvideos founder) did an article on dithering algorithms that are stable when the image changes. It reminded me of your comments on moving windows. <a href="http://bisqwit.iki.fi/story/howto/dither/jy/" rel="nofollow">http://bisqwit.iki.fi/story/howto/dither/jy/</a></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1265975">
				<div id="div-comment-1265975" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Neil</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160922-00/?p=94365#comment-1265975">
			September 26, 2016 at 2:49 am</a>		</div>

		<p>I once wrote a very simple 15 colour dithering algorithm. The principle (but not the implementation!) was as follows: for each pixel in the image, ask GDI to paint an image-sized rectangle using a solid brush of that colour, then look to see which colour actually ended up being used for the original pixel. The actual implementation was simple enough for me to code directly in x86 assembly.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1 parent" id="comment-1265985">
				<div id="div-comment-1265985" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Austin Donnelly (MSFT)</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160922-00/?p=94365#comment-1265985">
			September 26, 2016 at 3:33 am</a>		</div>

		<p>Here&#8217;s some additional material on digital halftoning.  The original article Raymond linked to only covered FM halftoning algorithms, but there are some pretty cool AM algorithms too:<br />
<a href="http://www.donnelly.org.uk/and1000/newsprint/halftone.html" rel="nofollow">http://www.donnelly.org.uk/and1000/newsprint/halftone.html</a></p>

		
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-dwalker-wk even depth-2" id="comment-1266065">
				<div id="div-comment-1266065" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/DWalker' rel='external nofollow' class='url'>DWalker</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160922-00/?p=94365#comment-1266065">
			September 26, 2016 at 11:01 am</a>		</div>

		<p>Cool info.  Although it&#8217;s a bit hard to read some of the text through the second vertical purple stripe that&#8217;s 2/3 of the way to the right side of the Web page. :-)</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

