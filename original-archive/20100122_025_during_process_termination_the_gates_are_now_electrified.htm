<html>
<head>
<title>During process termination, the gates are now electrified</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>During process termination, the gates are now electrified</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>January 22, 2010 / year-entry #26</td></tr>
<tr><td><b>Tags:</b></td><td>code</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20100122-00/?p=15193</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>24</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">It turns out that my quick overview of how processes exit on Windows XP was already out of date when I wrote it. Mind you, the information is still accurate for Windows XP (as far as I know), but the rules changed in Windows Vista. What about critical sections? There is no "Uh-oh" return value for critical sections;...</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>It turns out that my <a href="http://blogs.msdn.com/oldnewthing/archive/2007/05/03/2383346.aspx"> quick overview of how processes exit on Windows&nbsp;XP</a> was already out of date when I wrote it. Mind you, the information is still accurate for Windows&nbsp;XP (as far as I know), but the rules changed in Windows&nbsp;Vista.</p>
<blockquote class="q"><p> What about critical sections? There is no "Uh-oh" return value for critical sections; <code>EnterCriticalSection</code> doesn't have a return value. <strike> Instead, the kernel just says "Open season on critical sections!" I get the mental image of all the gates in a parking garage just opening up and letting anybody in and out.</strike> </p>
</blockquote>
<p> In Windows&nbsp;Vista, the gates don't go up. Instead they become electrified! </p>
<p> If during <code>DLL_PROCESS_DETACH</code> at process termination on Windows&nbsp;Vista you call <code>EnterCriticalSection</code> on a critical section that has been orphaned, the kernel no longer responds by just letting you through. Instead, it says, "Oh dear, things are in unrecoverably bad shape. Best to just terminate the process now." If you try to enter an orphaned critical section during process shutdown, the kernel simply calls <code>TerminateProcess</code> on the current process! </p>
<p> It's sort of like the movie <a href="http://www.quotedb.com/quotes/175" _href="http://simpsonswiki.com/index.php/The_Springfield_Files"> <i>Speed</i></a>: If the thread encounters a critical section that causes it to drop below 50 miles per hour, it blows up. </p>
<p> Fortunately, this error doesn't change the underlying analysis of <a href="http://blogs.msdn.com/oldnewthing/archive/2007/05/04/2402028.aspx"> How my lack of understanding of how processes exit on Windows XP forced a security patch to be recalled</a>. </p>
<p> But it also illustrates how the details of process shutdown are open to changes in the implementation at any time, so you shouldn't rely on them. Remember <a href="http://blogs.msdn.com/oldnewthing/archive/2007/05/02/2365433.aspx"> the classical model for how processes exit</a>: You cleanly shut down all your worker threads, and then call <code>ExitProcess</code>. If you don't follow that model (and given the current programming landscape, you pretty have no choice but to abandon that model, what with DLLs creating worker threads behind your back), it's even more important that you follow the general guidance of <a href="http://blogs.msdn.com/oldnewthing/archive/2004/01/27/63401.aspx"> not doing anything scary in your <code>DllMain</code> function</a>. </p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (24)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-804893">
				<div id="div-comment-804893" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Tom</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100122-00/?p=15193#comment-804893">
			January 22, 2010 at 7:20 am</a>		</div>

		<p>I&#8217;m a little shocked (no pun intended&#8230;or is it?) to hear about the electrification of critical sections on process exit. &nbsp;I can imagine at least one scenario where the forced termination of the process might lead to data corruption in a file. &nbsp;But I suppose it&#8217;s generally better to terminate the application in case something might go wrong than to have an access violation dialog appear when you close the application.</p>
<p>P.S. &nbsp;There are two links to the Simpson&#8217;s wiki in your article that are broken because they use &#8216;hef&#8217; instead of &#8216;href&#8217; in the anchor tags. &nbsp;I only noticed them because I accidentally bumped my mouse and the pointer hovered over one of the links.</p>
<div class=post>[<i>Link fixed (I could find only one), thanks. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-804903">
				<div id="div-comment-804903" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">M&#233;dinoc</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100122-00/?p=15193#comment-804903">
			January 22, 2010 at 7:22 am</a>		</div>

		<p>It&#8217;s a shame those DLLs don&#8217;t expose a means to clean up their threads. I remember reading something about the CLR, that said .Net solved this problem for CLR threads by marking them with a &quot;strong&quot; or &quot;weak&quot; value, and allowing the process to exit after all &quot;strong&quot; threads had exited. But I don&#8217;t rememebr where I read that exactly.</p>
<p>PS: Also, there&#8217;s the problem of COM components failing to properly call SHGetInstanceExplorer() when they create worker threads. Such as Windows&#8217;s own ZipFldr.dll, as it seemed when I tried to use it from a console application.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-804913">
				<div id="div-comment-804913" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">bahbar</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100122-00/?p=15193#comment-804913">
			January 22, 2010 at 8:10 am</a>		</div>

		<p>Can&#8217;t resolve that &#8220;simpsonswiki&#8221; server here.</p>
<div class=post>[<i>Looks like the site shut down in 2008. Oh well. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-804923">
				<div id="div-comment-804923" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Alexandre Grigoriev</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100122-00/?p=15193#comment-804923">
			January 22, 2010 at 8:47 am</a>		</div>

		<p>Now, if only Vista on session logout allowed applications to show their &#8220;Save: Yes, No, Cancel&#8221; dialogs (like XP does), instead of putting that dreaded shadow screen with scary words about a hung application&#8230;</p>
<div class=post>[<i>Now if only people would realize that the topic is a kernel-mode view of how processes terminate, not a discussion of the system shutdown user experience. Oh wait, complaining about Vista is always on-topic around here. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-804933">
				<div id="div-comment-804933" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.unur.com/sinan/' rel='external nofollow' class='url'>Sinan Unur</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100122-00/?p=15193#comment-804933">
			January 22, 2010 at 8:47 am</a>		</div>

		<p>Interesting, indeed. Minor correction: s/classical modal/classical model/</p>
<div class=post>[<i>Fixed, thanks. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-804973">
				<div id="div-comment-804973" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Cooney</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100122-00/?p=15193#comment-804973">
			January 22, 2010 at 11:04 am</a>		</div>

		<p>This reminds me of a boss I had &#8211; he basically told a bunch of us to always design apps for exit behavior. I suppose that if you don&#8217;t think about it up front, the natural tendency is for process shutdown to resemble a hotel demolition. Now, even more so.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-804983">
				<div id="div-comment-804983" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Marquess</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100122-00/?p=15193#comment-804983">
			January 22, 2010 at 12:28 pm</a>		</div>

		<p>While I don&#8217;t quite know what you were linking to, the current thing most likely to be called the Simpsons Wiki resides at simpsons.wikia.com. Dunno if that would help.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-804993">
				<div id="div-comment-804993" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ben</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100122-00/?p=15193#comment-804993">
			January 22, 2010 at 12:57 pm</a>		</div>

		<p>@Tom: If an application needs to do work to properly save a file, it should do so before calling ExitProcess() or exiting winmain. &nbsp;It&#8217;s silly to design your system such that your DllMain() handler does mission critical work.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-805023">
				<div id="div-comment-805023" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Teo</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100122-00/?p=15193#comment-805023">
			January 22, 2010 at 1:18 pm</a>		</div>

		<p>This is too much off-topic but I&#8217;ll try to sneak it anyway. Because I am a back-office guy (think of WMI providers, services, a little kernel-mode programming, stuff like this), when you talk to DllMain and friends I yawn, because there&#8217;s nothing new for me to learn. Will you please, please, please consider again writing articles about GUI stuff? I know that you have articles written for months in advance, but maybe you can reschedule something gui-related for publishing sooner. Pretty please?</p>
<div class=post>[<i>It&#8217;s easier writing about non-GUI stuff because when I write GUI stuff people expect to see sample code, and writing sample code is a lot of work. Whereas when I write about non-GUI stuff, I can just talk about code in a more general sense and nobody expects me to write a sample program that illustrates the topic. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-805033">
				<div id="div-comment-805033" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ulrich</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100122-00/?p=15193#comment-805033">
			January 22, 2010 at 1:21 pm</a>		</div>

		<p>Hi,</p>
<p>do you have any idea why this detail was changed? Was it just a side effect of some other change or a conscientious decision? (A quick guess is that the new way might speed up the termination of not properly coded threads.)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-805043">
				<div id="div-comment-805043" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Gabe</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100122-00/?p=15193#comment-805043">
			January 22, 2010 at 1:36 pm</a>		</div>

		<p>Ben: The typical reason for trying saving a file from DllMain is when a DLL needs to write a diagnostic log file. If you write to the file on every function call, you could end up hitting the disk (or network) thousands of times per second, so instead you buffer your log messages and write them to disk only when the buffer is full. The only problem is then to flush the buffer and close the file when your DLL is unloaded.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-805053">
				<div id="div-comment-805053" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Teo</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100122-00/?p=15193#comment-805053">
			January 22, 2010 at 1:50 pm</a>		</div>

		<p>It&#8217;s sad, but it&#8217;s your free time after all. Anyway, even your older posts for the scrollbars and dealing with RDP were useful so I can just go back and re-read them.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-805063">
				<div id="div-comment-805063" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Alexandre Grigoriev</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100122-00/?p=15193#comment-805063">
			January 22, 2010 at 2:53 pm</a>		</div>

		<p>@Gabe,</p>
<p>Just CreateFile with default (cached) mode, and issue WriteFile for each log line. It won&#8217;t hit a disk for every call. Bonus point: If you open the file in APPEND mode (pass SYNCHRONIZE|APPEND to CreateFile instead of GENERIC_WRITE), you can write to the same file from separate processes (separate handles) without any synchronization.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-805093">
				<div id="div-comment-805093" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://LyonTamers.com/blogs/jimlyon' rel='external nofollow' class='url'>Jim Lyon</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100122-00/?p=15193#comment-805093">
			January 22, 2010 at 3:34 pm</a>		</div>

		<p>@Cooney: &quot;He basically told a bunch of us to always design apps for exit behavior.&quot;</p>
<p>This is close to a good idea, but not quite right. Always design for CRASH behavior.</p>
<p>Once you&#8217;ve designed how the user is going to deal with application after a system crash, process exit is easy. You&#8217;ll seldom have a good reason to do anything other than TerminateProcess().</p>
<p>This will leave you immune to the vagaries of DLLs that don&#8217;t know how to shut down, and to the decisions of OS developers that change the workarounds for bad DLLs from release to release.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-805123">
				<div id="div-comment-805123" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Nick</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100122-00/?p=15193#comment-805123">
			January 22, 2010 at 10:37 pm</a>		</div>

		<p>@Teo&#8217;s Vista bashing:</p>
<p>I think you&#8217;re doing it wrong.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-805083">
				<div id="div-comment-805083" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Teo</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100122-00/?p=15193#comment-805083">
			January 22, 2010 at 3:09 pm</a>		</div>

		<p>Because bashing Vista is always on-topic here, I&#8217;ll join :-)</p>
<p>Things I adore in Vista:</p>
<p>1. The Open/Save dialog that actually *shows* me where in the file system I am. Epic Win. Nothing else to be done in Vista, that would be enough to release it.</p>
<p>2. The &quot;Favourites&quot; links at the top-left corner of Explorer, which are customisable with simple drag-drop. Epic Win.</p>
<p>3. The per-application volume control. Epic Win.</p>
<p>4. The new glossy shiny pretty icons</p>
<p>5. The search in the start menu</p>
<p>6. The search in control panel</p>
<p>7. The iSCSI control UI</p>
<p>8. The setupapi.dev.log &#8211; thank you, whoever designed and implemented it</p>
<p>9. UAC &#8211; finally I could browse felling more secure</p>
<p>10. The default sounds that were so good, that for the 1st time since Windows 3.0 era I kept them</p>
<p>11. The ARP panel which doesn&#8217;t block while the uninstaller is running, taking &nbsp;half the desktop real estate hostage</p>
<p>12. IE7 which was tolerable, instead of extremely awful as IE6 was</p>
<p>13. PowerShell. The CLI is unbearable, but the script language is awesome and it indeed has access to every corner of Windows so it is an epic win</p>
<p>14. The new network redirector/server/cleint. yeah before SP1 it broke byte range locks, so that even Access was corrupting its DB files, but watching how files transfer in seconds instead of half an hour was incredible</p>
<p>15. The new login screen, which was quite nice to the eye</p>
<p>16. The boot speed</p>
<p>17. the hybrid sleep, an epic win</p>
<p>18. kernel mode transactions. they are a game changer</p>
<p>19. the DWM which although all its inefficiencies (after all every software in its version 1 sucks) was an epic win both in usability and eye-candy</p>
<p>20. the gorgerous new wallpapers</p>
<p>21. the virtualization of registry/fs which fixed so many broken programs without messing with the OS</p>
<p>22. the new component based OS module setup system, which means I do not need to search the damned disks when I want to install something</p>
<p>23. the Windows Update UI which didn&#8217;t block the whole browser</p>
<p>24. the fact that open/save dialogs are mini-explorers so you can do everything from there (including hosting broken shell extensions :-D)</p>
<p>25. The new Task Scheduler, which </p>
<p>25.1. has much better UI with richer functionality</p>
<p>25.2. implements IDispatch so actually is usable by WSH</p>
<p>26. The new interface and xml-based export/import functionality of Event Viewer</p>
<p>27. The new Manage Computer MMC UI</p>
<p>28. The responsiveness</p>
<p>29. Superfetch</p>
<p>30. The Windows Firewall UI</p>
<p>31. The Volume Snapshot system which stopped sucking</p>
<p>32. The System restore based on p30 above</p>
<p>33. The WMI service which miraculously stopped corrupting its repository every 40 min</p>
<p>34. The Performance Monitor</p>
<p>35. The Task Manager</p>
<p>36. Session 0 isolation</p>
<p>37. Mandatory Access Controls ( can&#8217;t remember the official name right now, it&#8217;s well past midnight local time)</p>
<p>38. The most used keyboard layout for my country, included by default for the very first time since Windows exists!</p>
<p>39. The new fonts</p>
<p>40. The heap manager, which for first time in Windows history doesn&#8217;t suck</p>
<p>41. The virtually unlimited resources in kernel mode &#8211; the non-paged pool could be up to the whole physical memory minus handful of pages</p>
<p>42. doesn&#8217;t suffer badly when a program opens more than 100 handles to kernel objects</p>
<p>43. The WAIK that allows me to put any driver/program/setting into the setup media of Windows just like that</p>
<p>44. The clock in the notification area</p>
<p>45. The Bluetooth UI</p>
<p>46. The Wi-Fi UI</p>
<p>I guess you get the idea</p>
<p>Things I truly hate in Vista:</p>
<p>1. The Network Centre &#8211; it was a disaster, 3 years later I still cannot understand how to use it, I just blindly click on every link till I stumble on something that looks familiar enough &#8211; fixed in 7</p>
<p>2. The loss of the drag-and-drop to a console app &#8211; fixed in 7.</p>
<p>3. The broken nVidia drivers &#8211; you will not be surprised to learn that I blame MS for them, won&#8217;t you? I really find it an extra-human feat that such complex beasts can work with kernel interfaces designed in NT 3.1 era for then contemporary video cards. Oh, and the under-documented Windows kernel doesn&#8217;t help much. </p>
<p>But all in all, it wasn&#8217;t a very satisfactory release &#8211; you definitely could put more bad things into it, so I have more things to complain about! Now just 3 &#8211; where is the fun in it?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-805193">
				<div id="div-comment-805193" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Mark</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100122-00/?p=15193#comment-805193">
			January 24, 2010 at 12:46 am</a>		</div>

		<p>Teo: you&#8217;re a hero. &nbsp;Seriously, way to go, champ.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-805243">
				<div id="div-comment-805243" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Alexander Grigoriev</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100122-00/?p=15193#comment-805243">
			January 24, 2010 at 5:00 pm</a>		</div>

		<p>@Teo,</p>
<p>There are many good improvements in Vista and then in Win7. Some things are released undercooked, understandably. And there are things that were just broken. If people would not bitch about them, those things will remain broken forever. Take, for example, new help. It seems it&#8217;s using fulltext search instead of keywords. Thus, the results return so much noise, it becomes unuseable.</p>
<p>Another example. Win7 and Vista SP1 got new exFAT filesystem optimized for USB flash and other removeable media. Unfortunately, it was not backported to XP. Thus, I and many others will be very reluctant to use it.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-805253">
				<div id="div-comment-805253" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">slab</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100122-00/?p=15193#comment-805253">
			January 24, 2010 at 6:13 pm</a>		</div>

		<p>@Alexander Grigoriev:</p>
<p>There is an update you can install to get exFAT support on Windows XP, though: <a rel="nofollow" target="_new" href="http://support.microsoft.com/?kbid=955704" rel="nofollow">http://support.microsoft.com/?kbid=955704</a></p>
<p>Unfortunately that requirement means that you still can&#8217;t just plug an exFAT volume into any XP computer without having first installed the patch, so there&#8217;s still reluctance.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-805263">
				<div id="div-comment-805263" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Gabe</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100122-00/?p=15193#comment-805263">
			January 24, 2010 at 10:43 pm</a>		</div>

		<p>Alexandre Grigoriev: Just appending to a file isn&#8217;t going to work for log files with sessions, like setupapi.dev.log (#8 on Teo&#8217;s list of improvements). When I first implemented the setupapi.log in 1998, I was reluctant to group log statements by session because I thought that appending would be faster and more robust. However, as Teo makes clear, the current format is so much easier to use that it&#8217;s worth the overhead.</p>
<p>So how do you implement per-sesson logging? You can either buffer all the messages and append them at once when the session ends, or do this for every message: lock the file; read it backwards until you find the beginning of your session; rewrite the sessions following yours; write out your session including the new log entry; and finally, unlock the file.</p>
<p>Of course setupapi is doing driver installs that could crash the machine, so it has to log the slow way, but it should be clear that there is definitely merit to the first method.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-805293">
				<div id="div-comment-805293" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Alexander Grigoriev</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100122-00/?p=15193#comment-805293">
			January 25, 2010 at 6:56 am</a>		</div>

		<p>@slab:</p>
<p>Thanks, that redeems MS sins! ;^)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-805303">
				<div id="div-comment-805303" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Alexander Grigoriev</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100122-00/?p=15193#comment-805303">
			January 25, 2010 at 7:02 am</a>		</div>

		<p>@Gabe,</p>
<p>Re: Logging per session &#8211; Prefix each line with per-session unique ID (open time timestamp or like that), and per-session record number, and just append the lines for all sessions to the same file. Then, when you look at the file and want them grouped per session, either do grep, or simply sort the file.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-805693">
				<div id="div-comment-805693" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Yuhong Bao</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100122-00/?p=15193#comment-805693">
			January 26, 2010 at 10:10 am</a>		</div>

		<p>&quot;Fortunately, this error doesn&#8217;t change the underlying analysis of How my lack of understanding of how processes exit on Windows XP forced a security patch to be recalled.&quot;</p>
<p>Also, that security patch was released before Vista was released.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-805863">
				<div id="div-comment-805863" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">DysgraphicProgrammer</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100122-00/?p=15193#comment-805863">
			January 27, 2010 at 7:18 am</a>		</div>

		<p>Now we just need a way to actually electrify the programmer who wrote the offending code. Not enough to kill (at first), just enough to hurt. &nbsp;</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

