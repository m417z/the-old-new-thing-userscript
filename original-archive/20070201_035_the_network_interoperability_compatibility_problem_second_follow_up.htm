<html>
<head>
<title>The network interoperability compatibility problem, second follow-up</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>The network interoperability compatibility problem, second follow-up</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>February 1, 2007 / year-entry #36</td></tr>
<tr><td><b>Tags:</b></td><td>other</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20070201-03/?p=28193</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>60</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">I post this entry with great reluctance, because I can feel the heat from the pilot lights of the flame throwers all the way from here. The struggle with the network interoperability problem continued for several months after I brought up the topic. In that time, a significant number of network attached storage devices were...</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>I post this entry with great reluctance, because I can feel the heat from the pilot lights of the flame throwers all the way from here.</p>
<p> The struggle with the network interoperability problem continued for several months after <a href="http://blogs.msdn.com/oldnewthing/archive/2006/03/30/564809.aspx"> I brought up the topic</a>. In that time, a significant number of network attached storage devices were found that did not implement "fast mode" queries correctly. (<a href="http://windowshelp.microsoft.com/communities/newsgroups/en-us/default.mspx?query=nas&amp;dg=&amp;cat=&amp;lang=en&amp;cr=US&amp;pt=&amp;catlist=D1CBF0BD-E8EE-4D73-8ECC-15AF7EC6783B&amp;dglist=&amp;ptlist=&amp;exp=&amp;sloc=en-us">Buried in this query are some of them</a>; there are others.) Some of them were Samba-based whose vendors did not have an upgrade available that fixed the bug. But many of them used custom implementations of CIFS; consequently, any Samba-specific solutions would not have helped those devices. (Most of the auto-detection suggestions people proposed addressed only the Samba scenario. Those non-Samba devices would still not have worked.) Even worse, most of the devices are low-cost solutions which aren't firmware-upgradable or have any vendor support. </p>
<p> Some of the reports came from people running fully-patched well-known Linux distributions. So much for being in <a href="http://blogs.msdn.com/oldnewthing/archive/2006/03/31/565878.aspx#566308"> all the new commercially supported offerings over the next couple months</a>. </p>
<p> Furthermore, those buggy non-Samba implementations mishandled fast mode queries in different ways. For example, one of them I was asked to look at didn't return any error codes at all. It just returned garbage data (most noticeably, corrupting the file name by deleting the first five characters). How do you detect that this has happened? If the server reports "I have a file called <tt>e.txt</tt>", is Windows supposed to say, "Oh, I don't think so. I bet you're one of those buggy servers that chops off the first five letters of file names and that you really meant to say (scrunches forehead in concentration) <tt>readme.txt</tt>"? What if you really had a file called <tt>e.txt</tt>? What if the server said, "This directory has two files, <tt>1.txt</tt> and <tt>2.txt</tt>"? Is this a buggy server? Maybe the files are really <tt>abcde1.txt</tt> and <tt>defgh2.txt</tt>, or maybe the server wasn't lying and the files really are <tt>1.txt</tt> and <tt>2.txt</tt>. </p>
<p> One device simply crashed if asked to perform a fast mode query. Another wedged up and had to be reset. "Oh, looks like somebody brought their Vista laptop from home and plugged it into the corporate network. Our document server crashed again." </p>
<p> Given the much broader ways that servers mishandled fast queries, any attempt at auto-detecting them will necessarily be incomplete and fail to detect broken servers. This is fundamentally the case for servers which return perfectly formed, but incorrect, data. And even if the detection were perfect, if it left the server in a crashed or hung state, that wouldn't be much consolation. </p>
<p> Given this new information, the solution that was settled on was simply to stop using "fast mode" queries for anything other than local devices. The most popular file system drivers for local devices (NTFS, FAT, CDFS, UDF) are all under Microsoft's control and they have already been tested with fast mode queries. </p>
<p> Such is the sad but all-too-true cost of interoperability and compatibility. </p>
<p> (To address other minor points: It's not the case that the Vista developers "<a href="http://blogs.msdn.com/oldnewthing/archive/2006/03/31/565878.aspx#566495">knew the [fast mode query] would break Samba-based devices since late 2005</a>". The fast mode query was added, and the incompatibility with Samba wasn't discovered until March 2006. "Why didn't you notify the Samba team?" Because by the time we found the problem, they had already fixed it.) </p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (60)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-467053">
				<div id="div-comment-467053" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Gabe</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070201-03/?p=28193#comment-467053">
			February 1, 2007 at 10:24 am</a>		</div>

		<p>I think the important question is what does it do for network devices? Does it revert to WinXP behavior or a slower version of Vista&#8217;s local device behavior?</p>
<div class=post>[<i>It goes to a faster version of the XP behavior. Unless a &#8220;break glass in case of emergency&#8221; policy is set, in which case it goes back to the XP behavior exactly. Hooray, there are three file enumerators in the shell. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-467073">
				<div id="div-comment-467073" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Luc Rooijakkers</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070201-03/?p=28193#comment-467073">
			February 1, 2007 at 10:31 am</a>		</div>

		<p>Raymond, thanks for posting this message.</p>
<p>I stayed out of the original discussion but a lot of the comments struck me as being somewhat naive in terms of what is really out there and the procedures for getting such things fixed.</p>
<p>You have once more proved to me that despite many problems there are still many competent people at Microsoft (not that I really doubted that anyway), despite many reports to the contrary (of which undoubtedly a lot are also thruthful).</p>
<p>To end with a technical note, is it possible for an administrator to configure Vista in some way to use fast-mode queries with specific non-local devices (e.g. by IP address)?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-rosyna even thread-even depth-1" id="comment-467093">
				<div id="div-comment-467093" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Rosyna</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070201-03/?p=28193#comment-467093">
			February 1, 2007 at 11:07 am</a>		</div>

		<p>Well, my question is, why did this problem occur in the first place and what could have prevented these buggy implementations from being buggy?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-467103">
				<div id="div-comment-467103" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">KenW</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070201-03/?p=28193#comment-467103">
			February 1, 2007 at 11:13 am</a>		</div>

		<p>Rosyna,</p>
<p>There&#8217;s a link to the previous article. Did you read it?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-467113">
				<div id="div-comment-467113" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Dave</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070201-03/?p=28193#comment-467113">
			February 1, 2007 at 11:22 am</a>		</div>

		<blockquote><p>
  &#8230; what could have prevented these buggy implementations from being buggy?
</p></blockquote>
<p>A time machine. Raymond&#8217;s being a lazy SOB and still hasn&#8217;t coded that up.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-shawnhargreaves odd alt thread-odd thread-alt depth-1" id="comment-467123">
				<div id="div-comment-467123" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Shawn+Hargreaves+-+MSFT' rel='external nofollow' class='url'>Shawn Hargreaves - MSFT</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070201-03/?p=28193#comment-467123">
			February 1, 2007 at 11:37 am</a>		</div>

		<p>&gt; &#8230; what could have prevented these buggy implementations from being buggy?</p>
<p>The way to prevent buggy implementations is not to ship features that aren&#8217;t actually used. If a protocol contains functionality that isn&#8217;t widely exercised, people can get away with wrong implementations that may seem to work &#8216;just fine&#8217; out in the wild. Until someone later tries to use that functionality, that is :-)</p>
<p>If the original protocol had been smaller and simpler, and as long as it included a version querying mechanism, Vista could have extended the protocol and been able to reliably query for devices that supported the new extension. But then you&#8217;re into a whole other world of pain, and people start to complain about shifting targets, constantly evolving &#8216;standards&#8217;, etc.</p>
<p>Perfect solutions tend not to exist in the real world.</p>
<div class="post">[<i>I assume you mean &#8220;that aren&#8217;t <u>widely</u> used.&#8221; I strongly suspect the feature was used by <u>somebody</u> (otherwise why add it?) but that somebody wasn&#8217;t popular enough that vendors tested against it. Is the conclusion therefore not to add a file system feature unless <u>Explorer</u> uses it? -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-467133">
				<div id="div-comment-467133" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Anthony</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070201-03/?p=28193#comment-467133">
			February 1, 2007 at 11:48 am</a>		</div>

		<p>I too am curious if there&#8217;s going to be any way to turn on fast-mode queries for (some/specific/all) network devices.</p>
<div class=post>[<i>Seeing as there&#8217;s no way to detect what brand of network device is on the other side of a connection, being able to say &#8220;Enable fast mode for Brand X but not Brand Y&#8221; is a bit of a non-starter. Fast mode is disabled for all network devices. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-467143">
				<div id="div-comment-467143" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Aaron</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070201-03/?p=28193#comment-467143">
			February 1, 2007 at 12:16 pm</a>		</div>

		<p>Shawn: And what if the protocol did include a version querying mechanism, and some subset of devices had buggy implementations of that mechanism?</p>
<p>I do feel sorry for the poor saps at Microsoft who have to try to cover up for hardware vendors that ship second-rate products with third-rate drivers. &nbsp;There&#8217;s no way to win, and I think the overall hardware/driver quality is actually dropping.</p>
<p>In the end you probably made the right decision here. &nbsp;No hacks, no unsolvable problems for users, and most users probably won&#8217;t care anyway since they&#8217;ve been using XP&#8217;s &quot;slow&quot; mode for years.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-467163">
				<div id="div-comment-467163" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">James</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070201-03/?p=28193#comment-467163">
			February 1, 2007 at 12:19 pm</a>		</div>

		<p>Rosyna,</p>
<p>First you must answer this question: What could have prevented stupid questions from being stupid?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-467173">
				<div id="div-comment-467173" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Markus Freericks</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070201-03/?p=28193#comment-467173">
			February 1, 2007 at 12:23 pm</a>		</div>

		<p>&gt; &#8230; what could have prevented these buggy implementations from being buggy?</p>
<p>A complete, easily accessible specification that contains an exhaustive list of test cases that any implementation must implement and that can be checked automatically?</p>
<div class=post>[<i>It&#8217;s easy to say &#8220;Just make an exhaustive list&#8221;, but it&#8217;s impossible to do. An &#8220;exhaustive&#8221; list would be infinitely long. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-467183">
				<div id="div-comment-467183" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">mikeb</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070201-03/?p=28193#comment-467183">
			February 1, 2007 at 12:27 pm</a>		</div>

		<blockquote><p>
  &gt; as long as it included a version querying mechanism &lt;&lt;
</p></blockquote>
<p>You&#8217;ve just moved the bug to the version check &amp; handler.</p>
<p>Have you seen how many installers (or other programs) can&#8217;t properly figure out which version of Windows they&#8217;re running on? &nbsp;Look at the remarks for Win32&#8217;s GetVersion() API, which explains why MS have since added the version checking APIs GetVersionEx() and VerifyVersionInfo():</p>
<p>======================</p>
<p>The GetVersionEx function was developed because many existing applications err when examining the packed DWORD value returned by GetVersion, transposing the major and minor version numbers. GetVersionEx forces applications to explicitly examine each element of version information. VerifyVersionInfo eliminates further potential for error by comparing the required system version with the current system version for you.</p>
<p>======================</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-467193">
				<div id="div-comment-467193" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">vsz</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070201-03/?p=28193#comment-467193">
			February 1, 2007 at 12:32 pm</a>		</div>

		<p>Consequence for the future: Publish your internal standards in time, cooperate with other vendors (including Linux developers). This is the best interest for your customers, too.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-467223">
				<div id="div-comment-467223" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.brentdax.com' rel='external nofollow' class='url'>Brent Royal-Gordon</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070201-03/?p=28193#comment-467223">
			February 1, 2007 at 12:44 pm</a>		</div>

		<p>My question is, why isn&#8217;t there a field like HTTP&#8217;s User-Agent so you can tell whose implementation you&#8217;re working with and, if it&#8217;s known to be buggy, adjust accordingly?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-467233">
				<div id="div-comment-467233" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Somebody</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070201-03/?p=28193#comment-467233">
			February 1, 2007 at 12:47 pm</a>		</div>

		<p>This story adds to my suspicion that &quot;standard documents&quot; don’t work very well for software. &nbsp;Having some committee approved document that specifies a &quot;standard&quot; which other companies try (and often fail) to implement is not very efficient. &nbsp;A document is always going to contain some vagueness or ambiguity. &nbsp;If it did not, then it would be code. &nbsp;And even if the document is perfect, someone somewhere is going to screw up an implementation. &nbsp;In this model, all mistakes made by everyone combine together to erode away the functionality specified by the standard.</p>
<p>A more efficient model is if everyone just runs the same code. &nbsp;Any mistake made in implementation automatically becomes “the standard&quot;. &nbsp;A single workaround will work for everyone.</p>
<p>This is just another reason why there is such a large Windows monoculture. &nbsp;The software business is a natural monopoly.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-467243">
				<div id="div-comment-467243" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Michael Kohne</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070201-03/?p=28193#comment-467243">
			February 1, 2007 at 12:56 pm</a>		</div>

		<p>Because if there were a user-agent field, three out of four bad implementors would leave it set at the value they found comming out of some other product they poked at.</p>
<p>Sadly, there is very little MS can do to deal with situations like these &#8211; the folks who make these cheap boxes don&#8217;t have a lot of patience for testing, and they just ship it if it seems to work.</p>
<p>The only thing MS might physically be able to do is to require devices to go through something like WHQL before they&#8217;ll interoperate with them. That, however, would put them in the position of gatekeeper to the marketplace for darn near everything. Which would get them yelled at and probably sued (I imagine such a move would appear to be an anti-trust violation).</p>
<p>If they provided an exact spec along with test cases that would certainly help, (And I bet the Samba team would love such a thing), but I also bet that most vendors wouldn&#8217;t bother to run the tests. Or even read the spec thoroughly. </p>
<p>Sadly, when consumers demand cheap products, they get cheap products. No matter what the cost.</p>
<div class=post>[<i>And there could still be bugs in corners not covered by the tests. For example, there could be a timing bug. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-467263">
				<div id="div-comment-467263" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">BryanK</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070201-03/?p=28193#comment-467263">
			February 1, 2007 at 1:21 pm</a>		</div>

		<p>Somebody: &nbsp;If documented standards don&#8217;t work, then how are we posting to this blog? &nbsp;HTTP is a documented standard, as are both TCP and IP.</p>
<p>Now yes, for TCP and IP, most people run the original BSD stack (or something derived from it). &nbsp;But HTTP is not done that way; lots of people run Apache, and lots of people run IE, but those aren&#8217;t the only servers or clients out there by a long shot.</p>
<p>More on topic: Yeesh. &nbsp;;-) &nbsp;Given this info, my opinion is changing on this issue. &nbsp;I figured it&#8217;d be easy enough to work around the issue before: send two half-size requests to the server in fast mode (inside FindFirstFile), and if the second fails, restart in slow mode. &nbsp;Unfortunately for MS, this makes buggy NASes even slower, but at least the (many?) non-buggy ones get rewarded. &nbsp;Oh, and do this checking inside the CIFS-specific filesystem driver, not inside any user-mode code at all, including FindNextFile / NtQueryDirectoryFile. &nbsp;The CIFS driver already batches up queries, so simply modifying its batching code has the potential to work.</p>
<p>But since other devices were failing in other ways, that screws up that entire solution&#8230; &nbsp;:-(</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-467273">
				<div id="div-comment-467273" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">A</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070201-03/?p=28193#comment-467273">
			February 1, 2007 at 1:30 pm</a>		</div>

		<p>Why not introduce a &quot;fast mode 2&quot; query type that does the same thing as &quot;fast mode&quot;, but is unrecognizable by these old devices and Samba versions?</p>
<p>Of course, this would lock out current versions of Samba and Windows as well, but it sounds like you&#8217;re already doing that anyway. Later, both could be patched to support &quot;fast mode 2&quot; queries.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-467283">
				<div id="div-comment-467283" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ray Trent</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070201-03/?p=28193#comment-467283">
			February 1, 2007 at 1:51 pm</a>		</div>

		<p>&quot;But HTTP is not done that way; lots of people run Apache, and lots of people run IE, but those aren&#8217;t the only servers or clients out there by a long shot.&quot;</p>
<p>Yes&#8230; and ironically this exact page doesn&#8217;t show correctly in Thunderbird&#8217;s RSS reader pane for me (the &quot;menu&quot; on the right overlaps the content).</p>
<p>Argh! And I just discovered that the Submit button isn&#8217;t working on my current (admittedly nightly) build of Firefox&#8230; resubmitting with IE.</p>
<p>What was your point again?</p>
<p>Samba &quot;mostly&quot; works&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-467293">
				<div id="div-comment-467293" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Cody</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070201-03/?p=28193#comment-467293">
			February 1, 2007 at 2:08 pm</a>		</div>

		<p>&quot;Hooray, there are three file enumerators in the shell. -Raymond&quot;</p>
<p>TRUE, FALSE, FILE_NOT_FOUND?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-467303">
				<div id="div-comment-467303" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">benjamin</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070201-03/?p=28193#comment-467303">
			February 1, 2007 at 2:15 pm</a>		</div>

		<p>It&#8217;s a real shame that so many problems are ascribed to Microsoft when, in reality, they stem from vendors that are on the platform.</p>
<p>I&#8217;m happy how, as Vista is being pushed into the marketplace, Microsoft seems to be getting tougher with respect to hardening drivers and giving people a good OBE.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-467313">
				<div id="div-comment-467313" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">BryanK</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070201-03/?p=28193#comment-467313">
			February 1, 2007 at 2:26 pm</a>		</div>

		<p>Ray: &nbsp;You&#8217;re confusing levels of abstraction; neither RSS nor this page&#8217;s submit button are HTTP or TCP or IP. &nbsp;XML doctypes (or schemas, either way) are not the same thing as the protocols used to transmit them, and HTML/JS are not the same thing as the protocols used to transmit them either.</p>
<p>The protocols are working fine, it&#8217;s just that your user agent&#8217;s idea of what it should do when it gets a certain string of characters is different than the server&#8217;s idea of what the user agent should do. &nbsp;That&#8217;s not HTTP&#8217;s fault, it&#8217;s the fault of whoever decided to serve up that specific RSS file structure, or that specific JS code. &nbsp;Or your nightly browser build.</p>
<p>(I&#8217;m assuming your submit button issue is due to some kind of script that runs when you hit it. &nbsp;I don&#8217;t know, because there&#8217;s very little information in your post.)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-467333">
				<div id="div-comment-467333" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Somebody</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070201-03/?p=28193#comment-467333">
			February 1, 2007 at 3:01 pm</a>		</div>

		<p>BrianK:</p>
<p>HTTP, TCP, IP etc. in isolation are useless. &nbsp;There has to be a client to transfer something meaningful. &nbsp;So in this case, because the standard specifies such little functionality, there is not much room to screw up. &nbsp;So interoperability will mostly work. &nbsp;But there are still problems with implementations. &nbsp;Does anyone remember SYN floods? The ping of death?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-467353">
				<div id="div-comment-467353" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Jack Mathews</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070201-03/?p=28193#comment-467353">
			February 1, 2007 at 3:32 pm</a>		</div>

		<p>Where is the SMB specification published on Microsoft&#8217;s site anyway? &nbsp;I&#8217;d love to see what goes on in the fast mode query that could cause so many people to be confused. &nbsp;I assume it&#8217;s laid out pretty clear in the specification.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-467363">
				<div id="div-comment-467363" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ben Hutchings</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070201-03/?p=28193#comment-467363">
			February 1, 2007 at 4:49 pm</a>		</div>

		<p>I&#8217;m a little surprised that you (that&#8217;s the collective you) didn&#8217;t add a new query command to the protocol and deprecate the old one due to its being implemented wrongly. The commands that Windows actually uses are rather more likely to be implemented correctly first time.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-467383">
				<div id="div-comment-467383" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Jonathan Wilson</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070201-03/?p=28193#comment-467383">
			February 1, 2007 at 5:36 pm</a>		</div>

		<p>Just remember that anyone other than Microsoft implementing SMB/CIFS in a MS compatible way is most likely doing it without any help or information from Microsoft (at least I think thats the case, its certainly the case for the Samba people)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-467393">
				<div id="div-comment-467393" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Dave</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070201-03/?p=28193#comment-467393">
			February 1, 2007 at 6:21 pm</a>		</div>

		<p>Why not just release the same implementation under a totally new API? This would give you and them a fresh start&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-467413">
				<div id="div-comment-467413" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ian Davis</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070201-03/?p=28193#comment-467413">
			February 1, 2007 at 6:51 pm</a>		</div>

		<p>I agree disabling FastMode for network devices is the right idea. &nbsp;Its been broken &amp; made unusable.</p>
<p>Extending the protocol, and add a &quot;NewFastMode&quot; mechanism (idential functionality to FastMode, but different query). &nbsp;</p>
<p>Document it &amp; share with Samba folks. &nbsp; Offer patches for Win2K/WinXP to support it (Microsoft is already doing this for other Vista features &#8211; why not this). &nbsp;</p>
<p>As people upgrade their servers (WinXP &amp; Samba), they share in the bounty that is Vista.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-467433">
				<div id="div-comment-467433" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Legolas</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070201-03/?p=28193#comment-467433">
			February 1, 2007 at 7:19 pm</a>		</div>

		<p>And I too wonder what the thoughts were on adding a &#8216;new fast&#8217; query protocol.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-friedicusrediculoushotmail-com even thread-even depth-1" id="comment-467443">
				<div id="div-comment-467443" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Mike+Fried' rel='external nofollow' class='url'>Mike Fried</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070201-03/?p=28193#comment-467443">
			February 1, 2007 at 8:00 pm</a>		</div>

		<p>Legolas, &quot;A&quot;, and anyone else who proposed a &quot;Fast Mode 2&quot; option clearly didn&#8217;t check Raymond&#8217;s linked articles, where he already answered your question&#8230;</p>
<p><a rel="nofollow" target="_new" href="http://blogs.msdn.com/oldnewthing/archive/2006/04/19/578991.aspx" rel="nofollow">http://blogs.msdn.com/oldnewthing/archive/2006/04/19/578991.aspx</a></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-467463">
				<div id="div-comment-467463" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">A</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070201-03/?p=28193#comment-467463">
			February 1, 2007 at 10:07 pm</a>		</div>

		<p>&quot;Legolas, &quot;A&quot;, and anyone else who proposed a &quot;Fast Mode 2&quot; option clearly didn&#8217;t check Raymond&#8217;s linked articles, where he already answered your question&#8230;&quot;</p>
<p>Evidently that article was written before the decision was made to disable fast mode completely on network drives. He claims that switching to &quot;fast mode 2&quot; would result in slower performance because older implementations only support the original fast mode. But obviously the situation now is different: using &quot;fast mode 2&quot; in Explorer as opposed to not using fast mode at all could only improve performance. (Assuming, of course, they didn&#8217;t already come up with some alternate solution that performs just as well.)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-467373">
				<div id="div-comment-467373" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://K.Hagan@thermoteknix.com' rel='external nofollow' class='url'>Ken Hagan</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070201-03/?p=28193#comment-467373">
			February 1, 2007 at 4:50 pm</a>		</div>

		<p>Brent Royal-Gordon asks:</p>
<p> &nbsp;&quot;why isn&#8217;t there a field like HTTP&#8217;s User-Agent so you can tell whose implementation you&#8217;re working with and, if it&#8217;s known to be buggy, adjust accordingly?&quot;</p>
<p>If it really *was* like HTTP&#8217;s user-agent, then one side would be unnecessarily cautious in adjusting accordingly (as with web sites that check for IE and reject everything else) and the other side would have an &quot;impersonation&quot; switch (as with browsers that can lie about their identity to make those sites work).</p>
<p>Sadly, compatibility is a war. It&#8217;s best to assume that the other side is actually &quot;hostile&quot; and really is trying to break you, albeit for (in their opinion) legitimate reasons.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-467403">
				<div id="div-comment-467403" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Dustin Long</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070201-03/?p=28193#comment-467403">
			February 1, 2007 at 6:27 pm</a>		</div>

		<p>&gt; why isn&#8217;t there a field like HTTP&#8217;s User-Agent so you can tell whose implementation you&#8217;re working with and, if it&#8217;s known to be buggy, adjust accordingly?</p>
<p>Yeah, User-Agent sniffing on the interweb has so far worked out to be *just great*!</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-467423">
				<div id="div-comment-467423" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Legolas</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070201-03/?p=28193#comment-467423">
			February 1, 2007 at 7:17 pm</a>		</div>

		<p>I continue to love this story for its intriguing consequences&#8230; </p>
<p>So: In an interoperability world, if any large enough code-base (one product, several products using one code base, even everyone copying an example code) has a bug, everyone else is pretty much required to work around it somehow, in practice.</p>
<p>This feels strange, when you have a, shall we say, &#8216;dirty mind&#8217; ;-)</p>
<p>So if MS wants to &#8216;attack&#8217; linux, it could just code up something that breaks when linux servers are present (like this example, and I&#8217;m sure there&#8217;s many more interactions between systems). Finding something like that and implementing it at the right time would mean that Linux would effectively get banned form whole networks, because it crashes the windows servers (but, danger is that it turns around and windows gets banned).</p>
<p>Also, I wonder (and Raymond, this is an invitation to write about this, if it&#8217;s interesting!) if it is at all possible to avoid this, even in theory. </p>
<p>My initial guess is not really: you can ever really &#8216;force&#8217; the other side to write bug-free code. Come to think of it, an OS actually has pretty much the same thing with drivers, and website makers have the same thing with browsers that are buggy or only partially implement certain standards (*cough* IE6 *cough* ;-).</p>
<p>It seems that if we could &#8216;fix&#8217; this we could get a lot closer to software behaving like an engineering discipline, or is that pushing it a bit? &nbsp;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-rosyna odd alt thread-odd thread-alt depth-1" id="comment-467473">
				<div id="div-comment-467473" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Rosyna</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070201-03/?p=28193#comment-467473">
			February 2, 2007 at 4:05 am</a>		</div>

		<p>Jonathan Wilson, that&#8217;s the point I was trying to get at. Many, if not most, of these companies had to reverse engineer the CIFS specification with little to no help from Microsoft. In other words, if fast mode wasn&#8217;t used, there was no way for them to implement it correctly as many of these reverse engineering efforts began by looking at the network packets.</p>
<p>Even now, this is likely to happen in future implementations. IIRC, part of the DOJ/EU settlements was that MS properly document protocols for interoperability reasons. Part of the CIFS documentation is available at <a rel="nofollow" target="_new" href="http://www.microsoft.com/downloads/details.aspx?FamilyID=c4adb584-7ff0-4acf-bd91-5f7708adb23c&amp;displaylang=en" rel="nofollow">http://www.microsoft.com/downloads/details.aspx?FamilyID=c4adb584-7ff0-4acf-bd91-5f7708adb23c&#038;displaylang=en</a> however, you need windows 2000 or windows xp (vista isn&#8217;t mentioned, oddly). It cannot be read on other platforms and therefore may not be accessible for embedded device makers. I&#8217;m not even sure if it includes the Vista additions to CIFS.</p>
<p>As for Samba, there&#8217;s a document on how it was made at <a rel="nofollow" target="_new" href="http://samba.org/ftp/tridge/misc/french_cafe.txt" rel="nofollow">http://samba.org/ftp/tridge/misc/french_cafe.txt</a> note the date, which was after XP was released and while longhorn was being worked on.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-467483">
				<div id="div-comment-467483" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Jonathan</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070201-03/?p=28193#comment-467483">
			February 2, 2007 at 5:08 am</a>		</div>

		<p>I wouldn&#8217;t use HTTP as an example of a completely-specified protocol that has led to perfect implementations.</p>
<p>One example: The abundance of ways to specify when a request/response ends (Connection: Close, Content-Length, Transfer-Encoding, etc), and the missing details of what to do if more than one is present, has lead to a whole new class of security attacks &#8211; HTTP smuggling.</p>
<p>I think a better example would be RPC.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-467493">
				<div id="div-comment-467493" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">AC</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070201-03/?p=28193#comment-467493">
			February 2, 2007 at 5:12 am</a>		</div>

		<blockquote><p>
  My question is, why isn&#8217;t there a field like HTTP&#8217;s User-Agent so you can tell whose implementation you&#8217;re working with and, if it&#8217;s known to be buggy, adjust accordingly?
</p></blockquote>
<p>For one, that will force you to ship a list of &quot;buggy&quot; drivers along with the OS&#8230; Which will only be correct until someone else writes a new buggy driver that you don&#8217;t know about. Either that or people will complain that MS is unfairly downgrading perf against their devices.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-467503">
				<div id="div-comment-467503" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">James Risto</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070201-03/?p=28193#comment-467503">
			February 2, 2007 at 8:09 am</a>		</div>

		<p>I work in a corporate environment where I know what all file sharing is done by, or can make a case for not supporting skunkworks samba&#8217;s. Can I get a GPO switch to get super fast mode everywhere?</p>
<div class="post">[<i>And then you take your corporate laptop to another company for contract negotiations, turn it on, and that company&#8217;s file servers crash. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-467533">
				<div id="div-comment-467533" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blogs.msdn.com/oldnewthing/archive/2006/03/31/565878.aspx#566266' rel='external nofollow' class='url'>Amon Houndsbreath</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070201-03/?p=28193#comment-467533">
			February 2, 2007 at 8:53 am</a>		</div>

		<p>What about my idea of having the clients send a random challenge, and then the server software signing it with a private key and returning. The clients would know how to find tested servers, which would know the right key.</p>
<p><a href="http://blogs.msdn.com/oldnewthing/archive/2006/03/31/565878.aspx#566266" target="_new" rel="nofollow">http://blogs.msdn.com/oldnewthing/archive/2006/03/31/565878.aspx#566266</a></p>
<p>The idea is that you have a whitelist of know good server implementations, on which it&#8217;s safe to use advanced CIFs features. Legacy servers would use the old mode. </p>
<p>So Vista SP1 could contain the key on the server versions, and the code to challenge and authenticate on the client versions. Older OSs and non server variants would run in legacy mode. Incidentally, if the Samba people shipped code which managed to pass the authentication but still had bugs, you could just revoke the key and hold a press conference. </p>
<p>Actually maybe literally having a key is a bad idea. The client could authenticate the server by sneakier means, like looking for quirks in the way it responds to requests. I bet you could figure out a way to tell a Vista server from Samba or XP if you knew enough about it&#8217;s internals for example. Once you know it&#8217;s Vista, you know it&#8217;s safe to use the new features, but it&#8217;s important that it can&#8217;t fool you.</p>
<div class="post">[<i>Um, you do realize that your proposed solution is probably illegal&#8230; -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-467593">
				<div id="div-comment-467593" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Anonymous Coward</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070201-03/?p=28193#comment-467593">
			February 2, 2007 at 10:22 am</a>		</div>

		<p>First, I would like to thank Raymond for having the courage to post this. Now we finally can see the end of this saga.</p>
<p>To all clamoring for documentation: it wouldn&#8217;t have helped, since the Samba team already knew how that part of the protocol should work. It was an implementation bug on their side. More documentation would not have made any difference in this particular case.</p>
<p>And to all saying &quot;look at IP/TCP/HTTP, it is fully documented and works fine all the time&quot;: I take it you never heard of the problems with ECN, or about PMTU blackholes, or about the problems with some routers when using window scaling. And this is just a small sample.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-467763">
				<div id="div-comment-467763" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Yuhong Bao</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070201-03/?p=28193#comment-467763">
			February 2, 2007 at 12:27 pm</a>		</div>

		<p>&quot;Given this new information, the solution that was settled on was simply to stop using &quot;fast mode&quot; queries for anything other than local devices. The most popular file system drivers for local devices (NTFS, FAT, CDFS, UDF) are all under Microsoft&#8217;s control and they have already been tested with fast mode queries. &quot;</p>
<p>That is reasonable as a default, but there should be a way to reenable fast mode queries for network devices.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-467773">
				<div id="div-comment-467773" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Yuhong Bao</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070201-03/?p=28193#comment-467773">
			February 2, 2007 at 12:27 pm</a>		</div>

		<p>&quot;Given this new information, the solution that was settled on was simply to stop using &quot;fast mode&quot; queries for anything other than local devices. The most popular file system drivers for local devices (NTFS, FAT, CDFS, UDF) are all under Microsoft&#8217;s control and they have already been tested with fast mode queries. &quot;</p>
<p>That is reasonable as a default, but there should be a way to reenable fast mode queries for network devices.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-467783">
				<div id="div-comment-467783" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Yuhong Bao</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070201-03/?p=28193#comment-467783">
			February 2, 2007 at 12:32 pm</a>		</div>

		<p>And work with the vendors to fix the bugs, if it hasn&#8217;t already. And even if fast mode access is reenabled in general, it should be able to be disabled for specific servers, and vise versa.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-467933">
				<div id="div-comment-467933" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ian Boyd</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070201-03/?p=28193#comment-467933">
			February 2, 2007 at 4:57 pm</a>		</div>

		<p>i take i there will be no registry entry or Group Policy setting to force enable the feature; and let me take my own chances?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-kjkhyperion odd alt thread-odd thread-alt depth-1" id="comment-468223">
				<div id="div-comment-468223" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">KJK::Hyperion</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070201-03/?p=28193#comment-468223">
			February 3, 2007 at 6:04 pm</a>		</div>

		<p>&quot;That doesn&#8217;t help the servers that crash when given an invalid information level&quot;</p>
<p>&#8230; wow. I give up</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-kjkhyperion even thread-even depth-1" id="comment-468183">
				<div id="div-comment-468183" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">KJK::Hyperion</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070201-03/?p=28193#comment-468183">
			February 3, 2007 at 2:01 pm</a>		</div>

		<p>Here goes nothing, let&#8217;s explain the technical issue *all over again*</p>
<p>&#8220;Fast mode&#8221; is internally called FileIdBothDirectoryInformation. I do not know this because I have access to supa-seekrit Microsoft information, I know this because it&#8217;s public and because it has been documented to be the issue at hand. In other words, I know this because I can read</p>
<p>FileIdBothDirectoryInformation is actually a manifest constant with value 37, the &#8220;File*Information&#8221; form is standard and it means it&#8217;s an information class for file object, &#8220;Directory&#8221; means it applies to directory enumerations, &#8220;Both&#8221; (as opposed to &#8220;Full&#8221;) means it also returns the short 8.3 name, and &#8220;Id&#8221; is the &#8220;fast&#8221; part</p>
<p>&#8220;Id&#8221; means the information class returns the file id (the inode number for NTFS, a random unspecified value for philistine filesystems). Basically, &#8220;fast&#8221; enumerations are functionally equivalent to UNIX readdir. Before &#8220;fast&#8221; enumerations, which were introduced in Windows XP, the way to &#8220;readdir&#8221; was to query for FileBothDirectoryInformation, and then *open* each and every enumerated file, query for its id (FileInternalInformation, if you were wondering) and close it. Very disruptive, even locally, but especially so over a network connection</p>
<p>Now, CIFS is pretty much just a serialization of NT I/O semantics over the wire (for some reason this surprises and confuses people from the UNIX/TCP camps. What do they expect?). This means the &#8220;enumerate directory&#8221; command has a field that mirrors the information class. Now, the polite thing to do is to check said field, ensure it&#8217;s within a range of supported values and fail otherwise, with a status code that tells the client &#8220;I&#8217;m afraid I can&#8217;t do that, Dave&#8221;. The client can then set a compatibility bit on the server for the rest of the session and go with the slower version of the enumeration.</p>
<p>The correct status code would be something like STATUS_INVALID_INFO_CLASS, or even STATUS_INVALID_PARAMETER. Returning success is catastrophically wrong, because the new FileId field hasn&#8217;t been added at the end of the structure &#8211; it couldn&#8217;t be! the structure has a variable lenght, and the last field must be the filename, so FileId has been added as the new *next-to-last* field. Success almost certainly means the structure has been filled incorrectly</p>
<p>Returning the dreaded catch-all STATUS_UNSUCCESSFUL (&#8220;A device connected to the system is not functioning&#8221;) is wrong, as well &#8211; it makes the server automatically useless, as no directory enumeration will work ever again</p>
<p>How would I have fixed it: I would have defined a &#8220;wrong&#8221; information class, to be used as a test for broken implementations that ignore that field. At the first enumeration request class newer than a certain revision, a broken request would be sent as a probe: if the server answers anything but STATUS_INVALID_INFO_CLASS or STATUS_INVALID_PARAMETER, it&#8217;s immediately flagged. All future requests for that class on a flagged server automatically fail, so that the application (remember that, until here, it&#8217;s the client driver we&#8217;re talking about) can retry with a downlevel request</p>
<div class="post">[<i>That doesn&#8217;t help the servers that crash when given an invalid information level. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-468273">
				<div id="div-comment-468273" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ian Boyd</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070201-03/?p=28193#comment-468273">
			February 3, 2007 at 11:09 pm</a>		</div>

		<p>Okay then, time for a new file sharing protocol. If Microsoft is prevented from improving the existing protocol in order to maintain compatability with buggy non-MS implementations; then get rid of it.</p>
<p>Samba has always been horribly slow, and without the possibility of it getting faster it&#8217;s time to transition away from it.</p>
<p>The Visual Studio guys already started something with an &quot;extra fast file sharing driver&quot; for SourceSafe, since VSS runs off of samba. Run with something like that.</p>
<p>Make it redistributable for 2000/XP/Vista. We&#8217;ll install this new network service driver, and uninstall file and printer sharing.</p>
<p>And what&#8217;s more, Microsoft will tag it with &quot;we don&#8217;t care if future updates to our operating system crash your buggy file servers. Use this protocol at your peril.&quot; &nbsp;And there will be much rejoycing.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-468353">
				<div id="div-comment-468353" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">DrPizza</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070201-03/?p=28193#comment-468353">
			February 4, 2007 at 6:33 am</a>		</div>

		<p>I don&#8217;t have any broken devices.</p>
<p>Why should I have to put up with the crappy slow behaviour?</p>
<p>Does SMB2 include a provision for exactly identifying the software version at the other end so that this kind of thing doesn&#8217;t happen in the future? &nbsp;Let me guess&#8230;.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-468403">
				<div id="div-comment-468403" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Craig Ringer</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070201-03/?p=28193#comment-468403">
			February 4, 2007 at 8:29 pm</a>		</div>

		<p>Some of these buggy implementations crash when asked to perform this operation. If I&#8217;m not mistaken, this means that there are a significant number of buggy 3rd-party SMB servers out there that&#8217;re vulnerable to a denial of service attack by anybody who can authenticate read-only in order to attempt to enumerate a directory&#8217;s contents.</p>
<p>And some of the manufacturers of these devices no longer support them or have provided no firmware update mechanism.</p>
<p>Ouch.</p>
<p>Personally I think Microsoft&#8217;s handling of this issue makes perfect sense, though it must be frustrating. It&#8217;s also clear that client-side server discrimination (versioning and user-agent info) is unlikely to be effective because servers will get these wrong too or actively lie about them (&quot;Suuuuure, I&#8217;m Win2k3 Server&#8230; really&quot;). They might do so for what seems like a good reason at the time, but that&#8217;ll still break the whole system.</p>
<p>I&#8217;ll admit being a little surprised that an equivalent operation that won&#8217;t be recognised as such by older servers isn&#8217;t being added, but I&#8217;m sure there&#8217;re good reasons for that.</p>
<p>I&#8217;m one of those &quot;surprised and confused&quot; UNIX guys when it comes to how CIFS is done (and its incredible complexity)&#8230; but I can see the attraction from the PoV of the Windows-based implementer. You see the same thing in other places &#8211; especially apps that save files that&#8217;re essentially serializations of their in-memory document structures. They tend to suffer in robustness and be an absolute nightmare to work with from other software, but be very, very fast and very easy for the first implementer.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-468473">
				<div id="div-comment-468473" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">required</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070201-03/?p=28193#comment-468473">
			February 5, 2007 at 4:23 am</a>		</div>

		<p>The comment you linked to (<a href="http://blogs.msdn.com/oldnewthing/archive/2006/03/31/565878.aspx#566308" target="_new" rel="nofollow">http://blogs.msdn.com/oldnewthing/archive/2006/03/31/565878.aspx#566308</a> ) specifically mentioned &#8220;testing&#8221; versions. You&#8217;re surprised that people running fully patched stable versions reported the bug?</p>
<div class="post">[<i>The comment said it was available &#8220;in Fedora Core 5, Debian Testing, and various other bleeding edge distros.&#8221; Take out Debian Testing and that still leaves Fedora Core 5 and &#8220;various other bleeding edge distros&#8221;. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-468653">
				<div id="div-comment-468653" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">David Walker</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070201-03/?p=28193#comment-468653">
			February 5, 2007 at 11:57 am</a>		</div>

		<p>Bob and DrPizza: &nbsp;The answer is compatibility. &nbsp;</p>
<p>As Raymond has said many times, if you buy a new operating system and discover that some of your applications suddenly don&#8217;t work, who are you going to blame, the application (which worked fine before you upgraded the OS) or the new OS?</p>
<p>In a perfect world, or in an Apple world, where you control the OS and (almost) all of the hardware, you can break things that were implemented incorrectly.</p>
<p>See:</p>
<p><a rel="nofollow" target="_new" href="http://blogs.msdn.com/oldnewthing/archive/2006/11/06/999999.aspx" rel="nofollow">http://blogs.msdn.com/oldnewthing/archive/2006/11/06/999999.aspx</a></p>
<p><a rel="nofollow" target="_new" href="http://blogs.msdn.com/oldnewthing/archive/2005/01/18/355177.aspx" rel="nofollow">http://blogs.msdn.com/oldnewthing/archive/2005/01/18/355177.aspx</a></p>
<p><a rel="nofollow" target="_new" href="http://blogs.msdn.com/oldnewthing/archive/2003/12/24/45779.aspx" rel="nofollow">http://blogs.msdn.com/oldnewthing/archive/2003/12/24/45779.aspx</a></p>
<p>and any other blog entry that mentions &quot;compatibility&quot;.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-468493">
				<div id="div-comment-468493" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Bob</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070201-03/?p=28193#comment-468493">
			February 5, 2007 at 5:43 am</a>		</div>

		<p>I&#8217;m with DrPizza on this one. Why should my computer performance be penalized because somebody wrote a buggy server that doesn&#8217;t validate the known parameters without crashing?</p>
<p>*They* are the ones that should be outed; not Microsoft and not me.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-469203">
				<div id="div-comment-469203" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Cooney</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070201-03/?p=28193#comment-469203">
			February 5, 2007 at 7:30 pm</a>		</div>

		<p>Rosyna:</p>
<p>&gt; Well, my question is, why did this problem occur in the first place and what could have prevented these buggy implementations from being buggy?</p>
<p>Actually implementing a standard with an open review process.</p>
<div class=post>[<i>I had trouble parsing this. What should have an open review process, the standard or the implementation? -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-469223">
				<div id="div-comment-469223" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Cooney</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070201-03/?p=28193#comment-469223">
			February 5, 2007 at 8:07 pm</a>		</div>

		<p>[It&#8217;s easy to say &#8220;Just make an exhaustive list&#8221;, but it&#8217;s impossible to do. An &#8220;exhaustive&#8221; list would be infinitely long. -Raymond]</p>
<p>HTTP works pretty well, even with its warts.</p>
<p>&gt; My question is, why isn&#8217;t there a field like HTTP&#8217;s User-Agent so you can tell whose implementation you&#8217;re working with </p>
<p>Because SMB wasn&#8217;t intended to interoperate with anything.</p>
<p>My take on this whole thing is that you have to allocate another network port and use it for a separate protocol. This protocol can behave similarly to SMB, with lessons learned applied; this means that the protocol should be clearly documented and include such things as command encapsulation and versioning.</p>
<div class="post">[<i>HTTP is much simpler than SMB, and even then not everybody gets all the details right. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-469233">
				<div id="div-comment-469233" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Cooney</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070201-03/?p=28193#comment-469233">
			February 5, 2007 at 8:08 pm</a>		</div>

		<p>[I had trouble parsing this. What should have an open review process, the standard or the implementation? -Raymond]</p>
<p>The standard should be developed in an open manner, with public review (basically, look at IETF and follow their lead). This ends up with a reference implentation which is both compliant and pedantic, the better to measure other implementations against.</p>
<div class="post">[<i>And that would prevent other implementations from having bugs? Less likely, perhaps, but prevention? -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-469253">
				<div id="div-comment-469253" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">KJK::Hyperion</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070201-03/?p=28193#comment-469253">
			February 5, 2007 at 8:30 pm</a>		</div>

		<p>DrPizza: the broken implementations of the future will just lie about it&#8230;</p>
<p>Craig: I don&#8217;t find CIFS all that hard. I can appreciate an utilitarian design, especially compared to the overdesigned NFS or the byzantine WebDAV, both of which gross tagsoups developed against checklists of buzzwords-of-the-day. Windows networking isn&#8217;t, of course, just CIFS, and I won&#8217;t go into that&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-469283">
				<div id="div-comment-469283" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Cooney</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070201-03/?p=28193#comment-469283">
			February 5, 2007 at 8:57 pm</a>		</div>

		<p>[And that would prevent other implementations from having bugs? Less likely, perhaps, but prevention? -Raymond]</p>
<p>prevention is not the goal. a process that minimizes errors and misunderstanding is.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-469643">
				<div id="div-comment-469643" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Markus Freericks</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070201-03/?p=28193#comment-469643">
			February 6, 2007 at 11:56 am</a>		</div>

		<p>[And that would prevent other implementations from having bugs? Less likely, perhaps, but prevention? -Raymond]</p>
<p>While it is practically impossible to create an exhaustive test suite for most &#8220;interesting&#8221; protocols or languages, even an incomplete test makes it easier for an implementor to check for specification compliance. </p>
<p>An example is the &#8220;acid2&#8221; browser test for HTML/CSS; one quick check enables me to see that my firefox is still broken. This is useful even if the test is not nearly complete.</p>
<p>Of course, testing a CSS rendering engine is much easier than testing a protocol. But the problems at issue here do not concern anything intractable like timing behaviour, but only &#8220;simple&#8221; behavioural bugs, like sending the wrong error codes or no error codes at all, or crashing on malformed or unrecognized messages.</p>
<div class="post">[<i>That would have helped the servers that crash, but the original problem was a server that worked great as long as your directory had fewer than 128 files in it. That probably would have passed the simple validation test. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-469753">
				<div id="div-comment-469753" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">BryanK</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070201-03/?p=28193#comment-469753">
			February 6, 2007 at 1:11 pm</a>		</div>

		<p>&gt; That probably would have passed the simple validation test.</p>
<p>Not if the test had required both an SMBfindfirst and an SMBfindnext request to pass.</p>
<p>The problem showed up after 128 files, yes &#8212; but *only* because the local machine&#8217;s network redirector asked for the first 128 files from the server when user-mode asked it for the first file. &nbsp;Once user-mode asked for the 129th file, the network redirector asked the server for the next batch of 128, and the server failed at that point.</p>
<p>If the test had existed, and had tested both find-first and find-next, then the handlers for both requests on the server would have been tried, and the find-next handler would have been exposed as broken. &nbsp;(The test has to be written with the low-level protocol in mind, not the particular implementation of the client side that was chosen for the redirector. &nbsp;If you were writing a test-suite for HTTP, for instance, you wouldn&#8217;t leave the POST verb out because no browser issues it as a &quot;first&quot; request to the server (because they all issue a GET for the form page first). &nbsp;You&#8217;d focus on testing the implementation of the protocol itself, and that means both POST and GET requests.)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-470423">
				<div id="div-comment-470423" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Neil</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070201-03/?p=28193#comment-470423">
			February 7, 2007 at 12:48 pm</a>		</div>

		<blockquote><p>
  My question is, why isn&#8217;t there a field like HTTP&#8217;s User-Agent so you can tell whose implementation you&#8217;re working with and, if it&#8217;s known to be buggy, adjust accordingly?
</p></blockquote>
<p>When Microsoft wrote the File and Printer Sharing for NetWare Networks service, I am assuming they reverse-engineered NCP in much the same way that everyone else reverse-engineered SMB, and it apparently doesn&#8217;t actually report the version that it implements.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-471293">
				<div id="div-comment-471293" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Stu</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070201-03/?p=28193#comment-471293">
			February 10, 2007 at 6:19 am</a>		</div>

		<p>Here&#8217;s how to stop these sorts of bugs in the future:</p>
<p>Publish the full and complete SMB/CIFS specs under a non-discriminatory (i.e. GPL friendly, non-NDA) free-of-charge licence.</p>
<p>Also, an SMB/CIFS implementation verifier (a Windows program, plus a fileset for a test share) would go a long way to helping.</p>
<p>The problem is entirely Microsoft&#8217;s fault. Forcing people to either buy Windows or rely on reverse-engineering in order to use their network is silly.</p>
<p>Of course, this will never happen. It is in Microsoft&#8217;s best interests to keep the SMB/CIFS specs away from the Samba team, so they can come up with PR lines like &quot;we had to slow down all SMB/CIFS networking because of a bug in Samba&quot;.</p>
<p>Maybe now that Microsoft has *finally* complied with the EU order to release protocol specs we might get somewhere. I won&#8217;t hold my breath.</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

