<html>
<head>
<title>A user's SID can change, so make sure to check the SID history</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>A user&#8217;s SID can change, so make sure to check the SID history</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>November 28, 2014 / year-entry #278</td></tr>
<tr><td><b>Tags:</b></td><td>code</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20141128-00/?p=43513</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>23</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">It doesn't happen often, but a user's SID can change. For example, when I started at Microsoft, my account was in the SYS-WIN4 domain, which is where all the people on the Windows 95 team were placed. At some point, that domain was retired, and my account moved to the REDMOND domain. We saw some time...</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>
It doesn't happen often,
but a user's SID can change.
For example, when I started at Microsoft,
my account was in the SYS-WIN4 domain,
which is where all the people on the Windows&nbsp;95 team
were placed.
At some point, that domain was retired,
and my account moved to the REDMOND domain.
We saw
<a HREF="http://blogs.msdn.com/b/oldnewthing/archive/2004/03/15/89753.aspx">
some time ago</a>
that the format of a user SID is
</p>
<table BORDER=0 CELLSPACING=3>
<tr>
<td>S-1-</td>
<td>version number (SID_REVISION)</td>
</tr>
<tr>
<td>-5-</td>
<td>SECURITY_<wbr>NT_<wbr>AUTHORITY</td>
</tr>
<tr>
<td>-21-</td>
<td>SECURITY_<wbr>NT_<wbr>NON_<wbr>UNIQUE</td>
</tr>
<tr>
<td>-w-x-y-</td>
<td>the entity (machine or domain) that issued the SID</td>
</tr>
<tr>
<td>-z</td>
<td>the unique user ID for that entity</td>
</tr>
</table>
<p>
The issuing entity for a local account on a machine is the machine
to which the account belongs.
The issuing entity for a domain account is the domain.
</p>
<p>
If an account moves between domains,
the issuing entity changes,
which means that the old SID is not valid.
A new SID must be issued.
</p>
<p>
Wait, does this mean that if my account moves between domains,
then I lose access to all my old stuff?
All my old stuff grants access to my old SID, not my new SID.
</p>
<p>
Fortunately, this doesn't happen,
thanks to the
<a HREF="http://technet.microsoft.com/en-us/library/cc974384(v=WS.10).aspx">
<i>SID history</i></a>.
When your account moves to the new domain, the new domain controller
remembers all the previous SIDs you used to have.
When you authenticate against the domain controller,
it populates your token with your SID history.
In my example, it means that my token not only says
"This is user number 271828 on the REDMOND domain",
it also says
"This user used to be known as number 31415 on the SYS-WIN4 domain."
That way, when the system sees an object whose ACL says,
"Grant access to user 31415 on the SYS-WIN4 domain,"
then it should grant me access to that object.
</p>
<p>
The existence of SID history means that recognizing users when they
return is more complicated than a simple
<code>Equal&shy;Sid</code>,
because <code>Equal&shy;Sid</code> will say that
"No, S-1-5-21-REDMOND-271828 is not equal to
S-1-5-21-SYS-WIN4-31415,"
even though both SIDs refer to the same person.
</p>
<p>
If you are going to remember a SID and then try to recognize a user
when they return, you need to search the SID history for a match,
in case the user changed domains between the two visits.
The easiest way to do this is with the
<code>Access&shy;Check</code> function.
For example, suppose I visited your site while I belong to the
SYS-WIN4 domain,
and you remembered my SID.
When I return,
you create a security descriptor that grants access to
the SID you remembered,
and then you ask <code>Access&shy;Check</code>,
"If I had an object that granted access only to this SID,
would you let this guy access it?"
</p>
<p>
(So far, this is just recapping
<a HREF="http://blogs.msdn.com/b/oldnewthing/archive/2014/08/29/10553610.aspx">
stuff I discussed a few months ago</a>.
Now comes the new stuff.)
</p>
<p>
There are a few ways of building up the security descriptor.
In all the cases, we will create a security descriptor that
grants the specified SID some arbitrary access,
and then we will ask the operating system whether the current
user has that access.
</p>
<p>
My arbitrary access shall be
</p>
<pre>
#define FROB_ACCESS     1 // any single bit less than 65536
</pre>
<p>
One way to build the security descriptor
is to let SDDL do the heavy lifting:
Generate the string
<code>D:(A;;1;;;&lang;SID&rang;)</code>
and then pass it to
<code>String&shy;Security&shy;Descriptor&shy;To&shy;Security&shy;Descriptor</code>.
</p>
<p>
Another is to build it up with security descriptor functions.
<a HREF="http://msdn.microsoft.com/en-us/library/windows/desktop/aa446595(v=vs.85).aspx">
I defer to the sample code in MSDN</a>
for an illustration.
</p>
<p>
The hard-core way is just to build the security descriptor by hand.
For a security descriptor this simple, the direct approach involves
the least amount of code.
Go figure.
</p>
<p>
The format of the security descriptor we want to build is
</p>
<pre>
struct ACCESS_ALLOWED_ACE_MAX_SIZE
{
    ACCESS_ALLOWED_ACE Ace;
    BYTE SidExtra[SECURITY_MAX_SID_SIZE - sizeof(DWORD)];
};
</pre>
<p>
The <code>ACCESS_<wbr>ALLOWED_<wbr>ACE_<wbr>MAX_<wbr>SIZE</code>
structure represents the maximum possible size of an
<code>ACCESS_<wbr>ALLOWED_<wbr>ACE</code>.
The
<code>ACCESS_<wbr>ALLOWED_<wbr>ACE</code>
leaves a <code>DWORD</code> for the SID
(<code>Sid&shy;Start</code>),
so we add additional bytes afterward to accommodate the largest
valid SID.
If you wanted to be more C++-like, you could make
<code>ACCESS_<wbr>ALLOWED_<wbr>ACE_<wbr>MAX_<wbr>SIZE</code>
derive from
<code>ACCESS_<wbr>ALLOWED_<wbr>ACE</code>.
</p>
<pre>
struct ALLOW_ONLY_ONE_SECURITY_DESCRIPTOR
{
    SECURITY_DESCRIPTOR_RELATIVE Header;
    ACL Acl;
    ACCESS_ALLOWED_ACE_MAX_SIZE Ace;
};

const ALLOW_ONLY_ONE_SECURITY_DESCRIPTOR c_sdTemplate = {
  // SECURITY_DESCRIPTOR_RELATIVE
  {
    SECURITY_DESCRIPTOR_REVISION,           // Revision
    0,                                      // Reserved
    SE_DACL_PRESENT | SE_SELF_RELATIVE,     // Control
    FIELD_OFFSET(ALLOW_ONLY_ONE_SECURITY_DESCRIPTOR, Ace.Ace.SidStart),
                                            // Offset to owner
    FIELD_OFFSET(ALLOW_ONLY_ONE_SECURITY_DESCRIPTOR, Ace.Ace.SidStart),
                                            // Offset to group
    0,                                      // No SACL
    FIELD_OFFSET(ALLOW_ONLY_ONE_SECURITY_DESCRIPTOR, Acl),
                                            // Offset to DACL
  },
  // ACL
  {
    ACL_REVISION,                           // Revision
    0,                                      // Reserved
    sizeof(ALLOW_ONLY_ONE_SECURITY_DESCRIPTOR) -
    FIELD_OFFSET(ALLOW_ONLY_ONE_SECURITY_DESCRIPTOR, Acl),
                                            // ACL size
    1,                                      // ACE count
    0,                                      // Reserved
  },
  // ACCESS_ALLOWED_ACE_MAX_SIZE
  {
    // ACCESS_ALLOWED_ACE
    {
      // ACE_HEADER
      {
        ACCESS_ALLOWED_ACE_TYPE,            // AceType
        0,                                  // flags
        sizeof(ACCESS_ALLOWED_ACE_MAX_SIZE),// ACE size
      },
      FROB_ACCESS,                          // Access mask
    },
  },
};
</pre>
<p>
Our template security descriptor says that it is a self-relative
security descriptor with an owner, group and DACL,
but no SACL.
The DACL consists of a single ACE.
We set up everything in the ACE except for the SID.
We point the owner and group to that same SID.
Therefore, this security descriptor is all ready for action
once you fill in the SID.
</p>
<pre>
BOOL IsInSidHistory(HANDLE Token, PSID Sid)
{
  DWORD SidLength = GetLengthSid(Sid);

  if (SidLength &gt; SECURITY_MAX_SID_SIZE) {
    // Invalid SID. That's not good.
    // Somebody is playing with corrupted data.
    // Stop before anything bad happens.
    RaiseFailFastException(nullptr, nullptr, 0);
  }

  ALLOW_ONLY_ONE_SECURITY_DESCRIPTOR Sd = c_sdTemplate;
  CopyMemory(&amp;Sd.Ace.Ace.SidStart, Sid, SidLength);
</pre>
<p>
As you can see, generating the security descriptor is a simple
matter of copying our template and then replacing the SID.
The next step is performing an access check of the token
against that SID.
</p>
<pre>
  const static GENERIC_MAPPING c_GenericMappingFrob = {
    FROB_ACCESS,
    FROB_ACCESS,
    FROB_ACCESS,
    FROB_ACCESS,
  };
  PRIVILEGE_SET PrivilegeSet;
  DWORD PrivilegeSetSize = sizeof(PrivilegeSet);
  DWORD GrantedAccess = 0;
  BOOL AccessStatus = 0;
  return AccessCheck(&amp;Sd, Token, FROB_ACCESS,
    const_cast&lt;PGENERIC_MAPPING&gt;(&amp;c_GenericMappingFrob),
    &PrivilegeSet, &PrivilegeSetSize,
    &amp;GrantedAccess, &amp;AccessStatus) &amp;&amp;
    AccessStatus;
}
</pre>
<p>
So let's take this guy out for a spin.
Since I don't know what is in your SID history,
I'm going to pick something that should be in your token already
(<i>Authenticated Users</i>)
and something that shouldn't
(<i>Local System</i>).
</p>
<pre>
// Note: Error checking elided for expository purposes.

void CheckWellKnownSid(HANDLE Token, WELL_KNOWN_SID_TYPE type)
{
  BYTE rgbSid[SECURITY_MAX_SID_SIZE];
  DWORD cbSid = sizeof(rgbSid);
  CreateWellKnownSid(type, NULL, rgbSid, &amp;cbSid);
  printf("Is %d in SID history? %d\n", type,
         IsInSidHistory(Token, rgbSid));
}

int __cdecl wmain(int argc, wchar_t **argv)
{
  HANDLE Token;
  // In real life you had better error-check these calls,
  // to avoid a security hole.
  ImpersonateSelf(SecurityImpersonation);
  OpenThreadToken(GetCurrentThread(), TOKEN_QUERY, TRUE, &amp;Token);
  RevertToSelf();

  CheckWellKnownSid(Token, WinAuthenticatedUserSid);
  CheckWellKnownSid(Token, WinLocalSystemSid);
  CloseHandle(Token);

  return 0;
}
</pre>
<p>
<b>Related reading</b>:
<a HREF="http://blogs.msdn.com/b/oldnewthing/archive/2010/09/12/10060082.aspx">
Hey there token, long time no see! (Did you do something with your hair?)</a></p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (23)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-1164343">
				<div id="div-comment-1164343" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Arde</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20141128-00/?p=43513#comment-1164343">
			November 28, 2014 at 9:09 pm</a>		</div>

		<p>Is there a book on Windows Security programming which explains the security / crypto API? Or rather gives a overview of the best practices? My search turned up nothing useful. MSDN is good for the nitty-gritties, but not for the overall big picture and best practices</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1164353">
				<div id="div-comment-1164353" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Dioksin</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20141128-00/?p=43513#comment-1164353">
			November 30, 2014 at 2:47 am</a>		</div>

		<p>Arde, look at this book &quot;Programming Windows Security&quot; by Keith Brown</p>
<p><a rel="nofollow" target="_new" href="http://www.amazon.com/Programming-Windows-Security-Keith-Brown/dp/0201604426">http://www.amazon.com/&#8230;/0201604426</a></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1164363">
				<div id="div-comment-1164363" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">stickboy</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20141128-00/?p=43513#comment-1164363">
			November 30, 2014 at 12:29 pm</a>		</div>

		<p>Why can&#39;t local users make use of SID history? &nbsp;What are home users supposed to do when buying a new computer and trying to access data on external storage? &nbsp;All of this SID business is incredibly convoluted and hard for anyone to get right. &nbsp;It seems like it&#39;d be simpler to allow administrators to explicitly set a user&#39;s SID at account creation time; local administrators can already reset the ownership/permissions on local files anyway.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-cheong odd alt thread-odd thread-alt depth-1" id="comment-1164373">
				<div id="div-comment-1164373" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/cheong00' rel='external nofollow' class='url'>cheong00</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20141128-00/?p=43513#comment-1164373">
			November 30, 2014 at 6:00 pm</a>		</div>

		<p>@stickboy: In local account case, if your user account migration tool is doing things right, the objects transferred to new computer should already be under the new SID, therefore no SID history is needed.</p>
<p>In the case where Active Directory is involved, since the other machines may not be switched on at the time of SID change, therefore SID history would be necessary.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-cheong even thread-even depth-1" id="comment-1164383">
				<div id="div-comment-1164383" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/cheong00' rel='external nofollow' class='url'>cheong00</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20141128-00/?p=43513#comment-1164383">
			November 30, 2014 at 6:03 pm</a>		</div>

		<p>As for allow administrators to explicitly set user SID, just imagine what happens if you accidentally (or intentionally) choose to create an account with the same SID as someone in domain, or for more complicated cases, a trusted domain in different forest.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1164403">
				<div id="div-comment-1164403" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">kermi</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20141128-00/?p=43513#comment-1164403">
			December 1, 2014 at 4:51 am</a>		</div>

		<p>I believe in the case of home users and USB drives, the default NTFS permissions grant RWX permissions to the Users group, which all users are part of by default. Changing computers should not cause problems accessing data, unless you have modified the permissions by hand.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1164453">
				<div id="div-comment-1164453" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Avenida</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20141128-00/?p=43513#comment-1164453">
			December 1, 2014 at 9:18 am</a>		</div>

		<p>I like that you used e and pi as your placeholder numbers.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-zlynx odd alt thread-odd thread-alt depth-1" id="comment-1164473">
				<div id="div-comment-1164473" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Zan+Lynx%27' rel='external nofollow' class='url'>Zan Lynx'</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20141128-00/?p=43513#comment-1164473">
			December 1, 2014 at 10:57 am</a>		</div>

		<p>@Engywuck: There&#39;s a security reason for it? I can&#39;t imagine&#8230;</p>
<p>As you say, an Admin can overwrite the file permissions. Lesser known methods include using impersonation to read the files without touching the ownership or attaching the disk to a Linux machine and reading it as root.</p>
<p>Being able to add an old identity to your current identity seems much more secure than those other options.</p>
<div class="post">[<em>Suppose you connect to a network resource and hand it your token. &quot;Hello, this is WORKGROUPzan, but I used to be known as REDMONDbillg, so, y&#39;know, let me access anything that REDMONDbillg can.&quot; -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1164393">
				<div id="div-comment-1164393" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Engywuck</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20141128-00/?p=43513#comment-1164393">
			December 1, 2014 at 3:20 am</a>		</div>

		<p>@cheong00: probably stickboy meant NTFS-formatted external (USB-)drives, which obviously get the SID from the local system, but may or may not be accessible at time of migration.</p>
<p>Those media usually aren&#39;t fully usable on other computers anyway, but this may be OK. Otherwise you&#39;d have to use a filesystem like FAT which is writable for anyone accessing the device, but if you don&#39;t want to use ExFAT there are some limits in using it (file size and maximum file system (formatting) size being the worst)</p>
<p>When you migrate the computer (or as most do (re)install) with new OS your old SID are lost and you *have* to go the hard way to access the NTFS-formatted external media (make yourself Owner, then hammer your access through and give new ACLs). There&#39;s no (obvious) way to say the computer &quot;oh, btw, I was S-1-5-21-OLDCOMP-1034 before you even existed&quot;. Of course, there&#39;s a security reason for that, but I see the problem it may cause. &nbsp;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1164513">
				<div id="div-comment-1164513" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">foo</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20141128-00/?p=43513#comment-1164513">
			December 1, 2014 at 3:33 pm</a>		</div>

		<p>@Avenida. Hah neat! I skimmed too fast to notice that. But now I see that the 1-5-21 part == binary 1, 101, 10101 sequence.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1164443">
				<div id="div-comment-1164443" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20141128-00/?p=43513#comment-1164443">
			December 1, 2014 at 8:14 am</a>		</div>

		<p>@kermi: I&#39;ll bet it does *now* but it didn&#39;t always.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-cheong odd alt thread-odd thread-alt depth-1" id="comment-1164523">
				<div id="div-comment-1164523" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/cheong00' rel='external nofollow' class='url'>cheong00</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20141128-00/?p=43513#comment-1164523">
			December 1, 2014 at 5:15 pm</a>		</div>

		<p>@Engywuck: Hope you&#39;re aware that &quot;convert.exe&quot; has an option named &quot;/NoSecurity&quot; that&#39;d allow all users full access right to the filesystem.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1164533">
				<div id="div-comment-1164533" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Engywuck</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20141128-00/?p=43513#comment-1164533">
			December 1, 2014 at 11:25 pm</a>		</div>

		<p>convert.exe only converts from FAT to NTFS, right? But now you have a &#8211; say &#8211; 64GB USB Stick (or an external HDD) and want to use it. Happy formatting to FAT32 with windows included tools before converting with convert.exe :-)</p>
<p>@foo: nice find. Never thought about the numbers before &#8211; in hex it&#39;s even better: S-0x1-0x5-0x15 :-)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1164563">
				<div id="div-comment-1164563" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">kermi</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20141128-00/?p=43513#comment-1164563">
			December 2, 2014 at 4:36 am</a>		</div>

		<p>@Joshua</p>
<p>Wonder how much time back do we have to go for that not to have happened. As far as i can recall, it hasnt&#39; been issue in the 21st century..</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1164623">
				<div id="div-comment-1164623" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20141128-00/?p=43513#comment-1164623">
			December 2, 2014 at 8:19 am</a>		</div>

		<p>@kermi: Windows 2000 did it wrong for sure. I think early XP as well (fixed in SP1?).</p>
<p>[Suppose you connect to a network resource and hand it your token. &quot;Hello, this is WORKGROUPzan, but I used to be known as REDMONDbillg, so, y&#39;know, let me access anything that REDMONDbillg can.&quot; -Raymond]</p>
<p>Non-issue as SIDs don&#39;t cross like that. I can generate token for REDMONDbillg SID directly on a workstation but it doesn&#39;t work cross-network either. The only machines that can set it up are the machine it&#39;s expected to work on are the machine interpreting the SID or the domain controller thereof.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-fjeldse odd alt thread-odd thread-alt depth-1" id="comment-1164703">
				<div id="div-comment-1164703" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Erik+F' rel='external nofollow' class='url'>Erik F</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20141128-00/?p=43513#comment-1164703">
			December 2, 2014 at 3:06 pm</a>		</div>

		<p>External trusts add another level of complexity as SIDs are quarantined by default, which may prevent SID histories from authenticating resources (see <a rel="nofollow" target="_new" href="http://technet.microsoft.com/en-us/library/cc755321%28v=ws.10%29.aspx">technet.microsoft.com/&#8230;/cc755321%28v=ws.10%29.aspx</a> : it&#39;s an interesting read!)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1164713">
				<div id="div-comment-1164713" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20141128-00/?p=43513#comment-1164713">
			December 2, 2014 at 4:07 pm</a>		</div>

		<p>Wow, the guy who wrote that document actually believes that making it difficult to modify the OS (by means of a disk editor) is a practical security measure. The attack may be difficult but if made attractive somebody will release the tool, just like the password reset tool was released.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-cheong odd alt thread-odd thread-alt depth-1" id="comment-1164753">
				<div id="div-comment-1164753" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/cheong00' rel='external nofollow' class='url'>cheong00</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20141128-00/?p=43513#comment-1164753">
			December 2, 2014 at 5:23 pm</a>		</div>

		<p>@Engywuck: Not only from FAT to NTFS, also from NTFS to &quot;NTFS with full access to everyone&quot;. I&#39;m pretty sure I&#39;ve done this a few time with my flash drives before.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-cheong even thread-even depth-1" id="comment-1164773">
				<div id="div-comment-1164773" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/cheong00' rel='external nofollow' class='url'>cheong00</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20141128-00/?p=43513#comment-1164773">
			December 2, 2014 at 5:39 pm</a>		</div>

		<p>Btw, even without that tool, nothing blocks you to give full access to &quot;Authenticated Users&quot; &#8211; it&#39;s SID is the same for all system ( <a rel="nofollow" target="_new" href="http://msdn.microsoft.com/en-us/library/windows/desktop/aa379649(v=vs.85).aspx">msdn.microsoft.com/&#8230;/aa379649(v=vs.85).aspx</a> ) to the base folder of the flash drive, and let folders inherit that access.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1164803">
				<div id="div-comment-1164803" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">kermi</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20141128-00/?p=43513#comment-1164803">
			December 2, 2014 at 9:41 pm</a>		</div>

		<p>@Joshua</p>
<p>Well it wasn&#39;t really a problem on XP, since admins have full controll over everything, and everyone was part of admin group :D</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1164813">
				<div id="div-comment-1164813" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">ROT-13</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20141128-00/?p=43513#comment-1164813">
			December 2, 2014 at 10:01 pm</a>		</div>

		<p>Well thank goodness I encrypt all me lucky charms.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1164833">
				<div id="div-comment-1164833" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Engywuck</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20141128-00/?p=43513#comment-1164833">
			December 3, 2014 at 12:29 am</a>		</div>

		<p>@cheong00: &quot;Volume M: is already a NTFS-Filesystem&quot; (translated) &#8211; so convert.exe really only likes FAT, at least on Win7</p>
<p>I&#39;ve also tested the whole NTFS formatting on external drives with Win7 Pro:</p>
<p>&#8211; on USB sticks it sets Everyone: (OI)(CI)(F) (&quot;Full Access, Inheritable&quot;)</p>
<p>&#8211; on external (USB-)HDDs it sets Administrators and SYSTEM: (F) and (OI)(CI)(IO)(F) [Full, Inheritable], Authenticated Users: (M) and (OI)(CI)(IO)(M) [Modify, Inheritable], Users: (RX) and (OI)(CI)(IO)(GR,GE) [Read, Execute, Inheritable]</p>
<p>I concur now that everyone should be able to use it on any computer by default. Could have sworn it wasn&#39;t like that, but maybe I (mis)remember some XP formatted drive. If that&#39;s the case then it&#39;s an example of the many small changes to make Windows better with each new iteration that nobody really notices ;-)</p>
<p>Can&#39;t test with Win8 or Server 2k12 right now &#8211; all machines are virtual :-)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-fjeldse even thread-even depth-1" id="comment-1164863">
				<div id="div-comment-1164863" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Erik+F' rel='external nofollow' class='url'>Erik F</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20141128-00/?p=43513#comment-1164863">
			December 3, 2014 at 3:24 am</a>		</div>

		<p>@Engywuck: I&#39;m pretty sure that devices recognized as HDDs have always had stricter permissions on the assumption that they are not shared between computers; a system partition with Everyone: (OI)(CI)(F) at the root seems like a bad idea IMO. You can always do &quot;cacls m: /g everyone:f&quot; to get the effect that you want in any case.</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

