<html>
<head>
<title>Don't just grab the foreground window and host UI on it, redux</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>Don&#8217;t just grab the foreground window and host UI on it, redux</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>February 17, 2016 / year-entry #37</td></tr>
<tr><td><b>Tags:</b></td><td>code</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20160217-00/?p=93042</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>40</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">Oops, it's not there any more.</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>
Some time ago, I advised,
"<a HREF="http://blogs.msdn.com/b/oldnewthing/archive/2007/07/27/4072156.aspx">Don't just grab the foreground window and host UI on it</a>."
</p>
<p>
Today I learned of another application that failed to heed this advice.
When the application's installer is launched,&sup1;
it calls <code>Get&shy;Foreground&shy;Window</code> and
uses that window as the owner for its dialogs.
In particular, if you install the app by typing
<code>setup</code> into the <i>Run</i> dialog,
it would end up hosting all of its dialogs on the <i>Run</i> dialog.
</p>
<p>
This is kind of a problem because the
<i>Run</i> dialog is ephemeral.
After the app is successfully run, the
<i>Run</i> dialog destroys itself.
This in turn causes the installer to crash.
</p>
<p>
Windows works around this by having the <i>Run</i> dialog
play complicated foreground games,
"parking" foreground on another window before launching the
installer, and leaving foreground on the parked window
long enough for the
setup app to call <code>Get&shy;Foreground&shy;Window</code>.
On the other hand, if the attempt to run the thing you typed
fails, the <i>Run</i> dialog takes foreground back from the
window so it can display the error message.
</p>
<p>
Fast-forward twenty years.
All these foreground games are very fragile,
and finally something breaks.
The code that tries to steal back foreground
in order to display the error message stops working.
</p>
<p>
The solution: Remove the crazy code to work around this setup program.
</p>
<p>
The installer in question
probably doesn't work any more for a ton of other reasons,
since it played funny games with <i>Program Manager</i>
(yes, <i>Program Manager</i>) in order to get itself hooked into
your shell.
<i>Program Manager</i> hasn't been the shell for 
over twenty years.
</p>
<p>
The risk here is not that somebody is using that twenty-year-old
program.
The risk is that some program <i>written yesterday</i>
is relying on this old compatibility hack.
</p>
<p>
&sup1; Why is it always setup apps who make this mistake?
My guess is that companies give the job of writing the installer
to the junior developer.</p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (40)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1 parent" id="comment-1227154">
				<div id="div-comment-1227154" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">dave</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160217-00/?p=93042#comment-1227154">
			February 17, 2016 at 7:13 am</a>		</div>

		<p>&gt;My guess is that companies give the job of writing the installer to the junior developer.</p>
<p>This often seems to be the case. The net result is that the customer&#8217;s first (and probably lasting) impression of the quality of your software depends on the abilities of the most junior developer.</p>

		
				</div>
		<ol class="children">
		<li class="comment odd alt depth-2 parent" id="comment-1227191">
				<div id="div-comment-1227191" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Antonio Rodríguez</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160217-00/?p=93042#comment-1227191">
			February 17, 2016 at 7:55 am</a>		</div>

		<p>That was my first impression of certain big-name browser whose icon is something like a Pokéball with four colors. As soon as the first version came out, I installed out of curiosity, and to my surprise I see that it installed itself inside my AppData folder, with full write permissions (maybe as a workaround to allow installation in corporation-managed computers?). This is a big security risk for a well known (and thus, commonly installed) program (executable replacement or patching, DLL spoofing, and perhaps more obscure attacks). What&#8217;s worse, its maker company touted the security of its products against those of Microsoft. Of course, I uninstalled it immediately. This issue was corrected later, but my trust was lost forever.</p>

		
				</div>
		<ol class="children">
		<li class="comment even depth-3 parent" id="comment-1227313">
				<div id="div-comment-1227313" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Tim!</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160217-00/?p=93042#comment-1227313">
			February 17, 2016 at 12:01 pm</a>		</div>

		<p>Pretty sure they did this to enable automatic patching without requesting admin elevation every time.  I wonder how they ended up fixing that; auto patching still works with this program in %programfiles% and it doesn&#8217;t request elevation.</p>

		
				</div>
		<ol class="children">
		<li class="comment odd alt depth-4" id="comment-1227331">
				<div id="div-comment-1227331" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Tim!</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160217-00/?p=93042#comment-1227331">
			February 17, 2016 at 12:28 pm</a>		</div>

		<p>Probably they went this route: <a href="https://msdn.microsoft.com/en-us/library/windows/desktop/aa372388(v=vs.85)" rel="nofollow">https://msdn.microsoft.com/en-us/library/windows/desktop/aa372388(v=vs.85)</a>.aspx  Man I wish I&#8217;d known about this 10 years ago.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-bob-rao even depth-4" id="comment-1227341">
				<div id="div-comment-1227341" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Vulpini' rel='external nofollow' class='url'>Vulpini</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160217-00/?p=93042#comment-1227341">
			February 17, 2016 at 3:11 pm</a>		</div>

		<p>Both major non-Microsoft browser vendors have services installed. Said Pokéball-lookalike additionally has a scheduled task to trigger updates even if the browser is never launched.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt depth-4" id="comment-1227381">
				<div id="div-comment-1227381" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Domonkos</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160217-00/?p=93042#comment-1227381">
			February 18, 2016 at 12:26 am</a>		</div>

		<p>They wrote a pretty sophisticated install/auto update system, and after some time even opensourced the client: <a href="https://github.com/google/omahaThe" rel="nofollow">https://github.com/google/omahaThe</a> architecture is a very interesting read: <a href="https://omaha.googlecode.com/svn/wiki/OmahaOverview.html" rel="nofollow">https://omaha.googlecode.com/svn/wiki/OmahaOverview.html</a> In short, they use a combination of windows services and scheduled tasks. If at first install UAC can elevate the process, than the installer will install a windows service and a scheduled task both under local system account. Those processes will install the actual application you wanted in the first place (mainly Chrome, but can be anything else) and do future updates. If you did not elevate the process, than it will install only in user&#8217;s land and will rely only on a scheduled task that has user permissions (starts when user creates a session {logs in}). They put a lot of work into it, accounting even for some corner cases in XP, which again isn&#8217;t a surprise, if you look at the age of the project: on Github the first commit dates back to 2009, and version 2 of the Omaha client-server protocol goes back to 2007, even before Chrome came out. Check your services, most likely you will have gupdatem and gupdate installed on your machine. If you have DropBox, than look for dbupdatem and dbupdate. Yep, same installer, same framework :) If you look at your scheduled tasks, you will see that it is fairly common practice by now to schedule tasks with elevated privileges to auto update software. I have five of them right now, and I can only hope that the authors did their homework by using integrity checks, certificate validations, and generally adopted security  best practices, otherwise a man in the middle attack would be way too easy. At least Google&#8217;s is opensourced, although they build a custom version of it, so who knows :)</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment byuser comment-author-exchange-development-blog-team even depth-3" id="comment-1227361">
				<div id="div-comment-1227361" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">exchange development blog team</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160217-00/?p=93042#comment-1227361">
			February 17, 2016 at 9:25 pm</a>		</div>

		<p>They have an awful lot of products that do this all-elbows install.  Their recently-retired, very widely-used photo app would crash on startup if it wasn&#8217;t running under the Administrator account. Their reaction to repeated bug reports over this was &#8220;well, yeah, meh&#8221;.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment byuser comment-author-mzzt odd alt depth-2" id="comment-1227211">
				<div id="div-comment-1227211" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/The+MAZZTer' rel='external nofollow' class='url'>The MAZZTer</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160217-00/?p=93042#comment-1227211">
			February 17, 2016 at 8:01 am</a>		</div>

		<p>The worst part is it&#8217;s likely the installer that gets tested. The uninstaller nobody cares about because you don&#8217;t want the user running it in the first place.</p>
<p>Example: <a href="https://www.penny-arcade.com/comic/1999/01/06" rel="nofollow">https://www.penny-arcade.com/comic/1999/01/06</a></p>
<p>Context for example: <a href="https://www.reddit.com/r/todayilearned/comments/2ka43x/til_that_in_the_game_myth_ii_soulblighter_due_to/" rel="nofollow">https://www.reddit.com/r/todayilearned/comments/2ka43x/til_that_in_the_game_myth_ii_soulblighter_due_to/</a></p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment byuser comment-author-iboyd even thread-odd thread-alt depth-1 parent" id="comment-1227172">
				<div id="div-comment-1227172" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/IanBoyd' rel='external nofollow' class='url'>IanBoyd</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160217-00/?p=93042#comment-1227172">
			February 17, 2016 at 7:46 am</a>		</div>

		<p>Speaking of installers. You still have installers offering (or worse: not offer) to add itself to the Quick Launch. The Quick Launch hasn&#8217;t existed since 2007. And then some installers also offer (or worse, not offer) to add itself to the Desktop &#8211; or worse: the Public (i.e. All Users) desktop &#8211; or worse: the Default desktop. And then some installers violate all the rules and pin themselves to my taskbar!</p>
<p>The desktop folders need to go the way of the Quick Launch folder. </p>
<p>I don&#8217;t know how to you can stop an application from pinning itself to the taskbar &#8211; once the installer runs as an administrator it can do anything: even pin itself to the taskbar!</p>

		
				</div>
		<ol class="children">
		<li class="comment odd alt depth-2 parent" id="comment-1227214">
				<div id="div-comment-1227214" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Antonio Rodríguez</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160217-00/?p=93042#comment-1227214">
			February 17, 2016 at 8:03 am</a>		</div>

		<p>Pinning to the task bar is rude on install (one more point in disfavor of the Pokéball-icon browser!) because of its limited real state. But creating a desktop shortcut is a necessary evil. Many users (everybody has an uncle or a great mom) can&#8217;t launch a program if its icon isn&#8217;t in the desktop. Those are the kind of users that are patient (their computers tend to be old and slow anyways) and never use more than one program at a time, so having to close all windows (minimize? what&#8217;s that advanced technique?) isn&#8217;t a problem for them.</p>

		
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-raykoopa even depth-3" id="comment-1227624">
				<div id="div-comment-1227624" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Ray+Koopa' rel='external nofollow' class='url'>Ray Koopa</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160217-00/?p=93042#comment-1227624">
			February 22, 2016 at 1:43 am</a>		</div>

		<p>I really wonder how they pinned the pokeball to the taskbar. IIRC, Raymond once said something like &#8220;it&#8217;s not possible to access the pinned items programmatically because the user is in command to decide what he wants to pin to the taskbar. It would only be possible with some hacky mouse click simulation &#8216;solution'&#8221;. Meaning that Pokeball indeed does some hacky solutions just to cheat themselves into pinned state. Yikes.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment byuser comment-author-mzzt odd alt depth-2 parent" id="comment-1227261">
				<div id="div-comment-1227261" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/The+MAZZTer' rel='external nofollow' class='url'>The MAZZTer</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160217-00/?p=93042#comment-1227261">
			February 17, 2016 at 8:13 am</a>		</div>

		<p>AFAIK Microsoft UX guidelines should still say you should never install icons to the desktop or quick launch; the point is the user can add icons there themselves if they want.</p>
<p>At least installers don&#8217;t seem to pin to taskbar. A few do but not many. I think it is more difficult now, possibly Explorer doesn&#8217;t scan that folder for updates like it did for Quick Launch (at least, when I drop shortcuts into the folder nothing happens), so you&#8217;d have to restart Explorer which would piss off anyone who used your installer if they had File Explorer windows open.</p>
<p>You also have the Win+X menu which is even more fun since any shortcuts you add to that have to have a a very specific &#8220;DON&#8217;T ADD SHORTCUTS TO THIS LOCATION&#8221; or something like that hacked into the shortcut file (the Windows APIs won&#8217;t do it for you). Haven&#8217;t seen anyone add any here either.</p>
<p>Lots of other UX stuff many installers break, such as adding more shortcuts than should be needed to the Start Menu (documentation should be accessible from within the app, uninstallers go in Programs and Features). I was really happy when I saw the Windows 8 start screen bring the Start Menu into line and give users the tools to stop most of that silliness (Visual Studio still insists on repinning a folder to the start screen&#8230; folders don&#8217;t work!&#8230; no matter how many times I unpin it, though).</p>

		
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-bob-rao even depth-3 parent" id="comment-1227342">
				<div id="div-comment-1227342" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Vulpini' rel='external nofollow' class='url'>Vulpini</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160217-00/?p=93042#comment-1227342">
			February 17, 2016 at 3:16 pm</a>		</div>

		<p>&gt; * If your users are very likely to use your program frequently, provide an option during setup to put a program shortcut on the desktop. Most programs won&#8217;t be used frequently enough to warrant offering this option.<br />
&gt; * Present the option unselected by default. Requiring users to select the option is important because once undesired icons are on the desktop, many users are reluctant to remove them. This can lead to unnecessary desktop clutter.</p>
<p><a href="https://msdn.microsoft.com/en-us/library/windows/desktop/dn742493.aspx" rel="nofollow">https://msdn.microsoft.com/en-us/library/windows/desktop/dn742493.aspx</a></p>
<p>Of course, IIRC some of Microsoft&#8217;s own programs don&#8217;t follow these guidelines and select the option by default.</p>

		
				</div>
		<ol class="children">
		<li class="comment odd alt depth-4" id="comment-1227352">
				<div id="div-comment-1227352" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Scarlet Manuka</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160217-00/?p=93042#comment-1227352">
			February 17, 2016 at 8:09 pm</a>		</div>

		<p>That&#8217;s because Microsoft know that the users will definitely be wanting to run *their* programs frequently, of course!</p>
<p>(Actually, as Raymond has said before, MS is a big place and sometimes some of the groups don&#8217;t do the right thing.)</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment byuser comment-author-fredericmagnyf even depth-2 parent" id="comment-1227281">
				<div id="div-comment-1227281" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Medinoc' rel='external nofollow' class='url'>Medinoc</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160217-00/?p=93042#comment-1227281">
			February 17, 2016 at 8:21 am</a>		</div>

		<p>&#8221; The Quick Launch hasn’t existed since 2007.&#8221;</p>
<p>I was about to say &#8220;I don&#8217;t think you should use Windows Vista&#8217;s release date for its end since it existed during the entire lifetime of Windows XP (which only officially died in 2009 or 2014)&#8221;, but then I remember the Quick Launch still existed in Vista! (and IIRC I still use it on my old Vista comp) Windows 7 was the first OS not to support it, due to the new taskbar.</p>
<p>So what you should say is either that the Quick Launch hasn&#8217;t existed since 2012 (End of Vista&#8217;s mainstream support) or that it will cease to exist in 2017 (End of its extended support).</p>

		
				</div>
		<ol class="children">
		<li class="comment odd alt depth-3" id="comment-1227293">
				<div id="div-comment-1227293" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">George</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160217-00/?p=93042#comment-1227293">
			February 17, 2016 at 9:50 am</a>		</div>

		<p>Quick Launch still exists.  There are instructions for using it on Windows 7 that work fine for 8, 8.1 and 10 as well.  You can use your favorite search engine to find out how.  Now, putting things on it should be a choice of the user, which might or might not be facilitated by the installer.  Many use a checkbox to indicate whether a desktop icon, quicklaunch icon, etc. should be created.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1227181">
				<div id="div-comment-1227181" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Wyatt</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160217-00/?p=93042#comment-1227181">
			February 17, 2016 at 7:54 am</a>		</div>

		<p>The most junior developer does not write the installer.  Instead he writes the API, but since he&#8217;s only an intern working there over the summer, it only get&#8217;s partially implemented (at least that&#8217;s my theory having worked with a lot of half-baked API&#8217;s).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-dwalker-wk odd alt thread-odd thread-alt depth-1 parent" id="comment-1227192">
				<div id="div-comment-1227192" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/DWalker' rel='external nofollow' class='url'>DWalker</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160217-00/?p=93042#comment-1227192">
			February 17, 2016 at 7:56 am</a>		</div>

		<p>&#8220;My guess is that companies give the job of writing the installer to the junior developer.&#8221;  </p>
<p>Which is terrible, because you absolutely need to get Setup done right.  Not just for simple things like installing one program and ending up with one folder called &#8220;XYZTechnologies&#8221; and another one called &#8220;XYZ Technologies&#8221;, but for the really important things&#8230;</p>
<p>&#8230; like knowing the difference between where to store app settings and where to store user settings.  And, installers that insist on installing into the root of C, really drive me crazy.  And installers that assume the C drive is where Program Files resides.  And installers that assume there IS a C drive.  After all these years there are still some of those apps.</p>

		
				</div>
		<ol class="children">
		<li class="comment even depth-2" id="comment-1227241">
				<div id="div-comment-1227241" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Antonio Rodríguez</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160217-00/?p=93042#comment-1227241">
			February 17, 2016 at 8:11 am</a>		</div>

		<p>I have worked with developers and companies that insist on installing on the root of the C: drive, and it&#8217;s always because of one of two reasons (or both of them): their program won&#8217;t work from a path with spaces on it (Spanish Department of Treasury, I look at you), or, even worse, their program or one of its components contain hard-coded paths (or rely on them).</p>
<p>Then you try to install it in a computer where the Windows installer has decided that the C: drive letter was to be assigned to an internal reader which contained a card at install time or to a removable magneto-optical drive (both have happened to me), and there is absolutely no way to make that program work (other that reinstalling Windows, that is).</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment byuser comment-author-mzzt odd alt thread-even depth-1 parent" id="comment-1227202">
				<div id="div-comment-1227202" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/The+MAZZTer' rel='external nofollow' class='url'>The MAZZTer</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160217-00/?p=93042#comment-1227202">
			February 17, 2016 at 7:58 am</a>		</div>

		<p>I am guessing things like this are why there are application-specific shims&#8230; no risk of other apps relying on those hacks.</p>
<p>On the top of setup apps&#8230; please don&#8217;t roll your own from scratch, use a framework like NSIS or something. A lot less work and testing needed and you&#8217;ll get better, professional-looking results.</p>

		
				</div>
		<ol class="children">
		<li class="comment even depth-2 parent" id="comment-1227484">
				<div id="div-comment-1227484" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Stefan Kanthak</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160217-00/?p=93042#comment-1227484">
			February 18, 2016 at 1:44 pm</a>		</div>

		<p>Don&#8217;t use NSIS are other crapware which 1. creates executable installers and 2. can&#8217;t be &#8220;decompiled&#8221;.<br />
Create your installers for the package installer/manager provided by the OS: on Windows this is the Microsoft^WWindows installer.</p>

		
				</div>
		<ol class="children">
		<li class="comment odd alt depth-3 parent" id="comment-1227521">
				<div id="div-comment-1227521" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">morlamweb</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160217-00/?p=93042#comment-1227521">
			February 19, 2016 at 6:58 am</a>		</div>

		<p>@Stefan Kanthak: not being able to decompile installer packages is hardly a convincing enough reason to not use third-party installer frameworks, especially when said frameworks can integrate with Programs and Features.</p>
<p>What you&#8217;d want to avoid is using an out-of-date framework; meaning, one that doesn&#8217;t know about 64-bit Windows, or that makes silly assumptions about the C: drive or drive paths, or that doesn&#8217;t use the latest OS look-and-feel.  Or worse, a framework that doesn&#8217;t know about 32-bit Windows.</p>

		
				</div>
		<ol class="children">
		<li class="comment even depth-4 parent" id="comment-1227562">
				<div id="div-comment-1227562" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Stefan Kanthak</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160217-00/?p=93042#comment-1227562">
			February 19, 2016 at 10:55 am</a>		</div>

		<p>Opaque, intransparent installers (like those created by the crapware known as NSIS, InnoSetup and some more) which can&#8217;t be inspected beforehand are EVIL!<br />
Windows .msi/.msp/.msu/.cab/.inf, UNIX SVR .pkg, Linux .rpm/.deb, Androids .apk and many more can be inspected (this is what I meant with &#8220;decompiled&#8221;) beforehand: both their anticipated actions as well as their payload can be seen before the installation.</p>

		
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-wndsks odd alt depth-5" id="comment-1227581">
				<div id="div-comment-1227581" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/skSdnW' rel='external nofollow' class='url'>skSdnW</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160217-00/?p=93042#comment-1227581">
			February 19, 2016 at 5:12 pm</a>		</div>

		<p>NSIS can be unpacked by 7-zip (a beta version also decompiles the instructions) and there is a unpacker for Inno as well&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment byuser comment-author-dwalker-wk even thread-odd thread-alt depth-1" id="comment-1227224">
				<div id="div-comment-1227224" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/DWalker' rel='external nofollow' class='url'>DWalker</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160217-00/?p=93042#comment-1227224">
			February 17, 2016 at 8:06 am</a>		</div>

		<p>For those who like seeing a bunch of small icons somewhere on the taskbar, you can mimic the QuickLaunch bar in Windows 7 by making a new toolbar, turning off Show Text and Show title.  Not sure about Windows 10.  </p>
<p>Installers will have no idea how to put icons into your custom Quick-Launch-Like toolbar, so they should quit asking, as has been mentioned.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-even depth-1" id="comment-1227232">
				<div id="div-comment-1227232" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Tom</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160217-00/?p=93042#comment-1227232">
			February 17, 2016 at 8:08 am</a>		</div>

		<p>When I install MSU patches for Windows or run EXE patches for Office I have to just wait till they are finished because they will steal UI focus and if I press enter key it will go to the installer instead of whatever program I was in a second ago</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-odd thread-alt depth-1" id="comment-1227271">
				<div id="div-comment-1227271" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Brian</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160217-00/?p=93042#comment-1227271">
			February 17, 2016 at 8:20 am</a>		</div>

		<p>In my experience, they only give the setup app to the junior programmer long enough to realize that the setup app (which is the first thing customers see) is impacting customer satisfaction.  Then that bowl of spaghetti gets handed off to a more senior dev who tries to fix things, but probably doesn&#8217;t catch this kind of issue.  I&#8217;ve fixed busticated setup programs for two different employers over the years.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-ramon-sola odd alt thread-even depth-1 parent" id="comment-1227291">
				<div id="div-comment-1227291" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Ram%C3%B3n+Sola' rel='external nofollow' class='url'>Ramón Sola</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160217-00/?p=93042#comment-1227291">
			February 17, 2016 at 9:16 am</a>		</div>

		<p>It could be even worse. It could be an installer which sets the WS_EX_TOPMOST flag on its main window: not a full-screen window, but a pretty big one.</p>

		
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-wndsks even depth-2 parent" id="comment-1227351">
				<div id="div-comment-1227351" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/skSdnW' rel='external nofollow' class='url'>skSdnW</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160217-00/?p=93042#comment-1227351">
			February 17, 2016 at 4:45 pm</a>		</div>

		<p>This was even worse in the 90s when the blue gradient background window was popular and some installers made those full screen and always on top!</p>

		
				</div>
		<ol class="children">
		<li class="comment odd alt depth-3" id="comment-1228442">
				<div id="div-comment-1228442" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Josh B</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160217-00/?p=93042#comment-1228442">
			February 27, 2016 at 1:45 pm</a>		</div>

		<p>The truly ugly part is how there are still drivers and little smatterings of other software still being released with those 16-bit installers that don&#8217;t even understand long file names. In 2016! I can&#8217;t imagine how much technical debt has piled up in the actual software if that&#8217;s the effort they put into the installer.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment even thread-odd thread-alt depth-1 parent" id="comment-1227302">
				<div id="div-comment-1227302" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.solsoftsolutions.com' rel='external nofollow' class='url'>Mark Sowul</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160217-00/?p=93042#comment-1227302">
			February 17, 2016 at 9:56 am</a>		</div>

		<p>You&#8217;d be hard-pressed to find a worse install/uninstall bug than an infamous, ahem&#8211;broadly&#8211;used, network manufacturer, whose bluetooth uninstaller (which is triggered when upgrading) recursively deleted everything from the drive on which it was installed.  Imagine my surprise when, while updating my bluetooth drivers, everything started disappearing from my desktop, programs stopped working, etc.</p>

		
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-hankhein odd alt depth-2" id="comment-1227431">
				<div id="div-comment-1227431" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Henri+Hein' rel='external nofollow' class='url'>Henri Hein</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160217-00/?p=93042#comment-1227431">
			February 18, 2016 at 11:21 am</a>		</div>

		<p>Yikes!  I think you get the &#8220;worst uninstaller encountered&#8221; badge.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment byuser comment-author-cheong even thread-even depth-1" id="comment-1227353">
				<div id="div-comment-1227353" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/cheong00' rel='external nofollow' class='url'>cheong00</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160217-00/?p=93042#comment-1227353">
			February 17, 2016 at 8:15 pm</a>		</div>

		<p>I wonder what would happen if all those CreateWindowEx() related macro passes NULL to the hWndParent if it matches the hWnd of Desktop.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1227371">
				<div id="div-comment-1227371" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">The_Assimilator</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160217-00/?p=93042#comment-1227371">
			February 17, 2016 at 11:50 pm</a>		</div>

		<p>&#8220;My guess is that companies give the job of writing the installer to the junior developer.&#8221;</p>
<p>I guess that explains Microsoft&#8217;s own SQL Server setup wizard.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-hankhein even thread-even depth-1 parent" id="comment-1227441">
				<div id="div-comment-1227441" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Henri+Hein' rel='external nofollow' class='url'>Henri Hein</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160217-00/?p=93042#comment-1227441">
			February 18, 2016 at 11:44 am</a>		</div>

		<p>&gt; My guess is that companies give the job of writing the installer to the junior developer.</p>
<p>That is indeed a thing.  It&#8217;s not so much companies that are doing this, it&#8217;s the developer teams themselves.  Senior developers don&#8217;t want to work on the installer, and junior developers often don&#8217;t get the choice.  Even if a senior developer is doing the installer, they will do the minimum necessary to get done with whatever the current requirement is and move on.  Installers suffer from the additional challenge that they are slow and tedious to test manually, and don&#8217;t lend themselves well to unit-testing.  So nobody wants to work on them and nobody wants to test them.</p>
<p>Microsoft could help out here by providing an installer framework that is easy and pleasant to work with, or, at least, a little less psychosis-inducing than Cthulhu.</p>

		
				</div>
		<ol class="children">
		<li class="comment odd alt depth-2" id="comment-1227502">
				<div id="div-comment-1227502" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">DaveL</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160217-00/?p=93042#comment-1227502">
			February 19, 2016 at 1:57 am</a>		</div>

		<p>&gt;Microsoft could help out here by providing an installer framework that is easy and pleasant to work with</p>
<p>I couldn&#8217;t agree more. All setup tools are horrible. It&#8217;s almost a punishment to get saddled with doing the installer. As problematic as it could be, the VS Installer was the easiest to work with &#8211; and MS have done themselves no favours by doing their best to ditch it rather than providing a well documented easy to use replacement.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment even thread-odd thread-alt depth-1" id="comment-1227482">
				<div id="div-comment-1227482" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Stefan Kanthak</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160217-00/?p=93042#comment-1227482">
			February 18, 2016 at 1:31 pm</a>		</div>

		<p>&gt; My guess is that companies give the job of writing the installer to the junior developer.</p>
<p>0. That&#8217;s one of the biggest mistake any company can do: the installer is the first thing a customer/user sees, and they typically need to run with administrative privileges, so every (beginner&#8217;s) error can do REAL harm.<br />
1. Executable installers are broken as designed, almost all of them are vulnerable: they create unsafe TEMP directories, load DLLs from their application directory, &#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-even depth-1" id="comment-1227561">
				<div id="div-comment-1227561" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">PhilW</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160217-00/?p=93042#comment-1227561">
			February 19, 2016 at 9:23 am</a>		</div>

		<p>I&#8217;m with Henri Hein on this. It may well be junior developers that get the job of writing the install, but if anyone thinks they have the autonomy to do it independently (and potentially correctly) then in my experience they are incorrect. In reality the development teams don&#8217;t want to write the install and are generally clueless about best practices, and so give ridiculous requirements to that junior install developer (steal the foreground etc) with the results you see too often.  I&#8217;ve heard more than one dev manager maintain that the install is &#8220;just copying files&#8221; and consequently gets fewer resources, including that junior developer in a situation that typically has the dev team saying &#8220;we&#8217;re finished &#8211; we can&#8217;t ship because we&#8217;re waiting for the install&#8221;.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-garretts even thread-odd thread-alt depth-1 parent" id="comment-1227781">
				<div id="div-comment-1227781" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Garrett+Serack%2C+MSFT' rel='external nofollow' class='url'>Garrett Serack, MSFT</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160217-00/?p=93042#comment-1227781">
			February 23, 2016 at 10:38 am</a>		</div>

		<p>I bet the reason they did that is so they could try to force the UAC prompt into the foreground.</p>

		
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-oldnewthing bypostauthor odd alt depth-2" id="comment-1228281">
				<div id="div-comment-1228281" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Raymond+Chen+-+MSFT' rel='external nofollow' class='url'>Raymond Chen - MSFT</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160217-00/?p=93042#comment-1228281">
			February 26, 2016 at 9:55 am</a>		</div>

		<p>UAC didn&#8217;t exist twenty years ago.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

