<html>
<head>
<title>As random as I wanna be: Why cmd.exe's %RANDOM% isn't so random</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>As random as I wanna be: Why cmd.exe&#8217;s %RANDOM% isn&#8217;t so random</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>June 17, 2010 / year-entry #178</td></tr>
<tr><td><b>Tags:</b></td><td>tipssupport</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20100617-00/?p=13673</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>52</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">Somebody on my team reported that a particular script in our project's build process would fail with bizarre output maybe once in fifty tries. This script was run from a makefile, and the result was a failed build. Rerunning make fixed the problem, but that's not much consolation when the build lab encounters it approximately...</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>
Somebody on my team reported that
a particular script in our project's build process
would fail with bizarre output maybe
once in fifty tries.
This script was run from a <code>makefile</code>,
and the result was a failed build.
Rerunning <i>make</i> fixed the problem,
but that's not much consolation when the build lab encounters it
approximately every other day.
The strange thing about the bizarre output was that it appeared
to contain a mix of two different runs.
How could the output of two runs be mixed into one output file?
</p>
<p>
The script was a batch file, and it generated its output in
a few different steps,
storing the intermediate output in randomly-named temporary files,
taking advantage of the
<a HREF="http://technet.microsoft.com/en-us/library/bb490954.aspx">
<code>%RANDOM%</code></a>
pseudovariable to generate the name of those temporary files.
(They were <code>%TEMP%\%RANDOM%.tmp1</code>,
<code>%TEMP%\%RANDOM%.tmp2</code>, you get the idea.)
</p>
<p>
Cutting to the chase: The reason for the mixed output was that
the <code>%RANDOM%</code> pseudo-variable wasn't random enough.
If two copies of the script are running at the same time,
they will get the <i>same</i> "random" number and end up
mixing their output together.
(And running multiple builds at the same time is something the
people in the build lab are wont to do.)
</p>
<p>
It turns out that the Windows command processor uses
<a HREF="http://taeb-nethack.blogspot.com/2009/03/predicting-and-controlling-nethacks.html">
the standard na&iuml;ve algorithm for seeding the random number generator</a>:
</p>
<pre>
   srand((unsigned)time(NULL));
</pre>
<p>
Since <code>time</code> has a resolution of one second,
two command prompts launched in rapid succession have a good
chance of seeding the random number generator with the same
timestamp, which means that they will have the same random number
stream.
</p>
<pre>
C&gt; copy con notsorandom.cmd
@pause
@echo %RANDOM%
^Z
        1 file(s) copied.

C&gt; for /l %i in (1,1,3000) do @cmd /c notsorandom.cmd
// hold down the space bar
Press any key to continue . . .
14153
Press any key to continue . . .
14153
Press any key to continue . . .
14153
Press any key to continue . . .
14153
Press any key to continue . . .
14156
Press any key to continue . . .
14156
Press any key to continue . . .
14156
Press any key to continue . . .
14156
Press any key to continue . . .
14156
Press any key to continue . . .
14160
Press any key to continue . . .
14160
Press any key to continue . . .
14160
</pre>
<p>
Notice that the <code>%RANDOM%</code> pseudovariable generates
the same "random" number until the clock ticks over another second.
(Notice also that the "random" numbers don't look all that random.)
</p>
<p>
We fixed the script so it generated its temporary file in the
project's output directory rather than in the (shared) <code>%TEMP%</code>
directory.
That way, even if two copies of the project are building at the same
time, they will generate their temporary files in different directories
and not step on each other.
</p>
<p>
<b>Exercise</b>: There is much subtlety in that <code>for</code>
command.
Describe alternative formulations of the <code>for</code> command,
both those that work and those that don't.
To get you started: Explain the output of this variation:
</p>
<pre>
<code>for /l %i in (1,1,300) do @(pause&amp;echo %RANDOM%)</code>
</pre>
<p>
<b>Obligatory batch file bashing</b>:
Every time I write an entry about batch files,
you can count on people complaining about how insane
the batch programming language is.
The batch language wasn't designed; it evolved.
(And according to commenter Daev,
<a HREF="http://blogs.msdn.com/b/oldnewthing/archive/2008/08/06/8835317.aspx#8841279">
it followed a form of parallel evolution</a> from what most people
are familiar with.)
I doubt anybody actually enjoy writing batch files.
At best you tolerate it.
I'm just trying to make it slightly more tolerable.
I bet these are the same people who complain to their tax preparer
about the complexity of tax law.</p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (52)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-840573">
				<div id="div-comment-840573" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Marquess</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100617-00/?p=13673#comment-840573">
			June 17, 2010 at 7:05 am</a>		</div>

		<p>Everytime a batch file is launched, it should display a message (in red) to use powershell already.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-840603">
				<div id="div-comment-840603" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">akamal</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100617-00/?p=13673#comment-840603">
			June 17, 2010 at 7:18 am</a>		</div>

		<p>But why does this seem to work without generating the same number twice?</p>
<p>echo %random% &nbsp;&amp; echo %random% &amp; echo %random% &amp; echo %random% &amp; echo %random% &amp; echo %random% &amp; echo %random% &amp; echo %random%</p>
<p>&amp; echo %random% &amp; echo %random% &amp; echo %random% &amp; echo %random% &amp; echo %random% &amp; echo %random% &amp; echo %random%</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-840613">
				<div id="div-comment-840613" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">akamal</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100617-00/?p=13673#comment-840613">
			June 17, 2010 at 7:20 am</a>		</div>

		<p>Ah, I think Johannes explanation of</p>
<p>for /l %i in (1,1,300) do @(pause&amp;echo %RANDOM%)</p>
<p>has already answered my question!</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-840633">
				<div id="div-comment-840633" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Thomas L&#233;o Horn</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100617-00/?p=13673#comment-840633">
			June 17, 2010 at 7:30 am</a>		</div>

		<p>&nbsp;for /l %i in (1,1,300) do @(pause&amp;echo %RANDOM%)</p>
<p>will display the same number every time as %RANDOM% gets evaluated before for.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-840663">
				<div id="div-comment-840663" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Peter da Silva</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100617-00/?p=13673#comment-840663">
			June 17, 2010 at 7:58 am</a>		</div>

		<p>Microsoft should just be including Interix as a standard part of all versions of Windows. It&#39;s not that big, it&#39;s practically a one-click install, and bash is far more powerful than &quot;powershell&quot;.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-840673">
				<div id="div-comment-840673" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Jeff</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100617-00/?p=13673#comment-840673">
			June 17, 2010 at 8:03 am</a>		</div>

		<p>Couldn&#39;t you use microseconds for the seed instead of seconds?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-840683">
				<div id="div-comment-840683" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Carmen</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100617-00/?p=13673#comment-840683">
			June 17, 2010 at 8:13 am</a>		</div>

		<p>Peter da Silva: I have to believe, with that statement, you are saying you have not used PowerShell much for serious batching requirements. &nbsp;The idea that going back to a *nix style stream batching system is more powerful than the object-model that PowerShell uses is fairly outrageous to anyone who has done serious work with both. &nbsp;You can PREFER the Interix environment because it is familiar and you can get YOUR work done faster, but to say it is more powerful is going too far.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-840693">
				<div id="div-comment-840693" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">laonianren</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100617-00/?p=13673#comment-840693">
			June 17, 2010 at 8:19 am</a>		</div>

		<p>With delayed environment variable expansion enabled (cmd /V:ON) you can write:</p>
<p>for /l %i in (1,1,300) do @(pause&amp;echo !RANDOM!)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-840703">
				<div id="div-comment-840703" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Doug</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100617-00/?p=13673#comment-840703">
			June 17, 2010 at 8:25 am</a>		</div>

		<p>If you want %RANDOM% to be re-evaluated each time the loop iterates, you&#39;d need to enable delayed variable expansion. &nbsp;There seems to be a lot of ways to do so, from &quot;setlocal ENABLEDELAYEDEXPANSION&quot;, to launching cmd.exe with the /v flag.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-840743">
				<div id="div-comment-840743" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Alexandre Grigoriev</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100617-00/?p=13673#comment-840743">
			June 17, 2010 at 8:51 am</a>		</div>

		<p>Where is an obligatory XKCD reference?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-840753">
				<div id="div-comment-840753" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://adamrosenfield.com' rel='external nofollow' class='url'>Adam Rosenfield</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100617-00/?p=13673#comment-840753">
			June 17, 2010 at 8:54 am</a>		</div>

		<p>The Cygwin bash pseudovar $RANDOM does not seem to have this problem:</p>
<p>$ for (( i = 0; i &lt; 5; i++ )); do bash -c &#39;echo $RANDOM&#39;; done</p>
<p>17548</p>
<p>22540</p>
<p>2492</p>
<p>15387</p>
<p>30852</p>
<p>Documentation here: <a rel="nofollow" target="_new" href="http://www.gnu.org/software/bash/manual/bashref.html#Bash-Variables" rel="nofollow">http://www.gnu.org/&#8230;/bashref.html</a></p>
<p>Looking at the source (bash-4.1/variables.c), it seeds the PRNG with the XOR of seconds, microseconds, and PID (the former two coming from gettimeofday()).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-840763">
				<div id="div-comment-840763" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">James Gayhart</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100617-00/?p=13673#comment-840763">
			June 17, 2010 at 9:15 am</a>		</div>

		<p>Oblig XKCD Ref: <a rel="nofollow" target="_new" href="http://xkcd.com/221/" rel="nofollow">http://xkcd.com/221/</a> (For Alexandre) :)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-840773">
				<div id="div-comment-840773" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">blah</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100617-00/?p=13673#comment-840773">
			June 17, 2010 at 9:22 am</a>		</div>

		<p>The tax preparer is a valid target of frustration. His industry exists only because the US tax code is on par with Cisco source code. You scratch my back, I scratch yours.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-840783">
				<div id="div-comment-840783" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Robert Konigsberg</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100617-00/?p=13673#comment-840783">
			June 17, 2010 at 9:36 am</a>		</div>

		<p>Can you get a hold of the current process id in batch? If so that should be sufficiently distinct.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-840793">
				<div id="div-comment-840793" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">James</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100617-00/?p=13673#comment-840793">
			June 17, 2010 at 9:55 am</a>		</div>

		<p>&gt; &nbsp;are wont to do</p>
<p>did you mean &quot;won&#39;t do&quot; or &quot;want do do&quot;?</p>
<div class="post">[<i>I really mean the word &quot;wont&quot;. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-840803">
				<div id="div-comment-840803" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Michael Entin</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100617-00/?p=13673#comment-840803">
			June 17, 2010 at 10:36 am</a>		</div>

		<p>.NET Random class has similar problem, it uses &nbsp;GetTickCount() to seed random values &#8211; slightly better than time(), but not much. One would still get into trouble if he creates many Random objects at about the same time.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-840813">
				<div id="div-comment-840813" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">keithmo</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100617-00/?p=13673#comment-840813">
			June 17, 2010 at 10:44 am</a>		</div>

		<p>@aaawww if you use a random directory for temp files, you can close the &quot;if exist/type&quot; race:</p>
<p>set _retry=100</p>
<p>:Loop</p>
<p>set _tmpdir=%tmp%%random%</p>
<p>mkdir &quot;%_tmpdir%&quot; &gt;nul 2&gt;&amp;1</p>
<p>if not errorlevel 1 goto :GotIt</p>
<p>set /A _retry -= 1</p>
<p>if %_retry% GTR 0 goto :Loop</p>
<p>set _tmpdir=</p>
<p>echo FAIL</p>
<p>goto :EOF</p>
<p>:GotIt</p>
<p>echo _tmpdir = &quot;%_tmpdir%&quot;</p>
<p>goto :EOF</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-840823">
				<div id="div-comment-840823" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">James Schend</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100617-00/?p=13673#comment-840823">
			June 17, 2010 at 10:58 am</a>		</div>

		<p>Other James: It&#39;s usually a good idea to consult a dictionary before criticizing the spelling of smart people. :) Your post reminded me of the Maddox article where he complains about people &quot;correcting&quot; his spelling of &quot;inane&quot; (&quot;it&#39;s spelled insane!&quot;)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-840833">
				<div id="div-comment-840833" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">James Schend</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100617-00/?p=13673#comment-840833">
			June 17, 2010 at 11:12 am</a>		</div>

		<p>Michael Entin: Yes, but the documentation for it: <a rel="nofollow" target="_new" href="http://msdn.microsoft.com/en-us/library/system.random.aspx" rel="nofollow">msdn.microsoft.com/&#8230;/system.random.aspx</a> is very clear on that point, so (hopefully) it should be a source of confusion. It flat-out says you should either use a single Random object, or provide your own seed to avoid this problem. Plus it gives a code sample of the wrong way of using it.</p>
<p>Of course that doesn&#39;t stop people who don&#39;t read the documentation but&#8230; what can you do.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-840843">
				<div id="div-comment-840843" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">mikeb</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100617-00/?p=13673#comment-840843">
			June 17, 2010 at 11:25 am</a>		</div>

		<p>@James (not Schend): <a rel="nofollow" target="_new" href="http://www.merriam-webster.com/netdict/wont" rel="nofollow">http://www.merriam-webster.com/&#8230;/wont</a></p>
<p>Obligatory (well, maybe not) snarks:</p>
<p>I&#39;ll tell you what &#8211; batch file bashing is much more fun than bash file batching. And it won&#39;t do to complain about what complainers are wont to do. It may actually be insane (but not inane) to do so.</p>
<p>OK, I&#39;m done. Hopefully for a long time.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-840853">
				<div id="div-comment-840853" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Tom</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100617-00/?p=13673#comment-840853">
			June 17, 2010 at 11:36 am</a>		</div>

		<p>Hey, don&#39;t be hating on the batch language again, Raymond. &nbsp;It&#39;s a great language that has well withstood the test of time. &nbsp;It&#39;s one of the least changed and longest lasting things in the history of PCs. &nbsp;Sure it&#39;s gained some nice new capabilities. &nbsp;But I can still write batch files today that are just like ones I wrote 20 years ago, just as quick and easy to create, and just as useful. &nbsp;How many other things in computing can you say that about? &nbsp;It&#39;s not like other languages that have been replaced by vastly better alternatives, such as BASIC, QBASIC, VB, C, C++, and others.</p>
<p>Long live batch files! &nbsp;Reliably getting the job done without a fuss for decades.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-840863">
				<div id="div-comment-840863" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.roseharp.com' rel='external nofollow' class='url'>Timothy Byrd</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100617-00/?p=13673#comment-840863">
			June 17, 2010 at 12:17 pm</a>		</div>

		<p>&quot;First you install PowerShell.&quot;</p>
<p>Now you have two problems.</p>
<p>I&#39;ve been using 4DOS/4NT/TakeCommand for years. I&#39;d love to wean myself off of them and go to PowerShell. But every time I try to do something useful in PS, it&#39;s like smacking into a wall. Hmmm&#8230; Do I spend two hours figuring out how to do this in PowerShell or do I spend 2 minutes getting it done in a batch script? (Typically this revolves around copying files, and the JPSoft products let me specify date ranges among other things.)</p>
<p>And my solution to the random number issue would be to use the %_pid variable as part of the filename&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-840873">
				<div id="div-comment-840873" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Gabe</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100617-00/?p=13673#comment-840873">
			June 17, 2010 at 12:22 pm</a>		</div>

		<p>The reason Powershell is not set to execute scripts by default (and incidentally why Interix isn&#39;t installed by default) is because it&#39;s just a giant attack surface. For 99% of users, the only Powershell (or bash) script they would ever execute is one that gets disguised as some other kind of file in an email attachment. By making a small, affirmative step to make it easy to execute scripts, the 1% of users who want them can easily get them, while protecting the other 99% of users for whom its existence is only harmful.</p>
<p>And I agree, that an object-based shell is orders of magnitude more powerfull than a simple text-stream-based shell. This should be obvious the first time you do &quot;ps -aux | grep httpd&quot; and don&#39;t get any column headers but do get a line for the grep command!</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-840883">
				<div id="div-comment-840883" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Alexandre Grigoriev</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100617-00/?p=13673#comment-840883">
			June 17, 2010 at 12:32 pm</a>		</div>

		<p>@Gabe:</p>
<p>Let&#39;s proceed with bashing the &quot;hide extensions&quot; thing.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-840903">
				<div id="div-comment-840903" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">JamesNT (neither Schend nor the other James)</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100617-00/?p=13673#comment-840903">
			June 17, 2010 at 1:00 pm</a>		</div>

		<p>Thanks, Raymond, this actually solves a problem for me. &nbsp;You are quite correct in that batch programming isn&#39;t fun, but it is a useful tool and gets things done. &nbsp;Evolution is a messy thing.</p>
<p>JamesNT</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-840583">
				<div id="div-comment-840583" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Johannes</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100617-00/?p=13673#comment-840583">
			June 17, 2010 at 7:13 am</a>		</div>

		<p>Marquess: Except that you can&#39;t use PowerShell on older Windows versions. And it only comes with the very latest version of Windows preinstalled. And it&#39;s by default set to *not* execute scripts. Face it: Batch files are one of the most reliable ways to automate stuff on nearly every Windows machine – provided the person writing them is proficient enough to avoid common pitfalls and errors.</p>
<p>Raymond: I enjoy writing them. If you see it as an esolang it can be quite fun to solve problems in it, actually. And as far as those go it&#39;s one of the easier ones to write programs in.</p>
<p>As for the command</p>
<p> &nbsp;for /l %i in (1,1,300) do @(pause&amp;echo %RANDOM%)</p>
<p>that&#39;s plain obvious: You&#39;re using the same PRNG instance every time and with the LCG that cmd (or rather the C runtime) uses the number last generated is the next seed.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-840593">
				<div id="div-comment-840593" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Uli Gerhardt</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100617-00/?p=13673#comment-840593">
			June 17, 2010 at 7:14 am</a>		</div>

		<p>&gt; Everytime a batch file is launched, it should display a message (in red) to use powershell already.</p>
<p>Yes. On *your* screen.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-840653">
				<div id="div-comment-840653" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Teo</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100617-00/?p=13673#comment-840653">
			June 17, 2010 at 7:47 am</a>		</div>

		<p>Heh, just *installing* Powershell is an epic quest. But batch files are just there, ready for use. Same for jscript+wsh, which can use COM objects so they have access to XML/SQL/http/etc. And using HTAs you have quite nice UI capabilities. Which CAN be groked by a mere mortal in contrast to WPF madness.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-840913">
				<div id="div-comment-840913" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Marquess</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100617-00/?p=13673#comment-840913">
			June 17, 2010 at 2:48 pm</a>		</div>

		<p>“.NET Random class has similar problem, it uses &nbsp;GetTickCount() to seed random values &#8211; slightly better than time(), but not much. One would still get into trouble if he creates many Random objects at about the same time.”</p>
<p>.NET has Guid.NewGuid(). That should help.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-840713">
				<div id="div-comment-840713" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">aaawww</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100617-00/?p=13673#comment-840713">
			June 17, 2010 at 8:29 am</a>		</div>

		<p><a rel="nofollow" target="_new" href="http://unserializableone.blogspot.com/2009/04/create-unique-temp-filename-with-batch.html" rel="nofollow">unserializableone.blogspot.com/&#8230;/create-unique-temp-filename-with-batch.html</a></p>
<p>call :GETTEMPNAME</p>
<p>echo &quot;Temp file name is %TMPFILE%&quot;</p>
<p>goto :EOF</p>
<p>:GETTEMPNAME</p>
<p>set TMPFILE=%TMP%mytempfile-%RANDOM%-%TIME:~6,5%.tmp</p>
<p>if exist &quot;%TMPFILE%&quot; GOTO :GETTEMPNAME </p>
<p>type NUL &gt; &nbsp;%TMPFILE%</p>
<p>:EOF</p>
<p>if you *really* want that unique temporary name (yes collision may happen if they start within the same centisecond, the type may not prevent them)</p>
<p>I wonder if there is a way to create create a mutex around the if exist and the type commands</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-840953">
				<div id="div-comment-840953" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">siddi</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100617-00/?p=13673#comment-840953">
			June 17, 2010 at 10:15 pm</a>		</div>

		<p>Still, you could make it work in the boundaries of bat world. Use setlocal to enable delayed expansion so that RANDOM gets evaluated at the execution time. Try this:</p>
<p>setlocal enabledelayedexpansion</p>
<p>for /l %%i in (1,1,5) do @(pause&amp;echo !RANDOM!)</p>
<p>endlocal</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-840963">
				<div id="div-comment-840963" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Jonathan</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100617-00/?p=13673#comment-840963">
			June 17, 2010 at 10:53 pm</a>		</div>

		<p>Of course, the cardinal sin was placing temp files outside of the project&#39;s output directory ($(O)). I&#39;m glad it was fixed correctly, instead of hacking pseudo-unique temp filenames.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-840983">
				<div id="div-comment-840983" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Keep on Truckin'</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100617-00/?p=13673#comment-840983">
			June 18, 2010 at 12:59 am</a>		</div>

		<p>Windows script host with WMI is very powerful.</p>
<p>It takes effort and ablilty to do a good job as this technology is not trivial.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-840993">
				<div id="div-comment-840993" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Mc</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100617-00/?p=13673#comment-840993">
			June 18, 2010 at 1:50 am</a>		</div>

		<p>Of course random means, random. &nbsp; &nbsp;The sequence 5,5,5,5 &nbsp; could come out of the random number generator, &nbsp;not likely perhaps but it&#39;s still a perfectly valid random sequence. &nbsp; So even if the seed etc. was being handled correctly it doesn&#39;t guarantee that they still wouldn&#39;t have got &quot;unlucky&quot; sometimes.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-840943">
				<div id="div-comment-840943" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">fail</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100617-00/?p=13673#comment-840943">
			June 17, 2010 at 7:15 pm</a>		</div>

		<p>&gt; 1. The reason Powershell is not set to execute scripts by default is because it&#39;s just a giant attack surface</p>
<p>&gt; 2. You can&#39;t use PowerShell on older Windows versions</p>
<p>Two contradicting arguments against using powershell.</p>
<p>If powershell is &quot;a giant attack surface&quot; then batch should definitely have been disabled by default, because then batch is a *more than* giant attack surface.</p>
<p>If the attack surface is giant because most people have powershell installed *), then there&#39;s no reason to use batch for gaining any significant more compatibility.</p>
<p>*) larger install base makes more malware &#8211; according to windoze zealots which usually complain there&#39;s more malware for windows because windoze has a larger install base (not because windows has tons of security vulnerabilities).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-841003">
				<div id="div-comment-841003" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Cheong</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100617-00/?p=13673#comment-841003">
			June 18, 2010 at 2:21 am</a>		</div>

		<p>@Mc: Theoretically correct, but most random number generators that claims to be &quot;statistically random&quot; or &quot;true random&quot; actually does make an effort to skew away from giving repeatitive / consecutive sequence numbers (because of &quot;Kolmogorov randomness&quot; defination).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-841013">
				<div id="div-comment-841013" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">jsc42</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100617-00/?p=13673#comment-841013">
			June 18, 2010 at 2:28 am</a>		</div>

		<p>To get %random% to expand every time through the loop without setting delayed expansion in your environment, quote the % and use back quotes in an additional nested loop. E.g.</p>
<p>for /l %i in (1,1,300) do for /f &quot;usebackq&quot; %j in (<code>echo ^%random^%</code>) do echo %j</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-841033">
				<div id="div-comment-841033" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Judago</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100617-00/?p=13673#comment-841033">
			June 18, 2010 at 5:42 am</a>		</div>

		<p>Ok I think my comment didn&#39;t go through(scripts disabled).</p>
<p>I think the subtly is &quot;cmd /c&quot; vs &quot;call&quot;. &quot;cmd /c&quot; starts a new process that presumably doesn&#39;t know about the last, while &quot;call&quot; causes inheritance.</p>
<p>My guess is that cmd tries to be more random than the current second if called more than once, but the first call is simply the second. Each new process doesn&#39;t know about the last so they all settle for the current second.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-841053">
				<div id="div-comment-841053" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">John</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100617-00/?p=13673#comment-841053">
			June 18, 2010 at 6:03 am</a>		</div>

		<p>Haha, I suppose I&#39;m maybe one of the few remaining people that actually enjoy writing batch files. &nbsp;The rest hang out at alt.msdos.batch.nt. &nbsp;So much so that I created the Batch Library in Progress (blip) library on Sourceforge.</p>
<p>Just goes to show that there are strange people out there.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-841063">
				<div id="div-comment-841063" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Judago</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100617-00/?p=13673#comment-841063">
			June 18, 2010 at 6:22 am</a>		</div>

		<p>@john</p>
<p>I think you need to add a delimiter:</p>
<p>which &quot;findstr=a&quot;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-841073">
				<div id="div-comment-841073" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">ERock</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100617-00/?p=13673#comment-841073">
			June 18, 2010 at 7:20 am</a>		</div>

		<p>Pretty unexpectedly loud bashing of Powershell. (unintended pun)</p>
<p>I can no longer target Windows 3.1 with Visual Studio. Does that mean I shouldn&#39;t be writing applications? That Powershell does not work with versions of Windows that are at or near EOL is a silly complaint. Anything you wanted to use Powershell for on older environments you probably already did with a combination of batch files and custom executables.</p>
<p>Add to that Powershell DOES run scripts by default: signed ones from a trusted source. It does not run unsigned scripts by default. The big issue with batch files in a production environment is that the sysadmins have full access to the batch file and can change things. Maybe that doesn&#39;t matter in your environment, but I&#39;m happy that there is separation of duty between the developers that have the keys to sign cmdlets, the sysadmins that have rights to keep the lights on, and the security folks that maintain group policies around those registry keys.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-841113">
				<div id="div-comment-841113" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">doug.kavendek</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100617-00/?p=13673#comment-841113">
			June 18, 2010 at 7:48 am</a>		</div>

		<p>@Judago: &quot;but the first call is simply the second.&quot; &nbsp;&#8212; hah, got me hung up for a moment trying to parse that&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-841123">
				<div id="div-comment-841123" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">David Walker</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100617-00/?p=13673#comment-841123">
			June 18, 2010 at 8:46 am</a>		</div>

		<p>@ERock: Windows 3.1? &nbsp;Huh? &nbsp;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-841223">
				<div id="div-comment-841223" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Gabe</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100617-00/?p=13673#comment-841223">
			June 18, 2010 at 2:12 pm</a>		</div>

		<p>Peter da Silva: If you think bash is a dataflow engine and Powershell isn&#39;t, you obviously haven&#39;t use Powershell. To call bash a &quot;dataflow engine&quot; is being quite generous with the term. At best it works if all of your data is in a trivial newline-delimited text format, which means you can&#39;t even deal with CSV files because it they can have commas (the field delimiter) and newlines (the record delimiter) inside of fields. Useful manipulation of complex formats like httpd.conf files or email folders is out of the question.</p>
<p>So, say you want to do something simple, like getting the stats on all httpd processes. Getting even a simple &quot;ps -aux | grep httpd&quot; to do what you expect takes several iterations before you end up with something like &quot;ps -aux | head -1; ps -aux | grep httpd | grep -v grep&quot;. In Powershell it would just be &quot;get-process -name httpd&quot; (or using the &quot;dataflow&quot; aspect, &quot;get-process | where {$_.Name -eq &#39;httpd&#39;}&quot;.</p>
<p>Now say you want to do something slightly harder, like finding out how much CPU time the oldest httpd process has used. In Powershell it&#39;s at least as simple as &quot;(get-process -n httpd | sort starttime)[0] | select cpu&quot;. I&#39;d love to see how you&#39;d write a &quot;dataflow&quot; version of that task in UNIX.</p>
<p>As for the security aspect, one problem is the users. By default PS1 files open in Notepad, so you don&#39;t have to worry about users double-clicking email attachments and inadvertantly running malicious code. However, that wouldn&#39;t stop attackers. They would just send emails like &quot;To see this famous celebrity sex tape, save this attachment to your desktop, then drag it to powershell.exe&quot; along with the attachment. So why isn&#39;t this a problem with BAT files and EXEs? It is &#8212; it&#39;s nearly impossible to email a file with a .bat or .exe extension even among non-Windows users. If they gave Powershell unrestricted script execution by default, it would just be another type of file you couldn&#39;t email.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-841193">
				<div id="div-comment-841193" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Peter da Silva</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100617-00/?p=13673#comment-841193">
			June 18, 2010 at 11:21 am</a>		</div>

		<p>Two responses:</p>
<p>1. I don&#39;t use Powershell for the same reason that I don&#39;t write scripts in Basic, or install a DCL emulator.</p>
<p>The UNIX shell is a dataflow engine. The UNIX pipe-filter dataflow model is incredibly powerful, in a way that a conventional Algol-style scripting language can&#39;t match&#8230; whether it&#39;s object-oriented or not. The typical example of &quot;cool powershell scripts&quot; that I&#39;ve seen touted here are typically 30-40 lines of dense code to replicate something that&#39;s a one-liner as a pipeline.</p>
<p>2. The idea that you deal with the problem of &quot;active content&quot; in email by not installing scripting engines is bizarre.</p>
<p>First of all, you can embed an executable application in a printable text string that&#39;ll pass through email or web undamaged, so someone can feed you a poison pill that&#39;s native code. What are you going to do, disable EXE files?</p>
<p>Second, you deal with &quot;active content&quot; in email by not implementing a mechanism to run &quot;active contentr&quot; directly from email in the first place. Don&#39;t treat *any* untrusted content as trusted. Don&#39;t launch applications from the mail reader or web browser to display files because you &quot;trust&quot; their MIME-type or extension. Don&#39;t use the same set of applications you normally run from the desktop (windows explorer) as handlers and helpers for applications that are supposed to be dealing with untrusted content.</p>
<p>The whole design of the Microsoft HTML control and the apps and applets that wrap around it boggled my mind when I first saw it in 1997. I responded by banning Outlook and IE at our office. That made me a hero when the flood of email viruses and malware taking advantage of what they originally called &quot;Active Desktop&quot; showed up in the next few years.</p>
<p>Instead of hiding useful tools, ship them. If there&#39;s design flaws in other applications that might make it a little easier to exploit the system if you install them&#8230; fix those&#8230; and fix them properly. Sheesh.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-841283">
				<div id="div-comment-841283" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Judago</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100617-00/?p=13673#comment-841283">
			June 18, 2010 at 8:16 pm</a>		</div>

		<p>@doug.kavendek</p>
<p>second was unexpected at this time.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-madq42 even thread-even depth-1" id="comment-841463">
				<div id="div-comment-841463" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/MadQ1' rel='external nofollow' class='url'>MadQ1</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100617-00/?p=13673#comment-841463">
			June 21, 2010 at 1:29 pm</a>		</div>

		<p>The problem with %RANDOM% is that it&#39;s random. If several temporary files are in use at the same time, you&#39;ll eventually run into a collision. In one test, 32768 sequential uses of %RANDOM% produced only 12068 unique numbers. If you really want to use %RANDOM%, i would suggest something like this (in the spirit of the original example):</p>
<p>C&gt; copy con sortarandom.cmd</p>
<p>@pause</p>
<p>@set /a number=%number% + 1</p>
<p>@echo %number%</p>
<p>^Z</p>
<p>&nbsp; &nbsp; &nbsp; &nbsp;1 file(s) copied.</p>
<p>C&gt; set number=%RANDOM%</p>
<p>C&gt; for /l %i in (1,1,3000) do @call sortarandom.cmd %number%</p>
<p>Using the project output directory solved half the problem. This will give you sequential numbers, so you avoid name collisions. It&#39;s still far from perfect, though, and you might as well start out with 0, or any other arbitrary number instead of %RANDOM%.</p>
<p>If you absolutely insist on random but unique file names, use GUIDs instead:</p>
<p>for /l %I in (1,1,3000) do @for /f &quot;delims=&quot; %J in (&#39;uuidgen&#39;) do @echo %J.tmp</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-841723">
				<div id="div-comment-841723" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">John</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100617-00/?p=13673#comment-841723">
			June 22, 2010 at 7:18 pm</a>		</div>

		<p>I also have enjoyed writing batch files, probably the largest system I maintained that was controlled by batch files amounted to around 4000 lines of cmd. &nbsp;By the end of my tenure I was so engrossed with it I often considered writing my own implementation of cmd but sanity got the better of me in the end.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-841743">
				<div id="div-comment-841743" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Yves</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100617-00/?p=13673#comment-841743">
			June 23, 2010 at 2:43 am</a>		</div>

		<p>If I take the description of the windows help: &quot;If Command Extensions are enabled, &#8230; &nbsp;These variable values are</p>
<p>computed dynamically each time the value of the variable is expanded. &#8230; %RANDOM% &#8211; expands to a random decimal number between 0 and 32767. &#8230;&quot;</p>
<p>In Unix/Linux terms, the fact that a second invocation in the same second does not generate a new number would be considered as a bug. &nbsp;In windows terms, you are given the opportunity to upgrade to PS. &nbsp;But I still consider it as a bug.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-841753">
				<div id="div-comment-841753" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Dan</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100617-00/?p=13673#comment-841753">
			June 23, 2010 at 2:46 am</a>		</div>

		<p>@Gabe: do not bash what you do not understand (pun intended). Your &quot;complex&quot; PS one-liner is possibly even simpler with Bash (in Linux):</p>
<p>ps -C apache2 -o bsdtime=|sort -nr|head -1</p>
<p>PS and bash/sh/csh just approach problems with a different philosophy. Which one is better, well, I do not know, but personally, for complex problems I would use a different scripting language anyways.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-841773">
				<div id="div-comment-841773" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Anon</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100617-00/?p=13673#comment-841773">
			June 23, 2010 at 5:55 am</a>		</div>

		<p>I like the use of &quot;wont&quot; to trip up nitpickers.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-841983">
				<div id="div-comment-841983" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Gabe</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100617-00/?p=13673#comment-841983">
			June 23, 2010 at 9:43 am</a>		</div>

		<p>Dan: I must say that, while it points to an interesting answer, your solution doesn&#39;t do what I wanted. My program returned the CPU time of the oldest process, whereas yours returns the one that has used the most CPU. However, as far as I can tell, the &quot;bsdtime&quot; column is formatted as &quot;MMM:SS&quot; which will cause the sort program to not work quite right (does &quot;1000:00&quot; come after &quot;999:59&quot;?). Of course, you left off the column header also, as it&#39;s hard to get that sorted properly.</p>
<p>My reading of the GNU ps man page (more like 18 pages: <a rel="nofollow" target="_new" href="http://unixhelp.ed.ac.uk/CGI/man-cgi?ps" rel="nofollow">unixhelp.ed.ac.uk/&#8230;/man-cgi</a>) indicates that &quot;ps -C apache2 -o bsdtime=CPU &#8211;sort start|head -2&quot; should do it. In other words, the only way to do it is to go against the UNIX philosophy of &quot;Write programs that do one thing and do it well&quot; and instead put all the functionality you need directly into each program. Since text-based pipelines are useless for this task, you have to put the grouping, formatting, column selection, row selection, and sort functions all into the main ps program. Is there any good reason a process listing program needs to know the size of my terminal window?</p>
<p>Fortunately, Powershell properly embodies the UNIX philosophy. The get-process cmdlet does nothing but return processes (with a few common options); the where cmdlet does only filtering; the sort cmdlet does only sorting; and the select cmdlet does only selection. A PS user can learn the simple select/where/group/sort cmdlets and apply them to files, processes, or anything else. A UNIX user has to learn the grep/cut/sort commands, then learn that they can&#39;t apply to processes the way he wants, and has to read 18 pages of documentation on ps to get the job done (assuming he has GNU ps installed, and not some lame old version of ps that just lists processes).</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

