<html>
<head>
<title>What does it mean when GetQueuedCompletionStatus return ERROR_SEM_TIMEOUT?</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>What does it mean when GetQueuedCompletionStatus return ERROR_SEM_TIMEOUT?</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>July 17, 2014 / year-entry #172</td></tr>
<tr><td><b>Tags:</b></td><td>code</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20140717-00/?p=483</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>9</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">A customer asked for assistance interpreting a failure of the Get­Queued­Completion­Status function. We are observing that Get­Queued­Completion­Status is intermittently behaving as follows: The handle is a SOCKET. The function returns FALSE. lpOverlapped != NULL. Get­Last­Error reports ERROR_SEM_TIMEOUT: "The semaphore timeout period has expired." That's all the information we have in our log files. We don't...</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>A customer asked for assistance interpreting a failure of the <code>Get&shy;Queued&shy;Completion&shy;Status</code> function.</p>
<blockquote class="q"><p>  We are observing that <code>Get&shy;Queued&shy;Completion&shy;Status</code> is intermittently behaving as follows: </p>
<ul>
<li>The handle is a <code>SOCKET</code>. </li>
<li>The function returns <code>FALSE</code>. </li>
<li><code>lpOverlapped != NULL</code>. </li>
<li><code>Get&shy;Last&shy;Error</code> reports     <code>ERROR_<wbr>SEM_<wbr>TIMEOUT</wbr></wbr></code>:     "The semaphore timeout period has expired." </li>
</ul>
<p> That's all the information we have in our log files. We don't know the value of <code>number&shy;Of&shy;Bytes</code> or <code>completion&shy;Key</code>, sorry. </p>
<p> We realize that this is a rather vague question, but when this problem hits our machines, it causes our internal logic to go into a reset state since it doesn't know what the error means or how to recover. Resetting is expensive, and we would prefer to handle this error in a less drastic manner, if only we knew what it meant. </p>
</blockquote>
<p> The error code <code>ERROR_<wbr>SEM_<wbr>TIMEOUT</wbr></wbr></code> is a rather bad translation of the underlying status code <code>STATUS_<wbr>IO_<wbr>TIMEOUT</wbr></wbr></code>, which is much more meaningful. It means that the I/O operation timed out. </p>
<p> Colleagues of mine from the networking team chimed in with additional information: </p>
<p> A common source of this error with TCP sockets is that the <a href="http://support.microsoft.com/kb/170359"> maximum retransmission count and timeout have been reached</a> on a bad (or broken) link. </p>
<p> If you know that the handle is a socket, then you can use <code>WSA&shy;Get&shy;Overlapped&shy;Result</code> on the <code>lpOverlapped</code> that got returned. Winsock will convert the status code to something more Winsocky. In this case, it would have given you <code>WSA&shy;ETIMED&shy;OUT</code>, which makes it clearer what happened. </p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (9)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-1139123">
				<div id="div-comment-1139123" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140717-00/?p=483#comment-1139123">
			July 17, 2014 at 7:05 am</a>		</div>

		<p>Well I could say use the select() model (winsock implements it) but it&#39;s just as hard on people who don&#39;t know it. Getting write() errors only when calling the next function, which is often read() is mega-confusing.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-bboorman odd alt thread-odd thread-alt depth-1" id="comment-1139133">
				<div id="div-comment-1139133" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Brian_EE' rel='external nofollow' class='url'>Brian_EE</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140717-00/?p=483#comment-1139133">
			July 17, 2014 at 7:34 am</a>		</div>

		<p>It was nice that the customer was honest (and more importantly aware) that they were giving a question with vague details. Sounds like they were trying to do the right thing and just needed a nudge in the correct direction.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1139143">
				<div id="div-comment-1139143" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Antonio Rodr&#237;guez</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140717-00/?p=483#comment-1139143">
			July 17, 2014 at 7:57 am</a>		</div>

		<p>Some customers understand that time is a valuable thing, and not to be wasted. They save you time and, as a bonus, they use to get their problem solved in a shorter time. On the other hand, most of the customers think that they way to go is giving vague information (&quot;my computer is broken!&quot;) and trying to intimidate you so you get their problem fixed faster. Sadly, they achieve exactly the opposite.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1139153">
				<div id="div-comment-1139153" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">icabod</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140717-00/?p=483#comment-1139153">
			July 17, 2014 at 8:18 am</a>		</div>

		<p>I was half-expecting the response to be &quot;Read the error &#8211; The timeout period on your semaphore has expired&quot; until I re-read and saw it was completion ports. &nbsp;Kind of glad to know it&#39;s not that obvious.</p>
<p>So does this mean that internally a semaphore is used, and the API doesn&#39;t realise to translate it to something more useable (would WSAGetLastError do it?)?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1139163">
				<div id="div-comment-1139163" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">icabod</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140717-00/?p=483#comment-1139163">
			July 17, 2014 at 8:20 am</a>		</div>

		<p>I&#39;ve re-read the post again and see that Winsock will indeed convert the error for you. &nbsp;Please disregard that part of my previous comment, but I&#39;m still curious to know if it&#39;s actually semaphores used internally (knowing that this would be implementation detail and liable to change).</p>
<div class="post">[<em>Sorry I didn&#39;t make it clear in the article. There was never any semaphore. This was an error in translation. The actual error was &quot;the I/O operation timed out&quot;, but the translation function converts the STATUS_IO_TIMEOUT code to ERROR_SEM_TIMEOUT (because you have to convert it to <span style="text-decoration:underline;">something</span>). -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1139173">
				<div id="div-comment-1139173" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Gabe</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140717-00/?p=483#comment-1139173">
			July 17, 2014 at 8:34 am</a>		</div>

		<p>One would think that when the mechanism was first created, somebody could have made a Win32 error that means &quot;IO timeout&quot; rather than picking something that just has a similar name.</p>
<p>A quick search for &quot;ERROR_SEMAPHORE_TIMEOUT&quot; reveals a whole lot of people who are having trouble copying files and such. I doubt I would even consider a semaphore timeout to even be an actual error.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1139183">
				<div id="div-comment-1139183" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Haegar</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140717-00/?p=483#comment-1139183">
			July 17, 2014 at 9:56 am</a>		</div>

		<p>I encountered this error quite often on our server-software on Win2003-servers. We just retried the operation and it then failed with a well known error code (what was expected)</p>
<p>Since Windows Server 2008 the problem is gone. I suspect that&#39;s because the TCP/IP-stack was partly rewritten with Longhorn?</p>
<p>Raymond, you didn&#39;t mention what OS the customer used.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1139203">
				<div id="div-comment-1139203" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Jon</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140717-00/?p=483#comment-1139203">
			July 17, 2014 at 12:19 pm</a>		</div>

		<p>I suspect that the customer will still need to use their reset state, though, rather than mess with default Windows tcp timeout settings.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1140603">
				<div id="div-comment-1140603" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Marc</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140717-00/?p=483#comment-1140603">
			July 22, 2014 at 8:59 am</a>		</div>

		<p>How does GQCSEx behave when an I/O operation has timed out for a socket? The docs say if GQCSEx returns FALSE, then no I/O operation was dequeued. I assume this means that ulNumEntriesRemoved will be zero so there is no overlapped structure to inspect.</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

