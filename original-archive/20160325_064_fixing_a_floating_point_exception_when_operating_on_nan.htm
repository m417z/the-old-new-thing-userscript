<html>
<head>
<title>Fixing a floating point exception when operating on NaN</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>Fixing a floating point exception when operating on NaN</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>March 25, 2016 / year-entry #65</td></tr>
<tr><td><b>Tags:</b></td><td>code</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20160325-00/?p=93203</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>9</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">Generate it at compile time.</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>
A customer had a DLL would sometimes fail to load into certain
clients.
Further investigation revealed that it failed to load into
programs that had enabled floating point exceptions,
<a HREF="http://blogs.msdn.com/b/oldnewthing/archive/2008/07/03/8682463.aspx">
perhaps inadvertently</a>.
The DLL initialized some global variables to hold
convenient values,
and one of the values it needed was NaN.
</p>
<p>
This particular DLL did not use the C++ standard library,
so it did not have access to
<code>numeric_limits&lt;double&gt;::quiet_NaN()</code>.
(And even if it did, those values are not compile-time constants.)
Instead, it tried to generate a NaN on its own:
</p>
<pre>
double const NaN = HUGE_VAL * 0;
</pre>
<p>
The gotcha here is that <code>HUGE_VAL</code> is a
static global variable in the Microsoft C runtime,
so this performs a runtime calculation inside
of <code>DLL_PROCESS_ATTACH</code>,
and if floating point exceptions are enabled,
the NaN-generating calculation causes the exception
to be raised, which then causes the loader to treat
the DLL as having failed to initialize.
</p>
<p>
The DLL was precalculating NaN because there was
a method that returns NaN to indicate that something
isn't available.
They precalculated the value so that that method
could return it.
</p>
<p>
The customer's solution was to move the NaN-generating
calculation into the code that needed it.
Unfortunately, that still raises the "invalid calculation"
exception in the case where the function wants to report
"No value",
which isn't really a case of an invalid calculation;
it's just a sentinel value.
</p>
<p>
Instead, the code can
<a HREF="http://blogs.msdn.com/b/oldnewthing/archive/2010/03/05/9973225.aspx">
generate a NaN at compile time</a>.
Everybody wins:
There is
no exception at DLL load time
because there is no code running at DLL load time!
It also means that the page containing the <code>NaN</code>
variable does not get dirtied, which avoids a copy-on-write charge.</p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (9)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-1231404">
				<div id="div-comment-1231404" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Rob Yull</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160325-00/?p=93203#comment-1231404">
			March 25, 2016 at 7:33 am</a>		</div>

		<p>Just pointing out that since C++11 numeric_limits::quiet_NaN() can potentially be generated at compile-time, since it should be constexpr. (I know it doesn&#8217;t help in this example due to the DLL).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1 parent" id="comment-1231423">
				<div id="div-comment-1231423" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://english.rejbrand.se' rel='external nofollow' class='url'>Andreas Rejbrand</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160325-00/?p=93203#comment-1231423">
			March 25, 2016 at 1:12 pm</a>		</div>

		<p>I don&#8217;t really get the &#8220;@2016 Microsoft&#8221; in the footer. What does &#8220;@&#8221; mean in this context? Is it some kind of joke (replacing &#8220;Â©&#8221; by &#8220;@&#8221;)?</p>

		
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-mquinlan even depth-2 parent" id="comment-1231444">
				<div id="div-comment-1231444" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/MichaelQuinlan' rel='external nofollow' class='url'>MichaelQuinlan</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160325-00/?p=93203#comment-1231444">
			March 26, 2016 at 12:59 am</a>		</div>

		<p>Andreas &#8212; It might just be a typo. Microsoft gets it right on other pages (<a href="https://msdn.microsoft.com/en-US/" rel="nofollow">https://msdn.microsoft.com/en-US/</a> for example).</p>

		
				</div>
		<ol class="children">
		<li class="comment odd alt depth-3 parent" id="comment-1231454">
				<div id="div-comment-1231454" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ivan K</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160325-00/?p=93203#comment-1231454">
			March 26, 2016 at 6:16 pm</a>		</div>

		<p>Also I think the ground rules or somewhere mentioned that the content of this blog doesn&#8217;t represent official Microsoft policy. And when you pointed it out I found the @ symbol kind of entertaining. Although I guess ms would have every to claim (c) if it wanted.</p>

		
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-fjeldse even depth-4 parent" id="comment-1231464">
				<div id="div-comment-1231464" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Erik+F' rel='external nofollow' class='url'>Erik F</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160325-00/?p=93203#comment-1231464">
			March 26, 2016 at 7:21 pm</a>		</div>

		<p>Technically, you don&#8217;t need any copyright notice at all: copyright legislation in TRIPS and Berne Convention countries states that copyright begins with creation. You can register copyrights for legal reasons (say, if you want to establish priority) but it&#8217;s not required.</p>
<p>(And I thought that a research paper that I wrote not long ago was kind of pointless information!) :-)</p>

		
				</div>
		<ol class="children">
		<li class="comment odd alt depth-5" id="comment-1231491">
				<div id="div-comment-1231491" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">smf</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160325-00/?p=93203#comment-1231491">
			March 28, 2016 at 6:40 am</a>		</div>

		<p>America copyright law does seem to extend more protection if you include a notice.</p>
<p>However I don&#8217;t believe &#8220;@ Microsoft&#8221; will help. You have to use the word Copyright or the symbol, (C) isn&#8217;t valid either.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment byuser comment-author-fredericmagnyf even thread-even depth-1 parent" id="comment-1231574">
				<div id="div-comment-1231574" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Medinoc' rel='external nofollow' class='url'>Medinoc</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160325-00/?p=93203#comment-1231574">
			March 29, 2016 at 1:33 am</a>		</div>

		<p>HUGE_VAL * 0 is a NaN? Is there something missing here?</p>

		
				</div>
		<ol class="children">
		<li class="comment odd alt depth-2" id="comment-1231694">
				<div id="div-comment-1231694" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160325-00/?p=93203#comment-1231694">
			March 29, 2016 at 10:39 am</a>		</div>

		<p>Yeah. You miss HUGE_VAL = +INF.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment byuser comment-author-dwalker-wk even thread-odd thread-alt depth-1" id="comment-1231724">
				<div id="div-comment-1231724" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/DWalker' rel='external nofollow' class='url'>DWalker</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160325-00/?p=93203#comment-1231724">
			March 29, 2016 at 11:55 am</a>		</div>

		<p>I don&#8217;t like in-band signaling (sentinel values to mean something)&#8230; but sometimes it may be unavoidable.</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

