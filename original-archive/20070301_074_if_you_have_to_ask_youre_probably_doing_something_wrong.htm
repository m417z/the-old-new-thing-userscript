<html>
<head>
<title>If you have to ask, you're probably doing something wrong</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>If you have to ask, you&#8217;re probably doing something wrong</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>March 1, 2007 / year-entry #75</td></tr>
<tr><td><b>Tags:</b></td><td>other</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20070301-00/?p=27803</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>79</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">If you have to ask about various operating system limits, you're probably doing something wrong. If you're nesting windows more than 50 levels deep or nesting menus more than 25 levels deep or creating a dialog box with more than 65535 controls, or nesting tree-view items more than 255 levels deep, then your user interface...</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>If you have to ask about various operating system limits, you're probably doing something wrong.</p>
<p> If you're <a href="http://blogs.msdn.com/oldnewthing/archive/2003/12/18/44379.aspx"> nesting windows more than 50 levels deep</a> or <a href="http://blogs.msdn.com/oldnewthing/archive/2003/12/30/46594.aspx"> nesting menus more than 25 levels deep</a> or <a href="http://blogs.msdn.com/oldnewthing/archive/2004/06/21/161375.aspx"> creating a dialog box with more than 65535 controls</a>, or nesting tree-view items more than 255 levels deep, then your user interface design is in serious need of rethought, because you just created a usability nightmare. </p>
<p> If you have to ask about <a href="http://blogs.msdn.com/oldnewthing/archive/2005/07/29/444912.aspx"> the maximum number of threads a process can create</a> or <a href="http://blogs.msdn.com/oldnewthing/archive/2003/12/10/56028.aspx"> the maximum length of a command line</a> or <a href="http://blogs.msdn.com/oldnewthing/archive/2006/07/06/657868.aspx"> the maximum size of an environment block</a> or <a href="http://support.microsoft.com/kb/256986/"> the maximum amount of data you can store in the registry</a>, then you probably have some rather serious design flaws in your program. </p>
<p> I'm not saying that knowing the limits isn't useful, but in many cases, <a href="http://listserv.linguistlist.org/cgi-bin/wa?A2=ind0405c&amp;L=ads-l&amp;P=12106"> if you have to ask, you can't afford it</a>. </p>
<p> <b>Nitpicker's corner</b> </p>
<p> Notice that I said "probably". In my experience, probably 90% of the people who ask what the limit is have either bumped into it or are considering a design that will. The fact that you folks can come up with suggestions for the other 10% doesn't invalidate my point. </p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (79)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-478013">
				<div id="div-comment-478013" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://assetsgraphed.com/' rel='external nofollow' class='url'>John Topley</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070301-00/?p=27803#comment-478013">
			March 1, 2007 at 10:04 am</a>		</div>

		<p>Can&#8217;t you ask for no other reason than that you&#8217;re interested?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-478023">
				<div id="div-comment-478023" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">DavidE</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070301-00/?p=27803#comment-478023">
			March 1, 2007 at 10:11 am</a>		</div>

		<p>I disagree on the maximum length of a command line. There shouldn&#8217;t be a maximum length, but traditionally it has been smaller on Windows than on Unix/Linux, and that causes problems in some cases.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-478033">
				<div id="div-comment-478033" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">vince</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070301-00/?p=27803#comment-478033">
			March 1, 2007 at 10:20 am</a>		</div>

		<p>How do I use more than 640k of RAM?&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-478043">
				<div id="div-comment-478043" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.mschaef.com' rel='external nofollow' class='url'>mschaef</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070301-00/?p=27803#comment-478043">
			March 1, 2007 at 10:29 am</a>		</div>

		<p>&quot;traditionally it has been smaller on Windows than on Unix/Linux&quot;</p>
<p>Unix sometimes needs more command line length than Windows does: unlike Windows, Unix does file wildcard expansion in the shell and passes a complete list of files down to the process being invoked, via the command line. &nbsp;I&#8217;ve been in a few situations where this has caused problems.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-478063">
				<div id="div-comment-478063" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Kevin I</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070301-00/?p=27803#comment-478063">
			March 1, 2007 at 10:55 am</a>		</div>

		<p>I do agree in many cases. I remember one situation at my last company where we made a shell application which loaded sub screens through a common interface (they were com dlls).</p>
<p>We hit the GDI object limit! People would open up a number of &quot;Order&quot; screens in the shell, and it would get slow. We found a few controls which were leaking GDI objects, but patched that up and still had a decreasing performance as someone uses the application. &nbsp;</p>
<p>The only way we found the GDI one though was cause we hit it a number of times (due to users opening up order screens which have many gdi objects in each), so we weren&#8217;t asking if we could afford it, we knew we couldn&#8217;t! &nbsp;We added metrics to our error handling to report what it was at, and I think we talked about not letting the user open up another screen if they had &gt; some number, but not sure if we actually did that. &nbsp;Cause even over like 5k, it dogs down windows as a whole very badly, but the user just wants their queue of orders open to work through them one at a time, so they don&#8217;t care that it is dog slow for a bit as they work through the screens. That was one limit I remember hitting and causing some pain :) &nbsp;</p>
<p>With the CAB (application block), and our current project which is our own similar implementation from my last company, I think about that limit and realize we&#8217;ll need some sort of cap on that as well.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-478073">
				<div id="div-comment-478073" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.deadbeef.com' rel='external nofollow' class='url'>Jeremy Bettis</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070301-00/?p=27803#comment-478073">
			March 1, 2007 at 10:59 am</a>		</div>

		<p>I have hit the command line limit when trying to link programs before. &nbsp;It is real easy to hit 8k when you have a large program with a lot of .obj files. &nbsp;Especially if you put all of your files in a directory called shared_debug_obj or something like that. This was using make from the command line, not visual studio.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-478083">
				<div id="div-comment-478083" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Jules</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070301-00/?p=27803#comment-478083">
			March 1, 2007 at 11:03 am</a>		</div>

		<p>&quot;&quot;traditionally it has been smaller on Windows than on Unix/Linux&quot;</p>
<p>Unix sometimes needs more command line length than Windows does: unlike Windows, Unix does file wildcard expansion in the shell and passes a complete list of files down to the process being invoked, via the command line. &nbsp;I&#8217;ve been in a few situations where this has caused problems.&quot;</p>
<p>Bear in mind that some of &nbsp;use Unix-ish tools under Windows (e.g. cygwin). &nbsp;The same issues can occur under Windows, if you&#8217;re using the right(wrong) tools.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-478093">
				<div id="div-comment-478093" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Dave</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070301-00/?p=27803#comment-478093">
			March 1, 2007 at 11:10 am</a>		</div>

		<blockquote><p>
  Unix does file wildcard expansion in the shell and passes a complete list of files down to the process being invoked, via the command line. &nbsp;I&#8217;ve been in a few situations where this has caused problems.
</p></blockquote>
<p>Especially if there are files named like &quot;-rf&quot;; the shell blindly passes those on to the poor command, which has no idea they were meant to be file names. Hilarity ensues.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-478113">
				<div id="div-comment-478113" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://diegocg.blogspot.com' rel='external nofollow' class='url'>Diego</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070301-00/?p=27803#comment-478113">
			March 1, 2007 at 11:30 am</a>		</div>

		<p>WRT to maximum lenght of the command line, Rob Pike (Plan 9&#8217;s creator) said that it was stupid that today&#8217;s Unix boxes couldn&#8217;t pass more than X KB of parameters in boxes with GB of RAM and available dynamic memory allocation.</p>
<p>In the Linux world there&#8217;s a patch around that will be merged some day, that does dynamic memory allocation for command line parameter passing.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-478123">
				<div id="div-comment-478123" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.paraesthesia.com/blog/weblog.php?id=P1163' rel='external nofollow' class='url'>paraesthesia</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070301-00/?p=27803#comment-478123">
			March 1, 2007 at 11:32 am</a>		</div>

		<p>PingBack from <a rel="nofollow" target="_new" href="http://www.paraesthesia.com/blog/weblog.php?id=P1163" rel="nofollow">http://www.paraesthesia.com/blog/weblog.php?id=P1163</a></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-478133">
				<div id="div-comment-478133" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.stonetempest.com' rel='external nofollow' class='url'>David</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070301-00/?p=27803#comment-478133">
			March 1, 2007 at 11:38 am</a>		</div>

		<p>Chances are if your really asking what the limit is, then you&#8217;re not exploring. If you&#8217;re asking why limit X for a particular ability then you&#8217;re obviously not using it as intended. However philosophical differences on usage can cause differences of opinion, but in general I agree. Limitiations should basically be hardware limitations, this way when hardware improves, so does the software (i.e. 64 bit, multi-core systems, etc)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-478143">
				<div id="div-comment-478143" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blogs.msdn.com/michkap/archive/2007/03/01/1779988.aspx' rel='external nofollow' class='url'>Sorting It All Out</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070301-00/?p=27803#comment-478143">
			March 1, 2007 at 11:42 am</a>		</div>

		<p>In most cases, Raymond is right when he says If you have to ask, you&#8217;re probably doing something wrong</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-478173">
				<div id="div-comment-478173" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Tim Meadowcroft</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070301-00/?p=27803#comment-478173">
			March 1, 2007 at 12:04 pm</a>		</div>

		<p>Like IE has a maximum URL length of just over 2K characters (<a rel="nofollow" target="_new" href="http://support.microsoft.com/kb/208427" rel="nofollow">http://support.microsoft.com/kb/208427</a>) on the basis that &quot;you should be using POST not GET&quot;. But of course that&#8217;s no use whatsoever when you&#8217;re say embedding a dynamically generated image (I have an ASP page that generates PNG charts that falls over this limit regularly requiring all sorts of ugly workarounds) within a generated page.</p>
<p>More likely, if you have to ask, you&#8217;re not doing things the way Microsoft thought you&#8217;d do it.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-478183">
				<div id="div-comment-478183" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Mihai</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070301-00/?p=27803#comment-478183">
			March 1, 2007 at 12:08 pm</a>		</div>

		<p>&lt;&lt;Especially if you put all of your files in a directory called shared_debug_obj or something like that.&gt;&gt;</p>
<p>Link (and other tools) can take a file containing a list of obj</p>
<p>Just enumerate all the obj, one per line in a file (let&#8217;s say ToLink.lst) and call link /whatever_parameters_you_want @ToLink.lst</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-478193">
				<div id="div-comment-478193" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blog.gdwnet.com' rel='external nofollow' class='url'>Gary Williams</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070301-00/?p=27803#comment-478193">
			March 1, 2007 at 12:09 pm</a>		</div>

		<p>I&#8217;ve hit an operating system limit once thanks to a really bad batch file I wrote &#8211; It created something like 256 sub-directions then fell over &#8211; Only THEN did I realise just how bad a script it was!</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-478213">
				<div id="div-comment-478213" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://forbidden-planet.blogspot.com' rel='external nofollow' class='url'>richard</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070301-00/?p=27803#comment-478213">
			March 1, 2007 at 12:26 pm</a>		</div>

		<p>I&#8217;m with John Topley, I ask because I am curious.</p>
<p>One of the first things I do whenever I get something new is to explore its limits.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-478223">
				<div id="div-comment-478223" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://denisbider.blogspot.com' rel='external nofollow' class='url'>denis bider</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070301-00/?p=27803#comment-478223">
			March 1, 2007 at 12:27 pm</a>		</div>

		<p>Raymond &#8211; I disagree, at least for the case of threads. Flow-Based Programming isolates individual and small components of a program so that they can be executed concurrently. If the OS threads were lightweight, and if it were possible to create very many threads, then an application could use the OS scheduler and simply use a thread for every object. Don&#8217;t tell me this is a bad idea, because it isn&#8217;t &#8211; it is used to good effect in Erlang.</p>
<p>But it so happens that Windows doesn&#8217;t support this model natively because its threads are too expensive, and one has to write one&#8217;s own scheduler to support the Flow-Based Programming paradigm.</p>
<p>So this, at minimum, is one example where the question being asked &#8211; how expensive are Windows threads, what&#8217;s the maximum number I can create? &#8211; is legitimate, and the answer &#8211; they&#8217;re expensive, so not very many &#8211; is a deficiency of Windows, not the developer asking the question.</p>
<p>Not everything fits into a narrow view.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-larryosterman odd alt thread-odd thread-alt depth-1" id="comment-478233">
				<div id="div-comment-478233" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Larry+Osterman+%5BMSFT%5D' rel='external nofollow' class='url'>Larry Osterman [MSFT]</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070301-00/?p=27803#comment-478233">
			March 1, 2007 at 12:33 pm</a>		</div>

		<p>Denis, in your scenario you probably want to use fibers, not threads &#8211; a fiber is a lightweight thread, roughly equivilant to *nix pthreads.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-478243">
				<div id="div-comment-478243" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://denisbider.blogspot.com' rel='external nofollow' class='url'>denis bider</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070301-00/?p=27803#comment-478243">
			March 1, 2007 at 12:33 pm</a>		</div>

		<blockquote><p>
  More likely, if you have to ask,</p>
<p>  you&#8217;re not doing things the way</p>
<p>  Microsoft thought you&#8217;d do it.
</p></blockquote>
<p>Aye.</p>
<p>And then Raymond Chen comes at you and pronounces that you if you&#8217;re not doing it the way he and his colleagues envisioned, then you&#8217;re doing wrong. Somewhat arrogant.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-kjkhyperion odd alt thread-odd thread-alt depth-1" id="comment-478253">
				<div id="div-comment-478253" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">KJK::Hyperion</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070301-00/?p=27803#comment-478253">
			March 1, 2007 at 12:34 pm</a>		</div>

		<p>Jules: the Cygwin limits for the command line are even worse. Cygwin reports a maximum lenght of 8192 characters, while Windows allows up to 64 Kb (32768 characters)</p>
<p>Jeremy: all Microsoft development tools, nmake included, support response files for that reason. Response files virtually remove any limit on command line length</p>
<p>Diego: Windows, technically, has no limit on command line length. The parent process just brutally copies it into the child process by remotely allocating memory and overwriting it. It is never copied in kernel-mode except for the small temporary buffer used to transfer private virtual memory across processes. The limit is in the length field, a byte count 16 bits in width</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-kjkhyperion even thread-even depth-1" id="comment-478263">
				<div id="div-comment-478263" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">KJK::Hyperion</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070301-00/?p=27803#comment-478263">
			March 1, 2007 at 12:41 pm</a>		</div>

		<p>denis: you are basically asking why you can&#8217;t use Windows threads to implement what amounts to a glorified form of setjmp/longjmp, and that question should answer itself. No operating system has &quot;lightweight&quot; threads, because what you want is special-purpose threads and an operating system can&#8217;t give you that</p>
<p>What Larry said: use fibers. They are a glorified form of setjmp/longjmp that&#8217;s officially supported and sanctioned. Microsoft SQL Server has its own scheduler and only ever creates one thread per CPU, and uses fibers exclusively. Also, Raymond has already demonstrated flow-oriented programming with fibers on this blog</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-478273">
				<div id="div-comment-478273" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Dave</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070301-00/?p=27803#comment-478273">
			March 1, 2007 at 12:41 pm</a>		</div>

		<p>Tim Meadowcroft: if i understand you correctly, you&#8217;re putting the actual data of an image in a URL? &nbsp;if that&#8217;s the case, then it&#8217;s one of the strangest things i&#8217;ve heard of as far as putting data in URLs.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-478283">
				<div id="div-comment-478283" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://denisbider.blogspot.com' rel='external nofollow' class='url'>denis bider</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070301-00/?p=27803#comment-478283">
			March 1, 2007 at 12:42 pm</a>		</div>

		<blockquote><p>
  Denis, in your scenario you probably want</p>
<p>  to use fibers, not threads &#8211; a fiber is a</p>
<p>  lightweight thread, roughly equivilant to</p>
<p>  *nix pthreads.
</p></blockquote>
<p>Thanks. I looked into fibers, but in this case I still need to write my own scheduler, and I had already given up on preserving a component&#8217;s stack between activations by the time I considered fibers.</p>
<p>Fibers also plays foul with thread local storage, which some library code uses, and then you can&#8217;t use that library code, and then you have to investigate in advance whether a certain library you want to use makes use of thread local storage or not&#8230; So that&#8217;s also a strong reason why I decided not to use fibers.</p>
<p>I know there&#8217;s fiber local storage in recent Windows versions, but most code that uses local storage assumes TLS. If TLS worked with fibers that would make the case for fibers much more attractive in general, I think.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-kjkhyperion odd alt thread-odd thread-alt depth-1" id="comment-478303">
				<div id="div-comment-478303" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">KJK::Hyperion</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070301-00/?p=27803#comment-478303">
			March 1, 2007 at 1:01 pm</a>		</div>

		<p>Larry: all current implementations of pthreads follow the N:N model, because 1:N and N:M have been tried and dismissed on the grounds of, uh, sucking. Fibers are, actually, a perfect equivalent of ucontext, a seriously underused part of the standard:</p>
<p>&lt;<a rel="nofollow" target="_new" href="http://www.opengroup.org/onlinepubs/009695399/basedefs/ucontext.h.html&gt;" rel="nofollow"></a><a href="http://www.opengroup.org/onlinepubs/009695399/basedefs/ucontext.h.html&#038;gt" rel="nofollow">http://www.opengroup.org/onlinepubs/009695399/basedefs/ucontext.h.html&#038;gt</a>;</p>
<p>with the difference that ucontext has no kind of thread affinity, so as not to introduce a dependency on pthreads (I guess, or maybe they&#8217;re just unrelated)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-478313">
				<div id="div-comment-478313" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Aidan</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070301-00/?p=27803#comment-478313">
			March 1, 2007 at 1:01 pm</a>		</div>

		<blockquote><p>
  If you have to ask about various operating system limits
</p></blockquote>
<p>MAX_PATH not withstanding.</p>
<p>(and no, it can&#8217;t be changed without a time machine)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-kjkhyperion odd alt thread-odd thread-alt depth-1" id="comment-478323">
				<div id="div-comment-478323" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">KJK::Hyperion</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070301-00/?p=27803#comment-478323">
			March 1, 2007 at 1:09 pm</a>		</div>

		<p>BryanK: implementing pre-emption in user mode is always going to be a bad idea in any case&#8230; blocking system calls, sudden onset of reentrance issues, extremely expensive context switches, and a very coarse clock resolution. User-mode implementations of pthreads were (and will always be) totally doomed to failure, at least without the use of proprietary extensions</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-478333">
				<div id="div-comment-478333" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Miles Archer</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070301-00/?p=27803#comment-478333">
			March 1, 2007 at 1:10 pm</a>		</div>

		<p>The counter example that comes to mind is the 2GB (or 3GB) VM limit.</p>
<p>But Raymond said &quot;probably&quot; not &quot;always&quot;.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-478343">
				<div id="div-comment-478343" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">John Hensley</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070301-00/?p=27803#comment-478343">
			March 1, 2007 at 1:41 pm</a>		</div>

		<p>&quot;MAX_PATH not withstanding.&quot;</p>
<p>If you have to ask about MAX_PATH, ask whether you&#8217;re misusing it.</p>
<p>(I&#8217;ve seen more than one coder who declares any string buffer, used for any purpose, with length MAX_PATH. As if it&#8217;s some kind of metaphysical limit.)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-478373">
				<div id="div-comment-478373" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Steve Loughran</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070301-00/?p=27803#comment-478373">
			March 1, 2007 at 2:14 pm</a>		</div>

		<p>I&#8217;m going to be subversive here and argue if you hard code limits in your app, be they 16, 65535 (max-ipv4-ports), 255 -max-path in non-unicode filesystems, etc, then you are encoding assumptions.</p>
<p>Those assumptions may or may not be valid. When they are found to be invalid you either have buffer overflows or users unable to achieve their goals. Even if the assumptions are valid at the time you write the app, by the time your app is retired, it may not be.</p>
<p>Storing stuff in fixed size arrays may have been a valid approach back in DOS or win31 days, but nowadays you should use dynamic datastructures for all your core system elements. </p>
<div class="post">[<i>If somebody posts the question, &#8220;What is the maximum number of IPv4 ports I can create in my application? I start running into trouble after around 60,000,&#8221; your response is probably going to be &#8220;What the heck are you doing that needs 60,000 ports?&#8221; -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-478383">
				<div id="div-comment-478383" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Mikkin</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070301-00/?p=27803#comment-478383">
			March 1, 2007 at 3:08 pm</a>		</div>

		<p>I guess old habits die hard. &nbsp;I started programming in the bad old days of the 8086 and 6502. &nbsp;In such environments you always have to ask because you often can&#8217;t afford it. &nbsp;</p>
<p>There is a limit, therefore I want to know what it is. &nbsp;Assuming that as long as you are doing something reasonable you will never hit a limit is just alien to my way of thinking.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-478393">
				<div id="div-comment-478393" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">KristofU</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070301-00/?p=27803#comment-478393">
			March 1, 2007 at 3:09 pm</a>		</div>

		<p>We have implemented our own exclusive locks, based on event HANDLE&#8217;s.</p>
<p>A lot of objects aggregate these locks, and on application startup we consume about 17000 handles because of it.</p>
<p>So we would be interested in the maximum number of event handles, altough we have never had any real problems.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-478403">
				<div id="div-comment-478403" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Cooney</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070301-00/?p=27803#comment-478403">
			March 1, 2007 at 3:12 pm</a>		</div>

		<blockquote><p>
  Especially if there are files named like &quot;-rf&quot;; the shell blindly passes those on to the poor command, which has no idea they were meant to be file names. Hilarity ensues.
</p></blockquote>
<p>that&#8217;s why God invented &#8211;.</p>
<blockquote><p>
  And then Raymond Chen comes at you and pronounces that you if you&#8217;re not doing it the way he and his colleagues envisioned, then you&#8217;re doing wrong. Somewhat arrogant.
</p></blockquote>
<p>Of course, if he prevents you from foisting a 50 level menu structure on your users, then your users will sing his praises.</p>
<blockquote><p>
  Those assumptions may or may not be valid. When they are found to be invalid you either have buffer overflows or users unable to achieve their goals. Even if the assumptions are valid at the time you write the app, by the time your app is retired, it may not be.
</p></blockquote>
<p>And if you avoid all assumptions, your code will drag ass. Code the common case and refactor when need be. Building castles in the air is mostly wasted effort.</p>
<blockquote><p>
  I&#8217;m going to be subversive here and argue if you hard code limits in your app, be they 16, 65535 (max-ipv4-ports), 255 -max-path in non-unicode filesystems, etc, then you are encoding assumptions.
</p></blockquote>
<p>What&#8217;s the 64k thing doing in there? IPV4 is ubiquitous, and it&#8217;ll be years before that&#8217;s even close to changing. The limit is inherent in the protocol &#8211; did it change in ipv6?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-478413">
				<div id="div-comment-478413" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">BryanK</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070301-00/?p=27803#comment-478413">
			March 1, 2007 at 3:48 pm</a>		</div>

		<p>The 65535-port limit isn&#8217;t a property of IP, it&#8217;s a property of UDP and TCP. &nbsp;(The port number is stored in the UDP or TCP header, not the IP header.)</p>
<p>I&#8217;m not sure whether (UDP/TCP)-over-IPv6 uses a different header structure than (UDP/TCP)-over-IPv4, but I&#8217;d hope they both use the same headers. &nbsp;If so, then IPv6 still has the same limit on TCP or UDP port numbers.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-jamesnt odd alt thread-odd thread-alt depth-1" id="comment-478423">
				<div id="div-comment-478423" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/JamesNT' rel='external nofollow' class='url'>JamesNT</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070301-00/?p=27803#comment-478423">
			March 1, 2007 at 3:49 pm</a>		</div>

		<p>I&#8217;m beginning to believe that Raymond Chen and myself are the only ones here with a degree in computer science. &nbsp;</p>
<p>There are always limits. &nbsp;Some limits are in place because that&#8217;s how things were in 1995 and those limits must remain for back compat reasons. &nbsp;Other reasons for limits are to prevent one thing from DOMINATING the rest of the system (think fixed buffer lengths). &nbsp;Other reasons for limits are becuase of the hardware itself.</p>
<p>Few limits are arbitrary as many of you are assuming. &nbsp;If you do your research (or get a degree as Chen and I did) then you&#8217;ll know why certain limits are in place and you won&#8217;t go to a public blog and make morons of yourselves.</p>
<p>James</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-478443">
				<div id="div-comment-478443" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Cody</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070301-00/?p=27803#comment-478443">
			March 1, 2007 at 3:58 pm</a>		</div>

		<blockquote><p>
  &gt; And then Raymond Chen comes at you and pronounces that you if you&#8217;re not doing it the way he and his colleagues envisioned, then you&#8217;re doing wrong. Somewhat arrogant.</p>
<p>  Of course, if he prevents you from foisting a 50 level menu structure on your users, then your users will sing his praises.
</p></blockquote>
<p>Untrue. &nbsp;If the evils of the world are not unleashed before they are realized by the world due to the action of one man, that one man will receive no praise because the world does not know he prevented those evils.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-478453">
				<div id="div-comment-478453" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Anonymous</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070301-00/?p=27803#comment-478453">
			March 1, 2007 at 4:01 pm</a>		</div>

		<p>Why can&#8217;t I allocate more memory than the system has?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-478483">
				<div id="div-comment-478483" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">JerryJVL</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070301-00/?p=27803#comment-478483">
			March 1, 2007 at 4:35 pm</a>		</div>

		<p>I think there might be a bias in the demographics of the audience of this site, which makes the statement more true than it is in general. I can imagine a newbie developer needing to ask because they genuinely don&#8217;t know that these limits are so high you should not hit them unless you are doing something wrong. Not knowing whether the maximum number of threads is 4, 4k or 4M can make the question relevant in that case.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-478503">
				<div id="div-comment-478503" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">BryanK</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070301-00/?p=27803#comment-478503">
			March 1, 2007 at 4:35 pm</a>		</div>

		<p>Anonymous: &nbsp;You can. &nbsp;(Well, probably &#8212; it depends on how much physical memory the system actually has, compared to the amount of virtual memory that can be used by your process.) &nbsp;You&#8217;ll just bring the system to its knees when you try to touch all this virtual memory, because the system is thrashing the page file&#8230; &nbsp;;-)</p>
<p>(Yes, yes, I know, you meant &quot;more virtual memory than the system has&quot;. &nbsp;Or perhaps you meant &quot;more address space than the processor has&quot;. &nbsp;Either way, I say this: &nbsp;:-P)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-478513">
				<div id="div-comment-478513" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">steveg</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070301-00/?p=27803#comment-478513">
			March 1, 2007 at 6:01 pm</a>		</div>

		<p>JamesNT: I&#8217;m beginning to believe that Raymond Chen and myself are the only ones here with a degree in computer science.</p>
<p>#define MAX_COMP_SCI_DEGREE 2</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-dean-harding odd alt thread-odd thread-alt depth-1" id="comment-478523">
				<div id="div-comment-478523" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Dean+Harding' rel='external nofollow' class='url'>Dean Harding</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070301-00/?p=27803#comment-478523">
			March 1, 2007 at 6:16 pm</a>		</div>

		<p>denis: You probably wouldn&#8217;t have much luck with fibers anyway. The main reason for the &quot;limit&quot; on the number of threads (not only in Windows but in any OS) is stack space. All threads require stack space of their own. The default size on Windows is 1MB. 1MB * 2,000 threads = 2GB = the limit.</p>
<p>If you&#8217;re trying to implement a flow-based programming model using one &quot;actual&quot; threads per process then, as Raymond said, you&#8217;re doing something wrong.</p>
<p>Just because you think of something &quot;logically&quot; as a thread, doesn&#8217;t mean that is how you would implement it. A TCP/IP connection can be &quot;logically&quot; thought of as a hard-wired connection between two hosts, but that&#8217;s not how you&#8217;d implement it.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-478203">
				<div id="div-comment-478203" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Dave</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070301-00/?p=27803#comment-478203">
			March 1, 2007 at 12:16 pm</a>		</div>

		<p>I haven&#8217;t wanted to exceed these limits, but I *have* sometimes wanted to reduce them to small values so that I can make sure the program works in low-resource situations and I&#8217;m not dribbling handles behind me. I know of tools and techniques to limit some resources like system memory. Can many of these other limits be reduced for testing as well?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-478553">
				<div id="div-comment-478553" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">mastmaker</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070301-00/?p=27803#comment-478553">
			March 1, 2007 at 8:46 pm</a>		</div>

		<p>@JamesNT</p>
<p>Not just going elitist with your degree nonsense, you are guilty of trying to pull Raymond into it.</p>
<p>You can a joint in your degree and smoke, for all I care.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-478293">
				<div id="div-comment-478293" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">BryanK</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070301-00/?p=27803#comment-478293">
			March 1, 2007 at 12:58 pm</a>		</div>

		<p>&gt; Especially if there are files named like &quot;-rf&quot;;</p>
<p>That&#8217;s what the &#8212; option is for (at least in GNU&#8217;s rm, and most of the other GNU tools). &nbsp;It says &quot;everything after this is a filename, not an option, even if it looks like an option&quot;. &nbsp;&quot;rm &#8212; *&quot; is what you should use. &nbsp;;-)</p>
<p>&gt; a fiber is a lightweight thread, roughly equivilant to *nix pthreads.</p>
<p>Well, pthreads on Linux, at least, have been &quot;full&quot; kernel threads (with full preemptive multi-tasking) for a *long* time now. &nbsp;They work just like Windows threads, they just have a lower creation cost.</p>
<p>(Now, the Sun JRE on Solaris didn&#8217;t use Solaris&#8217;s native threading support for quite some time. &nbsp;They used the Solaris &quot;green threads&quot; library instead, which was cooperative. &nbsp;I&#8217;m not sure whether Sun ever changed this, but the JRE at the time was around version 1.0 or 1.1.)</p>
<p>Anyway, I assume you meant &quot;roughly equivalent to most *nix cooperative threading libraries&quot;, right? &nbsp;I say that because fibers have to explicitly yield (like processes did in Win 3.1), and do not forcibly preempt each other.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-478603">
				<div id="div-comment-478603" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Anony Moose</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070301-00/?p=27803#comment-478603">
			March 1, 2007 at 10:04 pm</a>		</div>

		<p>2000 threads where each thread uses just one millisecond of processor time (assuming no overhead, which is obviously not entirely accurate) means that each thread works for one millisecond then spends the next 1999 milliseconds waiting around. If one of those threads is your UI thread, you&#8217;ve kinda hurt application responsiveness.</p>
<p>2000 threads that mostly spend their time waiting on I/O probably means a more efficient implementation is possible.</p>
<p>No, really, &quot;RAM used&quot; or even &quot;entries in a fixed length table used&quot; aren&#8217;t the only relevant issues.</p>
<p>If you have 2000 threads then chances are you&#8217;re either doing something wrong, or you&#8217;ld understand the entire threading system (and probably the rest of the OS) so deeply that you wouldn&#8217;t actually need to ask what the maximum thread limit actually is.</p>
<p>As for 17000 handles used up in a custom lock system&#8230;. yeeep! &nbsp;I&#8217;m not sure I want to ever see that particular system.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-478613">
				<div id="div-comment-478613" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ross Bemrose</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070301-00/?p=27803#comment-478613">
			March 1, 2007 at 10:05 pm</a>		</div>

		<p>&quot;Like IE has a maximum URL length of just over 2K characters (<a rel="nofollow" target="_new" href="http://support.microsoft.com/kb/208427" rel="nofollow">http://support.microsoft.com/kb/208427</a>) on the basis that &#8216;you should be using POST not GET&#8217;. But of course that&#8217;s no use whatsoever when you&#8217;re say embedding a dynamically generated image (I have an ASP page that generates PNG charts that falls over this limit regularly requiring all sorts of ugly workarounds) within a generated page.</p>
<p>More likely, if you have to ask, you&#8217;re not doing things the way Microsoft thought you&#8217;d do it.&quot;</p>
<p>You may find this page interesting: <a rel="nofollow" target="_new" href="http://www.boutell.com/newfaq/misc/urllength.html" rel="nofollow">http://www.boutell.com/newfaq/misc/urllength.html</a></p>
<p>Unfortunately, HTTP doesn&#8217;t actually specify a maximum URI length, which caused everyone to come up with their own length. &nbsp;In theory, this is supposed to be managed by the server itself, but Microsoft has chosen to step in and attempt to stop users from making their own mistakes.</p>
<p>P.S. If your URIs are really long, yes, you should rethink how you&#8217;re doing it. &nbsp;There are other options out there, such as cookies or sessions. &nbsp;In fact, sessions would be ideal for this sort of thing, because then the data isn&#8217;t being constantly being passed back and forth between the client and server.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-dean-harding odd alt thread-odd thread-alt depth-1" id="comment-478643">
				<div id="div-comment-478643" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Dean+Harding' rel='external nofollow' class='url'>Dean Harding</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070301-00/?p=27803#comment-478643">
			March 1, 2007 at 10:34 pm</a>		</div>

		<blockquote><p>
  One article without a nitpicker&#8217;s corner and look what happens.
</p></blockquote>
<p>At least the second half of that comment was actually quite useful ;)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-478663">
				<div id="div-comment-478663" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Drak</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070301-00/?p=27803#comment-478663">
			March 2, 2007 at 2:40 am</a>		</div>

		<p>Just out of curiosity: what are the chances of a normal program (no infinite recursion mistakes) running out of stack space?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-478673">
				<div id="div-comment-478673" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Tim Meadowcroft</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070301-00/?p=27803#comment-478673">
			March 2, 2007 at 3:59 am</a>		</div>

		<p>re:IE max URL length of 2080 chars</p>
<p>Dave: No, I&#8217;m not passing the image data in the url GET, but the parameters for generating the image (it&#8217;s a little graph-generator, so I pass the points to plot, labels for the axes, labels for data points etc.) which can easily exceed 2,000 chars for an interesting chart.</p>
<p>The idea is that the containing page assembles data from various data sources, can lay out interesting data in textual form, and can embed dynamically generated images to illustrate the data (eg my bug reports page has charts of the last 90 days rates of bugs being opened, those being closed, and the net outstanding).</p>
<p>Ross Bemrose: And yes, I could (and have to) store all this in session variables &#8211; and what a nasty hack that is. So much for items operating purely on their inputs, and of course it makes it very ugly embedding multiple images in a page, or testing the graph code by itself, or to publish the component for other projects for re-use. Another option is for the outer page to generate the images and save them as files and then quote the url for accessing those images and clean them up again sometime later &#8211; again, a nasty hack that obscures a sensible information flow.</p>
<p>IIS/HTML/HTTP all support the longer URL, and I&#8217;m more than happy to write a long url, but IE has a ridiculously short and arbitrary limit which I&#8217;m yet to hear justified.</p>
<p>But the point was not this one issue &#8211; but the general point, that some limits are just plain daft because, I assume, the developers couldn&#8217;t see how a tool would be used, but failed to see that their understandable lack of foresight is not a good enough reason to impose an arbitrary limit where none is justified or required (some claim the only 3 valid values for any system limit are 0, 1, and infinity, although I&#8217;d also allow the maximum value that can be stored in a word on a given platform).</p>
<p>While Raymond can claim &quot;you&#8217;re probably doing it wrong&quot;, it&#8217;s only the &quot;probably&quot; disclaimer that saves the comment. And I know he&#8217;s talking about O/S limits, but it&#8217;s Microsoft who&#8217;ve muddied the O/S-application divide (is IE part of the O/S?).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-478593">
				<div id="div-comment-478593" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Puckdropper</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070301-00/?p=27803#comment-478593">
			March 1, 2007 at 9:26 pm</a>		</div>

		<p>&gt;Why can&#8217;t I allocate more memory than the system has?</p>
<p>That&#8217;s actually a valid question&#8230; &nbsp;Why can&#8217;t I allocate more memory to a Virtual PC than my system has RAM? &nbsp;I *know* it will be slow, I *know* it&#8217;s not advisable, but you see I&#8217;ve only got 512MB of RAM in my laptop, and I want to play with Vista. &nbsp;From what I&#8217;ve read, it requires 512MB to install, but will run with less. &nbsp;Oh well, I&#8217;ve got a more powerful desktop I can play with&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-kjkhyperion odd alt thread-odd thread-alt depth-1" id="comment-478693">
				<div id="div-comment-478693" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">KJK::Hyperion</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070301-00/?p=27803#comment-478693">
			March 2, 2007 at 6:08 am</a>		</div>

		<p>Tim: rest assured, you are definitely talking about the operating system. The internal architecture of Internet Explorer is far from rocket science, and it&#8217;s very easy to tell apart the operating system components from the application from the front-end once you&#8217;ve worked with it a little. What you experience is a WinInet limitation, and WinInet is on the operating system side of things</p>
<p>KristofU: you are doing something wrong. Custom locks should never require more than an O(1) number of operating system locks. Critical sections in Windows Vista and later use exactly one kernel lock per process, to give you an idea</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-478623">
				<div id="div-comment-478623" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Norman Diamond</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070301-00/?p=27803#comment-478623">
			March 1, 2007 at 10:13 pm</a>		</div>

		<p>It took a while to figure out what I was doing wrong when I tried to open four Internet Explorer windows on one computer running Windows 98. &nbsp;The limit was three[*]. &nbsp;What I was doing wrong was using Windows 98, though not by choice.</p>
<p>It also took a while to figure out what I was doing wrong when using the ftp command in a DOS prompt window and doing an mget *. &nbsp;The limit is 511. &nbsp;When an ftp server had 580 files in one directory, Windows didn&#8217;t fall apart, it just silently pretended to complete successfully.</p>
<p>I still haven&#8217;t figured out what the maximum length of a pathname is when right-clicking and selecting to delete a file. &nbsp;If the pathname were really too long then Internet Explorer would have refused to save the web page in the first place, though of course not saying why it was refusing. &nbsp;But yeah, if I think about it, I can still figure out what I&#8217;m doing wrong.</p>
<p>[* I saw a higher limit in a foreign language version of Windows 98, but that didn&#8217;t help the one I had to use.]</p>
<p>Thursday, March 01, 2007 9:26 PM by Puckdropper</p>
<p>&gt; Why can&#8217;t I allocate more memory to a Virtual</p>
<p>&gt; PC than my system has RAM?</p>
<p>To the best of my understanding, Virtual PC doesn&#8217;t permit that RAM to be paged. &nbsp;When the CPU is executing instructions in the guest machine, the RAM is really still in RAM. &nbsp;The guest OS can do its own paging within that area.</p>
<div class="post">[<i>Sigh. One article without a nitpicker&#8217;s corner and look what happens. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-dean-harding odd alt thread-odd thread-alt depth-1" id="comment-478633">
				<div id="div-comment-478633" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Dean+Harding' rel='external nofollow' class='url'>Dean Harding</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070301-00/?p=27803#comment-478633">
			March 1, 2007 at 10:33 pm</a>		</div>

		<p>Actually, I just noticed that denis was talking about 64-bit Windows, where the stack is not the limiting factor.</p>
<p>He said that after 37,000 thread, the system starts &quot;thrashing and becoming unresponsive&quot;. Um, if you think creating 37,000 threads is a valid solution to *any* problem, then you&#8217;ve got more to worry about than just &quot;limitations&quot; in Windows&#8230;</p>
<p>I think it&#8217;s probably time for Windows to introduce another &quot;arbitrary&quot; limit &#8212; create more than 5,000 threads (or so) and you simply get an ERROR_TOO_MANY_THREADS (or something) from CreateThread&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-drpizza even thread-even depth-1" id="comment-478713">
				<div id="div-comment-478713" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Dr+Pizza' rel='external nofollow' class='url'>Dr Pizza</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070301-00/?p=27803#comment-478713">
			March 2, 2007 at 7:08 am</a>		</div>

		<p>MAX_PATH is the devil. &nbsp;It&#8217;s totally crap that there are APIs hither and yon that are restricted to MAX_PATH paths, and can&#8217;t use \? escapes.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-478723">
				<div id="div-comment-478723" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Steve</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070301-00/?p=27803#comment-478723">
			March 2, 2007 at 8:49 am</a>		</div>

		<p>@Drak</p>
<p>Pretty good, depending. The default stack size used in stuff created by Visual Studio is 1MB but you can tune it down and many apps do. It up to the dev to understand the stack requirements for his code and adjust accordingly. To follow the logical direction of your question, yes, you theoretically could set your default stack size to 512K and get twice as many threads in the process, but why?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-478743">
				<div id="div-comment-478743" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Xavi</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070301-00/?p=27803#comment-478743">
			March 2, 2007 at 8:55 am</a>		</div>

		<blockquote><p>
  Just out of curiosity: what are the chances of a normal program (no infinite</p>
<p>  recursion mistakes) running out of stack space?
</p></blockquote>
<p>Anything that uses alloca() is potentially a candidate, like W2A character conversion.</p>
<p>This macro is realized with alloca(), large strings (BSTRs allow to carry binary data) might blast the stack.</p>
<p>However, no problem, world is full of limits.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-478753">
				<div id="div-comment-478753" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Hayden</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070301-00/?p=27803#comment-478753">
			March 2, 2007 at 9:10 am</a>		</div>

		<p>@Mihai, KJK::Hyperion: Ha! And then you give LINK.EXE a file to read, and lo! it barfs if the file contains more than 128KB of text without a newline. Even if that text is whitespace-separated filenames. WTF?</p>
<p>Some build tools (well, jam.exe) generate submit files without embedded newlines. And why shouldn&#8217;t they?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-478763">
				<div id="div-comment-478763" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">C Gomez</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070301-00/?p=27803#comment-478763">
			March 2, 2007 at 10:20 am</a>		</div>

		<p>The arrogance of most commenters is that they inject the words: &quot;It is wrong to even think about such limits.&quot;</p>
<p>I don&#8217;t think Raymond would ever feel you shouldn&#8217;t explore and research some of those limits for the pure academia of it. &nbsp;But the reality is, most applications are pretty simple&#8230; and should be getting simpler.</p>
<p>It goes along with alot of the stupid things developers do and then blame MSFT.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-478823">
				<div id="div-comment-478823" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Mark Richards</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070301-00/?p=27803#comment-478823">
			March 2, 2007 at 10:54 am</a>		</div>

		<p>I agree with Raymond in principle, that often limits are not meant to be ever reached, but I have to disagree with certain limits that others have discussed here: &nbsp;The max length of a command line and the max length of a URL in IE (and possibly other browsers).</p>
<p>The problem is that there isn&#8217;t a good reason for limiting these features; on one hand URLs shouldn&#8217;t be too long because users type them in, except that now URLs are generated by machines who don&#8217;t mind typing long meaningless strings. &nbsp;Sure, there are memory considerations, but if a client process &nbsp;(IE) doesn&#8217;t have enough memory to encode the URL, it&#8217;s not likely to have enough left to render the page. &nbsp;Where I work we like long URLS because they let our users bookmark the resulting page, something that you can&#8217;t do with POST.</p>
<p>The maximum command line length is also a major problem, at times, for Java developers who want to load a lot of JAR files onto their classpath using a .bat file. &nbsp;I&#8217;ve worked on large projects where I needed to rename my jar files to one character names and put them all in one directory before I could fit them on the classpath which is entered on the command line. &nbsp;Now you may tell me to use shorter names, or fewer jar files, but I think this is dodging the issue; there&#8217;s no usability reason for having a hard-coded limit on command line length, so any limit is arbitrary and thus annoying. &nbsp;Sure, maybe the limit has sound technical reasons, but that doesn&#8217;t make it less of a problem. &nbsp;I ended up having to resort to a custom program to launch my Java app so that the long path names wouldn&#8217;t be a problem. &nbsp;</p>
<p>Some limits make sense, most should never be reached, but some limits are bugs, deficiencies in the underlying system; no two ways about it.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-479003">
				<div id="div-comment-479003" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">John Hensley</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070301-00/?p=27803#comment-479003">
			March 2, 2007 at 2:39 pm</a>		</div>

		<p>It isn&#8217;t the &quot;OS/application&quot; divide that&#8217;s muddy, Tim. It&#8217;s your appreciation of what modern applications need from an OS. We&#8217;re pretty far past the days when some device drivers and a command prompt were enough.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-478733">
				<div id="div-comment-478733" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Marco M.</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070301-00/?p=27803#comment-478733">
			March 2, 2007 at 8:55 am</a>		</div>

		<p>Drak: &quot;Just out of curiosity: what are the chances of a normal program (no infinite recursion mistakes) running out of stack space?&quot;</p>
<p>It depends on your definition of &quot;normal program&quot;.</p>
<p>There are two main reasons for stack overflow : either you alloc&#8217;ed too many or big variables on the stack, or you recursed too much. Overflowing without one of those is .. well possible but if you overflow the stack only on non recursive calls none of which alloc&#8217;s some array on the stack you have big problems around.</p>
<p>Since a typical Windows stack is 1MB, you should be quite safe from overflowing it for local variables (everyone should ask himself something before putting an array of some thousands of structures in local variables).</p>
<p>Recursion is commonly used to navigate complex data structures (the most basic require recursion is the tree). Navigating a *balanced* tree (like an RB-tree) is unlikely to overflow. For example a typical tree node is 12 bytes wide (on 32bit systems) which summed to the return pointer and adding some local var.. well let&#8217;s assume it amounts to 64bytes each call. You can then go 2^20/2^6 = 2^14 = 16384 level deep which on a balanced tree in a 2-3GB limited machine cannot happen. On unbalanced trees you can however go overflow quite easily if, for example, the tree has degenerated on a list (given the above values it suffice a degenerated tree of 16K elements to overflow).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-479063">
				<div id="div-comment-479063" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Mikkin</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070301-00/?p=27803#comment-479063">
			March 2, 2007 at 4:40 pm</a>		</div>

		<p>JerryJVL &gt;&gt; I can imagine a newbie developer needing to ask because they genuinely don&#8217;t know that these limits are so high you should not hit them unless you are doing something wrong.</p>
<p>I wonder how you know the limits are so high if you never asked. &nbsp;Is it divine inspiration, or do you just assume there are no limits unless proven otherwise by catastrophic failure? &nbsp;As an old fart who has been programming since long before newbies invented the term &quot;developer,&quot; I have seen numerous iterations of operating systems where limits were expanded beyond any reasonable need, much to everyone&#8217;s relief, only to find that after a few iterations of Moore&#8217;s law they became legacy constraints that had to be worked around.</p>
<p>Raymond is right that anyone pushing these limits on nesting windows and menus is doing the wrong thing. &nbsp;But asking whether there *are* any practical limits is not wrong, it is responsible and prudent. &nbsp;Sorry if this seems like picking a nit, but being cognizant of limits and tolerances is one of the distinguishing characteristics of engineering. &nbsp;You have to ask.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-479073">
				<div id="div-comment-479073" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Gabe</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070301-00/?p=27803#comment-479073">
			March 3, 2007 at 1:57 am</a>		</div>

		<p>IE actually has a good reason for limiting the length of a URL: security. The longer the URL, the more room there is for XSS attacks and such. Making the URL shorter makes some attacks impossible or that much more difficult.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-479183">
				<div id="div-comment-479183" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Norman Diamond</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070301-00/?p=27803#comment-479183">
			March 4, 2007 at 9:53 pm</a>		</div>

		<p>&gt; One article without a nitpicker&#8217;s corner and</p>
<p>&gt; look what happens.</p>
<p>Then take another look at this:</p>
<p>&gt; If you have to ask, you&#8217;re probably doing</p>
<p>&gt; something wrong</p>
<p>OK, the title wasn&#8217;t nitpicking, it was just mildly offensive without nitpicking. &nbsp;Do you really think it would be better to match mild offences with informationless mild offences instead of pointing out what made it that way?</p>
<div class="post">[<i>The whole point of the title is to be catchy. To do that, one tends to overstate things for effect. Welcome to the craft of writing. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-479333">
				<div id="div-comment-479333" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Mikkin</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070301-00/?p=27803#comment-479333">
			March 5, 2007 at 1:01 pm</a>		</div>

		<p>&gt; one tends to overstate things for effect. </p>
<p>I totally get it Raymond. &nbsp;The charm and wit of your prose is a large part of the reason your blog is on my daily sweep. Keep it up. </p>
<div class=post>[<i>Too bad other people don&#8217;t get it. Maybe I should just ignore those people. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-dean-harding even thread-even depth-1" id="comment-479593">
				<div id="div-comment-479593" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Dean+Harding' rel='external nofollow' class='url'>Dean Harding</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070301-00/?p=27803#comment-479593">
			March 5, 2007 at 6:11 pm</a>		</div>

		<blockquote><p>
  Maybe I should just ignore those people.
</p></blockquote>
<p>YES! In fact, do it even more &#8211; just to annoy them :)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-479603">
				<div id="div-comment-479603" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">SuperKoko</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070301-00/?p=27803#comment-479603">
			March 5, 2007 at 6:19 pm</a>		</div>

		<p>From Raymond Chen:</p>
<p>&gt; The maximum command line length for the CreateProcess function is 32767 characters.</p>
<p>I use Windows 98 SE</p>
<p>I&#8217;ve tested a program creating a child process with 50MiB of command line arguments.</p>
<p>This command line argument was created that way:</p>
<p>char* p=(char*)malloc(n+1);</p>
<p>p[n]=&#8217; &#8217;;</p>
<p>for(unsigned i=0;i&lt;=(n-8);i+=8) {</p>
<p>&nbsp;sprintf(p+i,&#8221;%08X&#8221;,i);</p>
<p>}</p>
<p>for(unsigned i=0;i&lt;n/100;i++) p[100*i]=&#8217; &#8216;;</p>
<p>On the other side, the child process simply created a file and put all the command line third parameter of WinMain in this file.</p>
<p>This results in a 50MB file.</p>
<p>Using an hex editor, I&#8217;ve seen that the contents of this file are &#8220;right&#8221;.</p>
<p>CreateProcess(argv[1],p,NULL,NULL,FALSE,0,NULL,NULL,psi,ppi)</p>
<p>Note: argv[1] is the name of the child process executable file&#8230; I call the parent program that way:</p>
<p>Parent.exe child.exe</p>
<p>Have I an hallucination?</p>
<div class=post>[<i>I think you know the answer. You&#8217;re just showing off. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-479723">
				<div id="div-comment-479723" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">640k</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070301-00/?p=27803#comment-479723">
			March 6, 2007 at 5:16 am</a>		</div>

		<p>Why aren&#8217;t all type of (in memory) storage only limited by ram+swap? That&#8217;s a design flaw in the OS! Fixed size storage are thing of the 90s.</p>
<div class="post">[<i>The limiting factor isn&#8217;t RAM or swap. It&#8217;s address space. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-479843">
				<div id="div-comment-479843" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://runesbike.com/' rel='external nofollow' class='url'>Rune</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070301-00/?p=27803#comment-479843">
			March 6, 2007 at 1:45 pm</a>		</div>

		<p>Ross mentioned &quot;P.S. If your URIs are really long, yes, you should rethink how you&#8217;re doing it. &nbsp;&quot;</p>
<p>The limit also affects mailto: URLs. Now, the useful thing to know about mailto: is that you can specify the message body within.</p>
<p>However&#8230; Keeping the mailto: tag below the 2K limit is a&#8230; Well&#8230; PITA!</p>
<p>There&#8217;s probably some COM object or other non-sense I could use, which brings us to the next point someone made&#8230; XSS attack? Well, if the alternative is using some COM object, I&#8217;d rather face the possibility of an exploitable URI.</p>
<p>Raymond: I won&#8217;t mention Desktop Heap Size this time. I&#8217;m just very grateful 64-bit Windows addressed the issue and amply so. (we faced problems both on the client and server side &#8212; you can only have a limited number of services running&#8230;)</p>
<p>&#8212;</p>
<p>Rune</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-479903">
				<div id="div-comment-479903" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Mark</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070301-00/?p=27803#comment-479903">
			March 6, 2007 at 4:04 pm</a>		</div>

		<p>Asking about the limit is very different from actually using the limit. I may be want to know the max length of command line because I want to preallocate a buffer large enough for such &#8211; what, Microsoft rather me guess that number and potentially slap a shorter max length limit on that?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-479953">
				<div id="div-comment-479953" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://lonesysadmin.net/2007/03/07/links-for-2007-03-07/' rel='external nofollow' class='url'>The Lone Sysadmin &raquo; links for 2007-03-07</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070301-00/?p=27803#comment-479953">
			March 7, 2007 at 1:18 am</a>		</div>

		<p>PingBack from <a rel="nofollow" target="_new" href="http://lonesysadmin.net/2007/03/07/links-for-2007-03-07/" rel="nofollow">http://lonesysadmin.net/2007/03/07/links-for-2007-03-07/</a></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-479963">
				<div id="div-comment-479963" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.1060.org/blogxter/publish/5' rel='external nofollow' class='url'>Steve Loughran</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070301-00/?p=27803#comment-479963">
			March 7, 2007 at 3:48 am</a>		</div>

		<p>There are actually some good reasons for having all your 60K+ TCP ports open -if you look at Jabber servers or other IM servers they do it so that clients behind a firewall can keep their connection open awaiting incoming calls. So server load is quite low (assuming most clients are idle) but port utilisation tops up. Want to host 70K users? Get another machine -real or VMWare-.</p>
<p>For the command line, one complaint is that it doesnt help Java take a long classpath. Agreed. But maybe the problem there is Java classpath setup, and the fact that java.exe doesnt take a response file, unlike, say javac.exe? Java6 lets you add entire directories to the CP in one go, but it does still use the CLASSPATH env variable, and then there is the whole endorsed directory mess. Its hard to blame MS for the screwed up command line tools of a key competitor.</p>
<p>What you can do is complain about the awfulness of Win9x bat files, which is one of the key reasons why the Ant team no longer supports Win9x: too many bugreps came in about ant.bat on win9x, and nobody wants to keep a win9x vmware image alive to replicate the problems.</p>
<p>-steve</p>
<p>ps, yes I do have a degree in Computer Science. I studied under Milner. But I also ship things that work :)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-dean-harding odd alt thread-odd thread-alt depth-1" id="comment-480153">
				<div id="div-comment-480153" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Dean+Harding' rel='external nofollow' class='url'>Dean Harding</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070301-00/?p=27803#comment-480153">
			March 7, 2007 at 8:39 pm</a>		</div>

		<p>Steve: Why would you need to use more than one port for a Jabber server? One port per user seems a little strange to say the least&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-480373">
				<div id="div-comment-480373" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Richard Crist</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070301-00/?p=27803#comment-480373">
			March 8, 2007 at 2:07 pm</a>		</div>

		<p>The best comment above is:</p>
<p>Thursday, March 01, 2007 10:20 AM by vince</p>
<p>How do I use more than 640k of RAM?&#8230;</p>
<p>My (Richard Crist) comment:</p>
<p>Innovation is made by those who push the limits. &nbsp;Granted&#8230;the innovations are most likely made by those that understand why the limits were there to begin with.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-480583">
				<div id="div-comment-480583" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.levicki.net/' rel='external nofollow' class='url'>Igor</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070301-00/?p=27803#comment-480583">
			March 9, 2007 at 9:00 am</a>		</div>

		<p>&quot;nesting tree-view items more than 255 levels deep&quot;</p>
<p>Hmm, so there is no way to create more than 255 nested folders in Windows?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-481743">
				<div id="div-comment-481743" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Alex Cohn</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070301-00/?p=27803#comment-481743">
			March 13, 2007 at 5:13 pm</a>		</div>

		<p>Yet another example: <a rel="nofollow" target="_new" href="http://www.experts-exchange.com/Programming/Languages/CPP/Q_22420157.html" rel="nofollow">http://www.experts-exchange.com/Programming/Languages/CPP/Q_22420157.html</a> The guy complains that &quot;HLMSOFTWAREMicrosoftWindows NTCurrentVersionWindowsGDIProcessHandleQuota to 50000 but it still craps out at around 10000&quot;.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-555353">
				<div id="div-comment-555353" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://ufies.org/archives/002970.html' rel='external nofollow' class='url'>UFies.org</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070301-00/?p=27803#comment-555353">
			October 2, 2007 at 12:12 am</a>		</div>

		<p>Nice post by Raymond Chen about pushing operating system limits, in saying that if you&#8217;re pushing the OS limits, nesting&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-591293">
				<div id="div-comment-591293" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://odetocode.com/Blogs/scott/archive/2008/01/17/11653.aspx' rel='external nofollow' class='url'>K. Scott Allen</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070301-00/?p=27803#comment-591293">
			January 17, 2008 at 10:57 pm</a>		</div>

		<p>Internet Explorer has no problem creating an array of 65,536 elements. var array = []; for(var&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-607733">
				<div id="div-comment-607733" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://polymathprogrammer.com/2008/03/07/optimise-your-code-later/' rel='external nofollow' class='url'>Optimise your code later | Polymath Programmer</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070301-00/?p=27803#comment-607733">
			March 7, 2008 at 6:05 am</a>		</div>

		<p>PingBack from <a rel="nofollow" target="_new" href="http://polymathprogrammer.com/2008/03/07/optimise-your-code-later/" rel="nofollow">http://polymathprogrammer.com/2008/03/07/optimise-your-code-later/</a></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-674743">
				<div id="div-comment-674743" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.iwebthereforeiam.com/2007/04/if-you-have-to-ask-youre-proba.html' rel='external nofollow' class='url'>IWebThereforeIAm</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070301-00/?p=27803#comment-674743">
			October 11, 2008 at 8:09 am</a>		</div>

		<p>If you have to ask, you&#8217;re probably doing something wrong&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

