<html>
<head>
<title>What's so special about the number 64 when it comes to TLS slots?</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>What&#8217;s so special about the number 64 when it comes to TLS slots?</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>June 13, 2016 / year-entry #123</td></tr>
<tr><td><b>Tags:</b></td><td>history</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20160613-00/?p=93655</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>36</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">That's how many there were, a long time ago.</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>
<!-- backref: Investigating an app compat problem: Part 3: Paydirt -->
Last time</a>,
we ended with the question,
"What's so special about the number 64?"
when discovering that a program crashed if it ever
got a TLS slot index greater than or equal to 64.
</p>
<p>
Versions of Windows prior to Windows 2000
supported up to 64 TLS slots.
This was codified in the constant
</p>
<pre>
#define TLS_MINIMUM_AVAILABLE 64
</pre>
<p>
but even back then, it was noted in the documentation
that 64 was merely the minimum.
According to my really ancient copy of the Win32 SDK
documentation
</p>
<blockquote CLASS=q><p>
The constant <code>TLS_<wbr>MINIMUM_<wbr>AVAILABLE</code>
defines the minimum number of TLS indices available in each process.
This minimum is guaranteed to be at least 64 for all systems. 
</p>
</blockquote>
<p>
(I found a site that has
<a HREF="http://winapi.freetechsecrets.com/win32/WIN32TlsAlloc.htm">
something very close to the original documentation</a>.)
</p>
<p>
Somehow, this got misinterpreted as
"The constant <code>TLS_<wbr>MINIMUM_<wbr>AVAILABLE</code>
defines the <u>maximum</u> number of TLS indices available in each process."
</p>
<p>
One theory is that the code was originally written
back in the days when the actual limit was indeed 64,
and the code was written based on the implementation
rather than the documentation.
(Possibly because they either got a source code license
or reverse-engineered the function and observed that
<code>Tls&shy;Alloc</code>
always returned a value less than 64.)
</p>
<p>
I'm not entirely convinced of this theory
because the maximum number of TLS slots increased in
Windows 2000,
but the program in question was released in 2007.
</p>
<p>
On the other hand,
this theory could still be valid
the program was using a library
that was originally written pre-2000.
Even though the program itself was written
after 2000,
parts of it were written before 2000,
back when the TLS limit was 64.
</p>
<p>
Another theory is that somebody "heard from somewhere"
that TLS slots will never go higher than 63,
and they simply believed it.
</p>
<p>
Maybe you can come up with your own theory.
Share it in the comments.</p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (36)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-1252235">
				<div id="div-comment-1252235" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Damien</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160613-00/?p=93655#comment-1252235">
			June 13, 2016 at 7:15 am</a>		</div>

		<p>&#8220;If I want my program to be able to run on all possible systems, I mustn&#8217;t use more than 64 TLS slots&#8221; &#8211; I.e. they&#8217;re ignoring the fact that the system will implicitly tell them via a failed call when they hit the *actual* limit.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1 parent" id="comment-1252245">
				<div id="div-comment-1252245" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">ElectronShepherd</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160613-00/?p=93655#comment-1252245">
			June 13, 2016 at 7:17 am</a>		</div>

		<p>&#8220;The constant TLS_MINIMUM_AVAILABLE defines the minimum number of TLS indices available in each process. This minimum is guaranteed to be at least 64 for all systems.&#8221; </p>
<p>I would read that as &#8220;if you want to guarantee your program works everywhere, don&#8217;t use more than 64 slots, since it might not work&#8221;. </p>
<p>Since most people writing software do want it to run everywhere, that effectively makes 64 the maximum. </p>
<p>Even now, the documentation for TlsGetValue ( <a href="https://msdn.microsoft.com/en-us/library/windows/desktop/ms686812.aspx" rel="nofollow">https://msdn.microsoft.com/en-us/library/windows/desktop/ms686812.aspx</a> ) says</p>
<p>&#8220;In particular, it succeeds if dwTlsIndex is in the range 0 through (TLS_MINIMUM_AVAILABLE– 1).&#8221;</p>
<p>which implies it will fail with a dwTlsIndex of more than TLS_MINIMUM_AVAILABLE.</p>

		
				</div>
		<ol class="children">
		<li class="comment even depth-2" id="comment-1252265">
				<div id="div-comment-1252265" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joel Schultz</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160613-00/?p=93655#comment-1252265">
			June 13, 2016 at 7:43 am</a>		</div>

		<p>@ElectronShepherd</p>
<p>“In particular, it succeeds if dwTlsIndex is in the range 0 through (TLS_MINIMUM_AVAILABLE– 1).”</p>
<p>No conclusions can be drawn from that sentence about whether the function succeeds or fails when dwTlsIndex &gt;= TLS_MINIMUM_AVAILABLE.  All that sentence says says is that you get an automatic &#8220;success&#8221; if it is less than that.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-oldnewthing bypostauthor odd alt depth-2" id="comment-1252315">
				<div id="div-comment-1252315" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Raymond+Chen+-+MSFT' rel='external nofollow' class='url'>Raymond Chen - MSFT</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160613-00/?p=93655#comment-1252315">
			June 13, 2016 at 10:02 am</a>		</div>

		<p>You are taking sentences out of context. The paragraph is talking about how TlsGetValue does minimal parameter validation. In particular, values in the range 0 .. (TLS_MINIMUM_AVAILABLE-1) are always considered as valid parameters, even if the index is invalid.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-archangelpip even depth-2" id="comment-1252395">
				<div id="div-comment-1252395" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Darran+Rowe' rel='external nofollow' class='url'>Darran Rowe</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160613-00/?p=93655#comment-1252395">
			June 13, 2016 at 3:46 pm</a>		</div>

		<p>This is always one of the big problems when reading documentation quickly. It is easy enough to miss really subtle things, especially when you have some preconceived notion stuck in your mind.<br />
This is why I always tend to read the documentation multiple times and slowly to try and make sure that I have it right. I also don&#8217;t rely on just one set of documentation if I have multiple sources available. Like for example, it is stated elsewhere in the MSDN that the maximum TLS slots is actually 1088. <a href="https://msdn.microsoft.com/en-us/library/windows/desktop/ms686749(v=vs.85)" rel="nofollow">https://msdn.microsoft.com/en-us/library/windows/desktop/ms686749(v=vs.85)</a>.aspx</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment odd alt thread-even depth-1" id="comment-1252255">
				<div id="div-comment-1252255" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">morlamweb</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160613-00/?p=93655#comment-1252255">
			June 13, 2016 at 7:20 am</a>		</div>

		<p>I get the sense that the implementer of the TLS_MINIMUM_AVAILABLE constant tried to head off the app compat issues by the name of the constant itself: &#8220;minimum&#8221; implies that the value could change in some future version of the OS.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-odd thread-alt depth-1 parent" id="comment-1252275">
				<div id="div-comment-1252275" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">French Guy</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160613-00/?p=93655#comment-1252275">
			June 13, 2016 at 8:08 am</a>		</div>

		<p>Maybe the code did use TLS_MINIMUM_AVAILABLE and its value was 64 at the time it was compiled, on the machine it was compiled. This is, of course, the scenario that is most generous with the programmer.</p>

		
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-cheong odd alt depth-2 parent" id="comment-1252405">
				<div id="div-comment-1252405" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/cheong00' rel='external nofollow' class='url'>cheong00</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160613-00/?p=93655#comment-1252405">
			June 13, 2016 at 7:19 pm</a>		</div>

		<p>I think it&#8217;s possible. if (tlsIndex &lt; TLS_MINIMUM_AVAILABLE) { &#8230; } doesn&#039;t sound too bad to me.</p>
<p>The developer might have expected the value in header be updated when compile symbol for target OS is changed (like when #define _WIN32_WINNT_WINXP is used)</p>

		
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-archangelpip even depth-3" id="comment-1252465">
				<div id="div-comment-1252465" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Darran+Rowe' rel='external nofollow' class='url'>Darran Rowe</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160613-00/?p=93655#comment-1252465">
			June 14, 2016 at 3:08 am</a>		</div>

		<p>That does sound bad to me though.<br />
The function does actually notify you when it fails. It tells you by returning TLS_OUT_OF_INDEXES if there are no more slots available. So instead of if (tlsindex &lt; TLS_MINIMUM_AVAILABLE) you should be using if (tlsindex != TLS_OUT_OF_INDEXES). This has the benefit of working in all situations and is actually shorter than checking against minimum available.<br />
There is another problem though. you cannot get any reasonable information out of the value of the tls index itself. The documentation for TlsAlloc states &quot;The value of the TLS index should be treated as an opaque value; do not assume that it is an index into a zero-based array.&quot; So from that I would draw the conclusion that you couldn&#039;t even guarantee the order that the indices come out is sequential. You couldn&#039;t even guarantee that the values passed out are in the range [0-64) or[0-1088).<br />
Of course, this is a more recent addition, but all it does is document that the form that the index takes is undocumented.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt depth-3 parent" id="comment-1252475">
				<div id="div-comment-1252475" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ivan K</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160613-00/?p=93655#comment-1252475">
			June 14, 2016 at 3:23 am</a>		</div>

		<p>Well TLS_MINIMUM_AVALABLE is still defined as 0x40 in the &#8220;8.1&#8221; Windows SDK headers on my machine, so 64 will still be baked into that code on recompile.<br />
At any rate, there is a blog post I found from 2007 called &#8220;Thread Local Storage, part 2: Explicit TLS&#8221; which includes the number 64 in what seems to be an example (or maybe hand-decompiled?) implementation of TlsGetValue() &#8211; I&#8217;m not sure because I only spent a couple minutes googling and wondering about reasons. I won&#8217;t bother posting the url, but a search should find it.</p>

		
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-cheong even depth-4 parent" id="comment-1252716">
				<div id="div-comment-1252716" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/cheong00' rel='external nofollow' class='url'>cheong00</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160613-00/?p=93655#comment-1252716">
			June 14, 2016 at 6:27 pm</a>		</div>

		<p>Well, I said &#8220;The developer might have expected&#8230;&#8221; doesn&#8217;t mean it really happened.</p>
<p>And btw, what&#8217;s the use of including it in the header files if it&#8217;s not really updated? Is there any place that this constant has any real use for developers?</p>

		
				</div>
		<ol class="children">
		<li class="comment odd alt depth-5" id="comment-1252775">
				<div id="div-comment-1252775" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ivan K</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160613-00/?p=93655#comment-1252775">
			June 15, 2016 at 11:06 am</a>		</div>

		<p>Yeah sorry about my choice of wording. I tried to combine two answers in one reply. And you&#8217;re right of course. I think most of that was my surprise that it hadn&#8217;t changed. Anyway, I think the headers were processor specific so it makes sense to expect that it might change.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1 parent" id="comment-1252285">
				<div id="div-comment-1252285" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160613-00/?p=93655#comment-1252285">
			June 13, 2016 at 8:18 am</a>		</div>

		<p>There&#8217;s only one thing I&#8217;m not getting. The DLL appears to have died in the application&#8217;s own installer (notice how it isn&#8217;t a MSI installer); what could have changed so that it&#8217;s using up so many TLS slots now?</p>

		
				</div>
		<ol class="children">
		<li class="comment odd alt depth-2" id="comment-1252365">
				<div id="div-comment-1252365" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://harryjohnston.wordpress.com' rel='external nofollow' class='url'>Harry Johnston</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160613-00/?p=93655#comment-1252365">
			June 13, 2016 at 2:46 pm</a>		</div>

		<p>Perhaps Windows started using one or more slots?  Or if the program was linked against mscvrt.dll (which it shouldn&#8217;t be, in 2007, but it wouldn&#8217;t surprise me) that might have started using some?</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment byuser comment-author-ted-2 even thread-odd thread-alt depth-1 parent" id="comment-1252295">
				<div id="div-comment-1252295" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Glassware' rel='external nofollow' class='url'>Glassware</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160613-00/?p=93655#comment-1252295">
			June 13, 2016 at 8:24 am</a>		</div>

		<p>Raymond &#8211; about your comment &#8211; &#8220;I&#8217;m not entirely convinced of this theory because the maximum number of TLS slots increased in Windows 2000, but the program in question was released in 2007.&#8221;</p>
<p>That&#8217;s very true, but remember, in normal operation this bug is harmless.  If someone wrote a shared code library looking for TLS slots, and it interpreted a number &gt; 64 as a failure, any code that used it would generally work just fine.  The only error was a false negative &#8211; the code thinks the use case where TlsAlloc returns a value greater than 64 was a failure, but it was a success.  So if a program written post-2000 used this code, it would just sometimes think they had run out of TLS slots.</p>
<p>The only problem only caused an app compatibility crash when there were multiple failures &#8211; code using the &gt; 64 assumption, plus other code that assumed that the first batch of code always succeeded.</p>
<p>Next question: What was the resolution to this?  Did you add a compatibility shim in TlsAlloc for this app to always return 0-63, or was there a more clever solution that tricked the code into accepting numbers &gt; 64?</p>

		
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-oldnewthing bypostauthor odd alt depth-2 parent" id="comment-1252325">
				<div id="div-comment-1252325" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Raymond+Chen+-+MSFT' rel='external nofollow' class='url'>Raymond Chen - MSFT</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160613-00/?p=93655#comment-1252325">
			June 13, 2016 at 10:19 am</a>		</div>

		<p>The f_314272e0 function allocates a TLS slot, tries to initialize it, and when initialization fails, it forgets to free the TLS slot. It wasn&#8217;t shown in the article, but the calling code checks whether TLS slot was allocated (by performing the erroneous comparison against zero). Therefore, the bug is all in the helper library, where its error handling code was apparently never tested.</p>

		
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-ted-2 even depth-3" id="comment-1252345">
				<div id="div-comment-1252345" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Glassware' rel='external nofollow' class='url'>Glassware</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160613-00/?p=93655#comment-1252345">
			June 13, 2016 at 11:08 am</a>		</div>

		<p>I&#8217;m impressed &#8211; that&#8217;s an amazing amount of debugging.  I once had to do a 6809 disassembly project many decades ago and I recall it took me a month to figure out the purposes behind the various bits of code.  May I ask how long this overall research took?</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment odd alt thread-even depth-1" id="comment-1252335">
				<div id="div-comment-1252335" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Myria</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160613-00/?p=93655#comment-1252335">
			June 13, 2016 at 10:51 am</a>		</div>

		<p>Is the limit on the number of loaded modules (.exe, .dlls) that use __declspec(thread) still 64, or is that limit gone now, too?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-alexcohn even thread-odd thread-alt depth-1" id="comment-1252346">
				<div id="div-comment-1252346" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Alex+Cohn' rel='external nofollow' class='url'>Alex Cohn</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160613-00/?p=93655#comment-1252346">
			June 13, 2016 at 11:09 am</a>		</div>

		<p>It&#8217;s probably a coincedence, but the article <a href="http://www.nynaeve.net/?p=181" rel="nofollow">http://www.nynaeve.net/?p=181</a>, also dated 2007, remembers an (outdated by then) limit of 64 TLS slots:</p>
<p>&gt; The TlsSlots array in the TEB is a part of every thread, which gives each thread a guaranteed set of 64 thread local storage indexes. Later on, Microsoft decided that 64 was not enough TLS slots to go around and added the TlsExpansionSlots array, for an additional 1024 TLS slots. The TlsExpansionSlots array is demand-allocated in TlsAlloc if the initial set of 64 slots is exceeded.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-even depth-1 parent" id="comment-1252375">
				<div id="div-comment-1252375" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://harryjohnston.wordpress.com' rel='external nofollow' class='url'>Harry Johnston</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160613-00/?p=93655#comment-1252375">
			June 13, 2016 at 2:48 pm</a>		</div>

		<p>Perhaps elsewhere in the program (or in other programs used by the same library) they were using a 5-bit field to store the indexes?</p>

		
				</div>
		<ol class="children">
		<li class="comment even depth-2" id="comment-1252385">
				<div id="div-comment-1252385" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://harryjohnston.wordpress.com' rel='external nofollow' class='url'>Harry Johnston</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160613-00/?p=93655#comment-1252385">
			June 13, 2016 at 2:48 pm</a>		</div>

		<p>Uh, make that a 6-bit field.  D&#8217;oh!</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1 parent" id="comment-1252425">
				<div id="div-comment-1252425" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">xcomcmdr</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160613-00/?p=93655#comment-1252425">
			June 14, 2016 at 12:29 am</a>		</div>

		<p>I don&#8217;t know what happened, but at least all the recent posts are harder to read thanks to some obsolete 80 colums limit applied to the entire text.</p>
<p>It wasn&#8217;t like that yesterday.</p>
<p>Can it be fixed, pretty please ?</p>

		
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-raykoopa even depth-2 parent" id="comment-1252435">
				<div id="div-comment-1252435" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Ray+Koopa' rel='external nofollow' class='url'>Ray Koopa</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160613-00/?p=93655#comment-1252435">
			June 14, 2016 at 12:42 am</a>		</div>

		<p>And I thought,<br />
due to those many linebreaks,<br />
that Raymond decided,<br />
in a moment of great ideas,<br />
to write poems,<br />
rather than blog articles.</p>

		
				</div>
		<ol class="children">
		<li class="comment odd alt depth-3 parent" id="comment-1252445">
				<div id="div-comment-1252445" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Yuri Khan</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160613-00/?p=93655#comment-1252445">
			June 14, 2016 at 1:10 am</a>		</div>

		<p>I think<br />
something has changed<br />
in the source-to-HTML formatter.<br />
Where the old one removed line breaks,<br />
the new one inserts a hard line break.</p>
<p>It’s surprising<br />
how not all blog software<br />
has embraced Markdown yet.</p>

		
				</div>
		<ol class="children">
		<li class="comment even depth-4" id="comment-1252495">
				<div id="div-comment-1252495" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Klimax</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160613-00/?p=93655#comment-1252495">
			June 14, 2016 at 4:45 am</a>		</div>

		<p>Because not everybody likes Markdown.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt depth-4 parent" id="comment-1252505">
				<div id="div-comment-1252505" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Karellen</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160613-00/?p=93655#comment-1252505">
			June 14, 2016 at 5:53 am</a>		</div>

		<p>Because raw HTML <em>is not hard to learn or write</em>, has only one (extended over the years, but backwards-compatible) syntax, and is generally more useful to know.</p>
<p>I&#8217;ve never seen the point of Markdown. Why not just use HTML? It really is not that complicated, especially if you start simple with, e.g. , and extend from there.</p>

		
				</div>
		<ol class="children">
		<li class="comment even depth-5" id="comment-1252515">
				<div id="div-comment-1252515" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Karellen</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160613-00/?p=93655#comment-1252515">
			June 14, 2016 at 5:57 am</a>		</div>

		<p>Sorry, that was meant to read &#8220;&lt;em&gt;is not hard to learn or write&lt;/em&gt;&#8221; and &#8220;&#8230;with, e.g. &lt;h1&gt;, and&#8230;&#8221;</p>
<p>(Last time I posted a comment where it was an issue, &#8220;&lt;&#8221; was auto-escaped and worked as a less-than sign. Looks like you can now post (some) HTML in your comments&#8230;)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt depth-5" id="comment-1252625">
				<div id="div-comment-1252625" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Yuri Khan</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160613-00/?p=93655#comment-1252625">
			June 14, 2016 at 9:43 am</a>		</div>

		<p>You illustrate the point perfectly.</p>
<p>I’d be all for HTML if (1) it worked consistently everywhere, (2) everyone would bother to learn it, and (3) each HTML comment were validated. However, it doesn’t, they don’t, and they aren’t.</p>
<p>Some blogs accept a limited subset of HTML. Some accept only plain text. Some accept a subset of HTML but also turn newlines into &lt;br&gt;s. Some (like this one) change the rules during upgrades, without bothering to convert or special-case the existing content.</p>
<p>Markdown is not ideal, but it has sensible newline handling, and it is simple enough that most ordinary people won’t botch it.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment even depth-3" id="comment-1252485">
				<div id="div-comment-1252485" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Klimax</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160613-00/?p=93655#comment-1252485">
			June 14, 2016 at 4:45 am</a>		</div>

		<p>Interestingly, article in RSS feed is formatted correctly.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment byuser comment-author-fleet-command odd alt thread-even depth-1 parent" id="comment-1252455">
				<div id="div-comment-1252455" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Fleet+Command' rel='external nofollow' class='url'>Fleet Command</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160613-00/?p=93655#comment-1252455">
			June 14, 2016 at 2:33 am</a>		</div>

		<p>What&#8217;s with all those manual line breaks?</p>

		
				</div>
		<ol class="children">
		<li class="comment even depth-2 parent" id="comment-1252526">
				<div id="div-comment-1252526" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">John Elliott</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160613-00/?p=93655#comment-1252526">
			June 14, 2016 at 7:04 am</a>		</div>

		<p>It does make the articles read a little like <a href="https://en.wikipedia.org/wiki/The_Story_of_Mel" rel="nofollow">The Story Of Mel</a>.</p>

		
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-raykoopa odd alt depth-3 parent" id="comment-1252585">
				<div id="div-comment-1252585" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Ray+Koopa' rel='external nofollow' class='url'>Ray Koopa</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160613-00/?p=93655#comment-1252585">
			June 14, 2016 at 8:30 am</a>		</div>

		<p>It sure has an artistic touch!</p>

		
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-fleet-command even depth-4 parent" id="comment-1252635">
				<div id="div-comment-1252635" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Fleet+Command' rel='external nofollow' class='url'>Fleet Command</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160613-00/?p=93655#comment-1252635">
			June 14, 2016 at 11:08 am</a>		</div>

		<p>Raymond can&#8217;t do anything wrong in the fans&#8217; eyes, eh? Not that I am complaining. I myself was a fan of Mark R. until he joined Microsoft and became a novelist, writing novels that are more boring than a Windows Installer log.</p>

		
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-archangelpip odd alt depth-5" id="comment-1252665">
				<div id="div-comment-1252665" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Darran+Rowe' rel='external nofollow' class='url'>Darran Rowe</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160613-00/?p=93655#comment-1252665">
			June 14, 2016 at 12:58 pm</a>		</div>

		<p>It is because he didn&#8217;t do anything here.<br />
When the post was first posted (Monday 13th June), it displayed fine. It was only later (I noticed it myself today, Tuesday 14th June) that the post was messed up. Today&#8217;s post is messed up too. If you read the comments for that, he did mention that the blog software was adding in extra tags which was messing up the formatting.<br />
If there is any potential for &#8220;doing something wrong&#8221; here, you could see it as posting on the MSDN blogs?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even depth-5" id="comment-1252725">
				<div id="div-comment-1252725" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">xcomcmdr</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160613-00/?p=93655#comment-1252725">
			June 15, 2016 at 1:04 am</a>		</div>

		<p>&gt; Raymond can’t do anything wrong in the fans’ eyes, eh?</p>
<p>Well, so far the only PITA around here is you.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1252525">
				<div id="div-comment-1252525" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">OldFart</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160613-00/?p=93655#comment-1252525">
			June 14, 2016 at 6:51 am</a>		</div>

		<p>I guess I don&#8217;t understand how the TLS_MINIMUM_AVALIABLE constant is useful in any way, other than to confuse people.  It reminds me of those sales promotions that say &#8220;Save up to 50% or more.&#8221;</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

