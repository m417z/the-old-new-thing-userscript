<html>
<head>
<title>Things you already know: How do I wait until my dialog box is displayed before doing something?</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>Things you already know: How do I wait until my dialog box is displayed before doing something?</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>September 22, 2006 / year-entry #324</td></tr>
<tr><td><b>Tags:</b></td><td>code</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20060922-03/?p=29623</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>53</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">One customer wanted to wait until the dialog box was displayed before displaying its own dialog box. (Personally, I think immediately displaying a doubly-nested dialog box counts as starting off on the wrong foot from a usability standpoint, but let's set that issue aside for now.) The customer discovered that displaying the nested dialog box...</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>
One customer wanted to wait until the dialog box was displayed
before displaying its own dialog box.
(Personally, I think immediately displaying
a doubly-nested dialog box counts as starting off on the wrong foot
from a usability standpoint,
but let's set that issue aside for now.)
The customer discovered that displaying the nested dialog box
in response to the <code>WM_INITDIALOG</code> message was premature,
because as we all know,
<a HREF="http://blogs.msdn.com/oldnewthing/archive/2004/03/11/87941.aspx">
the <code>WM_INITDIALOG</code> is sent
before the dialog box is displayed</a>.
The question therefore is,
"How do I want until my dialog box is displayed before doing something?"
</p>
<p>
One proposed solution was the following code fragment:
</p>
<pre>
case WM_INITDIALOG:
    PostMessage(hDlg, WM_APP, 0, 0);
    return TRUE;

case WM_APP:
    ... display the second dialog ...
    break;
</pre>
<ol>
<li>Why is this wrong?
    Hint: You definitely know the answer to this already.</p>
<li>What is the correct solution?
    You probably know this already.
</ol>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (53)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-422943">
				<div id="div-comment-422943" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">John Elliott</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060922-03/?p=29623#comment-422943">
			September 22, 2006 at 10:25 am</a>		</div>

		<p>I&#8217;ve used the first WM_PAINT for something similar, on the grounds that if the window&#8217;s being painted it&#8217;s probably visible. Feel free to wince, tell me that it won&#8217;t work in Vista, etc.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-422983">
				<div id="div-comment-422983" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Orion Adrian</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060922-03/?p=29623#comment-422983">
			September 22, 2006 at 10:57 am</a>		</div>

		<p>&quot;I&#8217;ve used the first WM_PAINT for something similar, on the grounds that if the window&#8217;s being painted it&#8217;s probably visible. Feel free to wince, tell me that it won&#8217;t work in Vista, etc.&quot;</p>
<p>I don&#8217;t like adding any overhead to WM_PAINT so, to me, this is a bad idea.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-mike-dimmick even thread-even depth-1" id="comment-422993">
				<div id="div-comment-422993" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Mike+Dimmick' rel='external nofollow' class='url'>Mike Dimmick</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060922-03/?p=29623#comment-422993">
			September 22, 2006 at 11:08 am</a>		</div>

		<p>The overriding issue here is the priority of messages retrieved by GetMessage: first sent messages, then posted messages, input messages, then finally paint messages are generated if there are any invalid regions, and right at the end timer messages.</p>
<p>You can pretty much assume that when WM_PAINT returns (and there are no more invalid regions, although it&#8217;s a bad WM_PAINT handler that doesn&#8217;t do all its painting in one pass) that the window is displayed, although IIRC child windows are painted after their parent &#8211; in fact painting should occur in Z-order, back to front &#8211; so the dialog&#8217;s controls won&#8217;t be fully painted until the last child&#8217;s WM_PAINT returns.</p>
<p>On Vista with Glass presumably some notification is given to DWM that there is no more painting to do and it can now update the texture on the window client area.</p>
<p>So you could always use a timer. When the timer fires you can guarantee that no more painting is required. Feels a bit kludgy, though.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-423013">
				<div id="div-comment-423013" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.mark-ingram.com' rel='external nofollow' class='url'>Mark Ingram</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060922-03/?p=29623#comment-423013">
			September 22, 2006 at 11:14 am</a>		</div>

		<p>1) There will be a short delay before the 2nd dialog is displayed (due to other message processing?)<br />
<br />2) WM_ACTIVATE?<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-423023">
				<div id="div-comment-423023" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Maxime LABELLE</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060922-03/?p=29623#comment-423023">
			September 22, 2006 at 11:15 am</a>		</div>

		<p>I&#8217;ve always used a WM_TIMER for this. Perhaps handling WM_WINDOWPOSCHANGED once is better?</p>
<p>I fail to see why posting WM_APP is a bad idea though. After all, WM_APP is specific to the application, right?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-423033">
				<div id="div-comment-423033" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Doug</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060922-03/?p=29623#comment-423033">
			September 22, 2006 at 11:18 am</a>		</div>

		<p>Because your main line window processor does not run until the dialog exits.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-423043">
				<div id="div-comment-423043" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Mike</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060922-03/?p=29623#comment-423043">
			September 22, 2006 at 11:24 am</a>		</div>

		<p>But it doesn&#8217;t need to &#8211; DialogBox would have a modal message loop in it, so posted messages would still get through.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-423053">
				<div id="div-comment-423053" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Matthew Douglass-Riley</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060922-03/?p=29623#comment-423053">
			September 22, 2006 at 11:45 am</a>		</div>

		<p>&quot;Personally, I think immediately displaying a doubly-nested dialog box counts as starting off on the wrong foot from a usability standpoint, but let&#8217;s set that issue aside for now.&quot;</p>
<p>Right-click the clock in the notification area and select &quot;Customize Notifications&#8230;&quot;. &nbsp;Watch as the taskbar properties dialog comes up and is immediately occluded by the Customize Notifications dialog. &nbsp;You opened one dialog but have to dismiss two.</p>
<p>Not saying you&#8217;re wrong, and not blaming you for this, but it /is/ in the Windows shell&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-423073">
				<div id="div-comment-423073" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joe</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060922-03/?p=29623#comment-423073">
			September 22, 2006 at 11:52 am</a>		</div>

		<p>Yo Matthew Douglass-Riley &#8211; &nbsp;Raymond made a post about this kind of comment and its worth reading.</p>
<p>The people that right the shell are just that&#8230;people. &nbsp;they make mistakes too!</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-423093">
				<div id="div-comment-423093" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Shawn</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060922-03/?p=29623#comment-423093">
			September 22, 2006 at 12:00 pm</a>		</div>

		<p>Seems that it&#8217;s not a modal dialog so WM_ENTERIDLE does not work.<br />
<br />WM_ACTIVATE could not work either.<br />
<br />WM_SETFOCUS?<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-423123">
				<div id="div-comment-423123" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://iglowindark.blogspot.com' rel='external nofollow' class='url'>gid</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060922-03/?p=29623#comment-423123">
			September 22, 2006 at 12:25 pm</a>		</div>

		<p>If the first dialog box is modal, I&#8217;d show the 2nd dialog box in response to the first WM_SHOWWINDOW message.</p>
<p>If the first dialog box is modaless, then it&#8217;s just CreatDialog(), ShowWindow(), then display the 2nd dialog box.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-423133">
				<div id="div-comment-423133" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://qstuff.blogspot.com/' rel='external nofollow' class='url'>Justin Olbrantz (Quantam)</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060922-03/?p=29623#comment-423133">
			September 22, 2006 at 12:42 pm</a>		</div>

		<p>Reminds me of &lt;a href=&quot;<a rel="nofollow" target="_new" href="http://qstuff.blogspot.com/2006/07/animation-control-incident.html&quot;&gt;this&lt;/a&gt;" rel="nofollow"></a><a href="http://qstuff.blogspot.com/2006/07/animation-control-incident.html&quot;&gt;this&lt;/a&#038;gt" rel="nofollow">http://qstuff.blogspot.com/2006/07/animation-control-incident.html&quot;&gt;this&lt;/a&#038;gt</a>;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-423173">
				<div id="div-comment-423173" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Mike Jones</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060922-03/?p=29623#comment-423173">
			September 22, 2006 at 1:22 pm</a>		</div>

		<p>I bet the &quot;wrong&quot; code would work in practice.<br />
<br />Doesn&#8217;t WM_APP get queued beside the other stuff so will arrive after WM_ACTIVATE (or whatever).<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-423183">
				<div id="div-comment-423183" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Boogie</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060922-03/?p=29623#comment-423183">
			September 22, 2006 at 1:42 pm</a>		</div>

		<p>I don&#8217;t use dialogs, ever.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-423203">
				<div id="div-comment-423203" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Richard</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060922-03/?p=29623#comment-423203">
			September 22, 2006 at 2:20 pm</a>		</div>

		<p>I always work at a higher level than the windows API, but I&#8217;m guessing that the dialog response is passed to the application through a message &#8211; handle that message and use it to display the second dialog unless the user cancelled the first one. Or just display the second dialog with an option to cancel :)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-423213">
				<div id="div-comment-423213" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Christian</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060922-03/?p=29623#comment-423213">
			September 22, 2006 at 2:28 pm</a>		</div>

		<p>I had a similar problem with .NET and want to know the answer. I used a timer bad then and felt very guilty.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-423243">
				<div id="div-comment-423243" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://wendyhome.com' rel='external nofollow' class='url'>:: Wendy::</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060922-03/?p=29623#comment-423243">
			September 22, 2006 at 2:47 pm</a>		</div>

		<p>I hate it when I select one menu item, &nbsp;or make one click (on a webpage) and more that one thing (window and, &nbsp;or, &nbsp;dialog) &nbsp;pops up on my screen.</p>
<p>I hate it more when one or more of the multiple things that popped-up are not &#8216;together&#8217; (one may be at the bottom of a pile of things I actually wanted to open).</p>
<p>Almost unimaginably worse still is when I try to click on what I think is the dialog I&#8217;ve just opened and it makes a flat &#8216;boink&#8217; noise at me and tells me I&#8217;ve got some open dialog box somewhere without just bringing it to the foreground so I have to go off searching amongst numerous open windows (dialogs), &nbsp;Outlook does this when I&#8217;ve left an address-book search open. &nbsp;</p>
<p>Just don&#8217;t nest your dialogs. &nbsp;don&#8217;t Don&#8217;t don&#8217;t, &nbsp;be creative, &nbsp;there must be a creative solution, &nbsp;you can do it&#8230;.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-423263">
				<div id="div-comment-423263" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Andrew</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060922-03/?p=29623#comment-423263">
			September 22, 2006 at 2:59 pm</a>		</div>

		<blockquote><p>
  Why is this wrong? Hint: You definitely know the answer to this already. </p>
<p>I didn&#8217;t see an answer to this, so here goes. The WM_APP message is being posted when WM_INITDIAG is processed. Raymond already said that the dialog is not displayed when WM_INITDIAG is sent so why would the posted WM_APP message be processed after it is displayed?
</p></blockquote>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-423303">
				<div id="div-comment-423303" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Chris</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060922-03/?p=29623#comment-423303">
			September 22, 2006 at 4:56 pm</a>		</div>

		<p>First thing that came to mind for me is that PostMessage doesn&#8217;t wait for the thread to return, so the dialog initialization will continue?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-423313">
				<div id="div-comment-423313" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">glonq</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060922-03/?p=29623#comment-423313">
			September 22, 2006 at 5:00 pm</a>		</div>

		<p>I&#8217;ve done the timer solution too :P</p>
<p>Why is the WM_APP solution bad? &nbsp;I&#8217;m not sure. &nbsp;Is it because that message gets processed immediately (therefore still too early)?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-422933">
				<div id="div-comment-422933" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Peter Ritchie</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060922-03/?p=29623#comment-422933">
			September 22, 2006 at 10:10 am</a>		</div>

		<p>I would agree, this is starting on the wrong foot.</p>
<p>But, if I *had* to do something like this I&#8217;d look into the WM_ENTERIDLE message.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-423323">
				<div id="div-comment-423323" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Stefan Kuhr</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060922-03/?p=29623#comment-423323">
			September 22, 2006 at 5:19 pm</a>		</div>

		<p>I always used the WM_APP approach in such cases. Maybe this typeahead thingie you mentioned in the link to the blogpost of 11/03/2004? You could dismiss the first dialog and the second won&#8217;t be displayed? just a random thought&#8230;</p>
<div CLASS=post>[<i>Yes, the answer to the question is the <a href="http://blogs.msdn.com/oldnewthing/archive/2004/03/11/87941.aspx" rel="nofollow">typeahead thing</a>. Imagine if the user typed-ahead an Alt+Space. The second dialog would show while the first dialog was still waiting for the menu operation to complete before it can show itself. Now on to the second question&#8230; -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-423333">
				<div id="div-comment-423333" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Stefan Kuhr</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060922-03/?p=29623#comment-423333">
			September 22, 2006 at 5:57 pm</a>		</div>

		<p>Maybe calling EnableWindow(hDlg, FALSE) in the first dialog&#8217;s WM_INITDIALOG handler before posting WM_APP?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-423353">
				<div id="div-comment-423353" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">El Guapo</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060922-03/?p=29623#comment-423353">
			September 22, 2006 at 8:11 pm</a>		</div>

		<p>You arent supposed to use WM_APP. Those are used by MFC. You are supposed to WM_USER. Where do I collect my prize?<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-423373">
				<div id="div-comment-423373" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">josh</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060922-03/?p=29623#comment-423373">
			September 23, 2006 at 1:03 am</a>		</div>

		<p>Given the description of the typeahead thing, it&#8217;s theoretically impossible. &nbsp;What if the dialog box is dismissed before it is displayed?</p>
<p>Taking the &quot;spec&quot; literally, you could also just wait until the user clicked a button. &nbsp;Presumably they&#8217;ve seen the button if they can click on it, so it is after the dialog has been displayed. &nbsp;(You&#8217;d have to look for a real click to avoid the typeahead thing, and then it&#8217;d suck for accessibility. &nbsp;But I doubt that&#8217;s high on the list of requirements.)</p>
<p>The only notifications that I see that could make sense are WM_WINDOWPOSCHANGED, WM_STYLECHANGED, or maybe WM_NCACTIVATE. &nbsp;You might get by posting a WM_USER message from WM_PAINT, but that just seems hacky. &nbsp;And I&#8217;m going to guess that all of those are wrong, because I don&#8217;t actually have a clue. &nbsp;:)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-423383">
				<div id="div-comment-423383" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ross Bemrose</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060922-03/?p=29623#comment-423383">
			September 23, 2006 at 2:20 am</a>		</div>

		<p>The answer to two is to rethink why you need to pop up two dialogs and only pop up one instead. :P</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-423393">
				<div id="div-comment-423393" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Stefan Kuhr</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060922-03/?p=29623#comment-423393">
			September 23, 2006 at 3:47 am</a>		</div>

		<p>El Guapo: WMP_APP is not at all an MFC-thingie. Actually IIRC you are discouraged to use (WM_USER+x), be it MFC or Win32 SDK-based, since the advent of Win32, because the new common controls of Windows 95 use WM_USER internally a lot. So if you enumerate child controls in your dialog and send them (WM_USER+x), they might behave very strange.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-423403">
				<div id="div-comment-423403" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">alex@zoosmart.us</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060922-03/?p=29623#comment-423403">
			September 23, 2006 at 12:57 pm</a>		</div>

		<p>can OnInitDialog be used instead of the windows messages?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-423413">
				<div id="div-comment-423413" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Tim Smith</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060922-03/?p=29623#comment-423413">
			September 23, 2006 at 1:24 pm</a>		</div>

		<p>OnInitDialog is just MFCs method that is invoked when a WM_INITDIALOG message is received.</p>
<p>MFC is mostly just a wrapper around windows messaging (WTL is an even thinner wrapper).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-423423">
				<div id="div-comment-423423" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">martin</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060922-03/?p=29623#comment-423423">
			September 23, 2006 at 1:30 pm</a>		</div>

		<p>My understanding of proper WM_USER based message usage is that they are window class specific, so if you define your own class, feel free to define your own WM_USER based messages to be received by windows using that class. &nbsp;The common controls being an example of a set of window classes, and thus define their control specific messages using WM_USER based messages.</p>
<p>So yes, enumerating child windows and sending them all the same WM_USER+x message will no doubt often result in weird behaviour.</p>
<p>Similarly WM_APP+x messages are intended to be meaningful within an application.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-423443">
				<div id="div-comment-423443" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ulric</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060922-03/?p=29623#comment-423443">
			September 23, 2006 at 4:03 pm</a>		</div>

		<p>Well it looks like this we don&#8217;t actually know for sure the answer to this one&#8230;</p>
<p>Personnally I&#8217;d post message a WM_USER message to myself on the first WM_PAINT.</p>
<p>The reason why I&#8217;m more at ease with WM_PAINT is that when that message comes in, it&#8217;s REALLY because the dialog is visible to the user after that message.</p>
<p>The active and focus message are to consider, but really in some cases dialogs are not active and then the second dialog would come up when the user clicks on the dialog and that&#8217;s just awkward.</p>
<p>Actually to be perfectly honnest in my own code I try first postmessage the WM_USER from WM_InitDialog. &nbsp;Then go for a PostMessage on WM_PAINT. What I like about the WM_PAINT is also that the dialog is truely visible at that point.</p>
<p>I would never use WM_TIMER because timers to me are 99% of the time hacks and they are unreliable. &nbsp;The user could have time to do something in the fist dialog before the second comes up. &nbsp;I like WM_TIMER for their property of collapsing themselves, but you never know when you&#8217;ll get them.</p>
<p>I am not familiar with WM_ENTERIDLE</p>
<p></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-423453">
				<div id="div-comment-423453" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Igor</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060922-03/?p=29623#comment-423453">
			September 23, 2006 at 7:55 pm</a>		</div>

		<p>For an application to be able to wait for the dialog to be displayed in order to do something else, it either must have more than one thread or it must use MODELESS dialog because if you have only one thread and you call DialogBox then who is going to get you WM_* notification?</p>
<p>MSDN Quote Of The Day:<br />
<br />&quot;DialogBox does not return control until the specified callback function terminates the modal dialog box by calling the EndDialog function.&quot;<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-423473">
				<div id="div-comment-423473" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">alex@zoosmart.us</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060922-03/?p=29623#comment-423473">
			September 24, 2006 at 12:51 am</a>		</div>

		<p>how about CDialog::OnShowWindow</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-423493">
				<div id="div-comment-423493" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blog.voidnish.com' rel='external nofollow' class='url'>Nish</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060922-03/?p=29623#comment-423493">
			September 24, 2006 at 9:16 am</a>		</div>

		<p>Ignor</p>
<p>MFC modal dialogs are actually implemented as modeless dialogs. Thge modality is simulated.</p>
<p>See <a rel="nofollow" target="_new" href="http://www.codeproject.com/dialog/notmodaldialogs.asp" rel="nofollow">http://www.codeproject.com/dialog/notmodaldialogs.asp</a></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-423533">
				<div id="div-comment-423533" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Igor</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060922-03/?p=29623#comment-423533">
			September 24, 2006 at 5:25 pm</a>		</div>

		<p>Nish,<br />
<br />Yes but you call dlg.DoModal(). And it is not a good idea to nest another dialog creation inside DialogProc() processing loop.</p>
<p>#1 is wrong because it would display second dialog regardless of the visibility state of the first one.</p>
<p>Why? Because:<br />
<br />(uMsg == WM_INITDIALOG) != ((uMsg == WM_SHOWWINDOW) &amp;&amp; (wParam == TRUE) &amp;&amp; (lParam == 0))</p>
<p>Correct solution for #2 could be to wait for WM_SHOWWINDOW with wParam == TRUE (being shown) and with lParam == 0 (by call to ShowWindow()) but as I said I would try hard to avoid creating another dialog box inside DialogProc() function because it would prevent message processing while the second dialog is shown unless you create the second one as modeless.</p>
<div CLASS=post>[<i>? People create modal dialogs from DlgProc all the time. I bet you do it too. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-423553">
				<div id="div-comment-423553" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Igor Delovski</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060922-03/?p=29623#comment-423553">
			September 24, 2006 at 8:14 pm</a>		</div>

		<p>I was never sure about the way I handle such case in my app, but so far it appears to work well.</p>
<p>I have some animation and I start with it only after:<br />
<br />a) window had WM_PAINT and WM_ACTIVATE or<br />
<br />b) more than 5 seconds passed since WM_CREATE</p>
<p>&#8230; AND PeekMessage() returns FALSE &#8211; no more messages waiting.</p>
<p>Option b) is fail-safe protection, just in case. Great to see someone writing about the subject, I guess.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-423573">
				<div id="div-comment-423573" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Igor</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060922-03/?p=29623#comment-423573">
			September 24, 2006 at 8:44 pm</a>		</div>

		<blockquote><p>
  ? People create modal dialogs from DlgProc all the time. I bet you do it too.</p>
<p>You are right, I do it. MessageBox() and PropertySheet() still count as a dialog boxes.</p>
<p>But I was somehow under impression that this application needs to continue some processing while dialogs are displayed. It turns out that it is just an annoying popup before user is allowed to work with the first dialog.</p>
<p>Then it is easy, this should do the trick:</p>
<p>static BOOL spam_user = TRUE;</p>
<p>case WM_SHOWWINDOW:<br />
  <br /> &nbsp; &nbsp;if (spam_user &amp;&amp; (wParam == TRUE) &amp;&amp; (lParam == 0)) {<br />
  <br /> &nbsp; &nbsp; &nbsp; &nbsp;&#8230; display the second dialog &#8230;<br />
  <br /> &nbsp; &nbsp; &nbsp; &nbsp;spam_user = FALSE;<br />
  <br /> &nbsp; &nbsp;}<br />
  <br /> &nbsp; &nbsp;break;<br />
  
</p></blockquote>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-423583">
				<div id="div-comment-423583" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Igor</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060922-03/?p=29623#comment-423583">
			September 24, 2006 at 8:53 pm</a>		</div>

		<p>Oops, it won&#8217;t do. :) <br />I realized the same problem still exists, window is shown <em>after</em> processing of WM_SHOWWINDOW message. <br />Well then you can only use WM_WINDOWPOSCHANGED I guess and check if you have topmost Z order and if flags in WINDOWPOS say that you are visible. </p>
<div CLASS=post>[<i>Why are you checking for topmost in the Z-order? You can be visible without being topmost. Indeed, if your window is not WS_EX_TOPMOST and the user is running, say, Task Manager, then you will never find yourself at the top of the Z-order! -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-423613">
				<div id="div-comment-423613" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Miral</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060922-03/?p=29623#comment-423613">
			September 24, 2006 at 9:17 pm</a>		</div>

		<p>Oh, and the solution I chose in that case was not to defer the message box with a timer, but to instead pass the handle of a window that was actually visible (the owner of the form getting created) :)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-423623">
				<div id="div-comment-423623" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Igor</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060922-03/?p=29623#comment-423623">
			September 24, 2006 at 9:21 pm</a>		</div>

		<p>Raymond, does this second dialog have to prevent user from closing the first one until it is dismissed?</p>
<p>You mentioned typeahead possibility (for example Alt+F4) so that is why I ask.<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-423603">
				<div id="div-comment-423603" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Miral</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060922-03/?p=29623#comment-423603">
			September 24, 2006 at 9:16 pm</a>		</div>

		<p>I usually just use a timer. &nbsp;Especially from .NET code.</p>
<p>Though on that note I&#8217;ve recently tripped over the other gotcha of dialogs that Raymond&#8217;s mentioned before (*thank you*!) &#8212; passing in a nonvisible parent window. &nbsp;In this case, passing &#8216;this&#8217; as the owner of a MessageBox while still in the OnLoad event (when the form isn&#8217;t visible yet). &nbsp;It results in Bad Things &#8482; :)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-423663">
				<div id="div-comment-423663" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Threadder</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060922-03/?p=29623#comment-423663">
			September 25, 2006 at 5:17 am</a>		</div>

		<p>I would use my golden hammer: THREADS</p>
<p>Create a thread (on WM_PAINT) which creates the second dialog window. Problem solved.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-423703">
				<div id="div-comment-423703" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Will</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060922-03/?p=29623#comment-423703">
			September 25, 2006 at 6:33 am</a>		</div>

		<h1>What is the correct solution? You probably know this already.</h1>
<p>41 answers thus far, and clearly we don&#8217;t ;-)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-423723">
				<div id="div-comment-423723" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Maxime LABELLE</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060922-03/?p=29623#comment-423723">
			September 25, 2006 at 7:50 am</a>		</div>

		<p>Well, obviously handling WM_WINDOWPOSCHANGED does not work. It still happens at too early a stage.</p>
<p>Probably the only certified way to do it without relying on arbitrary delays in handling posted messages and elapsed timers, in my opinion, would be to install a WH_FOREGROUNDIDLE thread hook and remove it immediately upon handling the request, before displaying the secondary stacked dialog box.</p>
<p>It seems to work on a quick test I have made, but it feels like using a hammer to crush a fly.<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-423753">
				<div id="div-comment-423753" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blogs.msdn.com/oldnewthing/archive/2006/09/25/770536.aspx' rel='external nofollow' class='url'>The Old New Thing</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060922-03/?p=29623#comment-423753">
			September 25, 2006 at 10:00 am</a>		</div>

		<p>Answer to previous exercise.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-423763">
				<div id="div-comment-423763" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blogs.msdn.com/oldnewthing/archive/2006/09/25/770536.aspx' rel='external nofollow' class='url'>The Old New Thing : Waiting until the dialog box is displayed before doing something</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060922-03/?p=29623#comment-423763">
			September 25, 2006 at 10:00 am</a>		</div>

		<p>PingBack from <a rel="nofollow" target="_new" href="http://blogs.msdn.com/oldnewthing/archive/2006/09/25/770536.aspx" rel="nofollow">http://blogs.msdn.com/oldnewthing/archive/2006/09/25/770536.aspx</a></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-423903">
				<div id="div-comment-423903" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Neil</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060922-03/?p=29623#comment-423903">
			September 25, 2006 at 11:36 am</a>		</div>

		<p>I&#8217;m confused. If nesting DialogBox() before the outer dialog is visible does Bad Things &#8482;, does that mean that anyone who wants to nest a dialog based on a keypress is out of luck if the key is pressed during the typeahead processing?</p>
<div CLASS=post>[<i>There&#8217;s nothing wrong with it technically, as long as you get the window ownership right. The issue here is just that it looks ugly. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-423913">
				<div id="div-comment-423913" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Igor</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060922-03/?p=29623#comment-423913">
			September 25, 2006 at 11:36 am</a>		</div>

		<blockquote><p>
  Why are you checking for topmost in the Z-order? </p>
<p>Oops, I meant top, not topmost.</p>
<div CLASS=post>[<i>A window can be visible without being top. -Raymond</i>]</div>
</blockquote>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-424533">
				<div id="div-comment-424533" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Igor</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060922-03/?p=29623#comment-424533">
			September 26, 2006 at 8:19 pm</a>		</div>

		<blockquote><p>
  A window can be visible without being top.</p>
<p>Are we speaking of human-visible window or just window manager visible window?</p>
<p>Because if it is the former and the window is small it may be hidden behind say task manager and then showing a dialog box won&#8217;t help to accomplish anything, because the new dialog box will still be invisible for human being working with the computer. In other words:</p>
<p>g_fShown = TRUE; // g_fShown != g_fSeen;</p>
<p>That is why I wanted to check for Z order too.</p>
<div CLASS=post>[<i>Even if the starting dialog is covered, the secondary dialog might peek out from under Task Manager. If you look behind the question to what the customer <u>really</u> wants, they just want the dialog to look like the user clicked on a button that calls up the second dialog. -Raymond</i>]</div>
</blockquote>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-424583">
				<div id="div-comment-424583" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Igor</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060922-03/?p=29623#comment-424583">
			September 27, 2006 at 1:17 am</a>		</div>

		<blockquote><p>
  Even if the starting dialog is covered, the<br />
  <br />&gt;secondary dialog might peek out from under<br />
  <br />&gt;Task Manager.</p>
<p>You said that right, it <em>might</em> peek if:</p>
<p>a) Task Manager is not larger than both<br />
  <br />b) User hasn&#8217;t switched to full screen<br />
  <br />c) Yhere is no TV/Video overlay window</p>
<p>Anyway, new dialog will have Z order directly above its parent so that may be behind any other window (Solitaire, Minesweeper) currently visible to the user.</p>
<p>There is another hidden issue there, new dialog may not be the one to get to the foreground when user switches back to the application (via Alt+Tab) which launched it. It happens all the time, we have to minimize windows one by one until we find that nasty dialog which prevents us from closing an application, saving file, etc.</p>
<p>&gt;they just want the dialog to look like the<br />
  <br />&gt;user clicked on a button that calls up the<br />
  <br />&gt;second dialog.</p>
<p>They obviously never consulted any users. I <em>hate</em> when things start popping up at me and I bet everyone does.</p>
<p>The issue at hand is simple:</p>
<p>a) people want control<br />
  <br />b) people hate losing control<br />
  <br />c) people who lose control get frustrated<br />
  <br />d) frustrated people are less productive and more violent</p>
<p>Computer doing things on its own leaves an impression that operator doesn&#8217;t have any control over it.</p>
<p>For example, last thing I want is for Acrobat Reader MSI installer package to defragment my drive without asking because it does that by using crippled built-in Windows defragmenter which only messes up what my regular use of PerfectDisk has achieved.</p>
<p>But wait, there is another, perfect example for this kind of annoyance &#8212; Windows&#8217; Send To|Mail Recipient. That nasty popup covering &#8220;Send Mail&#8221; dialog which blindly asks to make all your pictures smaller even if they are small already or if you rename .zip to .jpg and try to send it that way.</p>
<p>Note that there is no way to turn that brutally useless feature off so you have a trade-off.</p>
<p>Either do not use Send To which alone is very usefull feature or get acustomed to dismissing another useless dialog every time you use Send To.</p>
<p>Those programmers who want nested dialogs should at least make an option in application preferences to disable it or many users will really hate their guts.</p>
<div CLASS=post>[<i>&#8220;Personally, I think immediately displaying a doubly-nested dialog box counts as starting off on the wrong foot from a usability standpoint, <u>but let&#8217;s set that issue aside for now</u>.&#8221; -Raymond</i>]</div>
</blockquote>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-424763">
				<div id="div-comment-424763" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Igor</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060922-03/?p=29623#comment-424763">
			September 27, 2006 at 11:28 am</a>		</div>

		<blockquote><p>
  Personally, I think&#8230; </p>
<p>Yes, I read that statement. It is just that you might have given few examples of <em>why</em> it counts as starting off on the wrong foot, as well as listing at least one viable alternative. </p>
<p>Many programmers do bad things unintentionally. They just use the simplest possible solution to their problem which is logical because they are not paid to worry about this and that, just to write the code. </p>
<p>On the other hand, if they can recognize the scenario as bad from a live example they would most likely go through some extra effort to do it the right way. </p>
<div CLASS=post>[<i>A different topic for a different day. I try to limit myself to one topic per day. -Raymond</i>]</div>
</blockquote>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-426183">
				<div id="div-comment-426183" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">peterchen</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060922-03/?p=29623#comment-426183">
			September 30, 2006 at 8:09 am</a>		</div>

		<p>So what&#8217;s the &quot;good&quot; Answer for #2? (or did I miss it in the comments?)</p>
<p>I do </p>
<p>dlg1.OnInitDialog:<br />
<br /> &nbsp;// control initializaiton<br />
<br /> &nbsp;ShowWindow(SW_SHOW)<br />
<br /> &nbsp;dlg2.DoModal();</p>
<p>It should work with the typeahead (unless the first dialog doesn&#8217;t get painted when it is &quot;inside&quot; Alt+Space)</p>
<p>Sometimes this seems to need a CenterWindow, too, which puzzles me.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-426193">
				<div id="div-comment-426193" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">peterchen</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060922-03/?p=29623#comment-426193">
			September 30, 2006 at 8:42 am</a>		</div>

		<p>nevermind, just noticed the new blog entry</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

