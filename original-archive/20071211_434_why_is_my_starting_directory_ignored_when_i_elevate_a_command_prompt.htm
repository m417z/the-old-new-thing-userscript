<html>
<head>
<title>Why is my starting directory ignored when I elevate a command prompt?</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>Why is my starting directory ignored when I elevate a command prompt?</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>December 11, 2007 / year-entry #435</td></tr>
<tr><td><b>Tags:</b></td><td>other</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20071211-00/?p=24223</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>21</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">Take a shortcut to the command prompt or some other Windows component, right-click it, and select "Run as Administrator." The "Start in" directory from the shortcut is ignored and you are always dropped into the system directory. Why is the starting directory ignored? To avoid a category of attacks (current directory attacks). According to the...</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>Take a shortcut to the command prompt or some other Windows component, right-click it, and select "Run as Administrator." The "Start in" directory from the shortcut is ignored and you are always dropped into the system directory. Why is the starting directory ignored?</p>
<p> To avoid a category of attacks (current directory attacks). </p>
<p> According to <a href="http://msdn.microsoft.com/library/en-us/dllproc/base/dynamic-link_library_search_order.asp"> the dynamic link library search order documentation</a>, the current directory is searched in step&nbsp;five, after the executable directory, and a variety of system-defined directories. If a program calls <code>LoadLibrary</code> and does not pass a fully-qualified path, and the DLL cannot be found in one of the first four locations, the current directory will be searched. An attacker can drop a DLL into a directory and trick you into running a program with that directory as its current directory. When that program tries to load a library that normally doesn't exist, the one the attacker created will be found and loaded. This is bad. </p>
<p> Note that this behavior applies only to Windows binaries and only if they are launched through an elevation prompt. (Programs that are not a part of Windows do not receive this behavior because compatibility testing showed that third-party application rely heavily on the current directory being preserved across an elevation boundary. For example, installers will unpack their contents into a temporary directory, change to that temporary directory, and then run the main setup program.) </p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (21)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-576383">
				<div id="div-comment-576383" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Karellen</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071211-00/?p=24223#comment-576383">
			December 11, 2007 at 10:11 am</a>		</div>

		<p>But in order to exploit it, the attacker needs to convince you, the administrator, to run an executable from a shortcut they control.</p>
<p>After all, if they didn&#8217;t control the shortcut, they wouldn&#8217;t be able to set the &quot;start in&quot; directory to one with their evil DLL.</p>
<p>But if the attacker convinces you to &quot;run as administrator&quot; a shortcut they control, haven&#8217;t they already got to the other side of the airtight hatchway? Can&#8217;t they just set the shortcut to point to an evil EXE instead of using a known EXE with an evil DLL?</p>
<p>Or am I missing something?</p>
<p>(I&#8217;m also intrigued to know what criteria is used to separate &quot;Windows binaries&quot; from the rest.)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-576403">
				<div id="div-comment-576403" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Dan</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071211-00/?p=24223#comment-576403">
			December 11, 2007 at 10:35 am</a>		</div>

		<p>Not really, they&#8217;d only have to convince you to drop a named DLL into a given, unprotected folder where you are likely to load something with adminstrative rights.</p>
<p>Think, maybe, your Documents folder. I imagine a good many people have command prompts or other applications that open with that as the current directory. I can&#8217;t imagine it&#8217;s that hard to use social engineering to get people to download a dll there and wait for the time bomb to go off.</p>
<p>Same could be said of the system drive root, the desktop, or for us developers our build or tools directory.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-576443">
				<div id="div-comment-576443" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.einsteintech.net' rel='external nofollow' class='url'>Josh Einstein</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071211-00/?p=24223#comment-576443">
			December 11, 2007 at 11:58 am</a>		</div>

		<p>Doesn&#8217;t this fall into your &quot;if they can put a file on the disk and convince you to run a program, they may as well have convinced you to run the malicious program in the first place&quot; scenario?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-576453">
				<div id="div-comment-576453" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">JS</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071211-00/?p=24223#comment-576453">
			December 11, 2007 at 12:02 pm</a>		</div>

		<p>Does Vista have a &quot;sudo&quot; equivalent?</p>
<p>All too often, I type a command and get a snarky &quot;This requires elevation&quot; message. &nbsp;That means I have to find a cmd.exe shortcut, right-click it, select &quot;Run as administrator&quot;, wait five seconds for the UAC prompt to appear, click &quot;Continue&quot;, navigate to the directory I was in, and retry the command. &nbsp;Enough of a hassle that I just might disable UAC (and then disable all tray warnings to make Vista stop complaining that UAC is disabled).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-576463">
				<div id="div-comment-576463" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.differentpla.net/' rel='external nofollow' class='url'>roger@differentpla.net</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071211-00/?p=24223#comment-576463">
			December 11, 2007 at 12:07 pm</a>		</div>

		<p>How is &quot;Windows component&quot; defined? Does Explorer take a look at the manifest or the signature? Or does it have a list of programs for which it shouldn&#8217;t do this (e.g. &quot;setup.exe&quot; gets treated differently)?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-576483">
				<div id="div-comment-576483" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.parkscomputing.com/' rel='external nofollow' class='url'>Paul M. Parks</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071211-00/?p=24223#comment-576483">
			December 11, 2007 at 12:18 pm</a>		</div>

		<p>JS: The Script Elevation PowerToys for Windows Vista gives you an &quot;elevate&quot; command.</p>
<p><a rel="nofollow" target="_new" href="http://www.microsoft.com/technet/technetmag/issues/2007/06/UtilitySpotlight/default.aspx" rel="nofollow">http://www.microsoft.com/technet/technetmag/issues/2007/06/UtilitySpotlight/default.aspx</a></p>
<p>PMP</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-576493">
				<div id="div-comment-576493" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">John</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071211-00/?p=24223#comment-576493">
			December 11, 2007 at 12:36 pm</a>		</div>

		<p>&quot;An attacker can drop a DLL into a directory and trick you into running a program with that directory as its current directory. When that program tries to load a library that normally doesn&#8217;t exist, the one the attacker created will be found and loaded.&quot;</p>
<p>I don&#8217;t know if I buy the reasoning behind this. &nbsp;If the attacker can get you to modify a shortcut to change the current directory in order to load his dll, why wouldn&#8217;t he be able to trick you into just copying his dll to the system directory? &nbsp;I guess it&#8217;s good to close off an attack vector, but I think the same people who would modify their shortcut would also probably just copy the dll to the system directory.</p>
<p>UAC does nothing to address the underlying problem of ignorant users. &nbsp;People just see a dialog and click Yes/Allow without even reading it, much less understanding the implications of it. &nbsp;I guess it gives the rest of us one last chance before our machines get owned, so it&#8217;s not completely useless.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-576503">
				<div id="div-comment-576503" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Triangle</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071211-00/?p=24223#comment-576503">
			December 11, 2007 at 1:03 pm</a>		</div>

		<p>Is it just me, or does this sound like another case of &quot;make programs jump through unnecessary hoops just to operate safely with Windows&quot;? (Shatter attack, anyone?) I know it&#8217;s too late to change this behaviour, but it seems awfully alot like that.</p>
<blockquote><p>
  UAC does nothing to address the underlying problem of ignorant users. &nbsp;People just see a dialog and click Yes/Allow without even reading it, much less understanding the implications of it.
</p></blockquote>
<p>I don&#8217;t understand this reasoning. Natural curiosity has been a part of the human race since its inception, why try to change the way people think instead of designing something to work with how they think ?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-576513">
				<div id="div-comment-576513" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.parkscomputing.com/' rel='external nofollow' class='url'>Paul M. Parks</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071211-00/?p=24223#comment-576513">
			December 11, 2007 at 1:32 pm</a>		</div>

		<p>John: Replacing a file in the system directory isn&#8217;t that easy to do anymore. It involves taking ownership of the file in question and then changing permissions on the file.</p>
<p>As for the utility of the UAC prompt, I think it&#8217;s pretty useless if you run as an administrator all the time, but running with elevated privileges for day-to-day use is silly ,anyway. I run as a non-administrative user (and non-pretty-much-everything-else), so when I get a UAC prompt I have to stop and type the Administrator&#8217;s password to confirm the action. That definitely makes me pay a little more attention.</p>
<p>PMP</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-576523">
				<div id="div-comment-576523" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">anonymous</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071211-00/?p=24223#comment-576523">
			December 11, 2007 at 1:39 pm</a>		</div>

		<p>Why even fiddling with a shortcut to an evil binary? Just make the shortcut itself a binary. Due to the stupidities of ShellExecuteEx(), a binary renamed to .pif or .lnk will execute as well.</p>
<p>But I have another question: Is there a way to change the search order arbitrarily, not just the two variants offered by the SafeDllSearch configuration entry? I&#8217;d like to have the %PATH% before the system directory, so I can have a user&#8217;s program loading updated DLLs without replacing the system&#8217;s DLL.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-576563">
				<div id="div-comment-576563" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">mh</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071211-00/?p=24223#comment-576563">
			December 11, 2007 at 2:52 pm</a>		</div>

		<p>I think changing the search order arbitrarily would count as &quot;one of those things that developers would abuse&quot;. &nbsp;I might be wrong but I thought LoadLibrary looked in the program&#8217;s directory first anyway.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-576573">
				<div id="div-comment-576573" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">John</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071211-00/?p=24223#comment-576573">
			December 11, 2007 at 3:15 pm</a>		</div>

		<p>Triangle: &nbsp;Because no matter how good your system is, at some point the decision will ultimately fall on the user. &nbsp;Normal people (and I don&#8217;t mean this in a condescending way) don&#8217;t think about computers the same way we do. &nbsp;As long as those people are kept in the decision making process, they are prone to making bad decisions. &nbsp;Unfortunately, computers are complicated and most people are unwilling to learn.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-576583">
				<div id="div-comment-576583" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Bryan</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071211-00/?p=24223#comment-576583">
			December 11, 2007 at 3:40 pm</a>		</div>

		<p>This is definitely not the airtight hatchway situation due to the &quot;My Documents&quot; scenario above. &nbsp;Or consider a Virus Scanner &#8211; many virus scanners run as a service of some form or fashion. &nbsp;Imagine if they managed to slip a DLL into C:ProgramDataRandomProduct or some such and then you, to work around an issue, need to launch the Live Updater through an elevated cmd.exe</p>
<p>RandomProduct has a file called securfile.dll and so they throw a file called securfile.dll in there without so much as requiring any admin privileges and now you&#8217;ve installed a trojan that has now been given full administrative privileges and there was no way you could have ever worked around it.</p>
<p>Or similarly from a shortcut &#8211; install the same file and say the Magic Update shortcut has a start in that points to C:ProgramDataRandomProduct. &nbsp;It auto-elevates as necessary and again &#8211; you&#8217;ve installed a trojan without so much as being able to prevent it or know about it beforehand.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-576613">
				<div id="div-comment-576613" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://lambert.geek.nz/' rel='external nofollow' class='url'>Miral</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071211-00/?p=24223#comment-576613">
			December 11, 2007 at 7:22 pm</a>		</div>

		<p>But still, in order for this to be a problem it requires three things:</p>
<p> &nbsp;1. A user-modifiable folder.</p>
<p> &nbsp;2. A user-modifiable shortcut with Start In set to #1.</p>
<p> &nbsp;3. An admin who will accept elevation using #2, and then run a program that uses a DLL included in #1.</p>
<p>So any folders/shortcuts set with permissions that prevent non-admins from modifying them are automatically safe, and could have been left alone.</p>
<p>And any user-modifiable elevating shortcuts are automatically dangerous, no matter what the Start In is &#8212; since the rogue user/program can just change the Target to whatever evil app they want. &nbsp;(Although the elevation prompt may show the difference in that case, so hopefully the real app is signed and the admin is paying attention.)</p>
<div class="post">[<i>You can employ this attack without steps 1 and 2. The only step necessary is #3. Hint: CIFS. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-aaron-margosis even thread-even depth-1" id="comment-576653">
				<div id="div-comment-576653" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Aaron+Margosis' rel='external nofollow' class='url'>Aaron Margosis</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071211-00/?p=24223#comment-576653">
			December 12, 2007 at 1:49 am</a>		</div>

		<p>Starting an elevated CMD prompt in the folder of your choosing:</p>
<p>elevate cmd /k C:FolderOfYourChoosing</p>
<p>where &quot;elevate&quot; is the script described here:</p>
<p><a rel="nofollow" target="_new" href="http://blogs.msdn.com/aaron_margosis/archive/2007/07/01/scripting-elevation-on-vista.aspx" rel="nofollow">http://blogs.msdn.com/aaron_margosis/archive/2007/07/01/scripting-elevation-on-vista.aspx</a></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-576863">
				<div id="div-comment-576863" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">SuperKoko</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071211-00/?p=24223#comment-576863">
			December 12, 2007 at 3:13 pm</a>		</div>

		<p>From John:</p>
<p>&quot;</p>
<p>If the attacker can get you to modify a shortcut to change the current directory in order to load his dll, why wouldn&#8217;t he be able to trick you into just copying his dll to the system directory?</p>
<p>&quot;</p>
<p>The system directory is usually very protected on a normal Windows configuration. It&#8217;s not write-able by non-admin users.</p>
<p>However, the temporary download directory of a Web browser will typically be in a directory write-able by the user.</p>
<p>Assume a user running a browser with a non-admin user account.</p>
<p>It&#8217;s easy to imagine that an average security flaw of a browser may let a DLL be downloaded to the temp download directory without user consent (or maybe, he accidentally downloaded a file he didn&#8217;t want to, with a &quot;quick download&quot; shortcut key).</p>
<p>Then, the user may download a trusted signed installer from another site and carefully execute it with admin rights from the temporary download directory.</p>
<p>&quot;</p>
<p>UAC does nothing to address the underlying problem of ignorant users. &nbsp;People just see a dialog and click Yes/Allow without even reading it, much less understanding the implications of it.</p>
<p>&quot;</p>
<p>It protects users that aren&#8217;t totally ignorant.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-maurits even thread-even depth-1" id="comment-577473">
				<div id="div-comment-577473" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Maurits+%5BMSFT%5D' rel='external nofollow' class='url'>Maurits [MSFT]</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071211-00/?p=24223#comment-577473">
			December 13, 2007 at 8:04 pm</a>		</div>

		<blockquote><p>
  It protects users that aren&#8217;t totally ignorant.
</p></blockquote>
<p>It also protects those that aren&#8217;t running as admin&#8230; and don&#8217;t know the admin password.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-577483">
				<div id="div-comment-577483" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Triangle</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071211-00/?p=24223#comment-577483">
			December 13, 2007 at 11:57 pm</a>		</div>

		<blockquote><p>
  It also protects those that aren&#8217;t running as admin&#8230; and don&#8217;t know the admin password.
</p></blockquote>
<p>Not quite. If a user got a virus, that virus could still do anything that user could do, such as delete all their files or exhaust their quotas. So more accurately it protects the <em>system</em>, not the user.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-577993">
				<div id="div-comment-577993" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Aidan Thornton</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071211-00/?p=24223#comment-577993">
			December 16, 2007 at 8:04 am</a>		</div>

		<p>This would be why Unix and Unix-based systems don&#8217;t include the current directory in the search path for libraries or executables. It just opens up too many security holes on multi-user systems. (This isn&#8217;t even a particularly nasty example.)</p>
<p>The reason Windows doesn&#8217;t run into issues is that it&#8217;s a GUI OS and programs are generally launched with the directory the executable is in as the current directory. Anyone doing admin work on directories accessible to other users from the Windows command line is probably asking for trouble.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-595143">
				<div id="div-comment-595143" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blogs.msdn.com/oldnewthing/archive/2008/01/30/7315957.aspx' rel='external nofollow' class='url'>The Old New Thing : Even without a nitpicker's corner, I have to worry about nitpickers</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071211-00/?p=24223#comment-595143">
			January 30, 2008 at 12:49 pm</a>		</div>

		<p>PingBack from <a rel="nofollow" target="_new" href="http://blogs.msdn.com/oldnewthing/archive/2008/01/30/7315957.aspx" rel="nofollow">http://blogs.msdn.com/oldnewthing/archive/2008/01/30/7315957.aspx</a></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-734573">
				<div id="div-comment-734573" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://splintor.wordpress.com/2009/03/01/uac-elevated-process-doesnt-inherit-its-parents-working-directory/' rel='external nofollow' class='url'>UAC: Elevated process doesn&rsquo;t inherit its parent&rsquo;s working directory &laquo; splintor&#8217;s blog</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071211-00/?p=24223#comment-734573">
			May 10, 2009 at 1:59 pm</a>		</div>

		<p>PingBack from <a rel="nofollow" target="_new" href="http://splintor.wordpress.com/2009/03/01/uac-elevated-process-doesnt-inherit-its-parents-working-directory/" rel="nofollow">http://splintor.wordpress.com/2009/03/01/uac-elevated-process-doesnt-inherit-its-parents-working-directory/</a></p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

