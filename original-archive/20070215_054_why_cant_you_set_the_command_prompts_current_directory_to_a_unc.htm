<html>
<head>
<title>Why can't you set the command prompt's current directory to a UNC?</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>Why can&#8217;t you set the command prompt&#8217;s current directory to a UNC?</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>February 15, 2007 / year-entry #55</td></tr>
<tr><td><b>Tags:</b></td><td>history</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20070215-05/?p=28003</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>53</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">If you try to set the current directory of a command prompt, you get the error message "CMD does not support UNC paths as current directories." What's going on here? It's MS-DOS backwards compatibility. If the current directory were a UNC, there wouldn't be anything to return to MS-DOS programs when they call function 19h...</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>If you try to set the current directory of a command prompt, you get the error message "CMD does not support UNC paths as current directories." What's going on here?</p>
<p> It's MS-DOS backwards compatibility. </p>
<p> If the current directory were a UNC, there wouldn't be anything to return to MS-DOS programs when they call function 19h (Get current drive). That function has no way to return an error code, so you have to return a drive letter. UNCs don't have a drive letter. </p>
<p> You can work around this behavior by using the <code>pushd</code> command to create a temporary drive letter for the UNC. Instead of passing <code>script.cmd</code> to the <code>CreateProcess</code> function as the <code>lpCommandLine</code>, you can pass <code>cmd.exe /c pushd \\server\share &amp;&amp; script.cmd</code>. </p>
<p> (Griping that seems to happen any time I write about batch files, so I'll gripe them pre-emptively: Yes, the batch "language" sucks because it wasn't designed; it just evolved. I write this not because I expect you to enjoy writing batch files but because you might find yourself forced to deal with them. If you would rather abandon batch files and use a different command interpreter altogether, then more power to you.) </p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (53)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-472273">
				<div id="div-comment-472273" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Nate</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070215-05/?p=28003#comment-472273">
			February 15, 2007 at 10:27 am</a>		</div>

		<p>Ok a very naive question.</p>
<p>Why not allow UNC current directory paths under cmd.exe, but just have invocation of MS-DOS programs fail when that applies?</p>
<p>I use CMD.EXE every day, but only very rarely do I invoke a bonafide DOS program.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-472283">
				<div id="div-comment-472283" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Bob</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070215-05/?p=28003#comment-472283">
			February 15, 2007 at 10:30 am</a>		</div>

		<p>Were it not for the plethora of corporate logon scripts that all map a zillion drive letters (J: seems to be popular for some reason), I&#8217;d suggest something like a universal UNC mapping akin to /afs/whatever.</p>
<p>Maybe \servershare could become N:servershare for DOS programs?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-472293">
				<div id="div-comment-472293" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.vibrant3d.com' rel='external nofollow' class='url'>Mark Mullin</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070215-05/?p=28003#comment-472293">
			February 15, 2007 at 10:40 am</a>		</div>

		<p>Was that a backhanded plug for cmd.exe all growed up ?</p>
<p>&quot;If you would rather abandon batch files and use a different command interpreter altogether, then more POWER to you&quot;</p>
<p>:-)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-472313">
				<div id="div-comment-472313" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Mark Steward</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070215-05/?p=28003#comment-472313">
			February 15, 2007 at 10:56 am</a>		</div>

		<p>Hmm, those same batch files might be messed by UNCs in environment variables. &nbsp;So my guess is it&#8217;s avoid introducing automatic drive mapping to a bulky cmd.exe &#8211; something that should be done completely or not at all.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-472333">
				<div id="div-comment-472333" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Mark Steward</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070215-05/?p=28003#comment-472333">
			February 15, 2007 at 11:02 am</a>		</div>

		<p>Bob: Cool idea, but what about programs/batch files that search the root of drive?</p>
<p>(OK, that&#8217;s enough from me for today&#8230;)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-472363">
				<div id="div-comment-472363" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">John Elliott</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070215-05/?p=28003#comment-472363">
			February 15, 2007 at 11:18 am</a>		</div>

		<p>Does this happen on 64-bit Windows where you can&#8217;t run DOS programs at all? (I haven&#8217;t got a 64-bit PC to hand, so I can&#8217;t try it).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-472373">
				<div id="div-comment-472373" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">S</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070215-05/?p=28003#comment-472373">
			February 15, 2007 at 11:19 am</a>		</div>

		<p>You can&#8217;t make 19h run pushd because there might not be any drive letters left to create a temporary drive with, and, as explained 19h has no way to indicate failure. Also pushd is a cmd.exe builtin, and 19h isn&#8217;t.</p>
<p>Novell NetWare (remember that?) used to use _, [, ] etc&#8230; as temporary drive letters to get around similar problems, but the world&#8217;s moved on now.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-john-c-kirk odd alt thread-odd thread-alt depth-1" id="comment-472383">
				<div id="div-comment-472383" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/John+C.+Kirk' rel='external nofollow' class='url'>John C. Kirk</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070215-05/?p=28003#comment-472383">
			February 15, 2007 at 11:35 am</a>		</div>

		<p>John Elliott: I&#8217;ve just tried it on Windows 2003 R2 x64, and I got the same error message that Raymond describes.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-472393">
				<div id="div-comment-472393" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Mark Steward</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070215-05/?p=28003#comment-472393">
			February 15, 2007 at 11:51 am</a>		</div>

		<p>I&#8217;m not being entirely coherent, but surely the int 21h stuff is an ntvdm affair? &nbsp;ntvdm could map the current directory on proram startup, so DOS programs are irrelevant.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-472403">
				<div id="div-comment-472403" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">John Elliott</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070215-05/?p=28003#comment-472403">
			February 15, 2007 at 12:13 pm</a>		</div>

		<p>JohnCKirk: Which suggests that there must be batch files that depend on this behaviour as well as DOS programs.</p>
<p>Mark Steward: The problem is that NTVDM can&#8217;t be sure that there&#8217;s a spare drive letter available, unless it uses letters that aren&#8217;t normally valid; and that would almost certainly break programs as well. And be quite confusing for the user (&quot;What does it mean, drive ]: is full?&quot;). And after the first few symbols you&#8217;d be into the lower-case letters which would be even more confusing (according to the Interrupt List, MS-DOS 2 supported 64 drives. You could have had a system with two different drives called C: and c:. Boggle.)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-472413">
				<div id="div-comment-472413" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Anonymous</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070215-05/?p=28003#comment-472413">
			February 15, 2007 at 12:57 pm</a>		</div>

		<p>Why not have &#8216;cd //server/share&#8217; do the pushd if required, and popd when you cd to a different drive or share?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-472423">
				<div id="div-comment-472423" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">A</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070215-05/?p=28003#comment-472423">
			February 15, 2007 at 1:06 pm</a>		</div>

		<p>4NT has supported CD&#8217;ing to UNC paths for ages, and can even launch MS-DOS applications from UNC paths.</p>
<p>If you&#8217;re really terrified of what might happen if an MS-DOS app gets back &quot;C&quot; from function 19h when the current directory is a UNC path, then just block the execution of MS-DOS apps from UNC paths (e.g. detect them using GetBinaryType). That would be more sensible than disallowing UNC paths altogether.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-472433">
				<div id="div-comment-472433" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Gabe</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070215-05/?p=28003#comment-472433">
			February 15, 2007 at 1:17 pm</a>		</div>

		<p>I would suggest creating some sort of flag (of the nature that already exist) that allows setting the current directory to a UNC path. Just make sure that anybody who uses the flag knows that some things may not work right if they attempt to get the current drive letter.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-472443">
				<div id="div-comment-472443" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.mattdavis.biz' rel='external nofollow' class='url'>Matt</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070215-05/?p=28003#comment-472443">
			February 15, 2007 at 1:20 pm</a>		</div>

		<p>I&#8217;d really like an explanation for why some Windows Installers blow up when APPDATA is set to a subst&#8217;d drive&#8230; that is more irritating to me than this issue.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-472463">
				<div id="div-comment-472463" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ryan Fox</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070215-05/?p=28003#comment-472463">
			February 15, 2007 at 1:27 pm</a>		</div>

		<p>I realize this goes against everything Microsoft stands for, but why not mention what you need to do in the error message?</p>
<p>&#8220;CMD does not support UNC paths as current directories. Try using the pushd command.&#8221;</p>
<div class=post>[<i>If only the people who wrote that error message had a time machine. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-472483">
				<div id="div-comment-472483" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Cooney</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070215-05/?p=28003#comment-472483">
			February 15, 2007 at 2:50 pm</a>		</div>

		<p>&gt; [If only the people who wrote that error message had a time machine. -Raymond]</p>
<p>If only you could edit error messages in subsequent releases [/snark].</p>
<p>I&#8217;ll just insert my standard suggestion here:</p>
<p>ship a bash or zsh interpreter in windows vista SP1/XP SP(last) and bind .sh to it by default. Let those of us who want better batching have a common way to access it and leave cmd.exe alone for the sake of hallowed compatibility.</p>
<div class=post>[<i>If only programs didn&#8217;t strcmp against error strings. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-472493">
				<div id="div-comment-472493" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">sandman</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070215-05/?p=28003#comment-472493">
			February 15, 2007 at 2:50 pm</a>		</div>

		<p>Hmm.</p>
<p>OK, the explanation makes sense for the NT/2k/XP/V implemenation of command.com but not for cmd.exe.</p>
<p>On those operationg systems command.com executes (.BAT) batch files , and cmd.exe executes .CMD files. So exiting scripts should have a problem.</p>
<p>There is already enough differences between these two environments &#8211; I hardly think this one would tip the balance. Or is there a deeper story about what happend &nbsp;with an invalid return from that interrupt. But a previous poster suggests not.</p>
<div class=post>[<i>Batch files aren&#8217;t involved. I&#8217;m sorry I brought them up. It was just an example, not the root cause. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-472503">
				<div id="div-comment-472503" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://codeka.com/blogs/' rel='external nofollow' class='url'>Dean Harding</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070215-05/?p=28003#comment-472503">
			February 15, 2007 at 4:09 pm</a>		</div>

		<p>Matt: subst drives only exist for the current session. msiexec.exe runs multiple copies of itself (some running as you, some as SYSTEM). The one running as you will see the subst drive, the one running as SYSTEM will not.</p>
<p>So I guess it just depends what happens in the msiexec.exe running as you and what happens in the one running as SYSTEM.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-472523">
				<div id="div-comment-472523" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">RJ</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070215-05/?p=28003#comment-472523">
			February 15, 2007 at 4:24 pm</a>		</div>

		<p>Despite the fact that &quot;batch files suck&quot; only a half-dozen times in the past 6 years have I had to resort to a vbscript to accomplish something that I just couldn&#8217;t get done in batch. And though it will strike some as insane, I typically &nbsp;make calls to the vbscript from a batch file rather than just rewriting the whole thing in a vbscript.</p>
<p>I know one day the cmd language and batch files will have to die away, but for now I&#8217;m glad they&#8217;re there, I&#8217;m glad they&#8217;re backwards compatible, and I&#8217;m glad there are people that still write about them so I can keep learning.</p>
<p>And if everything looks like a nail to a man with a hammer&#8230;to me everything looks like something that&#8217;d fit nicely inside a for loop.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-472543">
				<div id="div-comment-472543" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">mikeb</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070215-05/?p=28003#comment-472543">
			February 15, 2007 at 4:46 pm</a>		</div>

		<blockquote><p>
  &gt; 4NT has supported CD&#8217;ing to UNC paths for ages, and can even launch MS-DOS applications from UNC paths. &lt;&lt;
</p></blockquote>
<p>That&#8217;s an interesting data point&#8230; &nbsp;any idea what gets returned to a DOS program that makes an DOS function 19h query in that case? (jeez &#8211; am I really waiting time asking about DOS API behavior?)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-472553">
				<div id="div-comment-472553" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joel Peterson</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070215-05/?p=28003#comment-472553">
			February 15, 2007 at 5:04 pm</a>		</div>

		<p>Thank goodness for PowerShell.</p>
<p>Windows PowerShell</p>
<p>Copyright (C) 2006 Microsoft Corporation. All rights reserved.</p>
<p>PS C:&gt; cd \onecodePublic</p>
<p>PS Microsoft.PowerShell.CoreFileSystem::\onecodePublic&gt;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-472563">
				<div id="div-comment-472563" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Doogal</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070215-05/?p=28003#comment-472563">
			February 15, 2007 at 5:44 pm</a>		</div>

		<p>Has anybody ever created VBS versions of the DOS batch functions? So that one could move completely away from batch programming very easily?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-472303">
				<div id="div-comment-472303" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Mark Steward</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070215-05/?p=28003#comment-472303">
			February 15, 2007 at 10:52 am</a>		</div>

		<p>Or why not make 19h run pushd when it&#8217;s called? &nbsp;I suspect it&#8217;s more that an alarming number of corporate batch files do horrible things like extracting drive letters from paths. &nbsp;Batch files are the one of the main purposes for cmd, so you couldn&#8217;t block them. &nbsp;And if you run pushd whenever one&#8217;s called, you might as well do it on startup.</p>
<p>Not sure why cmd.exe doesn&#8217;t just call pushd on startup, though. &nbsp;Perhaps because it&#8217;s possible to fail if you have too many drives, and that&#8217;s *another* error message and *another* test case.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-472573">
				<div id="div-comment-472573" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Dan</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070215-05/?p=28003#comment-472573">
			February 15, 2007 at 7:12 pm</a>		</div>

		<p>I&#8217;ve actually been looking into batch files again after not really using them since MSDOS6. &nbsp;I&#8217;m surprised at all the hackish improvements made for the sake of backwards compatibility. &nbsp;They have allowed me to do a few things MSDOS6 batch files couldn&#8217;t do (like get the full path to the batch file regardless of where it&#8217;s run from).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-472603">
				<div id="div-comment-472603" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">bramster</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070215-05/?p=28003#comment-472603">
			February 15, 2007 at 9:36 pm</a>		</div>

		<p>A number of years ago, a hi-tech kind of guy told me &quot;DOS is Dead&quot;.</p>
<p>Last time I saw him, he was trying to make a living detailing cars, or some-such.</p>
<p>Batch files are a wonderful way of linking different, relatively small programs into a system that does &quot;wonderful things&quot;.</p>
<p>Debugging becomes very, very easy. &nbsp;Being able to look at intermediate data is very helpful in the debugging process.</p>
<p>I&#8217;ll stop now. &nbsp;I&#8217;ve got to go and load my bicycle into my airplane for a trip south.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-472623">
				<div id="div-comment-472623" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blog.vamitra.com' rel='external nofollow' class='url'>badri</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070215-05/?p=28003#comment-472623">
			February 16, 2007 at 12:20 am</a>		</div>

		<p>I realize all the old versions of windows have this problem. But with Vista since the new ntfs supports symlinks to network share, you could mount the share in the home directory, or a special directory like %windir%networkservershare</p>
<p>Atleast that will solve problems in the future&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-472643">
				<div id="div-comment-472643" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">andy</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070215-05/?p=28003#comment-472643">
			February 16, 2007 at 3:31 am</a>		</div>

		<p>&quot;ntfs supports symlinks to network share&quot;</p>
<p>Oh&#8230; that&#8217;s a great reason to upgrade to Vista! :) (no sarcasm!)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-472653">
				<div id="div-comment-472653" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">muro</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070215-05/?p=28003#comment-472653">
			February 16, 2007 at 3:44 am</a>		</div>

		<p>Well pushd is nice, but what if I have multiple subdirectories on the server share and I want to know from which one I am running? If I just run pushd on the server share, I get the server share in a new drive letter &#8211; but I loose the information about the subdirectory. They are the subdirectories of the new drive, but which one is the one I&#8217;m running from?</p>
<p>Currently, each batch file in subdirectories defines an environment variable with its unc path. This works, because each batch file is run separately, so the variable is only set once. Is there another way to get the current working directory? I&#8217;m probably missing something about pushd :-(.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-472673">
				<div id="div-comment-472673" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">S</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070215-05/?p=28003#comment-472673">
			February 16, 2007 at 3:49 am</a>		</div>

		<p>Doogal: VBS versions of DOS batch files? Why not just write batch files? They generally work and the MS cmd team (person?) did a superb job of enhancing the shell without breaking old scripts. Sure the cmd langauage is a bit odd, but so&#8217;s perl and that rules&#8230;</p>
<p>As ever, use the right tool for the right job. (And always know what the most fashionable tool is too, so you can talk about it).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-472683">
				<div id="div-comment-472683" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">nickj</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070215-05/?p=28003#comment-472683">
			February 16, 2007 at 4:10 am</a>		</div>

		<p>re 2:50 PM, Cooney</p>
<p>Cygwin? I haven&#8217;t done the .sh file extension thing, but it is very handy having a *nix command line about the house.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-472703">
				<div id="div-comment-472703" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Laura T.</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070215-05/?p=28003#comment-472703">
			February 16, 2007 at 5:26 am</a>		</div>

		<p>Compatibility.. a simple word.</p>
<p>After 15 years of any product, you must get thinking of something else.</p>
<p>Hopefully Microsoft IS thinking of Windows NE (N-Eleven after N-Ten) that has no compatibility by itself&#8230; virtualization and emulation can keep old things going.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-472713">
				<div id="div-comment-472713" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://deadnode.org/' rel='external nofollow' class='url'>James</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070215-05/?p=28003#comment-472713">
			February 16, 2007 at 6:29 am</a>		</div>

		<p>Laura: Raymond posted a while ago about virtualization/emulation not being a panacea (you just swap one set of headaches for another: trying to integrate cut&amp;paste, file system, graphics&#8230;); on the other hand, it&#8217;s exactly how most modern platforms do it already (OS/2 and the NT derivatives running a modified copy of Win3.1 and Mac OS X running a copy of Mac OS 9 under the name &#8216;Classic&#8217;, for example).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-472723">
				<div id="div-comment-472723" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Laura T.</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070215-05/?p=28003#comment-472723">
			February 16, 2007 at 7:39 am</a>		</div>

		<p>James: No, not a panacea, I agree. The thing is, it can be done (as you mentioned Apple). If you don&#8217;t change anything, your current headache gets only worse. Eventually you must cure it. Happens when you reach the cost/benefit point.</p>
<p>Sincerely, I don&#8217;t think it is worth of it to maintain (MS-)DOS compatibility at all (when was the last time someone bought DOS 6.22? Or DOS APP?). It&#8217;s nice to say, I can run 2007 an app developed &#8217;87 but that&#8217;s about it, IMHO. That cannot be a blocking factor for evolution.</p>
<p>And something is happening. Singularity is there somewhere. Just a first pass. I Hope.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-472743">
				<div id="div-comment-472743" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.pretentiousname.com' rel='external nofollow' class='url'>Leo Davidson</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070215-05/?p=28003#comment-472743">
			February 16, 2007 at 9:06 am</a>		</div>

		<p>If 19h can&#8217;t return an error, what about allowing CDs to UNC paths and printing an error message if someone tries to run an MS-DOS binary while in one?</p>
<p>All modern programs will still work, people finally get to use UNC at the command prompt, and old MS-DOS programs are protected from undefined behaviour.</p>
<p>The only risk would seem to be that someone could run a batch from a UNC path without realising that part of it relies on an old MS-DOS binary, in which case the error will occur at a later stage (when the binary is run) rather than at the point they try to change directories. Nothing that worked before is broken.</p>
<p>Is that risk the reason this wasn&#8217;t done, or is there something I haven&#8217;t thought of?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-472753">
				<div id="div-comment-472753" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Hayden</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070215-05/?p=28003#comment-472753">
			February 16, 2007 at 9:20 am</a>		</div>

		<p>Kudos to Raymond for (once again) pointing out a nugget of hidden good stuff.</p>
<p>I suspect I&#8217;ve read &quot;help pushd&quot; several times but never noticed the UNC kludge.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-472863">
				<div id="div-comment-472863" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Stu</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070215-05/?p=28003#comment-472863">
			February 16, 2007 at 10:57 am</a>		</div>

		<p>PS Microsoft.PowerShell.CoreFileSystem::\onecodePublic&gt;</p>
<p>Ouch! That &quot;path&quot; is over half the width of a standard console window.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-472983">
				<div id="div-comment-472983" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Christian</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070215-05/?p=28003#comment-472983">
			February 16, 2007 at 12:22 pm</a>		</div>

		<p>As you might know, in batch files you can refer to the directory where the script was invoked by a special parameter %0. This parameter can be expanded to a &quot;drive letter&quot; and path with %~dp0. This expansion also works for UNC paths!</p>
<p>For example, I use a batch file to install Microsoft security patches directly from a file share without having to mount the share to a drive letter which might be already in use. The batch file looks like this:</p>
<p>&nbsp; @echo off</p>
<p>&nbsp; &quot;%~dp0WindowsXP-KB929969-x86-ENU.exe&quot; /norestart /passive</p>
<p>&nbsp; &quot;%~dp0WindowsXP-KB928255-x86-ENU.exe&quot; /norestart /passive</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-472993">
				<div id="div-comment-472993" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">S</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070215-05/?p=28003#comment-472993">
			February 16, 2007 at 1:03 pm</a>		</div>

		<p>UNCs are handled just fine everywhere else in cmd. Just not the current directory. If you launch an app using a UNC, then that&#8217;s fine, as the current directory (and current drive) don&#8217;t change and will still be valid.</p>
<p>(Note: If you cd /d to a network drive, then net use /delete that drive, .cmd doesn&#8217;t change your current dir or drive, but moans if you try to use it. So you&#8217;d get a current drive letter back from 19h that didn&#8217;t point to a working drive.)</p>
<p>Does this make me a .cmd guru, or maybe I should go looking for a life.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-473013">
				<div id="div-comment-473013" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Another Bob</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070215-05/?p=28003#comment-473013">
			February 16, 2007 at 1:38 pm</a>		</div>

		<p>Although you can&#8217;t CD to a UNC path, you can open cmd.exe with the current directory set to a UNC, I do it all the time (in conjunction with something equivalent to cmp prompt here) &#8211; See KB156276.</p>
<p>It should be noted that once you open such a command prompt, the CD command is flaky, it seems that until you use &quot;CD ..&quot; (which brings you up to the UNC root directory, regardless of how many directories down from there you are), no other CD commands seem to work. &nbsp;Some of the other commands are flaky as well; for example, &quot;DIR&quot; works fine, but &quot;DIR *.*&quot; complains that &quot;The filename, directory name, or volume label syntax is incorrect.&quot;.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-473323">
				<div id="div-comment-473323" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.morganalley.com' rel='external nofollow' class='url'>Dewi Morgan</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070215-05/?p=28003#comment-473323">
			February 17, 2007 at 11:55 am</a>		</div>

		<p>Laura: You&#8217;re saying that Vista wasn&#8217;t a brave enough leap from backward compatibility? MS have arguably shot themselves in the foot with all the stuff that Just Doesn&#8217;t Work anymore. People are scrambling to get new versions of software out, new drivers out, etc. It&#8217;s gonna hurt them. They will, for a time, be haemorrhaging users to other OSs.</p>
<p>But, I applaud them. I think it was not only brave, and The Right Thing to do: it was the Only Thing to do, if they wanted to maintain respect as a secure OS for business.</p>
<p>They bent over backwards to keep reverse compatibility where it doesn&#8217;t hurt, they throw errors where it might hurt (programs/scripts relying on getting the drive letter from the current path), and they break it if they have to for security. That last was the brave and right bit, for which they will take a lot of flak.</p>
<p>I&#8217;m hardly Vista&#8217;s target market &#8211; I&#8217;m a BSD/Linux guy by preference, and for various reasons wild horses couldn&#8217;t make me buy Vista, but despite that I say: MS did good. There were hard decisions, but they had to be made, and I feel MS generally chose the right path, of security over compatibility, and compatibility over innovation.</p>
<p>If only open source authors would pay as much attention to backwards compatibility.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-473293">
				<div id="div-comment-473293" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://deadnode.org/sw/' rel='external nofollow' class='url'>James</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070215-05/?p=28003#comment-473293">
			February 17, 2007 at 5:35 am</a>		</div>

		<p>Laura: The thing is, it IS done that way now: it isn&#8217;t &quot;Windows&quot; which can&#8217;t handle the current directory being a UNC path &#8211; indeed, on the native level, Windows doesn&#8217;t even *HAVE* a current working directory! The whole concept of a CWD gets emulated on a higher level (when your calls to CreateFile get translated into the Native API&#8217;s NtCreateFile)</p>
<p>Christian: The %~dp0 thing is very handy indeed; it did take a little more ingenuity to get around Adobe&#8217;s Postscript printer driver installer, which appears to insist on looking for configuration files in the *root* of the current drive: infuriating!</p>
<p>On the other hand, we have a new contender for Raymond&#8217;s list of really irritating &#8216;toast&#8217; messages: Vista, popping a message up saying the USB subsystem is hosed, &#8216;click here for more details&#8217;. Of course, clicking there is a little tricky with a USB mouse and keyboard :-(</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-473343">
				<div id="div-comment-473343" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://deadnode.org/sw/' rel='external nofollow' class='url'>James</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070215-05/?p=28003#comment-473343">
			February 17, 2007 at 5:40 pm</a>		</div>

		<p>Laura: &quot;Sincerely, I don&#8217;t think it is worth of it to maintain (MS-)DOS compatibility at all (when was the last time someone bought DOS 6.22? Or DOS APP?). It&#8217;s nice to say, I can run 2007 an app developed &#8217;87 but that&#8217;s about it, IMHO. That cannot be a blocking factor for evolution.&quot;</p>
<p>DOS support already *is* implemented through an emulation layer (ntvdm &#8211; NT Virtual DOS Machine). It doesn&#8217;t get in the way of anyone who isn&#8217;t using it, so why deprive those of us who do need it of that feature?</p>
<p>The kernel itself has a pretty clean straightforward interface to the outside world &#8211; pure Unicode, no reliance on drive letters and no DOS int 19h. Everything of DOS gets added in an emulation layer as needed &#8211; just as you suggested.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-473383">
				<div id="div-comment-473383" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.pretentiousname.com' rel='external nofollow' class='url'>Leo Davidson</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070215-05/?p=28003#comment-473383">
			February 18, 2007 at 4:14 am</a>		</div>

		<p>&quot;They will, for a time, be haemorrhaging users to other OSs.&quot;</p>
<p>More likely people bothered by driver/software compatibility will stick with XP rather than go to a different OS where ALL of their drivers/software doesn&#8217;t work. Anyway, it&#8217;s still early days for Vista but enough stuff works that I get by fine with it as my primary OS. I am missing a couple of things, but I&#8217;d be missing a few hundred things if I moved to a different platform entirely.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-473443">
				<div id="div-comment-473443" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Doogal</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070215-05/?p=28003#comment-473443">
			February 18, 2007 at 11:59 am</a>		</div>

		<p>S:</p>
<p>I guess you haven&#8217;t done as much Batch programming as I have &#8211; there&#8217;s a bunch of stuff you can&#8217;t do without jumping through serious hoops. I&#8217;d love to convert my favorite Batch files into VBS, it&#8217;s a just a pain to replicate the coolest functionality of Batch, and I&#8217;m sure it&#8217;s the sort of thing someone must have done, even just as an intellectual exercise.</p>
<p>PS I don&#8217;t want to shell out to cmd either, I&#8217;m trying to simplify things.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-473543">
				<div id="div-comment-473543" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Laura T.</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070215-05/?p=28003#comment-473543">
			February 19, 2007 at 3:44 am</a>		</div>

		<p>James: Raymond&#8217;s book is enlightening in this matter.</p>
<p>Yes, DOS is &quot;emulated&quot; and many other things are too. But still we need keep around (?) 8.3 filenames, drive letters and other quirks to keep Vista compatible with it&#8217;s past.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-473563">
				<div id="div-comment-473563" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://deadnode.org/' rel='external nofollow' class='url'>James</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070215-05/?p=28003#comment-473563">
			February 19, 2007 at 5:13 am</a>		</div>

		<p>Laura: There&#8217;s no requirement to have 8.3 filenames at all, on NTFS (they are an integral part of FAT, of course) &#8211; if you like, it&#8217;s the work of a second to switch that feature off. Drive letters are still very much a current part of the Win32 API, rather than a quirk of the past; in theory, it might be possible to construct a system using only UNC paths, but I suspect a *lot* of code (not by any means legacy or obsolete) would break as a result &#8211; probably including important bits of Vista itself.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-474143">
				<div id="div-comment-474143" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Florbo</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070215-05/?p=28003#comment-474143">
			February 20, 2007 at 2:39 pm</a>		</div>

		<p>We already have incompatible extensions (e.g delayed expansion) &#8211; why not a &quot;UNC paths&quot; mode where it&#8217;s made clear in the help that drive letters won&#8217;t be available?</p>
<p>I currently start all my batch files with &quot;pushd %~dp0&quot; to handle running from a UNC path, but it sometimes interferes with other people&#8217;s logon SUBST scripts (e.g if they want to subst Y: or Z:)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-474753">
				<div id="div-comment-474753" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Hayden</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070215-05/?p=28003#comment-474753">
			February 22, 2007 at 7:08 am</a>		</div>

		<p>Florbo:</p>
<p>You could always follow</p>
<p>pushd %~dp0</p>
<p>with</p>
<p>SET DRIVE=%CD:~0,2%</p>
<p>and then use %DRIVE% everywhere.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-475273">
				<div id="div-comment-475273" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Greg</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070215-05/?p=28003#comment-475273">
			February 22, 2007 at 9:04 pm</a>		</div>

		<p>Dewi,</p>
<p>&#8220;They bent over backwards to keep reverse compatibility where it doesn&#8217;t hurt&#8230;and they break it if they have to for security.&#8221;</p>
<p>How exactly is crippling performance of the open standard OpenGL graphics system by layering it on top of the proprietary DirectX (after originally removing it altogether) and disabling the help of many existing programs by removing support for .hlp files bending over backwards and only breaking when they have to for security?</p>
<p>Sounds more like trying to move people off the open standard and onto their proprietary standard to lock them onto their platform.</p>
<div class=post>[<i>I don&#8217;t know about OpenGL, but disabling .hlp was definitely a security decision. I can&#8217;t believe I&#8217;m responding to an off-topic discussion. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-475543">
				<div id="div-comment-475543" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Greg</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070215-05/?p=28003#comment-475543">
			February 23, 2007 at 12:21 pm</a>		</div>

		<p>Sorry about that, but the topic was about maintaining things for backwards compatibility, so it&#8217;s at least somewhat on-topic.</p>
<p>I&#8217;ve looked for a rationale for disabling .hlp, and I&#8217;ve not found anything that said there were security problems, just that MS didn&#8217;t want to maintain it. &nbsp;If you have pointers to where we can find more information on the security issues, that would at least help passify the masses a little when they complain to us that they can&#8217;t read our help files on their new computers.</p>
<div class="post">[<i>I doubt the minutes of the meetings I attended are available online, sorry. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-475933">
				<div id="div-comment-475933" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://deadnode.org/' rel='external nofollow' class='url'>James</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070215-05/?p=28003#comment-475933">
			February 24, 2007 at 5:49 am</a>		</div>

		<p>Greg: There&#8217;s a buffer overflow in .hlp parsing, released just under a year ago &#8211; although MS&#8217;s official line, according to KB917607, is that .hlp support has *not* gone &#8211; it&#8217;s just taking a while to fix&#8230;</p>
<p>&quot;Users who want to view 32-bit .hlp files must download the program from the Microsoft Download Center, and then install it on their computers. The download for Windows Help is still in development and will be available in early 2007.&quot;</p>
<p>OTOH, it also says WinHlp32.exe first shipped with Win 3.1, which would be a little surprising&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-476043">
				<div id="div-comment-476043" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Greg</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070215-05/?p=28003#comment-476043">
			February 24, 2007 at 8:50 pm</a>		</div>

		<p>&quot;I doubt the minutes of the meetings I attended are available online, sorry.&quot;</p>
<p>Oh well, thanks anyway.</p>
<p>James, thanks. &nbsp;That KB article used to say it would be available by retail release of Vista, but it was changed last week (or so) to &quot;early 2007&quot;, and it will require that the *user* download the support. &nbsp;The support will not be included with the OS, and software companies won&#8217;t be able to distribute it (at least not yet).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-477873">
				<div id="div-comment-477873" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://secretGeek.net' rel='external nofollow' class='url'>lb</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070215-05/?p=28003#comment-477873">
			February 28, 2007 at 10:13 pm</a>		</div>

		<p>Hi Raymond</p>
<p>I&#8217;m always loving the old new thing!</p>
<p>The pushd trick is nifty &#8212; but what if i need to specify a username and password for the new path?</p>
<p>Is there a way to do this in one line?</p>
<p>is there any equivalent that will &quot;Do What I mean&quot; when I type:</p>
<p>c:&gt;pushd \machinepath /user:domain1user1 /password:Passw0rd</p>
<p>While I can do something similar in two lines with:</p>
<p>c:&gt;net use M: \machinepath Passw0rd /user:domain1user1</p>
<p>c:&gt;M:</p>
<p>I don&#8217;t know (ahead of time) what drive letter to use&#8230;</p>
<p>cheers</p>
<p>lb</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

