<html>
<head>
<title>What does an NMI error mean? (The infamous "Hardware Malfunction")</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>What does an NMI error mean? (The infamous &quot;Hardware Malfunction&quot;)</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>February 27, 2007 / year-entry #71</td></tr>
<tr><td><b>Tags:</b></td><td>tipssupport</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20070227-00/?p=27843</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>28</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">I promised to talk more about NMI, so here it is. What generates an NMI? What does it mean? The first question is easy to answer but doesn't actually shed much light: Any device can pull the NMI line, and that will generate a non-maskable interrupt. Back in the Windows 95 days, a few really cool...</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p><a href="http://blogs.msdn.com/oldnewthing/archive/2007/01/30/1557491.aspx"> I promised to talk more about NMI</a>, so here it is.</p>
<p> What generates an NMI? What does it mean? </p>
<p> The first question is easy to answer but doesn't actually shed much light: Any device can pull the NMI line, and that will generate a non-maskable interrupt. Back in the Windows&nbsp;95 days, a few really cool people had taken the ball-point pen trick one step further: They had a special expansion card in their computer with a cord coming out the back. At the end of the cord was a momentary switch like the one you might see on a quiz show. If you pressed it, the card generated an NMI. No fumbling around with ball-point pens for these folks, no-ho! (To be honest, I had two of these. One of them was a simple NMI card, triggered by a foot pedal! The other was really a card with a high-resolution real-time clock that could be used for performance analysis. I used the NMI button far more often than the timer...) </p>
<p> In practice, the only device that generates an NMI (on purpose) is the memory controller, which raises it when a <a href="http://support.microsoft.com/?kbid=101272"> parity error is detected</a>. The non-geek explanation of a parity error: Your memory chips are acting flakey. </p>
<p> <a href="http://wendyhome.com/2006/03/06/blue-screen-of-tinkerbell/"> Here's what a parity error looks like</a>. It shows up as a mysterious "Hardware Malfunction" error. </p>
<p> Now, it's possible that a device may be generating an NMI by mistake. For example, in Wendy's case, it may have been due to damaged caused by overheating. </p>
<p> If you suspect your memory chips, you can run a <a href="http://oca.microsoft.com/en/windiag.asp"> memory diagnostic tool</a> to see if it can find the bad memory. </p>
<p> My colleague Keith Moore reminded me that paradoxically, on the IBM PC-AT, you could mask the non-maskable interrupt! This definitely falls into the category of "Unclear on the concept." The masking was done in hardware that could be configured via some magic port I/O. It prevented the NMI from reaching the CPU in the first place. (NMI is still not maskable in the CPU.) </p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (28)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-477073">
				<div id="div-comment-477073" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">vince</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070227-00/?p=27843#comment-477073">
			February 27, 2007 at 10:24 am</a>		</div>

		<p>At least on Linux, watchdog timers and performance counters also trigger NMIs.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-477143">
				<div id="div-comment-477143" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Tomer Chachamu</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070227-00/?p=27843#comment-477143">
			February 27, 2007 at 12:09 pm</a>		</div>

		<p>And if you prefer, memtest86 does pretty much the same thing and can probably boot off the network. It is also found on almost every linux boot disc, Live CD or install CD &#8211; just type &quot;memtest&quot; or &quot;memtest86&quot; at the prompt.</p>
<p>You should also be careful &#8211; both memtest and windiag can repeat their tests forever if you just leave them to do whatever they want.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-matt-pietrek even thread-even depth-1" id="comment-477173">
				<div id="div-comment-477173" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Matt Pietrek</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070227-00/?p=27843#comment-477173">
			February 27, 2007 at 12:16 pm</a>		</div>

		<p>Yup. Back in my NuMega days the company sold boards with an NMI switch like Raymond describes.</p>
<p>I also recall Purart (who did Turbo Debugger for Borland) had an NMI board.</p>
<p>Of course, my memory may be bad. :-)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-477203">
				<div id="div-comment-477203" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">David</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070227-00/?p=27843#comment-477203">
			February 27, 2007 at 12:42 pm</a>		</div>

		<p>The PC Jr. used NMI for the keyboard. &nbsp;All current chipsets allow NMI to be blocked. &nbsp;The PC will not start if you cannot block it. &nbsp;The BIOS must write to all of memory several times before the memory becomes stable. &nbsp;I guess those chipsets that don&#8217;t support parity or ECC memory don&#8217;t need the capability. &nbsp;Periscope had several cards that provided NMI switches from a simple one to their more complete ICE cards.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-477223">
				<div id="div-comment-477223" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">bramster</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070227-00/?p=27843#comment-477223">
			February 27, 2007 at 1:19 pm</a>		</div>

		<p>@David</p>
<p>&quot;The BIOS must write to all of memory several times before the memory becomes stable.&quot;</p>
<p>Could you expand on that? Intriguing!</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-477273">
				<div id="div-comment-477273" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">DriverDude</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070227-00/?p=27843#comment-477273">
			February 27, 2007 at 2:23 pm</a>		</div>

		<p>In the really old days, when a parity error occured, the BIOS would print the address (or something resembling an address) on the screen before halting. You could decode the address and figure out which RAM chip to replace.</p>
<p>Of course there were 36+ RAM chips in a PC back then. Nowadays it is just one out of four or eight DIMMs.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-477313">
				<div id="div-comment-477313" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Jeremy Croy</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070227-00/?p=27843#comment-477313">
			February 27, 2007 at 3:23 pm</a>		</div>

		<p>Back in the day, I had this bluescreen, took me the longest time to figure out what caused it. The motherboard had blown a capacitor. It was a dual proc PIII 1Ghz rig. When I&#8217;d run memory tests, they&#8217;d all pass, since they ran on CPU0. I&#8217;d boot windows and in about 2 minutes I&#8217;d have an NMI bluescreen. Took me about 2 days to notice a little oozing capacitor in the case, that was on the power line going to CPU1.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-aadsso-1live-com000300008195987d odd alt thread-odd thread-alt depth-1" id="comment-477353">
				<div id="div-comment-477353" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Spire' rel='external nofollow' class='url'>Spire</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070227-00/?p=27843#comment-477353">
			February 27, 2007 at 4:18 pm</a>		</div>

		<p>I have an somewhat related question (not necessarily directed at Raymond, but to anyone reading who might know the answer).</p>
<p>I have a machine that is configured with ECC memory, and has ECC enabled via the BIOS&#8217;s &quot;ECC Scrub&quot; setting. I&#8217;m running Windows Vista. What happens if the ECC encounters an uncorrectable error (i.e., two or more flipped bits)? Does an NMI still get generated, like in the old days? Do I get a system-modal error message? An entry in the Windows System log? A bugcheck (blue screen)? Or &#8212; shudder &#8212; nothing at all?</p>
<p>An ECC failure has never occurred with this machine, to my knowledge. But I&#8217;ve always wondered what would happen if one did.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-477403">
				<div id="div-comment-477403" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Richard</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070227-00/?p=27843#comment-477403">
			February 27, 2007 at 8:31 pm</a>		</div>

		<p>I just found a very dusty book on my shelf titled &quot;Professional Debug Facility&quot; from IBM. &nbsp;In this book I found a small ISA card that provides the NMI function described by Raymond, complete with a little black button to force the NMI. &nbsp;This brings back fond memories of debugging assembly code on the original PC.</p>
<p>Now if only I could find a computer with an available ISA slot.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-477413">
				<div id="div-comment-477413" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">random@undergrad.math.uwaterloo.ca</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070227-00/?p=27843#comment-477413">
			February 27, 2007 at 8:47 pm</a>		</div>

		<p>At UW (Waterloo of course; accept no substitutes) there was an NMI button on the on the CS 452 (realtime) course machines. &nbsp;The course objective was to write an OS to control a Marklin train system; it was a lot of fun, but sleep was hard to come by; at least there was plenty of free food from employer presentations. &nbsp;Naturally these fledgling OSes would get wedged hard fairly frequently. &nbsp;Pushing the NMI would boot back up to the loader program, which could run submitted OS images using TFTP.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-477463">
				<div id="div-comment-477463" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Tom</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070227-00/?p=27843#comment-477463">
			February 27, 2007 at 11:24 pm</a>		</div>

		<blockquote><p>
  &quot;The BIOS must write to all of memory several &gt;times before the memory becomes stable.&quot;
</p></blockquote>
<p>></p>
<blockquote><p>
  Could you expand on that? Intriguing!
</p></blockquote>
<p>I once saw and embedded system that did the assembly equivalent of a memset(sdram_base, 0, sdram_size) to clear parity DRAM early in initialization. The comment was that one some DRAM, the chips power up with random data. Since it&#8217;s random and reading checks the parity which has a 50% chance of being right, it&#8217;s possible that if you read before writing, you&#8217;ll get a fatal ECC error.</p>
<p>Not sure why &#8216;several times&#8217; though, maybe it&#8217;s something to do with refreshing.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-477473">
				<div id="div-comment-477473" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Norman Diamond</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070227-00/?p=27843#comment-477473">
			February 27, 2007 at 11:25 pm</a>		</div>

		<blockquote><p>
  In practice, the only device that generates</p>
<p>  an NMI (on purpose) is the memory controller,</p>
<p>  which raises it when a parity error is</p>
<p>  detected.
</p></blockquote>
<p>The only device that SHOULD generate an NMI (on purpose) is the power failure detector. &nbsp;A while earlier there was a link either in this blog or one of your famous colleagues, to someone else&#8217;s article about unbelievable abuses of NMI. &nbsp;Anything other than power failure can be handled normally in accordance with an OS&#8217;s priorities and thread management.</p>
<p>Tuesday, February 27, 2007 10:24 AM by vince</p>
<blockquote><p>
  At least on Linux, watchdog timers and</p>
<p>  performance counters also trigger NMIs.
</p></blockquote>
<p>OK, I guess there&#8217;s no limit to this unbelievability. &nbsp;Though they do have competition &#8212; where&#8217;s that MSDN page about Windows giving performance counters a higher priority than power failure (but that&#8217;s software priorities not NMI).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-477513">
				<div id="div-comment-477513" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Chris Nahr</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070227-00/?p=27843#comment-477513">
			February 28, 2007 at 5:28 am</a>		</div>

		<p>There was a commercial debugger for IBM PCs that came with an expansion card and an NMI trigger button. &nbsp;You&#8217;d load the debugger as a resident program, and when you pressed the button the debugger would start up, showing you the exact location and memory state of the program you just interrupted.</p>
<p>That was a really cool program&#8230; sadly I can&#8217;t recall the name at the moment.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-477523">
				<div id="div-comment-477523" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Chris Nahr</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070227-00/?p=27843#comment-477523">
			February 28, 2007 at 5:29 am</a>		</div>

		<p>Hey, David mentioned the name in a comment above &#8212; it was the Periscope debugger!</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-477543">
				<div id="div-comment-477543" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">BryanK</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070227-00/?p=27843#comment-477543">
			February 28, 2007 at 8:08 am</a>		</div>

		<p>Norman &#8212; I&#8217;m not sure about the performance counters, but there&#8217;s a very good reason the watchdog uses the NMI. &nbsp;(It&#8217;s a watchdog that&#8217;s implemented in the I/O APIC; IIRC the APIC can schedule interrupt delivery for a later time, and the NMI watchdog driver just schedules an NMI for some time in the future. &nbsp;Then it wakes up before that time and reschedules the NMI.)</p>
<p>Anyway, the reason it&#8217;s an NMI is so it will still act as a watchdog even if your kernel is locked up in a state where interrupts are disabled (via cli or the SMP equivalent). &nbsp;As long as the interrupt handler for the NMI interrupt is still there, the machine will at least print out a stack trace, and you can see where in the kernel it got locked up.</p>
<p>(True, it&#8217;s not a real watchdog: it won&#8217;t reset the machine. &nbsp;But it&#8217;s useful for debugging many types of in-kernel lockups, where real watchdogs aren&#8217;t.)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-477603">
				<div id="div-comment-477603" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">vince</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070227-00/?p=27843#comment-477603">
			February 28, 2007 at 10:30 am</a>		</div>

		<blockquote><p>
  OK, I guess there&#8217;s no limit to this unbelievability. &nbsp;</p>
<p>  Though they do have competition &#8212; where&#8217;s that MSDN page about Windows</p>
<p>  giving performance counters a higher priority than power failure (but</p>
<p>  that&#8217;s software priorities not NMI).
</p></blockquote>
<p>What good are your performance counters if they lose counts if you happen to trigger while the processor is servicing an interrupt?</p>
<p>In any case all the performance counter NMI does is update an OS counter, so it is unlikely it&#8217;s going to interfere with the system that much. &nbsp;And of course, performance counting is turned off by default and only enabled if you decide you want to profile something.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-477643">
				<div id="div-comment-477643" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Mark Hampton</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070227-00/?p=27843#comment-477643">
			February 28, 2007 at 11:14 am</a>		</div>

		<p>I found another way to generate NMI&#8217;s by accident&#8230; In college, a roommate and I built a plugin card (etched the card ourselves), and one day we plugged it in backwards. After that, the machine wouldn&#8217;t boot, just gave NMI errors. After looking at the schematics, we realized we blew up one NOR gate on a 7402. Luckily, I had one, and we piggy backed it on the bad one and replaced the blown one. Computer ran fine. Of course, this was back in the 8088 days when mere mortals could understand timings and such.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-xepol odd alt thread-odd thread-alt depth-1" id="comment-477773">
				<div id="div-comment-477773" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Xepol' rel='external nofollow' class='url'>Xepol</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070227-00/?p=27843#comment-477773">
			February 28, 2007 at 4:52 pm</a>		</div>

		<p>The old IBM ATs were strange beasts.</p>
<p>I once had one clear the screen and inform me that the system bus had failed.</p>
<p>Ultimately, it turned to be a rogue procedural pointer that drove the machine down the path to insanity rather than the next logical operation, but to this day, I wonder who it was that decided that they could actually get a message out across the bus to the video card if the bus had ACTUALLY failed&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-477783">
				<div id="div-comment-477783" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Nick Lamb</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070227-00/?p=27843#comment-477783">
			February 28, 2007 at 6:06 pm</a>		</div>

		<p>BryanK / Norman</p>
<p>Linux provides support for watchdog hardware, which can autonomously power cycle a machine when it stops doing whatever it was supposed to do, no matter the reason. It also provides a trivial software implementation of the same API. Neither of these use an NMI.</p>
<p>The NMI watchdog, though it has a similar name, is merely a debugging tool, specifically it converts hangs (which are notoriously hard to diagnose) into crashes (which provide tracebacks and other useful diagnostics) in exchange for reduced performance. It&#8217;s a software replacement for Raymond&#8217;s tried and tested method with the ballpoint pen.</p>
<p>So in terms of production use you might have a hardware watchdog because you intend to bury the system in a glacier for two years and you can&#8217;t have someone dig it out every time a software error crashes it, whereas you might use the NMI watchdog because your customer&#8217;s database server mysteriously freezes every 2-3 days for no apparent reason and you can&#8217;t reproduce it on your test hardware.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-477813">
				<div id="div-comment-477813" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://feeds.feedburner.com/SteveBargelt' rel='external nofollow' class='url'>Steve Bargelt</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070227-00/?p=27843#comment-477813">
			February 28, 2007 at 6:58 pm</a>		</div>

		<p>Raymond &#8211; oh what memories. In the Windows 95 days I had to acquire and install NMI cards in all of my game testing machines so that (if my memory is not failing me) we could break into the debugger so that you guys (I think it was usually Ralph Lipe who drew the short straw) could debug Doom or other less important DOS-based game.</p>
<p>Yes everyone &#8211; getting Doom to run on Windows 95 was a fairly high priority. ;-)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-477843">
				<div id="div-comment-477843" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joe Old-timer</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070227-00/?p=27843#comment-477843">
			February 28, 2007 at 9:26 pm</a>		</div>

		<p>The old Gravis Ultrasound card used NMI to implement software-assisted Soundbaster emulation. See for example:</p>
<p><a rel="nofollow" target="_new" href="http://www.tldp.org/HOWTO/PCI-HOWTO-3.html" rel="nofollow">http://www.tldp.org/HOWTO/PCI-HOWTO-3.html</a></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-477853">
				<div id="div-comment-477853" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Norman Diamond</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070227-00/?p=27843#comment-477853">
			February 28, 2007 at 9:39 pm</a>		</div>

		<p>Wednesday, February 28, 2007 8:08 AM by BryanK</p>
<blockquote><p>
  there&#8217;s a very good reason the watchdog uses</p>
<p>  the NMI.
</p></blockquote>
<p>OK, I won&#8217;t complain too loudly about watchdogs. &nbsp;But I&#8217;ll still complain a little bit, because I sure don&#8217;t want a watchdog to interrupt a power failure handler.</p>
<p>Wednesday, February 28, 2007 10:30 AM by vince</p>
<blockquote><p>
  What good are your performance counters if</p>
<p>  they lose counts if you happen to trigger</p>
<p>  while the processor is servicing an interrupt?
</p></blockquote>
<p>What good are your performance counters if they interrupt an ISR that really knew it couldn&#8217;t be interrupted at that point? &nbsp;Will you really be able to count that tick after recovering from a BSOD? &nbsp;For comparison, if a power failure handler executes while some other ISR is interrupted, causing a BSOD when the power failure handler returns, well so what, the power&#8217;s going away in about 10 milliseconds anyway.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-477893">
				<div id="div-comment-477893" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://dmoisan.spaces.msn.com/' rel='external nofollow' class='url'>David Moisan</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070227-00/?p=27843#comment-477893">
			February 28, 2007 at 10:44 pm</a>		</div>

		<p>One peripheral card that has caused NMI&#8217;s is a USB port card. &nbsp;I put an Adaptec USB/Firewire card in a server to hook up an external HD that was bus powered (off the USB).</p>
<p>The first time I spun up the drive, Windows disabled the USB port due to overcurrent. &nbsp;The 2nd time gave me thea bluescreen just as described.</p>
<p>The real WTF is why the USB card didn&#8217;t have external power connectors so that it would not have to draw all its power off the PCI bus. &nbsp;Honorable mention to the disk vendor who thought there was nothing wrong in having a USB powered device suck up all the power on a port.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-477903">
				<div id="div-comment-477903" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">vince</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070227-00/?p=27843#comment-477903">
			February 28, 2007 at 11:38 pm</a>		</div>

		<blockquote><p>
  What good are your performance counters if they</p>
<p>  interrupt an ISR that really knew it couldn&#8217;t be</p>
<p>  interrupted at that point?
</p></blockquote>
<p>Any ISR can be interrupted by a NMI at any time. &nbsp;That&#8217;s the <em>definition</em> of a NMI, and your OS better handle it.</p>
<p>Sure, you probably don&#8217;t want to enable NMI interrupts if you are trying to run some sort of real-time operating system, but we are talking general purpose OS right now.</p>
<p>In any case, on x86 NMI interrupts themselves can be disabled by SMI interrupts, which have higher priority than NMI. &nbsp;So if you really are worried about your ISRs you better hope your BIOS isn&#8217;t ever using SMM routines.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-477923">
				<div id="div-comment-477923" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://wendyhome.com' rel='external nofollow' class='url'>::Wendy::</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070227-00/?p=27843#comment-477923">
			March 1, 2007 at 1:10 am</a>		</div>

		<p>slightly off topic: &nbsp;once I said &quot;blue screen of death&quot; while in a call to IT support, &nbsp;the support person got me to describe it, &nbsp;then giggled and said &quot;Blue Screen of Death?! &nbsp;cute!&quot; &nbsp;I had to laugh when tech support knows less tech jargon than me I know I&#8217;m in for a rough ride&#8230;.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-478103">
				<div id="div-comment-478103" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">BryanK</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070227-00/?p=27843#comment-478103">
			March 1, 2007 at 11:19 am</a>		</div>

		<blockquote><p>
  because I sure don&#8217;t want a watchdog to interrupt a power failure handler.
</p></blockquote>
<p>The NMI only triggers when the watchdog code fails to reset the APIC&#8217;s timer. &nbsp;You don&#8217;t get periodic NMIs when using the NMI watchdog; you only get one when the kernel&#8217;s locked up. &nbsp;And at that point, the power&#8217;s-going-to-die NMI may not matter much.</p>
<p>(But I&#8217;m not sure whether it matters or not: when power fails and the NMI is generated, what should the OS do? &nbsp;I can see hardware having to deal with imminent power loss, but not software. &nbsp;I think pretty much anything that the OS should do to prepare for power failure (cancel disk activity, suspend itself to disk, etc.) will likely fail if the NMI watchdog is about to trigger.)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-478573">
				<div id="div-comment-478573" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Norman Diamond</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070227-00/?p=27843#comment-478573">
			March 1, 2007 at 9:06 pm</a>		</div>

		<p>Wednesday, February 28, 2007 11:38 PM by vince</p>
<p>[Norman Diamond:]</p>
<blockquote><p>
  &gt; What good are your performance counters if</p>
<p>  &gt; they interrupt an ISR that really knew it</p>
<p>  &gt; couldn&#8217;t be interrupted at that point?
</p></blockquote>
<p>></p>
<blockquote><p>
  Any ISR can be interrupted by a NMI at any</p>
<p>  time.
</p></blockquote>
<p>No shi*. &nbsp;Guess why I expressed outrage at the use of NMI for performance counters? &nbsp;Guess why NMI should be used only for power failures?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-481413">
				<div id="div-comment-481413" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Rich</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070227-00/?p=27843#comment-481413">
			March 12, 2007 at 11:35 pm</a>		</div>

		<p>I got a &quot;Hardware Malfunction&quot; on a Vista 6000 platform with NMI: Parity check / Memnory Parity Error. Call stack as below:</p>
<p>nt!RtlpBreakWithStatusInstruction</p>
<p>nt!KiBugCheckDebugBreak+0x1c</p>
<p>nt!KeEnterKernelDebugger+0x45</p>
<p>hal!HalpNMIHalt+0xe2</p>
<p>hal!HalBugCheckSystem+0x3d</p>
<p>nt!WheaReportHwError+0x10c</p>
<p>hal!HalHandleNMI+0x93</p>
<p>nt!KiTrap02+0x136</p>
<p>nt!READ_REGISTER_ULONG+0x6</p>
<p>Any good suggestion or idea?</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

