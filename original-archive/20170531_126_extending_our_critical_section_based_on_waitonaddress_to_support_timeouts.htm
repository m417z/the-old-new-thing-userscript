<html>
<head>
<title>Extending our critical section based on WaitOnAddress to support timeouts</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>Extending our critical section based on WaitOnAddress to support timeouts</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>May 31, 2017 / year-entry #127</td></tr>
<tr><td><b>Tags:</b></td><td>code</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20170531-00/?p=96255</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>0</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">Ooh, look, a new feature.</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>
Let's take the
<a HREF="https://blogs.msdn.microsoft.com/oldnewthing/20160825-00/?p=94165">
critical section we constructed in terms of
<code>Wait&shy;On&shy;Address</code></a>
and add two new functions:
</p>
<ul>
<li>
<code>Try&shy;Enter&shy;Alt&shy;Cs</code>
tries to enter the critical section if it is either available
or is already owned by the current thread.
If the critical section is owned by another thread,
then the call fails.
</li>
<li>
<code>Try&shy;Enter&shy;Alt&shy;Cs&shy;With&shy;Timeout</code>
which tries to enter the critical section but gives up after
waiting for the specified timeout.
</li>
</ul>
<p>
The first function is a simplification of the existing
<code>Enter&shy;Alt&shy;Cs</code> function.
It simply gives up if the critical section is not available.
</p>
<pre>
bool TryEnterAltCs(ALTCS* Cs)
{
  DWORD ThisThread = GetCurrentThreadId();
  DWORD PreviousOwner = InterlockedCompareExchangeAcquire(
               &amp;Cs-&gt;OwnerThread, ThisThread, 0);
  if (PreviousOwner == 0) {
    Cs-&gt;ClaimCount++;
    return true;
  }

  if (PreviousOwner == ThisThread) {
    Cs-&gt;ClaimCount++;
    return true;
  }

  return false;
}
</pre>
<p>
The second function is a modification of the existing
<code>Enter&shy;Alt&shy;Cs</code> function
that gives up after waiting too long:
</p>
<pre>
// Timeout is in milliseconds and cannot be INFINITE.
<font COLOR="blue">bool</font> TryEnterAltCsWithTimeout(ALTCS* Cs, DWORD Timeout)
{
  <font COLOR="blue">ULONGLONG Deadline = GetTickCount64() + Timeout;</font>

  DWORD ThisThread = GetCurrentThreadId();
  <font COLOR="blue">DWORD TimeRemaining;
  do {</font>
    DWORD PreviousOwner = InterlockedCompareExchangeAcquire(
               &amp;Cs-&gt;OwnerThread, ThisThread, 0);
    if (PreviousOwner == 0) {
      Cs-&gt;ClaimCount++;
      return <font COLOR="blue">true</font>;
    }

    if (PreviousOwner == ThisThread) {
      Cs-&gt;ClaimCount++;
      return <font COLOR="blue">true</font>;
    }

    <font COLOR="blue">ULONGLONG Now = GetTickCount64();
    if (Now &gt;= Deadline) {
      return false;
    }

    TimeRemaining = static_cast&lt;DWORD&gt;(Deadline - Now);
  } while (WaitOnAddress(&amp;Cs-&gt;OwnerThread,
      &amp;PreviousOwner, sizeof(PreviousOwner), TimeRemaining));
  return false;</font>
}
</pre>
<p>
The changes we made were to keep track of how much time
remains before the deadline.
If the deadline passes, then we return <code>false</code>.
Otherwise, we ask <code>Wait&shy;On&shy;Address</code> to wait
for the owner to change, or for the timeout to elapse.
The function returns <code>FALSE</code> if it returned due to
a timeout,
in which case we break out of the loop and return <code>false</code>.
Otherwise, we were signaled (possibly spuriously),
so we go back and try to claim the critical section again.</p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

