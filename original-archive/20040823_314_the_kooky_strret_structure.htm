<html>
<head>
<title>The kooky STRRET structure</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>The kooky STRRET structure</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>August 23, 2004 / year-entry #315</td></tr>
<tr><td><b>Tags:</b></td><td>history</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20040823-00/?p=38073</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>10</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">If you've messed with the shell namespace, you've no doubt run across the kooky STRRET structure, which is used by IShellFolder::GetDisplayNameOf to return names of shell items. As you can see from its documentation, a STRRET is sometimes an ANSI string buffer, sometimes a pointer to a UNICODE string, sometimes (and this is the kookiest...</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>If you've messed with the shell namespace, you've no doubt run across <a href="http://msdn.microsoft.com/library/en-us/shellcc/platform/shell/reference/structures/strret.asp">the kooky STRRET structure</a>, which is used by <a href="http://msdn.microsoft.com/library/en-us/shellcc/platform/shell/reference/ifaces/ishellfolder/GetDisplayNameOf.asp">IShellFolder::GetDisplayNameOf</a> to return names of shell items. As you can see from its documentation, a STRRET is sometimes an ANSI string buffer, sometimes a pointer to a UNICODE string, sometimes (and this is the kookiest bit) an offset into a pidl. What is going on here?</p>
<p>The STRRET structure burst onto the scene during the Windows&nbsp;95 era. Computers during this time were still comparatively slow and memory-constrained. (Windows&nbsp;95's minimum hardware requirements were for 4MB of memory and a 386DX processor - which ran at a whopping 25MHz.) It was much faster to allocate memory off the stack (a simple "sub" instruction) than to allocate it from the heap (which might take <strong>thousands</strong> of instructions!), so the STRRET structure was designed so the common (for Windows&nbsp;95) scenarios could be satisfied without needing a heap allocation. </p>
<p>The STRRET_OFFSET flag took this to an even greater extreme. Often, you kept the name inside the pidl, and copying it into the STRRET structure would take, gosh, 200 clocks (!). To avoid this wasteful memory copying, STRRET_OFFSET allowed you to return just an offset into the pidl, which the caller could then copy out of directly. </p>
<p>Woo-hoo, you saved a string copy. </p>
<p>Of course, as time passed and computers got faster and memory became more readily available, these micro-optimizations have turned into annoyances. Saving 200 clock cycles on a string copy operation is hardly worth it any more. On a 1GHz processor, a single soft page fault costs you over a million cycles; a hard page fault costs you tens of millions. </p>
<p>You can copy a lot of strings in twenty million cycles. </p>
<p>What's more, the scenarios that were common in Windows&nbsp;95 aren't quite so common any more, so the original scenario that the optimization was tailored for hardly occurs any more. It's an optimization that has outlived its usefulness. </p>
<p>Fortunately, you don't have to think about the STRRET structure any more. There are <a href="http://msdn.microsoft.com/library/en-us/shellcc/platform/shell/reference/shlwapi/string/strrettobstr.asp">several</a> <a href="http://msdn.microsoft.com/library/en-us/shellcc/platform/shell/reference/shlwapi/string/strrettobuf.asp">helper</a> <a href="http://msdn.microsoft.com/library/en-us/shellcc/platform/shell/reference/shlwapi/string/strrettostr.asp">functions</a> that take the STRRET structure and turn it into something much easier to manipulate. </p>
<p>The kookiness of the STRRET structure has now been encapsulated away. Thank goodness. </p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (10)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-205343">
				<div id="div-comment-205343" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">nikita</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040823-00/?p=38073#comment-205343">
			August 23, 2004 at 8:19 am</a>		</div>

		<blockquote><p>
  It was much faster to allocate memory off the stack (a<br />
  <br />&gt; simple &quot;sub&quot; instruction) than to allocate it from the<br />
  <br />&gt; heap (which might take thousands of instructions!),</p>
<p>Eh? Surely stack allocation became faster relative<br />
  <br />to the generic memory allocator during last ten years.</p>
<p>For one thing, all `per-cpu magazines&#8217; notwithstanding,<br />
  <br />allocator still acquires some kind of lock occasionaly,<br />
  <br />and resulting coherent bus traffic is very expensive.<br />
  <br />Taking even uncontended spin-lock on modern x86 is<br />
  <br />hundreds cycles (but still one instruction).<br />
  
</p></blockquote>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-205353">
				<div id="div-comment-205353" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">AF</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040823-00/?p=38073#comment-205353">
			August 23, 2004 at 8:39 am</a>		</div>

		<blockquote><p>
  On a 1GHz processor, a single soft page fault costs you over a million cycles</p>
<p>What?  Two context switches, one new PTE, and a 4k memcpy&#8230; takes 1e6 cycles?
</p></blockquote>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-205373">
				<div id="div-comment-205373" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Michael</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040823-00/?p=38073#comment-205373">
			August 23, 2004 at 9:05 am</a>		</div>

		<p>Yes, on a 1GHz processor 1 million cycles is a millisecond, which seems way too long for a soft page fault.  Raymond, surely you mean a hard page fault?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-205383">
				<div id="div-comment-205383" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://weblogs.asp.net/oldnewthing/' rel='external nofollow' class='url'>Raymond Chen</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040823-00/?p=38073#comment-205383">
			August 23, 2004 at 9:16 am</a>		</div>

		<p>Hard page faults are killer since you are at the mercy of the disk drive. It&#8217;s not too unusual for this to be as slow as 10ms.</p>
<p>Soft page faults are more like 80,000 cycles according to this article <a target="_new" href="http://msdn.microsoft.com/library/en-us/dnvc60/html/optcode.asp" rel="nofollow">http://msdn.microsoft.com/library/en-us/dnvc60/html/optcode.asp</a><br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-205403">
				<div id="div-comment-205403" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Merle</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040823-00/?p=38073#comment-205403">
			August 23, 2004 at 10:44 am</a>		</div>

		<p>I love the way the MSDN article &quot;translates&quot; times into &quot;human&quot; terms:</p>
<p>&quot;Therefore, a typical &quot;soft&quot; page fault incurs a 200-microsecond penalty, which is 80,000 CPU cycles. To put that in human terms, if it took 1 second to read a byte from the primary CPU cache, it would take almost a day to process a page fault.&quot;</p>
<p>Erm, yeah, but your 10ms hard drive access would translate into a fifty day penalty.  Kind of like  physical-mailing off for a book from Botswana.</p>
<p>And, yes, this is a huge performance hit, no doubt.  I just have a beef with their comparison.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-205423">
				<div id="div-comment-205423" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.valhallalegends.com/skywing' rel='external nofollow' class='url'>Skywing</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040823-00/?p=38073#comment-205423">
			August 23, 2004 at 11:55 am</a>		</div>

		<p>Not all page faults incur a disk access.  For instance, touching an uncommitted range will cause a page fault, but will not cause a pagefile hit (instead, you&#8217;ll eventually see a STATUS_ACCESS_VIOLATION exception in user mode).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-205453">
				<div id="div-comment-205453" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">josh</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040823-00/?p=38073#comment-205453">
			August 23, 2004 at 1:40 pm</a>		</div>

		<p>I&#8217;m confused&#8230; how much did a page fault cost on a 25MHz machine then?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-205463">
				<div id="div-comment-205463" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blog.ensoft-software.com/' rel='external nofollow' class='url'>Eric Newton</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040823-00/?p=38073#comment-205463">
			August 23, 2004 at 2:21 pm</a>		</div>

		<p>So STRRET is still around but just encapsulated?</p>
<p>Ah well, at least when its encapsulated, the possibility exists to get rid of a dated idea.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-205473">
				<div id="div-comment-205473" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Jack Mathews</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040823-00/?p=38073#comment-205473">
			August 23, 2004 at 4:45 pm</a>		</div>

		<p>Skywing: Right, that&#8217;s a soft page fault.  That&#8217;s why there&#8217;s the differentiation</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-205483">
				<div id="div-comment-205483" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Jack Mathews</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040823-00/?p=38073#comment-205483">
			August 23, 2004 at 4:48 pm</a>		</div>

		<p>josh:</p>
<p>Well, since disks haven&#8217;t sped up THAT much, page faults took less clock cycles.  So if disks are twice as fast, but processors are 10x faster, then page faults would take 5x less clock cycles on the slower machine.  Same with RAM.  RAM hasn&#8217;t kept up with CPU clock speeds, so you can do similar kinds of math for that.</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

