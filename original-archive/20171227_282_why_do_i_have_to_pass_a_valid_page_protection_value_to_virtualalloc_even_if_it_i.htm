<html>
<head>
<title>Why do I have to pass a valid page protection value to VirtualAlloc even if it ignores it?</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>Why do I have to pass a valid page protection value to VirtualAlloc even if it ignores it?</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>December 27, 2017 / year-entry #283</td></tr>
<tr><td><b>Tags:</b></td><td>code</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20171227-00/?p=97656</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>4</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">It ignores it, after it validates it.</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>
The
<code>Virtual&shy;Alloc</code> function
accepts a
<code>flProtect</code>
value,
and even though the value is not used by
<code>MEM_</code><code>RESET</code>
or
<code>MEM_</code><code>RESET_</code><code>UNDO</code>,
you still have to pass a valid value.
(The documentation suggests
<code>PAGE_</code><code>NO&shy;ACCESS</code>.)
</p>
<p>
Why do you have to pass a valid value even if the
system doesn't use it?
</p>
<p>
This is an artifact of how the front-end
parameter validation is done.
The <code>Virtual&shy;Alloc</code> function does
parameter validation by checking each parameter
individually to confirm that the value is among
the valid values.
</p>
<p>
For
<code>flAllocationType</code>
the code makes sure that a valid combination of flags
is passed.
</p>
<p>
For <code>flProtect</code>,
the code makes sure that the page protection value is one of
the valid values.
</p>
<p>
This validation is not contextual, however.
When the
<code>Virtual&shy;Alloc</code> function
validates the <code>flProtect</code> parameter,
it doesn't take the
<code>flAllocationType</code> into account.
</p>
<p>
After the front-end validation is done,
the code starts breaking down the cases
and performs additional validation as necessary.
</p>
<p>
But what you don't see is a parameter validation
short-circuit.
</p>
<p>
So by the time the code realizes that it's
in a case where the
<code>flProtect</code>
value is not used,
it has already validated it.
</p>
<p>
So make sure your parameters are valid,
even if you're calling the function in a way
where the parameter is not used.
</p>
<p>
<b>Bonus chatter</b>:
You would think that the <code>flProtect</code>
would not be used when reserving address space with
<code>MEM_</code><code>RESERVE</code>,
but you'd be wrong.
If reserving regular address space,
then the protection should be
<code>PAGE_</code><code>NO&shy;ACCESS</code>.
This first rule isn't surprising.
If you are reserving the space but haven't allocated
anything yet,
then naturally you don't have access to anything there,
since there's nothing there to access.
</p>
<p>
The odd bit is that if you are reserving address space for
Address Windowing Extensions (AWE),
then your allocation type is
<code>MEM_</code><code>RESERVE | MEM_</code><code>PHYSICAL</code>,
and the protection must be
<code>PAGE_</code><code>READ&shy;WRITE</code>.
Yes, there's no memory there yet,
but you still have read/write access to it.
(I don't know what that means either,
but that's the rule.)</p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (4)	</div>

		<div id="respond" class="comment-respond">
		<h3 id="reply-title" class="comment-reply-title"> <small><a rel="nofollow" id="cancel-comment-reply-link" href="/oldnewthing/20171227-00/?p=97656#respond" style="display:none;">Cancel reply</a></small></h3>			<form action="https://blogs.msdn.microsoft.com/oldnewthing/wp-comments-post.php" method="post" id="commentform" class="comment-form">
				<p class="comment-form-comment"><textarea id="comment" name="comment" cols="45" rows="4" aria-required="true"></textarea></p><p class="comment-form-author"><label for="author">Name <span class="required">*</span></label> <input id="author" name="author" type="text" value="" size="30" maxlength="245" aria-required='true' required='required' /></p>
<p class="comment-form-email"><label for="email">Email <span class="required">*</span></label> <input id="email" name="email" type="text" value="" size="30" maxlength="100" aria-describedby="email-notes" aria-required='true' required='required' /></p>
<p class="comment-form-url"><label for="url">Website</label> <input id="url" name="url" type="text" value="" size="30" maxlength="200" /></p>
<p class="form-submit"><input name="submit" type="submit" id="submit" class="submit btn btn-default" value="Post Comment" /> <input type='hidden' name='comment_post_ID' value='97656' id='comment_post_ID' />
<input type='hidden' name='comment_parent' id='comment_parent' value='0' />
</p><p style="display: none;"><input type="hidden" id="akismet_comment_nonce" name="akismet_comment_nonce" value="2d49d412ed" /></p><p style="display: none;"><input type="hidden" id="ak_js" name="ak_js" value="87"/></p>			</form>
			</div><!-- #respond -->
	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1 parent" id="comment-1318955">
				<div id="div-comment-1318955" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">hyperman</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20171227-00/?p=97656#comment-1318955">
			December 28, 2017 at 6:41 am</a>		</div>

		<p>Being naturally curious especially when raimond doesnt know what something means, I googled AWE.  It seems to be the 32bit equivalent of EMS from good old DOS times.  Trying to Extrapolate from MSDN (A.k.a. I make this up  here and now), there are multiple potential bytes available for each virtual address in the AWE window.  When you specify which of these bytes  is active for now with MapUserPhysicalPages , there is no protection argument.  So I guess you just have to specify the protection flags when you create the window, not when you put memory in it.</p>

		<div class="reply"><a rel='nofollow' class='comment-reply-link' href='https://blogs.msdn.microsoft.com/oldnewthing/20171227-00/?p=97656&#038;replytocom=1318955#respond' onclick='return addComment.moveForm( "div-comment-1318955", "1318955", "respond", "97656" )' aria-label='Reply to hyperman'>Reply</a></div>
				</div>
		<ol class="children">
		<li class="comment odd alt depth-2" id="comment-1318957">
				<div id="div-comment-1318957" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">hyperman</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20171227-00/?p=97656#comment-1318957">
			December 28, 2017 at 6:45 am</a>		</div>

		<p>Oops. Sorry Raymond, I misspelled your name.    Probably a shooting offence on this blog.   I would of course write it 100 times correctly with pens of differently colors in this post, but then you&#8217;d ban me for spamming.</p>

		<div class="reply"><a rel='nofollow' class='comment-reply-link' href='https://blogs.msdn.microsoft.com/oldnewthing/20171227-00/?p=97656&#038;replytocom=1318957#respond' onclick='return addComment.moveForm( "div-comment-1318957", "1318957", "respond", "97656" )' aria-label='Reply to hyperman'>Reply</a></div>
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment byuser comment-author-davebacher even thread-odd thread-alt depth-1 parent" id="comment-1318995">
				<div id="div-comment-1318995" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Dave+Bacher' rel='external nofollow' class='url'>Dave Bacher</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20171227-00/?p=97656#comment-1318995">
			December 28, 2017 at 4:37 pm</a>		</div>

		<p>&#8220;The odd bit is that if you are reserving address space for Address Windowing Extensions (AWE), then your allocation type is MEM_RESERVE | MEM_PHYSICAL, and the protection must be PAGE_READÂ­WRITE. Yes, there&#8217;s no memory there yet, but you still have read/write access to it. (I don&#8217;t know what that means either, but that&#8217;s the rule.)&#8221;</p>
<p>What&#8217;s so odd about that.</p>
<p>I have four threads in a pool, each thread calls VirtualAlloc and they&#8217;re sharing a copy of a table in AWE.  AWE doesn&#8217;t want to have to do a per-thread first time initialization, or track page status &#8212; and the assumption is the entire data structure in AWE has a similar protection level requirement for the thread &#8212; so you set it once on the address range, and then move the window across the data structure(s) as required.</p>
<p>There&#8217;s a security concern if AWE doesn&#8217;t correctly limit the window to only memory that AWE has allocated &#8212; but that&#8217;s a much easier problem than tracking protection level for pages.  At least in theory.  </p>
<p>Sorry if this is a double post, my Internet connection is bad and I don&#8217;t know if you&#8217;re moderating me or if my post didn&#8217;t take.</p>

		<div class="reply"><a rel='nofollow' class='comment-reply-link' href='https://blogs.msdn.microsoft.com/oldnewthing/20171227-00/?p=97656&#038;replytocom=1318995#respond' onclick='return addComment.moveForm( "div-comment-1318995", "1318995", "respond", "97656" )' aria-label='Reply to Dave Bacher'>Reply</a></div>
				</div>
		<ol class="children">
		<li class="comment odd alt depth-2" id="comment-1319015">
				<div id="div-comment-1319015" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Rick C</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20171227-00/?p=97656#comment-1319015">
			December 29, 2017 at 7:08 am</a>		</div>

		<p>We won&#8217;t know unless he replies, but it could be &#8220;I don&#8217;t know what that means&#8221; means &#8220;you have read/write access to memory that doesn&#8217;t exist is kind of like &#8216;what is the sound of one hand clapping?'&#8221;</p>

		<div class="reply"><a rel='nofollow' class='comment-reply-link' href='https://blogs.msdn.microsoft.com/oldnewthing/20171227-00/?p=97656&#038;replytocom=1319015#respond' onclick='return addComment.moveForm( "div-comment-1319015", "1319015", "respond", "97656" )' aria-label='Reply to Rick C'>Reply</a></div>
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

