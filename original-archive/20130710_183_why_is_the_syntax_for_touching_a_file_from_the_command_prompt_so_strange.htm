<html>
<head>
<title>Why is the syntax for touching a file from the command prompt so strange?</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>Why is the syntax for touching a file from the command prompt so strange?</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>July 10, 2013 / year-entry #184</td></tr>
<tr><td><b>Tags:</b></td><td>history</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20130710-00/?p=3843</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>38</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">The magic incantation for updating the last-modified date on a file is COPY /B FILE+,, What strange syntax! What's with the plus sign and the commas, anyway? The formal syntax is the much more straightforward COPY /B A+B+C+D This means to start with the file A, then append the files B, C, and D, treating...</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>
<a HREF="http://support.microsoft.com/kb/69581">
The magic incantation for updating the last-modified date on a
file</a>
is
</p>
<pre>
COPY /B FILE+,,
</pre>
<p>
What strange syntax!
What's with the plus sign and the commas, anyway?
</p>
<p>
The formal syntax is the much more straightforward
</p>
<pre>
COPY /B A+B+C+D
</pre>
<p>
This means to start with the file <code>A</code>,
then append the files <code>B</code>, <code>C</code>, and <code>D</code>,
treating them all as binary files.
</p>
<p>
If you omit the
<code>B+C+D</code> part,
then you get
</p>
<pre>
COPY /B A+
</pre>
<p>
This means
"Start with A, then append nothing."
The side effect is that the last-write time gets updated,
because the command processor opens <code>A</code> for append,
writes nothing,
then closes the handle.
</p>
<p>
That syntax has worked since at least MS-DOS&nbsp;2.1
(the earliest version I still have a virtual machine for).
</p>
<p>
I dont know where the two-comma version came from,
but it most likely exploited a parsing glitch in
<code>COMMAND.COM</code>,
and somehow this variant gained traction and
became the version everybody used
(even though the other version is two keystrokes shorter).
As a result, this weird syntax has become grandfathered
as a special-case in the <code>CMD.EXE</code> parser.
Here's some actual code from the part of
<code>CMD.EXE</code> which parses the arguments to the
<code>COPY</code> command:
</p>
<pre>
if (parse_state == SEEN_TWO_COMMAS)
    copy_mode = TOUCH;
</pre>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (38)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-1066373">
				<div id="div-comment-1066373" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">AC</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130710-00/?p=3843#comment-1066373">
			July 10, 2013 at 7:07 am</a>		</div>

		<p>Somehow this post gives me the feeling the code consists of 90% back-compat crutches piled on top of each other all the way back to V1.0, 5% error handling, and 5% actual functionality.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1066383">
				<div id="div-comment-1066383" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">12BitSlab</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130710-00/?p=3843#comment-1066383">
			July 10, 2013 at 7:18 am</a>		</div>

		<p>I wrote a compiler in 1994 for a client that generated documents from a description language. &nbsp;The client wanted me to update it in 2007 to speed things up since they use this compiler to generate about 30,000,000 pages a month with it. &nbsp;When working on it, I found a bug in the original code, but I couldn&#39;t fix it. &nbsp;There were too many pieces of &quot;source code&quot; that depended on the bug in the compiler. &nbsp;The good news is that V2 of the compiler shaved about 85% of CPU time off of a compile, but the bug is still there. &nbsp;Drives me nuts, but the cost of fixing the source descriptions would have been way too high.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1066393">
				<div id="div-comment-1066393" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130710-00/?p=3843#comment-1066393">
			July 10, 2013 at 7:18 am</a>		</div>

		<p>@AC: You should see modern UNIX&#39;s incredible amount of back-compat junk carried around. However in this case, there&#39;s a decent chance removing a back-compat junk on a modern UNIX box causes it to not work (/bin/sh: who uses that anymore, I&#39;ll just get rid of it (or be smart and link it to bash) oops no boot (bash needs libraries in /usr, sh doesn&#39;t)).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1066413">
				<div id="div-comment-1066413" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Rick C</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130710-00/?p=3843#comment-1066413">
			July 10, 2013 at 7:20 am</a>		</div>

		<p>Seems kind of odd that after all this time, nobody at Microsoft actually wrote a touch utility to replace this hack.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1066423">
				<div id="div-comment-1066423" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Mathieu Garstecki</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130710-00/?p=3843#comment-1066423">
			July 10, 2013 at 7:22 am</a>		</div>

		<p>&gt; Somehow this post gives me the feeling the code consists of 90% back-compat crutches piled on top of each other all the way back to V1.0, 5% error handling, and 5% actual functionality.</p>
<p>This is the case for any software I get to maintain, at least any that is more than a year old. At least the code seems readable here !</p>
<p>This kind of magic tricks in cmd.exe is the reason why I use Powershell or install sh.exe any time I have to script something on Windows.</p>
<p>Pre-emptive snarky comment : of course, now I have 2 (or 3) problems.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-matteo odd alt thread-odd thread-alt depth-1" id="comment-1066433">
				<div id="div-comment-1066433" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Matteo+Italia' rel='external nofollow' class='url'>Matteo Italia</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130710-00/?p=3843#comment-1066433">
			July 10, 2013 at 7:29 am</a>		</div>

		<p>@Joshua: actually, on Linux usually the problem is the reverse: for a long time sh has been symlinked to bash by default, thus many scripts with the #/bin/sh shebang actually exploited features of bash without anyone noticing. For this reason, Debian (and derivatives) switching /bin/sh to dash (a recently written, stripped down POSIX-sh-conformant interpreter, hopefully faster and with a smaller memory footprint than bash) uncovered a lot of &quot;bashisms&quot; buried in many scripts.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-alegrigoriev even thread-even depth-1" id="comment-1066443">
				<div id="div-comment-1066443" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/alegr1' rel='external nofollow' class='url'>alegr1</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130710-00/?p=3843#comment-1066443">
			July 10, 2013 at 7:44 am</a>		</div>

		<p>Another quirk of COPY: append is done in &quot;text&quot; mode by default. This is why /B switch is there.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1066453">
				<div id="div-comment-1066453" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blogs.msdn.com/tlwest_4000_gmail.com/ProfileUrlRedirect.ashx' rel='external nofollow' class='url'>tlwest@gmail.com</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130710-00/?p=3843#comment-1066453">
			July 10, 2013 at 7:46 am</a>		</div>

		<p>&gt; Somehow this post gives me the feeling the code consists of 90% </p>
<p>&gt; back-compat crutches piled on top of each other all the way back </p>
<p>&gt; to V1.0, 5% error handling, and 5% actual functionality.</p>
<p>Which is why, when they turn off the very last desktop, it will be running code that contains the echoes of DOS v1.0.</p>
<p>In many cases, the alternative to throwing away backward compatibility is to not have your code being run on anything at all :-).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1066473">
				<div id="div-comment-1066473" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">BJC</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130710-00/?p=3843#comment-1066473">
			July 10, 2013 at 8:03 am</a>		</div>

		<p>Is it correct that this method only works if the file being touched is in the current directory? If the filename includes a path to a directory other than the current directory, the file is simply copied to the current directory (and the modified time isn&#39;t changed). If the filename doesn&#39;t have a path, and the file is in the current directory, then the operation works exectly as I&#39;d expect.</p>
<p>Certainly that&#39;s what I found previously when trying this from a batch file. I&#39;ve just tried it again with the demo batch file in the referenced KB article.</p>
<p>Am I doing something wrong, or is this expected behaviour?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-brunopitrus odd alt thread-odd thread-alt depth-1" id="comment-1066483">
				<div id="div-comment-1066483" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/kinokijuf' rel='external nofollow' class='url'>kinokijuf</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130710-00/?p=3843#comment-1066483">
			July 10, 2013 at 8:04 am</a>		</div>

		<p>&gt; Somehow this post gives me the feeling the code consists of 90% </p>
<p>&gt; back-compat crutches piled on top of each other all the way back </p>
<p>&gt; to V1.0, 5% error handling, and 5% actual functionality.</p>
<p>Case in point: the AT-compatible BIOS. Except there is no error handling.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1066493">
				<div id="div-comment-1066493" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130710-00/?p=3843#comment-1066493">
			July 10, 2013 at 8:10 am</a>		</div>

		<p>Incidentally, neither is a valid touch because both will if given pathtofile will copy the file to the current directory.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1066503">
				<div id="div-comment-1066503" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">BJC</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130710-00/?p=3843#comment-1066503">
			July 10, 2013 at 8:11 am</a>		</div>

		<p>@BJC &#8211; Ok just realised the mistake.</p>
<p>It is necessary to specify a destination folder, so the format is as follows:</p>
<p> &nbsp; &nbsp;copy /b D:mypathtest.file +,, D:mypath</p>
<p>Sorry to have raised some confusion.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1066523">
				<div id="div-comment-1066523" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">JM</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130710-00/?p=3843#comment-1066523">
			July 10, 2013 at 8:45 am</a>		</div>

		<p>Well, I learned something new today. The touch.exe I have on my system is actually unnecessary. And given my fluency with PowerShell, I guess the rest of the GNU utils could go as well. Still, sed and I have too much nostalgia going on to just discard it.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1066533">
				<div id="div-comment-1066533" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">henke37</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130710-00/?p=3843#comment-1066533">
			July 10, 2013 at 9:09 am</a>		</div>

		<p>This reminds me of a &quot;feature&quot; I discovered yesterday. It&#39;s not an error if one of the files are missing.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1066543">
				<div id="div-comment-1066543" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Gabe</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130710-00/?p=3843#comment-1066543">
			July 10, 2013 at 11:12 am</a>		</div>

		<p>Just recently I wanted to look for the cmd equivalent to touch, and all I could find was the &quot;copy&quot; variant. Apparently everybody forgets that touch will not only set the time on the file to &quot;now&quot;, but it will also create the file if it doesn&#39;t exist.</p>
<p>Since I only wanted to create the file if it doesn&#39;t exist (and don&#39;t care about its timestamp), the copy command was useless. What I ended up using was &quot;type nul &gt;&gt; file.to.create&quot; (which will have no effect on an existing file).</p>
<p>So a more complete version of touch would have to have both commands.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1066513">
				<div id="div-comment-1066513" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">dave</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130710-00/?p=3843#comment-1066513">
			July 10, 2013 at 8:41 am</a>		</div>

		<p>&gt;somehow this variant gained traction and became the version everybody used</p>
<p>Sort of like the way many people type &quot;*.*&quot; to mean &quot;all files, even ones that don&#39;t have a dot in the name&quot;.</p>
<p>Me, I just type &quot;*&quot; </p>
<p>(Yes, I understand the whys and wherefores: it starts with the fact that the &quot;.&quot; was not actually on disk in Ye Olde Fatte Phyle Systemmes)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1066573">
				<div id="div-comment-1066573" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Brad Westness</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130710-00/?p=3843#comment-1066573">
			July 10, 2013 at 4:54 pm</a>		</div>

		<p>&gt; alegr1: Another quirk of COPY: append is done </p>
<p>&gt; in &quot;text&quot; mode by default. This is why /B switch is there.</p>
<p>That seems entirely reasonable though, doesn&#39;t it? After all, concatenating two binary files will most often result in something useless. However, concatenating two text files will result in a perfectly readable text file.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1066583">
				<div id="div-comment-1066583" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Silly</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130710-00/?p=3843#comment-1066583">
			July 10, 2013 at 5:36 pm</a>		</div>

		<p>@Brad Westness: Agreed, and it would be a pain to have to type something like an extra &quot;/T&quot; whenever I need to combine multi-part uuencoded files.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1066593">
				<div id="div-comment-1066593" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Killer{R}</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130710-00/?p=3843#comment-1066593">
			July 10, 2013 at 5:43 pm</a>		</div>

		<p>AFAIK, is a arguments separator, just like space, but visible. So ,, could be an visual hint for human, that there&#39;is &#39;empty&#39; (nothing) argument</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1066603">
				<div id="div-comment-1066603" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Mark Y</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130710-00/?p=3843#comment-1066603">
			July 10, 2013 at 7:32 pm</a>		</div>

		<p>I am going to ask this question whenever I get a chance. &nbsp;Since I someone mentioned .. in FAT, here is my chance: how did FAT implement them? &nbsp;It had no &quot;hardlinks&quot; or similar, so what did it do?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1066623">
				<div id="div-comment-1066623" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Falcon</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130710-00/?p=3843#comment-1066623">
			July 10, 2013 at 8:28 pm</a>		</div>

		<p>@Myria:</p>
<p>The Win32 layer does this. Win32 file names have an optional implicit dot at the end, if that makes sense. I just tested this in CMD with the MORE command with stdin redirection &#8211; even if the file name has dots in it, you can add many dots at the end and you&#39;ll still be referring to the same file. I made sure that redirection did not work with a wildcard name (wouldn&#39;t make sense if it did).</p>
<p>You can find an explanation in the comments of this post:</p>
<p><a rel="nofollow" target="_new" href="http://blogs.msdn.com/b/oldnewthing/archive/2006/12/05/1211409.aspx">blogs.msdn.com/&#8230;/1211409.aspx</a></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1066633">
				<div id="div-comment-1066633" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Gabe</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130710-00/?p=3843#comment-1066633">
			July 10, 2013 at 10:30 pm</a>		</div>

		<p>Mark Y: The . and .. directories are implemented in FAT the same way any file or directory is implemented. A directory entry consists of 8 bytes for the filename, 3 bytes for the extension, some flags, the starting cluster of the file/directory, and a bunch of other metadata.</p>
<p>The &quot;.&quot; entry has the filename set to &quot;.&quot;, the extension blank, the directory flag set, and the starting cluster set to whatever cluster that directory starts in. The &quot;..&quot; entry is the same, but has the filename set to &quot;..&quot; and the starting cluster set to whatever its parent directory&#39;s starting cluster is.</p>
<p>This is very similar to how it works in UFS (directory entries contain a name and an inode number, which performs the same function as the starting cluster for these purposes). The reason Unix has &quot;hard links&quot; and FAT doesn&#39;t is that UFS has a &quot;link count&quot;, so it knows when a file has no directory entries pointing to it and the space can be reclaimed.</p>
<p>FAT doesn&#39;t have a count, so it always assumes that there is only one entry and the space is marked free whenever a directory entry is deleted. Creating a &quot;hard link&quot; in FAT is as simple as creating a directory entry with another file&#39;s starting cluster. That would work fine up until you went to delete one of the links.</p>
<p>Since FAT doesn&#39;t keep a reference count, it doesn&#39;t know how many links there are to a given directory, but it does know when a directory has entries in it. So it simply prevents you from removing a directory unless it&#39;s empty.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-xpclientgmail-com even thread-even depth-1" id="comment-1066653">
				<div id="div-comment-1066653" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/xpclient' rel='external nofollow' class='url'>xpclient</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130710-00/?p=3843#comment-1066653">
			July 10, 2013 at 10:50 pm</a>		</div>

		<p>For those who prefer the GUI way, there&#39;s <a rel="nofollow" target="_new" href="http://stefanstools.sourceforge.net/SKTimeStamp.html">stefanstools.sourceforge.net/SKTimeStamp.html</a></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1066563">
				<div id="div-comment-1066563" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Myria</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130710-00/?p=3843#comment-1066563">
			July 10, 2013 at 3:56 pm</a>		</div>

		<p>@dave: I think . and .. have been in the FAT filesystem for quite a while, perhaps back to the advent of directories in DOS.</p>
<p>The *.* thing is because DOS considered filenames and extensions to be separate entities, so you had to match them separately. &nbsp;NT doesn&#39;t give special meaning to . anymore, so * works. &nbsp;I bet that *.* matches dotness filenames in NT just because of a kernel32 hack in FindFirstFileW. &nbsp;I&#39;m used to typing * instead of *.* by this point.</p>
<p>I wish that the special meaning of &quot;com1&quot;, &quot;aux&quot;, &quot;prn&quot;, etc. would go away unless a new compatibility shim is applied. &nbsp;A colon or \. would be required in newer programs. &nbsp;I am sick and tired of directories named &quot;aux&quot; getting committed to our Subversion repository and having to clean up the mess so Windows can update Subversion again. &nbsp;I also wish open-source groups weren&#39;t so hostile to Windows and unwilling to rename something trivial to help out Windows users &#8211; I&#39;m looking at you, libunwind.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-cheong even thread-even depth-1" id="comment-1066663">
				<div id="div-comment-1066663" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/cheong00' rel='external nofollow' class='url'>cheong00</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130710-00/?p=3843#comment-1066663">
			July 10, 2013 at 11:44 pm</a>		</div>

		<p>[After all, concatenating two binary files will most often result in something useless]</p>
<p>I think one of the compression archiver got their first SFX extension in stub EXE form (much like loader of certain virus found nowadays). If you want to create self extracting archive, just compress it and append it to the EXE file you you&#39;re done.</p>
<p>It was till the next version they add SFX as archiver&#39;s option. (And officially include SFX as one of their feature)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1066683">
				<div id="div-comment-1066683" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Neil</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130710-00/?p=3843#comment-1066683">
			July 11, 2013 at 4:14 am</a>		</div>

		<p>@Gabe: That&#39;s a good one. I always used to use rem &gt; file on DOS and copy nul file on NT to create an empty file (neither works on the other).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1066703">
				<div id="div-comment-1066703" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">ErikF</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130710-00/?p=3843#comment-1066703">
			July 11, 2013 at 7:13 am</a>		</div>

		<p>Raymond (or whoever has these), how well does the DOS 2.1 VM work and which VM software do you use? I have found that some of the older DOS versions seem to misbehave in v86/emulation, so just wanted your thoughts.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1066743">
				<div id="div-comment-1066743" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130710-00/?p=3843#comment-1066743">
			July 11, 2013 at 8:35 am</a>		</div>

		<p>@ErikF: New CPUs can&#39;t turn off the A20 gate anymore. Try Bochs.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1066833">
				<div id="div-comment-1066833" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Karellen</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130710-00/?p=3843#comment-1066833">
			July 11, 2013 at 11:10 am</a>		</div>

		<p>What if you want to append the files &quot;FILE&quot; and &quot;,,&quot;?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-yuhong-bao odd alt thread-odd thread-alt depth-1" id="comment-1066853">
				<div id="div-comment-1066853" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Yuhong+Bao' rel='external nofollow' class='url'>Yuhong Bao</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130710-00/?p=3843#comment-1066853">
			July 11, 2013 at 11:33 am</a>		</div>

		<p>@Joshua: False. It is still there, though no physical pins are used in modern Intel CPUs, instead Virtual Legacy Wires are used.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-yuhong-bao even thread-even depth-1" id="comment-1066863">
				<div id="div-comment-1066863" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Yuhong+Bao' rel='external nofollow' class='url'>Yuhong Bao</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130710-00/?p=3843#comment-1066863">
			July 11, 2013 at 11:39 am</a>		</div>

		<p>@Joshua: Actually, reading the 8-series datasheet looks like they finally ditched it.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-yuhong-bao odd alt thread-odd thread-alt depth-1" id="comment-1066873">
				<div id="div-comment-1066873" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Yuhong+Bao' rel='external nofollow' class='url'>Yuhong Bao</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130710-00/?p=3843#comment-1066873">
			July 11, 2013 at 11:41 am</a>		</div>

		<p>@Joshua: In fact, looks like they ditched it in the 5-series chipset generation:</p>
<p><a rel="nofollow" target="_new" href="http://www.intel.eu/content/dam/www/public/us/en/documents/specification-updates/5-and-3400-chipset-specification-update.pdf">http://www.intel.eu/&#8230;/5-and-3400-chipset-specification-update.pdf</a></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-yuhong-bao even thread-even depth-1" id="comment-1066893">
				<div id="div-comment-1066893" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Yuhong+Bao' rel='external nofollow' class='url'>Yuhong Bao</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130710-00/?p=3843#comment-1066893">
			July 11, 2013 at 12:02 pm</a>		</div>

		<p>@Joshua: What is funny is this info is in a specification update and was only put there in Dec 2011. I wonder what happened.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1066693">
				<div id="div-comment-1066693" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">dave</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130710-00/?p=3843#comment-1066693">
			July 11, 2013 at 6:11 am</a>		</div>

		<p>@Myria</p>
<p>&gt;@dave: I think . and .. have been in the FAT filesystem for quite a while, perhaps back to the advent of directories in DOS.</p>
<p>No, I meant that the &quot;.&quot; in &quot;foo.bar&quot; is not stored on the disk in the original FAT (FAT12/FAT16) directory structure. &nbsp;Therefore &quot;foo.&quot; and &quot;foo&quot; cannot be distinguished, for example. &nbsp;And therefore the pattern &quot;*.*&quot; matches &quot;foo&quot;, even by all that is decent it should not. &nbsp;People have just got into the DOS-induced habit of expecting &quot;*.*&quot; to match all filenames, even those that don&#39;t have a dot.</p>
<p>I am not talking about the specific entries &quot;.&quot; and &quot;..&quot;.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1066933">
				<div id="div-comment-1066933" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">David Heffernan</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130710-00/?p=3843#comment-1066933">
			July 11, 2013 at 2:43 pm</a>		</div>

		<p>On my machine the syntax is </p>
<p> &nbsp; &nbsp;touch filename</p>
<p>Gotta get those GNU tools installed&#8230;&#8230;..</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1067133">
				<div id="div-comment-1067133" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130710-00/?p=3843#comment-1067133">
			July 12, 2013 at 7:40 am</a>		</div>

		<p>[After all, concatenating two binary files will most often result in something useless]</p>
<p>That&#39;s what you think. On Windows, I have more occasion to do this on binary files than text files. On Unix, not so much.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1067393">
				<div id="div-comment-1067393" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Mark Y</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130710-00/?p=3843#comment-1067393">
			July 13, 2013 at 10:11 pm</a>		</div>

		<p>Gabe: Thank you for answering. &nbsp;I don&#39;t suppose you&#39;re still checking this thread, so my thank you comes too late. &nbsp;But your answer made me realize my question was not specific enough. &nbsp;Directories have metadata, such as size, last-modified date, read-only status, etc. &nbsp;This is stored in the directory entry I believe. &nbsp;How are all entries kept in sync? &nbsp;The simplest thing I can think of is to have &quot;.&quot; have the valid info, and the rest don&#39;t, but is that really what was done?</p>
<div class="post">[<em>A little experimenting with <a href="http://jsmachines.net/">this web page</a> should answer your question. -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1067693">
				<div id="div-comment-1067693" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Mark Y</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130710-00/?p=3843#comment-1067693">
			July 16, 2013 at 1:45 pm</a>		</div>

		<p>I tried posting yesterday, but my comment did not go through. &nbsp;I am trying again. &nbsp;The simulator is awesome, but I don&#39;t know DOS 2 well enough to figure this out. &nbsp;The dir command is less flexible than the modern version. &nbsp;The attrib command doesn&#39;t exist at all. &nbsp;I don&#39;t know what to try.</p>
<div class="post">[<em>The only commands you need are <code>DIR</code> with no options, and <code>MD</code>. Notice that the timestamp on <code>.</code> and <code>..</code> are <span style="text-decoration:underline;">not</span> kept in sync with their antecedents. -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

