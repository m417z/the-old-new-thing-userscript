<html>
<head>
<title>How does PostQuitMessage know which thread to post the quit message to?</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>How does PostQuitMessage know which thread to post the quit message to?</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>January 12, 2009 / year-entry #12</td></tr>
<tr><td><b>Tags:</b></td><td>code</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20090112-00/?p=19533</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>8</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">Commenter bav016 asks how functions like PostQuitMessage and SetTimer(NULL) know which thread the messages should go to. Unlike some functions such as InvalidateRect which have a window handle parameter that lets you say which window you want to operate on, PostQuitMessage and SetTimer(NULL) don't say which thread the WM_QUIT or WM_TIMER message should go to....</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>Commenter bav016 asks <a href="http://blogs.msdn.com/oldnewthing/pages/407234.aspx#534733"> how functions like <code>PostQuitMessage</code> and <code>SetTimer(NULL)</code> know which thread the messages should go to</a>. Unlike some functions such as <code>InvalidateRect</code> which have a window handle parameter that lets you say which window you want to operate on, <code>PostQuitMessage</code> and <code>SetTimer(NULL)</code> don't say which thread the <code>WM_QUIT</code> or <code>WM_TIMER</code> message should go to. How do they decide?</p>
<p> The messages go to the current thread; that is, they are delivered to the thread that called the function in the first place. </p>
<p> There are many functions which operate on an implicit message queue, and those cases, they operate on the message queue associated with the thread making the call. If you call <code>GetKeyState</code> you retrieve the calling thread's keyboard state. If you call <code>GetMessage</code> you retrieve messages from the calling thread's message queue. If you call <code>InSendMessage</code>, you are told about the calling thread's message processing state. If you call <code>GetQueueStatus</code> you retrieve information about the calling thread's msesage queue. You get the idea. </p>
<p> If you want these functions to operate on a thread different from the one that is executing, you'll have to ask that thread to make the call for you. </p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (8)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-699693">
				<div id="div-comment-699693" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">John</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090112-00/?p=19533#comment-699693">
			January 12, 2009 at 10:27 am</a>		</div>

		<p>Not to nail bav016 specifically, but isn&#8217;t this stuff supposed to be blindingly obvious? &nbsp;I&#8217;ve seen a number of articles here recently where the end result should be obvious. &nbsp;I mean this stuff is basic Windows fundamentals. &nbsp;I am normally against the whole &quot;RTFM&quot; thing, but come on.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-699713">
				<div id="div-comment-699713" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">asf</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090112-00/?p=19533#comment-699713">
			January 12, 2009 at 11:40 am</a>		</div>

		<p>When working on small utils and trying to keep the size down, I just use plain PostMessage to my window, seems to work fine and one less item in the import table</p>
<div class=post>[<i>But be aware that it&#8217;s not the same thing. See my book for more details. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-699753">
				<div id="div-comment-699753" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">David Heffernan</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090112-00/?p=19533#comment-699753">
			January 12, 2009 at 3:54 pm</a>		</div>

		<p>I bet using PostMessage to avoid importing PostQuitMessage makes a large difference in the exe size.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-699773">
				<div id="div-comment-699773" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Mark</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090112-00/?p=19533#comment-699773">
			January 12, 2009 at 5:11 pm</a>		</div>

		<p>&#8220;If you want these functions to operate on a thread different from the one that is executing, you&#8217;ll have to ask that thread to make the call for you&#8221;.</p>
<p>How do you ask other threads to make that call? Also somewhat related, I would like to know whether or not the message queue of a certain thread (other than my own) empty or not at any given time. How do I do that from within my own application? I know I can use GetQueueStatus() to ask about my own queue status, though. Could you please shed more light on this? Thanks.</p>
<div class=post>[<i>How you communicate with other threads is a private matter between you and that other thread. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-699853">
				<div id="div-comment-699853" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://wizou.fr' rel='external nofollow' class='url'>Wizou</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090112-00/?p=19533#comment-699853">
			January 13, 2009 at 8:21 am</a>		</div>

		<p>What if the current thread doesn&#8217;t have a thread queue yet ? (ie: did not call any of GetMessage &amp; such functions&#8230;)</p>
<div class=post>[<i><a href="http://search.live.com/results.aspx?q=site:blogs.msdn.com/oldnewthing+thread+queue" rel="nofollow">http://search.live.com/results.aspx?q=site:blogs.msdn.com/oldnewthing+thread+queue</a>. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-699883">
				<div id="div-comment-699883" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Rafales</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090112-00/?p=19533#comment-699883">
			January 13, 2009 at 9:29 am</a>		</div>

		<p>I think every thread got his thread queue from the start.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-700313">
				<div id="div-comment-700313" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">SuperKoko</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090112-00/?p=19533#comment-700313">
			January 13, 2009 at 5:47 pm</a>		</div>

		<p>@Rafales: Direct link:</p>
<p><a rel="nofollow" target="_new" href="http://blogs.msdn.com/oldnewthing/archive/2006/02/21/536055.aspx" rel="nofollow">http://blogs.msdn.com/oldnewthing/archive/2006/02/21/536055.aspx</a></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-700533">
				<div id="div-comment-700533" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://wizou.fr' rel='external nofollow' class='url'>Wizou</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090112-00/?p=19533#comment-700533">
			January 14, 2009 at 11:31 am</a>		</div>

		<p>Indeed, I was thinking about that article..</p>
<p>PostQuitMessage could behave like PostThreadMessage and fail, or could create the queue on-demand&#8230;</p>
<p>After re-reading the previous article carefully, I assume it will create the queue.</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

