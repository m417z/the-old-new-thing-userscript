<html>
<head>
<title>If I attach a file to an existing completion port, do I have to close the completion port handle a second time?</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>If I attach a file to an existing completion port, do I have to close the completion port handle a second time?</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>August 23, 2013 / year-entry #226</td></tr>
<tr><td><b>Tags:</b></td><td>code</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20130823-00/?p=3423</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>13</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">There are two ways of calling the Create­IO­Completion­Port function. You can pass a null pointer as the Existing­Completion­Port parameter, indicating that you would like to create a brand new completion port, associated with the file handle you passed (if you passed one). Or you can pass the handle of an existing completion port, and the...</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>
There are two ways of calling
<a HREF="http://msdn.microsoft.com/library/aa363862">
the
<code>Create&shy;IO&shy;Completion<wbr>&shy;Port</code> function</a>.
You can pass a null pointer as the
<code>Existing&shy;Completion&shy;Port</code> parameter,
indicating that you would like to create a brand new completion port,
associated with the file handle you passed (if you passed one).
Or you can pass the handle of an existing completion port,
and the file handle you passed will be associated with that port,
in addition to whatever other file handles are already associated
with that port.
</p>
<p>
In both cases, the return value on success is a handle to the I/O
completion port,
either the brand new one or the existing one.
The question from a customer was,
"In the case where I am associating a file handle to an existing
completion port,
do I need to close the completion port handle a second time?"
In other words, is there a handle leak in this code:
</p>
<pre>
BOOL CCompletionPort::Attach(HANDLE h, ULONG_PTR key)
{
 // you are required to have created the completion port first
 assert(m_hPort != nullptr);

 HANDLE hPort = CreateIoCompletionPort(h, m_hPort, key, 0);

 // line missing? if (hPort != nullptr) CloseHandle(hPort);

 return hPort != nullptr;
}
</pre>
<p>
No, there is no handle leak.
If you ask to associate a file with an existing completion port,
the same handle you passed as the
<code>Existing&shy;Completion&shy;Port</code> parameter
is returned back on success.
There is no new obligation to close the handle a second time
because
<a HREF="http://blogs.msdn.com/b/oldnewthing/archive/2007/08/29/4620336.aspx">
kernel handles are not reference-counted</a>.
Closing a kernel handle twice is always an error,
because the first close closes the handle,
and the second close attempts to use a handle that is already closed.
There is no reference count on handles.&sup1;
</p>
<p>
&sup1; There is a reference count on kernel objects, but handles are not
reference-counted.
The standard way to increment the reference count on a kernel object is...
to create a new handle to it!</p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (13)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-1074303">
				<div id="div-comment-1074303" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">GByrkit</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130823-00/?p=3423#comment-1074303">
			August 23, 2013 at 7:55 am</a>		</div>

		<p>I learn something every posting on this blog. &nbsp;There is a minor typo in the first line. &nbsp;Likely &quot;the Create&shy;IO&shy;Completio&shy;Port function&quot; should be &quot;the Create&shy;IO&shy;Completion&shy;Port function&quot;.</p>
<div class="post">[<em>Fixed, thanks. -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-maurits odd alt thread-odd thread-alt depth-1" id="comment-1074333">
				<div id="div-comment-1074333" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Maurits+%5BMSFT%5D' rel='external nofollow' class='url'>Maurits [MSFT]</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130823-00/?p=3423#comment-1074333">
			August 23, 2013 at 10:07 am</a>		</div>

		<p>&gt; If the ExistingCompletionPort parameter was a valid I/O completion port handle, the return value is that same handle</p>
<p>Ick. Prefer creating multiple easy-to-call functions over creating a single function with complicated rules.</p>
<p>HANDLE OnlyCreateIoCompletionPort(</p>
<p>&nbsp;_In_ &nbsp; &nbsp; &nbsp;DWORD NumberOfConcurrentThreads</p>
<p>);</p>
<p>BOOL WINAPI AssociateIoCompletionPortWithFile(</p>
<p>&nbsp;_In_ &nbsp; &nbsp; &nbsp;HANDLE FileHandle,</p>
<p>&nbsp;_In_opt_ &nbsp;HANDLE ExistingCompletionPort,</p>
<p>&nbsp;_In_ &nbsp; &nbsp; &nbsp;ULONG_PTR CompletionKey</p>
<p>);</p>
<p>HANDLE CreateIoCompletionPortAndAssociateWithFile(</p>
<p>&nbsp;_In_ &nbsp; &nbsp; &nbsp;HANDLE FileHandle,</p>
<p>&nbsp;_In_ &nbsp; &nbsp; &nbsp;ULONG_PTR CompletionKey,</p>
<p>&nbsp;_In_ &nbsp; &nbsp; &nbsp;DWORD NumberOfConcurrentThreads</p>
<p>);</p>
<div class="post">[<em>I agree. Whoever designed the function was trying to be too clever. -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-maurits even thread-even depth-1" id="comment-1074343">
				<div id="div-comment-1074343" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Maurits+%5BMSFT%5D' rel='external nofollow' class='url'>Maurits [MSFT]</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130823-00/?p=3423#comment-1074343">
			August 23, 2013 at 10:11 am</a>		</div>

		<p>Neglected to update annotation; _In_opt_ should now just be _In_ for AssociateIoCompletionPortWithFile&#39;s ExistingCompletionPort parameter.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1074413">
				<div id="div-comment-1074413" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blogs.msdn.com/ajgelado_4000_hotmail.com/ProfileUrlRedirect.ashx' rel='external nofollow' class='url'>ajgelado@hotmail.com</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130823-00/?p=3423#comment-1074413">
			August 23, 2013 at 3:44 pm</a>		</div>

		<p>A handle is always a reference by definition (hence its name: something used to &quot;grab&quot; an object). IIRC, in the early versions of classic Mac OS, handles were actually indexes into a table that contained (pointer, reference count) pairs. Of course, documentation warned to manage them as opaque values, but in later versions (7.x and newer) many compatibility problems were caused by applications and extensions that tried to be too clever. Does it sound familiar? ;-)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1074453">
				<div id="div-comment-1074453" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Nodir</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130823-00/?p=3423#comment-1074453">
			August 23, 2013 at 7:36 pm</a>		</div>

		<p>How can I deattach a file from the attached completion port?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-alegrigoriev odd alt thread-odd thread-alt depth-1" id="comment-1074463">
				<div id="div-comment-1074463" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/alegr1' rel='external nofollow' class='url'>alegr1</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130823-00/?p=3423#comment-1074463">
			August 23, 2013 at 8:41 pm</a>		</div>

		<p>@Nodir:</p>
<p>No way.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1074403">
				<div id="div-comment-1074403" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blogs.msdn.com/msteppat_4000_arcor.de/ProfileUrlRedirect.ashx' rel='external nofollow' class='url'>msteppat@arcor.de</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130823-00/?p=3423#comment-1074403">
			August 23, 2013 at 2:12 pm</a>		</div>

		<p>So the handle *is* the reference. Same handle, same reference.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1074473">
				<div id="div-comment-1074473" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Neil</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130823-00/?p=3423#comment-1074473">
			August 24, 2013 at 3:20 am</a>		</div>

		<p>@Antonio In 16-bit Windows an LMEM_MOVABLE handle happened to point to the pointer value that LocalLock returns. I wonder how many applications used this to avoid locking their movable allocations.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-matteo even thread-even depth-1" id="comment-1074493">
				<div id="div-comment-1074493" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Matteo+Italia' rel='external nofollow' class='url'>Matteo Italia</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130823-00/?p=3423#comment-1074493">
			August 24, 2013 at 8:12 am</a>		</div>

		<p>Is it just me or the documentation for I/O Completion Ports is definitely written with &quot;Feature-colored glasses&quot; (<a rel="nofollow" target="_new" href="http://technet.microsoft.com/en-us/magazine/jj992548.aspx">technet.microsoft.com/&#8230;/jj992548.aspx</a>)?</p>
<p>In my ignorance of what the a &quot;completion port&quot; is or does I checked out the classical &quot;topic introduction page&quot; in the Platform SDK (<a rel="nofollow" target="_new" href="http://msdn.microsoft.com/en-US/library/aa365198">msdn.microsoft.com/&#8230;/aa365198</a>), which usually does a decent job at explaining what are we talking about. What I found is something along the lines of the CardSpace stuff &#8211; generic description with vagues hints of context (&quot;provide an efficient threading model for processing multiple asynchronous I/O requests on a multiprocessor system&quot;) and detailed descriptions for people who already know what we are talking about.</p>
<p>I still ignore what an IO completion port is or does.</p>
<p>(sorry for the rant)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1074503">
				<div id="div-comment-1074503" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Gabe</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130823-00/?p=3423#comment-1074503">
			August 24, 2013 at 11:32 am</a>		</div>

		<p>Matteo: An I/O Completion Port is a queue of I/O completion packets. Once an asynchronous file handle is associated with a completion port, then whenever an I/O completes on that file, a completion packet is posted to the queue. The queued packets are consumed by calling GetQueuedCompletionStatus.</p>
<p>Generally you will have a single IOCP to handle all the I/O in your process and a pool of threads that all call GetQueuedCompletionStatus in a loop. This allows asyncrhonous I/O to be handled as efficiently as possible, with a minimum of kernel mode transitions and context switches.</p>
<p>Does that help?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1074533">
				<div id="div-comment-1074533" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Killer{R}</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130823-00/?p=3423#comment-1074533">
			August 24, 2013 at 5:55 pm</a>		</div>

		<p>&#39;kernel handles are not referenced-counted&#39; &#8211; is it STRICTLY TRUE? IMHO better answer &#39;no&#39; for both types on questions &#8211; &#39;Are kernel object handles are reference-counted?&#39; and &#39;Are kernel object handles are NOT reference counted?&#39;. The second type of question can raise if somebody will wish to rely on fact that for example DuplicateHandle always generates new unique handle value, even it has completely matches properties as initial one.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-matteo odd alt thread-odd thread-alt depth-1" id="comment-1074543">
				<div id="div-comment-1074543" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Matteo+Italia' rel='external nofollow' class='url'>Matteo Italia</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130823-00/?p=3423#comment-1074543">
			August 25, 2013 at 7:21 am</a>		</div>

		<p>@Gabe: definitely, thank you; if that page had a similar brief-but-complete explanation at top it would be _way_ more useful.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1074553">
				<div id="div-comment-1074553" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130823-00/?p=3423#comment-1074553">
			August 25, 2013 at 8:09 am</a>		</div>

		<p>I had a dream last night that Raymond made some particular outlandish response to somebody&#39;s comment on tomorrows post, and for some reason I called him on his phone (never mind how I had his number) to explain it rather than post a reply.</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

