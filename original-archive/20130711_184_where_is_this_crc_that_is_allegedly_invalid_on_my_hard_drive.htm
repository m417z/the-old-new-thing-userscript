<html>
<head>
<title>Where is this CRC that is allegedly invalid on my hard drive?</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>Where is this CRC that is allegedly invalid on my hard drive?</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>July 11, 2013 / year-entry #185</td></tr>
<tr><td><b>Tags:</b></td><td>other</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20130711-00/?p=3833</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>29</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">If you're unlucky, your I/O operation will fail with ERROR_CRC, whose description is "Data error (cyclic redundancy check)." Where does NTFS keep this CRC, what is it checking, and how can you access the value to try to repair the data? Actually, NTFS does none of that stuff. The CRC error you're getting is coming...</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>If you're unlucky, your I/O operation will fail with <code>ERROR_<wbr>CRC</wbr></code>, whose description is "Data error (cyclic redundancy check)." Where does NTFS keep this CRC, what is it checking, and how can you access the value to try to repair the data?</p>
<p> Actually, NTFS does none of that stuff. The CRC error you're getting is coming from the hard drive itself. Hard drives nowadays are pretty complicated beasts. They don't just plop data down and suck it back. They have error-checking codes, silent block remapping, <a href="http://blogs.msdn.com/b/oldnewthing/archive/2010/09/09/10059575.aspx"> on-board caching</a>, <a href="http://en.wikipedia.org/wiki/Advanced_Format"> sector size virtualization</a>, all sorts of craziness. </p>
<p> What's actually happening is that the file system asks the hard drive to read some data, and instead of handing data back, the hard drive reports, "Sorry, I couldn't read it back because of a CRC error." NTFS itself doesn't do any CRC checking. </p>
<p> "Well, that's awfully misleading. If NTFS is reporting a CRC error, then that makes the user think that NTFS is maintaining CRCs. Shouldn't it just report 'general I/O error' instead of a more specific error?" </p>
<p> NTFS is just <a href="http://blogs.msdn.com/b/oldnewthing/archive/2013/02/19/10395022.aspx"> bubbling upthe error message from the hard drive. This dates back to the old MS-DOS days, where </a><a href="http://www.htl-steyr.ac.at/~morg/pcinfo/hardware/interrupts/inte6xm8.htm"> the BIOS reported hard drive error codes</a>, and those error codes were returned <a href="http://support.microsoft.com/kb/74463"> all the way back to the application</a>. Who knows, maybe the end-user knows enough about drive technology that they can tell the difference between a CRC error and a seek error. (For example, a seek error may be fixed by removing the floppy disk and reinserting it, or by <a href="http://blogs.msdn.com/b/oldnewthing/archive/2011/07/14/10186292.aspx"> recalibrating</a>.) </p>
<p> What about the converse? If an I/O operation completes successfully, does that provide metaphysical certitude that the data read back exactly matches the data that was originally written? </p>
<p> No. It only provides metaphysical certitude that <i>the hard drive reported that</i> the data read back exactly matches the data that was originally written, <i>as far as it could tell</i>. </p>
<p> Generally speaking, upper layers of a system trust that a lower layer is functioning properly (and often they have no way of detecting a malfunction in the lower layer, anyway). If the hard drive says that it read the data successfully, well, the hard drive is the expert at this sort of thing, so who are we to say, "Nuh uh, I think you're wrong"? </p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (29)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment byuser comment-author-alegrigoriev even thread-even depth-1" id="comment-1066723">
				<div id="div-comment-1066723" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/alegr1' rel='external nofollow' class='url'>alegr1</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130711-00/?p=3833#comment-1066723">
			July 11, 2013 at 7:35 am</a>		</div>

		<p>Another factoid:</p>
<p>The modern HDD gives a lot of effort to recover a faulty block. If it was possible, the data is then written to one of spare locations, and the sector replacement table is updated. If the data recovery was not possible, the block is marked for replacement anyway, and the next write to it will go to a replacement location.</p>
<p>When the data is written, a pretty complex error correction code is added to it. It allows to correct quite long error bursts.</p>
<p>NTFS gets error codes returned by disk.sys, which are derived from the sense data returned in the storage port SRB. BIOS is not involved anymore.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1066733">
				<div id="div-comment-1066733" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Mordachai</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130711-00/?p=3833#comment-1066733">
			July 11, 2013 at 8:05 am</a>		</div>

		<p>Whomever is arguing &quot;shouldn&#39;t it give us LESS information&quot; should be summarily shot. &nbsp;As an example to others. Stupidity!</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-alegrigoriev even thread-even depth-1" id="comment-1066753">
				<div id="div-comment-1066753" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/alegr1' rel='external nofollow' class='url'>alegr1</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130711-00/?p=3833#comment-1066753">
			July 11, 2013 at 8:39 am</a>		</div>

		<p>And when the I/O error happens, disk.sys will log an error in the system log. But that log record is absolutely useless, because it refers to the device object name, which is: 1) ephemeral and can change on every boot, 2) there is no way to map it to the actual disk.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1066763">
				<div id="div-comment-1066763" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">dave</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130711-00/?p=3833#comment-1066763">
			July 11, 2013 at 8:54 am</a>		</div>

		<p>&gt;It only provides metaphysical certitude that the hard drive reported</p>
<p>&gt;that the data read back exactly matches the data that was originally </p>
<p>&gt;written, as far as it could tell. </p>
<p>The drive should actually compare the data it reads back to the data it originally wrote&#8230;.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1066773">
				<div id="div-comment-1066773" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130711-00/?p=3833#comment-1066773">
			July 11, 2013 at 9:16 am</a>		</div>

		<p>&gt; The drive should actually compare the data it reads back to the data it originally wrote&#8230;.</p>
<p>Believe it or not, there&#39;s a op command to do just that. Nothing seems to use it. There is copy /v but people are starting to wonder if it even sends the right op command to the drive.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1066783">
				<div id="div-comment-1066783" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">AsmGuru62</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130711-00/?p=3833#comment-1066783">
			July 11, 2013 at 9:44 am</a>		</div>

		<p>CRC is stored on the drive and data is stored there.</p>
<p>So, CRC Error (data is not matching CRC) may mean two things:</p>
<p>1. CRC value is OK and data is corrupted</p>
<p>2. Data is OK, but CRC value is corrupted</p>
<p>Does it sound right?</p>
<p>Or I am missing something?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1066793">
				<div id="div-comment-1066793" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Falcon</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130711-00/?p=3833#comment-1066793">
			July 11, 2013 at 9:47 am</a>		</div>

		<p>@AsmGuru62:</p>
<p>3. Both data and CRC are corrupted</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1066803">
				<div id="div-comment-1066803" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">jeff</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130711-00/?p=3833#comment-1066803">
			July 11, 2013 at 10:21 am</a>		</div>

		<p>raymond&gt; &gt;It only provides metaphysical certitude that the hard drive reported that the data read back exactly matches the data that was originally&gt;written, as far as it could tell.</p>
<p>dave&gt; The drive should actually compare the data it reads back to the data it originally wrote&#8230;.</p>
<p>Dave, how does that work? I wrote my file to disk 2 years ago, and haven&#39;t touched it since? How does the drive remember what it originally wrote two years ago? The drive is most likely reporting a CRC mismatch, hence the disclaimer &quot;as far as it could tell&quot;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1066813">
				<div id="div-comment-1066813" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">rlaager</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130711-00/?p=3833#comment-1066813">
			July 11, 2013 at 10:38 am</a>		</div>

		<p>&gt; who are we to say, &quot;Nuh uh, I think you&#39;re wrong&quot;</p>
<p>ZFS or ReFS.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-alegrigoriev odd alt thread-odd thread-alt depth-1" id="comment-1066823">
				<div id="div-comment-1066823" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/alegr1' rel='external nofollow' class='url'>alegr1</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130711-00/?p=3833#comment-1066823">
			July 11, 2013 at 10:41 am</a>		</div>

		<p>dave&gt; The drive should actually compare the data it reads back to the data it originally wrote&#8230;.</p>
<p>Some HDD brands actually did write-read-verify for a few first power-on cycles. Not sure if they do that anymore.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-maurits even thread-even depth-1" id="comment-1066843">
				<div id="div-comment-1066843" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Maurits+%5BMSFT%5D' rel='external nofollow' class='url'>Maurits [MSFT]</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130711-00/?p=3833#comment-1066843">
			July 11, 2013 at 11:31 am</a>		</div>

		<p>NTFS is a transport layer here. Fine.</p>
<p>The questions all still stand. Just apply them to the layer below NTFS instead.</p>
<p>&gt; Where does the HDD keep this CRC, what is it checking, and how can you access the value to try to repair the data?</p>
<p>The answers, I suspect, are:</p>
<p>&gt; The HDD gets to decide where to store the CRC; it&#39;s checking the CRC of the data against a previously computed CRC; and NTFS does not define a transport mechanism on its lower boundary to query the either the previously computed CRC, or the new CRC, though you could presumably calculate the new CRC yourself if you knew exactly what algorithm to use.</p>
<p>So there is a valid criticism of NTFS here, namely that it is not as transparent a transport layer as it could be.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1066883">
				<div id="div-comment-1066883" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Someone</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130711-00/?p=3833#comment-1066883">
			July 11, 2013 at 11:58 am</a>		</div>

		<p>@Mauritis:</p>
<p>I understand your point, but at the same time I disagree. NTFS is about the file system, whereas the disk&#39;s CRC stuff is at a block level or some other implementation-defined region. Disk errors should probably be in the purview of a different layer and different tool. (Though maybe NTFS should provide a mechanism like &quot;what blocks am I looking at when accessing foo.txt&quot; so you can find out what question to ask of said tool.)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1066903">
				<div id="div-comment-1066903" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">ms</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130711-00/?p=3833#comment-1066903">
			July 11, 2013 at 12:28 pm</a>		</div>

		<p>Rather than dumbing the message down to a generic I/O error, how about going in the other direction and differentiate between CRC error coming from the disk versus CRC errors from elsewhere? &nbsp;That&#39;ll take care of questions like &quot;where is this CRC stored and what can I do about it&quot;.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1066913">
				<div id="div-comment-1066913" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Nicholas</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130711-00/?p=3833#comment-1066913">
			July 11, 2013 at 12:43 pm</a>		</div>

		<p>I recall reading an article a couple of years ago that said modern hard disk drives (2TB at the time) were completely reliant upon their internal error correction routines for normal operation. &nbsp;That is to say, it was a very rare case that data requested from the disk was read and returned without any problems. &nbsp;The normal case was that data is always a &quot;little bit wrong&quot; and requires being run through the correction algorithms before it is &quot;correct&quot;.</p>
<p>That gave me pause looking at my 2TB disk in 2011. &nbsp;Now I look at this 4TB disk for sale and say &quot;Hmmmmm&quot;.</p>
<p>It seems like some mean-spirited joke of fate that the devices we use to store everything digital we care about have increased in capacity by several orders of magnitude but largely gotten worse in terms of lifespan and recoverability. And it makes me sad.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-rat even thread-even depth-1" id="comment-1066923">
				<div id="div-comment-1066923" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/hacksoncode' rel='external nofollow' class='url'>hacksoncode</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130711-00/?p=3833#comment-1066923">
			July 11, 2013 at 2:07 pm</a>		</div>

		<p>&gt;It only provides metaphysical certitude&#8230;</p>
<p>911 operator: &quot;I&#39;m sorry, Search and Rescue can&#39;t extract you from Plato&#39;s Cave&quot;. </p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1066943">
				<div id="div-comment-1066943" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ted</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130711-00/?p=3833#comment-1066943">
			July 11, 2013 at 4:46 pm</a>		</div>

		<p>Interestingly, the latest file systems for large arrays do store checksums for all data. &nbsp;See ZFS on Oracle systems, and btrfs on Linux.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-alegrigoriev even thread-even depth-1" id="comment-1066953">
				<div id="div-comment-1066953" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/alegr1' rel='external nofollow' class='url'>alegr1</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130711-00/?p=3833#comment-1066953">
			July 11, 2013 at 5:48 pm</a>		</div>

		<p>&gt; modern hard disk drives (2TB at the time) were completely reliant upon their internal error correction routines for normal operation.</p>
<p>PRML basically relies on choosing what bit pattern is the &quot;least wrong&quot; (Maximum Likelihood) for the read signal.</p>
<p>&gt; Where does the HDD keep this CRC, what is it checking, and how can you access the value to try to repair the data?</p>
<p>If the drive reports CRC error, it already made its best effort to repair the data. Because of using the Reed-Solomon codes, unrepaired data doesn&#39;t make any sense, anyway.</p>
<p>&gt;(Though maybe NTFS should provide a mechanism like &quot;what blocks am I looking at when accessing foo.txt&quot; so you can find out what question to ask of said tool.)</p>
<p>Use IOCTL code FSCTL_GET_RETRIEVAL_POINTERS.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1066963">
				<div id="div-comment-1066963" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Jon</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130711-00/?p=3833#comment-1066963">
			July 11, 2013 at 10:25 pm</a>		</div>

		<p>As people have mentioned, the ECC code is handled internally by the drive. For a long time, there have been enterprise systems which go around this transparency issue with a system called end-to-end check or Protection Information. I think IBM has been doing this for decades and I&#39;ve heard NetApp and EMC do too, but Windows, as far as I know cannot.</p>
<p>It works by using enterprise hard drives which can be reformatted to 520 or 528 bytes per sector. The OS does CRC itself and stores it in the additional bytes, which are passed through and written to disk. That way, data is continuously protected end-to-end, guarding against things like drive firmware bugs, and CRC is visible to the OS. This used to require pricey Fibre Channel disks, but now has made its way into less pricey SAS drives.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1066983">
				<div id="div-comment-1066983" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joker_vD</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130711-00/?p=3833#comment-1066983">
			July 11, 2013 at 11:24 pm</a>		</div>

		<p>@alegr: &quot;Because of using the Reed-Solomon codes, unrepaired data doesn&#39;t make any sense, anyway.&quot; </p>
<p>That&#39;s not entirely true. There are systematic Reed-Solomon codes, which encode data simply by appending control bits to it. So if you don&#39;t care about error detection (and correction), you may simply drop those control bits and get the original data.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1066993">
				<div id="div-comment-1066993" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Simon Farnsworth</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130711-00/?p=3833#comment-1066993">
			July 12, 2013 at 12:59 am</a>		</div>

		<p>@Jon</p>
<p>You might want to look at the T.10 (SCSI) Data Integrity Feature specification. In DIF, you transfer 512 data bytes and a standardised 8 byte DIF tuple for each sector written or read. Everything in the chain, from the HDD up to the OS knows how to verify that the DIF tuple matches the data bytes &#8211; as a result, the HBA can fail a transfer (and enter retry mechanisms) because the DIF field is clearly wrong, the disk can fail a transfer (again, retry mechanisms kick in) because it can&#39;t validate the DIF, and the OS can fail a transfer for DIF problems. This catches both bad resting points (HBA, disk, RAM etc) and bad cabling.</p>
<p>Where this really shines (just like btrfs and ZFS) is with a RAID system &#8211; the OS can quickly rewrite the bad data, having determined exactly which disks have trouble.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1067003">
				<div id="div-comment-1067003" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Neil</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130711-00/?p=3833#comment-1067003">
			July 12, 2013 at 3:52 am</a>		</div>

		<p>Does anyone know whether RAID implementations attempt to trigger sector remapping on read errors or do they just fail the drive? I tried to search for something relevant but was only able to find an enhancement request for the &quot;feature&quot; (if you can call it that &#8211; you might think that it&#39;s safer to fast fail the drive).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1067183">
				<div id="div-comment-1067183" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">jeff</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130711-00/?p=3833#comment-1067183">
			July 12, 2013 at 8:03 am</a>		</div>

		<p>Despite the riveting reportage of the minutiae of CRC handling on various drive types and configurations, the larger point is when you&#39;re implementing a particular level of a layered system, don&#39;t report stuff that&#39;s not helpful to the consumer of your API. The hint is:</p>
<p>raymond&gt; Generally speaking, upper layers of a system trust that a lower layer is functioning properly (and often they have no way of detecting a malfunction in the lower layer, anyway). If the hard drive says that it read the data successfully, well, the hard drive is the expert at this sort of thing, so who are we to say, &quot;Nuh uh, I think you&#39;re wrong&quot;?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-alegrigoriev even thread-even depth-1" id="comment-1067263">
				<div id="div-comment-1067263" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/alegr1' rel='external nofollow' class='url'>alegr1</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130711-00/?p=3833#comment-1067263">
			July 12, 2013 at 10:43 am</a>		</div>

		<p>I had to read on T.10 DIF/DIX some time ago and so far my opinion is that it is for peace of mind (&quot;reliability theater&quot;) and a bullet point in the specs, not for actual reliability.</p>
<p>Everything it provides can be done by other transparent means without having to have it end to end.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1067213">
				<div id="div-comment-1067213" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">ErikF</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130711-00/?p=3833#comment-1067213">
			July 12, 2013 at 9:29 am</a>		</div>

		<p>The vast majority of programs that I can think of couldn&#39;t care less about why a hard drive failed to read/write something, just that it *did*. That would be an argument in favour of limiting the number of failure cases in my opinion.</p>
<p>If you want to get more information about the error, you&#39;re probably some sort of system utility and will by necessity be tightly coupled to the hardware. For example, the T.10 SCSI DIF is great, but assuming that all SCSI devices (let alone all devices!) provide it is probably assuming too much. Personally, I&#39;d punt stuff like ERROR_CRC into extended error and simply return a generic read error for most I/O.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1067323">
				<div id="div-comment-1067323" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Gechurch</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130711-00/?p=3833#comment-1067323">
			July 12, 2013 at 6:12 pm</a>		</div>

		<p>@Neil &quot;Does anyone know whether RAID implementations attempt to trigger sector remapping on read errors or do they just fail the drive?&quot;</p>
<p>The firmware of the drive itself handles sector remapping internally. The layers above (including the RAID controller) don&#39;t even know it&#39;s happened.</p>
<p>Once the drive has run out of spare sectors to remap to it then reports the error to the upper layers. The file system can then handle it (for example, NTFS makes its own note about which sector/s are bad and knows not to try to use them. It also reports bad sectors at this stage when you run a chkdsk, which is a sign to replace the drive). RAID controllers will also see this error and report the drive as being bad. I&#39;m not sure if RAID controllers also keep track of the bad sectors to make sure it doesn&#39;t re-use them. It wouldn&#39;t surprise me if they do.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1067353">
				<div id="div-comment-1067353" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Neil</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130711-00/?p=3833#comment-1067353">
			July 13, 2013 at 3:46 am</a>		</div>

		<p>@Gechurch Drives can&#39;t remap read errors.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1067363">
				<div id="div-comment-1067363" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Gechurch</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130711-00/?p=3833#comment-1067363">
			July 13, 2013 at 6:53 am</a>		</div>

		<p>@Neil</p>
<p>I assumed you meant for write errors. Since you did mean read, I either don&#39;t understand the question, or the answer is obvious.</p>
<p>If you truly mean &#39;remap&#39; then I have no idea what you&#39;re asking. A write can be remapped because you have the data in memory. If the drive says it can&#39;t saved to the sector you&#39;re trying to write to then you still have that data in memory and can write it to a different sector. What is the equivalent of this for read? If you ask for the data at a given sector and the drive says &quot;sorry, I can&#39;t read that&quot; then how can you remap that read to a different sector? Other sectors of the hard drive contain different data. Asking to have that read &#39;remapped&#39; to another sector is another way of saying &quot;please return me some garbage data that I don&#39;t want&quot;.</p>
<p>If you simply mean &quot;if one hard drive in a RAID array returns a read error, will the RAID controller read that data from a different disk in the array&quot; then the answer is always* yes &#8211; that&#39;s the whole point of RAID.</p>
<p>*Ok, well except for RAID0, but we all know RAID0 isn&#39;t really RAID at all.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-alegrigoriev odd alt thread-odd thread-alt depth-1" id="comment-1067373">
				<div id="div-comment-1067373" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/alegr1' rel='external nofollow' class='url'>alegr1</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130711-00/?p=3833#comment-1067373">
			July 13, 2013 at 1:56 pm</a>		</div>

		<p>&gt;Drives can&#39;t remap read errors</p>
<p>If a transient (recoverable) read error happens, the block is remapped and copied over to the new location.</p>
<p>If a non-recoverable error happens, the block is internally marked as defective and is remapped at the next write to it.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1068063">
				<div id="div-comment-1068063" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Neil</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130711-00/?p=3833#comment-1068063">
			July 18, 2013 at 3:46 am</a>		</div>

		<p>@Gechurch Sure, I know that at a high level the data is still readable, but will the controller simply fail the disk or will it attempt to rewrite the block so that the disk will remap it?</p>
<p>@alegr1 But does the disk even report a recoverable read error?</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

