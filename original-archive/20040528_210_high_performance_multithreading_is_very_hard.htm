<html>
<head>
<title>High-performance multithreading is very hard</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>High-performance multithreading is very hard</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>May 28, 2004 / year-entry #211</td></tr>
<tr><td><b>Tags:</b></td><td>code</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20040528-00/?p=39133</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>11</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">Among other things, you need to understand weak memory models. Hereby incorporating by reference Brad Abrams' discussion of volatile and MemoryBarrier(). In particular, Vance Morrison's discussion of memory models is important reading. (Though I think Brad is being too pessimistic about volatile. Ensuring release semantics at the store of "singleton" is all you really need...</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>Among other things, you need to understand weak memory models.</p>
<p>  Hereby incorporating by reference  <a href="http://weblogs.asp.net/brada/">Brad Abrams</a>' discussion of  <a href="http://weblogs.asp.net/brada/archive/2004/05/12/130935.aspx">  volatile and MemoryBarrier()</a>.  In particular,  <a href="http://discuss.develop.com/archives/wa.exe?A2=ind0203B&amp;L=DOTNET&amp;P=R375">  Vance Morrison's discussion of memory models</a>  is important reading.  </p>
<p>  (Though I think Brad is being too pessimistic about volatile.  Ensuring release semantics at the store of "singleton"  is all you really need - you want to make sure the singleton is  fully constructed before you let the world see it.  volatile here is overkill.)  </p>
<p>  Vance's message also slyly introduces the concepts of  "acquire" and "release" memory semantics.  An interlocked operation with "acquire" semantics prevents  future reads from being advanced to before the acquisition.  An interlocked operation with "release" semantics prevents  previous writes from being delayed until after the release.  </p>
<p>  In the absence of explicitly-named memory semantics,  the Win32 Interlocked* functions by default provide  full memory barrier semantics.  However, some functions, like  <a href="http://msdn.microsoft.com/library/en-us/dllproc/base/interlockedincrementacquire.asp">  InterlockedIncrementAcquire</a>,  forego the full memory barrier semantics and provide only  acquire or release semantics.  </p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (11)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-178453">
				<div id="div-comment-178453" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.OdeToCode.com/blogs/scott' rel='external nofollow' class='url'>Scott Allen</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040528-00/?p=39133#comment-178453">
			May 28, 2004 at 9:02 am</a>		</div>

		<p>Unfortunately the double check lock pattern was at one time presented as a best practice for singleton construction on MSDN, but I see there are some updates addressing the potential problem: (<a target="_new" href="http://msdn.microsoft.com/library/default.asp?url=/library/en-us/dnbda/html/singletondespatt.asp" rel="nofollow">http://msdn.microsoft.com/library/default.asp?url=/library/en-us/dnbda/html/singletondespatt.asp</a>)</p>
<p>The pattern is everywhere in .NET software these days, including in this .Text blog software. .Text has a different threading problem in trying to avoid a lock for a performance gain:(<a target="_new" href="http://odetocode.com/Blogs/scott/archive/2004/05/26/259.aspx" rel="nofollow">http://odetocode.com/Blogs/scott/archive/2004/05/26/259.aspx</a>)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-178483">
				<div id="div-comment-178483" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://mikedimmick.blogspot.com/' rel='external nofollow' class='url'>Mike Dimmick</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040528-00/?p=39133#comment-178483">
			May 28, 2004 at 9:53 am</a>		</div>

		<p>See also Chris Brumme&#8217;s Memory Model post for acquire and release information: <a target="_new" href="http://blogs.msdn.com/cbrumme/archive/2003/05/17/51445.aspx" rel="nofollow">http://blogs.msdn.com/cbrumme/archive/2003/05/17/51445.aspx</a></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-178513">
				<div id="div-comment-178513" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Karl Barrus</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040528-00/?p=39133#comment-178513">
			May 28, 2004 at 10:21 am</a>		</div>

		<p>Double checked locking is indeed broken: <a target="_new" href="http://www.cs.umd.edu/~pugh/java/memoryModel/DoubleCheckedLocking.html" rel="nofollow">http://www.cs.umd.edu/~pugh/java/memoryModel/DoubleCheckedLocking.html</a></p>
<p>Scott Meyers was in town a few months ago and gave a talk on this very talk.  Quite interesting.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-178533">
				<div id="div-comment-178533" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://weblogs.asp.net/oldnewthing/' rel='external nofollow' class='url'>Raymond Chen</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040528-00/?p=39133#comment-178533">
			May 28, 2004 at 10:33 am</a>		</div>

		<p>That&#8217;s why you need the memory barrier with release semantics. Once you have that, you&#8217;re safe again.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-178603">
				<div id="div-comment-178603" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Karl Barrus</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040528-00/?p=39133#comment-178603">
			May 28, 2004 at 12:42 pm</a>		</div>

		<p>Cool, I was just posting for information.  Meyer&#8217;s talk was about portable code so what was interesting was the fact so much is left out of the C++ standard.  (The paper is on Java but Meyers did a C++ version of the talk).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-178613">
				<div id="div-comment-178613" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Alexei Zakharov</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040528-00/?p=39133#comment-178613">
			May 28, 2004 at 1:29 pm</a>		</div>

		<p>Slides from the talk Scott Meyers did a couple of months ago are here: <a target="_new" href="http://www.nwcpp.org/Downloads/2004/DCLP_notes.pdf" rel="nofollow">http://www.nwcpp.org/Downloads/2004/DCLP_notes.pdf</a></p>
<p>He actually shows the protocol that has to be followed to get the double checked locking right in the weakest memory model possible (as defined in the C++ standard).  I&#8217;m glad he did that because otherwise you have to dig that information from comp.programming.threading and it ain&#8217;t easy.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-178673">
				<div id="div-comment-178673" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Pavel Lebedinsky</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040528-00/?p=39133#comment-178673">
			May 28, 2004 at 4:11 pm</a>		</div>

		<blockquote><p>
  Ensuring release semantics at the store of &quot;singleton&quot; is all you really need</p>
<p>You also need an acquire barrier between reading the &quot;ready&quot; flag and reading the data (the Scott Meyers link that Alexei posted mentions that).</p>
<p>I also agree with Meyers that the rule of thumb should be &quot;if you access shared data, protect it with a lock&quot;.</p>
<p>It&#8217;s only when you discover that locking is a bottleneck that you should start thinking about lock free algorithms, memory barriers etc. (And even then the right solution often is simply to change the design so that you lock less often or don&#8217;t hold locks for too long).
</p></blockquote>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-178683">
				<div id="div-comment-178683" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">brian</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040528-00/?p=39133#comment-178683">
			May 28, 2004 at 4:50 pm</a>		</div>

		<p>I&#8217;m surprised to hear that MSDN was promoting double-check-lock as best practice.  I recall first hearing about this anti-pattern in Java a few (maybe &gt;= 4) years ago, and then how it was debunked as unsafe.  Even after that, it was used in a Sun-supplied solution to the &quot;Question of the Week&quot; on their site (they&#8217;ve since fixed it: <a target="_new" href="http://java.sun.com/developer/qow/archive/111/" rel="nofollow">http://java.sun.com/developer/qow/archive/111/</a> ).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-179383">
				<div id="div-comment-179383" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://weblogs.asp.net/ishai/archive/2004/06/01/146162.aspx' rel='external nofollow' class='url'>Ishai's WebLog</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040528-00/?p=39133#comment-179383">
			June 1, 2004 at 8:31 pm</a>		</div>

		
		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-179473">
				<div id="div-comment-179473" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blogs.msdn.com/ishai/archive/0001/01/01/146162.aspx' rel='external nofollow' class='url'>Ishai's WebLog</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040528-00/?p=39133#comment-179473">
			June 2, 2004 at 1:40 am</a>		</div>

		
		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-190823">
				<div id="div-comment-190823" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://weblogs.asp.net/oldnewthing/' rel='external nofollow' class='url'>Raymond Chen</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040528-00/?p=39133#comment-190823">
			July 6, 2004 at 12:37 am</a>		</div>

		<p>Commenting on this entry has been closed.</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

