<html>
<head>
<title>Why does GetFileVersionInfo map the whole image into memory instead of just parsing out the pieces it needs?</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>Why does GetFileVersionInfo map the whole image into memory instead of just parsing out the pieces it needs?</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>May 30, 2014 / year-entry #136</td></tr>
<tr><td><b>Tags:</b></td><td>code</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20140530-00/?p=843</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>46</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">Commenter acq responds (with expletive deleted), "the whole file is mapped into the process' memory only for version info that's certainly only a few kilobytes to be read?" Why not map only the parts that are needed? "I don't understand the necessity to map the whole file except that it was easier to write that...</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>Commenter acq responds (with expletive deleted), "<a href="http://blogs.msdn.com/b/oldnewthing/archive/2012/04/18/10294731.aspx#10294956">the whole file is mapped into the process' memory only for version info that's certainly only a few kilobytes to be read?</a>" Why not map only the parts that are needed? "<a href="http://blogs.msdn.com/b/oldnewthing/archive/2012/04/18/10294731.aspx#10294961">I don't understand the necessity to map the whole file except that it was easier to write that code without thinking too much</a>."</p>
<p> That was exactly the reason. But not because it was to avoid thinking. It was to make things more secure. </p>
<p> Back in the old days, the <code>Get&shy;File&shy;Version&shy;Info</code> function did exactly what acq suggested: It parsed the executable file format manually looking for the file version information. (In other words, the original authors did it the hard way.) And it was the source of security vulnerabilities because malformed executables would cause the parser to "behave erratically". </p>
<p> This is a common problem: Parsing is hard, and parsing bugs are so common that that there's <a href="http://blogs.msdn.com/b/sdl/archive/2007/09/20/fuzz-testing-at-microsoft-and-the-triage-process.aspx"> an entire category of software testing focused on throwing malformed data at parsers to try to trip them up</a>. The general solution for this sort of thing is to establish one "standard parser" and make everybody use that one rather than rolling their own. That way, the security efforts can be focused on making that one standard parser resilient to malformed data. Otherwise, you have <a href="http://technet.microsoft.com/en-us/magazine/2008.05.windowsconfidential.aspx"> a whole bunch of parsers all over the place</a>, and a bad guy can just shop around looking for the buggiest one. </p>
<p> And it so happens that there is already a standard parser for resources. It's known as the loader. </p>
<p> The function <code>Get&shy;File&shy;Version&shy;Info</code> therefore got out of the file parsing business (it wasn't profitable anyway) and subcontracted the work to the loader. </p>
<p> <b>Pre-emptive xpclient rant</b>: "Removing the icon extractor for 16-bit DLLs was a mistake of the highest order, <a href="http://blogs.msdn.com/b/oldnewthing/archive/2012/07/17/10330362.aspx#10330756"> even worse than Component Based Servicing</a>." </p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (46)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-1127403">
				<div id="div-comment-1127403" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">7client</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140530-00/?p=843#comment-1127403">
			May 30, 2014 at 7:09 am</a>		</div>

		<p>&lt;Thing of the day&gt; is the worst idea EVER! Worse than &lt;old thing&gt;. Bring back &lt;older thing&gt;.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1127423">
				<div id="div-comment-1127423" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140530-00/?p=843#comment-1127423">
			May 30, 2014 at 7:15 am</a>		</div>

		<p>Which is why GetFileVersionInfo fails when called on a binary from another architecture.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1127433">
				<div id="div-comment-1127433" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Anon</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140530-00/?p=843#comment-1127433">
			May 30, 2014 at 7:16 am</a>		</div>

		<p>I lost it at &quot;Pre-emptive xpclient rant&quot;.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-iboyd odd alt thread-odd thread-alt depth-1" id="comment-1127453">
				<div id="div-comment-1127453" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/IanBoyd' rel='external nofollow' class='url'>IanBoyd</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140530-00/?p=843#comment-1127453">
			May 30, 2014 at 8:09 am</a>		</div>

		<p>And i thought that version checking was bringing my entire 7MB executable across the network because my executable has the `IMAGE_FILE_NET_RUN_FROM_SWAP` PE flag.</p>
<p>The change me made to improve performance (a few thousand-fold) was not to read the version info of my file (i.e. GetCommandLine), but rather read the version of my instance (HInstance). It causes the loader to simply use the already running &quot;me&quot;, rather than loading another copy of me (across the network).</p>
<p>Checking version info of startup went from 8 seconds to 0 seconds.</p>
<div class="post">[<em>Mapping an image does not read the entire file, so that doesn&#39;t explain why the entire image is being read. My guess is that it&#39;s the &quot;run from swap&quot; flag that&#39;s doing it. -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1127463">
				<div id="div-comment-1127463" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140530-00/?p=843#comment-1127463">
			May 30, 2014 at 8:27 am</a>		</div>

		<p>&gt; And i thought that version checking was bringing my entire 7MB executable across the network because my executable has the `IMAGE_FILE_NET_RUN_FROM_SWAP` PE flag.</p>
<p>GAAAAAAAAAAAAAAAAAAA.</p>
<p>Ok that settles it. Using the loader to implement GetFileVersionInfo is now known to be a terrible idea.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-hikari odd alt thread-odd thread-alt depth-1" id="comment-1127483">
				<div id="div-comment-1127483" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Chris+Crowther' rel='external nofollow' class='url'>Chris Crowther</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140530-00/?p=843#comment-1127483">
			May 30, 2014 at 8:46 am</a>		</div>

		<p>There&#39;s no point in reinventing the wheel; especially when someone else has already done it better than you will.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1127493">
				<div id="div-comment-1127493" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">sajjad</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140530-00/?p=843#comment-1127493">
			May 30, 2014 at 9:07 am</a>		</div>

		<p>Mapping a file from the network (through samba) will read it to a local file before mapping it to the memory, as far as I know and tested anyway.</p>
<p>NFS doesn&#39;t have the same problem/mechanism.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1127503">
				<div id="div-comment-1127503" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Deduplicator</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140530-00/?p=843#comment-1127503">
			May 30, 2014 at 9:19 am</a>		</div>

		<p>@Joshua: Writing things only once whenever you can get away with it is a wonderful idea. One of the base tenets of software development is avoiding duplication, keepig only one authoritative definition of everything / only one implementation if possible. The trade-off Raymond mentioned for having less and better debugged code is certainly worth it.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1127513">
				<div id="div-comment-1127513" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Clovis</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140530-00/?p=843#comment-1127513">
			May 30, 2014 at 10:00 am</a>		</div>

		<p>I very much admire that design decision. And I&#39;m not being sarcastic, I promise. </p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1127533">
				<div id="div-comment-1127533" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140530-00/?p=843#comment-1127533">
			May 30, 2014 at 10:19 am</a>		</div>

		<p>[My guess is that it&#39;s the &quot;run from swap&quot; flag that&#39;s doing it. -Raymond]</p>
<p>No point in guessing. He said that&#39;s what does was causing it (and it&#39;s set for some reason that would be obviously necessary given context).</p>
<div class="post">[<em>No, he said &quot;And I thought version checking was bringing my 7MB executable across the network because my executable has the IMAGE_FILE_NET_RUN_FROM_SWAP PE flag.&quot; The implied other half of the paragraph is &quot;But I was wrong. The reason version checking brings in the entire file is because version checking maps the entire file.&quot; The phrasing &quot;And I thought&#8230;&quot; implies that the thought was incorrect. -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1127543">
				<div id="div-comment-1127543" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joker_vD</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140530-00/?p=843#comment-1127543">
			May 30, 2014 at 10:27 am</a>		</div>

		<p>@Mike Dimmick: You know what, strictly speaking, hard drives too should count as removable media. I had a wonderful experience just a couple of months ago: the SATA-cable connecting the system disk to the mainboard was defective, so every two minutes all disk operations would halt for half a minute. The results were spectacular: everything except the mouse cursor froze. Even the programs that had no business touching the disk at all&#8230; maybe not, maybe the window manager just couldn&#39;t re-draw their windows properly, no idea.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1127553">
				<div id="div-comment-1127553" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Anon</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140530-00/?p=843#comment-1127553">
			May 30, 2014 at 11:15 am</a>		</div>

		<p>@Joker_vD</p>
<p>Actually, SATA drives are, on some boards/drivers, treated as &quot;Removable.&quot; I know at home, the &quot;Remove Hardware&quot; button includes all of my non-OS drives.</p>
<p>The above is always true for eSATA.</p>
<p>Unfortunately, this does mean that those drives will run vastly slower &#8212; no write caching on removable drives.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1127573">
				<div id="div-comment-1127573" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140530-00/?p=843#comment-1127573">
			May 30, 2014 at 12:07 pm</a>		</div>

		<p>@Myria: I&#39;ll bet it uses LOAD_LIBRARY_AS_DATAFILE which doesn&#39;t.</p>
<p>@Anon: You know you can turn write-behind caching back on, right?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1127593">
				<div id="div-comment-1127593" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joker_vD</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140530-00/?p=843#comment-1127593">
			May 30, 2014 at 12:41 pm</a>		</div>

		<p>&quot;The file is warning the loader that it&#39;s rather transient&quot;</p>
<p>Actually, how on Earth would the file know that? The exact nature of the file&#39;s location and transport layer between that location and local RAM is completely independent of the file&#39;s contents.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-alegrigoriev even thread-even depth-1" id="comment-1127613">
				<div id="div-comment-1127613" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/alegr1' rel='external nofollow' class='url'>alegr1</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140530-00/?p=843#comment-1127613">
			May 30, 2014 at 2:33 pm</a>		</div>

		<p>Here is my take on the whole SWAPRUN controversy.</p>
<p>Some executables (mostly installers) are designed to run while the source media is being swapped. Also, they may not be designed to handle paging failures while they read the embedded data, and may produce a corrupted install if that happens. So Microsoft came with the flag that guaranteed that the page-in failure will never happen. The usage pattern that needs that flag is completely up to the program itself.</p>
<p>Then, during Vista development, some guy (perhaps from the crowd who is overly concerned with FILE_ATTRIBUTE_OFFLINE) thought that the SWAPRUN flag needs to be honored even if the file is being mapped by some third party for resource extraction. Which is bad idea, because such mapping is typically done for short periods of time anyway, and the caller can very well (and MUST anyway) handle page-in failures.</p>
<p>Microsoft, please, reverse that nonsense and ignore SWAPRUN if the file is not loaded for execution.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-alegrigoriev odd alt thread-odd thread-alt depth-1" id="comment-1127623">
				<div id="div-comment-1127623" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/alegr1' rel='external nofollow' class='url'>alegr1</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140530-00/?p=843#comment-1127623">
			May 30, 2014 at 2:35 pm</a>		</div>

		<p>@IanBoyd:</p>
<p>&quot;So who cares if an image is simply &quot;mapped&quot; into my 2 GB address space? Is the use of 7 MB of virtual memory for 300 ms so terrible?&quot;</p>
<p>What if it&#39;s a 700MB setup.exe being opened for icon extraction by Explorer?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-alegrigoriev even thread-even depth-1" id="comment-1127633">
				<div id="div-comment-1127633" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/alegr1' rel='external nofollow' class='url'>alegr1</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140530-00/?p=843#comment-1127633">
			May 30, 2014 at 2:44 pm</a>		</div>

		<p>Note that use of mapping instead of ReadFile does not save you from exploits. On the contrary, it allows for quite exotic exploits, such as touching random memory (other thread stack guard page, for example), if the parser is not written carefully.</p>
<div class="post">[<em>Of course. But now there&#39;s only one parser you need to debug instead of two. (And the mapped parser is needed anyway for other reasons.) -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-yuhong-bao odd alt thread-odd thread-alt depth-1" id="comment-1127643">
				<div id="div-comment-1127643" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Yuhong+Bao' rel='external nofollow' class='url'>Yuhong Bao</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140530-00/?p=843#comment-1127643">
			May 30, 2014 at 4:10 pm</a>		</div>

		<p>Reminds me of why they restricted loading of keyboard layouts to system32 for Vista, which they also later backported to XP/Server 2003 in a security update.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1127653">
				<div id="div-comment-1127653" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140530-00/?p=843#comment-1127653">
			May 30, 2014 at 4:35 pm</a>		</div>

		<p>&gt; What if it&#39;s a 700MB setup.exe being opened for icon extraction by Explorer?</p>
<p>If you&#39;re using 32 bit Windows &amp; stock resource segments, no icon for you.</p>
<p>This is one of the reasons I much prefer my custom resource format for this kind of thing (very large resources in EXE for whatever reason). They aren&#39;t in any PE section and so don&#39;t get mapped. In case you were wondering how this works, I used spare bytes in the MS-DOS stub program (not the MZ header &#8212; the program) to contain the pointer; therefore we can trivially say there are no compatibility issues with this as the stub program will never be executed anyway.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1127663">
				<div id="div-comment-1127663" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Crescens2k</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140530-00/?p=843#comment-1127663">
			May 30, 2014 at 4:46 pm</a>		</div>

		<p>@alegr1:</p>
<p>&quot;What if it&#39;s a 700MB setup.exe being opened for icon extraction by Explorer?&quot;</p>
<p>It&#39;s ok, I use Windows 8.1 x64, Explorer has 128TB user address space.</p>
<p>But on a more serious note, you&#39;d expect the loader to be able to handle things like that and these particular functions could deal with it. MapViewOfFile and the underlying Sections don&#39;t require the entire file be mapped all the time. So the loader could be told, &quot;I want this information&quot;, it then parses the executable only mapping in what it needs if the file is too large and then extracts the information.</p>
<p>Remember a few years ago with one of the Visual Studio updates that came as a large Windows Installer package? Because Windows Installer tried to map the entire package into memory at once to do a hash check, it was failing. That was fixed in the next version of Windows Installer though. But would the fix be to stop the hash check? No, the simplest way would be to only map smaller sections of the file.</p>
<p>Either way, the executable loader has these things available to it, and because it isn&#39;t being loaded for code, it can take some steps to reduce address space usage if needed.</p>
<p>Of course this is just speculation that I made up right now, but I have downloaded patches that were distributed as self extracting archives, and these never failed to extract the icons, even on 32 bit systems.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-mike-dimmick even thread-even depth-1" id="comment-1127523">
				<div id="div-comment-1127523" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Mike+Dimmick' rel='external nofollow' class='url'>Mike Dimmick</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140530-00/?p=843#comment-1127523">
			May 30, 2014 at 10:08 am</a>		</div>

		<p>Normally, mapping the whole file would not cause the whole file to be read. Only the touched pages would be read. However, if it&#39;s on removable media (and networks should be counted as removable!), you can get page fault exceptions if the media has been removed and a previously unread (or discarded) page is touched.</p>
<p>IMAGE_FILE_NET_RUN_FROM_SWAP says &#39;hey, this file might go away, so read it all into (swap-file backed) memory in case it does&#39;. So the loader does what it was told.</p>
<p>It might be nice if there was a flag value for LoadLibraryEx that told it &#39;I don&#39;t care about this file going away, ignore that switch&#39; but, to be honest, that sounds like it wouldn&#39;t meet the bar for new features. You could do that if one of the LOAD_LIBRARY_AS_DATAFILE or LOAD_LIBRARY_AS_IMAGE_RESOURCE flags is set, but that&#39;s potentially a behaviour change that could crash an application depending on the feature, so a separate flag would be better.</p>
<p>It&#39;s not particularly clear why you might use LOAD_LIBRARY_AS_IMAGE_RESOURCE instead of/as well as LOAD_LIBRARY_AS_DATAFILE. I *think* it means that Windows doesn&#39;t bother aligning each section of the file to the appropriate offset, it just maps the file as a single view. PE files omit unnecessary chunks of zeroes &#8211; sections start on a 512-byte boundary, but the processor requires that code + data with different access permissions start on 4KB boundaries.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-alegrigoriev odd alt thread-odd thread-alt depth-1" id="comment-1127673">
				<div id="div-comment-1127673" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/alegr1' rel='external nofollow' class='url'>alegr1</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140530-00/?p=843#comment-1127673">
			May 30, 2014 at 6:50 pm</a>		</div>

		<p>&gt;&quot;What if it&#39;s a 700MB setup.exe being opened for icon extraction by Explorer?&quot;</p>
<p>&gt;It&#39;s ok, I use Windows 8.1 x64, Explorer has 128TB user address space.</p>
<p>And then wait while the whole file gets read from network or DVD, because Vista+ wants so.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1127563">
				<div id="div-comment-1127563" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Myria</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140530-00/?p=843#comment-1127563">
			May 30, 2014 at 11:55 am</a>		</div>

		<p>Does it apply relocations to the image? &nbsp;Because *that* would be dangerous.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1127583">
				<div id="div-comment-1127583" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Euro Micelli</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140530-00/?p=843#comment-1127583">
			May 30, 2014 at 12:12 pm</a>		</div>

		<p>@Mike Dimmick: It might be nice if there was a flag value for LoadLibraryEx that told it &#39;I don&#39;t care about this file going away, ignore that switch&#39; </p>
<p>I don&#39;t agree. If the file says it might go away, the loader has to assume it might go away. What if it *does* go away?</p>
<p>The file is warning the loader that it&#39;s rather transient. There is a lost-optimization cost to that fact, and you&#39;re going to have to pay for it. If you don&#39;t like the cost, you need to make sure the file is &quot;non-transient&quot;, not allow remote code to override the warning.</p>
<p>Besides, that would just start the settings race again: &quot;I need a setting in the PE that says &#39;no, really, I truly might go away, so ignore requests to ignore IMAGE_FILE_NET_RUN_FROM_SWAP&#39;&quot;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-iboyd even thread-even depth-1" id="comment-1127603">
				<div id="div-comment-1127603" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/IanBoyd' rel='external nofollow' class='url'>IanBoyd</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140530-00/?p=843#comment-1127603">
			May 30, 2014 at 12:52 pm</a>		</div>

		<p>I *used* to think that &quot;IMAGE_FILE_NET_RUN_FROM_SWAP&quot; was the cause of the version check loading the entire executable across the network. I used to think that until this morning, when i read today&#39;s blog entry. Today&#39;s blog entry indicates that an entire executable is mapped into my address space in order to do a version check.</p>
<p>&quot;Oh&quot;, i thought. &quot;Perhaps it wasn&#39;t my use of swap-run after all. I guess it&#39;s actually because the loader insists on loading the entire image&quot;.</p>
<p>So, i *used* to think that it was the fault of IMAGE_FILE_NET_RUN_FROM_SWAP. But after this morning, i assumed it is the loader&#39;s fault. Case closed, right? No:</p>
<p>&gt; Mapping an image does not read the entire file, so that doesn&#39;t explain why the entire image is being read.</p>
<p>What? But you just said&#8230;.!</p>
<p>So now i&#39;m left trying to reconcile what this blog entry means:</p>
<p>&#8211; the loader maps the whole image into process memory</p>
<p>&#8211; mapping an image does not read the entire file</p>
<p>Oh, wait. It *maps* the image into my address space, but does not actually need to access the network until there is a fault on pages. On the other hand, the use of IMAGE_FILE_NET_RUN_FROM_SWAP causes the entire image to be copied across the network, stored in swapfile space, and then the image is mapped into my process&#39;s virtual address space. So that makes sense, and seems reasonable.</p>
<p>So who cares if an image is simply &quot;mapped&quot; into my 2 GB address space? Is the use of 7 MB of virtual memory for 300 ms so terrible?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-alt-92_ odd alt thread-odd thread-alt depth-1" id="comment-1127723">
				<div id="div-comment-1127723" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/alt-92_' rel='external nofollow' class='url'>alt-92_</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140530-00/?p=843#comment-1127723">
			May 31, 2014 at 3:30 am</a>		</div>

		<p>Or, like any sane person would (those with /dev/brain mounted rw) copy that 700MB file to local disk and THEN execute actions.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1127743">
				<div id="div-comment-1127743" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Muzer_</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140530-00/?p=843#comment-1127743">
			May 31, 2014 at 10:19 am</a>		</div>

		<p>Joshua is the new xpclient.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-alegrigoriev odd alt thread-odd thread-alt depth-1" id="comment-1127753">
				<div id="div-comment-1127753" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/alegr1' rel='external nofollow' class='url'>alegr1</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140530-00/?p=843#comment-1127753">
			May 31, 2014 at 10:28 am</a>		</div>

		<p>@alt-92:</p>
<p>So to just browse a network/CD folder, you&#39;d need to copy it to the local drive first? Why not just use command line, like in old good times?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1127763">
				<div id="div-comment-1127763" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">voo</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140530-00/?p=843#comment-1127763">
			May 31, 2014 at 11:29 am</a>		</div>

		<p>@alegr1: &quot;And then wait while the whole file gets read from network or DVD, because Vista+ wants so.&quot;</p>
<p>You mean because the executable itself specified it wanted so? There&#39;s a really easy solution.. don&#39;t set the flag if you don&#39;t want it! Or are we complaining now about giving programmers too many options? </p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1127793">
				<div id="div-comment-1127793" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Dylan</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140530-00/?p=843#comment-1127793">
			May 31, 2014 at 3:34 pm</a>		</div>

		<p>@Euro Micelli</p>
<p>&gt;If you don&#39;t like the cost, you need to make sure the file is &quot;non-transient&quot;, not allow remote code to override the warning.</p>
<p>&gt;Besides, that would just start the settings race again: &quot;I need a setting in the PE that says &#39;no, really, I truly might go away, so ignore requests to ignore IMAGE_FILE_NET_RUN_FROM_SWAP&#39;&quot;</p>
<p>Overriding swaprun wouldn&#39;t be an assertion of &quot;the file won&#39;t go away&quot;. &nbsp;It would be an assertion of &quot;I don&#39;t care that the file might go away&quot;. &nbsp;There would be no arms race. &nbsp;Oh, the file really truly might go away? &nbsp;STILL don&#39;t care, don&#39;t load the entire thing just because it was mapped.</p>
<p>And as far as cost, take into account that the file might go away while it&#39;s being copied into memory, so if you scanned version info and unmapped it would actually have a smaller risk window than copying megabytes.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-alegrigoriev even thread-even depth-1" id="comment-1127773">
				<div id="div-comment-1127773" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/alegr1' rel='external nofollow' class='url'>alegr1</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140530-00/?p=843#comment-1127773">
			May 31, 2014 at 1:46 pm</a>		</div>

		<p>@voo:</p>
<p>&gt;You mean because the executable itself specified it wanted so?</p>
<p>Let&#39;s refresh our knowledge. The option is called /SWAPRUN, which means *run* from swap. The documentation for the option says the executable will be loaded to the swap if it&#39;s *run* from a CD or a remote share. A mapping of the file for an icon extraction doesn&#39;t constitute running.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1127803">
				<div id="div-comment-1127803" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">nksingh [msft]</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140530-00/?p=843#comment-1127803">
			May 31, 2014 at 10:01 pm</a>		</div>

		<p>@Mike Dimmick</p>
<p>&gt; It&#39;s not particularly clear why you might use LOAD_LIBRARY_AS_IMAGE_RESOURCE instead of/as well as LOAD_LIBRARY_AS_DATAFILE.</p>
<p>I&#39;m pretty sure that there&#39;s an advantage to using LOAD_LIBRARY_AS_IMAGE_RESOURCE if the relevant module also contains code that is likely to be loaded at some point. As you mentioned, the section alignment is different for a flat-mapped file versus an image-mapped file. The memory manager will be able to reuse existing image pages if you pass at least LOAD_LIBRARY_AS_IMAGE_RESOURCE. It seems like using both flags together only has a special meaning in a Protected Process.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1127813">
				<div id="div-comment-1127813" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Crescens2k</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140530-00/?p=843#comment-1127813">
			June 1, 2014 at 2:09 am</a>		</div>

		<p>@alegr1:</p>
<p>But isn&#39;t that also a case where /SWAPRUNANDGETMETADATA and IMAGE_FILE_NET_RUN_AND_GET_METADATA_FROM_SWAP are overly large?</p>
<p>While it is true that it does state run, it really doesn&#39;t state what the side effects of that flag actually are. I feel this is like complaining that copying a file copies the file metadata too, or doing a full format also checks for bad sectors. These commands don&#39;t state that they do them after all.</p>
<p>But I guess the change is what causes you to complain since if Windows always did it, you would have just dealt with it.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1127823">
				<div id="div-comment-1127823" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Neil</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140530-00/?p=843#comment-1127823">
			June 1, 2014 at 2:39 am</a>		</div>

		<p>I know someone who wanted to run a 16-bit application on Windows 7 64-bit, so we dutifully installed XP Mode.</p>
<p>XP Mode wasn&#39;t able to extract the application&#39;s icon and use it in the XP Mode Applications section of the Start menu. Instead we got a generic XP Mode icon.</p>
<p>We went on to find that if the XP shortcut specified a custom icon from a .ico file then XP Mode would simply fail to integrate the shortcut.</p>
<p>I considered writing a 32-bit &quot;loader&quot; application with the icon in its resources that would load the 16-bit application but starting 16-bit applications is apparently nontrivial and we didn&#39;t think it was worth the effort just to see the right icon.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1127833">
				<div id="div-comment-1127833" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">640k</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140530-00/?p=843#comment-1127833">
			June 1, 2014 at 12:24 pm</a>		</div>

		<p>@Joker_vD</p>
<p>If you treat local storage as removable, then why not treat all storage as removable, like ram disks. I&#39;ve seen it happen. But then the flag is useless because all things are special. What should be done instead is to optimize for the common case. That&#39;s the correct approach.</p>
<p>Then of course, as usual there is always the problem with sloppy developers which only wants to develop for permanent attached storage and don&#39;t want to spend a second on, or write a single line of code to account for, removable media. It think that&#39;s the biggest problem. As usual.</p>
<p>The problems with applications that are freezing could probably be blamed on sloppy developers in general, and does probably not depend on sata drives being treated as removable or not. Explorer.exe is a joke when it comes to robust programming, it depends on perfect hardware way to much.</p>
<p>@Raymond</p>
<p>DRY is generally a good principle, but you don&#39;t fool anyone into believing that windows binaries doesn&#39;t get 10x more bloated with every refactoring, no matter which design pattern is used. Please show me smaller binaries and smaller memory footprint, then I believe you. It will not happen.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1127843">
				<div id="div-comment-1127843" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">John Doe</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140530-00/?p=843#comment-1127843">
			June 1, 2014 at 3:58 pm</a>		</div>

		<p>I don&#39;t get it, couldn&#39;t the parser be the same without having to map a whole file in memory? &nbsp;Now, really, Isn&#39;t It Obvious&trade;, since you chose to have a single parser, that you could have gone to the trouble of keeping the streaming/file positioning, or even making one, just because of this case?</p>
<div class="post">[<em>Sure, you could write a parser that supported both mapped mode and ReadFile mode, but then you basically created two parsers. -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1127853">
				<div id="div-comment-1127853" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">acq</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140530-00/?p=843#comment-1127853">
			June 2, 2014 at 1:48 am</a>		</div>

		<p>Thanks Raymond. I understand now fully. I&#39;m still curious though if &quot;the hard way&quot; initial implementation was really &quot;beyond repairing&quot; or was it more a &quot;we do now things differently by policy&quot; decision. I can imagine that the initial implementation was from the times before the security initiative and nobody wanted to spend the time analyzing the &quot;classic&quot; code and implementing all the SafeXXX calls.</p>
<div class="post">[<em>The old way wasn&#39;t beyond repair, but it created an ongoing support burden. Somebody has to update it to support 64-bit binaries, for example. And leaving the custom parser means risking that there is some security flaw still lurking. (The code was already converted to use SafeXXX. But there are other flaws that could occur, like an offset that reaches beyond the end of the binary, or an offset that is not properly aligned.) -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-jonathan-timssungard-com odd alt thread-odd thread-alt depth-1" id="comment-1127863">
				<div id="div-comment-1127863" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/carbon+twelve' rel='external nofollow' class='url'>carbon twelve</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140530-00/?p=843#comment-1127863">
			June 2, 2014 at 3:03 am</a>		</div>

		<p>Thanks Raymond! I really enjoyed reading your post. It is baffling to me how the comments thread has become a flame war!</p>
<p>It surprises me that so many people think that this is an issue in practice; surely they have used 32bit Windows and recall seeing icons and .exe details in explorer without any issues?</p>
<p>This post appears to have evoked hysteria. For example:</p>
<p>Professor: &quot;Stars have finite lifetime&quot;</p>
<p>Student: &quot;But, I know the Earth orbits a star, and the Earth is /very/ old &#8212; so our star must not exist anymore, or be about to die &#8212; we&#39;re all going to die!&quot;</p>
<p>See what I mean? People, having heard about the mechanism, are going nuts about associated problems that somehow fail to manifest themselves.</p>
<p>Anyway, Raymond, I hope you don&#39;t stop posting on such &quot;controversial&quot; topics, it&#39;s very interesting. On that subject, I miss the DRM posts. :(</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1127913">
				<div id="div-comment-1127913" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Anon</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140530-00/?p=843#comment-1127913">
			June 2, 2014 at 8:09 am</a>		</div>

		<p>@Joshua</p>
<p>I know write-behind can be re-enabled. I&#39;d rather have my data not go missing when a Removable device is Removed.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1127973">
				<div id="div-comment-1127973" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">John Doe</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140530-00/?p=843#comment-1127973">
			June 2, 2014 at 8:50 am</a>		</div>

		<p>@Raymond, not exactly. &nbsp;The same parser could be used, only the reader had to be abstracted. &nbsp;The loader&#39;s reader would fetch bytes from memory and update a memory pointer, while the GetFileVersionInfo&#39;s reader would use ReadFile[Ex] and SetFilePointer[Ex].</p>
<p>Actually, if the loader, or any other component for that matter, will ever need to know version info before or without actually mapping the file, it&#39;s more than a good enough reason to only keep a file-scanning reader (remember, the parser would still be the same, only the in-memory reader would be gone). &nbsp;And there&#39;s no need for a time machine to reason up to this point, but it might be needed if someone wants to fix tight schedules or lazyness.</p>
<p>I share the feeling that this kind of posts is quite clarifying and indicative of the line of thought behind implicit historic reasons which we must keep dealing with.</p>
<p>I don&#39;t share the feeling that they were always good calls, even for their time.</p>
<div class="post">[<em>It&#39;s a little messier than just mapping pointer access to ReadFile. You have to double-buffer reads, so you would have to double-buffer everything, at which point you lose the benefit of memory-mapping. (Aside from the fact that if the DLL is loaded for execution, it is already mapped.) It would also be quite a disruptive change to the loader, changing the way it accesses memory. -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1128013">
				<div id="div-comment-1128013" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Myria</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140530-00/?p=843#comment-1128013">
			June 2, 2014 at 10:32 am</a>		</div>

		<p>@Crescens2k: I&#39;m impressed; you&#39;re one of the few who&#39;s also noticed that Windows 8.1 x86-64 increased the user-mode address space from 0x800`00000000 to 0x8000`00000000.</p>
<p>There&#39;s a benefit to not supporting machines that don&#39;t support cmpxchg16b. =^-^=</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1128023">
				<div id="div-comment-1128023" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Klimax</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140530-00/?p=843#comment-1128023">
			June 2, 2014 at 11:11 am</a>		</div>

		<p>@640k</p>
<p>&quot;DRY is generally a good principle, but you don&#39;t fool anyone into believing that windows binaries doesn&#39;t get 10x more bloated with every refactoring, no matter which design pattern is used. Please show me smaller binaries and smaller memory footprint, then I believe you. It will not happen.&quot;</p>
<p>And basis for your assertion is what? Feelings? Windows 8.0 and onward. That should be enough. (Although I am pretty sure I could start with Windows 7&#8230;)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-yuhong-bao even thread-even depth-1" id="comment-1128033">
				<div id="div-comment-1128033" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Yuhong+Bao' rel='external nofollow' class='url'>Yuhong Bao</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140530-00/?p=843#comment-1128033">
			June 2, 2014 at 7:03 pm</a>		</div>

		<p>@Myria: What is funny is that <a rel="nofollow" target="_new" href="https://support.microsoft.com/gp/lifecycle-Windows81-faq">support.microsoft.com/&#8230;/lifecycle-Windows81-faq</a> claims that &quot;Windows 8.1 does not change any hardware requirements compared with Windows 8 or Windows 7&quot;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1128053">
				<div id="div-comment-1128053" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">640k</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140530-00/?p=843#comment-1128053">
			June 2, 2014 at 9:31 pm</a>		</div>

		<p>@Yuhong: For starter, Windows 8 requires the hardware to be windows 8 certified to be able to use some features.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1128203">
				<div id="div-comment-1128203" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">John Doe</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140530-00/?p=843#comment-1128203">
			June 3, 2014 at 8:09 am</a>		</div>

		<p>@640k, that&#39;s almost like saying that if you want to use a computer, you need a computer. &nbsp;Or a closer call, to use a &lt;foo&gt;, you need a &lt;foo reader/interface device&gt;, like &quot;to hear sound or music, you need a sound card connected to a headset or a couple of external speakers,&quot; or &quot;to have a multi-touch interface experience, you need a multi-touch screen.&quot;</p>
<p>But at the end of the day, if your machine runs Windows 7, it runs Windows 8.1 as well. &nbsp;Now, you could say that the modern interface is quite a hurdle for a keyboard &amp; mouse setup, but that&#39;s beyond the main point, particularly for servers.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1128453">
				<div id="div-comment-1128453" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">EricLaw [ex-MSFT]</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140530-00/?p=843#comment-1128453">
			June 3, 2014 at 5:13 pm</a>		</div>

		<p>The IE team used to get burned by the SWAPRUN flag all the time, although it took us quite a while to realize why. We used to keep all of our installers on a network file share; directly invoking one from a hyperlink was fast, but if you opened Explorer to the share it took *forever*. Nobody bothered to look at why for over a year (blaming our poor lab team). When we finally looked, we realized that Explorer was extracting the icon from every one of the 20mb-45mb installers in the folder. It was generating hundreds of megabytes of network traffic just to display the default Shell View.</p>
<p>We considered removing the SWAPRUN flag from our installers and replacing it with some code we&#39;d found in Microsoft Systems Journal from the 90s (which predated the SWAPRUN flag) but ultimately chickened out.</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

