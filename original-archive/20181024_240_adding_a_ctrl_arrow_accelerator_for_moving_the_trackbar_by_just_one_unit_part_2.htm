<html>
<head>
<title>Adding a Ctrl+arrow accelerator for moving the trackbar by just one unit, part 2: Second try</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>Adding a <KBD>Ctrl</KBD>+arrow accelerator for moving the trackbar by just one unit, part 2: Second try</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>October 24, 2018 / year-entry #240</td></tr>
<tr><td><b>Tags:</b></td><td>code</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20181024-00/?p=100045</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>4</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">Intercepting the thumb motion.</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>
Last time, we looked at how we could add support to the trackbar
so that <kbd>Ctrl</kbd>+arrow moved the thumb by one unit,
even if the line size was set to a larger value.
We tried doing this by subclassing the control and adding
additional keyboard handling,
but this turned into a bit of a mess because of all the special
cases in the trackbar to accommodate various usage patterns.
</p>
<p>
What we really want to do is let the trackbar do all its
keyboard processing, and step in just before it moves the thumb,
so we can move it by a different amount if the <kbd>Ctrl</kbd>
key is held down.
</p>
<p>
Fortunately, there's a notification for this.
</p>
<p>
Unfortunately, it requires version 6 of the common controls.
</p>
<p>
Fortunately, version 6 of the common controls is included in all
versions of Windows still in support.
</p>
<p>
Take our program from last time, but stop before we added the
<code>Trackbar&shy;Key&shy;Proc</code>.
(Delete the
<code>Trackbar&shy;Key&shy;Proc</code> and the calls to
<code>Set&shy;Window&shy;Subclass</code> and
<code>Remove&shy;Window&shy;Subclass</code>.)
</p>
<p>
Instead, add this code:
</p>
<pre>
<font COLOR=blue>#pragma comment(linker, \
    "\"/manifestdependency:type='win32' \
    name='Microsoft.Windows.Common-Controls' \
    version='6.0.0.0' \
    processorArchitecture='*' \
    publicKeyToken='6595b64144ccf1df' \
    language='*'\"")</font>
</pre>
<p>
This <code>#pragma</code> is
<a HREF="https://blogs.msdn.microsoft.com/oldnewthing/20070531-00/?p=26623">
a quick way to enable version 6 of the common controls</a>.
</p>
<pre>
BOOL
OnCreate(HWND hwnd, LPCREATESTRUCT lpcs)
{
 g_hwndChild = CreateWindow(TRACKBAR_CLASS, TEXT(""),
    WS_CHILD | WS_VISIBLE <font COLOR=blue>| TBS_NOTIFYBEFOREMOVE</font>,
   0, 0, 100, 100,
    hwnd, (HMENU)100, g_hinst, 0);

  SendMessage(g_hwndChild, TBM_SETLINESIZE, 0, 5);
  SendMessage(g_hwndChild, TBM_SETPAGESIZE, 0, 20);</font>

  return TRUE;
}
</pre>
<p>
The
<code>TBS_</code><code>NOTIFY&shy;BEFORE&shy;MOVE</code>
style enables the
<code>TRBN_</code><code>THUMB&shy;POS&shy;CHANGING</code>
notification, which we will take advantage of below.
</p>
<pre>
<font COLOR=blue>LRESULT OnNotify(HWND hwnd, int idCtl, NMHDR* pnm)
{
 if (pnm-&gt;hwndFrom == g_hwndChild &amp;&amp;
     pnm-&gt;code == TRBN_THUMBPOSCHANGING &amp;&amp;
     GetKeyState(VK_CONTROL) &lt; 0) {
  auto ptpc = (NMTRBTHUMBPOSCHANGING*)pnm;
  switch (ptpc-&gt;nReason) {
  case TB_LINEUP:
  case TB_LINEDOWN:
    int pos = (int)SendMessage(pnm->hwndFrom, TBM_GETPOS, 0, 0);
    pos += (ptpc-&gt;nReason == TB_LINEUP) ? -1 : +1;
    SendMessage(pnm->hwndFrom, TBM_SETPOS, TRUE, pos);
    return TRUE; // we moved the thumb, so the control doesn't have to
  }
 }
 return 0;
}
    HANDLE_MSG(hwnd, WM_NOTIFY, OnNotify);</font>
</pre>
<p>
The
<code>TRBN_</code><code>THUMB&shy;POS&shy;CHANGING</code>
notification is sent before the trackbar moves the thumb.
and
the <code>nReason</code> tells you why the trackbar wants to
move the thumb.&sup1;
If the <kbd>Ctrl</kbd> key is held down, and the reason is
either a line-up or a line-down, then we fetch the current
trackbar position, adjust it by one unit, and set that as the
new trackbar position.
We then return <code>TRUE</code> to tell the trackbar that it shouldn't
move the trackbar thumb (because we moved it).
</p>
<p>
(Don't forget that if this is happening in a dialog box,
you need to use <code>DWLP_</code><code>MSG&shy;RESULT</code>
to make the dialog box return a nonzero value from its window
procedure.)
</p>
<p>
Responding to the notification leaves the trackbar to deal with
recognizing the keyboard keys and taking the various
trackbar configuration settings into account in order to convert
them to scroll actions.
We then detect the <i>change position by one line</i>
action and apply our special thumb motion if the <kbd>Ctrl</kbd>
key is held down,
leaving the trackbar to manage the keyboard cues and other
accessibility states.
</p>
<p>
&sup1;
There's also a <code>dwPos</code> that tells you where
the thumb is moving <i>to</i>,
but we are more interested in where the thumb is moving <i>from</i>.</p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (6)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1 parent" id="comment-1368745">
				<div id="div-comment-1368745" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">laonianren</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20181024-00/?p=100045#comment-1368745">
			October 24, 2018 at 8:25 am</a>		</div>

		<p>If the trackbar doesn&#8217;t handle CTRL+ARROW why does it send TRBN_THUMBPOSCHANGING when you press CTRL+ARROW?  This feels like something that could stop working in future.</p>
<p>Also, there&#8217;s a doc error.  The return value of TRBN_THUMBPOSCHANGING is documented as ignored.</p>

		
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-oldnewthing bypostauthor odd alt depth-2 parent" id="comment-1368755">
				<div id="div-comment-1368755" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Raymond+Chen+-+MSFT' rel='external nofollow' class='url'>Raymond Chen - MSFT</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20181024-00/?p=100045#comment-1368755">
			October 24, 2018 at 9:30 am</a>		</div>

		<p>The trackbar pays no attention to the Ctrl key, so Ctrl+Arrow is treated the same as Arrow, which changes the thumb position. I opened a doc change request at the same time I wrote this article. Looks like the queue won the race.</p>

		
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-bboorman even depth-3" id="comment-1368785">
				<div id="div-comment-1368785" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Brian_EE' rel='external nofollow' class='url'>Brian_EE</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20181024-00/?p=100045#comment-1368785">
			October 24, 2018 at 12:49 pm</a>		</div>

		<p>I think the point is that this seems like implementation details and not contractual behavior. History tells us that as soon you rely on this you will guarantee that it will be broken on you in the future.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt depth-3 parent" id="comment-1368945">
				<div id="div-comment-1368945" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Jonathan</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20181024-00/?p=100045#comment-1368945">
			October 28, 2018 at 9:05 am</a>		</div>

		<p>In the last cppcon I think it was demonstrated that users can now edit the msdn documentation, no?<br />
Perhaps it was a different Microsoft documentation site&#8230;</p>

		
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-oldnewthing bypostauthor even depth-4" id="comment-1369065">
				<div id="div-comment-1369065" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Raymond+Chen+-+MSFT' rel='external nofollow' class='url'>Raymond Chen - MSFT</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20181024-00/?p=100045#comment-1369065">
			October 29, 2018 at 3:31 pm</a>		</div>

		<p>It is enabled for some but not all of the documentation. The Win32 documentation hasn&#8217;t been converted to markdown yet. (You can imagine how much work that&#8217;s going to be.)</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1368765">
				<div id="div-comment-1368765" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20181024-00/?p=100045#comment-1368765">
			October 24, 2018 at 9:40 am</a>		</div>

		<p>&gt; Fortunately, version 6 of the common controls is included in all versions of Windows still in support. </p>
<p>Right up until you try to make a UI appear on Windows Server core. There&#8217;s an extremely short list of dlls guaranteed to be on the API surface of server core and comctl32.dll isn&#8217;t on the list. See <a href="https://msdn.microsoft.com/en-us/library/ee391643(v=vs.85)" rel="nofollow">https://msdn.microsoft.com/en-us/library/ee391643(v=vs.85)</a>.aspx (For some reason shell32.dll is on the list despite the fact that it&#8217;s broken on server core, but that&#8217;s a different topic.)</p>
<p>Now why would somebody want to make a GUI on server core? Because the alternative was installing the server desktop.</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

