<html>
<head>
<title>Debugging tip: Use .frame /r to recover nonvolatile registers from the stack frame</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>Debugging tip: Use .frame /r to recover nonvolatile registers from the stack frame</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>July 6, 2017 / year-entry #155</td></tr>
<tr><td><b>Tags:</b></td><td>code</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20170706-00/?p=96545</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>1</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">Saving you the trouble of reconstructing it manually.</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>
A customer was debugging a crash dump
(using a debugger that is based on the 
Windows debugger engine)
and observed that
when they used the <code>k</code> command,
the "Args to Child" values didn't make any sense,
and they suspect that the values are not accurate.
They were wondering if there were any tips for recovering
the actual parameters.
</p>
<p>
The customer is correct.
The values reported by
"Args to Child" come
from the stack,
but the values on the stack might not be the parameters.
</p>
<p>
On x86,
the values on the stack probably were the parameters
at one point, but the compiler is free to reuse that
space to hold other values.
And on x64,
the values were most likely never on the stack to begin with.
In debug mode, the compiler will probably
spill the register
parameters into
<a HREF="https://blogs.msdn.microsoft.com/oldnewthing/20040114-00/?p=41053">
their corresponding home space</a>,
but in release mode,
<a HREF="https://blogs.msdn.microsoft.com/oldnewthing/20130830-00/?p=3363">
the compiler will most likely not
bother</a>.
In all cases, the values reported as "Args to Child"
are unreliable.
</p>
<p>
But all hope is not lost.
</p>
<p>
The old-fashioned way of recovering the values is to
disassemble the function and follow the parameter
to see where the compiler decided to save it.
If the compiler saved it into memory on the stack frame,
then that's great:
You can inspect the value on the stack.
But if the compiler enregistered the value, then you
have to follow the register into the called function
to see where it saved that register.
And often that register got saved on the stack,
which means you have to do some math to find out
where it ended up.
</p>
<p>
But the debugger can help out.
If the debugger has access to a PDB file,
it can use that information to virtually pop
the registers from the stack back into registers.
And on x64, all functions must provide register unwind
information,
so this information is available in general.
</p>
<p>
If you use the <code>.frame</code> command
to switch context to a particular stack frame,
you can use the <code>/r</code> option to ask
the debugger to show the register state that
results from virtual register unwinding.
</p>
<p>
Note that when you issue this command,
the debugger shows all registers,
even the volatile registers,
so don't be faked out.</p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (1)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-1302607">
				<div id="div-comment-1302607" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://adamrosenfield.com' rel='external nofollow' class='url'>Adam Rosenfield</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20170706-00/?p=96545#comment-1302607">
			July 19, 2017 at 4:15 pm</a>		</div>

		<p>Nobody&#8217;s commented on this, but this is extremely useful.  I wish more debuggers had these this feature â€” I&#8217;ve had to resort to manually disassembling optimized release code to find my local variables more times than I can recall.</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

