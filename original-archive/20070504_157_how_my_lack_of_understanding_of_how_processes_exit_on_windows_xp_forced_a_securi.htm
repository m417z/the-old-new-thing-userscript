<html>
<head>
<title>How my lack of understanding of how processes exit on Windows XP forced a security patch to be recalled</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>How my lack of understanding of how processes exit on Windows XP forced a security patch to be recalled</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>May 4, 2007 / year-entry #158</td></tr>
<tr><td><b>Tags:</b></td><td>code</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20070504-00/?p=26983</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>78</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">Last year, a Windows security update got a lot of flack for causing some machines to hang, and it was my fault. (This makes messing up a demo at the Financial Analysts Meeting look like small potatoes.) The security fix addressed a category of attacks wherein people could construct shortcut files or other items which...</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>Last year, a Windows security update got a lot of flack for causing some machines to hang, and it was my fault. (This makes <a href="http://blogs.msdn.com/larryosterman/archive/2006/07/31/684327.aspx" mce_href="http://blogs.msdn.com/larryosterman/archive/2006/07/31/684327.aspx">messing up a demo at the Financial Analysts Meeting</a> look like small potatoes.)</p>
<p>The security fix addressed a category of attacks wherein people could construct shortcut files or other items which specified a CLSID that was never intended to be used as a shell extension. As we saw earlier, <a href="http://blogs.msdn.com/oldnewthing/archive/2004/03/26/96777.aspx" mce_href="http://blogs.msdn.com/oldnewthing/archive/2004/03/26/96777.aspx">lots of people mess up <code>IUnknown::QueryInterface</code></a>, and if you pass the CLSID of one of these buggy implementations, Explorer would dutifully create it and try to use it, and then bad things would happen. The object might crash or hang or even corrupt memory and keep running (sort of). </p>
<p>To protect against buggy shell extensions, Explorer was modified to use a helper program called <code>verclsid.exe</code> whose job was to be the "guinea pig" and host the shell extension and do some preliminary sniffing around to make sure the shell extension passed some basic functionality tests before letting it run loose in Explorer. That way, if the shell extension went crazy, the victim would be the <code>verclsid.exe</code> process and not the main Explorer process. </p>
<p>The <code>verclsid.exe</code> program created a watchdog thread: If the preliminary sniffing took too long, the watchdog assumed that the shell extension was hung and the watchdog told Explorer, "Don't use this shell extension." </p>
<p>I was one of the people brought in to study this new behavior, poke holes in its design, poke holes in its implementation, review every line of code that changed and make sure that it did exactly what it was supposed to do without introducing any new bugs along the way. We found some issues, testers found some other issues, and all the while, the clock was ticking since this was a security patch and people enjoy mocking Microsoft over how long it takes to put a security patch together. </p>
<p>The patch went out, and reports started coming in that machines were hanging. How could that be? We created a watchdog thread specifically to catch the buggy shell extensions that hung; why isn't the watchdog thread doing its job? </p>
<p>That was a long set-up for today's lesson. </p>
<p>After running its sanity tests, the <code>verclsid.exe</code> program releases the shell extension, un-initializes COM, and then calls <code>ExitProcess</code> with a special exit code that means, "All tests passed." If you read <!--backref: thread termination -->yesterday's installment, you already know where I messed up. </p>
<p>The DLL that implemented the shell extension created a worker thread, so it did an extra <code>LoadLibrary</code> on itself so that it wouldn't get unloaded when COM freed it as part of <code>CoUninitialize</code> tear-down. When the DLL got its <code>DLL_PROCESS_DETACH</code>, it shut down its worker thread by the common technique of setting a "clean up now" event that the worker thread listened for, and then waiting for the worker thread to respond with a "Okay, I'm all done" event. </p>
<p>But recall that the first stage in process exit is the termination of all threads other than the one that called <code>ExitProcess</code>. That means that the DLL's worker thread no longer exists. After setting the event to tell the (nonexistent) thread to clean up, it then waited for the (nonexistent) thread to say that it was done. And since there was nobody around listening for the clean-up event, the "all done" event never got set. The DLL hung in its <code>DLL_PROCESS_DETACH</code>. </p>
<p>Why didn't our watchdog thread save us? Because <strong>the watchdog thread got killed too</strong>! </p>
<p>Now, the root cause for all this was a buggy shell extension that did bad things in its <code>DLL_PROCESS_DETACH</code>, but blaming the shell extension misses the point. After all, it was the fact that there existed buggy shell extensions that created the need for the <code>verclsid.exe</code> program in the first place. </p>
<p><b>Welcome Slashdot readers</b>. Since you won't read the existing comments before posting your own, I'll float some of the more significant ones here. </p>
<p>The buggy shell extension was included with a printer driver for a printer that is no longer manufactured. Good luck finding one of those in your test suite. </p>
<p>The security update was recalled and reissued in a single action, which most people would call an <i>update</i> or <i>refresh</i>, but the word <i>recall</i> works better in a title. </p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (78)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-499593">
				<div id="div-comment-499593" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Nathan</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070504-00/?p=26983#comment-499593">
			May 4, 2007 at 10:24 am</a>		</div>

		<p>For accepting responsibility in this. Nice job. Something we can all learn from.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-499603">
				<div id="div-comment-499603" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">charless</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070504-00/?p=26983#comment-499603">
			May 4, 2007 at 10:39 am</a>		</div>

		<p>Ditto to Nathan&#8217;s comment!</p>
<p>But, the question that came to my mind was why didn&#8217;t anyone see/report this hang durring internal testing? Based on what you have said over the last few days, this hang seems to fall somewhere between likely and very likely. Or maybe a better question would be, now that you have explained why this design &#8220;can&#8217;t&#8221; work, can you explain how verclsid.exe ever exits cleanly?</p>
<p>And again, thankyou for some very insigtful reading!</p>
<p>-charles</p>
<div class="post">[<i>A few days of internal testing is not going to come anywhere near 100% coverage of all shell extensions on the planet. <a href="http://blogs.msdn.com/oldnewthing/archive/2006/11/20/1109012.aspx" rel="nofollow">It takes only one bad program to foul an upgrade</a>. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-499623">
				<div id="div-comment-499623" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">tony roth</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070504-00/?p=26983#comment-499623">
			May 4, 2007 at 11:02 am</a>		</div>

		<p>I love it when somebody else screws up!</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-499633">
				<div id="div-comment-499633" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">stanley</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070504-00/?p=26983#comment-499633">
			May 4, 2007 at 11:14 am</a>		</div>

		<p>I learned the hard way when I was creating a shell extension recently that verclsid.exe will not allow Explorer to load your DLL if you haven&#8217;t finished implementing the interfaces you say you implement.</p>
<p>During development, it may be helpful to manually add your shell extension to the allow list:</p>
<p><a rel="nofollow" target="_new" href="http://support.microsoft.com/kb/918165" rel="nofollow">http://support.microsoft.com/kb/918165</a></p>
<p>That&#8217;s kind of a hackish approach, and you&#8217;ve got to make sure to remove the entry before you deploy to make sure your final DLL will get verclsid&#8217;s blessing. &nbsp;Is there a better way to do this?</p>
<p>I almost wanted to ask if the suite of tests verclsid runs is published anywhere, but I imagine Microsoft would rather leave it unspecified so as not to imply a contract. &nbsp;It does make it a little frustrating to try and figure out why verclsid.exe won&#8217;t let Explorer load your DLL, though.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-499653">
				<div id="div-comment-499653" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">tcliu</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070504-00/?p=26983#comment-499653">
			May 4, 2007 at 11:37 am</a>		</div>

		<p>Interesting story, Raymond.</p>
<p>One question though: I get the impression that a shortcut can specify any CLSID, and Explorer will try to load it as an extension. The problem was that some CLSIDs referred to objects that were never intended to be used as shell extensions, and therefore Explorer would crash.</p>
<p>Now, verclsid.exe will catch the currently existing ones, but is there any way to mark a COM object as &quot;Under no circumstances use this as a shell extension&quot;? I&#8217;ve searched around a bit, but didn&#8217;t find anything. (I&#8217;ve never written a COM object in my life, so I don&#8217;t even know where to start.)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-499693">
				<div id="div-comment-499693" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Adam</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070504-00/?p=26983#comment-499693">
			May 4, 2007 at 12:34 pm</a>		</div>

		<p>Just out of curiosity, how did explorer and verclsid.exe communicate?</p>
<p>It&#8217;s just that the way to do this that springs to my mind would be for explorer to launch verclsid.exe, and have explorer wait for verclsid.exe to exit and check its exit status. If verclsid.exe exits indicating success within the time limit that explorer is willing to wait for, all is OK. If it returns indicating a failure, or crashes, or doesn&#8217;t exit within the time limit, the CLSID is bad.</p>
<p>So, I guess I&#8217;m wondering why exit codes weren&#8217;t adequate for the communication that was needed (what else apart from yes/no is there?), and what communication mechanism was used instead.</p>
<p>I&#8217;m also wondering what would happen if a buggy/malicious extension managed to scribble over the part of the address space being used by the watchdog thread. Was it just assumed that having the watchdog in the same process as the thing you&#8217;re testing for its ability to trash a process was too tiny a risk to worry about?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-499713">
				<div id="div-comment-499713" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">charless</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070504-00/?p=26983#comment-499713">
			May 4, 2007 at 1:01 pm</a>		</div>

		<p>Oops, I misinterpreted in sentence that starts: &quot;The DLL that hosted the shell extension&#8230;&quot; Thanks for the clairification. Now the end of the story makes sense too.</p>
<p>-charles</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-499723">
				<div id="div-comment-499723" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Fred Schtiener</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070504-00/?p=26983#comment-499723">
			May 4, 2007 at 1:29 pm</a>		</div>

		<p>Looks like the classic case of bad testing, not that I haven&#8217;t done but just pointing out the obvious. I know you can&#8217;t test for every possible case (sometimes) but still you need more testing. Then rinse and repeat.</p>
<div class="post">[<i>More testing = more time = more people complaining that Microsoft is slow to release patches. You can&#8217;t have everything. The bug was in a shell extension that came with a particular model of printer that the manufacturer doesn&#8217;t even make any more! Good luck testing that. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-jamesnt even thread-even depth-1" id="comment-499753">
				<div id="div-comment-499753" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/JamesNT' rel='external nofollow' class='url'>JamesNT</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070504-00/?p=26983#comment-499753">
			May 4, 2007 at 3:19 pm</a>		</div>

		<p>Mr. Chen,</p>
<p>Excellent article. &nbsp;I seem to recall being bitten myself by said patch. &nbsp;Regardless, you are still my programming god. &nbsp;The only thing this situation proves is that you are human and, like the rest of us, are expected to work magic half the time.</p>
<p>Thank you for all your hard work.</p>
<p>JamesNT</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-499783">
				<div id="div-comment-499783" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">dislyxec</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070504-00/?p=26983#comment-499783">
			May 4, 2007 at 3:38 pm</a>		</div>

		<p>Integrity and Honesty, a microsoft core value :)</p>
<p>I love these stories&#8211;it reminds us all that we&#8217;re not the only ones that screw up :P</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-499803">
				<div id="div-comment-499803" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Brody</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070504-00/?p=26983#comment-499803">
			May 4, 2007 at 3:50 pm</a>		</div>

		<p>This article reminded me of how it feels to wade through the kludged-up tangle of anti-pollution hoses and devices on a 1972 Ford Pinto. Those Pintos would only work if everything was adjusted perfectly. There were too many complex interdependencies for mere mortals to grasp. If Raymond Chen can&#8217;t even predict how something will work, something tells me the design is way too complex in the first place.</p>
<p><a rel="nofollow" target="_new" href="http://en.wikipedia.org/wiki/Ford_Pinto" rel="nofollow">http://en.wikipedia.org/wiki/Ford_Pinto</a></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-499823">
				<div id="div-comment-499823" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Nick</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070504-00/?p=26983#comment-499823">
			May 4, 2007 at 4:23 pm</a>		</div>

		<p>So after all this time it was YOU! :)</p>
<p>Great post.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-499833">
				<div id="div-comment-499833" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Cody</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070504-00/?p=26983#comment-499833">
			May 4, 2007 at 4:36 pm</a>		</div>

		<p>You&#8217;re about to be Slashdotted.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-499853">
				<div id="div-comment-499853" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Doug Harrison</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070504-00/?p=26983#comment-499853">
			May 4, 2007 at 5:06 pm</a>		</div>

		<p>&gt;When the DLL got its DLL_PROCESS_DETACH, it shut down its worker thread by the common technique of setting a &#8220;clean up now&#8221; event that the worker thread listened for, and then waiting for the worker thread to respond with a &#8220;Okay, I&#8217;m all done&#8221; event.&lt;</p>
<p>Why didn&#8217;t you just wait on the thread handle? I think this would have avoided the hang. That said, I think this is more the duty of the main program, and I&#8217;d try to avoid doing this in DLL_PROCESS_DETACH. In general, the problem with an &#8220;all done&#8221; event is that the thread continues to run after setting it, so it isn&#8217;t really &#8220;all done&#8221;. This becomes more and more of a problem as the distance between the raw API and the abstraction you&#8217;re using increases, e.g. CreateThread vs. _beginthreadex vs. AfxBeginThread.</p>
<div class=post>[<i>You&#8217;ll have to ask the author of the buggy shell extension, but I suspect the answer would be &#8220;Because that guarantees a deadlock.&#8221; -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-499863">
				<div id="div-comment-499863" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Aaron</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070504-00/?p=26983#comment-499863">
			May 4, 2007 at 5:16 pm</a>		</div>

		<p>Like charless, I was a little confused as to how the process exit procedure got tripped up. &nbsp;(caveat: I&#8217;m not a windows developer) &nbsp;The procedure is listed as:</p>
<ol>
<li>releases the shell extension</li>
<li>
<p>un-initializes COM</p>
</li>
<li>
<p>calls ExitProcess</p>
</li>
</ol>
<p>From &quot;the first stage in process exit is the termination of all threads other than the one that called ExitProcess.&quot; I deduce that step 3 is reached, and the shell extension worker thread is NOT shut down at this point due to COM &quot;unloading&quot; because the extension did a double LoadLibrary. &nbsp;When step 3 proceeds, the worker thread is prematurely terminated (with respect to its own shutdown protocol) and therefore the extension hangs.</p>
<p>If that&#8217;s all correct, then it sounds like the hole here is just that proper shutdown should have been included in the behavior checking/testing.</p>
<p>I can see how that could be overlooked (especially if the problem you are trying to detect in code in the Real World is not during shutdown). &nbsp;Although I assume it would still be worthwhile to implement, because every once in a while somebody will want to log off, shut down explorer, whatever, and that&#8217;s when such bad behavior would bite them (although maybe not so clearer associable with explorer).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-499873">
				<div id="div-comment-499873" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://re:HowmylackofunderstandingofhowprocessesexitonWindowsXPforcedasecuritypatchtoberecalled' rel='external nofollow' class='url'>re: How my lack of understanding of how processes exit on Windows XP forced a security patch to be recalled</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070504-00/?p=26983#comment-499873">
			May 4, 2007 at 5:30 pm</a>		</div>

		<p>re: How my lack of understanding of how processes exit on Windows XP forced a security patch to be recalledre: How my lack of understanding of how processes exit on Windows XP forced a security patch to be recalledre: How my lack of understanding of how processes exit on Windows XP forced a security patch to be recalledre: How my lack of understanding of how processes exit on Windows XP forced a security patch to be recalled</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-499883">
				<div id="div-comment-499883" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Matt</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070504-00/?p=26983#comment-499883">
			May 4, 2007 at 5:36 pm</a>		</div>

		<p>Your executive summary for /. assumes they read the article before commenting. &nbsp;You&#8217;ve met them, right?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-499893">
				<div id="div-comment-499893" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">dlz</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070504-00/?p=26983#comment-499893">
			May 4, 2007 at 6:01 pm</a>		</div>

		<p>As a /. reader that actually reads the articles, I found summary great. &nbsp;Too bad probably no other /. readers will actually see it.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-499903">
				<div id="div-comment-499903" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.bsgprogrammers.com' rel='external nofollow' class='url'>Wyatt Best</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070504-00/?p=26983#comment-499903">
			May 4, 2007 at 6:03 pm</a>		</div>

		<p>The first wave is here! (me)</p>
<p>Very interesting. I am a beginning programmer, and just learned a ton about threads. But if I can see the explorer.exe process in taskmgr, why can&#8217;t I see verclsid.exe? (I have all the XP updates as of this morning.)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-499913">
				<div id="div-comment-499913" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Neal</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070504-00/?p=26983#comment-499913">
			May 4, 2007 at 6:13 pm</a>		</div>

		<p>Slashdotters should be sure to read not just this article, but the other articles on processes that Raymond wrote this week. &nbsp;</p>
<p>Once that&#8217;s done I&#8217;d also suggest they start at the beginning of Raymond&#8217;s blog postings and read all up through today&#8217;s. &nbsp;They&#8217;ll thank themselves for it later.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-499923">
				<div id="div-comment-499923" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Random Reader</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070504-00/?p=26983#comment-499923">
			May 4, 2007 at 6:24 pm</a>		</div>

		<p>verclsid.exe is a temporary process that starts when needed, then exits shortly afterward. &nbsp;You&#8217;ll only see it in taskmgr if you happen to be watching the instant explorer wants to load a new shell extension and asks verclsid to test it first.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-499933">
				<div id="div-comment-499933" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Do-do Brown</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070504-00/?p=26983#comment-499933">
			May 4, 2007 at 6:57 pm</a>		</div>

		<p>(Im a /.&#8217;er btw)</p>
<p>The buggy shell extension was included with a printer driver for a printer that is no longer manufactured. Good luck finding one of those in your test suite.</p>
<p>Now what were you saying about us?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-499943">
				<div id="div-comment-499943" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Slashdot Reader</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070504-00/?p=26983#comment-499943">
			May 4, 2007 at 6:58 pm</a>		</div>

		<p>[quote]Welcome Slashdot readers. Since you won&#8217;t read the existing comments before posting your own&#8230;[/quote]</p>
<p>Yeah, fuck you too.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-499953">
				<div id="div-comment-499953" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">onu</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070504-00/?p=26983#comment-499953">
			May 4, 2007 at 7:06 pm</a>		</div>

		<p>Slashdotter here. &nbsp;Teaching is the cornerstone of all open source virtues. &nbsp;This article turns an unfortunate mistake into a valuable lesson. &nbsp;You&#8217;re an asset to your company and everyone else in your profession. &nbsp;Just keep those thoughts with you when you dive into the murky depths of the slashdot thread for this article.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-499983">
				<div id="div-comment-499983" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Zimboptoo</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070504-00/?p=26983#comment-499983">
			May 4, 2007 at 7:18 pm</a>		</div>

		<p>I wonder how many more /.&#8217;ers are reading the comments because of your little summary?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-499993">
				<div id="div-comment-499993" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Anonymous Coward</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070504-00/?p=26983#comment-499993">
			May 4, 2007 at 7:38 pm</a>		</div>

		<p>It takes a lot of courage to own up to a mistake like that (even if it wasn&#8217;t actually your fault). Congratulations!</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-500003">
				<div id="div-comment-500003" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Nis</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070504-00/?p=26983#comment-500003">
			May 4, 2007 at 8:05 pm</a>		</div>

		<p>&quot;Since you won&#8217;t read the existing comments before posting your own, I&#8217;ll float some of the more significant ones here.&quot;</p>
<p>Not true in all cases; please don&#8217;t make generalities. &nbsp;./ users can make general statements about stability but that would serve any purpose.</p>
<p>Regards,</p>
<p>Nix</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-500013">
				<div id="div-comment-500013" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Sohail</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070504-00/?p=26983#comment-500013">
			May 4, 2007 at 8:19 pm</a>		</div>

		<p>So wouldn&#8217;t this pretty much always happen? Sounds like something that should be caught in testing?</p>
<div class="post">[<i>If you were clairvoyant enough to know which buggy shell extension to install to demonstrate the problem. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-500023">
				<div id="div-comment-500023" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://pyile.com/2007/05/security-recall/' rel='external nofollow' class='url'>Pyile : Blog Archive : Security recall</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070504-00/?p=26983#comment-500023">
			May 4, 2007 at 8:19 pm</a>		</div>

		<p>PingBack from <a rel="nofollow" target="_new" href="http://pyile.com/2007/05/security-recall/" rel="nofollow">http://pyile.com/2007/05/security-recall/</a></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-500033">
				<div id="div-comment-500033" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Doug Harrison</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070504-00/?p=26983#comment-500033">
			May 4, 2007 at 8:21 pm</a>		</div>

		<p>[You&#8217;ll have to ask the author of the buggy shell extension, but I suspect the answer would be &#8220;Because that guarantees a deadlock.&#8221; -Raymond]</p>
<p>That&#8217;s a good one. :)</p>
<p>P.S. I see now I misinterpreted your article the first time I read it. After reading about verclsid.exe &#8220;hosting the shell extension&#8221;, when I later read about &#8220;the DLL that hosted the shell extension&#8221;, I must have equated the two. I see now you&#8217;re using &#8220;hosting&#8221; in different ways, the former to more or less mean &#8220;loading&#8221; and the latter &#8220;implementing&#8221;. So what was the solution? I&#8217;d think it might be similar to what Adam suggested in his comment.</p>
<div class=post>[<i>Yeah, I admit that it was kind of confusing; I&#8217;ve tweaked it. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-500043">
				<div id="div-comment-500043" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://rhk.dataslab.com' rel='external nofollow' class='url'>rhk</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070504-00/?p=26983#comment-500043">
			May 4, 2007 at 8:32 pm</a>		</div>

		<p>So&#8230; you didn&#8217;t try simulating the defective behavior while testing your workaround? Then released it to the entire world, thinking &#8220;I guess that should work&#8221;?</p>
<p>Kudos for owning up, but I think your testing should be a bit more diligent, including testing for the actual error condition being guarded against. Unless I&#8217;m wrong, it should have been caught easily.</p>
<div class=post>[<i>Hanging in PROCESS_DETACH was not a defective behavior we were guarding against since no known shell extensions exhibited that failure mode. The issues we were addressing were crashes and hangs during CoCreateInstance. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-500063">
				<div id="div-comment-500063" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Paul</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070504-00/?p=26983#comment-500063">
			May 4, 2007 at 8:52 pm</a>		</div>

		<p>Please layout your page with the side text not displayed on top of the main text. It is hard to read your double text design.</p>
<div class=post>[<i>As I explain elsewhere on the site, I don&#8217;t control the blog software. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-500073">
				<div id="div-comment-500073" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ivan Rouzanov</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070504-00/?p=26983#comment-500073">
			May 4, 2007 at 9:05 pm</a>		</div>

		<p>Somehow I feel verclsid.exe was actually <em>my</em> fault. :)</p>
<p>There was another scenario for screw-up when another buggy 3rd-party Shell extension wanted to talk to Explorer from its DllMain which was waiting on verclsid.exe to finish thus creating a deadlock. Watchdog did not kill it because it was waiting on ntdll LoaderLock to get started.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-500083">
				<div id="div-comment-500083" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://rhk.dataslab.com' rel='external nofollow' class='url'>rhk</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070504-00/?p=26983#comment-500083">
			May 4, 2007 at 9:10 pm</a>		</div>

		<p>Ah, I see now. Perhaps you should make it more clear that you&#8217;re talking about TWO different buggy shell extensions. The one that you were working around, and the one that triggered the bug in the workaround.</p>
<p>Indeed, it is a tricky bug to predict.</p>
<div class="post">[<i>The purpose of the change was to address entire <u>classes</u> of buggy shell extensions, not any shell extension in particular. But the class of shell extensions that hang during <code>PROCESS_DETACH</code> was not one of the classes targeted. I didn&#8217;t go into detail on this topic since the goal was to discuss how processes exit; this article is part three of a series. The security angle was just a motivator, not the focus. Slashdot turned it into the focus. In retrospect, perhaps I should&#8217;ve used an unmotivated sample program. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-500093">
				<div id="div-comment-500093" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Silent Node</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070504-00/?p=26983#comment-500093">
			May 4, 2007 at 9:22 pm</a>		</div>

		<p>Facinating. Thanks for sharing.</p>
<p>( from::/. )</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-500113">
				<div id="div-comment-500113" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Sohail</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070504-00/?p=26983#comment-500113">
			May 4, 2007 at 11:16 pm</a>		</div>

		<p>[The purpose of the change was to address entire classes of buggy shell extensions, not any shell extension in particular. But the class of shell extensions that hang during PROCESS_DETACH was not one of the classes targeted. I didn&#8217;t go into detail on this topic since the goal was to discuss how processes exit; this article is part three of a series. The security angle was just a motivator, not the focus. Slashdot turned it into the focus. In retrospect, perhaps I should&#8217;ve used an unmotivated sample program. -Raymond]</p>
<p>Don&#8217;t do that Raymond. I appreciate these stories for what they are worth. To me, its a guy trying to get his job done with some oopsies along the way. I think only someone very immature would say &quot;oh look its your fault because you suck, oh and this is another reason why M$ suxx0rz!&quot;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-500133">
				<div id="div-comment-500133" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ben Scott</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070504-00/?p=26983#comment-500133">
			May 4, 2007 at 11:32 pm</a>		</div>

		<p>Just stumbled across this &nbsp;Don&#8217;t ever remember how. &nbsp;But I just wanted to say that I found this post of yours was interesting and informative, and that I&#8217;ve read many of your other posts and found the same. Even though I dislike some of Microsoft&#8217;s business practices and products, it sounds like you do a good job, and I for one appreciate that, too. &nbsp;Keep up the good work.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-500143">
				<div id="div-comment-500143" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">TK</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070504-00/?p=26983#comment-500143">
			May 4, 2007 at 11:35 pm</a>		</div>

		<p>&quot;is there any way to mark a COM object as &#8216;Under no circumstances use this as a shell extension&#8217;?&quot;</p>
<p>Sort of. There&#8217;s a registry value that can be set to prevent Internet Explorer add-ons from also being loaded by Windows Explorer. The name is &quot;NoExplorer&quot;, under a key for &quot;Browser Helper Objects&quot;. &nbsp;But then you&#8217;d probably want to do something else to make sure that the COM object doesn&#8217;t get loaded by IE.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-500153">
				<div id="div-comment-500153" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">young grasshopper</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070504-00/?p=26983#comment-500153">
			May 4, 2007 at 11:53 pm</a>		</div>

		<p>I bet no /.er&#8217;s would ever be able to steal the pebble from Master Chen&#8217;s palm!!!!</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-500163">
				<div id="div-comment-500163" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Andrew</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070504-00/?p=26983#comment-500163">
			May 5, 2007 at 12:14 am</a>		</div>

		<p>Good read Raymond. &nbsp;The complete set of test cases is approaching infinity (ok &#8211; exaggeration). &nbsp;Full regression testing can only really occur in the target environment which is why we Nazi IT admins lock things down and run UAT on a trial group before releasing to the larger user-base and why we fight to limit the number of applications, hardware types etc to the minimum that will support the business. So you can&#8217;t have the google toolbar on your PC? &nbsp;Well boo-hoo. Give me a business case&#8230; :-)</p>
<p>I don&#8217;t know of any way you could have avoided the release/recall event in this case. &nbsp;Props for the prompt fix and recognition of error.</p>
<p>From /. too &nbsp;:-)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-500173">
				<div id="div-comment-500173" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">DriverDude</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070504-00/?p=26983#comment-500173">
			May 5, 2007 at 1:07 am</a>		</div>

		<p>So if I read this right, Microsoft is having to workaround other people&#8217;s bugs&#8230; again? Talk about writing defensive code. (Remember <a rel="nofollow" target="_new" href="http://www.microsoft.com/technet/security/bulletin/ms06-020.mspx" rel="nofollow">http://www.microsoft.com/technet/security/bulletin/ms06-020.mspx</a>)</p>
<p>Kudos, Raymond, for owning up to this. I&#8217;m also impressed MS is allowing you to blog about this. Now if only I and everyone else will learn from these mistakes&#8230;</p>
<p>Hey, I wonder if anyone in that big printer company indirectly mentioned in a comment above is reading this.</p>
<p>I&#8217;m beginning to wonder if we should all be writing OFFENSIVE code. I don&#8217;t mean anything that violates a spec or intentionally causes errors, but rather always varying your responses so nobody gets lazy and starts assuming things. Kind of like how Perl randomizes hash ordering because some people disobey the &quot;don&#8217;t count on hash order&quot; warning.</p>
<p>Obviously Windows&#8217; process termination is a good example of something that changes and is unpredictible &#8211; but instead of being defensive and doing the &quot;right things&quot; (whatever they are) it seems most programmers just wing it.</p>
<p>Sigh.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-500233">
				<div id="div-comment-500233" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">CoderDude</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070504-00/?p=26983#comment-500233">
			May 5, 2007 at 2:17 am</a>		</div>

		<p>[I&#8217;m beginning to wonder if we should all be writing OFFENSIVE code. I don&#8217;t mean anything that violates a spec or intentionally causes errors, but rather always varying your responses so nobody gets lazy and starts assuming things.]</p>
<p>You mean stuff like locking down parts of the registry and filesystem unless the user types in an admin logon, or locking down the kernel so that no unauthorized drivers run inside it?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-500243">
				<div id="div-comment-500243" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Gustavo</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070504-00/?p=26983#comment-500243">
			May 5, 2007 at 2:47 am</a>		</div>

		<p>Someday, I hope to be the cause of a bug with this</p>
<p>level of impact.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-500253">
				<div id="div-comment-500253" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.kryogenix.org/' rel='external nofollow' class='url'>Stuart Langridge</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070504-00/?p=26983#comment-500253">
			May 5, 2007 at 3:22 am</a>		</div>

		<p>Ooh, bummer. One of those &quot;what? why&#8217;s it doing that?&quot; moments. Thanks for sharing it; avery pointed illustration of yesterday&#8217;s point!</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-500053">
				<div id="div-comment-500053" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">JB</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070504-00/?p=26983#comment-500053">
			May 4, 2007 at 8:46 pm</a>		</div>

		<p>I&#8217;m a long-time /. reader (and also holder of an exmsft.com email address that I never use) and I not only read TFA but also all the comments before posting, so there! ;-)</p>
<p>I agree/sympathize with the problem of finding drivers/other software that came with now-obsolete printer hardware, but would put forth the following observations and questions;</p>
<p>&#8211; Unless the actual printer was needed to cause the bug, in which case you&#8217;d need to scour ebay, computer junk dealers, etc, would just having the software be enough? Many manufacturers make available for download drivers and software versions going back a long way</p>
<p>&#8211; If the software is not available online, I&#8217;m sure most vendors would be willing to supply it to MSFT anyway. The problem here is the bureaucracies in between the developer at MSFT and the person at the vendor who could supply that obsolete software. I&#8217;m certain it could be obtained, but during my time at Microsoft, I would have had no idea who to ask to help me with such a request, even if I thought of loading up my test suite with obsolete software.</p>
<p>&#8211; Even if I know who to ask, that person might not have a contact at the vendor, so s/he might have to do some research/relationship building to get what I need.</p>
<p>Which, of course, would take a good bit of time, which would make people complain even more about the speed of patch releases. Not that those complaints are unjustified &#8211; Microsoft generally *is* slow to get patches out the door &#8211; but no one wants to make it worse. Thus, testing becomes a matter of covering as much as you realistically can and get it out the door. In the case of serious security holes with exploits in the wild, you probably do more damage by waiting to release something you&#8217;re certain is bug-free rather than releasing early with some you&#8217;re pretty confident is bug-free.</p>
<div class=post>[<i>Don&#8217;t forget MP3 players, video cards, digital cameras, webcams, wireless network cards, USB thumb drives, mice, keyboards&#8230; Now do some back-of-the-envelope calculations how long it would take to test every last one of them. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-500263">
				<div id="div-comment-500263" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">tcltk</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070504-00/?p=26983#comment-500263">
			May 5, 2007 at 5:41 am</a>		</div>

		<p>It bothers me, that the watchdog was in the same process together with the buggy code! Isn&#8217;t this a big no-no? Didn&#8217;t a code review uncover this?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-500273">
				<div id="div-comment-500273" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://chronos-tachyon.net/' rel='external nofollow' class='url'>Chronos</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070504-00/?p=26983#comment-500273">
			May 5, 2007 at 6:14 am</a>		</div>

		<p>Out of curiosity, I have two questions:</p>
<p>A. Is there any particular reason that the main thread wasn&#8217;t the watchdog thread, with the COM stuff being done by the worker thread? &nbsp;(It seems the more logical assignment of duties to me. &nbsp;Then again, I come from a Unix background, where &#8220;worker processes&#8221; are much more common than &#8220;worker threads&#8221; &#8212; a drastic change of mindset.)</p>
<p>B. Is there any particular reason that TerminateProcess wasn&#8217;t used instead of ExitProcess? &nbsp;(Although I&#8217;d understand if the thought just never crossed anyone&#8217;s mind.)</p>
<div class="post">[<i>Switching the roles wouldn&#8217;t have changed anything; the hang would still occur. (A thread&#8217;s a thread; there&#8217;s nothing special about the &#8220;main&#8221; thread aside from the fact that it happened to be created first.) -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-500343">
				<div id="div-comment-500343" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Christian</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070504-00/?p=26983#comment-500343">
			May 5, 2007 at 9:20 am</a>		</div>

		<p>Many thanks, Raymond that you explained what versclsid actually does.</p>
<p>I searched very hard back then when that &nbsp;fix was released to learn, what it exactly is and why it exactly was needed.</p>
<p>Too bad that Ms does not publish exploits for its own security holes ;-) (That would be the best way to understand and learn the actual problem)</p>
<p>This article was really interessting, but it would still be very nice to explain the last bit to me:</p>
<p>You wrote &quot;The object might crash or hang or even corrupt memory and keep running (sort of).&quot;</p>
<p>In what way would that be a security hole? How could an attacker create a file that ends with a dot and a bad CLSID? I mean it&#8217;s strange that explorer loads shell extensions like that, but I don&#8217;t see a real security hole here!</p>
<p>And versclsid.exe runs with the same rights as explorer, doesn&#8217;t it? So if loading a shell extensions that does not implement interfaces or IUnknown or whatever corretly, then why would versclsid.exe not expose that security hole when it loads the extension? Are we even talking about a real attack vector here? Or is it just Denial of Service against explorer.exe?</p>
<p>But then there would not have been a need to hurry to release that patch, would it?</p>
<p>Sorry for taking this slightly off-topic (because this is a series about process exit), but it would be great if someone could answer this!</p>
<p>Many thanks!</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-500353">
				<div id="div-comment-500353" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Peaker</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070504-00/?p=26983#comment-500353">
			May 5, 2007 at 10:08 am</a>		</div>

		<p>Threads are only to be used when:</p>
<p>A. Utilization of SMP multiprocessing is a significant performance benefit.</p>
<p>B. Old/crap API&#8217;s only support synchronous action.</p>
<p>I am not sure if B is the case here, but A definitely isn&#8217;t. If the case is B, then blame Microsoft for creating those crap API&#8217;s in the first place. &nbsp;If the case is A, blame Microsoft for incompetence in complicating situations with threads, instead of using processes or better: asynchronous programming.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-500363">
				<div id="div-comment-500363" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.dieblinkenlights.com' rel='external nofollow' class='url'>Ricardo B&#225;nffy</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070504-00/?p=26983#comment-500363">
			May 5, 2007 at 10:37 am</a>		</div>

		<p>I was wondering how you tested the mechanism against purposely broken shell extensions. Did you write broken shell extensions that mimicked known bad extension behaviour? How did you catalog broken extensions to use as examples?</p>
<div class="post">[<i>I wasn&#8217;t involved in that part. See the fifth paragraph. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-500373">
				<div id="div-comment-500373" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Bearxor</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070504-00/?p=26983#comment-500373">
			May 5, 2007 at 10:53 am</a>		</div>

		<p>Awesome article/insight. &nbsp;It&#8217;s facinating stuff.</p>
<p>Question though: Why not make the printer vendor fix their shell extension rather than changing the way Windows checks the shell extensions? &nbsp;Was it just in case another vendor messed up in the future or did the vendor refuse?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-500383">
				<div id="div-comment-500383" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Stu</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070504-00/?p=26983#comment-500383">
			May 5, 2007 at 10:58 am</a>		</div>

		<p>So is the solution just to let explorer do the watchdog?</p>
<p>Ie, explorer starts verclsid and waits a set time for a response. After a timeout it kills verclsid and assumes that the clsid being tested is bad.</p>
<p>Seems simple, and has the added bonus of preventing extensions from trashing the watchdog thread accidentally.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-500393">
				<div id="div-comment-500393" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.slashdot.org/' rel='external nofollow' class='url'>Slashdot Reader</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070504-00/?p=26983#comment-500393">
			May 5, 2007 at 11:07 am</a>		</div>

		<p>Your article confirms the low quality of windows code. Not just the implementation was flawed (this happens), but the design itself is stupid.</p>
<div class="post">[<i>See the previous day&#8217;s discussion of the so-called &#8220;design&#8221; of process exit. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-500413">
				<div id="div-comment-500413" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://chronos-tachyon.net/' rel='external nofollow' class='url'>Chronos</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070504-00/?p=26983#comment-500413">
			May 5, 2007 at 12:29 pm</a>		</div>

		<p>@Raymond, nevermind. &nbsp;I think when I posted that, I didn&#8217;t quite have the right order of events in my head. &nbsp;It still seems the more logical program layout to me, but you&#8217;re right that it shouldn&#8217;t change anything.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-500423">
				<div id="div-comment-500423" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Shivaree</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070504-00/?p=26983#comment-500423">
			May 5, 2007 at 1:33 pm</a>		</div>

		<p>Fascinating and well-written. You are exonerated by merit of your own mea culpa. (a /. reader who read all the comments, so :P)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-larryosterman odd alt thread-odd thread-alt depth-1" id="comment-500433">
				<div id="div-comment-500433" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Larry+Osterman+%5BMSFT%5D' rel='external nofollow' class='url'>Larry Osterman [MSFT]</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070504-00/?p=26983#comment-500433">
			May 5, 2007 at 1:40 pm</a>		</div>

		<p>Peaker: &nbsp;Unfortunately many of those stupid synchronous APIs come from clearly defective opearating systems like Unix. &nbsp;For example the open(), create(), read(), write() and close() all still appear to be synchronous, and all are directly from Unix.</p>
<p>&nbsp;Don&#8217;t blame Windows for having synchronous APIs, ALL operating systems have them, because they&#8217;re easier to deal with. In fact, at some level EVERY API is synchronous at some level, even the &quot;asynchronous&quot; ones.</p>
<p>Bearxor: I wasn&#8217;t involved in this, but my guess is that the vendor didn&#8217;t support the printer in question any more, and thus wasn&#8217;t interested in updating the shell extension. &nbsp;And even if they DID provide a fix, it doesn&#8217;t change all the other shell extensions that had the exact same defective implementation.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-500443">
				<div id="div-comment-500443" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Picky</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070504-00/?p=26983#comment-500443">
			May 5, 2007 at 1:50 pm</a>		</div>

		<p>Bearxor, I&#8217;d imagine it was because even if they fixed Shell Extension X, not everyone would upgrade and it is just a land mind waiting to pop up again when (as you suggested) someone else does the same thing.</p>
<p>Especially as a security concern, it had to be fixed and I&#8217;m impressed that Microsoft was able to fix it, break it (oops), and then fix it again, then talk about it.</p>
<p>Thanks Raymond for the insight.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-500463">
				<div id="div-comment-500463" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.iguanademos.com/Jare' rel='external nofollow' class='url'>Jare</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070504-00/?p=26983#comment-500463">
			May 5, 2007 at 2:43 pm</a>		</div>

		<p>Raymond, I too am interested in knowing why a watchdog thread was considered a good idea, since defective / insecure code would possibly thrash it.</p>
<p>Sort of the same as standing in the same room as a guy with a gun and asking if he&#8217;s a murderer.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-jamesnt even thread-even depth-1" id="comment-500483">
				<div id="div-comment-500483" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/JamesNT' rel='external nofollow' class='url'>JamesNT</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070504-00/?p=26983#comment-500483">
			May 5, 2007 at 4:10 pm</a>		</div>

		<p>I just went to slashdot and read some of the feed back. &nbsp;I can clearly see that Slashdot is still the cesspool of the Internet.</p>
<p>@LarryOsterman. &nbsp;I was beginning to wonder what was taking you so long to join the fray to Mr. Chen&#8217;s defense. &nbsp;Nice articles on volume in Windows, by the way. &nbsp;You and Mr. Chen are my gods.</p>
<p>JamesNT</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-500503">
				<div id="div-comment-500503" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">tcltk</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070504-00/?p=26983#comment-500503">
			May 5, 2007 at 7:12 pm</a>		</div>

		<p>LarryOsterman: Oh c&#8217;mon, unix was initially designed in 60/70s, calling it &quot;clearly defective&quot; in 2007 is a bit uncool IMO :). Especially because winnt is certainly not light years ahead, compared to modern unices. I love what Singularity people are doing though!</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-500473">
				<div id="div-comment-500473" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">A 'softie</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070504-00/?p=26983#comment-500473">
			May 5, 2007 at 3:51 pm</a>		</div>

		<p>Bearxor: You write &quot;Why not make the printer vendor fix their shell extension?&quot; &nbsp; Now you *want* Microsoft to throw our weight around and force people to do things?</p>
<p>More seriously, we have a hard time making people do things (driver verification) even when we have really really good reasons to want them to do them (like avoid blue screens.)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-500493">
				<div id="div-comment-500493" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">DriverDude</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070504-00/?p=26983#comment-500493">
			May 5, 2007 at 6:48 pm</a>		</div>

		<p>&quot;You mean stuff like locking down parts of the registry and filesystem unless the user types in an admin logon, or locking down the kernel so that no unauthorized drivers run inside it?&quot;</p>
<p>No, that is defensive &#8211; because vendors could not be bothered to make their software work properly, or work for non-admin users (among other reasons). Despite the fact that Win2000 software guidelines recommended it; UNIX software has done it right for decades; and Fast User Switching is five+ years old. (This is a pet peeve of mine; can you tell?)</p>
<p>&quot;Now you *want* Microsoft to throw our weight around and force people to do things?&quot;</p>
<p>Not really; that just makes people think MS is, well, a bully, even when it is THEIR bug to fix.</p>
<p>Go for full disclosure instead &#8211; instead of a &quot;hardware compatibility list&quot;, make a Hardware/Software INcompatibility List. Document all the problems. Inform the vendors&#8217; customers so their *customers* demand a fix.</p>
<p>After all, /. relishishes full-disclosure of Microsoft blunders. Microsoft does not have a monopoly on laziness or incompenence.</p>
<p>And just to be clear: I think it&#8217;s OK to make a mistake &#8211; once. What ticks me off is that the same bugs are made again and again (overflows, priv esclation, etc); tools are available but not used (driver qualification/testing); and business reasons are used to justify ignorance (&quot;those printers aren&#8217;t sold anymore, so why fix it&quot;)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-500513">
				<div id="div-comment-500513" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Tihiy</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070504-00/?p=26983#comment-500513">
			May 6, 2007 at 5:43 am</a>		</div>

		<p>So how it was fixed?</p>
<p>Except adding those buggy extensions to &quot;pre-approve&quot; list?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-500523">
				<div id="div-comment-500523" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Norman Diamond</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070504-00/?p=26983#comment-500523">
			May 6, 2007 at 6:19 am</a>		</div>

		<p>&gt; A few days of internal testing is not going</p>
<p>&gt; to come anywhere near 100% coverage of all</p>
<p>&gt; shell extensions on the planet.</p>
<p>I&#8217;ve read all the comments so far (60 of them) and still don&#8217;t understand why this reply answers charless&#8217;s question.</p>
<p>Of course there are gazillions of shell extensions that couldn&#8217;t be<br />
tested in advance, but the bug that forced a recall isn&#8217;t in one of<br />
those gazillions. &nbsp;The recall was forced by a bug in the<br />
verclsid.exe program, right? &nbsp;I still wonder why testing of the<br />
verclsid.exe program didn&#8217;t reveal the bug? &nbsp;As the article says:</p>
<p>&gt; The verclsid.exe program created a watchdog thread</p>
<p> &nbsp; &nbsp; and</p>
<p>&gt; the verclsid.exe program releases the shell</p>
<p>&gt; extension, un-initializes COM, and then calls</p>
<p>&gt; ExitProcess</p>
<p>So the verclsid.exe program killed its own watchdog thread, without needing &#8220;help&#8221; from any other bugs, right?</p>
<p>Saturday, May 05, 2007 1:33 PM by Shivaree </p>
<p>&gt; You are exonerated by merit of your own mea culpa</p>
<p>I think Mr. Chen is exonerated by releasing a fix for the bug. &nbsp;I hope this kind of practice will spread further.</p>
<p>Saturday, May 05, 2007 1:40 PM by LarryOsterman</p>
<p>&gt; Unfortunately many of those stupid</p>
<p>&gt; synchronous APIs come from clearly defective</p>
<p>&gt; opearating systems like Unix. &nbsp;For example</p>
<p>&gt; the open(), create(), read(), write() and</p>
<p>&gt; close() all still appear to be synchronous,</p>
<p>Agreed. &nbsp;Unix was deliberately designed to be less powerful<br />
than its predecessors (including one predecessor whose name it punned<br />
upon). &nbsp;Some real OSes had both synchronous and asynchronous I/O,<br />
serving different kinds of development needs. &nbsp;Of course they&#8217;re<br />
all gone now, sort of like Gresham&#8217;s law.</p>
<div class="post">[<i>The problem was caused by a bug in a third-party<br />
shell extension which did something unanticipated which verclsid did<br />
not protect against. You can&#8217;t protect against everything. It&#8217;s easier to protect against a specific bug in retrospect. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-500533">
				<div id="div-comment-500533" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">steveg</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070504-00/?p=26983#comment-500533">
			May 6, 2007 at 8:17 pm</a>		</div>

		<p>I&#8217;m confused about the reaction! It&#8217;s just a bug. (shrugs). It&#8217;s not a bad one. No one died, no rockets exploded at launch, no satellites crashed into Mars, no-one lost billions of dollars.</p>
<p>All software has bugs, regardless of the vendor. As usual a lot of comments seems to be coming from people who have little to no experience with software development.</p>
<p>I don&#8217;t know if you want to write more stories like this, but as a software developer I really enjoy these &quot;Bugs of Our Lives&quot;.</p>
<p>(my personal favourite mess-up was upgrading a system to a new version of an OS (Iris) and failing to spot the PID had changed from 16bit to 32bit. Ahh&#8230; that was fun. It cost a lot of $ when eventually the PID clocked over 2^16)).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-500543">
				<div id="div-comment-500543" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Amon Houndsbreath</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070504-00/?p=26983#comment-500543">
			May 6, 2007 at 10:48 pm</a>		</div>

		<p>&quot;I&#8217;m confused about the reaction! It&#8217;s just a bug.&quot;</p>
<p>No it&#8217;s not just a bug if you&#8217;re a Unix bigot. It&#8217;s an anecdote that shows that Windows is unmaintainable and impossible to understand.</p>
<p>Mind you looking at the comments on &nbsp;Slashdot crowd, particularly the +5 Insightful ones, I can quite believe that something as complex Windows would be impossible for them to understand or maintain. They&#8217;d get stuck in a endless cycle of refactoring to make the code easier to understand, only to find that much of the complexity is inherent in the problem.</p>
<p>So they&#8217;re right in a way, just in one which is less flattering to them than they think.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-500553">
				<div id="div-comment-500553" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Chris Becke</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070504-00/?p=26983#comment-500553">
			May 7, 2007 at 4:09 am</a>		</div>

		<p>Having installed a printer from the affected manufacturer all I can say is what the $*%@! 300Mb for a printer driver install. And its not even installed. I still get some kind of run-on-login setuplett running every time I restart.</p>
<p>Its a sad world in which the blame for such crappy software cant be laid directly on the perpetrators of such utter bloatware.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-500583">
				<div id="div-comment-500583" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">BryanK</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070504-00/?p=26983#comment-500583">
			May 7, 2007 at 8:26 am</a>		</div>

		<p>Regarding the mentioned synchronous APIs in Unix:</p>
<p>That&#8217;s why Unix also has select() / poll() / epoll() / whatever else. &nbsp;Yes, open() and close() (and probably create()) are still synchronous. &nbsp;But read() and write() (which are where you&#8217;ll be spending the vast majority of your time anyway: opening a file handle is pretty fast compared to writing to it) can be put into a select()-type loop. &nbsp;So no, the APIs aren&#8217;t asynchronous &#8212; but they won&#8217;t block, either. &nbsp;All the blocking will be in the call to select() or poll().</p>
<p>(OTOH, select() and poll() can&#8217;t take POSIX semaphores, or any of the other types of thread synchronization primitives. &nbsp;I am guessing that this is because threads are almost always the wrong answer, especially when process creation is as fast as it is on most UNIX-like OSes; &quot;most&quot; binaries are single-threaded.)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-500613">
				<div id="div-comment-500613" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Rick C</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070504-00/?p=26983#comment-500613">
			May 7, 2007 at 10:23 am</a>		</div>

		<p>tcltk, that was said for effect, since the poster to whom Larry was replying was making uncalled-for insults.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-500763">
				<div id="div-comment-500763" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">herd</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070504-00/?p=26983#comment-500763">
			May 7, 2007 at 12:35 pm</a>		</div>

		<p>btw, it is flak not flack ;)</p>
<p>(FLugzeug-Abwehr-Kanone)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-500573">
				<div id="div-comment-500573" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Michiel</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070504-00/?p=26983#comment-500573">
			May 7, 2007 at 7:49 am</a>		</div>

		<p>[It bothers me, that the watchdog was in the same process together with the buggy code! Isn&#8217;t this a big no-no? Didn&#8217;t a code review uncover this?]</p>
<p>Running in-process, well &#8211; that&#8217;s COM for you. The whole point of the verifier application was to check the buggy code in a separate victim process. The assumption was that a failure would be detected and reported by the verifier. Now, that *is* a bug. You don&#8217;t report failure, you report success. Had that been done, then this class of bugs wouldn&#8217;t have happened. </p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-500853">
				<div id="div-comment-500853" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Herman the german</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070504-00/?p=26983#comment-500853">
			May 7, 2007 at 6:36 pm</a>		</div>

		<p>flak is the abbreviation for Flieger-Abwehr-Kanone. Without any c.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-500863">
				<div id="div-comment-500863" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">tcltk</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070504-00/?p=26983#comment-500863">
			May 7, 2007 at 7:18 pm</a>		</div>

		<p>I think the real issue in the sync/async debate may be the programming language.</p>
<p>If the underlying API is sync, the language and runtime simply need to support light-weight threads (as in Erlang), so heavy-weight threads costs go away.</p>
<p>If the underlying API is async, the compiler could rewrite the sync code to the underlying async paradigm, so we get all the benefits of async API and simplicity of sync coding:</p>
<p>&lt;pre&gt;</p>
<p>using(f = open(&#8220;somefile&#8221;)) {</p>
<p>x = f.readall()</p>
<p>try {</p>
<p>&nbsp;f.write(somestuff)</p>
<p>} catch(E e) { handle write error&#8230; }</p>
<p>}</p>
<p>&lt;/pre&gt;</p>
<p>gets rewritten to something like:</p>
<p>&lt;pre&gt;</p>
<p>async_open(&#8220;somefile&#8221;,</p>
<p>lambda(h) {</p>
<p>&nbsp;h.readall(</p>
<p>&nbsp; lambda(x) {</p>
<p>&nbsp; &nbsp;h.write(somestuff,</p>
<p>&nbsp; &nbsp; exception_lambda&lt;E&gt;(e) {</p>
<p>&nbsp; &nbsp; &nbsp;handle write error&#8230;</p>
<p>&nbsp; &nbsp; } </p>
<p>&nbsp; }</p>
<p>&nbsp;)</p>
<p>&nbsp;h.close()</p>
<p>}</p>
<p>)</p>
<p>&lt;/pre&gt;</p>
<p>There is one problem with this solution &#8211; you can&#8217;t span multiple methods with this kind of rewriting transparently. One option is to use continuations, but they are quite costly to implement AFAIK. I believe the best option is to use futures and related synchronization primitives.</p>
<div class=post>[<i>Remember when we were talking about how processes exit? That was cool. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-500913">
				<div id="div-comment-500913" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://frater.wordpress.com/2007/05/08/microsoft-security-patch-recall-a-technical-look/' rel='external nofollow' class='url'>Microsoft Security Patch Recall - A technical look &laquo; Silicon Dreams</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070504-00/?p=26983#comment-500913">
			May 7, 2007 at 11:24 pm</a>		</div>

		<p>PingBack from <a rel="nofollow" target="_new" href="http://frater.wordpress.com/2007/05/08/microsoft-security-patch-recall-a-technical-look/" rel="nofollow">http://frater.wordpress.com/2007/05/08/microsoft-security-patch-recall-a-technical-look/</a></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-501043">
				<div id="div-comment-501043" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">peterchen</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070504-00/?p=26983#comment-501043">
			May 8, 2007 at 7:27 am</a>		</div>

		<p>great post, Raymond</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-503073">
				<div id="div-comment-503073" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.n-kahootz.com' rel='external nofollow' class='url'>shawn @ n kahootz software design</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070504-00/?p=26983#comment-503073">
			May 10, 2007 at 6:50 pm</a>		</div>

		<p>Great article! &nbsp;The description of the error that you had made was very clear. &nbsp;</p>
<p>Great job on &#8216;fessing up&#8217; &#8212; resposibility is something we desperately need in this industry.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-505783">
				<div id="div-comment-505783" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Dwain</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070504-00/?p=26983#comment-505783">
			May 18, 2007 at 1:59 am</a>		</div>

		<p>I&#8217;ve made many mistakes in the past (including wiping out a live database). &nbsp;Some I&#8217;ve fess up to&#8230;and some well&#8230; but I MUST commend you for your efforts in coming straight. I think we all have a lesson to learn &nbsp;from you about honesty.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-702823">
				<div id="div-comment-702823" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.microspotting.com/2009/01/raymond-chen' rel='external nofollow' class='url'>Microspotting | Raymond Chen, Microsoft&#8217;s Chuck Norris</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070504-00/?p=26983#comment-702823">
			January 20, 2009 at 6:57 pm</a>		</div>

		<p>PingBack from <a rel="nofollow" target="_new" href="http://www.microspotting.com/2009/01/raymond-chen" rel="nofollow">http://www.microspotting.com/2009/01/raymond-chen</a></p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

