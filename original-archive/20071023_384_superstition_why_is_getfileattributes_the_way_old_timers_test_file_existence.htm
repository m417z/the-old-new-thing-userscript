<html>
<head>
<title>Superstition: Why is GetFileAttributes the way old-timers test file existence?</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>Superstition: Why is GetFileAttributes the way old-timers test file existence?</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>October 23, 2007 / year-entry #385</td></tr>
<tr><td><b>Tags:</b></td><td>history</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20071023-00/?p=24713</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>45</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">If you ask an old-timer how to test for file existence, they'll say, "Use GetFileAttributes." This is still probably the quickest way to test for file existence, since it requires only a single call. Other methods such as FindFirstFile or CreateFile require a separate FindClose or CloseHandle call, which triggers another network round-trip, which adds...</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>If you ask an old-timer how to test for file existence, they'll say, "Use <code>GetFileAttributes</code>." This is still probably the quickest way to test for file existence, since it requires only a single call. Other methods such as <code>FindFirstFile</code> or <code>CreateFile</code> require a separate <code>FindClose</code> or <code>CloseHandle</code> call, which triggers another network round-trip, which adds to the cost.</p>
<p> But back in the old days, the preference for <code>GetFileAttributes</code> wasn't just a performance tweak. If you tried to open the file to see if it existed, you could get the wrong answer! </p>
<p> Some network providers had a feature called a "data path". You can add directories to the data path, and if any attempt to open a file failed, the network provider would try again in all the directories in the data path. For example, suppose your data path was <code>\\server1\backups\dir1;\\server1\backups\dir2</code> and you tried to open the file <code>File.txt</code>. If the file <code>File.txt</code> could not be found in the current directory, the network provider would try again, looking for <code>\\server1\backups\dir1\File.txt</code>, and if it couldn't find that file, it would try again with <code>\\server1\backups\dir2\File.txt</code>. </p>
<p> All this extra path searching happened behind Windows's back. Windows had no idea it was happening. All it knew is that it issued an open call, and the open succeeded. </p>
<p> As a result, if you used the "open a file to see if it exists" algorithm, you would get the wrong result for any file that existed on the data path but not in the current directory. These network providers didn't search the data path in response to <code>GetFileAttributes</code>, however, so a call to <code>GetFileAttributes</code> would fail if the file didn't exist in the current directory, regardless of whether it existed on the data path. </p>
<p> I don't know if any network providers still implement this data path feature, but Windows code in general sticks to <code>GetFileAttributes</code>, because it's better to be safe than sorry. </p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (45)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-562033">
				<div id="div-comment-562033" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">andy</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071023-00/?p=24713#comment-562033">
			October 23, 2007 at 10:09 am</a>		</div>

		<p>In general this behavior seems to be confusing: you save a file to somewhere in the &#8220;data path&#8221;. Later you try to access it, but Windows returns &#8220;file not found&#8221; instead.</p>
<p>So, I&#8217;m wondering if some context, or more background, is missing here? But there is a good chance that I&#8217;m just stupid too :)</p>
<div class="post">[<i>Not sure which behavior &#8220;this behavior&#8221; is. If you save a file to c:dirfile.txt and try to access it as c:dirfile.txt, it will succeed. What&#8217;s so confusing about that? -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-562043">
				<div id="div-comment-562043" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Tim Smith</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071023-00/?p=24713#comment-562043">
			October 23, 2007 at 10:18 am</a>		</div>

		<p>Wow&#8230; &nbsp;I&#8217;ve been using that trick for years for the wrong reason. &nbsp;:)</p>
<p>It is still a cute performance tweak.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-562053">
				<div id="div-comment-562053" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Dave</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071023-00/?p=24713#comment-562053">
			October 23, 2007 at 10:22 am</a>		</div>

		<p>The &quot;data path&quot; adds uncertainty to a file&#8217;s real location, similar to the way Vista&#8217;s &quot;folder virtualization&quot; does. :-) There isn&#8217;t an easy way out of the &quot;writing to Program Files&quot; mess.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-562063">
				<div id="div-comment-562063" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://bugfox.net/blog' rel='external nofollow' class='url'>Jonathan Tappan</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071023-00/?p=24713#comment-562063">
			October 23, 2007 at 10:28 am</a>		</div>

		<p>That sounds more like a &quot;best practice&quot; than a &quot;superstition.&quot;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-562073">
				<div id="div-comment-562073" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">manyirons</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071023-00/?p=24713#comment-562073">
			October 23, 2007 at 10:29 am</a>		</div>

		<p>I must be really old, because I always used access() to determine file existence. &nbsp;Now I have to add a stupid leading underscore which makes it look spiky, but it still seems to work.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-562083">
				<div id="div-comment-562083" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Tim Smith</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071023-00/?p=24713#comment-562083">
			October 23, 2007 at 10:35 am</a>		</div>

		<p>_access uses GetFileAttributes. :)</p>
<p>Many old fart Windows programmers avoid using the CRTL for things that can easily be done in Win16/32 to avoid the extra code.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-562093">
				<div id="div-comment-562093" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">me</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071023-00/?p=24713#comment-562093">
			October 23, 2007 at 10:48 am</a>		</div>

		<p>As long as you don&#8217;t use access/GetFileAttributes to check for file existance before opening the file (yes, I&#8217;ve seen crap like this).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-562103">
				<div id="div-comment-562103" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Illuminator</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071023-00/?p=24713#comment-562103">
			October 23, 2007 at 10:49 am</a>		</div>

		<p>I&#8217;m only 27, does using GetFileAttributes still make me an old fart?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-562113">
				<div id="div-comment-562113" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Bill Arnette</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071023-00/?p=24713#comment-562113">
			October 23, 2007 at 10:53 am</a>		</div>

		<p>Hmmm&#8230;what are we who use PathFileExists()</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-562123">
				<div id="div-comment-562123" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.csc.calpoly.edu/~bfriesen/' rel='external nofollow' class='url'>Brian Friesen</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071023-00/?p=24713#comment-562123">
			October 23, 2007 at 11:07 am</a>		</div>

		<p>Wow, this &quot;data path&quot; stuff sounds scary. &nbsp;I sure hope it&#8217;s a thing of the past.</p>
<p>Thanks for sharing this interesting piece of history Raymond.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-562133">
				<div id="div-comment-562133" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.differentpla.net/' rel='external nofollow' class='url'>roger@differentpla.net</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071023-00/?p=24713#comment-562133">
			October 23, 2007 at 11:14 am</a>		</div>

		<p>Wow, Windows 2003 still has APPEND.EXE in it, which has been doing exactly this since DOS 2 (probably).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-562143">
				<div id="div-comment-562143" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">rick</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071023-00/?p=24713#comment-562143">
			October 23, 2007 at 11:28 am</a>		</div>

		<p>We used to use GetFileAttributes and switched to CreateFile, cause GetFileAttributes lies.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-562153">
				<div id="div-comment-562153" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Arno</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071023-00/?p=24713#comment-562153">
			October 23, 2007 at 11:31 am</a>		</div>

		<blockquote><p>
  We used to use GetFileAttributes and switched &gt; to CreateFile, cause GetFileAttributes lies.
</p></blockquote>
<p>I am curious: when does it lie?</p>
<p>Arno</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-562163">
				<div id="div-comment-562163" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">waleri</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071023-00/?p=24713#comment-562163">
			October 23, 2007 at 11:46 am</a>		</div>

		<blockquote><p>
  &gt;&gt; We used to use GetFileAttributes and switched to CreateFile
</p></blockquote>
<p>And how about permissions?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-562173">
				<div id="div-comment-562173" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://apipes.blogspot.com' rel='external nofollow' class='url'>Tim Lesher</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071023-00/?p=24713#comment-562173">
			October 23, 2007 at 12:01 pm</a>		</div>

		<blockquote><p>
  &gt;&gt; That sounds more like a &quot;best practice&quot; than a &quot;superstition.&quot;
</p></blockquote>
<p>What&#8217;s the difference between a &quot;best practice&quot; and a superstition?</p>
<p>My definition: if you can remember the reason you do it, and you&#8217;ve validated that the reason is still valid, then it&#8217;s a &quot;best practice.&quot;</p>
<p>Otherwise, it&#8217;s superstition, with varying degrees of probable truthiness.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-562183">
				<div id="div-comment-562183" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">poochner</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071023-00/?p=24713#comment-562183">
			October 23, 2007 at 12:08 pm</a>		</div>

		<p>The data path concept is analogous to the execution path in %PATH%, with the exception that it was/is specific to a given network provider and worked for any kind of file open. &nbsp;And confused people no end, slowed things down, and caused more trouble than it was worth.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-562203">
				<div id="div-comment-562203" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.meauxsoft.com/21701/27801.html' rel='external nofollow' class='url'>jared</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071023-00/?p=24713#comment-562203">
			October 23, 2007 at 12:40 pm</a>		</div>

		<p>Rick,</p>
<p>I also am curious: when does GetFileAttributes lie? &nbsp;Do you mean that you want to check if the file is accessible? &nbsp;Because in this case, I could see using CreateFile so you would have the handle. &nbsp;</p>
<p>Typically, I don&#8217;t care if I have access&#8230; instead I just want to see if the file exists so I call GetFileAttributes</p>
<p>jared</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-562213">
				<div id="div-comment-562213" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Zirak</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071023-00/?p=24713#comment-562213">
			October 23, 2007 at 12:53 pm</a>		</div>

		<p>Isn&#8217;t using GetFileAttributes to check for file existence almost always a race condition?</p>
<p>You rarely want to know does_file_exist_right_now. &nbsp;Almost always, you want to know open_file_if_it_doesnt_exist or open_file_if_it_exists.</p>
<p>Does someone have an example of GetFileAttributes usage to check for file existence, that doesn&#8217;t lead to a race condition?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-562223">
				<div id="div-comment-562223" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Jim</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071023-00/?p=24713#comment-562223">
			October 23, 2007 at 12:59 pm</a>		</div>

		<p>I remember those data paths (roughly analogous to DOS&#8217;s PATH environment variable). I can remember they made it merry hell trying to fix problems related to file versions/missing files etc.</p>
<p>Also thinking back it seems as though there&#8217;d be quite a potential for things like escalation of privilege/trojan horse type attacks if your admin isn&#8217;t very careful about setting the folder permissions to all those places on the data path? Perhaps one reason why you don&#8217;t hear of them anymore.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-562233">
				<div id="div-comment-562233" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://cs.usu.edu.ru/home/skrobov/' rel='external nofollow' class='url'>A. Skrobov</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071023-00/?p=24713#comment-562233">
			October 23, 2007 at 1:09 pm</a>		</div>

		<p>Zirak: for UI, e.g. to disable buttons that would result in a &quot;File not found&quot; message otherwise.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-562243">
				<div id="div-comment-562243" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Zirak</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071023-00/?p=24713#comment-562243">
			October 23, 2007 at 1:18 pm</a>		</div>

		<p>A. Skrobov,</p>
<blockquote><p>
  Zirak: for UI, e.g. to disable buttons that would result in a &quot;File not found&quot; message otherwise.
</p></blockquote>
<p>But those buttons must do something, presumably with the contents of the file. &nbsp;Rarely would UI care if the file exists at that specific point in time. &nbsp;So shouldn&#8217;t the program just CreateFile instead? &nbsp;GetFileAttributes is another API that returns an answer that is immediately out of date.</p>
<p>You should be happy, Raymond, I learned this line of thinking from reading this blog!</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-562253">
				<div id="div-comment-562253" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">ender</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071023-00/?p=24713#comment-562253">
			October 23, 2007 at 2:14 pm</a>		</div>

		<blockquote><p>
  Wow, Windows 2003 still has APPEND.EXE in it, which has been doing exactly this since DOS 2 (probably).
</p></blockquote>
<p>Heh, I just noticed it&#8217;s there in Windows XP x64 &#8211; as a DOS executable (which doesn&#8217;t work in x64; there&#8217;s also sysedit.exe, which is a 16bit NE executable). Remnants of the past?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-562283">
				<div id="div-comment-562283" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://nevali.net' rel='external nofollow' class='url'>Mo</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071023-00/?p=24713#comment-562283">
			October 23, 2007 at 4:31 pm</a>		</div>

		<p>APPEND.EXE will still exist for compatibility. It&#8217;ll more than likely do nothing for Win32 applications, but other DOS apps (possibly only others in the same VDM? I&#8217;d have to test to find out) would presumably be affected by it.</p>
<p>I do remember confusing Win95 with the help of SUBST (one of the most useful utilities ever, back in the day) a long time ago. I can&#8217;t remember how NTOS-based systems behave (I&#8217;m guessing the same as I outlined with APPEND)…</p>
<p>Or does the VDM do something sneaky and clever?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-562293">
				<div id="div-comment-562293" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">andy</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071023-00/?p=24713#comment-562293">
			October 23, 2007 at 5:33 pm</a>		</div>

		<p>With regards to my comment at the top:</p>
<p>&quot;this behavior&quot; was to be understood as a user saving a file somewhere and when later trying to access it received a &quot;file not found&quot; error, because GetFileAttributes doesn&#8217;t find it.</p>
<p>But, good chance that I have misunderstood how the &quot;data path&quot; feature works. I was thinking more in the lines of symbolic links. After reading your reply, and the other comments, I see that I should&#8217;ve thought about the call sequence a little instead.</p>
<p>Thanks!</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-562193">
				<div id="div-comment-562193" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">BryanK</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071023-00/?p=24713#comment-562193">
			October 23, 2007 at 12:37 pm</a>		</div>

		<p>I *assume* that the data path didn&#8217;t come into play if you specified a full path to the file, though, right? &nbsp;Because I can&#8217;t see any possible way to concatenate an element in the data path with either &quot;\testserversharefile1.txt&quot; or &quot;c:whateverfile1.txt&quot; that would make any sense at all.</p>
<p>In both cases, you&#8217;d end up getting a file handle from a completely different machine than the one you&#8217;re expecting&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-dean-harding odd alt thread-odd thread-alt depth-1" id="comment-562313">
				<div id="div-comment-562313" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Dean+Harding' rel='external nofollow' class='url'>Dean Harding</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071023-00/?p=24713#comment-562313">
			October 23, 2007 at 7:49 pm</a>		</div>

		<p>Mo: SUBST.EXE works as expected. You even get a new drive letter in your &quot;My Computer&quot; folder!</p>
<p>I don&#8217;t know how APPEND.EXE works&#8230; it doesn&#8217;t seem to exist in Vista (x64 at least)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-562333">
				<div id="div-comment-562333" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Dan</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071023-00/?p=24713#comment-562333">
			October 23, 2007 at 11:45 pm</a>		</div>

		<p>This sounds just like the behavior of Windows and DOS with regards to the PATH environment variable&#8230; except PATH only applies to commands, not all files.</p>
<p>From my complete lack of knowing anything about APPEND until now and my razor-sharp &quot;programname /?&quot; skills, APPEND looks closer in functionality to this behavior&#8230; although it is DOS only, as evidenced by lack of long file name support (run it from a long file name directory and you see Windows dump you into the equivalent short file name directory) and subsequent analysis:</p>
<p>C:WINDOWSsystem32&gt;trid append.exe</p>
<p>TrID/32 &#8211; File Identifier v2.02 &#8211; (C) 2003-06 By M.Pontello</p>
<p>Definitions found: &nbsp;2637</p>
<p>Analyzing&#8230;</p>
<p>Collecting data from file: append.exe</p>
<p>47.7% (.EXE) Generic Win/DOS Executable (2002/3)</p>
<p>47.7% (.EXE) DOS Executable Generic (2000/1)</p>
<p>&nbsp;3.5% (.TAR) TAR archive (149/5)</p>
<p>&nbsp;0.9% (.CPT) Corel Photo Paint (41/41)</p>
<p>After this I was hoping it was also a secret TAR archive, but it wasn&#8217;t. :(</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-562363">
				<div id="div-comment-562363" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Worf</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071023-00/?p=24713#comment-562363">
			October 24, 2007 at 1:36 am</a>		</div>

		<p>I&#8217;m certain those executables were rewritten to use the right Win32 calls to simulate old DOS behavior. I.e., they really affect the Win32 environment. (SUBST does this via some mapping call in Win32 or other&#8230;)</p>
<p>After all. many old DOS users used those commands for various tricks, and part of compatibility is user muscle compatibility.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-562373">
				<div id="div-comment-562373" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">KeithMo</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071023-00/?p=24713#comment-562373">
			October 24, 2007 at 3:41 am</a>		</div>

		<p>(Slightly OT, but&#8230;)</p>
<p>GetFileAttributes() is very fast &#8212; there&#8217;s a well-greased fast path between the I/O subsystem and the file system. This fast path allows IO to query the attributes without the overhead of creating a file object, creating a file handle, etc.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-562383">
				<div id="div-comment-562383" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://bastilia.ru' rel='external nofollow' class='url'>Leo Tsarev</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071023-00/?p=24713#comment-562383">
			October 24, 2007 at 4:32 am</a>		</div>

		<p>Also we have another reason to use GetFileAttributes(..) — it faster. CreateFile(..) may involve pre-caching of file. Even if FS driver doesn&#8217;t pre-read file, it may decide to read FAT or B-extent. GetFileAttributes(..) require only a read from directory/МFT/i-node.</p>
<p>I have a question: why we don&#8217;t have IsFileExists(..)? API will become clearer and more in point. Question &quot;what should i use to check if-file-exists&quot; will have only one answer. .Net have File.Exists(..) for example.</p>
<p>Also reading file attribs may require in NTFS additional disk seek. IsFileExists must check only directory, and reading file attribs — MFT too</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-562393">
				<div id="div-comment-562393" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">SUBST</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071023-00/?p=24713#comment-562393">
			October 24, 2007 at 4:36 am</a>		</div>

		<blockquote><p>
  &gt; SUBST (one of the most useful utilities ever, back in the day)
</p></blockquote>
<p>Is/Would be useful still today.</p>
<p>Sadly it interacts badly with USB removable drives (win assigns the same letter for some unknown reason).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-562413">
				<div id="div-comment-562413" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">bob</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071023-00/?p=24713#comment-562413">
			October 24, 2007 at 5:13 am</a>		</div>

		<p>@Dan:</p>
<p>By looking APPEND.EXE binary I draw two conclusions: a) it’s an MS-DOS 5.0 executable and b) it is entirely coded in assembly language natively (by hand) and not with the use of a C or other high-level language compiler (wrong?)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-562423">
				<div id="div-comment-562423" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">error doesn't compute</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071023-00/?p=24713#comment-562423">
			October 24, 2007 at 5:46 am</a>		</div>

		<p>The file could be gone before GetFileAttributes returns. To base any conclusions on a previous file existence is fundamentally wrong thing to do.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-dean-harding odd alt thread-odd thread-alt depth-1" id="comment-562433">
				<div id="div-comment-562433" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Dean+Harding' rel='external nofollow' class='url'>Dean Harding</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071023-00/?p=24713#comment-562433">
			October 24, 2007 at 6:01 am</a>		</div>

		<p>error doesn&#8217;t compute: Like anything to do with race conditions like this, the reason for doing it is usually as a courtesy to the user. For example, the &quot;File Open&quot; common dialog has an option to check whether the file exists before returning. In this case, using GetFileAttributes makes sense (because it&#8217;s so unlikely that a file will dissappear from the user&#8217;s My Documents folder at that point).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-562443">
				<div id="div-comment-562443" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Neil</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071023-00/?p=24713#comment-562443">
			October 24, 2007 at 7:07 am</a>		</div>

		<blockquote><p>
  &gt; SUBST (one of the most useful utilities ever, back in the day)</p>
<p>  Is/Would be useful still today.</p>
<p>  Sadly it interacts badly with USB removable drives (win assigns the same letter for some unknown reason).
</p></blockquote>
<p>I think it was possibly covered in an earlier blog post. The same issue happens with network drives. Something to do with subst and network drives being a per-user setting and so invisible to the drive letter allocator. That&#8217;s why XP maps network drives working down from Z: so that it&#8217;s less likely to conflict with removable drives working up from D:.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-562453">
				<div id="div-comment-562453" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Chris J</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071023-00/?p=24713#comment-562453">
			October 24, 2007 at 7:24 am</a>		</div>

		<p>Being a slightly older fart(?) I&#8217;ve always used _fstat() to test for existance, mostly as that&#8217;s you&#8217;d check in a UNIX env where I started. There&#8217;s nothing in the MSDN page for _fstat and its ilk that says whether GetFileAttributes() should be used, or indeed whether they are identical. Are there caveats with using _fstat() (and any other CRT call) over the native Win32 equivalent?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-562473">
				<div id="div-comment-562473" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Name required</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071023-00/?p=24713#comment-562473">
			October 24, 2007 at 10:22 am</a>		</div>

		<p>I&#8217;m still confused as to why I would want to call a function called CreateFile when I actually want to open an existing file.</p>
<div class="post">[<i><a href="http://search.live.com/results.aspx?q=site:blogs.msdn.com/oldnewthing+createfile+name" rel="nofollow">I already answered this question</a>. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-xepol odd alt thread-odd thread-alt depth-1" id="comment-562533">
				<div id="div-comment-562533" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Xepol' rel='external nofollow' class='url'>Xepol</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071023-00/?p=24713#comment-562533">
			October 25, 2007 at 3:39 am</a>		</div>

		<p>Actually, the worst does file exist routine I have seen is in Virtual Server 2005.</p>
<p>To check if the save state file exists, it tries to create a folder of the same name. &nbsp;Problem is that they don&#8217;t remove the folder if it gets created, and then, luck you, it can&#8217;t create the save state file and the virtual machine doesn&#8217;t start up.</p>
<p>And unbelievably, the people who wrote that code WORK for Microsoft.</p>
<div class="post">[<i>Norman, is that you? I don&#8217;t know what&#8217;s so unbelievable about that. People make mistakes. <a href="http://blogs.msdn.com/oldnewthing/archive/2006/07/13/664448.aspx" rel="nofollow">Microsoft employees are people</a>. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-562553">
				<div id="div-comment-562553" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">ulric</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071023-00/?p=24713#comment-562553">
			October 25, 2007 at 2:54 pm</a>		</div>

		<blockquote><p>
  There&#8217;s nothing in the MSDN page for _fstat</p>
<p>  and its ilk that says whether</p>
<p>  GetFileAttributes() should be used, or</p>
<p>  indeed whether they are identical.
</p></blockquote>
<p>Hey, the source code of the C Run Time is all &nbsp;included in VC++, so you can check there! &nbsp;No need to ask.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-562673">
				<div id="div-comment-562673" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">KJK::Hyperion</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071023-00/?p=24713#comment-562673">
			October 25, 2007 at 10:03 pm</a>		</div>

		<p>Leo: CreateFile isn&#8217;t inherently faster from the point of view of the filesystem. If you only ask for FILE_READ_ATTRIBUTES access (instead of the GENERIC_READ catch-all), it should be about the same.</p>
<p>The reason GetFileAttributes is much faster is that it performs open/read attributes/close in a single call to kernel mode, plus it short-circuits some internal steps (for example, the file object used in the whole operation isn&#8217;t a real file object that you could have a handle to, just a structure that resembles one closely enough)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-562713">
				<div id="div-comment-562713" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.levicki.net/' rel='external nofollow' class='url'>Igor</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071023-00/?p=24713#comment-562713">
			October 26, 2007 at 1:03 am</a>		</div>

		<p>Q: Why is GetFileAttributes the way old-timers test file existence?</p>
<p>A: Because DoesFileExists() doesn&#8217;t exist.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-xepol odd alt thread-odd thread-alt depth-1" id="comment-562723">
				<div id="div-comment-562723" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Xepol' rel='external nofollow' class='url'>Xepol</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071023-00/?p=24713#comment-562723">
			October 26, 2007 at 1:10 am</a>		</div>

		<p>No, I&#8217;m not Norman. &nbsp;</p>
<p>It&#8217;s hard to believe because :</p>
<p>a) The code is relatively new, so valid techniques for file exists are already well known.</p>
<p>b) The method is SO destructive, it makes you wonder how it got missed.</p>
<p>c) MS employees might be people, but they work for with the people who wrote the OS. &nbsp;I would assume that not only are they floating in code examples, but they have a reasonable chance of asking someone who knows what they are doing how to accomplish something correctly.</p>
<p>d) MS develops in teams, so basically this code was missed by EVERYONE who reviewed it, as a team failure. &nbsp;</p>
<p>So ya, MS employees are people too, people with more resources and expertise available to them than your average programmer and as such, the bar is set just a little bit higher than the rest of us.</p>
<p>That said, even if the bar was set exactly level, code this bad in a production version is still surprising considering the beta cycle and team development setting.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-562783">
				<div id="div-comment-562783" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blogs.msdn.com/michkap/archive/2007/10/26/5677426.aspx' rel='external nofollow' class='url'>Sorting It All Out</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071023-00/?p=24713#comment-562783">
			October 26, 2007 at 11:12 am</a>		</div>

		<p>I was reading Raymond&#8217;s Superstition: Why is GetFileAttributes the way old-timers test file existence?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-562933">
				<div id="div-comment-562933" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">GregM</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071023-00/?p=24713#comment-562933">
			October 27, 2007 at 12:34 am</a>		</div>

		<p>Q: Why is GetFileAttributes the way old-timers test file existence?</p>
<p>A: Because DoesFileExists() doesn&#8217;t exist.</p>
<p>That may have been true then, and is technically true now only because the function is called PathFileExists().</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-563113">
				<div id="div-comment-563113" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">strict</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071023-00/?p=24713#comment-563113">
			October 29, 2007 at 11:51 am</a>		</div>

		<p>This blog post doesn&#8217;t clarify if GetFileAttributes() is endorsed by microsoft to test for file existence.</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

