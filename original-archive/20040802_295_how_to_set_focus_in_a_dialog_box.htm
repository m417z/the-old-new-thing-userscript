<html>
<head>
<title>How to set focus in a dialog box</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>How to set focus in a dialog box</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>August 2, 2004 / year-entry #296</td></tr>
<tr><td><b>Tags:</b></td><td>code</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20040802-00/?p=38283</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>22</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">Setting focus in a dialog box is more than just calling SetFocus. A dialog box maintains the concept of a "default button" (which is always a pushbutton). The default button is typically drawn with a distinctive look (a heavy outline or a different color) and indicates what action the dialog box will take when you...</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>
Setting focus in a dialog box is more than just calling
<a HREF="http://msdn.microsoft.com/library/en-us/winui/winui/windowsuserinterface/userinput/keyboardinput/keyboardinputreference/keyboardinputfunctions/setfocus.asp">
SetFocus</a>.
</p>
<p>A dialog box maintains the concept of a "default button"
(which is always a pushbutton).
The default button is typically drawn with a distinctive look
(a heavy outline or a different color) and indicates what action
the dialog box will take when you hit Enter.
Note that this is <strong>not</strong> the same as the control
that has the focus.
</p>
<p>
For example, open the Run dialog from the Start menu.
Observe that the OK button is the default button;
it has a different look from the other buttons.
But focus is on the edit control.
Your typing goes to the edit control, until you hit Enter; the
Enter activates the default button, which is OK.
</p>
<p>
As you tab through the dialog, observe what happens to the default
button.  When the dialog box moves focus
to a pushbutton, that pushbutton becomes
the new default button.
But when the dialog box moves focus
to something that isn't a pushbutton at all,
the OK button resumes its position as the default button.
</p>
<p>
The dialog manager remebers which control was the default button
when the dialog was initially created, and when it moves focus
to something that isn't a button, it restores that original button
as the default button.
</p>
<p>
You can ask a dialog box what the default button is by sending
it
<a HREF="http://msdn.microsoft.com/library/en-us/winui/WinUI/WindowsUserInterface/Windowing/DialogBoxes/DialogBoxReference/DialogBoxMessages/DM_GETDEFID.asp">
the DM_GETDEFID message</a>;
similarly, you can change it with
<a HREF="http://msdn.microsoft.com/library/en-us/winui/WinUI/WindowsUserInterface/Windowing/DialogBoxes/DialogBoxReference/DialogBoxMessages/DM_SETDEFID.asp">
the DM_SETDEFID message</a>.
</p>
<p>
(Notice that the return value of the DM_GETDEFID message packs the
control ID in the low word and flags in the high word.
Another place where expanding dialog control IDs to 32-bit values
doesn't buy you anything.)
</p>
<p>
As the remarks to the DM_SETDEFID function note, messing directly
with the default ID carelessly can lead to odd cases like a dialog box
with two default buttons.
Fortunately, you rarely need to change the default ID for a dialog.
</p>
<p>
A bigger problem is using SetFocus to shove focus around a dialog.
If you do this, you are going directly to the window manager,
bypassing the dialog manager.  This means that you can create
"impossible" situations like having focus on a pushbutton without
that button being the default!
</p>
<p>
To avoid this problem, don't use SetFocus to change focus on a dialog.
Instead, use
<a HREF="http://msdn.microsoft.com/library/en-us/winui/WinUI/WindowsUserInterface/Windowing/DialogBoxes/DialogBoxReference/DialogBoxMessages/WM_NEXTDLGCTL.asp">
the WM_NEXTDLGCTL message</a>.
</p>
<pre>
void SetDialogFocus(HWND hdlg, HWND hwndControl)
{
 SendMessage(hdlg, WM_NEXTDLGCTL, (WPARAM)hwndControl, TRUE);
}
</pre>
<p>
As the remarks for the WM_NEXTDLGCTL message observe,
<a HREF="http://msdn.microsoft.com/library/en-us/winui/WinUI/WindowsUserInterface/Windowing/DialogBoxes/DialogBoxReference/DialogBoxFunctions/DefDlgProc.asp">
the DefDlgProc function</a> handles the WM_NEXTDLGCTL message
by updating all the internal dialog manager bookkeeping,
deciding which button should be default, all that good stuff.
</p>
<p>
Now you can update dialog boxes like the professionals,
avoiding oddities like having no default button, or worse,
multiple default buttons!</p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (22)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-200293">
				<div id="div-comment-200293" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Serge Wautier</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040802-00/?p=38283#comment-200293">
			August 2, 2004 at 7:48 am</a>		</div>

		<p>I was sure I knew everything about dialogs.  Now I learn that not only was I wrong but I&#8217;m not even a professional ! Please don&#8217;t tell the guy who signs my pay check at the end of each month ;-)</p>
<p>Also, MFC seems to make the same mistake. Even though there is a CWnd::GotoDlgCtrl(), MFC doesn&#8217;t uses it much itself (e.g. see CDataVaildation::Fail())</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-200323">
				<div id="div-comment-200323" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Matthias</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040802-00/?p=38283#comment-200323">
			August 2, 2004 at 8:46 am</a>		</div>

		<p>Hi,</p>
<p>maybe this is off-topic, but I think I found a bug in the dialog manager.</p>
<p>I created a standard dialog in Visual C++ 6 and tested it there. (I didn&#8217;t wrote any code).<br />
<br />I could produre this behaviour:</p>
<p>Abbrechen (Cancel) is the default push button, but OK has the focus:</p>
<p><a target="_new" href="http://matthias-hoffrichter.privat.t-online.de/dialog1.jpg" rel="nofollow">http://matthias-hoffrichter.privat.t-online.de/dialog1.jpg</a></p>
<p>And if you now activate the OK button. You have 2 default push buttons.</p>
<p><a target="_new" href="http://matthias-hoffrichter.privat.t-online.de/dialog2.jpg" rel="nofollow">http://matthias-hoffrichter.privat.t-online.de/dialog2.jpg</a></p>
<p>I hope you can reprodure this:</p>
<p>Press the tab-key and hold it down. The focus rotates between the 2 buttons. Now release the tab-key and press a button.<br />
<br />Maybe this explanation is not correct because this happens all very fast. ;)<br />
<br />Play around with tab and click the button.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-200333">
				<div id="div-comment-200333" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Matthias</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040802-00/?p=38283#comment-200333">
			August 2, 2004 at 8:59 am</a>		</div>

		<p>Ah, one correction: I think it requires a double click on the button.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-200273">
				<div id="div-comment-200273" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.extragroup.de/weblog/hmk/archives/001085.html' rel='external nofollow' class='url'>HMK's Spurious Thoughts</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040802-00/?p=38283#comment-200273">
			August 2, 2004 at 10:34 am</a>		</div>

		<p>&#8230;set focus in a dialog box. I always thought MacOS Carbon was messy&#8230;.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-200363">
				<div id="div-comment-200363" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Matthias</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040802-00/?p=38283#comment-200363">
			August 2, 2004 at 11:47 am</a>		</div>

		<p>Okay, when I subclass the buttons, catch WM_LBUTTONDBLCLK and just return 0 this behaviour doesn&#8217;t occur.</p>
<p>I uploaded a small example if you want to test it.</p>
<p><a target="_new" href="http://matthias-hoffrichter.privat.t-online.de/Dialog.zip" rel="nofollow">http://matthias-hoffrichter.privat.t-online.de/Dialog.zip</a></p>
<p>Does anybody understand whats going on?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-200423">
				<div id="div-comment-200423" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ben Cooke</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040802-00/?p=38283#comment-200423">
			August 2, 2004 at 1:57 pm</a>		</div>

		<p>By the &quot;rules&quot; of dialogs, if a button has focus then it must be the default button. However, when your dialog is initializing the first control to get focus is a button. The dialog manager doesn&#8217;t seem to have noticed that it has to change the default button in this case, which might well be causing the rest of the confusion.</p>
<p>Sadly, I&#8217;m not using Windows right now so I can&#8217;t play with your code.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-200533">
				<div id="div-comment-200533" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Norman Diamond</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040802-00/?p=38283#comment-200533">
			August 2, 2004 at 6:43 pm</a>		</div>

		<p>Sometimes it sure would be better to have no default button.  An example is the Device Manager snap-in of MMS.  If the user has ever used the tab key to move from one control to another, then the user probably expects the enter key to do invoke the active control rather than invoke the OK button.  There used to be some kinds of dialogs (not in MMS) where, for example, if a combo box had focus then the enter key would make the list drop down, the arrow keys would move the selection to a lower or higher list entry, and then the enter key would act on the selected entry.  In Device Manager, sometimes the user has to press the enter key, sometimes the user has to just press arrow keys (and not see the entire list but memorize all the entries as they get displayed one at a time), sometimes the user has to press the space key, etc.  If the user guesses wrong at any time and hits the enter key when something else was necessary, then the OK button automatically takes over, commits some undesired change, closes the dialog, and makes the user hunt for all the operations in sequence before finding the same point in the dialog again.</p>
<p>Well, if the user is trying to debug something other than the mouse then the problem isn&#8217;t usually that bad.  But nonetheless it is bad when it doesn&#8217;t have to be.  If the user has tabbed off the default button, then the new default should either be the focused control (if it is meaningful to be a default) or should be none at all, i.e. a no-op, instead of ambushing and reverting to a button that the user has tabbed off from.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-200553">
				<div id="div-comment-200553" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.codeproject.com/script/articles/list_articles.asp?userid=152' rel='external nofollow' class='url'>Mike Dunn</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040802-00/?p=38283#comment-200553">
			August 2, 2004 at 10:11 pm</a>		</div>

		<p>Norman&gt; Not really an answer to your concerns but you can hit F4 or Alt+DownArrow to open a combo box (assuming it&#8217;s not a funky custom control that is almost, but not quite, entirely the same as the built-in combo box).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-200583">
				<div id="div-comment-200583" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ant</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040802-00/?p=38283#comment-200583">
			August 3, 2004 at 1:18 am</a>		</div>

		<p>There&#8217;s lots of cases where this &quot;default&quot; behaviour does not work, even in MS apps. Take the VSS Check Out dialog in Visual Studio 2003 that I was using just before reading this article:</p>
<p>The dialog has three buttons along the bottom &#8211; Check Out (heavy default border) Cancel and Help but the focus is in the Comments edit box.</p>
<p>Hitting return here by the rules, I would expect the default button to be pushed but in fact it just puts a &lt;cr&gt; in the edit box&#8230;.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-200613">
				<div id="div-comment-200613" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Steve Power</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040802-00/?p=38283#comment-200613">
			August 3, 2004 at 4:24 am</a>		</div>

		<p>Very interesting article, certainly didn&#8217;t know I&#8217;ve been doing this wrong all these years.  I wonder why SetFocus() can&#8217;t just do the right thing? At least the help page could remark on the correct method to call if setting focus to a button.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-200633">
				<div id="div-comment-200633" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://weblogs.asp.net/oldnewthing/' rel='external nofollow' class='url'>Raymond Chen</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040802-00/?p=38283#comment-200633">
			August 3, 2004 at 7:16 am</a>		</div>

		<p>Ant: I don&#8217;t see what&#8217;s wrong. Focus can be on a non-button initially. And multiline edit controls use the WM_GETDLGCODE message (discussed earlier <a target="_new" href="http://weblogs.asp.net/oldnewthing/archive/2003/11/26/55872.aspx" rel="nofollow">http://weblogs.asp.net/oldnewthing/archive/2003/11/26/55872.aspx</a> ) to indicate that they want the Enter key to go to them and not to the dialog. This is typically what people expect when typing into a text box.</p>
<p>Dim St Thomas: I guess I don&#8217;t see what the problem is. Certainly you can&#8217;t send wizard messages when not in a wizard! In the same way you certainly can&#8217;t send listbox messages to a button control. </p>
<p>CPropertySheet is an MFC thing and I know nothing about MFC. What does SetWizardMode correspond to in Win32? </p>
<p>Steve: SetFocus can&#8217;t do &quot;the right thing&quot; because SetFocus is the low level function. The dialog manager is built on top of the window manager, not vice versa.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-200653">
				<div id="div-comment-200653" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">J. Edward Sanchez</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040802-00/?p=38283#comment-200653">
			August 3, 2004 at 7:43 am</a>		</div>

		<p>If I&#8217;m a user entering text in a multi-line edit control in a dialog, and I see that there is a button with a thick border, I am not going to press Enter to get a newline, and risk prematurely dismissing the dialog. Even though the edit control may be overriding the default Enter key behavior while it has focus, there is no visual indication of that, so there&#8217;s no way for me to know without actually trying it &#8212; and possibly suffering unwanted consequences.</p>
<p>Faced with such a situation, I&#8217;d just compose the text in Notepad &#8212; newlines at all &#8212; and then paste it into the dialog.</p>
<p>Some dialogs work around this problem by using Ctrl+Enter instead of Enter for entering newlines in multi-line edit controls. That works, but it requires an unsightly line of static text explaining how to enter a newline. It&#8217;s also error-prone, since it&#8217;s not necessarily easy for a user to override his or her automatic Enter keypress to get a newline.</p>
<p>Suggestion: When a multi-line edit control uses WM_GETDLGCODE to trap the Enter key for its own purposes, it might be a good idea to temporarily remove the &quot;default button&quot; status from the default button, so as not to needlessly confuse the user.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-200663">
				<div id="div-comment-200663" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://weblogs.asp.net/oldnewthing/' rel='external nofollow' class='url'>Raymond Chen</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040802-00/?p=38283#comment-200663">
			August 3, 2004 at 7:49 am</a>		</div>

		<p>That&#8217;s an interesting suggestion. Too bad it can&#8217;t be done given the current design. (Look at the design of the WM_GETDLGCODE message.)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-200593">
				<div id="div-comment-200593" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Dim St Thomas</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040802-00/?p=38283#comment-200593">
			August 3, 2004 at 1:48 am</a>		</div>

		<p>In one application I worked on we had PropertyPages that were used in both wizard and non-wizard mode PropertySheets. To allow for the wizard mode case we would call CPropertySheet::SetWizardButtons from OnSetActive as it tells you to do in the doc. If this would be the first page of a wizard we would use:</p>
<p>   CPropertySheet* psheet = (CPropertySheet*) GetParent();<br />
<br />   psheet-&gt;SetWizardButtons(PSWIZB_NEXT);</p>
<p>The problem occurs when you use such a page in a non-wizard mode sheet. As soon as the page is selected, the above code is called and it sets the Cancel button as the default button for the sheet.</p>
<p>To get round this we had to set a flag to tell the page when it was in non-wizard mode so it would not call SetWizardButtons. A CPropertySheet::GetWizardMode would have come in handy here. The CPropertySheet::SetWizardMode doc says it &quot;sets the PSF_WIZARD flag&quot;, but PSF_WIZARD doesn&#8217;t seem to be defined anywhere.<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-200683">
				<div id="div-comment-200683" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ant</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040802-00/?p=38283#comment-200683">
			August 3, 2004 at 8:55 am</a>		</div>

		<p>Raymond, you say &quot;The default button is typically drawn with a distinctive look (a heavy outline or a different color) and indicates what action the dialog box will take when you hit Enter.&quot; and that&#8217;s what I&#8217;ve always taken will happen. But when the edit box has the focus, it also accepts the enter despite the visual appearance of the default button suggesting otherwise. This is why I think it&#8217;s wrong. Action does not match visual cue. If the edit box too away the default outline from the button as other buttons do, all would be well.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-200693">
				<div id="div-comment-200693" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://weblogs.asp.net/oldnewthing/' rel='external nofollow' class='url'>Raymond Chen</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040802-00/?p=38283#comment-200693">
			August 3, 2004 at 9:30 am</a>		</div>

		<p>Right, and my point is that if you look at the WM_GETDLGCODE message you can see why the dialog manager cannot do that. The dialog manager is not psychic.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-200763">
				<div id="div-comment-200763" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Dim St Thomas</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040802-00/?p=38283#comment-200763">
			August 3, 2004 at 6:58 pm</a>		</div>

		<p>Raymond wrote &quot;Dim St Thomas: I guess I don&#8217;t see what the problem is. Certainly you can&#8217;t send wizard messages when not in a wizard! In the same way you certainly can&#8217;t send listbox messages to a button control.&quot;</p>
<p>I would compare it with sending a BM_SETCHECK message to a push button. I think most people would not expect this to have any effect. The &quot;problem&quot; seems to be that PSWIZB_NEXT is the same as IDCANCEL and the PropertySheet does not check if it is in wizard mode when handling the PSM_SETWIZARDBUTTONS message, though you could argue that this is the responsibility of the programmer.</p>
<p>Raymond wrote &quot;CPropertySheet is an MFC thing and I know nothing about MFC. What does SetWizardMode correspond to in Win32?&quot;</p>
<p>Looking at the MFC source, SetWizardMode adds PSH_WIZARD (not PSF_WIZARD as stated in the SetWizardMode doc) to the PROPSHEETHEADER flags. I also found an undocumented IsWizard function which could be useful.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-201523">
				<div id="div-comment-201523" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Seth McCarus</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040802-00/?p=38283#comment-201523">
			August 5, 2004 at 11:49 am</a>		</div>

		<p>Okay&#8230; I&#8217;m trying to do a simple thing here, change focus on a dialog to a given button.  I&#8217;m using</p>
<p>SendMessage(hwnd, WM_NEXTDLGCTL, (WPARAM)hB[dwDefault], TRUE);</p>
<p>to set the default button (hB is an array of button HWNDs).  Furthermore, I create the default button with the BS_DEFPUSHBUTTON style.  I&#8217;ve also tried using the DM_SETDEFID message to set the default button.  But in each case, the first button created is always the default.  I really don&#8217;t know what I&#8217;m doing wrong.  If anyone has a pointer or even wants to e-mail me, see code, etc., I&#8217;d really appreciate it.</p>
<p>Seth (at mccarus dot com).<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-202383">
				<div id="div-comment-202383" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Horst</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040802-00/?p=38283#comment-202383">
			August 11, 2004 at 2:36 am</a>		</div>

		<p>Hi, I tried to set focus to combobox edit field in OnInitDialog(){&#8230;}.</p>
<p>SendMessage(hdlg, WM_NEXTDLGCTL, &#8230;) didn&#8217;t work, but PostMessage(&#8230;) :-))</p>
<p>I&#8217;ve tested it under XP and VC 7.1</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-202423">
				<div id="div-comment-202423" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://weblogs.asp.net/oldnewthing/' rel='external nofollow' class='url'>Raymond Chen</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040802-00/?p=38283#comment-202423">
			August 11, 2004 at 5:41 am</a>		</div>

		<p>Read the documentation on WM_INITDIALOG for an explanation.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-206343">
				<div id="div-comment-206343" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Lu</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040802-00/?p=38283#comment-206343">
			August 26, 2004 at 6:48 pm</a>		</div>

		<p>I actually have a question. I am new to VC++. I have a dialog which has many edit text boxes on it. I want my program to do some calculation after the user enter something into the text box and click else where on the dialog (not a control on the dialog though, just the grey background of the dialog). So I use the LostFocus method, but it works only after I click on the other text box or the other control, not after I click on the dialog. I just want my program to lost the focus when I click on the dialog (not on another control). Is there anyway to do this?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-268713">
				<div id="div-comment-268713" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blogs.msdn.com/oldnewthing/archive/2005/03/31/404108.aspx' rel='external nofollow' class='url'>The Old New Thing</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040802-00/?p=38283#comment-268713">
			March 31, 2005 at 9:03 am</a>		</div>

		<p>Walk the template items and do what they say.</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

