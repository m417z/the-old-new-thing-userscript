<html>
<head>
<title>How can I write to a file only as long as nobody's looking?</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>How can I write to a file only as long as nobody&#8217;s looking?</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>August 29, 2013 / year-entry #231</td></tr>
<tr><td><b>Tags:</b></td><td>code</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20130829-00/?p=3373</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>9</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">A customer wanted to know how to detect that the user has opened Notepad to view a particular file. They had come up with method based on polling and sniffing the Notepad title bar, but they found that it consumed a lot of CPU. (They hadn't noticed yet that it doesn't localize, and that it...</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>A customer wanted to know how to detect that the user has opened Notepad to view a particular file. They had come up with method based on polling and sniffing the Notepad title bar, but they found that it consumed a lot of CPU. (They hadn't noticed yet that it doesn't localize, and that it can trigger false positives since Notepad shows only the file name and not the full path in the title bar.)</p>
<p> Okay, let's step back and make sure we understand the problem, because this sounds like the sort of thing where the customer is looking for an answer rather than a solution. After all, why Notepad? What about some other text editor? What about Explorer's preview pane? </p>
<p> The scenario here is that the program is generating some sort of output file, and they want the program to exit if somebody double-clicks the output file in an attempt to open it in Notepad. The customer wasn't specifically interested in Notepad, but since that was the most common case, that's all that they were really interested in. </p>
<p> One option is to open the file in <code>FILE_<wbr>SHARE_<wbr>READ</wbr></wbr></code> mode. This allows other applications to open the file for reading even while you are writing. If, on the other hand, you expect the user to try to edit the output file and save the result, then they will either encounter a sharing violation (if you opened in deny-write mode) or overwrite the changes that the generator program had made in the meantime. </p>
<p> The customer said that they were fine with the program just exiting if somebody tried to look at the output file while it was being generated. In that case, they could <a href="http://blogs.msdn.com/b/oldnewthing/archive/2013/04/15/10410965.aspx"> use an oplock</a>, specifically a <a href="http://msdn.microsoft.com/library/ff551011"> Read-Write oplock</a>. The Read-Write oplock grants you exclusive access to the file, but notifies you if somebody else tries to access the same file, so that you can close your handle and let the other application gain access. </p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (9)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-1075273">
				<div id="div-comment-1075273" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Dan Bugglin</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130829-00/?p=3373#comment-1075273">
			August 29, 2013 at 7:15 am</a>		</div>

		<p>Still a lot of sticky problems, such as the inability to tell background processes apart from user actions. &nbsp;Most likely problem is real-time AV scanning the file as soon as its created triggering a false positive. &nbsp;And of course Explorer will open the file when the user browses to the directory.</p>
<p>I suspect the problem still has not been properly stated; we peeled away one layer of abstraction, but the question of WHY the program needs to care once the user sees the output file hasn&#39;t been answered.</p>
<p>Perhaps the best way is to simply execute the output file itself; then you KNOW the user is looking at it. &nbsp;It all depends on what you&#39;re trying to do.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1075293">
				<div id="div-comment-1075293" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130829-00/?p=3373#comment-1075293">
			August 29, 2013 at 8:15 am</a>		</div>

		<p>&gt; And of course Explorer will open the file when the user browses to the directory.</p>
<p>You could cheat and set FILE_FLAG_OFFLINE. This keeps explorer from issuing spurious open directives.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-alegrigoriev even thread-even depth-1" id="comment-1075313">
				<div id="div-comment-1075313" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/alegr1' rel='external nofollow' class='url'>alegr1</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130829-00/?p=3373#comment-1075313">
			August 29, 2013 at 8:24 am</a>		</div>

		<p>The customer is retarded.</p>
<p>Notepad opens files with FILE_SHARE_WRITE|FILE_SHARE_READ, to allow viewing of logs currently being written. The program that writes the log need to allow FILE_SHARE_READ. This will be the least amount of pain.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1075323">
				<div id="div-comment-1075323" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">word!</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130829-00/?p=3373#comment-1075323">
			August 29, 2013 at 9:37 am</a>		</div>

		<p>It would be better if MS always used the Office approach, and created a ~$filename.ext file the filename.ext are opened. That way other applications can watch the file system for the temporary file.</p>
<p>The simple solution for the customer is to open all files with Word instead of notepad.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1075343">
				<div id="div-comment-1075343" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">John</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130829-00/?p=3373#comment-1075343">
			August 29, 2013 at 2:52 pm</a>		</div>

		<p>Yeah, I don&#39;t really see the point of what they&#39;re trying to do. &nbsp;It&#39;s sort of like Schrodinger&#39;s file or something.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1075353">
				<div id="div-comment-1075353" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blogs.msdn.com/virtual8086_4000_gmail.com/ProfileUrlRedirect.ashx' rel='external nofollow' class='url'>virtual8086@gmail.com</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130829-00/?p=3373#comment-1075353">
			August 29, 2013 at 10:02 pm</a>		</div>

		<p>So, Raymond, did the customer explain why they wanted such a strange behaviour? Wasn&#39;t it the case of easy and impossible (or silly) parts of a solution?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1075363">
				<div id="div-comment-1075363" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">asdbsd</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130829-00/?p=3373#comment-1075363">
			August 29, 2013 at 11:16 pm</a>		</div>

		<p>&gt; It would be better if MS always used the Office approach, and created a ~$filename.ext file the filename.ext are opened.</p>
<p>Can&#39;t tell if you&#39;re joking, but no, it wouldn&#39;t be better. It&#39;s not an approach to detecting anything anyway. And I&#39;m not sure what do you mean by MS (so it&#39;s okay if Notepads by other companies don&#39;t do this?)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1075833">
				<div id="div-comment-1075833" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Anonymous</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130829-00/?p=3373#comment-1075833">
			September 3, 2013 at 11:39 am</a>		</div>

		<p>Customer has a problem. They solve it by using sharing flags. Now they have two problems.</p>
<p>I always open with FILE_SHARE_READ | FILE_SHARE_WRITE | FILE_SHARE_DELETE and live with the consequences. Been burned too many times by trying to be more restrictive and running into sharing violations. Sharing violation is a very user-hostile error code. Let the user open the file if they want. Deal with it.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1076253">
				<div id="div-comment-1076253" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">@Anonymous</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130829-00/?p=3373#comment-1076253">
			September 5, 2013 at 2:25 am</a>		</div>

		<p>If you have log files in mind, yes. But if the files are used as a interface between programs (app A is writing it, app B is detecting this and reads it then) then no. As app A, don&#39;t allow app B to read the file as long as you haven&#39;t closed it. And as app B, open the file without FILE_SHARE_WRITE: You want to read the file in a consistent state, not an incomplete fragment.</p>
<p>Also, when your app is a database, don&#39;t allow all this bad backup applications to read your file. The admins will think all is well when in reality, they have a file with inconsistent data in the backup.</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

