<html>
<head>
<title>What a drag: Dragging a virtual file (IStorage edition)</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>What a drag: Dragging a virtual file (IStorage edition)</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>March 20, 2008 / year-entry #91</td></tr>
<tr><td><b>Tags:</b></td><td>code;what-a-drag</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20080320-00/?p=23063</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>10</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">There are three storage media that can be used for virtual file transfer. We've already seen HGLOBAL and IStream; the last one is IStorage. I doubt anybody will ever need to do virtual file transfer with structured storage, but here it is anyway. Remember that the theme of this series is "It's the least you...</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>
There are three storage media that can be used for virtual
file transfer.
We've already seen
<a HREF="http://blogs.msdn.com/oldnewthing/archive/2008/03/18/8080183.aspx">
<code>HGLOBAL</code></a>
and
<a HREF="http://blogs.msdn.com/oldnewthing/archive/2008/03/19/8080215.aspx">
<code>IStream</code></a>;
the last one is <code>IStorage</code>.
I doubt anybody will ever need to do virtual file transfer
with structured storage, but here it is anyway.
Remember that the theme of this series is
"It's the least you can do",
so I'm going to try to get away with as little as possible.
</p>
<p>
Starting with our stream-based sample from last time, we need
only make a few changes.
First, of course, we have to declare that we provide an
<code>IStorage</code> as our file contents.</p>
<pre>
CTinyDataObject::CTinyDataObject() : m_cRef(1)
{
  SetFORMATETC(&amp;m_rgfe[DATA_FILEGROUPDESCRIPTOR],
               RegisterClipboardFormat(CFSTR_FILEDESCRIPTOR));
  SetFORMATETC(&amp;m_rgfe[DATA_FILECONTENTS],
               RegisterClipboardFormat(CFSTR_FILECONTENTS),
               <font COLOR=blue>TYMED_ISTORAGE</font>, /* lindex */ 0);
}
</pre>
<p>
Next, we need to produce that storage
in our <code>IDataObject::GetData</code> handler:
</p>
<pre>
HRESULT CTinyDataObject::GetData(FORMATETC *pfe, STGMEDIUM *pmed)
{
  ZeroMemory(pmed, sizeof(*pmed));

  switch (GetDataIndex(pfe)) {
  case DATA_FILEGROUPDESCRIPTOR:
  {
    FILEGROUPDESCRIPTOR fgd;
    ZeroMemory(&amp;fgd, sizeof(fgd));
    fgd.cItems = 1;
    StringCchCopy(fgd.fgd[0].cFileName,
                  ARRAYSIZE(fgd.fgd[0].cFileName),
                  TEXT("Dummy"));
    pmed-&gt;tymed = TYMED_HGLOBAL;
    return CreateHGlobalFromBlob(&amp;fgd, sizeof(fgd),
                              GMEM_MOVEABLE, &amp;pmed-&gt;hGlobal);
  }

  case DATA_FILECONTENTS: //  Create an empty storage
  <font COLOR=blue>{
    pmed-&gt;tymed = TYMED_ISTORAGE;
    ILockBytes *plb;
    HRESULT hr = CreateILockBytesOnHGlobal(NULL, TRUE, &amp;plb);
    if (SUCCEEDED(hr)) {
        hr = StgCreateDocfileOnILockBytes(plb,
                STGM_READWRITE | STGM_SHARE_EXCLUSIVE |
                STGM_CREATE | STGM_DIRECT,
                0, &amp;pmed-&gt;pstg);
        plb-&gt;Release();
    }
    return hr;
  }</font>

  return DV_E_FORMATETC;
}
</pre>
<p>
The hardest part was creating the empty storage object!
The bookkeeping you're by now well-familiar with.
and, as noted when we made the <code>HGLOBAL</code>-based
data object, there are additional attributes you can set
in the <code>FILEGROUPDESCRIPTOR</code> to make the experience
a bit smoother.
</p>
<p>
That pretty much covers "The least you can do" for virtual file
transfer in the shell.
You can think of these little sample programs as
"scratch data objects"&mdash;you can use them as the basis for
more complicated virtual file transfer scenarios.
We'll see more about this in future articles.</p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (10)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-611033">
				<div id="div-comment-611033" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Steve Thresher</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080320-00/?p=23063#comment-611033">
			March 20, 2008 at 10:14 am</a>		</div>

		<p>I may be missing the obvious but doesn&#8217;t outlook use structured storage when dragging messages around.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-jamesnt odd alt thread-odd thread-alt depth-1" id="comment-611053">
				<div id="div-comment-611053" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/JamesNT' rel='external nofollow' class='url'>JamesNT</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080320-00/?p=23063#comment-611053">
			March 20, 2008 at 11:34 am</a>		</div>

		<p>Mr. Chen,</p>
<p>Thank you for this series. &nbsp;It has been one of the most fun so far.</p>
<p>JamesNT</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-611103">
				<div id="div-comment-611103" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Dan</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080320-00/?p=23063#comment-611103">
			March 20, 2008 at 5:20 pm</a>		</div>

		<p>Steve: Are you nitpicking? &nbsp;I don&#8217;t think those are virtual files (or real files; doesn&#8217;t outlook use one large file for all your e-mail?)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-611113">
				<div id="div-comment-611113" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">gb</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080320-00/?p=23063#comment-611113">
			March 20, 2008 at 6:46 pm</a>		</div>

		<p>god dammit it&#8217;s so boring, what&#8217;s the purpose raymond?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-611123">
				<div id="div-comment-611123" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.coldacid.net/' rel='external nofollow' class='url'>Chris Charabaruk</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080320-00/?p=23063#comment-611123">
			March 20, 2008 at 7:01 pm</a>		</div>

		<p>@gb When you need it, you&#8217;ll be able to use it.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-611173">
				<div id="div-comment-611173" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Anon</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080320-00/?p=23063#comment-611173">
			March 20, 2008 at 10:49 pm</a>		</div>

		<p>@gb</p>
<p>You can&#8217;t fool me. I&#8217;ve seen lots of movies where esoteric computer knowledge saves the world. When the aliens attack, a knowledge of COM and OLE may save the world. It&#8217;s certainly more likely than them using Macs like the aliens in Independence Day. Watch the skys but make sure you read Dale Rogerson!</p>
<p>More to the point, I could hack up an explorer style application with a treeview/splitter/listview/menu bar that lets me drag and drop files from my PTP device. Or anything else for that matter.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-611183">
				<div id="div-comment-611183" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Rivari</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080320-00/?p=23063#comment-611183">
			March 20, 2008 at 11:14 pm</a>		</div>

		<p>@Anon</p>
<p>I am a computer science student and I wonder if it still a good idea to learn COM!</p>
<p>What do you think?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-611423">
				<div id="div-comment-611423" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Matt Green</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080320-00/?p=23063#comment-611423">
			March 21, 2008 at 6:31 pm</a>		</div>

		<p>If you want to integrate with Windows, you will probably have to learn it. If you&#8217;re not aiming to do that, then learn the concepts behind it and why it developed the way it did.</p>
<p>I know the basics and how to use it in a pinch, but I probably couldn&#8217;t write a COM component easily, and I consider myself a fairly competent Windows developer. Maybe I&#8217;m not if I try to avoid COM&#8230; ;)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-612833">
				<div id="div-comment-612833" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Anthony Wieser</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080320-00/?p=23063#comment-612833">
			March 26, 2008 at 10:42 am</a>		</div>

		<p>Now all I need to do is figure out how to implement the other end of the drop target so that I can register file associations.</p>
<p>MSDN says this:</p>
<p>On Microsoft Windows XP systems, enhanced support is added for applications that implement drag-and-drop features and expose their IDropTarget interface. With this method, the Shell communicates with the application through the Component Object Model (COM) subsystem. This method offers a significant performance gain over both the command line method and DDE. To use this method, add a DropTarget subkey under a verb&#8217;s key. Under the DropTarget, add a registry string named Clsid, and set the value of this string to a valid CLSID Key.</p>
<p>MSDN online also adds this helpful advice:</p>
<p>Implementations of IDropTarget::Drop need to return quickly to the caller avoid causing an unresponsive state. There are two ways to accomplish this:</p>
<p>Marshall the input IDropTarget to a new thread.</p>
<p>Take a reference to the data object, set a short timer, and process the drop against that timer. If you use this method, you must ensure that you do not begin processing a second drop while the first is still being processed.</p>
<p><a rel="nofollow" target="_new" href="http://msdn2.microsoft.com/en-us/library/bb776883.aspx" rel="nofollow">http://msdn2.microsoft.com/en-us/library/bb776883.aspx</a></p>
<p>What it doesn&#8217;t say is: Does this work on Vista?</p>
<p>I assume all I need to do is expose on object on my exe with the specified CLSID that supports an IDropTarget interface.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-612853">
				<div id="div-comment-612853" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Anthony Wieser</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080320-00/?p=23063#comment-612853">
			March 26, 2008 at 10:44 am</a>		</div>

		<p>I see from msdn online this works on XP and later systems. &nbsp;oops.</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

