<html>
<head>
<title>Paint messages will come in as fast as you let them</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>Paint messages will come in as fast as you let them</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>December 19, 2011 / year-entry #299</td></tr>
<tr><td><b>Tags:</b></td><td>code</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20111219-00/?p=8863</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>25</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">There is a class of messages which are generated on demand rather than explicitly posted into a message queue. If you call Get­Message or Peek­Message and the queue is empty, then the window manager will look to see if one of these generated-on-demand messages is due, messages like WM_TIMER, WM_MOUSE­MOVE, and WM_PAINT. Neil wonders, "In...</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>There is a class of messages which are generated on demand rather than explicitly posted into a message queue. If you call <code>Get&shy;Message</code> or <code>Peek&shy;Message</code> and the queue is empty, then the window manager will look to see if one of these generated-on-demand messages is due, messages like <code>WM_<wbr>TIMER</wbr></code>, <code>WM_<wbr>MOUSE&shy;MOVE</wbr></code>, and <code>WM_<wbr>PAINT</wbr></code>.</p>
<p> Neil wonders, "<a href="http://blogs.msdn.com/b/oldnewthing/archive/2006/02/20/535440.aspx#541386">In that program that called <code>Invalidate&shy;Rect</code> 100,000 times, how many paint messages were generated</a>?" </p>
<p> The Zen answer to this question is "Yes." </p>
<p> A more practical answer is "As many as you can get." </p>
<p> When somebody calls <code>Invalidate&shy;Rect</code>, the window manager adds the specified rectangle to the window's invalid region (or invalidates the entire client area if no rectangle is provided) and sets a flag that says "Yo, there's painting to be done!" (It's not actually a flag, but you can think of it that way.) </p>
<p> When a message retrieval function finds that there are no incoming sent messages to be dispatched nor any applicable messages in the queue to be retrieved, it looks at these extra flags to see if it should generate a message on the fly. If the "Yo, there's painting to be done!" flag is set on a window that the thread is responsible for, a <code>WM_<wbr>PAINT</wbr></code> message is generated for that window. (Similarly, a <code>WM_<wbr>TIMER</wbr></code> is generated if a timer has elapsed, and a <code>WM_<wbr>MOUSE&shy;MOVE</wbr></code> is generated if the mouse has moved since the last time this thread retrieved a mouse message.) </p>
<p> Therefore, the number of <code>WM_<wbr>PAINT</wbr></code> messages by 100,000 invalidations is not deterministic, but it'll be at least one and may be as high as 100,000. It's basically just a race between the invalidation thread and the paint thread. </p>
<table>
<tr>
<td><code>Invalidate&shy;Rect</code></td>
</tr>
<tr>
<td><code>Invalidate&shy;Rect</code></td>
</tr>
<tr>
<td></td>
<td><code>Get&shy;Message</code> (retrieves <code>WM_<wbr>PAINT</wbr></code>)</td>
</tr>
<tr>
<td></td>
<td><code>WM_<wbr>PAINT</wbr></code> dispatched</td>
</tr>
<tr>
<td></td>
<td><code>Get&shy;Message</code> (waits for a message)</td>
</tr>
<tr>
<td><code>Invalidate&shy;Rect</code></td>
</tr>
<tr>
<td></td>
<td><code>Get&shy;Message</code> (returns with <code>WM_<wbr>PAINT</wbr></code>)</td>
</tr>
<tr>
<td><code>Invalidate&shy;Rect</code></td>
</tr>
<tr>
<td></td>
<td><code>WM_<wbr>PAINT</wbr></code> dispatched</td>
</tr>
<tr>
<td><code>Invalidate&shy;Rect</code></td>
</tr>
<tr>
<td></td>
<td><code>Get&shy;Message</code> (retrieves <code>WM_<wbr>PAINT</wbr></code>)</td>
</tr>
<tr>
<td><code>Invalidate&shy;Rect</code></td>
</tr>
<tr>
<td><code>Invalidate&shy;Rect</code></td>
</tr>
<tr>
<td></td>
<td><code>WM_<wbr>PAINT</wbr></code> dispatched</td>
</tr>
<tr>
<td></td>
<td><code>Get&shy;Message</code> (retrieves <code>WM_<wbr>PAINT</wbr></code>)</td>
</tr>
<tr>
<td><code>Invalidate&shy;Rect</code></td>
</tr>
<tr>
<td></td>
<td><code>WM_<wbr>PAINT</wbr></code> dispatched</td>
</tr>
<tr>
<td></td>
<td><code>Get&shy;Message</code> (retrieves <code>WM_<wbr>PAINT</wbr></code>)</td>
</tr>
<tr>
<td></td>
<td><code>WM_<wbr>PAINT</wbr></code> dispatched</td>
</tr>
<tr>
<td></td>
<td><code>Get&shy;Message</code> (waits for a message)</td>
</tr>
</table>
<p> If the thread doing the painting manages to call <code>Get&shy;Message</code> between each call to <code>Invalidate&shy;Rect</code>, then it will see every invalidation. On the other hand (which is more likely), it only manages to call <code>Get&shy;Message</code> after a few invalidations have taken place, it will see the accumulated invalidation in a single <code>WM_<wbr>PAINT</wbr></code> message. </p>
<p> Now that you understand how generated messages work, you can answer this question which sometimes comes in: </p>
<blockquote class="q"><p> If the user is continuously moving the mouse, how many <code>WM_<wbr>MOUSE&shy;MOVE</wbr></code> messages will I get? </p>
</blockquote>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (25)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-953973">
				<div id="div-comment-953973" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blogs.msdn.com/johnstonj_4000_inn_2D00_soft.com/ProfileUrlRedirect.ashx' rel='external nofollow' class='url'>johnstonj@inn-soft.com</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20111219-00/?p=8863#comment-953973">
			December 19, 2011 at 7:07 am</a>		</div>

		<p>Yes.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-953983">
				<div id="div-comment-953983" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Gabe</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20111219-00/?p=8863#comment-953983">
			December 19, 2011 at 7:21 am</a>		</div>

		<p>The number of MS_MOUSEMOVE messages depends not only on how often you look for them, but also how often they&#39;re generated, making it a much harder question to answer than the WM_PAINT one because we knew how many InvalidateRect calls there were.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-953993">
				<div id="div-comment-953993" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Tim</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20111219-00/?p=8863#comment-953993">
			December 19, 2011 at 7:40 am</a>		</div>

		<p>As is the case with all &quot;Schroedinger Messages&quot; the answer to the question on how many you will get is: &quot;Enough to satisfy your curiosity&quot;.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-954003">
				<div id="div-comment-954003" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Markus</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20111219-00/?p=8863#comment-954003">
			December 19, 2011 at 8:09 am</a>		</div>

		<p>Is there a special term for these kinds of messages? Basically I&#39;d like to know how to find out if a message is handled this way from documentation and/or how to find out which messages are handled this way.</p>
<div class="post">[<i>I don&#39;t know if there is an official term, but <span style="text-decoration:underline;">generated messages</span> is sometimes used. The three messages which behave this way <a href="http://msdn.microsoft.com/en-us/library/windows/desktop/ms644927(v=vs.85).aspx#quequed_messages" rel="nofollow">are documented as <code>WM_PAINT</code>, <code>WM_TIMER</code>, and <code>WM_QUIT</code></a>. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-954013">
				<div id="div-comment-954013" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20111219-00/?p=8863#comment-954013">
			December 19, 2011 at 8:17 am</a>		</div>

		<p>I&#39;ve had to explain to some engineers about not depending on getting WM_MOUSEMOVE (or even WM_MOUSELEAVE due to something even rarer that Raymond blogged about awhile back). We had a data corruption bug recently that was apparently due to mishandling of these messages.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-954023">
				<div id="div-comment-954023" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Leo Davidson</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20111219-00/?p=8863#comment-954023">
			December 19, 2011 at 8:31 am</a>		</div>

		<p>I wish it was possible to have user-defined messages behave in this way. i.e. To flag that a message needs to be sent, without generating a duplicate message if the flag is set and a message is already pending.</p>
<p>With access to the message loop, you can do it using events instead of messages. Without access to the message loop (the usual case), you can do it, but it&#39;s a pain and brings a fair amount of baggage for something that seems like a very common situation.</p>
<p>(Failure to do it can lead to the message queue overflowing if the event producer can run more frequently than the consumer. Or, more commonly, just wasting time because the consumer ends up doing extra work that isn&#39;t actually needed.)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-954033">
				<div id="div-comment-954033" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">blah</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20111219-00/?p=8863#comment-954033">
			December 19, 2011 at 9:18 am</a>		</div>

		<p>+1 for Leo Davidson&#39;s comment. Conflation like this, exposed for user-defined purposes, would be the proper way to handle UI updates from worker threads.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-954053">
				<div id="div-comment-954053" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">AsmGuru62</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20111219-00/?p=8863#comment-954053">
			December 19, 2011 at 9:42 am</a>		</div>

		<p>WM_MOUSEMOVE is a tricky message &#8211; it sometimes arrives even when mouse is not moved.</p>
<div class="post">[<i>Yup, we discussed this <a href="http://blogs.msdn.com/b/oldnewthing/archive/2003/10/01/55108.aspx" rel="nofollow">several years ago</a>. Not sure what your point is. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-954073">
				<div id="div-comment-954073" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Me</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20111219-00/?p=8863#comment-954073">
			December 19, 2011 at 10:00 am</a>		</div>

		<p>Maybe AsmGuru62 hasn&#39;t read (or doesn&#39;t remember) your post from 2003??</p>
<p>So his point in posting this might essentially be the same as the point of your blog post was back then. To inform others of surprising behavior.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-alegrigoriev odd alt thread-odd thread-alt depth-1" id="comment-954093">
				<div id="div-comment-954093" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/alegr1' rel='external nofollow' class='url'>alegr1</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20111219-00/?p=8863#comment-954093">
			December 19, 2011 at 11:20 am</a>		</div>

		<p>@Leo, blah:</p>
<p>If you want to conflate your custom message, just use PeekMessage for its code.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-954103">
				<div id="div-comment-954103" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Mick</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20111219-00/?p=8863#comment-954103">
			December 19, 2011 at 11:39 am</a>		</div>

		<p>@alegr1: That only works for message loops that you have control over, ie. not for arbitrary threads or modal loops running on your thread(s).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-954123">
				<div id="div-comment-954123" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">grumpy</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20111219-00/?p=8863#comment-954123">
			December 20, 2011 at 1:54 am</a>		</div>

		<blockquote><p>
  If the user is continuously moving the mouse, how many WM_MOUSEÂ­MOVE messages will I get?
</p></blockquote>
<p>Three pounds of flax. Or five tons. Depends.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-954133">
				<div id="div-comment-954133" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Neil</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20111219-00/?p=8863#comment-954133">
			December 20, 2011 at 3:06 am</a>		</div>

		<p>If you don&#39;t have too many different messages that you need to conflate, you could use timers.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-954153">
				<div id="div-comment-954153" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Stewart</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20111219-00/?p=8863#comment-954153">
			December 20, 2011 at 7:17 am</a>		</div>

		<p>Or you could use WM_PAINT. As an example of this see here <a href="http://blogs.msdn.com/b/oldnewthing/archive/2011/12/19/10249000.aspx" rel="nofollow"></a><a href="http://blogs.msdn.com/" rel="nofollow">http://blogs.msdn.com/</a>&#8230;/10249000.aspx which is also from way back in 2003.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-954113">
				<div id="div-comment-954113" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Wimon Buchan</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20111219-00/?p=8863#comment-954113">
			December 19, 2011 at 11:57 pm</a>		</div>

		<p>&quot;(It&#39;s not actually a flag, but you can think of it that way.)&quot; &#8211; now I&#39;m slightly curious as to what it is, but I expect it&#39;s just an auto-reset event or equivalent. Otherwise, potentially non-obvious but fairly well known behavior.</p>
<p>To those asking for Windows supporting this style of event, it&#39;s not that hard to do yourself, and very hard for windows to do in the way you&#39;d want. Remember that magic has to happen either to combine the messages, which supporting in the general case would be rather difficult. To do it yourself, simply:</p>
<p>* Define (with the same lifetime scope as the window you&#39;re dispatching to) a flag and the data needed (eg, last mouse position for WM_MOUSEMOVE, invalid region for WM_PAINT) and some synchronization (probably just a CritSec) to protect them.</p>
<p>* After the update if the flag is not set, set it and post the message.</p>
<p>* On receiving the message process the data (just copy it if it would take long of course) then clear the flag and the data.</p>
<p>This is far simpler than any wacky callback + handle system you&#39;d need to provide to do anything even slightly complex inside GetMessage() itself (anything more complex than WM_MOUSEMOVE runs out of [WL]PARAM bits), and I can&#39;t see any benefit for it to be done there rather than in the target window&#39;s WndProc. (I can&#39;t see how any implementation of &#39;lazy&#39; messages could work with a WndProc you don&#39;t control to some extent &#8211; otherwise you don&#39;t know when to clean up the data)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-954213">
				<div id="div-comment-954213" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">dave</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20111219-00/?p=8863#comment-954213">
			December 20, 2011 at 9:26 am</a>		</div>

		<p>Related question: how many roads must a man walk down?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-954223">
				<div id="div-comment-954223" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Dave Bacher</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20111219-00/?p=8863#comment-954223">
			December 20, 2011 at 10:07 am</a>		</div>

		<p>@blah:</p>
<p>Luke only needed 24 updates a second to confront Vader and the Emperor.</p>
<p>Kirk only needed 24 updates a second to scream Kaaaaahhhhnnnnnn.</p>
<p>Using a WM_TIMER at 41ms to update your UI, I think we can agree that whatever your UI is doing, it&#39;s not as important as James Tiberius Kirk or Lord Vader. &nbsp;24 updates a second will be fine for you, too.</p>
<p>UI updates are costly, and cause several messages, at tens of thousands of CPU cycles per message. &nbsp;The little red guys and blue guys inside the computer can only be working on a couple of tasks at any given time, and often have to fight great wars for resources like system bus, GPU bus, memory, etc. &nbsp;The less demanding you are of the little red and blue guys, the more time that they have to deal with other problems on the computer. (For the love of God, haven&#39;t you seen Tron?)</p>
<p>Video games are the exception, but you&#39;re not using windows messages for UI updates in a video game, you&#39;re always drawing from current state &#8212; and generally as quickly as possible.</p>
<p>Incidentally, it&#39;s a commonly known fact that referencing Star Wars and Star Trek during a peer-review increases the odds of the review being a pass by at least one order of magnitude each.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-alegrigoriev odd alt thread-odd thread-alt depth-1" id="comment-954243">
				<div id="div-comment-954243" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/alegr1' rel='external nofollow' class='url'>alegr1</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20111219-00/?p=8863#comment-954243">
			December 20, 2011 at 10:56 am</a>		</div>

		<p>@Stewart:</p>
<p>Are you suggesting to handle custom flags/messages as part of WM_PAINT? Oops, too bad, the handling gets stalled when the app is minimized or completely obscured, because you don&#39;t get those WM_PAINT.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-954283">
				<div id="div-comment-954283" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Gabe</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20111219-00/?p=8863#comment-954283">
			December 20, 2011 at 2:06 pm</a>		</div>

		<p>alegr1: I would recommend using WM_TIMER for such messages. Instead of setting a flag and then sending a message, just set a timer with a pointer to the function that would handle that flag.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-954293">
				<div id="div-comment-954293" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">kme</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20111219-00/?p=8863#comment-954293">
			December 20, 2011 at 3:48 pm</a>		</div>

		<p>The simplest way to describe this behaviour is probably that the messages in question are level-triggered rather than edge-triggered.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-954383">
				<div id="div-comment-954383" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Danny</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20111219-00/?p=8863#comment-954383">
			December 21, 2011 at 6:42 am</a>		</div>

		<p>Hmm&#8230; how does Msg&shy;Wait&shy;For&shy;Multiple&shy;Objects know whether one of these &quot;fake&quot; messages would be there? That would maybe explain some curious hangs I got some years ago&#8230;</p>
<div class="post">[<i>The same way that Msg&shy;Wait&shy;For&shy;Multiple&shy;Objects knows that a queued message is present, or that a non-queued message is present. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-alegrigoriev odd alt thread-odd thread-alt depth-1" id="comment-954503">
				<div id="div-comment-954503" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/alegr1' rel='external nofollow' class='url'>alegr1</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20111219-00/?p=8863#comment-954503">
			December 21, 2011 at 3:25 pm</a>		</div>

		<p>@Gabe:</p>
<p>Won&#39;t work for cross-thread communication. Can&#39;t call SetTimer on other thread&#39;s window.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-alexcohn even thread-even depth-1" id="comment-954623">
				<div id="div-comment-954623" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Alex+Cohn' rel='external nofollow' class='url'>Alex Cohn</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20111219-00/?p=8863#comment-954623">
			December 22, 2011 at 12:18 pm</a>		</div>

		<p>@alegr1: How will ::PostMessage(hWnd, WM_TIMER, &#8230;) behave?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-alegrigoriev odd alt thread-odd thread-alt depth-1" id="comment-954643">
				<div id="div-comment-954643" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/alegr1' rel='external nofollow' class='url'>alegr1</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20111219-00/?p=8863#comment-954643">
			December 22, 2011 at 1:40 pm</a>		</div>

		<p>@Alex:</p>
<p>It&#39;s generally not a good idea to fake special messages. I&#39;m afraid your GetMessage will just fetch it, without calling a callback function.</p>
<p>The point Gabe was trying to make is to avoid using of PostMessage or SendMessage for notifying another thread. If you use PostMessage, you better just post a custom code.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-alegrigoriev even thread-even depth-1" id="comment-954673">
				<div id="div-comment-954673" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/alegr1' rel='external nofollow' class='url'>alegr1</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20111219-00/?p=8863#comment-954673">
			December 22, 2011 at 3:20 pm</a>		</div>

		<p>For what it&#39;s worth, it&#39;s trivially easy to write a class for setting a flag (or updating a 64 bit value) and posting a message only once. Judicuous use of interlocked operations does wonders.</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

