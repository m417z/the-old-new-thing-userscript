<html>
<head>
<title>Enumerating threads in a process</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>Enumerating threads in a process</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>February 23, 2006 / year-entry #69</td></tr>
<tr><td><b>Tags:</b></td><td>code</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20060223-14/?p=32173</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>11</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">The tool helper library is sort of the black sheep of Win32. It grew out of the 16-bit TOOLHELP library, which provided services for system debugging tools to do things like take stack traces and enumerate all the memory in the system. The original incarnation of Win32 didn't incorporate it; it wasn't until Windows 95 that...</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>
The
<a HREF="http://msdn.microsoft.com/library/en-us/perfmon/base/about_tool_help_functions.asp">
tool helper library</a> is sort of the black sheep of Win32.
It grew out of the 16-bit TOOLHELP library,
which provided services for system debugging tools to do things
like take stack traces and
enumerate all the memory in the system.
The original incarnation of Win32 didn't incorporate it;
it wasn't until Windows&nbsp;95 that a 32-bit version of the
tool helper library sort of got bolted onto the side of Win32.
</p>
<p>
Disowned or not, the functions are still there, so let's give them a spin.
</p>
<pre>
#include &lt;stdio.h&gt;
#include &lt;windows.h&gt;
#include &lt;tlhelp32.h&gt;

int __cdecl main(int argc, char **argv)
{
 HANDLE h = CreateToolhelp32Snapshot(TH32CS_SNAPTHREAD, 0);
 if (h != INVALID_HANDLE_VALUE) {
  THREADENTRY32 te;
  te.dwSize = sizeof(te);
  if (Thread32First(h, &amp;te)) {
   do {
     if (te.dwSize &gt;= FIELD_OFFSET(THREADENTRY32, th32OwnerProcessID) +
                      sizeof(te.th32OwnerProcessID)) {
       printf("Process 0x%04x Thread 0x%04x\n",
             te.th32OwnerProcessID, te.th32ThreadID);
     }
   te.dwSize = sizeof(te);
   } while (Thread32Next(h, &amp;te));
  }
  CloseHandle(h);
 }
 return 0;
}
</pre>
<p>
Running this program prints a list of all the threads in the
system (or at least all the ones you have access to).
This is particularly straightforward,
the only subtlety being the strange check that the size
returned by the <code>Thread32First</code> function
is large enough to emcompass the <code>th32OwnerProcessID</code>
field that we need.
This complexity is necessary due to the somewhat
unorthodox way that the
<code>Thread32First</code> and <code>Thread32Next</code>
functions
<a HREF="http://blogs.msdn.com/oldnewthing/archive/2003/12/12/56061.aspx">
check structure sizes</a>.
</p>
<p>
That's what happens when you're the black sheep of the Win32&nbsp;API.</p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (11)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-349243">
				<div id="div-comment-349243" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">8</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060223-14/?p=32173#comment-349243">
			February 23, 2006 at 11:01 am</a>		</div>

		<p>&quot;a 32-bit version of the tool helper library sort of got bolted onto the side of Win32&quot;</p>
<p>Aha! So THATS how Windows 95 was made&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-mithuns odd alt thread-odd thread-alt depth-1" id="comment-349343">
				<div id="div-comment-349343" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Mithun+Shanbhag' rel='external nofollow' class='url'>Mithun Shanbhag</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060223-14/?p=32173#comment-349343">
			February 23, 2006 at 2:52 pm</a>		</div>

		<p>Are there any other libs that allow you to enumerate running threads? The PSAPI and WtsApi32 libs allow you to only enumerate processes but not threads&#8230;&#8230;..</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-349423">
				<div id="div-comment-349423" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Carlos</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060223-14/?p=32173#comment-349423">
			February 23, 2006 at 6:40 pm</a>		</div>

		<p>@mithuns</p>
<p>HKEY_PERFORMANCE_DATA can give you a list of processes and threads, and it&#8217;s been around since NT 3.1 where it was the only supported method of doing this.</p>
<p>Unfortunately: it&#8217;s a chore to use; third-party performance providers can leak memory into your process, bombard it with messages, and break performance data altogether; the performance text registry key is some kind of hack backed by files in system32 which used to break regularly (I haven&#8217;t tried it recently); and it&#8217;s not supported on Win 9x.</p>
<p>If you don&#8217;t need the performance data it&#8217;s probably not worth the pain.<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-349293">
				<div id="div-comment-349293" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Mike</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060223-14/?p=32173#comment-349293">
			February 23, 2006 at 1:04 pm</a>		</div>

		<p>This again reminds me that the most required functionality of Win32, is also the most hary.</p>
<p>I first read about threads in an article about OS/2 back in&#8230; man, the dark ages. :-) I then got to know NT, and noticed it lacked even the basic stuff &#8211; the stuff even the Amiga OS had (my background when it comes to preemptive multitasking systems). One of the missing things were &quot;I provide memory, you provide a snapshot of the system state I request&quot;. That is AFAIK the only reliable way in a dynamic system, without this anyway happening behind the scenes (which it doesn&#8217;t do in NT).</p>
<p>Add then all the different ways you need to do this &#8211; all the gazillion ways from NT 3.51 to NT4, to Win95, to 98, to NT5 to&#8230; and every &quot;new&quot; &quot;innovation&quot; (or whatever they&#8217;re called) deprecates the previous way of doing it. Man, that&#8217;s a cesspool. I now see there&#8217;s no wonder I just gave up.</p>
<p>This however brings me to what I consider a much, much worse problem with NT &#8211; a problem likely not anticipated and impossible to retrofit: Named threads. BeOS got this right; every thread also has a &quot;name&quot;, a string provided when the thread was created. Why is this a problem in NT? Have you ever tried to debug a DirectX-using application, and having been forced to visit every bl**dy thread just to see what threads are &quot;DInput&quot;, &quot;DSound&quot; and so on? Add the suggestion of having a basically &quot;dead&quot; thread just waiting for an object&#8230;</p>
<p>Add to the mess that how threads actually work isn&#8217;t 100% documented (as that would require 100% documentation of APC&#8217;s &#8211; for a user-mode API).</p>
<p>I know, I expanded beyond the subject. Sue me.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-349473">
				<div id="div-comment-349473" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Simon</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060223-14/?p=32173#comment-349473">
			February 23, 2006 at 10:39 pm</a>		</div>

		<p>Mike, see the following, I think it will make you happy:</p>
<p><a rel="nofollow" target="_new" href="http://windowssdk.msdn.microsoft.com/library/en-us/dv_vsdebug/html/c85d0968-9f22-4d69-87f4-acca2ae777b8.asp" rel="nofollow">http://windowssdk.msdn.microsoft.com/library/en-us/dv_vsdebug/html/c85d0968-9f22-4d69-87f4-acca2ae777b8.asp</a></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-349483">
				<div id="div-comment-349483" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">M Hotchin</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060223-14/?p=32173#comment-349483">
			February 23, 2006 at 10:45 pm</a>		</div>

		<p>For threads that you control, you can name them in the debugger by looking at this article:<br />
<br /><a rel="nofollow" target="_new" href="http://www.highprogrammer.com/alan/windev/visualstudio.html" rel="nofollow">http://www.highprogrammer.com/alan/windev/visualstudio.html</a><br />
<br />or here:<br />
<br /><a rel="nofollow" target="_new" href="http://msdn2.microsoft.com/en-us/library/xcb2z8hs.aspx" rel="nofollow">http://msdn2.microsoft.com/en-us/library/xcb2z8hs.aspx</a></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-junfeng even thread-even depth-1" id="comment-349513">
				<div id="div-comment-349513" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Junfeng+Zhang' rel='external nofollow' class='url'>Junfeng Zhang</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060223-14/?p=32173#comment-349513">
			February 24, 2006 at 12:58 am</a>		</div>

		<p>Raymond,</p>
<p>You should add a disclaimer, that tool helper library is not safe to use in product system. They read other processes&#8217; memory without synchronization. As a result it may corrupt other processes&#8217; memory.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-349533">
				<div id="div-comment-349533" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Purplet</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060223-14/?p=32173#comment-349533">
			February 24, 2006 at 4:22 am</a>		</div>

		<blockquote><p>
  &gt; They read other processes&#8217; memory without synchronization.</p>
<p>How can this corrupt other processes&#8217; memory ?</p>
<p>I can see how it can potentially read corrupted/invalid data, but not how it can corrupt other processes memory [other than faulting, but I hope the OS will check for these..]
</p></blockquote>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-349543">
				<div id="div-comment-349543" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">KJK::Hyperion</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060223-14/?p=32173#comment-349543">
			February 24, 2006 at 4:30 am</a>		</div>

		<p>junfeng, that&#8217;s not true. The processes and threads list is returned atomically by the kernel, and the module and heap walkers are based on RtlQueryProcessDebugInformation, which creates a paired remote thread in the process to examine and returns a coherent, read-only snapshot. PSAPI is the unsafe one</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-349553">
				<div id="div-comment-349553" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">KJK::Hyperion</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060223-14/?p=32173#comment-349553">
			February 24, 2006 at 5:28 am</a>		</div>

		<p>Oh, Raymond, you may want to use RTL_CONTAINS_FIELD instead of FIELD_OFFSET + sizeof</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-junfeng even thread-even depth-1" id="comment-349823">
				<div id="div-comment-349823" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Junfeng+Zhang' rel='external nofollow' class='url'>Junfeng Zhang</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060223-14/?p=32173#comment-349823">
			February 24, 2006 at 3:52 pm</a>		</div>

		<p>I stand correct. </p>
<p>Going kernel does not mean it is safe. Unless you freeze the process in question, reading the process information while the process is running is unsafe action. </p>
<p>Creating remote thread is even more dangerous. </p>
<p>Now I did not say that you should not use those APIs. The chance of causing problem is rare and the usefulness of the information is apparent. But you do need a disclaimer just in case.</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

