<html>
<head>
<title>Why don't context menus respect the UI state for keyboard accelerators?</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>Why don&#8217;t context menus respect the UI state for keyboard accelerators?</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>January 12, 2018 / year-entry #10</td></tr>
<tr><td><b>Tags:</b></td><td>code</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20180112-00/?p=97785</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>0</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">Well, technically, they're a separate window.</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>
The <code>WM_</code><code>CHANGE&shy;UI&shy;STATE</code> message
lets you manipulate the UI state of a window,
which controls whether keyboard accelerators and other UI affordances
are shown.
Let's use it to try to control the mnemonics of a window.
Start with
<a HREF="https://blogs.msdn.microsoft.com/oldnewthing/20030723-00/?p=43073">
the scratch program</a>
and make these changes:
</p>
<pre>
BOOL
OnCreate(HWND hwnd, LPCREATESTRUCT lpcs)
{
  <font COLOR=blue>CreateWindow(TEXT("button"), TEXT("&amp;Button!"),
    WS_CHILD | WS_VISIBLE | BS_AUTOCHECKBOX,
    0, 0, 200, 50, hwnd, (HMENU)100, g_hinst, 0);</font>
  return TRUE;
}

<font COLOR=blue>void OnContextMenu(HWND hwnd, HWND hwndFrom, int x, int y)
{
  auto hmenu = GetSystemMenu(hwnd, false);
  TrackPopupMenu(hmenu, TPM_RIGHTBUTTON, x, y, 0, hwnd, nullptr);
}

void OnCommand(HWND hwnd, int id, HWND hwndCtl, UINT codeNotify)
{
  if (id == 100 &amp;&amp; codeNotify == BN_CLICKED) {
    if (SendMessage(hwndCtl, BM_GETCHECK, 0, 0)) {
      SendMessage(hwnd, WM_CHANGEUISTATE,
                  MAKELONG(UIS_CLEAR, UISF_HIDEACCEL), 0);
    } else {
      SendMessage(hwnd, WM_CHANGEUISTATE,
                  MAKELONG(UIS_SET, UISF_HIDEACCEL), 0);
    }
  }
}</font>

// Add to WndProc
    <font COLOR=blue>HANDLE_MSG(hwnd, WM_COMMAND, OnCommand);
    <a HREF="https://blogs.msdn.microsoft.com/oldnewthing/20040921-00/?p=37813">HANDLE_MSG(hwnd, WM_CONTEXTMENU</a>, OnContextMenu);</font>
</pre>
<p>
This program lets you toggle the checkbox to turn keyboard cues
on and off.
The checkbox itself has an accelerator so you can verify the state.
if you right-click anywhere or hit <kbd>Shift</kbd>+<kbd>F10</kbd>,
the system menu appears as a context menu.
(Note that this program doesn't try to
<a HREF="https://blogs.msdn.microsoft.com/oldnewthing/20040921-00/?p=37813">
position the context menu
anywhere interesting when invoked from the keyboard</a>.)
</p>
<p>
Enable keyboard cues with the checkbox,
and then right-click.
Or disable keyboard cues and hit
<kbd>Shift</kbd>+<kbd>F10</kbd>,
The menu shows up and ignores your keyboard cues
settings,
instead taking its keyboard cue state based on whether
you used the mouse or keyboard to display the menu.
Same thing happens if you open the system menu by
right-clicking the title bar or hitting
<kbd>Alt</kbd>+<kbd>Space</kbd>.
</p>
<p>
What's going on?
Why isn't the menu picking up the UI cue state?
</p>
<p>
Because the menu is in a separate top-level window tree,
and keyboard cues apply to a top-level window tree.
</p>
<p>
Menus, like dialog boxes, initialize their UI state
based on the last input event.&sup1;
So they will show keyboard cues if you invoked the menu
from the keyboard,
and won't show them if you invoked the menu from the mouse.
</p>
<p>
&sup1;
The user's keyboard cues preferences override this logic.
If the preferences indicate that keyboard cues should always
be shown, then they are always shown.</p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (22)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment byuser comment-author-wndsks even thread-even depth-1 parent" id="comment-1320625">
				<div id="div-comment-1320625" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/skSdnW' rel='external nofollow' class='url'>skSdnW</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180112-00/?p=97785#comment-1320625">
			January 12, 2018 at 7:48 am</a>		</div>

		<p>&#8220;Because the menu is in a separate top-level window tree&#8221; that might be the technical reason but I assume the UI team had a discussion about this when the feature was added. The menu knows the owner window and could easily ask it if inheriting the state was the intended design.</p>

		
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-oldnewthing bypostauthor odd alt depth-2" id="comment-1320665">
				<div id="div-comment-1320665" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Raymond+Chen+-+MSFT' rel='external nofollow' class='url'>Raymond Chen - MSFT</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180112-00/?p=97785#comment-1320665">
			January 12, 2018 at 8:47 am</a>		</div>

		<p>I called this out in the next paragraph: &#8220;Menus, like dialog boxes, initialize their UI state based on the last input event.&#8221; It is by design.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment even thread-odd thread-alt depth-1" id="comment-1320645">
				<div id="div-comment-1320645" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">DWalker07</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180112-00/?p=97785#comment-1320645">
			January 12, 2018 at 7:50 am</a>		</div>

		<p>A former boss of mine would call all of this &#8220;implementation details&#8221;.  It explains why something doesn&#8217;t work in the way you would expect, but it violates the &#8220;principle of least astonishment&#8221;.)</p>
<p>But it&#8217;s good to know nevertheless.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-even depth-1 parent" id="comment-1320675">
				<div id="div-comment-1320675" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Adrian</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180112-00/?p=97785#comment-1320675">
			January 12, 2018 at 8:49 am</a>		</div>

		<p>I find the UI state much less consistent in Windows 10 than Windows 7.  For example, using the keyboard, open the Start menu, type `regedit`, and hit Enter.  The Windows 10 UAC prompt does not have the mnemonics for Yes and No marked as it did in Windows 7.  Worse, pressing Alt doesn&#8217;t show the mnemonics.  You have to press and release Alt (and then press it again if you want to use the mnemonic).</p>
<p>I&#8217;d love to see the data that showed why it was even worthwhile to introduce all the complexity (and inherent inconsistency) of UI state.  What was wrong with always showing the mnemonics?</p>

		
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-oldnewthing bypostauthor even depth-2 parent" id="comment-1320685">
				<div id="div-comment-1320685" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Raymond+Chen+-+MSFT' rel='external nofollow' class='url'>Raymond Chen - MSFT</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180112-00/?p=97785#comment-1320685">
			January 12, 2018 at 8:51 am</a>		</div>

		<p>Randomly underlined letters scream &#8220;This operating system was designed by computer nerds for computer nerds. (Regular people should just get a Mac.)&#8221; Also, what would be the point of underlining keyboard accelerators on a keyboardless system?</p>

		
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-bboorman odd alt depth-3 parent" id="comment-1320695">
				<div id="div-comment-1320695" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Brian_EE' rel='external nofollow' class='url'>Brian_EE</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180112-00/?p=97785#comment-1320695">
			January 12, 2018 at 9:26 am</a>		</div>

		<p>What&#8217;s the point of menus on a keyboardless system? People who use keyboardless systems only know how to communicate with emojis and pictures of themselves with things (erroneously) called filters.</p>

		
				</div>
		<ol class="children">
		<li class="comment even depth-4 parent" id="comment-1320705">
				<div id="div-comment-1320705" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Antonio Rodr√≠guez</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180112-00/?p=97785#comment-1320705">
			January 12, 2018 at 10:01 am</a>		</div>

		<p>Not exactly. Many people use &#8220;keyboardless systems&#8221; to do useful work (data collecting apps, medical and other sectorial apps, email and documents on-the-go, etc.). And I think that, given that their use is more critical than that of the average instagrammer, they should be taken seriously when designing an UI. And remember that all the pioneer &#8220;keyboardless systems&#8221; (Apple Newton, Psion Organizer, Palm OS, Windows CE&#8230;) implemented some sort of menu bar.</p>
<p>Anyway, I think the decision of wether to underline keyboard accelerators on the UAC confirmation dialog should be made depending on wether the device is in tablet mode or not. But I don&#8217;t know if that would be possible (the UAC dialog shows in an isolated desktop, so maybe it can&#8217;t query the tablet mode status).</p>

		
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-bboorman odd alt depth-5" id="comment-1320737">
				<div id="div-comment-1320737" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Brian_EE' rel='external nofollow' class='url'>Brian_EE</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180112-00/?p=97785#comment-1320737">
			January 12, 2018 at 11:10 am</a>		</div>

		<p>I&#8217;m used to having to use &lt;ticc&gt; [1] on Ars. Didn&#8217;t think I would need it here.</p>
<p>[1] ticc == tongue in cheek comment</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even depth-5" id="comment-1320745">
				<div id="div-comment-1320745" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Antonio Rodr√≠guez</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180112-00/?p=97785#comment-1320745">
			January 12, 2018 at 12:34 pm</a>		</div>

		<p>As the tittle text of xkcd.com/301 says: &#8220;Fun game: try to post a YouTube comment so stupid that people realize you must be joking. (Hint: this is impossible)&#8221;. Because of that, it&#8217;s advisable to always add an emoticon :-) .</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment odd alt depth-4 parent" id="comment-1320715">
				<div id="div-comment-1320715" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Yukkuri</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180112-00/?p=97785#comment-1320715">
			January 12, 2018 at 10:18 am</a>		</div>

		<p>Thanks for relegating my work on touchscreen based POS systems to the status of pointless frippery.</p>

		
				</div>
		<ol class="children">
		<li class="comment even depth-5" id="comment-1321365">
				<div id="div-comment-1321365" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">anai</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180112-00/?p=97785#comment-1321365">
			January 18, 2018 at 6:43 am</a>		</div>

		<p>&#8230; memories of &#8220;fat finger&#8221; UI work and &#8220;there is no right mouse click&#8221; (days before &#8216;long press&#8217;), and as to &#8220;hover over&#8221; helptext&#8230;.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment odd alt depth-3 parent" id="comment-1320746">
				<div id="div-comment-1320746" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">JAS</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180112-00/?p=97785#comment-1320746">
			January 12, 2018 at 1:42 pm</a>		</div>

		<p>Not only did you obfuscate the user interface by unnecessary concealment, you actively taught people to slow themselves down and use the mouse. Because now they won&#8217;t ask about the underlines and now they won&#8217;t ask how the underlines make their work faster. And they won&#8217;t be faster workers. They never are. This is just a microcosm of a bigger problem though.</p>
<p>I remember when Office/Start had &#8220;intelligent concealing menus&#8221; and the whole universe hated them, but Microsoft ignored the whole universe and invented the stupid modal Ribbon control which conceals entire pages of commands. I love those completely random brain farts mid-task. The Ribbon makes desktop as unproductive as mobile. It&#8217;s despicable. I can out-code anyone who says the Ribbon is awesome.</p>

		
				</div>
		<ol class="children">
		<li class="comment even depth-4 parent" id="comment-1320806">
				<div id="div-comment-1320806" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">xcomcmdr</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180112-00/?p=97785#comment-1320806">
			January 15, 2018 at 12:29 am</a>		</div>

		<p>The Ribbon is awesome.</p>
<p>I never got used to the bloated menus and toolbars of old Office (for example : Office XP).</p>
<p>The ribbon made my productivity way higher when I have to use Word/Excel/etc&#8230; (which I still hate, but at least it has become tolerable)</p>

		
				</div>
		<ol class="children">
		<li class="comment odd alt depth-5" id="comment-1320935">
				<div id="div-comment-1320935" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ian Yates</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180112-00/?p=97785#comment-1320935">
			January 16, 2018 at 12:14 am</a>		</div>

		<p>Agree &#8211; I&#8217;m a keyboard shortcut person when I can be, and I find the ribbon to be wonderful.  Even things like Alt+I (for Insert) and then K (for bookmark) work well and you get little tooltips appearing in the ribbon during the sequence.</p>
<p>Even the way the ribbon activates things like 2x table ribbon tabs when you&#8217;re in a table, and then if, in that table, you&#8217;ve also got a textbox, there&#8217;s a textbox tab, makes the whole process of interacting with some nested objects so much more straightforward.</p>
<p>I don&#8217;t like how people have shoehorned the ribbon into apps that really don&#8217;t need one.  But that&#8217;s not the fault of the ribbon, it&#8217;s apps trying to look modern.  Unfortunately that just rapidly look dated.  Having said that, I really miss the days where MS would come out with a UI paradigm and everyone would just follow it.  That&#8217;s definitely not the case these days &#8211; can you imagine if the ribbon was put into Office today that it&#8217;d still be cloned by everything?  I can&#8217;t :(</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment even depth-4" id="comment-1320835">
				<div id="div-comment-1320835" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Voo</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180112-00/?p=97785#comment-1320835">
			January 15, 2018 at 8:49 am</a>		</div>

		<p>This whole comment just screams  ‚Äúmy applications are designed by computer nerds for computer nerds.‚Äù</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment odd alt depth-3" id="comment-1320775">
				<div id="div-comment-1320775" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180112-00/?p=97785#comment-1320775">
			January 12, 2018 at 5:04 pm</a>		</div>

		<p>Fun fact: if you start a program requiring elevation from the command line while explorer isn&#8217;t running, the UAC box is on top without focus. /me reaches for the mouse</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-jernej-ms-live even depth-3" id="comment-1321155">
				<div id="div-comment-1321155" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/ender9' rel='external nofollow' class='url'>ender9</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180112-00/?p=97785#comment-1321155">
			January 17, 2018 at 3:26 am</a>		</div>

		<p>The whole UWP shift in Windows 10 UI is making it far less keyboard accessible. Eg. when I want to connect to a computer with Remote Desktop, with a different username than last time, I could previously press the down arrow on keyboard and immediately enter new username and password (single keypress). On Windows 10 I instead have to tab twice (down arrow doesn&#8217;t do anything) and press Enter or Spacebar &#8211; or click &#8220;More options&#8221;, then tab at least twice again (at least because if I have my smartcard inserted, it&#8217;s entries are shown between the useless first entry and the &#8220;Use another account&#8221; option; this also means that when using mouse, it&#8217;s not possible to rely on muscle memory, because the wanted entry moves around, is often hidden behind a scrollbar, and to make the matters worse, the smartcard entries don&#8217;t appear immediately, but after a short delay) and press Enter/Spacebar again before I can start typing a different username.</p>
<p>What could previously be achieved by a single button press, or a single mouse click (in a fixed position) now takes at least 6 button presses, or two mouse clicks with a variable movement between them.</p>
<p>Speaking of smartcard dialog boxes, they often appear behind the application that initiated them.</p>
<p>Login screen is also crippled &#8211; while you were once able to press Ctrl+Alt+Del and immediately start typing the password (even if the password entry box hasn&#8217;t appeared yet), you now have to wait until the password entry box appears, because any keypresses done before that are lost.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment odd alt depth-2 parent" id="comment-1320725">
				<div id="div-comment-1320725" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://geelaw.blog/' rel='external nofollow' class='url'>Gee Law</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180112-00/?p=97785#comment-1320725">
			January 12, 2018 at 10:35 am</a>		</div>

		<p>You don&#8217;t have to press Alt again to use the mnemonic. It works as if it were in Ribbon &#8212; if you always know the mnemonics, press Alt+mnemonic; otherwise, press and release Alt to see the mnemonics, and then press the needed one.</p>

		
				</div>
		<ol class="children">
		<li class="comment even depth-3 parent" id="comment-1320765">
				<div id="div-comment-1320765" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Karlis</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180112-00/?p=97785#comment-1320765">
			January 12, 2018 at 2:19 pm</a>		</div>

		<p>Is there some way to use a single button press? I&#8217;m pretty certain there was a time when in dialog boxes you could just press the mnemonic key (&#8220;Y&#8221;) instead of &#8220;Alt-Y&#8221;. I feel like I&#8217;m missing something, but I&#8217;ve been unable to figure it out (just like I never imagined pressing Alt-Y)</p>

		
				</div>
		<ol class="children">
		<li class="comment odd alt depth-4" id="comment-1320766">
				<div id="div-comment-1320766" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://geelaw.blog/' rel='external nofollow' class='url'>Gee Law</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180112-00/?p=97785#comment-1320766">
			January 12, 2018 at 4:40 pm</a>		</div>

		<p>There was and is a time. In typical Win32 dialogs (your Notepad closing unsaved file dialog) you can just press the mnemonic to invoke the action. For classical Win32 menus (your Notepad menu), you usually have to Alt+mnemonic or Alt, then mnemonic, where in the second case after you press Alt, the focus moves to the menu bar. However, in File Explorer merge conflict dialog, you cannot Alt then mnemonic, neither can you &#8220;mnemonic&#8221;, and you have to Alt+mnemonic. It seems to me that if the dialog box has no other actionable elements than buttons, the mnemonics can be invoked without Alt.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment even thread-odd thread-alt depth-1" id="comment-1320735">
				<div id="div-comment-1320735" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://english.rejbrand.se' rel='external nofollow' class='url'>Andreas Rejbrand</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180112-00/?p=97785#comment-1320735">
			January 12, 2018 at 10:46 am</a>		</div>

		<p>Of course, if you have a decent keyboard you don&#8217;t have to press Shift+F10 &#8212; just press the menu key.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-even depth-1" id="comment-1320785">
				<div id="div-comment-1320785" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Deanna</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180112-00/?p=97785#comment-1320785">
			January 12, 2018 at 5:39 pm</a>		</div>

		<p>I&#8217;d seen this randomly, but didn&#8217;t see a pattern.<br />
Depending on how it is invoked makes do much sense though!</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

