<html>
<head>
<title>Tweaking our computation of the interval between two moments in time</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>Tweaking our computation of the interval between two moments in time</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>April 15, 2005 / year-entry #94</td></tr>
<tr><td><b>Tags:</b></td><td>code</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20050415-52/?p=35893</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>6</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">We can take our computation of the interval between two moments in time and combine it with the trick we developed for using the powers of mathematics to simplify multi-level comparisons to reduce the amount of work we impose upon the time/date engine. static void PrintAge(DateTime bday, DateTime asof) { // Accumulate years without going...</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>
We can take our
<a HREF="http://blogs.msdn.com/oldnewthing/archive/2005/04/14/408106.aspx">
computation of the interval between two moments in time</a>
and combine it with the trick we developed for
<a HREF="http://blogs.msdn.com/oldnewthing/archive/2005/04/13/407835.aspx">
using the powers of mathematics to simplify multi-level comparisons</a>
to reduce the amount of work we impose upon the time/date engine.
</p>
<pre>
static void PrintAge(DateTime bday, DateTime asof)
{
 // Accumulate years without going over.
 int years = asof.Year - bday.Year;
<font COLOR=blue> if (asof.Month*32 + asof.Day &lt; bday.Month*32 + bday.Day) years--;
 DateTime t = bday.AddYears(years);</font>

 // Accumulate months without going over.
 int months = asof.Month - bday.Month;
 if (asof.Day &lt; bday.Day) months--;
 months = (months + 12) % 12;
 t = t.AddMonths(months);

 // Days are constant-length, woo-hoo!
 int days = (asof - t).Days;

 SC.WriteLine("{0} years, {1} months, {2} days",
              years, months, days);
}
</pre>
<p>
Observe that we avoided a call to the <code>AddYears</code> method
(which is presumably rather complicated because years are variable-length)
by replacing it with a multi-level comparison
to determine whether the ending month/day falls later in the year than
the starting month/day.  Since no month has 32 days, a multiplier of
32 is enough to avoid an overflow of the day into the month field
of the comparison key.</p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (6)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-270893">
				<div id="div-comment-270893" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">df</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050415-52/?p=35893#comment-270893">
			April 15, 2005 at 10:05 am</a>		</div>

		<blockquote><p>
  // Days are constant-length, woo-hoo!</p>
<p>Because of leap-seconds this is not entirely accurate. </p>
<p>There is a known law of software that anything to do with dates and times is suspect.
</p></blockquote>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-270933">
				<div id="div-comment-270933" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Jonathan Payne</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050415-52/?p=35893#comment-270933">
			April 15, 2005 at 10:21 am</a>		</div>

		<p>Does anything in Windows take account of leap seconds?  If I used an embedded version of Windows for my time machine and wanted to go back to 1601, should I pass the time machine the number of nano-seconds in the FILETIME structure for the current time or should I add on a few more for leap seconds?  I hope Microsoft isn&#8217;t ignoring the market for time machine operating systems.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-271053">
				<div id="div-comment-271053" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Norman Diamond</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050415-52/?p=35893#comment-271053">
			April 15, 2005 at 7:44 pm</a>		</div>

		<p>This has been discussed before.  Posix-compatible systems are required to have time-of-day clocks that are already incorrect by around 20 seconds, and Windows systems are compatible with that whether or not their Posix subsystems are being used.</p>
<p>The part I can&#8217;t figure out is why, after a Windows system uses NTP to nearly synchronize itself with an atomic clock (after two or three intermediaries), how come it doesn&#8217;t adjust itself to 20 seconds in the future.  Also what happens to a Posix system if it happens to execute an NTP operation during a leap second.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-271073">
				<div id="div-comment-271073" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.livejournal.com/users/merle_/' rel='external nofollow' class='url'>Merle</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050415-52/?p=35893#comment-271073">
			April 15, 2005 at 9:04 pm</a>		</div>

		<p>That&#8217;s a neat trick.  Took me a few sample cases to see that it really worked, but neat.  Could be very useful in environments like SQL Server, where the datediff() methods are way too basic: the year datediff() just subtracts the years, ignoring month and day.</p>
<p>I would, of course, expect a *much* better comment in the source code than the one you provided.</p>
<p>And, err, you didn&#8217;t avoid a call to AddYears().  Maybe you meant some other method?</p>
<p>One other question: how does .net handle daylight savings time?  I recall having to do brutal hacks to get past the fact that IE6.0 ignored DST, but 6.0a suddenly became the *only* browser to automatically adjust datetimes to reflect DST.  (meaning the timeless date arithmetic I was trying to perform lost or gained a day after rounding).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-271283">
				<div id="div-comment-271283" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ben Hutchings</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050415-52/?p=35893#comment-271283">
			April 18, 2005 at 12:00 pm</a>		</div>

		<p>Norman: NTP has a flag that the time server can use to warn that a leap second is coming up. Typical NTP clients on POSIX systems make the clock run a bit slow for a few minutes before and after that time, so the leap second is never visible.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-272463">
				<div id="div-comment-272463" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">mousic</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050415-52/?p=35893#comment-272463">
			April 22, 2005 at 2:15 pm</a>		</div>

		<p>More math?</p>
<p>static void PrintAge(DateTime bday, DateTime asof)<br />
<br />{<br />
<br />  int diffSortOf = 32*(asof.Month + 12*asof.Year) + asof.Day<br />
<br />                 &#8211; 32*(bday.Month + 12*bday.Year) &#8211; bday.Day;</p>
<p>  int years  = diffSortOf/32/12;<br />
<br />  int months = (diffSortOf % (32*12)) / 32;</p>
<p>  DateTime t = bday.AddYears(years).AddMonths(months);<br />
<br />  int days = (asof &#8211; t).Days;</p>
<p>  SC.WriteLine( &quot;{0} years, {1} months, {2} days&quot;<br />
<br />              , years, months, days);<br />
<br />}</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

