<html>
<head>
<title>How can I update my WinForms app to behave better at high DPI, or at normal DPI on very large screens?</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>How can I update my WinForms app to behave better at high DPI, or at normal DPI on very large screens?</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>June 17, 2016 / year-entry #127</td></tr>
<tr><td><b>Tags:</b></td><td>code</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20160617-00/?p=93695</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>38</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">Understanding DPI awareness.</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>
A customer had a WinForms app that was showing its age.
It didn't scale itself properly on high-DPI screens,
which means that if you ran it on a Surface Pro 4,
you got a teeny-tiny window and then you had to go
grab your magnifying glass in order to read it.
The customer noted,
"When the program is run on a large display,
it occupies only a tiny portion of the screen.
What is the least amount of work I need to do
to get this program to look less awful on large screen?
I am willing to accept blurriness
in exchange for doing less work."
</p>
<p>
The lowest level of 
DPI awareness is "none",
which is what you get if
you do not manifest your application,
you have a manifest but do not declare whether you are DPI aware,
or if you have a manifest and you declare your DPI awareness as
<code>&lt;dpiAware&gt;False&lt;/dpiAware&gt;</code>.
(The value is
<a HREF="https://blogs.msdn.microsoft.com/chuckw/2013/09/10/manifest-madness/">
not case-sensitive</a>.)
For an application that is not DPI-aware,
the operating system emulates a display that is 96 DPI:
If the program asks for the monitor's DPI,
it will be told that the monitor is 96 DPI.
If the program asks for the resolution of the screen,
the operating system adjusts the number so that
the program sees a monitor that is filled with 96 DPI pixels.
What actually happens is that the program's output is
scaled so that each pixel is one 96th of an inch square.
And the result is a little blurry because that's the nature
of scaling up.
</p>
<p>
The next level of DPI awareness is "system DPI awareness",
which is what you get if
you manifest your application as
<code>&lt;dpiAware&gt;True&lt;/dpiAware&gt;</code>.
For these applications,
the operating reports the actual DPI of the highest-DPI monitor
as the DPI of all monitors.
If the application displays a window on the highest-DPI monitor,
it is shown at actual size.
If the application displays a window on any other monitor,
it is scaled down as necessary
so that each pixel is one Xth of an inch
square, where X is the DPI of the highest-DPI monitor.
(Since the highest DPI was reported to the app,
the application's out will either be unscaled or scaled down.
Scaling down results in less blurry results than scaling up,
which is why the operating system reports the highest DPI of
any monitor.)
</p>
<p>
The third level of DPI awareness is "per-monitor DPI awareness",
which you opt into by setting
<code>&lt;dpiAware&gt;True/PM&lt;/dpiAware&gt;</code>.
This strange not-really-a-Boolean value is a trick that takes
advantage of the fact that versions of Windows prior to
Windows 8.1 checked only that the value of
<code>dpiAware</code> began with the letters t-r-u-e
and ignored any trailing junk.
As a result, a value of <code>True/PM</code> is interpreted
as <code>True</code> on older systems,
which means that an application that uses this manifest
declaration gets per-monitor DPI on Windows 8.1 and higher,
or system DPI on Windows 8 and lower.
</p>
<p>
Given the customer's willingness to accept blurriness
in exchange for doing less work,
the thing to do is to mark the program as DPI-unaware
by setting
<code>&lt;dpiAware&gt;False&lt;/dpiAware&gt;</code>
in the manifest, or leaving it out entirely.
</p>
<p>
The customer reported that they didn't have any such declaration
in their application's manifest, but they were being treated
as system DPI aware.
Some investigation revealed that
the very first line in its <code>Main</code> function
is a call to the
<code>Set&shy;Process&shy;Dpi&shy;Awareness</code> function.
That call is equivalent to setting the DPI awareness in a manifest,
but you have to call it before you do anything that is dependent
upon DPI.
</p>
<p>
Okay, so problem solved, right?
Remove the call to
<code>Set&shy;Process&shy;Dpi&shy;Awareness</code>
from the <code>Main</code> function,
and now the program will be treated as DPI-unaware,
and it will render at 96 DPI and be scaled up (blurrily)
on higher-DPI monitors.
</p>
<p>
But of course that's not the entire problem.
The customer explained that this got rid of the teeny-tiny
text,
but that wasn't the entire problem they had.
"When users run the program on a machine with a very large
screen,
the window is properly scaled, but it is not taking
advantage of the fact that the screen is a large 24-inch
monitor.
The program uses only about a third of the screen."
</p>
<p>
Okay, so the deal here is not that the program is rendering
text that is too small to be read.
The text is a perfectly readable size.
The issue is that the developer wants the program to resize
itself to something that covers more of the screen.
That's not a DPI issue;
that's just a program changing its default window size based
on the screen dimensions.
When your program starts up,
check the dimensions of the monitor it is displayed on,
do your calculations, and resize yourself if your calculations
say that you want to be bigger.
</p>
<p>
<b>Bonus reading</b>:
</p>
<ul>
<li>
    <a HREF="https://msdn.microsoft.com/library/windows/desktop/ee308410(v=vs.85).aspx">
    Developing a Per-Monitor DPI-Aware WPF Application</a></p>
<li>
    <a HREF="http://www.telerik.com/blogs/winforms-scaling-at-large-dpi-settings-is-it-even-possible-">
    WinForms Scaling at Large DPI Settings-Is It Even Possible?</a>
</ul>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (38)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1 parent" id="comment-1252905">
				<div id="div-comment-1252905" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Zarat</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160617-00/?p=93695#comment-1252905">
			June 17, 2016 at 7:10 am</a>		</div>

		<p>What I don&#8217;t get is why Microsoft didn&#8217;t let it default to &#8220;not dpi aware, enable upscaling&#8221; unless the program actively opts in. So many programs don&#8217;t handle high dpi but somehow end up not being scaled, including a lot of Microsofts own programs. Makes me hate working on high DPI machines.</p>

		
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-mzzt odd alt depth-2 parent" id="comment-1252935">
				<div id="div-comment-1252935" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/The+MAZZTer' rel='external nofollow' class='url'>The MAZZTer</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160617-00/?p=93695#comment-1252935">
			June 17, 2016 at 7:27 am</a>		</div>

		<p>According to Raymond&#8217;s article here, that IS the default. The program was declaring itself as DPI aware (the developer probably did not like the blurriness and didn&#8217;t have the visual resources to make it look nice at high-DPI).</p>

		
				</div>
		<ol class="children">
		<li class="comment even depth-3 parent" id="comment-1252946">
				<div id="div-comment-1252946" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Zarat</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160617-00/?p=93695#comment-1252946">
			June 17, 2016 at 7:54 am</a>		</div>

		<p>&#8220;The lowest level of DPI awareness is &#8220;none&#8221;, which is what you get if you do not manifest your application,&#8221;</p>
<p>I&#8217;m reading that as &#8220;once you have a manifest you have to opt-out&#8221;, which is stupid, because these days most applications have a manifest.</p>

		
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-oldnewthing bypostauthor odd alt depth-4" id="comment-1252985">
				<div id="div-comment-1252985" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Raymond+Chen+-+MSFT' rel='external nofollow' class='url'>Raymond Chen - MSFT</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160617-00/?p=93695#comment-1252985">
			June 17, 2016 at 8:26 am</a>		</div>

		<p>I updated the text to clarify. &#8220;none&#8221; is the default.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment byuser comment-author-davebacher even depth-3" id="comment-1253675">
				<div id="div-comment-1253675" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Dave+Bacher' rel='external nofollow' class='url'>Dave Bacher</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160617-00/?p=93695#comment-1253675">
			June 23, 2016 at 4:46 pm</a>		</div>

		<p>High DPI in 2009 is different from High DPI in 2016.</p>
<p>12&#8243; panels running at 2160&#215;1440 weren&#8217;t a thing in 2009.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1252915">
				<div id="div-comment-1252915" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">SI</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160617-00/?p=93695#comment-1252915">
			June 17, 2016 at 7:14 am</a>		</div>

		<p>Semi related: Is there a simple way of converting a size in pixels in a DPI unaware app into the pixel size on the native display? We needed to hack together a function that did this because the coordinates used by ::SHAppBarMessage are not scaled for DPI unaware apps, which means that not the entire area covered by the window is removed from the monitor&#8217;s work area.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1 parent" id="comment-1252925">
				<div id="div-comment-1252925" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Huw</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160617-00/?p=93695#comment-1252925">
			June 17, 2016 at 7:22 am</a>		</div>

		<p>Customer to Microsoft &#8211; &#8220;Please code our entire program because we are too lazy&#8221;</p>

		
				</div>
		<ol class="children">
		<li class="comment odd alt depth-2" id="comment-1253315">
				<div id="div-comment-1253315" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">RKZENITH</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160617-00/?p=93695#comment-1253315">
			June 21, 2016 at 8:53 am</a>		</div>

		<p>No, it just reminds me of how weird/wrong DPI awareness can be.  You read 100 articles and all have their own special little tricks that kindof sortof work at the moment unless you do this or that and it explodes.  It&#8217;s too much like web design, especially that bit about only looking for t-r-u-e which is right along the same lines as various CSS selector tricks.</p>
<p>Right after obscure metadata flags and manifests, the next biggest problem is the Visual Studio designer itself and its propensity to change or hide properties and then crash into a heap, expecting you to sort out whatever unwanted cruft it decided to choke on.  I almost miss the way we used to have to set up GUIs in Visual C++ 6, as much of a mystery as some of that MFC/AFX macro syntax was at times.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment byuser comment-author-dwalker-wk even thread-odd thread-alt depth-1 parent" id="comment-1252945">
				<div id="div-comment-1252945" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/DWalker' rel='external nofollow' class='url'>DWalker</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160617-00/?p=93695#comment-1252945">
			June 17, 2016 at 7:53 am</a>		</div>

		<p>I have been planning to get a large, high DPI monitor, but even with Windows 10, some things don&#8217;t look good yet (including some tiny dialog boxes that show up at installation, which is probably unavoidable during installation when the system isn&#8217;t fully &#8220;there&#8221; yet).  So I haven&#8217;t.</p>
<p>I wish monitors for sale weren&#8217;t getting so &#8220;wide and short&#8221;.  My current 26-inch monitors are 1920 wide by 1200 tall; I had to search to find one that wasn&#8217;t 1920 wide by only 1080 tall.  </p>
<p>I WANT my monitors to be 1920 wide by 1600 tall.  :-)  I have unused vertical space between the bottom of my monitors and the top of my desk, and that space could be filled with lines of code that I am working on!!!  </p>
<p>If I could find the right monitor.  Sigh.</p>

		
				</div>
		<ol class="children">
		<li class="comment odd alt depth-2" id="comment-1252955">
				<div id="div-comment-1252955" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Neyah</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160617-00/?p=93695#comment-1252955">
			June 17, 2016 at 8:11 am</a>		</div>

		<p>There are also lots of monitors that are 1080 wide by 1920 tall.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even depth-2" id="comment-1252975">
				<div id="div-comment-1252975" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">creaothceann</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160617-00/?p=93695#comment-1252975">
			June 17, 2016 at 8:17 am</a>		</div>

		<p>@DWalker: Easy, just lower your monitor until it rests on the desk. :)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt depth-2 parent" id="comment-1252995">
				<div id="div-comment-1252995" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Antonio Rodríguez</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160617-00/?p=93695#comment-1252995">
			June 17, 2016 at 8:55 am</a>		</div>

		<p>Also, buy two ultra-wide (i.e., 2.35:1) monitors and place one on top of the other. Just kidding.</p>
<p>I understand the consumer wants panoramic monitors for viewing films and TV, but they are terrible for web browsing and productivity applications (coding is, perhaps, one of the few exceptions when you realize that two code windows fit nicely side-by-side at 16:9). Why on Earth don&#8217;t makers of &#8220;professional&#8221; equipment realize this and make 4:3 or 1:1 monitors?</p>

		
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-dwalker-wk even depth-3 parent" id="comment-1253035">
				<div id="div-comment-1253035" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/DWalker' rel='external nofollow' class='url'>DWalker</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160617-00/?p=93695#comment-1253035">
			June 17, 2016 at 9:33 am</a>		</div>

		<p>Right, I think that a 1:1 monitor would be fine for coding.  </p>
<p>I could set three 16:9 monitors side by side, turned vertically, but that&#8217;s not ideal.  a 1:1 ratio monitor would be ideal, at 1920 x 1920.</p>

		
				</div>
		<ol class="children">
		<li class="comment odd alt depth-4 parent" id="comment-1253045">
				<div id="div-comment-1253045" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Young</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160617-00/?p=93695#comment-1253045">
			June 17, 2016 at 9:45 am</a>		</div>

		<p>See FlexScan EV2730Q; it&#8217;s a 1920&#215;1920 S-IPS panel, but they&#8217;re shipped from Japan and about $1400.</p>

		
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-dwalker-wk even depth-5" id="comment-1253245">
				<div id="div-comment-1253245" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/DWalker' rel='external nofollow' class='url'>DWalker</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160617-00/?p=93695#comment-1253245">
			June 20, 2016 at 11:37 am</a>		</div>

		<p>Nice!  That&#8217;s what I need.   I have also found some other industrial monitors that are square; intended for medical applications like looking at X-rays and mammograms; and they are about $11,000 each.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment odd alt depth-3" id="comment-1253165">
				<div id="div-comment-1253165" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">smf</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160617-00/?p=93695#comment-1253165">
			June 19, 2016 at 1:25 pm</a>		</div>

		<p>Actually I think panoramic monitors are better for your health. Up/down eye or head movement is more tiring than left/right.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment byuser comment-author-alexcohn even depth-2" id="comment-1253125">
				<div id="div-comment-1253125" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Alex+Cohn' rel='external nofollow' class='url'>Alex Cohn</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160617-00/?p=93695#comment-1253125">
			June 18, 2016 at 8:55 am</a>		</div>

		<p>Yes, the installer could be easily poisoned by some DPI-aware component, see <a href="https://blogs.msdn.microsoft.com/oldnewthing/20160617-00/?p=93695#comment-1253025" rel="nofollow">https://blogs.msdn.microsoft.com/oldnewthing/20160617-00/?p=93695#comment-1253025</a></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt depth-2" id="comment-1253155">
				<div id="div-comment-1253155" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">smf</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160617-00/?p=93695#comment-1253155">
			June 19, 2016 at 2:47 am</a>		</div>

		<p>@DWalker Buy a 2560 by 1600 monitor that doesn&#8217;t stretch and then set a custom resolution. You can use the extra black lines on either side of the screen to store more post it notes.</p>
<p>&#8220;I WANT my monitors to be 1920 wide by 1600 tall&#8221;</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1252965">
				<div id="div-comment-1252965" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">George</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160617-00/?p=93695#comment-1252965">
			June 17, 2016 at 8:12 am</a>		</div>

		<p>I noticed that Explorer has the setting explorer. I could not find any documentation about it. My guess is that it is a special setting that allows Explorer to turn on DPI awareness per shell extension. But in that case &#8211; HOW do you actually make a DPI aware shell extension, in particular one that is per-monitor aware?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1 parent" id="comment-1253005">
				<div id="div-comment-1253005" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Antonio Rodríguez</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160617-00/?p=93695#comment-1253005">
			June 17, 2016 at 8:58 am</a>		</div>

		<p>I wonder why Microsoft didn&#8217;t add a new  setting in Windows 8.1, instead of the queer True/PM. {{Cue True/False/FileNotFound joke here}}</p>

		
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-wndsks even depth-2 parent" id="comment-1253085">
				<div id="div-comment-1253085" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/skSdnW' rel='external nofollow' class='url'>skSdnW</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160617-00/?p=93695#comment-1253085">
			June 17, 2016 at 3:13 pm</a>		</div>

		<p>They did, it is called &#8220;Per-monitor&#8221; but is rather useless since Vista/7/8.0 treats the app as DPI-unaware if you use that value.</p>

		
				</div>
		<ol class="children">
		<li class="comment odd alt depth-3 parent" id="comment-1253225">
				<div id="div-comment-1253225" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Wayne</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160617-00/?p=93695#comment-1253225">
			June 20, 2016 at 9:52 am</a>		</div>

		<p>“True/PM”</p>
<p>How does something like that get past code reviews?  Why not just add another property that works in conjunction with  instead of overloading a boolean property?  It doesn&#8217;t seem like this terrible hack is actually needed.</p>

		
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-jeremytais even depth-4 parent" id="comment-1253375">
				<div id="div-comment-1253375" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/SimonRev' rel='external nofollow' class='url'>SimonRev</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160617-00/?p=93695#comment-1253375">
			June 21, 2016 at 1:23 pm</a>		</div>

		<p>While neither agreeing or disagreeing with the design, I can see the logic:</p>
<p>If you add a completely new state to the property (true / false / per-monitor), you break things on Windows 7.</p>
<p>If you add a new property you potentially break things on Windows 7 (what if they set the new property to true, but omit the  property, thereby letting it default to false?).</p>
<p>At least this way every valid permutation is both forward and backward compatible.  I suspect that is how it passed code review.</p>

		
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-jeremytais odd alt depth-5" id="comment-1253385">
				<div id="div-comment-1253385" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/SimonRev' rel='external nofollow' class='url'>SimonRev</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160617-00/?p=93695#comment-1253385">
			June 21, 2016 at 1:25 pm</a>		</div>

		<p>Bah, stupid forum engine removed my XML tag rather than escaping it.  My post should have said:</p>
<p>If you add a new property you potentially break things on Windows 7 (what if they set the new property to true, but omit the (dpiAware) property, thereby letting it default to false?).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-davebacher even depth-5" id="comment-1253655">
				<div id="div-comment-1253655" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Dave+Bacher' rel='external nofollow' class='url'>Dave Bacher</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160617-00/?p=93695#comment-1253655">
			June 23, 2016 at 3:41 pm</a>		</div>

		<p>Personally, I usually just test the first character &#8212; and I usually default to true.  Carry over from what they used to teach when I was growing up &#8212; anything not false is true, and then why make whoever is editing type the entire word, they might have a audio cassette player as their only storage.</p>
<p>Anyway &#8212; the easy way to implement high DPI is to have each app render to a texture in the background, then map that to a quad.  Your low DPI app just sets up the texture at the lower resolution.</p>
<p>In that event, if you have an array with the hard coded DPI in the first element, the system DPI in the second element, and then the real resolutions past that, you can use just bitwise operators and a couple variables to return the correct DPI.  If you used that approach, it&#8217;d be less costly than a compare and jump &#8211;but it&#8217;d become really important that you only set those variables if you were in high DPI mode, or else really stupid things would happen.</p>
<p>And so in that case, you might want a single element &#8212; that&#8217;d particularly be the case with XML if you allowed the elements to occur in any order in the file.  I&#8217;d envision a dispatch table checking the element name and then calling some function to do the work &#8212; and so if you allow the elements to occur in any order, you&#8217;d have issues setting up the mask directly.  You&#8217;d have to set some variables and process them only after the entire manifest was parsed.</p>
<p>That&#8217;s a lot harder to verify as correct, too.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment byuser comment-author-scott-brickey odd alt thread-even depth-1" id="comment-1253015">
				<div id="div-comment-1253015" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Scott+Brickey' rel='external nofollow' class='url'>Scott Brickey</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160617-00/?p=93695#comment-1253015">
			June 17, 2016 at 9:04 am</a>		</div>

		<p>Raymond, would you consider the implementation of checking dpiAware if it begins with t-r-u-e to be foresight, or dumb luck? Obviously in hindsight there are benefits (not that a second XML element/attribute is a huge impact), but just curious how the implementation came to be.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-odd thread-alt depth-1" id="comment-1253025">
				<div id="div-comment-1253025" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Josh</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160617-00/?p=93695#comment-1253025">
			June 17, 2016 at 9:28 am</a>		</div>

		<p>I had an old winforms app that was not dpi aware, yet it kept being rendered as if it was dpi aware. We set all the obvious switches to disable being dpi awareness, yet it still was being rendered tiny and dpi aware. It took us weeks to figure out that in one small corner of our app, we hosted a WPF control, and that control was telling the entire application that we were high dpi aware. </p>
<p>The fix? In our assemblyinfo.cs file, add a line for<br />
[assembly: System.Windows.Media.DisableDpiAwareness]</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-even depth-1 parent" id="comment-1253055">
				<div id="div-comment-1253055" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">pete.d</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160617-00/?p=93695#comment-1253055">
			June 17, 2016 at 10:01 am</a>		</div>

		<p>Very useful information.</p>
<p>However, it also reminds me of Microsoft&#8217;s annoying habit of fiddling with this every OS revision, and in particular the latest incarnation of DPI-handling, in Windows 10.</p>
<p>Previously, you would just set the scaling of the fonts. This actually worked pretty well for most applications, as control sizes would scale up accordingly, and the text would still be rendered sharply. It did have the problem that some programs didn&#8217;t provide enough wiggle room in the layout, so some text got truncated or otherwise hidden. But that came up rarely, and IMHO was less of an issue than *always* having to ready fuzzy text.</p>
<p>Then the default became (in 7 or 8, I forget which) this new approach where the program was rendered at the nominal 96 dpi no matter what and then scaled up, producing a fuzzy image. This fixed the layout issue, but at the cost of visual quality. Fortunately, the display settings still included a check box to revert to the previous behavior, scaling just the fonts and not the entire window.</p>
<p>Sadly, Windows 10 has removed this capability, for the most part. Yes, there&#8217;s a way to set specific UI fonts individually, but it&#8217;s a pain to use and is based on specific font sizes instead of percentages. And to effectively use that part of the UI, you have to set the nominal display scaling to 100%, making all the DPI-aware programs too small. There is a &#8220;compatibility tab&#8221; setting that will revert to the old behavior for specific programs, but that&#8217;s a royal pain, having to track down every program you think you might use and which needs to be toggled off. I guess that wouldn&#8217;t be so bad, except that the set of programs that need that setting toggled off includes a number of programs included with the OS (e.g. Device Manager).</p>
<p>The not-DPI-aware experience sucks in some respect no matter what one does. But IMHO, visual quality has to take precedence. The default for not-DPI-aware programs should have been to scale the fonts and render at the real resolution. If an option needed to be provided, it should have been for the &#8220;render at 96dpi and scale up to the monitor&#8221; behavior, so users have to opt-in for fuzzy, hard-to-read text.</p>

		
				</div>
		<ol class="children">
		<li class="comment even depth-2 parent" id="comment-1253166">
				<div id="div-comment-1253166" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">smf</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160617-00/?p=93695#comment-1253166">
			June 19, 2016 at 1:31 pm</a>		</div>

		<p>&#8220;Previously, you would just set the scaling of the fonts. This actually worked pretty well for most applications, as control sizes would scale up accordingly&#8221;</p>
<p>Most apps didn&#8217;t handle it properly at all. It also doesn&#8217;t work well for multiple monitors, when the monitors have different dpi. Most people gave up and either put up with small fonts, or bought a lower dpi monitor.</p>
<p>The problem is still not fixed &amp; I can still cope with 1920&#215;1080. I would have got a 4k laptop a couple of months ago, but I don&#8217;t think my eyes could have taken it.</p>

		
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-zlynx odd alt depth-3" id="comment-1253255">
				<div id="div-comment-1253255" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Zan+Lynx%27' rel='external nofollow' class='url'>Zan Lynx'</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160617-00/?p=93695#comment-1253255">
			June 20, 2016 at 2:47 pm</a>		</div>

		<p>I&#8217;ve got a Dell m3800 with the 4K screen and I love it. However, there are many Java apps that don&#8217;t do DPI. Number one of these is Eclipse.</p>
<p>I was doing some hacking on an Intel Edison using their Eclipse-based IDE and I had to use the magnifier tool to read the icons.</p>
<p>So, scaling just the text in an application is not really a good idea.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment even thread-odd thread-alt depth-1" id="comment-1253075">
				<div id="div-comment-1253075" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Yuri Khan</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160617-00/?p=93695#comment-1253075">
			June 17, 2016 at 11:44 am</a>		</div>

		<p>DPI is the wrong unit. Or, rather, misleading.</p>
<p>A TV screen or, god forbid, a projector has very low DPI, so if you display actual honest-to-goodness 10pt (5/36 inch) text on it, there are not enough device pixels to make it legible. The system has to cope by lying about the DPI in order to present the user(s) with readable text.</p>
<p>The important unit is device pixels per degree. An inch at one standard arm’s length is about two degrees. So, 24 DPI at 3 meters is roughly the same visual density as the ordinary monitor DPI at 70 cm.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-even depth-1" id="comment-1253095">
				<div id="div-comment-1253095" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Antti Huovilainen</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160617-00/?p=93695#comment-1253095">
			June 17, 2016 at 3:40 pm</a>		</div>

		<p>There is an important special case where you can scale up without any blurriness: any integer ratio. Apple exploited this when introducing retina displays. IMO this is the only way to scale legacy apps that doesn&#8217;t result in awful blurriness and headache due to squinting.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-odd thread-alt depth-1" id="comment-1253105">
				<div id="div-comment-1253105" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160617-00/?p=93695#comment-1253105">
			June 17, 2016 at 5:22 pm</a>		</div>

		<p>In testing Windows Forms, I found that WIndows Forms code by default is high DPI enabled if you use the forms designer or place things in the constructor, and not high DPI enabled otherwise.</p>
<p>There are two bugs, both of the same type. CheckedListBoxControl and CheckboxControl have a hardcoded 13 for checkbox size. Thankfully you can get at it easily and change it in a derived class. (13 * DPI + 48) / 96 works just fine.</p>
<p>Incidentally, I found that almost all ancient programs do not support high DPI. I loaded the old-school smash all anti-aliasing settings to keep the blur from doing something dumb; however if you load a web browser control you will get an accessibility bug filed against you. (This recreates the really stupid accessibility bug that I had to make the jump to high DPI to fix.)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-even depth-1" id="comment-1253175">
				<div id="div-comment-1253175" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Jolyon Direnko-Smith</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160617-00/?p=93695#comment-1253175">
			June 19, 2016 at 4:29 pm</a>		</div>

		<p>&#8220;True/PM&#8221; &#8230; oh what a shame.  Such a Golden Opportunity, missed.</p>
<p>If Windows 8.0 only checks for &#8220;t-r-u-e&#8221; in the first 4 characters of this value, then it would have been possible to use a more completely accurate value to achieve the same end.  Specifically:</p>
<p>    t-r-u-e-r</p>
<p>This would even have left room for future improvements in DPI awareness being signalled with:</p>
<p>    t-r-u-e-r-s-t-i-l-l</p>
<p>(Not being entirely serious, obviously.  Or at all in fact)  :)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-odd thread-alt depth-1 parent" id="comment-1253176">
				<div id="div-comment-1253176" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">MarcK4096</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160617-00/?p=93695#comment-1253176">
			June 20, 2016 at 6:37 am</a>		</div>

		<p>I think a lot of programs set the DPI aware flag to true just to avoid blurriness back when 125% was the most that might be set.  Now that 4K monitors are becoming more common, this bad decision is coming out of hiding.</p>

		
				</div>
		<ol class="children">
		<li class="comment odd alt depth-2" id="comment-1253275">
				<div id="div-comment-1253275" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">ender</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160617-00/?p=93695#comment-1253275">
			June 21, 2016 at 2:19 am</a>		</div>

		<p>At 125% Vista, 7 and 8.x did not use blurry rendering (they still used the old-style scaling) &#8211; you had to go at least 126% to get it without editing the Registry directly. I had to do this at a client that wanted to use 125%, but had a proprietary program that refused to run at anything other than 96 DPI.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1 parent" id="comment-1253265">
				<div id="div-comment-1253265" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Tihiy</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160617-00/?p=93695#comment-1253265">
			June 21, 2016 at 1:25 am</a>		</div>

		<p>While you are it, raymond, can you tell when Win10 new DPI APIs will see the light? EnableNonClientDpiScaling, EnableChildWindowDpiMessage and new per-thread stuff?</p>

		
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-oldnewthing bypostauthor odd alt depth-2" id="comment-1253465">
				<div id="div-comment-1253465" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Raymond+Chen+-+MSFT' rel='external nofollow' class='url'>Raymond Chen - MSFT</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160617-00/?p=93695#comment-1253465">
			June 22, 2016 at 9:31 am</a>		</div>

		<p>I don&#8217;t know.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

