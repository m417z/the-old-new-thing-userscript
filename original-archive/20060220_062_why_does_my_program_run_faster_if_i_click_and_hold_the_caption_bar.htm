<html>
<head>
<title>Why does my program run faster if I click and hold the caption bar?</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>Why does my program run faster if I click and hold the caption bar?</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>February 20, 2006 / year-entry #63</td></tr>
<tr><td><b>Tags:</b></td><td>code</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20060220-00/?p=32233</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>46</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">Sometimes, people discover that a long-running task runs faster if you hold down the mouse. How can that be? This strange state of affairs typically results when a program is spending too much time updating its progress status and not enough time actually doing work. (In other words, the programmer messed up badly.) When you...</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>
Sometimes, people discover that a long-running task
runs faster if you hold down the mouse.
How can that be?
</p>
<p>
This strange state of affairs
typically results when a program is spending too much time
updating its progress status and not enough time actually doing work.
(In other words, the programmer messed up badly.)
When you click and hold the mouse over the caption bar,
the window manager waits for the next mouse message
so it can determine whether
you are clicking on the caption or attempting to drag.
During this waiting, window painting is momentarily suppressed.
</p>
<p>
That's why the program runs faster:
No window painting means less CPU spent updating something
faster than you can read it anyway.
Let's illustrate this with a sample program.
Start with
<a HREF="http://blogs.msdn.com/oldnewthing/archive/2005/04/22/410773.aspx">
the new scratch program</a>
and make the following changes:
</p>
<pre>
class RootWindow : public Window
{
public:
 virtual LPCTSTR ClassName() { return TEXT("Scratch"); }
 static RootWindow *Create();
 <font COLOR=blue>void PaintContent(PAINTSTRUCT *pps);</font>
protected:
 LRESULT HandleMessage(UINT uMsg, WPARAM wParam, LPARAM lParam);
 LRESULT OnCreate();
 <font COLOR=blue>static DWORD CALLBACK ThreadProc(void *p);</font>
private:
 HWND m_hwndChild;
 <font COLOR=blue>int m_value;</font>
};

LRESULT RootWindow::OnCreate()
{
 <font COLOR=blue>QueueUserWorkItem(ThreadProc, this, WT_EXECUTELONGFUNCTION);</font>
 return 0;
}

<font COLOR=blue>void RootWindow::PaintContent(PAINTSTRUCT *pps)
{
 TCHAR sz[256];
 int cch = wnsprintf(sz, 256, TEXT("%d"), m_value);
 ExtTextOut(pps-&gt;hdc, 0, 0, 0, &amp;pps-&gt;rcPaint, sz, cch, 0);
}

DWORD RootWindow::ThreadProc(void *p)
{
 RootWindow*self = reinterpret_cast&lt;RootWindow*&gt;(p);
 for (int i = 0; i &lt; 100000; i++) {
  self-&gt;m_value++;
  InvalidateRect(self-&gt;m_hwnd, NULL, NULL);
 }
 MessageBeep(-1);
 return 0;
}</font>
</pre>
<p>
This program fires up a background thread that counts up to 100,000
and invalidates the foreground window each time the value changes.
Run it and watch how fast the numbers count up to 100,000.
(I added a little beep when the loop is finished so you can judge
the time by listening.)
</p>
<p>
Now run it again, but this time, click and hold the mouse on the title bar.
Notice that the program beeps almost immediately:
It ran faster when you held the mouse down.
That's because all the painting was suppressed by the
maybe-a-drag-operation-is-in-progress that was triggered when you
clicked and held the caption.
</p>
<p>
Updating the screen at every increment is clearly pointless
because you're incrementing far faster than the screen can refresh,
not to mention far faster than the human eye can read it.
As a rule of thumb, changing progress status
faster than ten times per second is generally pointless.
The effort you're spending on the screen updates is wasted.
</p>
<p>
Let's fix our sample program to update at most ten times per second.
We will run a timer at 100ms which checks if anything has changed
and repaints if so.
</p>
<pre>
class RootWindow : public Window
{
 ...
 <font COLOR=blue>LONG m_fChanged;</font>
};

DWORD RootWindow::ThreadProc(void *p)
{
 RootWindow*self = reinterpret_cast&lt;RootWindow*&gt;(p);
 for (int i = 0; i &lt; 100000; i++) {
  self-&gt;m_value++;
  <font COLOR=blue>InterlockedCompareExchangeRelease(&amp;m_fChanged, TRUE, FALSE);</font>
 }
 MessageBeep(-1);
 return 0;
}

LRESULT RootWindow::OnCreate()
{
 QueueUserWorkItem(ThreadProc, this, WT_EXECUTELONGFUNCTION);
 <font COLOR=blue>SetTimer(m_hwnd, 1, 100, NULL);</font>
 return 0;
}

LRESULT RootWindow::HandleMessage(
                          UINT uMsg, WPARAM wParam, LPARAM lParam)
{
  ...
  <font COLOR=blue>case WM_TIMER:
   switch (wParam) {
   case 1:
    if (InterlockedCompareExchangeAcquire(&amp;m_fChanged,
                                                   FALSE, TRUE)) {
      if (m_value &gt;= 100000) {
        KillTimer(m_hwnd, 1);
      }
      InvalidateRect(m_hwnd, NULL, FALSE);
    }
   }
   break;</font>
   ...
}
</pre>
<p>
Instead of updating the screen each time the counter changes value,
we merely set a "hey, something changed" flag and check it on our
timer.
We set the flag with release semantics in the producer thread
(because we want all pending stores to complete before the exchange
occurs) and clear the flag with acquire semantics in the consumer
thread
(because we don't want any future stores to be speculated ahead
of the exchange).
</p>
<p>
Run the program again and notice that it counts all the way
up to 100,000 instantly.
Of course, that doesn't really demonstrate the progress counter,
so insert a <code>Sleep(1);</code> into the loop:
</p>
<pre>
DWORD RootWindow::ThreadProc(void *p)
{
 RootWindow*self = reinterpret_cast&lt;RootWindow*&gt;(p);
 for (int i = 0; i &lt; 100000; i++) {
  self-&gt;m_value++;
  InterlockedCompareExchangeRelease(&amp;m_fChanged, TRUE, FALSE);
  <font COLOR=blue>Sleep(1);</font>
 }
 MessageBeep(-1);
 return 0;
}
</pre>
<p>
This slows down the loop enough that you can now see the values
being incremented.
It's not the dizzying incrementing that you saw in the original
version, but it's fast enough that people will get the point.
</p>
<p>
The mechanism I used to pass information between the background and
foreground thread assumed that background changes were comparatively
frequent, so that the timer will nearly always see something worth
doing.
If you have a mix of fast and slow tasks, you could change the
communication mechanism so that the timer shut itself off when
it noticed that some time has elapsed with no changes.
The background thread would then have to start the timer again
when it resumed updating the value.
I didn't bother writing this more complicated version because it
would just be a distraction from the point of the article.</p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (46)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-347893">
				<div id="div-comment-347893" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">8</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060220-00/?p=32233#comment-347893">
			February 20, 2006 at 10:33 am</a>		</div>

		<p>Suppose progress is undetermined (for instance when transferring a file of unknown size), how many milliseconds would you pass the progress bar control with PBM_SETMARQUEE?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-347913">
				<div id="div-comment-347913" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Stu</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060220-00/?p=32233#comment-347913">
			February 20, 2006 at 11:12 am</a>		</div>

		<p>I remember old install programs that used to display the name of every file being copied.</p>
<p>I was thought the install ran faster when it was minimized, but I didn&#8217;t think that copying even a small file could possibly be quicker that painting the file name. Is it possible that a CD-ROM file copy could be faster than Windows&#8217; font painting?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-347923">
				<div id="div-comment-347923" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">James</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060220-00/?p=32233#comment-347923">
			February 20, 2006 at 11:13 am</a>		</div>

		<p>VTE (the terminal emulator behind gnome-terminal) recently had something similar done, so it updates 40 times/second max. <a rel="nofollow" target="_new" href="http://mail.gnome.org/archives/performance-list/2006-February/msg00006.html" rel="nofollow">http://mail.gnome.org/archives/performance-list/2006-February/msg00006.html</a></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-347933">
				<div id="div-comment-347933" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">8</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060220-00/?p=32233#comment-347933">
			February 20, 2006 at 11:20 am</a>		</div>

		<p>Font rendering has been improved too. Here&#8217;s a nice overview of everything new and better:</p>
<p><a rel="nofollow" target="_new" href="http://www.gnome.org/~davyd/gnome-2-14/" rel="nofollow">http://www.gnome.org/~davyd/gnome-2-14/</a></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-347943">
				<div id="div-comment-347943" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Miles Archer</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060220-00/?p=32233#comment-347943">
			February 20, 2006 at 11:21 am</a>		</div>

		<p>On VAX (VMS) if a system had a heavy load and was sluggish, it would seem to give your process more resources if you hit Ctrl-T frequently. Don&#8217;t know if this was mere superstition or if it really worked. It&#8217;s kind of the opposite of what this case, though.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-347963">
				<div id="div-comment-347963" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Adrian</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060220-00/?p=32233#comment-347963">
			February 20, 2006 at 11:41 am</a>		</div>

		<p>Miles: &nbsp;VMS, like many timesharing systems, would give your process a small, temporary priority boost whenever there was an interaction (like typing). &nbsp;Hitting Ctrl+T probably had no direct effect, but you might get a short priority boost which gives you a few more cycles for a second or two.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-347983">
				<div id="div-comment-347983" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://ebersys.blogspot.com' rel='external nofollow' class='url'>Eber Irigoyen</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060220-00/?p=32233#comment-347983">
			February 20, 2006 at 11:58 am</a>		</div>

		<p>ah!&#8230; the Windows copy has always had this problem then!<br />
<br />I have noticed many times when I&#8217;m copying files, that when I click in some other window the &quot;time left&quot; would go, say to 15 minutes, if I click back in the &quot;copying window&quot; the times goes to 3 minutes, not only that, but the progress bar does seem to move faster</p>
<p>is this related to the same thing?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-348013">
				<div id="div-comment-348013" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Graham Bradshaw</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060220-00/?p=32233#comment-348013">
			February 20, 2006 at 1:09 pm</a>		</div>

		<p>@Eber&#8230;</p>
<p>This might be because Windows gives a higher priority to the foreground window.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-348033">
				<div id="div-comment-348033" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">asdf</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060220-00/?p=32233#comment-348033">
			February 20, 2006 at 2:56 pm</a>		</div>

		<p>On my computer, programs that do (disk) IO with a large amount of data can be sped up noticeably if you change their priority to idle. Fortunately winrar has an option for this so I don&#8217;t have to keep manually setting it.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-348043">
				<div id="div-comment-348043" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.csc.calpoly.edu/~bfriesen/' rel='external nofollow' class='url'>Brian Friesen</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060220-00/?p=32233#comment-348043">
			February 20, 2006 at 3:33 pm</a>		</div>

		<p>Thanks for the explaination. &nbsp;I have noticed that in the past with programs, but I assumed it was my imagination. &nbsp;After all it didn&#8217;t make sense how this could make some programs faster.<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-348063">
				<div id="div-comment-348063" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Isaac Lin</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060220-00/?p=32233#comment-348063">
			February 20, 2006 at 4:04 pm</a>		</div>

		<p>I used to notice this while watching streaming video from ifilm.com (can&#8217;t remember if I was using RealPlayer or Windows Media Player, though). The video was quite smooth while holding down the mouse button over the caption bar, and unwatchable otherwise.<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-348083">
				<div id="div-comment-348083" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Adrian</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060220-00/?p=32233#comment-348083">
			February 20, 2006 at 4:57 pm</a>		</div>

		<p>Isn&#8217;t this advice contrary to some of your recent posts? &nbsp;Haven&#8217;t you been recommending notification mechanisms rather than polling?</p>
<p>I&#8217;ve always thought of InvalidateRect() as a notification mechansim. &nbsp;It sets a flag that we need to do work when it&#8217;s convenient. &nbsp;The WM_PAINT message is low priority, sent when there are no other messages in the queue. &nbsp;Several InvalidateRect()s can happen before the paint message is sent. &nbsp;WM_PAINTs shouldn&#8217;t happen at some outlandish rate.</p>
<p>Can you offer a perspective that distinguishes this case (where polling is preferred) from other the other recent examples where you&#8217;ve argued against polling?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-oldnewthing bypostauthor even thread-even depth-1" id="comment-348093">
				<div id="div-comment-348093" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Raymond+Chen+-+MSFT' rel='external nofollow' class='url'>Raymond Chen - MSFT</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060220-00/?p=32233#comment-348093">
			February 20, 2006 at 5:07 pm</a>		</div>

		<p>Adrian: I discussed this in the last paragraph but focused on the main idea of &quot;don&#8217;t update too frequently&quot;.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-348103">
				<div id="div-comment-348103" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">ipoverscsi</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060220-00/?p=32233#comment-348103">
			February 20, 2006 at 7:43 pm</a>		</div>

		<p>A related question is: why does my application run faster when I wiggle the mouse over the main window? &nbsp;I once had an application that would run dog slow unless you wiggled the mouse over the main screen (the application was doing some animation). &nbsp;We used to say we were turning the crank to make it go faster.</p>
<div class="post">[<i><a href="http://blogs.msdn.com/oldnewthing/archive/2005/02/17/375307.aspx" rel="nofollow">I already discussed this</a>. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-348123">
				<div id="div-comment-348123" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://improbable.org/chris/' rel='external nofollow' class='url'>Chris Adams</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060220-00/?p=32233#comment-348123">
			February 20, 2006 at 10:08 pm</a>		</div>

		<p>There&#8217;s a handy OS X utility (Quartz Debug) which allows you to highlight (literally &#8211; the area being painted will be tinted yellow/red) repaints and particularly repaints which are identical to the previous contents of the painted region. Is there an equivalent for Windows?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-348133">
				<div id="div-comment-348133" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">asdf</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060220-00/?p=32233#comment-348133">
			February 20, 2006 at 10:32 pm</a>		</div>

		<p>Perforator: <a rel="nofollow" target="_new" href="http://windowssdk.msdn.microsoft.com/library/default.asp?url=/library/en-us/wcp_tools/html/a3a04a83-2488-435b-a073-80f94dae9c04.asp" rel="nofollow">http://windowssdk.msdn.microsoft.com/library/default.asp?url=/library/en-us/wcp_tools/html/a3a04a83-2488-435b-a073-80f94dae9c04.asp</a></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-348153">
				<div id="div-comment-348153" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">AnotherMatt</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060220-00/?p=32233#comment-348153">
			February 20, 2006 at 11:26 pm</a>		</div>

		<p>Hey Raymond,</p>
<p>Great article. &nbsp;I haven&#8217;t noticed that programs run faster, but I have been wondering lately why it takes so long for a window to redraw itself when you hold down the mouse button as you bring it forward from behind another window. &nbsp; Now I know! &nbsp;Learn something new every day.<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-348163">
				<div id="div-comment-348163" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">ChrisR</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060220-00/?p=32233#comment-348163">
			February 21, 2006 at 12:02 am</a>		</div>

		<p>This reminds me of a contest Korby Parnell had regarding a Visual Source Safe window that was suffering from this (<a rel="nofollow" target="_new" href="http://blogs.msdn.com/korbyp/archive/2004/08/31/223384.aspx" rel="nofollow">http://blogs.msdn.com/korbyp/archive/2004/08/31/223384.aspx</a>).</p>
<p>I submitted a sample project to make one of Source Safe&#8217;s windows think the left mouse button was being held down on it&#8217;s caption (and it actually worked!). &nbsp;Korby did respond that he was going to send me the baseball, but I&#8217;m not sure what happened.</p>
<p>Alas, it never did arrive. &nbsp;It&#8217;s no big deal, I just thought it was an interesting challenge.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-348173">
				<div id="div-comment-348173" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">ChrisR</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060220-00/?p=32233#comment-348173">
			February 21, 2006 at 12:03 am</a>		</div>

		<p>AnotherMatt: &nbsp;Arrg! &nbsp;I have wondered what caused that for a very long time&#8230;thanks for pointing it out!</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-348183">
				<div id="div-comment-348183" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">zzz</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060220-00/?p=32233#comment-348183">
			February 21, 2006 at 12:09 am</a>		</div>

		<p>Unrelated&#8230;</p>
<p>Why is it that when I have direct ethernet between 2 win boxes, the copying speed (windows shares) is normal, ~10 MB/s with 100 Mbit NICs.</p>
<p>Now I insert a switch in between, the speed goes to ~5 MB/s. However if I use FTP to transfer the files with the switch in between, the speed is normal, 10 MB/s again (100 Mbit).</p>
<p>So that was totally unrelated but with all the smart people here, someone must have an idea for why is this so. I seriously doubt the switch is doing any less processing with the FTP packets since it&#8217;s very basic model.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-348213">
				<div id="div-comment-348213" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">8</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060220-00/?p=32233#comment-348213">
			February 21, 2006 at 6:49 am</a>		</div>

		<p>What if you use the broadcast address for the transfer? I couldn&#8217;t quickly find a tool to do it, but you&#8217;ve got a compiler ;)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-348223">
				<div id="div-comment-348223" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://nomagichere.blogspot.com' rel='external nofollow' class='url'>Marc Bernard</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060220-00/?p=32233#comment-348223">
			February 21, 2006 at 9:13 am</a>		</div>

		<p>Now all you need to do is get Rico to add this tip to the .NET performance guide&#8230; &nbsp;:)</p>
<p>Marc<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-348233">
				<div id="div-comment-348233" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">James Risto</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060220-00/?p=32233#comment-348233">
			February 21, 2006 at 9:17 am</a>		</div>

		<p>Can the same speedup be had by covering the window with another app&#8217;s window? I guess my question really is &#8230; are paint messages sent if the window is totally covered?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-348303">
				<div id="div-comment-348303" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://kennethhunt.com/archives/001746.html' rel='external nofollow' class='url'>Tech Observer</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060220-00/?p=32233#comment-348303">
			February 21, 2006 at 11:44 am</a>		</div>

		<p>Wow&#8230; example of how not to update status in a GUI! The Old New Thing : Why does my program run faster if I click and hold the caption bar? Sometimes, people discover&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-348343">
				<div id="div-comment-348343" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.theworldwidewebguy.com' rel='external nofollow' class='url'>thewebguy</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060220-00/?p=32233#comment-348343">
			February 21, 2006 at 12:01 pm</a>		</div>

		<p>haha this is awesome. i remember doing this on my old 386, never knew why it worked until now..</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-348353">
				<div id="div-comment-348353" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.blacksonblondes.com' rel='external nofollow' class='url'>Leopold Porkstacker</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060220-00/?p=32233#comment-348353">
			February 21, 2006 at 12:30 pm</a>		</div>

		<p>Hmmm, doesn&#8217;t seem to work on my dual G5 Mac&#8230;. no, wait, that&#8217;s because it&#8217;s already running fast enough, thanks to an intelligently-designed OS with NO memory leaks built-in by the &quot;factory&quot;.</p>
<p>LOLzors</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-348373">
				<div id="div-comment-348373" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Maxim</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060220-00/?p=32233#comment-348373">
			February 21, 2006 at 12:38 pm</a>		</div>

		<p>Totally logical&#8230;</p>
<p>The last time I saw that on my windows machine is with WinRAR.</p>
<p>When extracting &gt;1Go files&#8230; it takes less time to extract when running in the background than when you display the progress bar.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-348383">
				<div id="div-comment-348383" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://philcrissman.com/?p=925' rel='external nofollow' class='url'>Why does my program run faster if I click and hold the caption bar? at philcrissman.com</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060220-00/?p=32233#comment-348383">
			February 21, 2006 at 12:42 pm</a>		</div>

		<p>PingBack from <a rel="nofollow" target="_new" href="http://philcrissman.com/?p=925" rel="nofollow">http://philcrissman.com/?p=925</a></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-348423">
				<div id="div-comment-348423" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://Macheadsalowtech' rel='external nofollow' class='url'>MacSmack</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060220-00/?p=32233#comment-348423">
			February 21, 2006 at 1:06 pm</a>		</div>

		<p>Hey Macie,<br />
<br />You&#8217;re g5 wasn&#8217;t running fast enuf so they switched it to an Intel. Time to upgrade~!</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-348443">
				<div id="div-comment-348443" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.Leion.net' rel='external nofollow' class='url'>Leion</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060220-00/?p=32233#comment-348443">
			February 21, 2006 at 1:14 pm</a>		</div>

		<p>This means I &nbsp;should minimise my programs to make it run faster&#8230;.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-348493">
				<div id="div-comment-348493" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joxean Koret</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060220-00/?p=32233#comment-348493">
			February 21, 2006 at 1:44 pm</a>		</div>

		<blockquote><p>
  This means I &nbsp;should minimise my programs to make it run faster&#8230;. </p>
<p>No. This means the programmers needs to ignore the redraw events during a large operation. Me, as for myself, always ignore the redraw events or, at least, lock the window (LockWindow).
</p></blockquote>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-348503">
				<div id="div-comment-348503" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Bond, James Bond 007</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060220-00/?p=32233#comment-348503">
			February 21, 2006 at 2:24 pm</a>		</div>

		<p>I say it is all in your heads.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-348523">
				<div id="div-comment-348523" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">lulu</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060220-00/?p=32233#comment-348523">
			February 21, 2006 at 3:02 pm</a>		</div>

		<p>What the hell is a &quot;caption bar&quot;??</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-348553">
				<div id="div-comment-348553" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">me was smarte then me fall on head.</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060220-00/?p=32233#comment-348553">
			February 21, 2006 at 4:03 pm</a>		</div>

		<p>Lulu: the bar at the top that has the program name in it, right now it should say something like &quot;The Old New Thing: Why does my program run faster if I click and hold the caption bar? &#8211; (the name of your browser)&quot;<br />
<br />On the right of it there are those minimize, maximize and close buttons.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-348563">
				<div id="div-comment-348563" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.hardtrance.com.au' rel='external nofollow' class='url'>Jansen</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060220-00/?p=32233#comment-348563">
			February 21, 2006 at 5:25 pm</a>		</div>

		<p>Well.. I foudn out somthing intresting&#8230; in Win95 and Win98, if you were trying to end a task.. and you REALLY wanted to end it (you know sometimes how you can click and it doesnt die) wel.. if you click the END TASK button&#8230; and hold the mouse button in.. It ALWAYS kills it.. it was like the magic remedy. My IT friends, and associates thought this was quite humourous and completely illogical. But then again it was software from Microsoft!!</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-348603">
				<div id="div-comment-348603" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.seria.no/' rel='external nofollow' class='url'>Frode B&#248;rli</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060220-00/?p=32233#comment-348603">
			February 21, 2006 at 7:27 pm</a>		</div>

		<p>Shouldn&#8217;t Microsoft somehow remedy this; that is &#8211; when a window is redrawing x times faster than the monitor can refresh, windows should fix it (in one way or another)?</p>
<p>Or even: somebody could make a &quot;windows accellerator&quot; that detect too frequent redraws and respond accordingly? This would actually be a performance booster that worked!?</p>
<p>Frode</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-348693">
				<div id="div-comment-348693" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Youssef H. Wardani</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060220-00/?p=32233#comment-348693">
			February 22, 2006 at 8:51 am</a>		</div>

		<p>I encountered a similar situation coding in Delphi and using TDBGrid.OnDrawColumnCell<br />
<br />So now when I run any process that has a parent form, I use LockWindowUpdate before the process starts and after it is done.<br />
<br />example:<br />
<br />LockWindowUpdate (Self.Handle);<br />
<br />//my code &#8230;<br />
<br />LockWindowUpdate (0);<br />
</p>
<div class="post">[<i>Remember, people, just because somebody posts a comment <a href="http://blogs.msdn.com/oldnewthing/archive/2007/02/19/1716211.aspx" rel="nofollow">doesn&#8217;t mean they&#8217;re right</a>. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-348663">
				<div id="div-comment-348663" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">8</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060220-00/?p=32233#comment-348663">
			February 22, 2006 at 7:33 am</a>		</div>

		<p>&gt;Can the same speedup be had by covering the window with<br />
<br />&gt;another app&#8217;s window? I guess my question really is &#8230;<br />
<br />&gt;are paint messages sent if the window is totally<br />
<br />&gt;covered?</p>
<p>Yes, that should do it. Also try grabbing a screenshot of a (partially) covered window. It should be black in the places where it was covered (actually the user would expect a proper screenshot, but hey&#8230;)</p>
<p>&gt;Shouldn&#8217;t Microsoft somehow remedy this; that is &#8211;<br />
<br />&gt;when a window is redrawing x times faster than the<br />
<br />&gt;monitor can refresh, windows should fix it (in one<br />
<br />&gt;way or another)?<br />
<br />&gt;Or even: somebody could make a &quot;windows accellerator&quot;<br />
<br />&gt;that detect too frequent redraws and respond<br />
<br />&gt;accordingly? This would actually be a performance<br />
<br />&gt;booster that worked!? </p>
<p>I think that&#8217;s a bad idea. It would cause overhead by itself, and the detected monitor refresh rate isn&#8217;t neccisarily the real monitor refresh rate. I&#8217;m typing this in VMware, which fixes the virual monitor refresh rate to 60Hz no matter what, but it&#8217;s all fake since there is no real monitor refresh rate in the VM. Whatever the actual monitor refresh rate is, is up to the host OS to determine.</p>
<p>Doing so would also break benchmarking tools, which *have* to draw faster then the refresh rate, to come up with some interesting results that basically say &quot;your PC is x times faster then average&quot; with some nice drawings.</p>
<p>You also don&#8217;t want programmers to get even lazier, like &quot;well, Windows will fix that for me anyway, so let&#8217;s paint this in a while(1) loop&quot;. Those programmers should somehow be punished -_-&#8216;.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-349023">
				<div id="div-comment-349023" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">J.Marsch</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060220-00/?p=32233#comment-349023">
			February 22, 2006 at 4:20 pm</a>		</div>

		<p>Raymond:</p>
<p>Your post started me wondering about another situation that I see sometimes:</p>
<p>Why is it that sometimes when an application appears to be locked up, moving the mouse over it will cause it to become responsive again?</p>
<p>The best example that I can think of is Visual Studio 2005.</p>
<p>(this can be a little maddening because it doesn&#8217;t repro 100 percent of the time, but here goes):</p>
<p>Create a Web Project, and then try to debug it. &nbsp;Often, VS will just seem to pause just at the point where IE should start up. &nbsp;If you move your mouse over the VS window, it will become responsive again. &nbsp;If you don&#8217;t, it can take over a minute to get your debugger, and sometimes IE will actually time out.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-349503">
				<div id="div-comment-349503" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blogs.msdn.com/ericgu/archive/2006/02/23/538460.aspx' rel='external nofollow' class='url'>Eric Gunnerson's C# Compendium</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060220-00/?p=32233#comment-349503">
			February 24, 2006 at 12:53 am</a>		</div>

		<p>Raymond writes an interesting post about how some programs run faster if you hold down the mouse.<br />
<br />This&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-349943">
				<div id="div-comment-349943" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.burek.co.yu' rel='external nofollow' class='url'>Ivan Minic</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060220-00/?p=32233#comment-349943">
			February 25, 2006 at 8:10 am</a>		</div>

		<p>Very interesting find!</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-350593">
				<div id="div-comment-350593" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Coleman</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060220-00/?p=32233#comment-350593">
			February 28, 2006 at 2:01 pm</a>		</div>

		<p>Raymond,</p>
<p>Another way to handle this is by having the thread send a registered window message to the main window. &nbsp;Then the message handler would be responsible for painting or whatever. &nbsp;The message handler could also decide to only repaint every 10th message or some other algorithm.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-350923">
				<div id="div-comment-350923" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Neil</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060220-00/?p=32233#comment-350923">
			March 1, 2006 at 12:42 pm</a>		</div>

		<p>So how many paints are actually generated by the 100000 invalidates? Not 100000, I hope?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-oldnewthing bypostauthor odd alt thread-odd thread-alt depth-1" id="comment-350943">
				<div id="div-comment-350943" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Raymond+Chen+-+MSFT' rel='external nofollow' class='url'>Raymond Chen - MSFT</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060220-00/?p=32233#comment-350943">
			March 1, 2006 at 12:50 pm</a>		</div>

		<p>Neil: Add some instrumentation and find out. You don&#8217;t need to ask me.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-368143">
				<div id="div-comment-368143" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.asis.ru/2006/04/10/why-does-my-program-run-faster-if-i-click-and-hold-the-caption-bar/' rel='external nofollow' class='url'>The Anthology of Interests &raquo; Blog Archive &raquo; Why does my program run faster if I click and hold the caption bar?</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060220-00/?p=32233#comment-368143">
			April 10, 2006 at 6:56 am</a>		</div>

		<p>PingBack from <a rel="nofollow" target="_new" href="http://www.asis.ru/2006/04/10/why-does-my-program-run-faster-if-i-click-and-hold-the-caption-bar/" rel="nofollow">http://www.asis.ru/2006/04/10/why-does-my-program-run-faster-if-i-click-and-hold-the-caption-bar/</a></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-480543">
				<div id="div-comment-480543" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://doitq.ru/2006/03/20/ha/' rel='external nofollow' class='url'>Ха | DoItQ</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060220-00/?p=32233#comment-480543">
			March 9, 2007 at 6:22 am</a>		</div>

		<p>PingBack from <a rel="nofollow" target="_new" href="http://doitq.ru/2006/03/20/ha/" rel="nofollow">http://doitq.ru/2006/03/20/ha/</a></p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

