<html>
<head>
<title>Mathematical formulas are designed to be pretty, not to be suitable for computation</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>Mathematical formulas are designed to be pretty, not to be suitable for computation</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>May 8, 2013 / year-entry #126</td></tr>
<tr><td><b>Tags:</b></td><td>code</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20130508-00/?p=4423</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>33</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">When you ask a mathematician to come up with a formula to solve a problem, you will get something that looks pretty, but that doesn't mean that it lends itself well to computation. For example, consider the binomial coefficient, traditionally written nCk or C(n, k), and in more modern notation as (&thinsp;nk&thinsp;). If you ask...</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>When you ask a mathematician to come up with a formula to solve a problem, you will get something that looks pretty, but that doesn't mean that it lends itself well to computation.</p>
<p> For example, consider the binomial coefficient, traditionally written <sub><i>n</i></sub>C<sub><i>k</i></sub> or <nobr><i>C</i>(<i>n</i>, <i>k</i>)</nobr>, and in more modern notation as <nobr><font size="+1">(</font>&thinsp;<span style="position: relative"><sup style="position: absolute"><i>n</i></sup><sub><i>k</i></sub></span>&thinsp;<font size="+1">)</font></nobr>. If you ask a mathematician for a formula for the binomial coefficient, you will get the elegant reply </p>
<table border="0" cellspacing="0" cellpadding="0" style="line-height: 90%" alt="n choose k equals n factorial over k factorial times n minus k factorial">
<tr>
<td align="right" rowspan="2"><font size="+2">(</font></td>
<td align="center"><i>n</i></td>
<td align="left" rowspan="2"><font size="+2">)</font></td>
<td align="center" rowspan="2">&nbsp;=&nbsp;</td>
<td align="center" style="border-bottom: solid black 1pt"><i>n</i>!</td>
</tr>
<tr>
<td align="center"><i>k</i></td>
<td align="center"><i>k</i>!(<i>n</i> &minus; <i>k</i>)!</td>
</tr>
</table>
<p> (That took forever to format. I will use the traditional notation from now on purely for typographical expediency.) </p>
<p> This is a very beautiful formula, but it's horrible for actual computation because the factorials will be very expensive and are likely to overflow your integer data type even at low values of <i>n</i>. (So you may as well just use a lookup table.) And the <i>k</i>! in the denominator exactly cancels the first <i>k</i> factors in <i>n</i>!, so most of your work in multiplying the numbers together is just going to be undone by the division. </p>
<p> For computation, you're much better off using the recurrence C(<i>n</i>, <i>k</i>) = C(<i>n</i> &minus; 1, <i>k</i> &minus; 1) &times; <i>n</i> &#8725; <i>k</i>. This is the recurrence you learned in high school when you had to calculate binomial coefficients by hand: You start with  <nobr>1 &middot; <i>x&#8319;</i></nobr> and then to get the next coefficient, you multiply by the exponent on the <i>x</i> and divide by the current position (starting at 1), then decrement the exponent. For example, let's calculate the binomial coefficients C(8, <i>k</i>). </p>
<table border="0" cellspacing="0" cellpadding="0">
<tr>
<td valign="baseline" align="right">1</td>
<td valign="baseline" nowrap>&nbsp;&middot; <i>x</i>&#8312;</td>
<td width="20"></td>
<td>bring down the 8 and divide by 1         (resulting in 1 &times; 8 &divide; 1 = 8),         then decrement the exponent</td>
</tr>
<tr>
<td valign="baseline" align="right">8</td>
<td valign="baseline" nowrap>&nbsp;&middot; <i>x</i>&#8311;</td>
<td width="20"></td>
<td>bring down the 7 and divide by 2         (resulting in 8 &times; 7 &divide; 2 = 28),         then decrement the exponent</td>
</tr>
<tr>
<td valign="baseline" align="right">28</td>
<td valign="baseline" nowrap>&nbsp;&middot; <i>x</i>&#8310;</td>
<td width="20"></td>
<td>bring down the 6 and divide by 3         (resulting in 28 &times; 6 &divide; 3 = 56),         then decrement the exponent</td>
</tr>
<tr>
<td valign="baseline" align="right">56</td>
<td valign="baseline" nowrap>&nbsp;&middot; <i>x</i>&#8309;</td>
<td width="20"></td>
<td>bring down the 5 and divide by 4         (resulting in 56 &times; 5 &divide; 4 = 70),         then decrement the exponent</td>
</tr>
<tr>
<td valign="baseline" align="right">70</td>
<td valign="baseline" nowrap>&nbsp;&middot; <i>x</i>&#8308;</td>
<td width="20"></td>
<td>bring down the 4 and divide by 5         (resulting in 70 &times; 4 &divide; 5 = 56),         then decrement the exponent</td>
</tr>
<tr>
<td valign="baseline" align="right">56</td>
<td valign="baseline" nowrap>&nbsp;&middot; <i>x</i>&sup3;</td>
<td width="20"></td>
<td>bring down the 3 and divide by 6         (resulting in 56 &times; 3 &divide; 6 = 28),         then decrement the exponent</td>
</tr>
<tr>
<td valign="baseline" align="right">28</td>
<td valign="baseline" nowrap>&nbsp;&middot; <i>x</i>&sup2;</td>
<td width="20"></td>
<td>bring down the 2 and divide by 7         (resulting in 28 &times; 2 &divide; 7 = 8),         then decrement the exponent</td>
</tr>
<tr>
<td valign="baseline" align="right">8</td>
<td valign="baseline" nowrap>&nbsp;&middot; <i>x</i>&sup1;</td>
<td width="20"></td>
<td>bring down the 1 and divide by 8         (resulting in 8 &times; 1 &divide; 8 = 1),         then decrement the exponent</td>
</tr>
<tr>
<td valign="baseline" align="right">1</td>
<td valign="baseline" nowrap>&nbsp;&middot; <i>x</i>&#8304;</td>
<td width="20"></td>
<td>bring down the 0, which makes everything zero</td>
</tr>
</table>
<p> (Am I the only person who calculated binomial coefficients by hand?) Notice that the calculations in the second half are the exact inverse of the calculations of the first half, so you only have to do the computations halfway, and then you can just mirror the rest. This is just another way of seeing that C(<i>n</i>, <i>k</i>) = C(<i>n</i>, <i>n</i> &minus; <i>k</i>). </p>
<p> This technique lets you evaluate C(50, 7) = 99884400 without overflowing a 32-bit integer. </p>
<p> Often people will ask for an efficient way of calculating factorials, when in fact they don't really need factorials (which is a good thing, because that would require a bignum package); they are really just trying to evaluate a formula that happens to be expressed mathematically with factorials (because factorials are pretty). </p>
<p> Another place pretty formulas prove unsuitable for computation is in Taylor series. The denominator of a Taylor series is typically a factorial, and the numerator can get quite large, too. For example, exp(<i>x</i>) = &Sigma; <i>x&#8319;</i> &#8725; <i>n</i>!. Instead of calculating the power and factorial at each term, use the recurrence </p>
<table border="0" cellspacing="0" cellpadding="0" alt="x to the n over n factorial equals x over n times x to the n-1 over n-1 factorial">
<tr>
<td align="center" style="border-bottom: solid black 1pt"><i>x<sup>n</sup></i></td>
<td align="center" rowspan="2">&nbsp;=&nbsp;</td>
<td align="center" style="border-bottom: solid black 1pt"><i>x</i></td>
<td align="center" rowspan="2">&nbsp;</td>
<td align="center" style="border-bottom: solid black 1pt"><i>x</i><sup><i>n</i>&minus;1</sup></td>
</tr>
<tr>
<td align="center"><i>n</i>!</td>
<td align="center"><i>n</i></td>
<td align="center">(<i>n</i> &minus; 1)!</td>
</tr>
</table>
<p> In compiler-terms, you're strength-reducing the loop. </p>
<p> Of course, another problem is that you are adding large numbers first, and then adding smaller numbers later. From a numerical analysis point of view, you should add the smaller numbers first so that they can retain significance longer. </p>
<p> As an example, consider that you have to add the following numbers: 999, and ten 0.1's, and suppose your floating point format is good to only three significant digits. If you added them largest to smallest, you would get this: </p>
<table border="0" cellspacing="0" cellpadding="0">
<tr>
<td>999</td>
<td></td>
</tr>
<tr>
<td>999 + 0.1</td>
<td>&nbsp;= 999 (three sigificant digits)</td>
</tr>
<tr>
<td>999 + 0.1</td>
<td>&nbsp;= 999 (three sigificant digits)</td>
</tr>
<tr>
<td colspan="2">... and so on ...</td>
</tr>
</table>
<p> Your final total will be 999. But if you added the smaller numbers first, then you would get </p>
<table border="0" cellspacing="0" cellpadding="0">
<tr>
<td>0.1</td>
<td></td>
</tr>
<tr>
<td>0.1 + 0.1</td>
<td>&nbsp;= 0.2</td>
</tr>
<tr>
<td>0.2 + 0.1</td>
<td>&nbsp;= 0.3</td>
</tr>
<tr>
<td colspan="2">... and so on ...</td>
</tr>
<tr>
<td>0.9 + 0.1</td>
<td>&nbsp;= 1</td>
</tr>
<tr>
<td>1 + 999</td>
<td>&nbsp;= 1000</td>
</tr>
</table>
<p> By adding the small numbers first, you gave them a chance to accumulate to something meaningful before the big number came along and swamped them. </p>
<p> Remember, the way a formula is written on paper is not necessarily the best way of computing it. (And if the formula was written by a mathematician, it is almost certainly not!) </p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (33)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-1055143">
				<div id="div-comment-1055143" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Adam Rosenfield</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130508-00/?p=4423#comment-1055143">
			May 8, 2013 at 7:31 am</a>		</div>

		<p>Does the blog software allow you to use MathML?</p>
<div class="post">[<em>Sure, but a lot of browsers don&#39;t support MathML. -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1055153">
				<div id="div-comment-1055153" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">parkrrrr</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130508-00/?p=4423#comment-1055153">
			May 8, 2013 at 7:46 am</a>		</div>

		<p>There&#39;s a whole class mathematicians take that deals with this and similar issues, called Numerical Analysis. We just assume programmers know this stuff, too.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-chris-j-leonard even thread-even depth-1" id="comment-1055163">
				<div id="div-comment-1055163" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Veltas' rel='external nofollow' class='url'>Veltas</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130508-00/?p=4423#comment-1055163">
			May 8, 2013 at 7:54 am</a>		</div>

		<p>@parkrrrr: Which was mentioned in the article.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-chris-j-leonard odd alt thread-odd thread-alt depth-1" id="comment-1055173">
				<div id="div-comment-1055173" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Veltas' rel='external nofollow' class='url'>Veltas</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130508-00/?p=4423#comment-1055173">
			May 8, 2013 at 7:56 am</a>		</div>

		<p>I really like this article; informative, and with no real prerequisites other than maths.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1055183">
				<div id="div-comment-1055183" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">BZ</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130508-00/?p=4423#comment-1055183">
			May 8, 2013 at 8:06 am</a>		</div>

		<p>@Veltas &quot;other than maths&quot;? That&#39;s a big deal. I&#39;ve learned all these formulas and how to use them and I don&#39;t remember half of it. On the other hand, I program every day, and Win32/C/.NET stuff is much easier for me to read.</p>
<p>One of my professors (I majored in computer science and engineering) even said &quot;you will probably never use calculus in your career, but we make you take it anyway&quot;. &nbsp;He was right.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1055193">
				<div id="div-comment-1055193" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130508-00/?p=4423#comment-1055193">
			May 8, 2013 at 8:11 am</a>		</div>

		<p>Old news, but needs to be retaught every 10 years because the bloody idiots who design CS classes don&#39;t teach this stuff!</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-maurits even thread-even depth-1" id="comment-1055203">
				<div id="div-comment-1055203" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Maurits+%5BMSFT%5D' rel='external nofollow' class='url'>Maurits [MSFT]</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130508-00/?p=4423#comment-1055203">
			May 8, 2013 at 8:33 am</a>		</div>

		<p>Another way to calculate the binomial coefficients C(n, k) without doing any divisions at all is to start with C(0, 0) = 1 and then use the recursion C(n, k) = C(n &#8211; 1, k &#8211; 1) + C(n &#8211; 1, k).</p>
<div class="post">[<em>Exercise: Discuss why this is a bad way to calculate binomial coefficents. -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1055213">
				<div id="div-comment-1055213" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">John Costello</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130508-00/?p=4423#comment-1055213">
			May 8, 2013 at 8:56 am</a>		</div>

		<p>Back when I interviewed SDETs for Microsoft, I would ask for an implementation and test cases for the binomial coefficient (and give the mathematical definition as the &quot;PM Spec&quot;).</p>
<p>No-hires would jump into implementation.</p>
<p>Marginal candidates would write some test cases first.</p>
<p>Good candidates would observe in the process of writing test cases that C(n, 0) = C(n, n) = 1, C(n, 1) = C(n, n-1) = n, and C(n, k) = C(n, n-k) and thus get a whole bunch of automatically generated test cases.</p>
<p>Great candidates would demolish the PM spec before ever writing a single test case.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1055223">
				<div id="div-comment-1055223" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">John Costello</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130508-00/?p=4423#comment-1055223">
			May 8, 2013 at 8:56 am</a>		</div>

		<p>Maurits &#8212; that doesn&#39;t work unless you memoize, because it has exponential running time.</p>
<div class="post">[<em>Even if you memoize, it requires quadratic space and time. -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1055233">
				<div id="div-comment-1055233" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">GWO</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130508-00/?p=4423#comment-1055233">
			May 8, 2013 at 9:07 am</a>		</div>

		<p>[Exercise: Discuss why this is a bad way to calculate binomial coefficents. -Raymond]</p>
<p>Because the number of calculations grows quadratically with n. &nbsp;It is, however the way I do them by hand when n &lt; 10 (i.e. write down Pascal&#39;s triangle). &nbsp;Of course, it helps that 1,5,10,10,5,1 is easy to remember, so you can start half way down.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-maurits even thread-even depth-1" id="comment-1055243">
				<div id="div-comment-1055243" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Maurits+%5BMSFT%5D' rel='external nofollow' class='url'>Maurits [MSFT]</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130508-00/?p=4423#comment-1055243">
			May 8, 2013 at 9:16 am</a>		</div>

		<p>Yes, the time is quadratic, but the memory requirements are only O(n); you can get away with storing only two rows of the triangle.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-chris-j-leonard odd alt thread-odd thread-alt depth-1" id="comment-1055253">
				<div id="div-comment-1055253" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Veltas' rel='external nofollow' class='url'>Veltas</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130508-00/?p=4423#comment-1055253">
			May 8, 2013 at 9:55 am</a>		</div>

		<p>I feel like I should ask now if it&#39;s faster for small n, because the Pascal&#39;s triangle identity allows you to find the coefficients through addition, whereas the better complexity method uses multiplication and division.</p>
<p>I personally wouldn&#39;t know, I don&#39;t know much about performance at all.</p>
<p>Also, wouldn&#39;t it be more appropriate to measure algorithmic time complexity with respect to bitsize of n and k, rather than the actual values?</p>
<div class="post">[<em>Not sure what the benefit of measuring in bit size is. -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-chris-j-leonard even thread-even depth-1" id="comment-1055263">
				<div id="div-comment-1055263" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Veltas' rel='external nofollow' class='url'>Veltas</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130508-00/?p=4423#comment-1055263">
			May 8, 2013 at 10:01 am</a>		</div>

		<p>I was just taught to do it like that.</p>
<p>I suppose it means you&#39;re considering the &#39;size&#39; of the input, rather than the magnitude of a single number given.</p>
<div class="post">[<em>It depends on the nature of the problem. If you used bit sizes, then you would conclude that calculating C(n,1024) and C(n,2047) were roughly equivalent in cost, when in fact the second costs nearly twice as much. -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-chris-j-leonard odd alt thread-odd thread-alt depth-1" id="comment-1055273">
				<div id="div-comment-1055273" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Veltas' rel='external nofollow' class='url'>Veltas</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130508-00/?p=4423#comment-1055273">
			May 8, 2013 at 10:15 am</a>		</div>

		<p>I&#39;m not sure I understand, as the time complexity would probably be of the form O(2^k) or something similar, so if one were to roughly add 1 to k (i.e. go from 1024 to 2047), the time should roughly double.</p>
<p>Although I&#39;m starting to rethink this convention, it doesn&#39;t really make it easier to understand.</p>
<div class="post">[<em>While it&#39;s true that it tells you that doubling the second parameter to C(n,k) also doubles cost, it misleads you into thinking that all values of the second parameter from 1024 to 2047 cost the same. -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1055283">
				<div id="div-comment-1055283" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Weiqi Gao</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130508-00/?p=4423#comment-1055283">
			May 8, 2013 at 10:37 am</a>		</div>

		<p>Take a look at MathJax (<a href="http://www.mathjax.org/" target="_new" rel="nofollow">http://www.mathjax.org/</a>) for serving mathmatics on the Web. &nbsp;Detailed instructions for enabling it in various blogging software/sites can be found here: <a href="http://checkmyworking.com/2012/01/how-to-get-beautifully-typeset-maths-on-your-blog/" target="_new" rel="nofollow">checkmyworking.com/&#8230;/how-to-get-beautifully-typeset-maths-on-your-blog</a>.</p>
<div class="post">[<em>Great, now I have to go talk to a lawyer. -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1055293">
				<div id="div-comment-1055293" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Anoniempje</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130508-00/?p=4423#comment-1055293">
			May 8, 2013 at 11:10 am</a>		</div>

		<p>Adam Rosenfield, Google seems to intend to drop any plans for future MathML support in their ‘new’ Blink engine.</p>
<p>Weiqi Goa, I just looked at the demoes on the web page you mention and something goes horribly wrong for me. I just see unformatted Tex (using Chromium 28.something).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1055323">
				<div id="div-comment-1055323" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Sven2</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130508-00/?p=4423#comment-1055323">
			May 8, 2013 at 2:52 pm</a>		</div>

		<p>I&#39;d say formulas aren&#39;t necessarily designed to look pretty, but they&#39;re designed to work well for stuff that mathematicians do (e.g.: Derive other formulas). And for that, the definition as a series is usually less usable than the definition using factorials.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1055333">
				<div id="div-comment-1055333" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">meangrape</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130508-00/?p=4423#comment-1055333">
			May 8, 2013 at 3:11 pm</a>		</div>

		<p>You need to ask the mathematician for an analytic form of the equation. <a href="http://en.wikipedia.org/wiki/Analytic_expression" target="_new" rel="nofollow">en.wikipedia.org/&#8230;/Analytic_expression</a></p>
<div class="post">[<em>The article says that the gamma function (generalized factorial) and infinite series are permitted in analytic expressions, so the formulas given in the article are already analytic. But they are not suitable for computation. -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1055343">
				<div id="div-comment-1055343" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">foo</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130508-00/?p=4423#comment-1055343">
			May 8, 2013 at 5:40 pm</a>		</div>

		<blockquote><p>
  That took forever to format. I will use the traditional notation from now on purely for typographical expediency
</p></blockquote>
<p>Seems like pretty mathematical formulas aren&#39;t designed to be suitable for general-purpose blog entries either.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1055363">
				<div id="div-comment-1055363" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Jon</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130508-00/?p=4423#comment-1055363">
			May 8, 2013 at 9:30 pm</a>		</div>

		<p>Talking about the gamma function is a good point &#8211; if you&#39;re happy with using floating point numbers and don&#39;t need an exact result, you can calculate binomial coefficients as follows:</p>
<p>n_c_k = exp(lgamma(n+1)-lgamma(k+1)-lgamma(n-k+1));</p>
<p>Not sure how the performance compares to the integer implementation. It&#39;s definitely slower for small inputs and maybe faster for large inputs. The lgamma calls can cause extreme numerical errors depending on n and k, so if anyone wants to use this, be careful.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1055313">
				<div id="div-comment-1055313" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Craig</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130508-00/?p=4423#comment-1055313">
			May 8, 2013 at 2:36 pm</a>		</div>

		<p>&quot;(Am I the only person who calculated binomial coefficients by hand?)&quot;</p>
<p>I have a degree in computer engineering and had to go look up what a binomial coefficient *is*, let alone calculate them by hand.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1055373">
				<div id="div-comment-1055373" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blogs.msdn.com/wswiktor_4000_poczta.fm/ProfileUrlRedirect.ashx' rel='external nofollow' class='url'>wswiktor@poczta.fm</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130508-00/?p=4423#comment-1055373">
			May 9, 2013 at 2:53 am</a>		</div>

		<p>Ah, I remember from high school, when the task was to &quot;simplify the formula&quot;. The &quot;simplified&quot; form usually only looked more pretty, but required MORE computation. And some of the transformations were completely pointless (at least their point was never convincingly explained), like &quot;rationalizing the denominator&quot;.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1055383">
				<div id="div-comment-1055383" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Neil</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130508-00/?p=4423#comment-1055383">
			May 9, 2013 at 3:23 am</a>		</div>

		<p>@Veltas I always thought that the standard way to describe a computation whose time depends on the number of bits in n was O(log n).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1055433">
				<div id="div-comment-1055433" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Pomax</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130508-00/?p=4423#comment-1055433">
			May 9, 2013 at 8:34 am</a>		</div>

		<p>Just use MathJax and typeset it as [{n choose k} = frac{n!}{k!(n-k)!]], and magic: now your formulae look pretty in pretty much any browser. It&#39;s somewhat the defacto library for actually putting math, rather than horrible ascii, on a page these days =)</p>
<div class="post">[<em>Great, now I have to hire a lawyer to read the licensing agreement. -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1055503">
				<div id="div-comment-1055503" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Dem</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130508-00/?p=4423#comment-1055503">
			May 9, 2013 at 10:55 am</a>		</div>

		<p>Re: Great, now I have to hire a lawyer to read the licensing agreement. -Raymond</p>
<p>Err, it&#39;s open source and licensed under the Apache 2.0 license, why would you need a lawyer to read that?</p>
<div class="post">[<em>Because I don&#39;t trust myself to read the license and understand its consequences fully. -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1055553">
				<div id="div-comment-1055553" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Pomax</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130508-00/?p=4423#comment-1055553">
			May 9, 2013 at 1:16 pm</a>		</div>

		<p>Then it&#39;s time to lawyer up, you&#39;re using other &quot;free to use on a website&quot; libraries already ;) MathJax is just as free as jQuery etc. it&#39;s a CDN-hosted library for the web, not something you pay for to put on your website.</p>
<div class="post">[<em>And I&#39;ll have to add MathJax support to my content management system. Given that my content management system doesn&#39;t even support images, you can imagine how likely MathJax support is going to show up. -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1055593">
				<div id="div-comment-1055593" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Anonymous Coward</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130508-00/?p=4423#comment-1055593">
			May 9, 2013 at 4:03 pm</a>		</div>

		<p>The Apache 2.0 licence is strange (in my opinion) but also short, devoid of hidden gotchas and well understood.</p>
<p>However, I personally wouldn&#39;t bet on a math system that results in broken output on the #1 rendering engine while at the same time claiming that it brings beautiful math to all browsers.</p>
<p>Plus, this isn&#39;t the kind of site where formulæ are a big necessity. I don&#39;t think it&#39;s going to be worth it.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1055613">
				<div id="div-comment-1055613" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Neil</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130508-00/?p=4423#comment-1055613">
			May 9, 2013 at 4:21 pm</a>		</div>

		<p>C(n, k) = C(n &#8211; 1, k &#8211; 1) × n ÷ k, although true, isn&#39;t the relation C(n, k) = C(n, k &#8211; 1) × (n + 1 &#8211; k) ÷ k that you actually demonstrated.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1055673">
				<div id="div-comment-1055673" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">mikeb</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130508-00/?p=4423#comment-1055673">
			May 9, 2013 at 10:42 pm</a>		</div>

		<p>Way back when I was in college, I had to take a 1 credit numerical analysis course (taught in Basic, no less) that was supposed to be really easy. &nbsp;It was only one credit, after all.</p>
<p>But it was the hardest course I had that semester.</p>
<p>Math is generally elegant and beautiful, as Raymond says. Arithmetic on computers is an ugly hack.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1055683">
				<div id="div-comment-1055683" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Raphael</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130508-00/?p=4423#comment-1055683">
			May 9, 2013 at 11:56 pm</a>		</div>

		<p>MathJax? Isn&#39;t that the thing on Wikipedia you can use to increase the loading time of a page by about 10 seconds?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-maurits even thread-even depth-1" id="comment-1055653">
				<div id="div-comment-1055653" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Maurits+%5BMSFT%5D' rel='external nofollow' class='url'>Maurits [MSFT]</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130508-00/?p=4423#comment-1055653">
			May 9, 2013 at 6:45 pm</a>		</div>

		<p>Calculate C(50, 7) using C(n, k) = C(n &#8211; 1, k &#8211; 1) * n / k</p>
<p>Subtract k from both n and k to get the starting point: C(50 &#8211; 7, 7 &#8211; 7) = C(43, 0)</p>
<p>C(43, 0) = 1 by definition</p>
<p>C(44, 1) = C(43, 0) * 44 / 1 = 1 * 44 / 1 = 44</p>
<p>C(45, 2) = C(44, 1) * 45 / 2 = 44 * 45 / 2 = 990</p>
<p>C(46, 3) = C(45, 2) * 46 / 3 = 990 * 46 / 3 = 15180</p>
<p>C(47, 4) = C(46, 3) * 47 / 4 = 15180 * 47 / 4 = 178365</p>
<p>C(48, 5) = C(47, 4) * 48 / 5 = 178365 * 48 / 5 = 1712304</p>
<p>C(49, 6) = C(48, 5) * 49 / 6 = 1712304 * 49 / 6 = 13983816</p>
<p>C(50, 7) = C(49, 6) * 50 / 7 = 13983816 * 50 / 7 = 99884400</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1055863">
				<div id="div-comment-1055863" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Stallman Torvalds</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130508-00/?p=4423#comment-1055863">
			May 11, 2013 at 8:26 pm</a>		</div>

		<p>I bet if it were under MsPL you&#39;d be all over it. Stop spreading FUD, you shill.</p>
<div class="post">[<em>Presumably the Microsoft legal department reviewed the MS-PL license. But my content management system doesn&#39;t support it so even if all the legal hurdles were cleared, I probably still wouldn&#39;t use it. -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1056183">
				<div id="div-comment-1056183" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">James</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130508-00/?p=4423#comment-1056183">
			May 14, 2013 at 11:15 pm</a>		</div>

		<p>About changing the order of addition: first make sure the series is absolutely convergent. There&#39;s a theorem: given a series that&#39;s convergent but not absolutely convergent, you can shuffle it to make it converge to anything you want.</p>
<div class="post">[<em>You can freely shuffle a finite series. -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

