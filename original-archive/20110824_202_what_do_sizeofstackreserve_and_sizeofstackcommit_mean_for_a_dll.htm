<html>
<head>
<title>What do SizeOfStackReserve and SizeOfStackCommit mean for a DLL?</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>What do SizeOfStackReserve and SizeOfStackCommit mean for a DLL?</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>August 24, 2011 / year-entry #203</td></tr>
<tr><td><b>Tags:</b></td><td>other</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20110824-00/?p=9823</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>5</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">Nothing. Those fields in the IMAGE_OPTIONAL_HEADER structure are meaningful only when they appear in the EXE. The values provided in DLLs are ignored. Size­Of­Heap­Reserve and Size­Of­Heap­Commit fall into the same category. In general, flags and fields which control process settings have no effect when declared in a DLL. We've seen a few examples already, like...</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>Nothing.</p>
<p> Those fields in the <code>IMAGE_<wbr>OPTIONAL_<wbr>HEADER</wbr></wbr></code> structure are meaningful only when they appear in the EXE. The values provided in DLLs are ignored. </p>
<p> <code>Size&shy;Of&shy;Heap&shy;Reserve</code> and <code>Size&shy;Of&shy;Heap&shy;Commit</code> fall into the same category. In general, flags and fields which control process settings have no effect when declared in a DLL. We've seen a few examples already, like the <a href="http://blogs.msdn.com/b/oldnewthing/archive/2010/09/22/10065933.aspx"> <code>/LARGE&shy;ADDRESS&shy;AWARE</code> flag</a> or the <a href="http://blogs.msdn.com/b/oldnewthing/archive/2010/06/11/10023274.aspx"> markers which indicate the default layout direction</a>. </p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (5)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-931763">
				<div id="div-comment-931763" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Adam Rosenfield</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110824-00/?p=9823#comment-931763">
			August 24, 2011 at 7:19 am</a>		</div>

		<p>I should hope so &#8212; it&#39;d be an awful shame if the program loader went around changing the carpets in the EXE&#39;s house when the guest DLL wanders over.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-931863">
				<div id="div-comment-931863" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Myria</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110824-00/?p=9823#comment-931863">
			August 24, 2011 at 2:06 pm</a>		</div>

		<p>Random tidbit: /LARGEADDRESSAWARE actually has meaning in a 64-bit EXE. &nbsp;If you add /LARGEADDRESSAWARE:NO to the linker command line for a 64-bit executable, you will get a 64-bit executable whose address space is limited to 0x7FFFFFFF. &nbsp;Obviously, it defaults to on when building for 64-bit architectures. &nbsp;(Matteo Italia is wrong in the link.)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-931873">
				<div id="div-comment-931873" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Peter Newman</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110824-00/?p=9823#comment-931873">
			August 24, 2011 at 4:14 pm</a>		</div>

		<p>We found this out just recently with work software. While we didn&#39;t expect it to change the stack allocations for existing threads, we were hoping it would work for threads created from code in the DLL. Unfortunately, no such luck.</p>
<p>We ended up doing a slightly odd work around involving allocating a stack of memory and changing registers to convince the problem function (a section of JIT compiled code) it was a completely fresh stack. And that was the lesser of two oddities.</p>
<div class="post">[<i>How does the kernel know that the thread was created by your DLL? Do you want it to <a href="http://blogs.msdn.com/b/oldnewthing/archive/2004/01/01/47042.aspx" rel="nofollow">check the return address</a>? For people who use _beginthread, that means that it will always MSVCR80&#39;d thread preferences! -raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-931893">
				<div id="div-comment-931893" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Myria</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110824-00/?p=9823#comment-931893">
			August 24, 2011 at 9:24 pm</a>		</div>

		<p>@Peter: If you swap the stack, be sure to also change that thread&#39;s NT_TIB::StackBase and NT_TIB::StackLimit so that the kernel knows the bounds of your stack. &nbsp;This will allow the kernel to automatically extend the stack if you have a separated reserve/commit system and guard page like the normal stacks. &nbsp;Also, the kernel will say STATUS_STACK_OVERFLOW instead of STATUS_ACCESS_VIOLATION in the event of an overrun.</p>
<p>I believe that StackBase and StackLimit are backward from the usual meaning of the words &#8211; you&#39;ll have to see what it is for a normal stack.</p>
<p>x86-32: NT_TIB *tib = reinterpret_cast&lt;NT_TIB *&gt;(static_cast&lt;uintptr_t&gt;(__readfsdword(FIELD_OFFSET(NT_TIB, Self))));</p>
<p>x86-64: NT_TIB *tib = reinterpret_cast&lt;NT_TIB *&gt;(static_cast&lt;uintptr_t&gt;(__readgsqword(FIELD_OFFSET(NT_TIB, Self))));</p>
<div class="post">[<i>Even better: Use CreateFiber to create a stack and SwitchToFiber to switch to it. Now your code is portable. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-932203">
				<div id="div-comment-932203" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110824-00/?p=9823#comment-932203">
			August 25, 2011 at 3:17 pm</a>		</div>

		<p>@Myria: Or just don&#39;t overflow your shadow stack. I&#39;m used to allocating them in the middle of the heap so they don&#39;t have room to grow anyway.</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

