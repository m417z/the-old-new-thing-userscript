<html>
<head>
<title>What does LockWindowUpdate do?</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>What does LockWindowUpdate do?</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>February 19, 2007 / year-entry #59</td></tr>
<tr><td><b>Tags:</b></td><td>code</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20070219-00/?p=27963</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>28</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">Poor misunderstood LockWindowUpdate. This is the first in a series on LockWindowUpdate, what it does, what it's for and (perhaps most important) what it's not for. What LockWindowUpdate does is pretty simple. When a window is locked, all attempt to draw into it or its children fail. Instead of drawing, the window manager remembers which...</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>
Poor misunderstood <code>LockWindowUpdate</code>.
</p>
<p>
This is the first in a series on
<code>LockWindowUpdate</code>,
what it does, what it's for and (perhaps most important) what it's not for.
</p>
<p>
What <code>LockWindowUpdate</code> does is pretty simple.
When a window is locked,
all attempt to draw into it or its children fail.
Instead of drawing, the window manager remembers which parts of
the window the application tried to draw into, and when the
window is unlocked, those areas are invalidated so that the
application gets another <code>WM_PAINT</code> message,
thereby bringing the screen contents back in sync with what
the application believed to be on the screen.
</p>
<p>
This "keep track of what the application tried to draw
while Condition&nbsp;X was in effect, and invalidate it when 
Condition&nbsp;X no longer hold" behavior you've seen already
in another guise:
<a HREF="http://blogs.msdn.com/oldnewthing/archive/2006/04/28/586018.aspx">
<code>CS_SAVEBITS</code></a>.
In this sense, <code>LockWindowUpdate</code> does the same bookkeeping
that would occur if you had covered the locked window with a
<code>CS_SAVEBITS</code> window, except that it doesn't save any bits.
</p>
<p>
The documentation explicitly calls out that only one window
(per desktop, of course)
can be locked at a time, but this is implied by the function prototype.
If two windows could be locked at once, it would be impossible
to use <code>LockWindowUpdate</code> reliably.
What would happen if you did this:
</p>
<pre>
LockWindowUpdate(hwndA); // locks window A
LockWindowUpdate(hwndB); // also locks window B
LockWindowUpdate(NULL); // ???
</pre>
<p>
What does that third call to <code>LockWindowUpdate</code> do?
Does it unlock all the windows?
Or just window&nbsp;A?
Or just window&nbsp;B?
Whatever your answer, it would make it impossible for the following
code to use <code>LockWindowUpdate</code> reliably:
</p>
<pre>
void BeginOperationA()
{
 LockWindowUpdate(hwndA);
 ...
}

void EndOperationA()
{
 ...
 LockWindowUpdate(NULL);
}

void BeginOperationB()
{
 LockWindowUpdate(hwndB);
 ...
}

void EndOperationB()
{
 ...
 LockWindowUpdate(NULL);
}
</pre>
<p>
Imagine that the <code>BeginOperation</code> functions started
some operation that was triggered by asynchronous activity.
For example, suppose operation&nbsp;A is drawing drag/drop
feedback, so it begins when the mouse goes down and ends when
the mouse is released.
</p>
<p>
Now suppose operation&nbsp;B finishes while a drag/drop is
still in progress.
Then <code>EndOperationB</code> will clean up operation&nbsp;B
and call
<code>LockWindowUpdate(NULL)</code>.
If you propose that that should unlock all windows,
then you've
just ruined operation&nbsp;A, which expects that <code>hwndA</code>
still be locked.
Similarly, if you argue that it should unlock
only <code>hwndA</code>, then only only is operation&nbsp;A ruined,
but so too is operation&nbsp;B (since <code>hwndB</code> is still
locked even though the operation is complete).
On the other hand, if you propose that <code>LockWindowUpdate(NULL)</code>
should unlock <code>hwndB</code>, then consider the case where
operation&nbsp;A completes first.
</p>
<p>
If <code>LockWindowUpdate</code> were able to lock more than one 
window at a time, then the function prototype would have to have
been changed so that the unlock operation knows which window is
being unlocked.
There are many ways this could have been done.
For example, a new parameter could have been added
or a separate function created.
</p>
<pre>
// Method A - new parameter
// fLock = TRUE to lock, FALSE to unlock
BOOL LockWindowUpdate(HWND hwnd, BOOL fLock);

// Method B - separate function
BOOL LockWindowUpdate(HWND hwnd);
BOOL UnlockWindowUpdate(HWND hwnd);
</pre>
<p>
But neither of these is the case.
The <code>LockWindowUpdate</code> function locks only one window at a time.
And the reason for this will become more clear as we learn
what <code>LockWindowUpdate</code> is for.</p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (28)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-473583">
				<div id="div-comment-473583" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Tolbert</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070219-00/?p=27963#comment-473583">
			February 19, 2007 at 10:26 am</a>		</div>

		<p>This post might not be needed now had someone at Microsoft updated the LockWindowUpdate docs a year and a half ago when you wrote about it.</p>
<p>If they&#8217;d only added something to the effect of &#8220;this function should only to be called to disable drawing in the window beneath the cursor during a drag and drop operation?&#8221;</p>
<div class=post>[<i>I thought I already discussed this, on the tension between &#8220;descriptive&#8221; and &#8220;prescriptive&#8221; documentation. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-473603">
				<div id="div-comment-473603" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">sergio</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070219-00/?p=27963#comment-473603">
			February 19, 2007 at 11:02 am</a>		</div>

		<p>Raymond, thank you a lot for starting that subject. I can admit that I tried to use that function once and I didn&#8217;t get the results I expected. I almost jumped from joy as I saw what you write about. I can&#8217;t wait for the rest of the series. (Yes I now it sounds geeeeky, but I can&#8217;t help it).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-473613">
				<div id="div-comment-473613" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Xavi</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070219-00/?p=27963#comment-473613">
			February 19, 2007 at 11:17 am</a>		</div>

		<p>&quot;all attempt to draw into it or its children fail&quot;</p>
<p>Does it realy fail or is it just deferred.</p>
<p>Fail would mean to me I get an error or something similiar.</p>
<p>Well, we will see.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-473623">
				<div id="div-comment-473623" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">andy</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070219-00/?p=27963#comment-473623">
			February 19, 2007 at 11:30 am</a>		</div>

		<p>Before I&#8217;ve read your other posts about what it really is useful for, it struck me that it would be simpler if you introduced transactions here? (e.g., with help of the new Kernel Transaction Manager).</p>
<p>So, applications can do whatever they want with the window and some poor component should take care of merging everything together when it is commited :)</p>
<p>Would at least be interesting to see if a prototype based on this works. Or perhaps this isn&#8217;t necessary anymore now with the Desktop Window Manager?</p>
<p>Look forward to the rest of this serie :)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-473633">
				<div id="div-comment-473633" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">kb</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070219-00/?p=27963#comment-473633">
			February 19, 2007 at 12:56 pm</a>		</div>

		<p>Can I call LockWindowUpdate() in .NET?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-473643">
				<div id="div-comment-473643" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Mark Sowul</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070219-00/?p=27963#comment-473643">
			February 19, 2007 at 1:50 pm</a>		</div>

		<p>&quot;Can I call LockWindowUpdate() in .NET?&quot;</p>
<p>Yes, you can use P/Invoke.</p>
<p><a rel="nofollow" target="_new" href="http://pinvoke.net/default.aspx/user32.LockWindowUpdate" rel="nofollow">http://pinvoke.net/default.aspx/user32.LockWindowUpdate</a></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-473673">
				<div id="div-comment-473673" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Mr Echo</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070219-00/?p=27963#comment-473673">
			February 19, 2007 at 2:29 pm</a>		</div>

		<p>&gt; The documentation explicitly calls out that only one window (per desktop, of course) can be locked at a time, but this is implied by the function prototype.</p>
<p>If this is only one per-desktop, how would different applications synchronize the use of this call? &nbsp;Or is it one per thread?</p>
<div class=post>[<i>This is a non-issue when used as intended. Stay tuned. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-473683">
				<div id="div-comment-473683" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Anony Moose</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070219-00/?p=27963#comment-473683">
			February 19, 2007 at 3:00 pm</a>		</div>

		<p>An error message for drawing &quot;failure&quot; would be really amazingly silly.</p>
<p>Everything from &quot;you&#8217;re drawing into the hiden part of a window that&#8217;s a little bit off the edge of the monitor&quot; to &quot;you&#8217;re drawing into the hiden part of a window that&#8217;s partly covered by another window&quot; would technically result in no change to the display, but it&#8217;s not an error condition worth handling &#8211; and there&#8217;s no need for every application to duplicate code that ought to be (and in fact actually is) handled efficiently and intelligently by the operating system.</p>
<p>Instead, the Win32 system just tells your application what to repaint and when to repaint it, and thus ensures that updates occur when necessary and appropriate.</p>
<p>Nothing is &quot;deferred&quot; &#8211; after calling LockWindowUpdate(), any drawing oeprations on the affected window fail, get ignored, result in no change, and are not queued up for later execution. And this is perfectly sensible and reasonable behaviour.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-473703">
				<div id="div-comment-473703" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Tolbert</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070219-00/?p=27963#comment-473703">
			February 19, 2007 at 4:02 pm</a>		</div>

		<p>&gt;I thought I already discussed this, on the tension between &#8220;descriptive&#8221; and &#8220;prescriptive&#8221; documentation. -Raymond</p>
<p>I don&#8217;t remember that one but will look for it. &nbsp;At this point I don&#8217;t see how anything could possibly apply though. &nbsp;This was a function that, according to you, was added for and had one and only one purpose/use, yet the documentation never mentions it. &nbsp;Is there no wonder it&#8217;s misunderstood and misused? &nbsp;How does one use a function as intended when its one intended use isn&#8217;t documented?</p>
<div class=post>[<i>And the criminal code doesn&#8217;t tell you the intent of a law. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-473723">
				<div id="div-comment-473723" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Stefan Kuhr</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070219-00/?p=27963#comment-473723">
			February 19, 2007 at 4:35 pm</a>		</div>

		<p>Wouldn&#8217;t it have been possible to give LockWindowUpdate sort of a per-thread or per-process affinity? So it can only lock or unlock its own windows, and if some program does something wrong, it is this process that has to pay? Otherwise any program can sabotage others on the same desktop, right? But most probably this is again a backwards compatibility issue, I guess, though I don&#8217;t remember if LWU was available on Win16. I am curious as to the rest of this series on LWU&#8230;</p>
<div class=post>[<i>If you want to mess up another program, you can do it much easier than LockWindowUpdate. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-473763">
				<div id="div-comment-473763" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">GregL</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070219-00/?p=27963#comment-473763">
			February 19, 2007 at 6:19 pm</a>		</div>

		<p>When I tried using this function on windows 95 for some reason the desktop icons would refresh themselves. It was bizarre. Needless to say I stopped using it.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-473773">
				<div id="div-comment-473773" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Peter</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070219-00/?p=27963#comment-473773">
			February 19, 2007 at 6:27 pm</a>		</div>

		<p>Ahem: </p>
<p>RCW 9A.04.020</p>
<p>Purposes — Principles of construction.</p>
<p>(1) The general purposes of the provisions governing the definition of offenses are:</p>
<p>&nbsp; &nbsp; (a) To forbid and prevent conduct that inflicts or threatens substantial harm to individual or public interests;</p>
<p>&nbsp; &nbsp; (b) To safeguard conduct that is without culpability from condemnation as criminal;</p>
<p>&nbsp; &nbsp; (c) To give fair warning of the nature of the conduct declared to constitute an offense;</p>
<p>&nbsp; &nbsp; (d) To differentiate on reasonable grounds between serious and minor offenses, and to prescribe proportionate penalties for each.</p>
<p>&nbsp; &nbsp; (2) The provisions of this title shall be construed according to the fair import of their terms but when the language is susceptible of differing constructions it shall be interpreted to further the general purposes stated in this title.</p>
<p>Revised Washington Code &#8212; RCW section 9A.04.020</p>
<div class=post>[<i>Sigh. Do I have to write &#8220;of course there may be exceptions but I&#8217;m just making a point&#8221; after every sentence? -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-473783">
				<div id="div-comment-473783" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Miral</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070219-00/?p=27963#comment-473783">
			February 19, 2007 at 6:30 pm</a>		</div>

		<p>This is why I use WM_SETREDRAW liberally, and LockWindowUpdate never. &nbsp;But I&#8217;m interested in seeing the rest of the series to work out what it&#8217;s actually for :)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-473793">
				<div id="div-comment-473793" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Tim</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070219-00/?p=27963#comment-473793">
			February 19, 2007 at 7:10 pm</a>		</div>

		<p>&#8216;Do I have to write &#8220;of course there may be exceptions but I&#8217;m just making a point&#8221; after every sentence?&#8217;</p>
<p>That&#8217;s why Scott Adams (of Dilbert fame) uses the abbreviation BOCTAOE in his blog a lot. &nbsp;(&#8216;But Of Course There Are Obvious Exceptions&#8217;)</p>
<div class=post>[<i>Yeah, but the fact that you even have to say BOCTAOE means that you&#8217;re operating at a level of discourse where nitpicking is the norm. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-473803">
				<div id="div-comment-473803" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">hexatron</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070219-00/?p=27963#comment-473803">
			February 19, 2007 at 8:06 pm</a>		</div>

		<p>I made a test case of a windows app that called WM_SETREDRAW FALSE on itself for 5 seconds, and tried dragging across it.</p>
<p>It&#8217;s pretty funny. The WM_MOUSEMOVEs get sent to the window UNDER the now-undrawable window and scribbling on the undrawable (and undraggable) window. The crap stays there when the window comes back to life, of course&#8211;WM_SETREDRAW does no invalidation.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-dean-harding odd alt thread-odd thread-alt depth-1" id="comment-473813">
				<div id="div-comment-473813" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Dean+Harding' rel='external nofollow' class='url'>Dean Harding</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070219-00/?p=27963#comment-473813">
			February 19, 2007 at 8:41 pm</a>		</div>

		<p>Peter: I can&#8217;t seriously believe you thought that was actually helpful in any way&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-473823">
				<div id="div-comment-473823" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">David Candy</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070219-00/?p=27963#comment-473823">
			February 19, 2007 at 9:41 pm</a>		</div>

		<p>I&#8217;ll generously assume some criminal quoted that construction thing of a law I&#8217;ve never heard of and that such an action disproves Raymond&#8217;s assertion.</p>
<p>In the humanities one has to be precise as one deal with very complex systems &#8211; groups of people. People think in schemas. So we are already predisposed to generalise anything into an absolute rule.</p>
<p>I find the more deterministic arts and sciences, like API programming (not just of OSs but all from MS), so imprecide. I can&#8217;t be bothered to write code anymore as it always involves setting up experiments to get the real rules of many things.</p>
<p>So my take is if one talks in absolutes then one should be nitpitted as one has shown a lack of rigerous thinking. Though if one does this in social situations then one is thought wierd.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-rosyna odd alt thread-odd thread-alt depth-1" id="comment-473833">
				<div id="div-comment-473833" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Rosyna</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070219-00/?p=27963#comment-473833">
			February 20, 2007 at 4:36 am</a>		</div>

		<p>Raymond, can you link to the function&#8217;s documentation on MSDN the first time you mention a function? Pretty please with a seared salmon cube on top?</p>
<p>Like <a rel="nofollow" target="_new" href="http://msdn2.microsoft.com/en-us/library/ms534869.aspx" rel="nofollow">http://msdn2.microsoft.com/en-us/library/ms534869.aspx</a> (at least I think that&#8217;s the right link to it)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-473853">
				<div id="div-comment-473853" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">PavelS</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070219-00/?p=27963#comment-473853">
			February 20, 2007 at 6:37 am</a>		</div>

		<p>Maybe it&#8217;s intended for window moving.</p>
<p>Users can move exactly one window at a time. (One mouse = one window)</p>
<p>So if you don&#8217;t want to bother the user with updating window while moving it, the easiest way is to put LockWindowUpdate at the start and end of the moving process.</p>
<p>You don&#8217;t need to program some &quot;background buffer&quot;. All is done by OS itself.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-473863">
				<div id="div-comment-473863" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Xavi</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070219-00/?p=27963#comment-473863">
			February 20, 2007 at 7:41 am</a>		</div>

		<p>Thanks Anony Moose</p>
<p>Fully agreed.</p>
<p>A LockWindowUpdate unaware, non native english nitpicker now would state that it probaply would be clearer to write:</p>
<p>&quot;When a window is locked, all attempt to draw into it or its children result in no effect&quot; BOCTAOE</p>
<p>Just good I&#8217;m not such one, instead silently wait for the next post on this promising topic.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-473873">
				<div id="div-comment-473873" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">PavelS</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070219-00/?p=27963#comment-473873">
			February 20, 2007 at 8:06 am</a>		</div>

		<p>Ha, here it is:</p>
<p><a rel="nofollow" target="_new" href="http://msdn2.microsoft.com/en-us/library/ms534872.aspx" rel="nofollow">http://msdn2.microsoft.com/en-us/library/ms534872.aspx</a></p>
<p>So it helps to protect your window from being overdrawn but still being able to draw your valuable content to the DC with help of DCX_LOCKWINDOWUPDATE when moving/resizing.</p>
<p>It&#8217;s funny.</p>
<p>It seems that OS uses it very often, right in front of our eyes, but developers don&#8217;t now how to use it, nor they even know what it is good for.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-473903">
				<div id="div-comment-473903" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blogs.msdn.com/oldnewthing/archive/2007/02/20/1726880.aspx' rel='external nofollow' class='url'>The Old New Thing</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070219-00/?p=27963#comment-473903">
			February 20, 2007 at 10:00 am</a>		</div>

		<p>For temporarily drawing into somebody else&#8217;s window.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-473933">
				<div id="div-comment-473933" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Peter</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070219-00/?p=27963#comment-473933">
			February 20, 2007 at 10:37 am</a>		</div>

		<p>(This is regarding Raymond&#8217;s comment &quot;And the criminal code doesn&#8217;t tell you the intent of a law.&quot;)</p>
<p>Looking at the little bits of paper in my little home office here, I can come up with the following alternate phrases for everyone to use:</p>
<p>&quot;Telephones don&#8217;t tell you why to call people&quot;</p>
<p>&quot;Menus don&#8217;t tell you why you should eat&quot;</p>
<p>&quot;Printer manuals don&#8217;t tell you why you should print&quot;</p>
<p>&quot;The internet doesn&#8217;t tell you why to surf&quot;</p>
<p>Food wrappers, on the other hand, are a fount of suggestions &#8212; this marshamllow bag has a pretty tasty looking &#8216;crispy rice bars&#8217; recipe.</p>
<p>:-) of course.</p>
<p>(personally I&#8217;d love for all API documentation to give &#8216;serving suggestions&#8217;)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-473963">
				<div id="div-comment-473963" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Peter Ritchie</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070219-00/?p=27963#comment-473963">
			February 20, 2007 at 11:11 am</a>		</div>

		<p>&quot;When a window is locked, all attempt to draw into it or its children result in no effect&quot;.</p>
<p>I don&#8217;t think that generalization is correct. &nbsp;It does have an effect, just not the same as if the window were not locked&#8211;it caches the bounds of any updates and forces a WM_PAINT of that boundary when the window becomes not locked. &nbsp;(for clarity, if no updates occured, no WM_PAINT results).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-474233">
				<div id="div-comment-474233" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Norman Diamond</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070219-00/?p=27963#comment-474233">
			February 20, 2007 at 9:40 pm</a>		</div>

		<p>&gt; If LockWindowUpdate were able to lock more</p>
<p>&gt; than one window at a time, then the function</p>
<p>&gt; prototype would have to have been changed so</p>
<p>&gt; that the unlock operation knows which window</p>
<p>&gt; is being unlocked.</p>
<p>Does MSDN agree?</p>
<p>Pavel S., thank you for posting this link:</p>
<p><a rel="nofollow" target="_new" href="http://msdn2.microsoft.com/en-us/library/ms534872.aspx" rel="nofollow">http://msdn2.microsoft.com/en-us/library/ms534872.aspx</a></p>
<p>* &nbsp;While a window update lock is set, the system</p>
<p>* &nbsp;creates an accumulated bounding rectangle for</p>
<p>***** &nbsp;each locked window.</p>
<p>* &nbsp;When the lock is cleared, the system uses</p>
<p>* &nbsp;this bounding rectangle to set the update</p>
<p>* &nbsp;region for the window and its child windows</p>
<p>There are also other situations where multiple somethings can be moved in one mouse dragging operation. &nbsp;You can&#8217;t hold the control key and select multiple ordinary windows, but you can select multiple icons on the desktop to move their locations, or you can select multiple icons for files in Windows Explorer and drag them to another Windows Explorer (to move or copy) or to a desktop icon (to print or unpack or whatever).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-dean-harding odd alt thread-odd thread-alt depth-1" id="comment-474273">
				<div id="div-comment-474273" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Dean+Harding' rel='external nofollow' class='url'>Dean Harding</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070219-00/?p=27963#comment-474273">
			February 20, 2007 at 10:23 pm</a>		</div>

		<p>Norman: But it also says this, in the documentation for LockWindowUpdate itself (<a rel="nofollow" target="_new" href="http://msdn.microsoft.com/library/default.asp?url=/library/en-us/gdi/pantdraw_4i5h.asp" rel="nofollow">http://msdn.microsoft.com/library/default.asp?url=/library/en-us/gdi/pantdraw_4i5h.asp</a>):</p>
<p>&gt; Return Values</p>
<p>&gt; If the function succeeds, the return value is nonzero.</p>
<p>&gt; </p>
<p>&gt; If the function fails, the return value is zero, &nbsp;indicating that an error </p>
<p>&gt; occurred or another window was already locked.</p>
<p>I think Raymond is correct. The way to read that &quot;each locked window&quot; bit is to remember the fact that you lock the window you pass in *and its children*.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-474813">
				<div id="div-comment-474813" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blogs.msdn.com/oldnewthing/archive/2007/02/22/1742084.aspx' rel='external nofollow' class='url'>The Old New Thing</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070219-00/?p=27963#comment-474813">
			February 22, 2007 at 10:00 am</a>		</div>

		<p>Um, not dragging.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-713673">
				<div id="div-comment-713673" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://entrian.com/blog/setting-a-visual-studio-breakpoint-on-a-win32-api-function-in-user32dll/' rel='external nofollow' class='url'>Setting a Visual Studio breakpoint on a Win32 API function in user32.dll - The Entrian Solutions Blog</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070219-00/?p=27963#comment-713673">
			March 4, 2009 at 7:20 pm</a>		</div>

		<p>PingBack from <a rel="nofollow" target="_new" href="http://entrian.com/blog/setting-a-visual-studio-breakpoint-on-a-win32-api-function-in-user32dll/" rel="nofollow">http://entrian.com/blog/setting-a-visual-studio-breakpoint-on-a-win32-api-function-in-user32dll/</a></p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

