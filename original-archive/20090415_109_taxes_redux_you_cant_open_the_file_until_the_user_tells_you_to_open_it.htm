<html>
<head>
<title>Taxes redux: You can't open the file until the user tells you to open it</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>Taxes redux: You can&#8217;t open the file until the user tells you to open it</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>April 15, 2009 / year-entry #110</td></tr>
<tr><td><b>Tags:</b></td><td>other</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20090415-00/?p=18553</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>48</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">One of the so-called taxes of software development on Windows is being respectful of Hierarchical Storage Management. You can't open a file until the user tells you to open it. This rule has consequences for how Explorer extracts information about a file, because what you definitely don't want is for opening a folder full of...</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>One of the so-called taxes of software development on Windows is <a href="http://blogs.msdn.com/oldnewthing/archive/2005/11/28/497442.aspx"> being respectful of Hierarchical Storage Management</a>. You can't open a file until the user tells you to open it. This rule has consequences for how Explorer extracts information about a file, because what you definitely don't want is for opening a folder full of archived files in Explorer to result in all the files being recalled from tape. (Actually, file recall is just an extreme case of the cost of opening the file. You run into a similar problem if the file is on a slow medium or over a slow network connection. But just to motivate the discussion, I'll continue with the tape scenario.)</p>
<p> What information does Explorer need in order to display a file in a folder? Well, it needs the file name. Fortunately, that can be determined without opening the file, since the file name is how you identify the file in the first place! When you want to open a file, you pass its name. There, you have the name. If you are showing the contents of a folder, you used a function like <code>FindFirstFile</code> to get a list of all the files, and the list comes in the form of names. Okay, so the name is easy. (There are still subtleties here, but they are not relevant right now.) </p>
<p> Okay, what's next. The icon. Well, in order to get the icon, we need to know the file type, so let's put the icon on hold for now. </p>
<p> The file creation and modification times can be obtained without opening the file; they come out as part of the <code>FindFirstFile</code>, or if you started with a file name, you can recover them with <code>GetFileAttributesEx</code>. Either way, you can get that without opening the file. Same goes for the file size. </p>
<p> The other properties, like Title, Author, Summary... They all require that the file be opened, so Explorer disables the property for files that have been archived to tape. You don't want to recall a file from tape just to show its Author in Explorer. </p>
<p> Okay, that leaves just the file type (and the icon, which depends on the file type). Consider the possibilities for how the file type could be determined. </p>
<ul>
<li><a href="http://blogs.msdn.com/oldnewthing/archive/2005/08/30/457963.aspx#458401">Read the first few bytes of the file looking for magic numbers</a>.<br>     Problem: Reading bytes from the file forces a recall. </li>
<li><a href="http://blogs.msdn.com/oldnewthing/archive/2008/04/14/8389268.aspx#8394171">Store the type in an alternate data stream</a>.<br>     Problem: Opening an alternate data stream recalls the file. </li>
<li><a href="http://blogs.msdn.com/oldnewthing/archive/2008/04/14/8389268.aspx#8394305">Store the type in the file's metadata</a>.<br>     Problem: The metadata won't survive being sent as an email attachment     or transferred to a file system that doesn't have a place to     store that metadata, such as a floppy drive, a CD, or a unix volume. </li>
<li>Read the first few bytes to determine the type and     <a href="http://blogs.msdn.com/oldnewthing/archive/2008/04/14/8389268.aspx#8398072">     cache it in the file system</a>.<br>     Problem: Um, that's just begging the question.     We're trying to figure out where in the file system to save it! </li>
</ul>
<p> What do these problems tell us? The first problem, that reading bytes from a file forces a recall, means that file type information cannot be based on the file contents. The second problem, that reading alternate data streams also force a recall, means that you can't put it in an alternate data stream either. All that's left is storing the type in the metadata. </p>
<p> But the third problem tells us that there isn't much metadata to choose from. Whatever mechanism you use needs to be able to survive being sent as an email attachment or being uploaded to an FTP site. Email attachments in particular are extremely limited. Most email programs, when asked to save an attachment, preserve only one piece of metadata: The filename. (They often don't even preserve the last modified time. And good luck getting them to preserve <a href="http://blogs.msdn.com/oldnewthing/archive/2007/12/17/6785519.aspx#6792364"> other ad-hoc metadata</a>.) </p>
<p> All of these problem conspire to rule out all the places you can squirrel away type information, leaving just the filename. It's a sucky choice, but it's the only choice left. </p>
<p> And it means that changing a file's extension means the file type information is destroyed (which, from an end user's point of view, <a href="http://blogs.msdn.com/oldnewthing/archive/2005/08/30/457963.aspx#458421"> may as well be corruption</a>). </p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (48)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-725983">
				<div id="div-comment-725983" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Robin</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090415-00/?p=18553#comment-725983">
			April 15, 2009 at 10:27 am</a>		</div>

		<p>I have found FindFileFirst to be slow when enumerating all files in a folder containing a large number of files, esp compared to the performance of the dir command. &nbsp;Is there a faster way to obtain a list of all files in a folder?</p>
<div class=post>[<i> &#8220;dir&#8221; uses FindFirstFile, so any performance comparison is in your imagination. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-726003">
				<div id="div-comment-726003" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">someone else</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090415-00/?p=18553#comment-726003">
			April 15, 2009 at 11:36 am</a>		</div>

		<p>Ok, so the file extension is metadata, and by renaming it, I destroy (or as they said in the old days: change) it.</p>
<p>But could you pretty please with sugar on top implement an obscure registry setting where you can disable that freakin&#8217; warning?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-726013">
				<div id="div-comment-726013" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Really?</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090415-00/?p=18553#comment-726013">
			April 15, 2009 at 11:37 am</a>		</div>

		<p>@robin Hmm, i wonder how dir does its work. (I don&#8217;t know for sure, but I suspect Dir probably uses FindFirstFile.)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-726023">
				<div id="div-comment-726023" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Adrian</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090415-00/?p=18553#comment-726023">
			April 15, 2009 at 11:37 am</a>		</div>

		<p>I must be missing the point altogether. &nbsp;I think we&#8217;re coming at this with different sets of assumptions.</p>
<p>Shouldn&#8217;t mail attachments all come with a MIME type, which is metadata that describes the data type for the attachment? &nbsp;Wasn&#8217;t that the point of MIME types?</p>
<p>&#8220;Read the first few bytes to determine the type and &nbsp;cache it in the file system.</p>
<p>Problem: Um, that&#8217;s just begging the question. We&#8217;re trying to figure out where in the file system to save it!&#8221; We are? I though the premise was to understand what Explorer needs to display a file in a folder. The file is already in the file system, so any metadata that the file system caches should already be available without opening the file. &nbsp;I don&#8217;t see how this is begging the question.</p>
<p>If I recall, VMS didn&#8217;t rely on the file extension for the file type. &nbsp;The directory file held metadata that described the file type (at least at a general level). &nbsp;Extensions were a convention, but far from a rigid system.</p>
<div class=post>[<i>Oh, so your answer to &#8220;Where in the file system should we save it?&#8221; is &#8220;In a new type of metadata that is never archived to tape and is included in some <a href="http://blogs.msdn.com/oldnewthing/archive/2006/03/30/564809.aspx" rel="nofollow">new enumeration API</a> so retrieving it doesn&#8217;t require another round trip to the server.&#8221; I think you&#8217;ll find that the number of email programs that save the MIME type when saving an attachment is approximately zero, so you&#8217;ll have to get all email programs on board with this new SetFileMIMEType API. And then get all existing applications to apply for a MIME type for all their file types, and getting all programs which create files to set the MIME type metadata too. How do you set the MIME type from a batch file? Or perl script? And what if a file&#8217;s extension disagrees with the MIME type? MIME-aware programs will use the MIME type and non-MIME-aware programs will use the extension. I see the virus writers rubbing their hands together in gleeful anticipation already. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-726063">
				<div id="div-comment-726063" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Aardvark</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090415-00/?p=18553#comment-726063">
			April 15, 2009 at 3:41 pm</a>		</div>

		<p>What about exe&#8217;s icons which are embedded in the resources of the exe itself? I assume they would get recalled?</p>
<div class=post>[<i>Try it and see. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-726073">
				<div id="div-comment-726073" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Wang-Lo</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090415-00/?p=18553#comment-726073">
			April 15, 2009 at 3:55 pm</a>		</div>

		<p>Thank you for using the phrase &quot;begging the question&quot; correctly. &nbsp;Too many careless or lazy writers think it means &quot;raising the question&quot; or &quot;requires the question&quot;. &nbsp;Let us hope that proper language by a influential blogger can set a few of these yahoos straight.</p>
<p>-Wang-Lo.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-726093">
				<div id="div-comment-726093" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Erzengel</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090415-00/?p=18553#comment-726093">
			April 15, 2009 at 4:25 pm</a>		</div>

		<p>Aardvark: &quot;What about exe&#8217;s icons which are embedded in the resources of the exe itself?&quot;</p>
<p>If you watch on a relatively slow medium, such as a CD drive, you will see explorer show a default icon for exes while it loads the icon that the exe contains. I&#8217;ve never worked with tape drives, but I think it&#8217;s fair to assume it won&#8217;t recall the exe and will merely show the default exe icon.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-726103">
				<div id="div-comment-726103" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Nick</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090415-00/?p=18553#comment-726103">
			April 15, 2009 at 4:36 pm</a>		</div>

		<p>&quot;could you pretty please with sugar on top implement an obscure registry setting where you can disable that freakin&#8217; warning?&quot;</p>
<p>How often do you really need to change the file extension? Even then, when you do, the default action is &#8216;Yes&#8217;, so you can just hit Enter.</p>
<p>Assuming you do need to rename a lot of file extensions, if you think you are tech-savvy enough to go mucking around in some registry changing secret settings, then surely you can figure out how to do it via some other means which does not display a prompt. &nbsp;Clicking dozens of files, one at a time in Explorer, is hardly efficient.</p>
<p>I like file extensions. &nbsp;It gives me instant knowledge about what kind of file I&#8217;m looking at, all without invoking some other investigative application (which may even have an exploit that makes a previously benign file malicious).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-726123">
				<div id="div-comment-726123" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">dave</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090415-00/?p=18553#comment-726123">
			April 15, 2009 at 5:19 pm</a>		</div>

		<blockquote><p>
  If I recall, VMS didn&#8217;t rely on the</p>
<p>  file extension for the file type. &nbsp;
</p></blockquote>
<p>I think you recall incorrectly (at least up through about V6, which is when VMS and I parted company). If the prevailing model for Windows can be considered as &quot;tell me the full name and I&#8217;ll tell you what you can do with it&quot;, then the prevailing model for VMS was &quot;tell me what you want to do with it and I&#8217;ll tell you the full name&quot;.</p>
<p>Thus if you fed FOO to the Bliss-32 compiler, it would look for FOO.B32 (and then a whole raft of other possible Bliss extensions). If you fed FOO to the linker, it looked for FOO.OBJ, unless you&#8217;d said FOO/LIB, in which case it would look for FOO.OLB.</p>
<p>The directory held some Record Management System attributes, but those only told you about the file structure (variable-length with byte count, variable-length with CRLF terminators, etc).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-726133">
				<div id="div-comment-726133" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Adrian</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090415-00/?p=18553#comment-726133">
			April 15, 2009 at 5:50 pm</a>		</div>

		<p>Dave is right. &nbsp;I was thinking about the RMS metadata that the Files-11 system kept about each file. &nbsp;Still, that shows that it&#8217;s possible to keep metadata about a file that remains accessible even when the file itself is off on tape somewhere.</p>
<p>As to Raymond&#8217;s response to my comment, I think we&#8217;re on completely different pages. &nbsp;I (still) must be misunderstanding the point of the post. &nbsp;It seemed like the point was that to show files in a folder, you only have access to the metadata, because it might be too expensive to actually open the file.</p>
<p>It appears he&#8217;s looking at it in terms of given how everything currently exists, how would you can&#8217;t do any better. &nbsp;I misunderstood and thought he meant that it couldn&#8217;t ever be done better. &nbsp;I pointed out that the decision to tie the file type to the file extension rather than keeping it as a separate bit of metadata. &nbsp;Clearly, that&#8217;s a hard decision to undo now, but it doesn&#8217;t explain why that decision was made originally (which is what I thought Raymond was trying to explain). &nbsp;The fact that VMS almost does it (by keeping RMS metadata in the directory) is a counterexample.</p>
<p>I&#8217;m not trying to be nitpicky or argumentative. &nbsp;I think I just missed the point of the article.</p>
<div class=post>[<i>Right, the article is about what Explorer could have done in 1995 without the benefit of a time machine. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-726153">
				<div id="div-comment-726153" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joe</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090415-00/?p=18553#comment-726153">
			April 15, 2009 at 5:55 pm</a>		</div>

		<p>Adrian &#8212; I think the point is not only can you only rely on the meta data, but you also can&#8217;t really change the meta data w/o changing all apps that deal w/ the meta data&#8230;e.g. you are stuck!</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-726163">
				<div id="div-comment-726163" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">ace</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090415-00/?p=18553#comment-726163">
			April 15, 2009 at 6:04 pm</a>		</div>

		<blockquote><p>
  I have found FindFileFirst to be slow when enumerating all files in a folder containing a large number of files, esp compared to the performance of the dir command.
</p></blockquote>
<p>I&#8217;m sure you first did FindFile enumeration and then dir on the same directory. The second time everything was already cached in RAM.</p>
<p>The first time&#8230; NTFS and Windows are more orders of magnitude slower than others &nbsp;(surpisingly the web is very quiet about this). NTFS/Windows enumerate files in a directory fast only for unbelievably small number of files. On even newest computers and Vista an innocent &quot;dir /b&quot; of the directory with only 3000 files can take 20 seconds the first time (on the naked OS, without any antivirus/whatever programs installed). The second time a split of second (compared that with Linux/ext3, where the first time is so fast). Don&#8217;t just say &quot;use any defragmentation program&quot; &#8212; I haven&#8217;t found a single one able to optimize directory enumeration.</p>
<p>When we&#8217;re there, does anybody know any way to do on Windows the equivalent of Linux&#8217;s</p>
<p>&quot;echo 3 &gt; /proc/sys/vm/drop_caches&quot;?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-726173">
				<div id="div-comment-726173" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Gabe</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090415-00/?p=18553#comment-726173">
			April 15, 2009 at 6:23 pm</a>		</div>

		<p>Adrian, Raymond is saying that a system as you envision would not work. Of course you could create your own such system, but it would not interoperate with the billion other systems in existence.</p>
<p>Every program currently in existence wouldn&#8217;t know how to create the metadata you want. Even if you only ever used programs that have been upgraded to support the new APIs, any files from older or foreign systems would have no such metadata.</p>
<p>In fact, the system you propose already exists. MacOS stores a 4-character file type (among other things) as metadata for each file, but OS X has to support filename extensions because otherwise any file created by a Unix program, or FTPed, or coming from a digital camera would be unrecognized.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-726193">
				<div id="div-comment-726193" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Jonathan Wilson</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090415-00/?p=18553#comment-726193">
			April 15, 2009 at 6:54 pm</a>		</div>

		<p>I want to know why &quot;Hide extensions for known file types&quot; was invented and why it defaults to &quot;enabled&quot;.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-726203">
				<div id="div-comment-726203" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">John</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090415-00/?p=18553#comment-726203">
			April 15, 2009 at 7:02 pm</a>		</div>

		<p>Jonathan: Because users are dumb.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-dean-harding odd alt thread-odd thread-alt depth-1" id="comment-726213">
				<div id="div-comment-726213" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Dean+Harding' rel='external nofollow' class='url'>Dean Harding</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090415-00/?p=18553#comment-726213">
			April 15, 2009 at 7:27 pm</a>		</div>

		<p>Jonathan: read just about every other blog post of Raymond&#8217;s where he mentions filenames. Someone always asks that question. It&#8217;s some kind of Godwin&#8217;s Law for filename discussions &nbsp;(&quot;as the discussion becomes more and more about filenames on Windows, the probability of someone asking &#8216;what moron thought up the Hide Extensions for Known File Types setting?&#8217; approaches 1.&quot;)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-726223">
				<div id="div-comment-726223" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">John</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090415-00/?p=18553#comment-726223">
			April 15, 2009 at 8:22 pm</a>		</div>

		<p>Speaking of file extensions, why does explorer offer to show bizarre columns like &quot;Perceived Type&quot; but not such a basic one like &quot;File Extension&quot;? Did the explorer team really think the &quot;Type&quot; column was good enough?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-726233">
				<div id="div-comment-726233" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Chris Lineker</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090415-00/?p=18553#comment-726233">
			April 15, 2009 at 8:31 pm</a>		</div>

		<p>You can&#8217;t open a file until the user tells you to open it.</p>
<p>Stop making thumbnails of my videos then. It hangs explorer on removable media, it also means i have to wait for it to finish putting its grubby mitts all over my disk before I can start copying files from it.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-dean-harding even thread-even depth-1" id="comment-726243">
				<div id="div-comment-726243" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Dean+Harding' rel='external nofollow' class='url'>Dean Harding</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090415-00/?p=18553#comment-726243">
			April 15, 2009 at 8:51 pm</a>		</div>

		<p>&quot;Stop making thumbnails of my videos then.&quot;</p>
<p>Click Tools-&gt;Folder Options, go to the &quot;View&quot; tab and check &quot;Always show icons, never thumbnails.&quot;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-726253">
				<div id="div-comment-726253" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">jcs</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090415-00/?p=18553#comment-726253">
			April 15, 2009 at 10:20 pm</a>		</div>

		<p>ace: That&#8217;s weird. I never noticed that.</p>
<p>As a test, I just plugged an external hard drive (to avoid the directory being cached) and did a dir of a directory with 1000 files. It took less than a second&#8230;even though I&#8217;m on Vista, using NTFS (and the files were even encrypted.)</p>
<p>Maybe &quot;the web is quiet about this&quot; because nobody else is having this problem. There could be something wrong with your disk&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-726083">
				<div id="div-comment-726083" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Karellen</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090415-00/?p=18553#comment-726083">
			April 15, 2009 at 4:06 pm</a>		</div>

		<p>I&#8217;m just wondering what the cost would be of adding the first ~4k of archived files to the &quot;stub&quot;.</p>
<p>Many file types try to store meta data at the start of a file so that it can be read as soon as possible after internet downloads have started. Magic number MIME type calculation also generally works fine on just the first 4k.</p>
<p>Also, because of the way that file read operations tend to work (well, at least fread(3), read(2) and ReadFile()), if an application opens a file and requests a large read, just returning the first 4k (or however much you have in the stub) is a valid response. It would only be necessary to recall the rest of the file if the user does a read when the file descriptor is pointing to the byte after the last byte stored in the stub.</p>
<p>OK, it wouldn&#8217;t work for *every* file type, but it might help in a lot of cases. If it were implemented, then newly invented file formats might try to put as much metadata as possible at the start of the file in order to work with the feature.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-726263">
				<div id="div-comment-726263" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Peter</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090415-00/?p=18553#comment-726263">
			April 15, 2009 at 11:22 pm</a>		</div>

		<p>ace: you&#8217;re nuts. &nbsp;I just did a dir on 1880 files; it took about three seconds. &nbsp;And much of that time was waiting for the screen to scroll &#8212; it seems to be proportional to how much of the console is visible.</p>
<p>Adrian: as you already know, that&#8217;s not what VMS did. &nbsp;What VMS did was fascinating, though: they had a call where you passed in both the string that the user gave you, and a string of what you wanted for defaults, and it would combine the right bits of the right strings.</p>
<p>Example: user asks for &quot;MYdisk:foo&quot; and the default string is &quot;node::diskB:[directory.hierarchy]bat.ext&quot; &#8212; and the result returns &quot;node::MYdisk:[directory.hierarchy]foo.ext&quot;</p>
<p>It was a very handy system.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-dean-harding even thread-even depth-1" id="comment-726283">
				<div id="div-comment-726283" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Dean+Harding' rel='external nofollow' class='url'>Dean Harding</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090415-00/?p=18553#comment-726283">
			April 15, 2009 at 11:45 pm</a>		</div>

		<p>I just did a &quot;dir /s&quot; of my c:windowswinsxs directory and it took about 65 seconds for 65,000 files and 53,000 directories. As mentioned, much of that time seems to be spent redrawing the console (if I make the console small, it runs faster).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-726303">
				<div id="div-comment-726303" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Alexander Grigoriev</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090415-00/?p=18553#comment-726303">
			April 16, 2009 at 12:26 am</a>		</div>

		<p>@Dean Harding,</p>
<p>Maybe someone will finally finally pay attention and make a default setting to show the extensions? So that the fewer users will be tricked into clicking executable files disguised as MP3?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-726333">
				<div id="div-comment-726333" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">ace</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090415-00/?p=18553#comment-726333">
			April 16, 2009 at 4:06 am</a>		</div>

		<blockquote><p>
  much of that time seems to be spent redrawing the console
</p></blockquote>
<p>Measure it using &quot;dir /b theFullPathToDir &gt;nul&quot;. No console redrawing. And no access to the directory before measurement (including system access!).</p>
<blockquote><p>
  it took about 65 seconds for 65,000 files and 53,000 directories
</p></blockquote>
<p>You selected exactly the directory which system must access independently of you and before you access it. And the average number of files per directory was 1.2, not a few thousand &#8212; that&#8217;s huge difference for NTFS. Somewhere on your C disk (it&#8217;s not so visible if the disk is with too few files or the disk is small) create yourself a directory of e.g. eight thousand files, the files can be even of zero size (I just used Local Settings/Application Data/Opera/profile/images folder). Then measure dir /b theDir &gt;nul after the reboot, once the computer is quiet and certainly before you accessed it through the Explorer. Then measure it the second time. Compare. (Of course I assume you use a normal disk, not a SSD or big RAID array &#8212; the effect comes from too much head seeks).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-726343">
				<div id="div-comment-726343" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Nicholas Sherlock</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090415-00/?p=18553#comment-726343">
			April 16, 2009 at 4:42 am</a>		</div>

		<p>@Alexander Grigoriev:</p>
<p>Users don&#8217;t know what the extension means or is for. They would be no better at spotting executables disguised as Jpegs if the default was changed.</p>
<p>If you show the extension to them, they will just change it and then wonder why they can&#8217;t open the file. Or they will assume that changing the extension also changes the type of the file, and use it to turn bitmaps into jpegs.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-726293">
				<div id="div-comment-726293" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joseph Koss</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090415-00/?p=18553#comment-726293">
			April 15, 2009 at 11:51 pm</a>		</div>

		<p>In plain old FAT16, file extensions *are* essentialy type metadata&#8230; a field in the directory structure which is seperate from a files 8-character name, which is used to store type information.</p>
<p>If thats not seperate type metadata, then what is?</p>
<p>The only difference I see is that with FAT16 file extensions, you arent really restricted by them. That a file with the extension &#8216;com&#8217; or &#8216;exe&#8217; might not actualy be an executable file.. that it is essentialy easy for the field to lie about the file type.</p>
<p>I think the real problem is that we have misused the term &#8216;extension&#8217; .. that in fact what we call the &#8216;extension&#8217; is actualy the type metadata. </p>
<p>There isnt any other purpose for file extensions (if you want to extend the name, just add to the name), so I honestly don&#8217;t see the problem with the system as it is.. </p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-dean-harding odd alt thread-odd thread-alt depth-1" id="comment-726373">
				<div id="div-comment-726373" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Dean+Harding' rel='external nofollow' class='url'>Dean Harding</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090415-00/?p=18553#comment-726373">
			April 16, 2009 at 9:03 am</a>		</div>

		<p>ace: OK, this time, I created a random directory on my D: drive, and added 10,000 files to it. Then I rebooted. When Windows came back up, I waited for the hard disk light to stop flashing, then I opened up a command prompt, typed &quot;dir /b &lt;path&gt; &gt;nul&quot; and it finished in less than 4 seconds.</p>
<p>This is on the Windows 7 beta (not at work, so don&#8217;t have access to Vista here) but I don&#8217;t imagine there&#8217;d be much difference&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-726383">
				<div id="div-comment-726383" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Robin</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090415-00/?p=18553#comment-726383">
			April 16, 2009 at 9:43 am</a>		</div>

		<p>ace &#8211; you are correct re the caching issue. &nbsp;it seems that whichever is called first spends about one disk seek &nbsp;latency per file returned unless the filenames are already cached.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-726323">
				<div id="div-comment-726323" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://homepages.nildram.co.uk/~smithoak/' rel='external nofollow' class='url'>Steve Smith</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090415-00/?p=18553#comment-726323">
			April 16, 2009 at 3:23 am</a>		</div>

		<p>&gt; * Read the first few bytes of the file looking for magic numbers.</p>
<p>&gt; &nbsp; Problem: Reading bytes from the file forces a recall.</p>
<p>It depends on when you do it surely. &nbsp;If the metadata is created when the file is created or updated, the file hasn&#8217;t been migrated and doesn&#8217;t need recalling. &nbsp;Also you don&#8217;t need to recreate the information every time the directory is opened because the info is already in the filesystem.</p>
<p>&gt; * Store the type in the file&#8217;s metadata.</p>
<p>&gt; &nbsp; Problem: The metadata won&#8217;t survive being sent as an email attachment or transferred to a file system that doesn&#8217;t have a place to store that metadata, such as a floppy drive, a CD, or a unix volume.</p>
<p>So what. &nbsp;Depending upon the destination, neither will the creation date or the file size or anything else apart from the file name if you&#8217;re lucky. &nbsp;Also we can&#8217;t copy it to a wild filesystem or an email attachment if it has been migrated, it has to be recalled first.</p>
<p>&gt; &nbsp;* Read the first few bytes to determine the type and cache it in the file system.</p>
<p>&gt; &nbsp; &nbsp;Problem: Um, that&#8217;s just begging the question. We&#8217;re trying to figure out where in the file system to save it! </p>
<p>Why not put it into the directory entry? &nbsp;That&#8217;s where it&#8217;s stored at the moment.</p>
<p>&gt; &nbsp;I think you&#8217;ll find that the number of email programs that save the MIME type when saving an attachment is approximately zero.</p>
<p>It doesn&#8217;t have to be MIME, although that would be my choice if I had a blank slate. &nbsp;Why not use the extension? &nbsp;When the file is created on a tame filesystem as NoisyRacket.mp3, set the file type to mp3. &nbsp;If I rename the file to BeautifulLullaby.avi, the file type is still in the directory as mp3.</p>
<p>If we access the file in the wild, from a source that doesn&#8217;t support the feature (Linux or CD or email or whatever), &nbsp;read the file looking for magic number. &nbsp;When it reenters our tame filesystem, set the file type field in the directory to whatever the magic number indicates. &nbsp;The user doesn&#8217;t have to get involved.</p>
<p>&gt; Gabe: &nbsp;Every program currently in existence wouldn&#8217;t know how to create the metadata you want. Even if you only ever used programs that have been upgraded to support the new APIs, any files from older or foreign systems would have no such metadata.</p>
<p>Well, I have a radical idea, let the operating system do it. &nbsp;That&#8217;s supposed to be it&#8217;s job, it&#8217;s about time it acted like it.</p>
<div class=post>[<i>No fair inventing new types of metadata. The context of the discussion was &#8220;What can Explorer use to obtain the file type, given how file systems work today?&#8221; (Mind you, requiring the filesystem to infer the MIME type at file creation time requires a good amount of clairevoyance. How does it know that a file that begins with the characters &#8216;&lt;?xml version=&#8221;1.0&#8243; encoding=&#8221;UTF-8&#8243;?&gt;&#8217; is of type application/x-litware-customerlist before Litware is installed? How does it know that it&#8217;s a Litware customer list and not a Contoso product catalog? [which also takes the physical form of an XML file]) -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-726433">
				<div id="div-comment-726433" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Alexander Grigoriev</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090415-00/?p=18553#comment-726433">
			April 16, 2009 at 10:27 am</a>		</div>

		<p>@Nicholas Sherlok,</p>
<p>A friend of mine, who is perfectly aware of what the file extensions are, and is quite computerproficient, fell victim of an email virus (VBS which pretended to be an MP3 file), which successfully replaced his valuable JPEG files with the script&#8217;s copy. Thanks, microsoft, for saving him from his &quot;ignorance&quot;.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-726553">
				<div id="div-comment-726553" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">ace</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090415-00/?p=18553#comment-726553">
			April 16, 2009 at 2:26 pm</a>		</div>

		<blockquote><p>
  about one disk seek &nbsp;latency per file returned unless the filenames are already cached
</p></blockquote>
<p>Yes, I believe that&#8217;s the possible in extreme case, one seek per a file name in a directory, only to get the list of the files there.</p>
<p>Dean, for example, used D disk which was probably in better state than C (regarding how the file info would be distributed). If his disk takes 4 ms per seek, there were 1000 disk seeks just to get a list of 10000 files.</p>
<p>But &quot;just 4 seconds&quot; is not fast at all! A modern disk can have 100 MB per second sustained data rate, so the disk was able to deliver 400 MB (megabytes) in the time a list which totalled around 100 KB (kilobytes) (if the file names were short) was fetched.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-726633">
				<div id="div-comment-726633" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Timothy Fries</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090415-00/?p=18553#comment-726633">
			April 16, 2009 at 3:29 pm</a>		</div>

		<blockquote><p>
  A friend of mine, who is perfectly aware of what the file extensions are, and is quite computerproficient, fell victim of an email virus (VBS which pretended to be an MP3 file), which successfully replaced his valuable JPEG files with the script&#8217;s copy. Thanks, microsoft, for saving him from his &quot;ignorance&quot;.
</p></blockquote>
<p>In your example the user already has two very important clues that a VBS script is not an MP3 file. &nbsp;#1 is the file type icon, and #2 is that the &quot;.mp3&quot; extension would be appearing on that file while all other MP3 files would show no extension.</p>
<p>If these two deviations from the norm didn&#8217;t clue the user into the fact that something wasn&#8217;t right, what makes you think seeing the file extension would? &nbsp;I mean they&#8217;ve kinda already proved they don&#8217;t pay that much attention to the file &#8216;extension&#8217; by ignoring clue #2 above.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-726643">
				<div id="div-comment-726643" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Anonymous</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090415-00/?p=18553#comment-726643">
			April 16, 2009 at 3:55 pm</a>		</div>

		<p>To all here who advocate using MIME types: clearly you have not been bitten by a misconfigured web server that tags your favorite binary file format as &quot;text/plain&quot;, causing your browser to display its file contents as text. &nbsp;By relying on MIME types, you are trusting your data source not to lie to you, or even disagree. &nbsp;Your users may encounter strange and frustrating failures when some other piece of software disagrees about what MIME type to assign.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-726693">
				<div id="div-comment-726693" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">The Imp</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090415-00/?p=18553#comment-726693">
			April 16, 2009 at 8:28 pm</a>		</div>

		<p>Raymond, your point is duly noted.</p>
<p>Even so, back in 1995, when you (not you personally) were redesigning FAT to add Long File Name support, wouldn&#8217;t it have been a good idea to add support for other things too, such as extended attributes or additional metadata, via the same nonsense-hidden-folders mechanism? The principle of identifying files by magic was already very old even then. As for MIME, as you rightly said, it was not commonplace or of foreseeable consequence. However, if you&#8217;re going to say that &#8220;We had no way of knowing that MIME would become a de-facto standard for identifying files, because web/email wouldn&#8217;t really take off for a few more years&#8221;, then you can hardly argue that &#8220;you can&#8217;t use metadata solution X because it won&#8217;t survive being emailed&#8221; &#8212; email was not a design consideration in 1995, and if it was, a MIME extension to the filesystem would have been a logical choice! Now who&#8217;s begging the question?</p>
<p>I&#8217;ll add that an awful lot of mail clients don&#8217;t even go to any special effort to preserve file names (why would you name a JPEG &#8220;part 1.2&#8221;, iPhone?), let alone any other kind of metadata. And speaking of Apple, they&#8217;ve always had problems with emailing files on account of the way that their filesystem (used to) store their metadata.</p>
<p>(I&#8217;m picking on Apple here, but the criticism applies far more widely than just them. And to be fair, at least the iPhone does set the MIME type correctly.)</p>
<p>As for the &#8220;misconfigured web server&#8221; issue that our good friend Anonymous points out: as soon as you start talking about &#8220;misconfigured software X&#8221;, it&#8217;s not going to be a very meaningful discussion. Yes, I&#8217;ve had that particular annoyance, among others. But that is not the fault of MIME; and moreover, if the server was hosted on a filesystem that correctly supported MIME, then it wouldn&#8217;t be an issue.</p>
<div class=post>[<i>People were emailing files around long before MIME was invented. Remember uuencode? Suppose you invented a new file typing system. How do you make it work with existing programs that were designed under the old system? And in a way that won&#8217;t make virus-writers giggle with glee? -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-726723">
				<div id="div-comment-726723" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">steveg</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090415-00/?p=18553#comment-726723">
			April 16, 2009 at 10:25 pm</a>		</div>

		<p>@ace, @dean: is the time taken to sort 10,000 files a measurable proportion of the time you&#8217;re measuring? I don&#8217;t think dir is capable of returning unsorted results.</p>
<p>The other issue to consider is scroll speed. Measure the time with the smallest console window you can, and with the largest. Also try fullscreen vs window mode.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-726753">
				<div id="div-comment-726753" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">frustrated with you know who</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090415-00/?p=18553#comment-726753">
			April 16, 2009 at 11:03 pm</a>		</div>

		<p>@igor: You have said before you won&#8217;t come back here and well&#8230; here you are. You&#8217;re clearly at least moderately clever but you do come across as rather an unpleasant person.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-726783">
				<div id="div-comment-726783" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Randall</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090415-00/?p=18553#comment-726783">
			April 17, 2009 at 1:04 am</a>		</div>

		<p>Recently ran into a related problem in real life in a Mac/Unix environment. &nbsp;I can mount a remote filesystem and treat it as a local directory; it&#8217;s very useful to me, but the latency is pretty awful. &nbsp;Many programs, including my former favorite text editor, work fine locally but slow to a crawl working with lots of files in remote directories.</p>
<p>These programs aren&#8217;t even trying to read magic numbers in files as far as I know; they&#8217;re just assuming filesystem access is pretty cheap, so they make more synchronous file accesses than they strictly need to. &nbsp;For example, my editor would frequently update an autosave file on the remote FS, or check that no other program had changed any open remote file while it wasn&#8217;t looking, and I&#8217;d have to wait a fraction of a second (or occasionally much more) while it did it. &nbsp;</p>
<p>I ended up using a different text editor that has its own built in virtual filesystem hoo-de-hah; it knows when it&#8217;s working with a remote filesystem and quits doing the problematic stuff then.</p>
<p>(Yes, I should probably be using vi or SMB or NFS or $method. &nbsp;Flames are welcome if they come with constructive tips I could use.)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-726823">
				<div id="div-comment-726823" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joseph Koss</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090415-00/?p=18553#comment-726823">
			April 17, 2009 at 2:40 am</a>		</div>

		<p>Tim Fries:</p>
<p>You missed the point.</p>
<p>Explorer defaults to NOT showing file extensions, so the lack of &quot;.mp3&quot; or &quot;.jpg&quot; isnt a clue since there isnt a &quot;.vbs&quot; displayed either.</p>
<p>As far as icons.. there are multiple views in explorer, and not all of them have shown icons over the years. Still further, there is no standard protected set of icons which will guarantee that things like .vbs and a .mp3 will have easily differentiable icons. Media players are notorious for chaning all the icons for all the file types it can handle to its own custom icon.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-726863">
				<div id="div-comment-726863" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">ace</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090415-00/?p=18553#comment-726863">
			April 17, 2009 at 3:35 am</a>		</div>

		<blockquote><p>
  @ace, @dean: is the time taken to sort 10,000 files a measurable proportion of the time you&#8217;re measuring?
</p></blockquote>
<p>No, NTFS by design maintains sorted order at the moment the file is added to directory. FAT keeps unsorted directories.</p>
<blockquote><p>
  The other issue to consider is scroll speed.
</p></blockquote>
<p>Already eliminated. See &quot; &gt;nul&quot; in previous posts.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-726893">
				<div id="div-comment-726893" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Chris Lineker</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090415-00/?p=18553#comment-726893">
			April 17, 2009 at 4:55 am</a>		</div>

		<p>@Dean Harding</p>
<p>That option doesn&#8217;t exist pre-vista, and it doesn&#8217;t prevent other behaviours such as calculating the dimensions of the video frame.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-726743">
				<div id="div-comment-726743" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://levicki.net/' rel='external nofollow' class='url'>Igor Levicki</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090415-00/?p=18553#comment-726743">
			April 16, 2009 at 10:49 pm</a>		</div>

		<p>&gt;&gt;You can&#8217;t open the file until the user tells you to open it&lt;&lt;</p>
<p>Is that so? Then why Explorer opens Recycler and System Volume Information folders, and why that Windows Portable Devices CRAP insists on opening folder named WPDNSE in my TEMP folder?!?</p>
<p>I never told them to open any folders.</p>
<p>Why I cannot delete wpd*.* from WindowsSystem32? Who keeps them open so I can&#8217;t access them? I don&#8217;t remember telling anyone to open those files and keep them locked.</p>
<p>Why in Vista administrator doesn&#8217;t have access to many registry keys?</p>
<p>Even worse, why I cannot recursively take ownership and add permissions on registry keys so I can delete a tree of keys?</p>
<p>I want to have the final say what my system does, and it gets harder and harder with every Windows version and then you start preaching how Explorer and Windows in general respect user wishes. Yeah right&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-726943">
				<div id="div-comment-726943" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Xepol</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090415-00/?p=18553#comment-726943">
			April 17, 2009 at 6:58 am</a>		</div>

		<p>and the correct conclusion is actually that the OS stores an insufficent amount of meta data since accessing the files over a fast medium feels like a fail when you have enough files.</p>
<p>MS tries to fake its way past this with &quot;indexing&quot;.</p>
<p>Sadly, it still feels like a fail.</p>
<p>Maybe in today&#8217;s day and age, the OS should have more advanced meta data features than, oh, dos 2.11?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-727113">
				<div id="div-comment-727113" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://homepages.nildram.co.uk/~smithoak/' rel='external nofollow' class='url'>Steve Smith</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090415-00/?p=18553#comment-727113">
			April 17, 2009 at 10:15 am</a>		</div>

		<p>&gt; [No fair inventing new types of metadata. The context of the discussion was &#8220;What can Explorer use to obtain the file type, given how file systems work today?&#8221;</p>
<p>So, I am stuck with using file extensions for the rest of my life because of a decision based on FAT-12? &nbsp;That doesn&#8217;t seem fair. &nbsp;Are you saying that because the designers chose the &#8220;sucky choice&#8221; in 1927 when windows first sprang forth that we are not allowed to consider something else?</p>
<p>The original choice was made for some reasons, probably very good ones at the time. &nbsp;However, Windows has changed in so many ways since: we are not limited to 8.3 names, or 2Mbyte partitions or 64M memory, why not here?</p>
<p>&gt; Mind you, requiring the filesystem to infer the MIME type at file creation time requires a good amount of clairevoyance. How does it know that a file that begins with the characters &#8216;&lt;?xml version=&#8221;1.0&#8243; encoding=&#8221;UTF-8&#8243;?&gt;&#8217; is of type application/x-litware-customerlist before Litware is installed? How does it know that it&#8217;s a Litware customer list and not a Contoso product catalog? [which also takes the physical form of an XML file]) -Raymond</p>
<p>Sneaky! &nbsp;Using file extension .xml, like we do at the moment, sure copes with that one. &nbsp;But I&#8217;ll have a go. &nbsp;The code that works out the &#8220;magic&#8221; does not rely on the component being installed. &nbsp;Remember this is off the top of my head, design by the seat of the pants (Yes, I know&#8230;but they keep my ears warm) &nbsp;but it seems to me, it would be ideal choice for a finite state machine implementation. &nbsp;We wouldn&#8217;t need to change the code, just the tables. &nbsp;This could be done via the interwebbything.</p>
<div class=post>[<i>So each time the table gets updated, the file system has to go through and recalculate all the MIME types that were calculated using the old tables? (The hard part isn&#8217;t finding a &#8220;there&#8221; you want to be. The hard part is getting from &#8220;here&#8221; to &#8220;there&#8221; without losing all your customers.) -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-727233">
				<div id="div-comment-727233" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Aaargh!</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090415-00/?p=18553#comment-727233">
			April 17, 2009 at 1:47 pm</a>		</div>

		<p>&gt; &#8220;No fair inventing new types of metadata. The context of the discussion was &#8220;What can Explorer use to obtain the file type, given how file systems work today?&#8221;</p>
<p>Well, since Explorer was part of this brand new operating system you were designing at the time, and you were already messing around with the FS as part of creating that OS, why is the way filesystems work &#8216;today&#8217; a given ? Aren&#8217;t you supposed to be working on &#8216;tomorrow&#8217; ? </p>
<div class=post>[<i>Explorer did not rely on any of the new features for proper functioning. That&#8217;s part of what made Windows 95 a success. (Besides, if you don&#8217;t work today, you won&#8217;t be around tomorrow.) -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-727393">
				<div id="div-comment-727393" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">211</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090415-00/?p=18553#comment-727393">
			April 17, 2009 at 7:33 pm</a>		</div>

		<p>&gt; Explorer did not rely on any of the new features for proper functioning.</p>
<p>Oh, the Windows 95 Explorer shell works fine and dandy if the filesystem somehow prevents Long File Name &#8220;metadata&#8221;, does it?</p>
<div class=post>[<i><a href="http://mc-computing.com/technical/Win_95_Registry.htm" rel="nofollow">Absolutely</a>. <a href="http://technet.microsoft.com/en-us/library/cc976058.aspx" rel="nofollow">That was an explicitly supported configuration</a>, and a lot of effort went into making it work. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-727473">
				<div id="div-comment-727473" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Nicholas Sherlock</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090415-00/?p=18553#comment-727473">
			April 18, 2009 at 5:08 am</a>		</div>

		<p>The set of people who really understand what file extensions mean are more or less the same set of people who know how to turn on file extensions.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-728293">
				<div id="div-comment-728293" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://eleccham.livejournal.com' rel='external nofollow' class='url'>Gordon Schumacher</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090415-00/?p=18553#comment-728293">
			April 21, 2009 at 5:49 pm</a>		</div>

		<p>Hmm&#8230; not at all convinced that I&#8217;m not missing something here, but&#8230;</p>
<p>Instead of making it part of the file or part of the filesystem metadata, why not make it part of the &quot;offline files&quot; API? &nbsp;That doesn&#8217;t address a network share, indeed (though I&#8217;m not sure it couldn&#8217;t be done there) but if the API is written such that a computer hosting offline data is also required to cache some bits of metadata&#8230; wouldn&#8217;t that fix it?</p>
<p>On one hand, yes, this is me handing a time machine to the Win95 developers &#8211; but on the other hand, it&#8217;s still very much a relevant question for other reasons, as &quot;cloud&quot; storage becomes the new &quot;in thing&quot;&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

