<html>
<head>
<title>You can call MsgWaitForMultipleObjects with zero handles</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>You can call MsgWaitForMultipleObjects with zero handles</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>January 25, 2006 / year-entry #33</td></tr>
<tr><td><b>Tags:</b></td><td>code</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20060125-18/?p=32533</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>11</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">There is no WaitMessageTimeout function, but you can create your own with the assistance of the MsgWaitForMultipleObjects function. BOOL WaitMessageTimeout(DWORD dwTimeout) { return MsgWaitForMultipleObjects( 0, NULL, FALSE, dwTimeout, QS_ALLINPUT) == WAIT_TIMEOUT; } To wait for a message with timeout, we use the MsgWaitForMultipleObjects in a vacuous sense: You pass it a list of objects you...</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>
There is no <code>WaitMessageTimeout</code> function,
but you can create your own with the assistance of
the <code>MsgWaitForMultipleObjects</code> function.
</p>
<pre>
BOOL WaitMessageTimeout(DWORD dwTimeout)
{
 return MsgWaitForMultipleObjects(
    0, NULL, FALSE, dwTimeout, QS_ALLINPUT)
      == WAIT_TIMEOUT;
}
</pre>
<p>
To wait for a message with timeout, we use
the <code>MsgWaitForMultipleObjects</code>
in a vacuous sense:
You pass it a list of objects you want to wait for,
as well as a timeout and a set of queue states,
asking that the function return when any of the
objects is signalled or when a message is ready.
By passing no objects, the only thing left to wait
for is an incoming message.
</p>
<p>
Next time, we'll see how this basic idea can be used
to build a slightly more complex function.
</p>
<p>
[1/26: Fix call to MsgWaitForMultipleObjects; had it confused
with MsgWaitForMultipleObjectsEx.
That's what happens when you write entries on an airplane.]</p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (11)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment byuser comment-author-mike-dimmick even thread-even depth-1" id="comment-340813">
				<div id="div-comment-340813" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Mike+Dimmick' rel='external nofollow' class='url'>Mike Dimmick</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060125-18/?p=32533#comment-340813">
			January 25, 2006 at 2:23 pm</a>		</div>

		<p>Quick note (and I&#8217;m sure Raymond has mentioned this before): when MsgWaitForMultipleObjects returns WAIT_OBJECT_0 + nCount to signify that a message arrived, it means that a new message has arrived since the last time you called MsgWaitEtc. If more than one message was queued, you should process all of them, because your next call to MsgWaitForMultipleObjects will block until a further message is queued (or the timeout expires, or one of the objects is signalled).</p>
<p>I normally call PeekMessage(&#8230;, PM_REMOVE) in a loop if MsgWaitEtc indicates queued messages.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-340833">
				<div id="div-comment-340833" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://sayler@thewalrus.org' rel='external nofollow' class='url'>Matt Sayler</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060125-18/?p=32533#comment-340833">
			January 25, 2006 at 2:58 pm</a>		</div>

		<p>I&#8217;m a bit unclear here, but this looks surprisingly similar to the use of select() in POSIXland.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-340893">
				<div id="div-comment-340893" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Coleman</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060125-18/?p=32533#comment-340893">
			January 25, 2006 at 3:47 pm</a>		</div>

		<p>How is MsgWait different from plain old WaitForMultipleObjects?  Is it because it waits for a pre-defines list of objects?</p>
<p>I&#8217;ve always used the non Msg versions of these functions in the past.</p>
<p>Matt, this is more akin to the pthread_condition_variable stuff in POSIX.   Both POSIX and Windows have select().  select is used to wait for input from a number of file desciptors.  You can also use select for high resolution timers.  e.g. pausing with 5 ms resolution.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-340903">
				<div id="div-comment-340903" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://apipes.blogspot.com' rel='external nofollow' class='url'>Tim Lesher</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060125-18/?p=32533#comment-340903">
			January 25, 2006 at 4:10 pm</a>		</div>

		<p>Nice&#8230; and I think I see where you&#8217;re going with this. ;-)</p>
<p>Coleman: MsgWaitForMultipleObjects is useful when you want to wait <em>either</em> for an object to be signalled, or for a message to get put into the thread queue. </p>
<p>In POSIX-land, select handles all of these kinds of cases, because (all together now!) in POSIX, all the world&#8217;s a file descriptor.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-340943">
				<div id="div-comment-340943" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">SuperKoko</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060125-18/?p=32533#comment-340943">
			January 25, 2006 at 5:20 pm</a>		</div>

		<blockquote><p>
  &gt; But if MsgWaitForEtc can wait for window messages too, then never mind, it isn&#8217;t &quot;more general&quot;. Well, it may be (I&#8217;m not sure), but not for this reason.</p>
<p>It does.<br />
  <br />Actually, you can specify a &quot;mask&quot; of messages to handle, which can include WM_PAINT messages,  keyboard messages, SendMessage&#8217;s messages, mouse messages, etc.<br />
  <br /><a rel="nofollow" target="_new" href="http://msdn.microsoft.com/library/default.asp?url=/library/en-us/dllproc/base/msgwaitformultipleobjects.asp" rel="nofollow">http://msdn.microsoft.com/library/default.asp?url=/library/en-us/dllproc/base/msgwaitformultipleobjects.asp</a></p>
<p>I wonder if there is a safe method to treat all messages before calling MsgWaitForMultipleObjects.</p>
<p>Even using PeekMessage, a new message might be recieved just after the last PeekMessage has returned and just before the MsgWaitForMultipleObjects is executed.<br />
  <br />This is unlikely to happen, but may happen.</p>
<p>Setting a dummy timer which sends dummy messages, just to make MsgWaitForMultipleObjects return at regular intervals (or using a small timeout), partially solves the problem, but introduces a conceputal flaw, and a performance reduction (like the &quot;Performance consequences of polling&quot; article explained).
</p></blockquote>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-340933">
				<div id="div-comment-340933" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">BryanK</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060125-18/?p=32533#comment-340933">
			January 25, 2006 at 4:58 pm</a>		</div>

		<p>Actually, if MsgWaitForEtc only waits for thread messages, then POSIX&#8217;s select() is more general.  Because in POSIX-land, the equivalent of WM_PAINT (which is a window message in Win32, not a thread message &#8212; right?) is sent to your X11 socket, which can be put into one or more of the select() FD_SETs.</p>
<p>So select() can handle more than just wait objects and (X11&#8217;s version of) thread messages &#8212; it can handle wait objects plus *any* (X11) message.</p>
<p>But if MsgWaitForEtc can wait for window messages too, then never mind, it isn&#8217;t &quot;more general&quot;.  Well, it may be (I&#8217;m not sure), but not for this reason.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-oldnewthing bypostauthor even thread-even depth-1" id="comment-341053">
				<div id="div-comment-341053" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Raymond+Chen+-+MSFT' rel='external nofollow' class='url'>Raymond Chen - MSFT</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060125-18/?p=32533#comment-341053">
			January 26, 2006 at 1:40 am</a>		</div>

		<p>SuperKoko: I already discussed the lack-of-race-condition last year. <a rel="nofollow" target="_new" href="http://blogs.msdn.com/oldnewthing/archive/2005/02/17/375307.aspx" rel="nofollow">http://blogs.msdn.com/oldnewthing/archive/2005/02/17/375307.aspx</a></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-341063">
				<div id="div-comment-341063" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Richard</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060125-18/?p=32533#comment-341063">
			January 26, 2006 at 6:02 am</a>		</div>

		<p>&quot;MWFMO_WAITANY&quot;? Is this a local synonym for TRUE? I can&#8217;t find it on MSDN (VS2005 version).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-341023">
				<div id="div-comment-341023" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Stu</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060125-18/?p=32533#comment-341023">
			January 25, 2006 at 11:17 pm</a>		</div>

		<p>Now that we&#8217;ve mentioned POSIX (and X11), doesn&#8217;t everyone think that using select() is sooo much easier that having to remember all those WaitFor* calls in windows?</p>
<p>Besides, if I&#8217;m waiting on a socket or pipe on *nix, is just use a blocking read() or recv().</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-oldnewthing bypostauthor odd alt thread-odd thread-alt depth-1" id="comment-341223">
				<div id="div-comment-341223" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Raymond+Chen+-+MSFT' rel='external nofollow' class='url'>Raymond Chen - MSFT</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060125-18/?p=32533#comment-341223">
			January 26, 2006 at 4:33 pm</a>		</div>

		<p>I mentally swapped MsgWaitForMultipleObjects and MsgWaitForMultipleObjectsEx, sorry. But if you understand the underlying message you should have been able to fix the problem yourself. (Consider it an unintended exercise for the reader.)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-341293">
				<div id="div-comment-341293" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Anonymous Terrorist</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20060125-18/?p=32533#comment-341293">
			January 26, 2006 at 9:57 pm</a>		</div>

		<blockquote><p>
  [1/26: Fix call to MsgWaitForMultipleObjects;<br />
  <br />&gt; had it confused with<br />
  <br />&gt; MsgWaitForMultipleObjectsEx.<br />
  <br />&gt; That&#8217;s what happens when you write entries<br />
  <br />&gt; on an airplane.]</p>
<p>When you write entries on an airplane, Ex maniacs slip corruption into your code?
</p></blockquote>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

