<html>
<head>
<title>Why does the copy dialog give such horrible estimates?</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>Why does the copy dialog give such horrible estimates?</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>January 6, 2004 / year-entry #4</td></tr>
<tr><td><b>Tags:</b></td><td>other</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20040106-00/?p=41193</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>34</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">Because the copy dialog is just guessing. It can't predict the future, but it is forced to try. And at the very beginning of the copy, when there is very little history to go by, the prediction can be really bad. Here's an analogy: Suppose somebody tells you, "I am going to count to 100,...</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>Because the copy dialog is just guessing. It can't predict the future, but it is forced to try. And at the very beginning of the copy, when there is very little history to go by, the prediction can be really bad.</p>
<p> Here's an analogy: Suppose somebody tells you, "I am going to count to 100, and you need to give continuous estimates as to when I will be done." They start out, "one, two, three...". You notice they are going at about one number per second, so you estimate 100 seconds. Uh-oh, now they're slowing down. "Four... ... ... five... ... ..." Now you have to change your estimate to maybe 200 seconds. Now they speed up: "six-seven-eight-nine" You have to update your estimate again.  </p>
<p> Now somebody who is listening only to your estimates and not the the person counting thinks you are off your rocker. Your estimate went from 100 seconds to 200 seconds to 50 seconds; what's your problem? Why can't you give a good estimate? </p>
<p> File copying is the same thing. The shell knows how many files and how many bytes are going to be copied, but it doesn't know know how fast the hard drive or network or internet is going to be, so it just has to guess. If the copy throughput changes, the estimate needs to change to take the new transfer rate into account. </p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (34)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-119863">
				<div id="div-comment-119863" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Matt C. Wilson</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040106-00/?p=41193#comment-119863">
			January 6, 2004 at 7:10 am</a>		</div>

		<p>This sounds like one of those bad calls by the feature designer.  I&#8217;m sure the average user doesn&#8217;t want to see a byte counter spin up, but back in the day it was nice to see Telix keep me informed of my cps/baud rates and packet count when I was ZModeming the Doom II demo.  </p>
<p>Maybe the copy dialog could have one of those expand-downward buttons, with the nitty-gritty for the more technical users?  Or am I the only person in the world who finds packet loss interesting?  :)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-119873">
				<div id="div-comment-119873" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://weblogs.asp.net/fbouma' rel='external nofollow' class='url'>Frans Bouma</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040106-00/?p=41193#comment-119873">
			January 6, 2004 at 7:20 am</a>		</div>

		<p>It has a horrible estimate algorithm. There are no excuses. If has to copy 1000 1KB files and 10 1MB files it thinks it will be as busy with the 1 MB file as with the 1KB files. </p>
<p>The underlying copy routine is just as crappy as the estimate routine for the shell dialog. Try copying an ISO to another partition on the same physical harddisk. Why does it take so utterly long? I can copy it faster from particion 1 to 2 by first copying it to a server on the network, then copy it back. THe reason for this is that the algorithm for filecopy is so badly designed: it always uses the same blocksize for the file to copy. Everybody knows the more stepping is performed by a drive, the more time you will loose. It&#8217;s therefore stupid to copy a big file in very tiny chunks, as it does, while there is for example 200 or more MB of memory available for this action. </p>
<p>I truly hope MS will fix these routines in the future, so big(ger) file copies are done smarter, we&#8217;re not on 640KByte memory machines anymore.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-119883">
				<div id="div-comment-119883" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blogs.biasecurities.com/jim' rel='external nofollow' class='url'>James Geurts</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040106-00/?p=41193#comment-119883">
			January 6, 2004 at 7:21 am</a>		</div>

		<p>Personally, I would like the copy dialog to show estimated total time to copy when copying multiple items.  I just copied the entire vs.net setup directory structure frome one machine to another, and the copy dialog kept changing how much time was left based on the folder that it was in.  It would display something similar to 30 seconds remaining, then jump back up to 40 minutes remaining when it hit another directory structure.  It would be nice if it estimated the time to copy the current file and the time for the entire transaction.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-119893">
				<div id="div-comment-119893" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Chris Gervais</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040106-00/?p=41193#comment-119893">
			January 6, 2004 at 7:56 am</a>		</div>

		<p>You should just remove the time component altogether. How does time really have any relevance? If the copy is going to take a while, won&#8217;t the user get the drift when the progress bar fills slowly? And if there are only a few, small items to copy, isn&#8217;t a more compact Copy dialog (maybe without the time and progress bar, just the flinging paper pieces) actually more beneficial? Fewer UI items to draw and update and the experience is far less intrusive.</p>
<p>&lt;sarcasm&gt;Better yet, in Longhorn, to show off the Avalon graphics system that Mac OS X users have today, why not create an amazing visual display of a pipe connecting the copy location to the destination and files being squeezed into a funnel at the start of the pipe (of course showing little Courier ones and zeroes flying down the pipe) and then being reconstituted at the other end? The pipe could pulse and change colors to indicate time required, progress, HD space taken, etc.&lt;/sarcasm&gt;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-119903">
				<div id="div-comment-119903" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://weblogs.asp.net/oldnewthing/' rel='external nofollow' class='url'>Raymond Chen</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040106-00/?p=41193#comment-119903">
			January 6, 2004 at 8:27 am</a>		</div>

		<p>Frans: Actually the copy engine bases its progress entirely on number of bytes copied, which is the problem. It doesn&#8217;t take into account the other file copying overhead, like creating the directory entry, hunting for a large contiguous region of free disk space, pre-extending the file&#8230;</p>
<p>As for block sizes: If the shell detects that the copy is a file-to-file copy, it uses CopyFileEx. If you don&#8217;t like the block sizes used by CopyFileEx, feel free to complain to the kernel team. The shell is the victim here.</p>
<p>James: The time estimate is indeed for the entire file copy operation. Actually I am personally annoyed that it does that, since it means that there is an annoying &quot;preparing to copy files&quot; step that can take a really long time for complex directory structures.</p>
<p>Chris: Actually we do that already. Notice that the copy progress dialog doesn&#8217;t appear at all for small copies.<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-119913">
				<div id="div-comment-119913" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Terry Denham</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040106-00/?p=41193#comment-119913">
			January 6, 2004 at 8:41 am</a>		</div>

		<p>Frans</p>
<p>If you can copy to the network and then to another partition on the same drive fast then how can the overall copy algorithm be slow?</p>
<p>The way you described it (from one partition to another on the same drive), sounds to me like you are I/O bound on the drive.</p>
<p>If drive to drive is fast and drive to network to drive is fast and partition to partition on different drives is fast but only partition to partition on the same drive is slow then it&#8217;s not a generic problem with the copy algorithm.</p>
<p>Have you run perfmon and looked at I/O utilitization while you are doing this to back up your assertion or are you just assuming based on some simple observations?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-119923">
				<div id="div-comment-119923" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Terry Denham</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040106-00/?p=41193#comment-119923">
			January 6, 2004 at 8:48 am</a>		</div>

		<p>As a follow up.</p>
<p>On my server at home with a RAID-5 7x18GB 10,000 RPM array, file copying is extremely fast.</p>
<p>So now we have drive to drive is fast, drive to network to drive is fast, RAID-5 array is fast but on Frans&#8217; PC partition to partition is slow so there must be some problem with the generic algorithm.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-119943">
				<div id="div-comment-119943" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Dave</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040106-00/?p=41193#comment-119943">
			January 6, 2004 at 9:55 am</a>		</div>

		<p>Copying across partitions on a single physical drive causes a boatload of seeking, doesn&#8217;t it?  Whereas copying to/from network shares or other physical drives can do continuous reads/writes.  Increasing the copy buffer size would probably help a fair amount, but even so I&#8217;m not surprised that would be slow.<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-119953">
				<div id="div-comment-119953" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://steven.vorefamily.net/' rel='external nofollow' class='url'>steven</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040106-00/?p=41193#comment-119953">
			January 6, 2004 at 10:32 am</a>		</div>

		<p>now&#8230; why does XCopy just die with &quot;Access denied&quot; instead of giving the slightest hint of *what* access (read from the original, write to the destination) or a chance to skip that file and continue?<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-119963">
				<div id="div-comment-119963" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://weblogs.asp.net/oldnewthing/' rel='external nofollow' class='url'>Raymond Chen</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040106-00/?p=41193#comment-119963">
			January 6, 2004 at 10:36 am</a>		</div>

		<p>xcopy is an ancient program. There is I believe a /C switch to skip problem files and continue. But in general it&#8217;s one of those terse command line programs.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-119993">
				<div id="div-comment-119993" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Larry Osterman</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040106-00/?p=41193#comment-119993">
			January 6, 2004 at 11:23 am</a>		</div>

		<p>XCOPY is so bad because when IBM (!) wrote XCOPY back in 1983 they didn&#8217;t care about robustness and reasonable diagnostics &#8211; they weren&#8217;t a goal 20 years ago.</p>
<p>Here&#8217;s a smidge of history of XCOPY (you did bring it up).</p>
<p>Back in 1982 when IBM first licensed MS-DOS from Microsoft and rebranded it as PC-DOS, part of the deal was that IBM authored many of the system utilities.  For example, the MODE and XCOPY utilities were written by IBM and included on PC-DOS.</p>
<p>For MS-DOS, there was no such utility, it was up to the MS-DOS OEM to write them (just like the MS-DOS OEM had to write their own version of the DOS BIOS (IO.SYS, called IBMBIO.COM on PC-DOS).</p>
<p>Many of our OEMs, especially ones like Compaq (who insisted on having perfect 100% clones of PC-DOS) hated this &#8211; they had built 100% compatible hardware to IBM&#8217;s, their system ROMs were totally compatible with IBM&#8217;s, they could run IBM&#8217;s PC-DOS out-of-the-box without a problem, so they wanted to license a copy of MS-DOS from Microsoft that was totally identical in functionality to IBM&#8217;s.</p>
<p>So Microsoft decided to oblige them.  We took IBMBIO.COM (which was written by Microsoft for IBM), scrubbed it of references to the IBM ROM (I was the dirty half of that process, a new hire with no PC experience was the clean room half)).  Then we started working on replacements for the MODE, XCOPY and other commands (I don&#8217;t totally remember which ones we did, but MODE and XCOPY were the big ones).  The combined product was called DOS 3.2, and was the first &quot;packaged product&quot; version of DOS from Microsoft &#8211; Microsoft shipped a box to OEMs that they could then stick in the OEM&#8217;s box.</p>
<p>Shortly after DOS 3.2 shipped, Microsoft and IBM signed their joint development agreement, which gave Microsoft the rights to all the IBM authored utilities, so the Microsoft authored versions of the IBM utilities were scrapped in favor of the IBM utilities, and MS-DOS 3.3 was the first version of DOS that was written with true 100% compatibility with IBM&#8217;s offering (there&#8217;s a humorous story there too but this is already way too long).</p>
<p>For NT, we needed a 32 bit version of these utilities written in C (MODE was written half in C half in assembly, similarly xcopy was a mingling of multiple languages).  So the NT utilities team went off and re-implemented a version of these utilities.  But because of compatibility constraints (we couldn&#8217;t break customer batch files) we were precluded from CHANGING any of the xcopy semantics.</p>
<p>The XCOPY team added a boatload of features (/d and /c, for example) but the utility is STILL 100% command line compatible with the PC-DOS 2.0 version of XCOPY. </p>
<p>Humorously, many of the options that the XCOPY team added were actually added to gain feature parity with an internal tool TC.EXE that was widely used by the development team.<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-120003">
				<div id="div-comment-120003" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Alex Feinman</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040106-00/?p=41193#comment-120003">
			January 6, 2004 at 12:06 pm</a>		</div>

		<p>I wonder if you also have an explanation to a ridiculously large number popping up once in a while in the &quot;estimated time&quot; area &#8211; things like 27459540 minutes</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-120023">
				<div id="div-comment-120023" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Jack Mathews</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040106-00/?p=41193#comment-120023">
			January 6, 2004 at 1:48 pm</a>		</div>

		<p>Alex: That would be the 4GB 32-bit number limit cropping up.  I&#8217;m pretty sure updates have fixed that for Win2k and later.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-120033">
				<div id="div-comment-120033" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blog.opennetcf.org/afeinman' rel='external nofollow' class='url'>Alex Feinman</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040106-00/?p=41193#comment-120033">
			January 6, 2004 at 2:33 pm</a>		</div>

		<p>Jack: I wish it were that simple, but no &#8211; this kind of behaviour is exhibited even by Windows XP. And I know for a fact that at least some of the copy operations when I saw this involved less than a GB of data</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-120043">
				<div id="div-comment-120043" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Peter Montgomery</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040106-00/?p=41193#comment-120043">
			January 6, 2004 at 2:45 pm</a>		</div>

		<p>Raymond,</p>
<p>In one of your replies, you wrote, &quot;If you don&#8217;t like the block sizes used by CopyFileEx, feel free to complain to the kernel team. The shell is the victim here.&quot;</p>
<p>Fine, but isn&#8217;t that really sort of the problem?  In other words, how exactly does the average use get to complain to the kernel team?  We can&#8217;t as far as I know.  It makes users (who may also be programmers) feel helpless when they feel they have something to contribute.  Is there a mechanism at MS to actually contact folks like the kernel team that I am unaware of?  Hopefully something better than a &quot;suggestions@ms.com&quot; sort of email dump tank.</p>
<p>     Thanks,<br />
<br />     PeterM<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-120053">
				<div id="div-comment-120053" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Julian Gall</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040106-00/?p=41193#comment-120053">
			January 6, 2004 at 2:47 pm</a>		</div>

		<p>The main perceived problem seems to be the way the estimate changes so rapidly. I see no reason why there could not be a smoothing function so that changes in the estimate that take place in a short period of time (compared to the total estimate) do not affect the display immediately.</p>
<p>If anyone remembers, cars used to have fuel gauges that rsponded so fast that turning a corner would cause the gas to slosh to one side and the reading to change. Now they are damped so that the needle is rock-steady.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-120063">
				<div id="div-comment-120063" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.christopherhawkins.com' rel='external nofollow' class='url'>Christopher Hawkins</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040106-00/?p=41193#comment-120063">
			January 6, 2004 at 2:52 pm</a>		</div>

		<p>&quot;Now somebody who is listening only to your estimates and not the the person counting thinks you are off your rocker. Your estimate went from 100 seconds to 200 seconds to 50 seconds; what&#8217;s your problem? Why can&#8217;t you give a good estimate? &quot;</p>
<p>This passage makes me think of what it&#8217;s like to try to give an estimate to a client who cannot pick a set of requirements and stick with them.  Sorry for the digression, but the mental image was very potent&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-120073">
				<div id="div-comment-120073" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.silentblue.net' rel='external nofollow' class='url'>quanta</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040106-00/?p=41193#comment-120073">
			January 6, 2004 at 4:59 pm</a>		</div>

		<p>Having written progress dialogs in VBA in the past, I can sympathize. However, I can&#8217;t think of any other program with such wonky progress statistics as Windows. For example, the Bit Torrent client or Mozilla download dialog, under fluctuating transmission speeds, does not seem to have such a wide delta when reporting Time Remaining.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-120083">
				<div id="div-comment-120083" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Larry Osterman</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040106-00/?p=41193#comment-120083">
			January 6, 2004 at 6:30 pm</a>		</div>

		<p>Chris,<br />
<br />  Your description of how CopyFile SHOULD work is hideously niave (I know I can&#8217;t spell).  Head stepping only is relevant when the files are 100% contiguous on disk, and even then it&#8217;s not clear where on the disk they physically lie (SCSI disks lie about the physical location of sectors, for example).</p>
<p>  This is a grotesque simplification, but CopyFile simply opens the source and destination files, maps a section of the source file into memory, then calls WriteFile() to the destination file specifying the address of the section.  This means that CopyFileEx uses memory management to read in the pages from the file (pre-reading if possible) and writes it out through the filesystem cache (which is also backed by MM).</p>
<p>  As a result, if the files are on different spindles, throughput can be quite efficient, if they&#8217;re on the same spindle it can thrash.  But there&#8217;s no real way of optimizing this experience, unless the copy operation is performed inside the filesystem itself &#8211; because only the filesystem knows the structures on the disk and how best to &quot;optimize&quot; them.  But CopyFileEx is a 100% user mode API &#8211; it has to be able to copy between different volumes, between different filesystems, between any two file stores.</p>
<p>  It turns out that there IS something that can be done with CopyFileEx to make it better, that&#8217;s using a single instance store (Bill Bolosky (<a target="_new" href="http://research.microsoft.com/os/bolosky" rel="nofollow">http://research.microsoft.com/os/bolosky</a>) has done a great deal of research on this).<br />
<br />In that case, copies are actually done by adding a reference count to the file and marking the file as CopyOnWrite &#8211; the instance you write to one of the instances, is when the copy actually occurs.<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-120093">
				<div id="div-comment-120093" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://mcgroarty.livejournal.com' rel='external nofollow' class='url'>McGroarty</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040106-00/?p=41193#comment-120093">
			January 6, 2004 at 7:38 pm</a>		</div>

		<p>Directories are the largest added complexity.</p>
<p>Directories don&#8217;t have an attribute expressing the size of their contents. To get the size of all files being copied would involve walking directories, which would add to the copy time. Instead, gross estimates are made.</p>
<p>As an aside, for one project where the remaining time was utterly incalculable but where the client demanded a progress bar nonetheless, I implemented a progress bar which merely advanced 5% of the remaining time every tick. The bar would roll across leisurely at first, then slow and slow toward the end, never technically getting there.</p>
<p>No user ever complained, because it seemed to be at least consistent. When I probed a bit deeper on this, one user swore she could time whether she had time for her coffee breaks by it.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-120123">
				<div id="div-comment-120123" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.virtualdub.org/' rel='external nofollow' class='url'>Phaeron</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040106-00/?p=41193#comment-120123">
			January 6, 2004 at 9:55 pm</a>		</div>

		<p>Larry,<br />
<br />I think &quot;hideously naive&quot; is a bit harsh.  The truth of the matter is that CopyFileEx() is, in fact, slow on a intra-drive copy of large files because of seek overhead.  On the machine I&#8217;m at right now, I get about 2MB/sec throughput with CopyFileEx() on Windows XP, because the VM buffers up too many dirty pages and then tries flushing them during the reads, resulting in a lot of seek traffic and small-size I/O.  If I use a specialized copy with unbuffered I/O and a 4MB buffer, I get 7.5MB/sec.  This is 100% user space code that can easily fall back to a CopyFileEx-style mode if necessary and as a bonus doesn&#8217;t pollute the disk cache or swap programs out of memory.</p>
<p>Now, to be fair, this high-performance disk copy tends to monopolize the disk and is very unfriendly to other applications, behavior which would be undesirable as general behavior for Windows Explorer.  To say that there is no real way to optimize the Explorer copy experience, however, is false.</p>
<p>Also, while a file copy routine has to deal with fragmentation on read, it shouldn&#8217;t really have to on write &#8212; the filesystem can be told beforehand how large the file is and otherwise it can still allocate contiguous spans on flush, as XFS and ReiserFS do.  Even the VFAT driver on Windows 95 preallocates 512K at a time if possible.<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-120133">
				<div id="div-comment-120133" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Terry Denham</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040106-00/?p=41193#comment-120133">
			January 6, 2004 at 10:32 pm</a>		</div>

		<p>Doing some basic analysis on my server at home copying a 644 MB file (675,315,712 bytes)</p>
<p>C: = 1&#215;9 GB 7,200 RPM SCSI<br />
<br />H: = 7&#215;18 GB 10,000 RPM RAID-5 (2 MB cache card)<br />
<br />E: = network drive 100 Mb network</p>
<p>From   To   Time(min)   Rate      Adjusted Rate<br />
<br /> H     H    5:39        1.9 MB/s  3.8 MB/s<br />
<br /> H     C    1:36        6.7 MB/s<br />
<br /> C     H    3:34        3.0 MB/s<br />
<br /> H     E    1:28        7.3 MB/s<br />
<br /> C     C    3:54        2.7 MB/s  5.5 MB/s</p>
<p>The difference in time for H-&gt;C and C-&gt;H since h is RAID-5 reads are very fast but the parity incurs some cost in the operation that is not paid for read operations. So taking the difference between H-&gt;C and C-&gt;H yeilds a 1:58 time difference. So there is a cost of 1 minute 58 seconds incurred by the parity calculations for a write on the stripe set.</p>
<p>Notice that the network time on a 100 megabit networks is about the same time as raid to single scsi drive.</p>
<p>When you take into account that H-&gt;H (and C-&gt;C) actually had to deal with 2x the amount of data for the same drive (read/write) and we figure about a 1:58 time cost for the stripe with parity operation this yeilds about the same xfer rate as the other operations.</p>
<p>The time to copy from c to c is also interesting when you compare it to H-&gt;C. H to C operation was constrained by the speed/xfer rate of the C drive not the H drive (since it&#8217;s striped) so C&#8217;s max throughput is about 6.7 MB/s. Also when we look at C to H and C to C take about the same amount of time but H to C is so much more faster than either of these (owing to the stripped drive).</p>
<p>I&#8217;m sure other conclusions could be drawn from this simple example but I think it shows that it&#8217;s not a generic problem with the CopyFileEx algorithm.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-120143">
				<div id="div-comment-120143" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Larry Osterman</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040106-00/?p=41193#comment-120143">
			January 6, 2004 at 10:35 pm</a>		</div>

		<p>Man, I&#8217;m hijacking Raymond&#8217;s blog tonight &#8211; Sorry :)</p>
<p>CopyFileEx WILL extend the destination file on write, and that helps the write time (and tends to make files contiguous).</p>
<p>But that&#8217;s not enough.  Remember this is a 100% user mode API.  It&#8217;s not in the filesystems, it&#8217;s not in the I/O subsystem.  It&#8217;s in USER MODE. </p>
<p>You&#8217;re right that writes to the copy destination can interfere with reads if they&#8217;re on the same spindle, but for the general case (and CopyFile is optimized for the general case) it&#8217;s pretty darned good.  </p>
<p>And as you pointed out, optimizing for big files has other rather severe negative results.</p>
<p>On the other hand, your copy routine probably doesn&#8217;t preserve ACLs on files, and alternate data streams either :)<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-120153">
				<div id="div-comment-120153" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Terry Denham</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040106-00/?p=41193#comment-120153">
			January 6, 2004 at 10:43 pm</a>		</div>

		<p>Also H and C are on different controllers so I&#8217;m not constrained by any channel saturation and the PCI bus is no where near being saturated.</p>
<p>On my workstation with a a C-&gt;C copy of the same file with a 40GB 7200 RPM IDE drive with 2MB drive cache the file took 2:26 to copy the file. This is better than my server SCSI C-&gt;C copy probably due to more cache on the IDE drive than the older baracuda drive I have in my server.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-120273">
				<div id="div-comment-120273" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://weblogs.asp.net/rosherove/archive/2004/01/07/48335.aspx' rel='external nofollow' class='url'>ISerializable</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040106-00/?p=41193#comment-120273">
			January 7, 2004 at 11:36 am</a>		</div>

		
		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-121453">
				<div id="div-comment-121453" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://weblogs.univa.mx/nazul/archive/2004/01/10/668.aspx' rel='external nofollow' class='url'>Nazul's Weblog</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040106-00/?p=41193#comment-121453">
			January 10, 2004 at 7:16 pm</a>		</div>

		
		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-137093">
				<div id="div-comment-137093" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://weblogs.asp.net/clauer/' rel='external nofollow' class='url'>Christophe Lauer</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040106-00/?p=41193#comment-137093">
			January 17, 2004 at 3:26 pm</a>		</div>

		<p>C&#8217;mon Larry, just tell us this (may be long) humourous story about IBM and XCOPY&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-153193">
				<div id="div-comment-153193" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://broken.typepad.com/b/2004/03/encarta_status_.html' rel='external nofollow' class='url'>Anonymous</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040106-00/?p=41193#comment-153193">
			March 10, 2004 at 8:28 pm</a>		</div>

		<p>SH from Denmark sent this status bar he saw while installing Microsoft Encarta 2004. Above the status bar reads this text: Please note that the progress bar may reach the end before all files have been copied. Please be patient.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-179463">
				<div id="div-comment-179463" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blogs.msdn.com/kclemson' rel='external nofollow' class='url'>KC Lemson</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040106-00/?p=41193#comment-179463">
			June 1, 2004 at 9:53 pm</a>		</div>

		<p>See <a target="_new" href="http://broken.typepad.com/b/2004/06/microsoft_windo.html" rel="nofollow">http://broken.typepad.com/b/2004/06/microsoft_windo.html</a>&#8230; A bug, or an actual estimate based on the current speed of the copy?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-185193">
				<div id="div-comment-185193" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://weblogs.asp.net/oldnewthing/' rel='external nofollow' class='url'>Raymond Chen</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040106-00/?p=41193#comment-185193">
			June 18, 2004 at 9:47 am</a>		</div>

		<p>Commenting on this article has been closed.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-209013">
				<div id="div-comment-209013" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blogs.msdn.com/smakofsky/archive/2004/09/10/227857.aspx' rel='external nofollow' class='url'>Steve Makofsky's WebLog</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040106-00/?p=41193#comment-209013">
			September 10, 2004 at 10:09 am</a>		</div>

		
		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-211303">
				<div id="div-comment-211303" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://jake.iowageek.com/archives/000150.html' rel='external nofollow' class='url'>Jake Ludington - Iowa Geek</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040106-00/?p=41193#comment-211303">
			September 17, 2004 at 2:13 am</a>		</div>

		<p>Furrygoat ponders the reasoning behind time remaining in file transfers and program setups. Reymond Chen provides an answer of sorts, but I find the answer unacceptable. Why predict time remaining on anything if you can&#8217;t even ballpark it within some reasonable timeframe. I&#8217;ve had downloading experiences result in timeframes in negative percentages, like the screenshot below. What the hell does that mean to an average user? Or even a not so average user? When a download is at -NNN% does that mean I&#8217;m giving the download site bits? Maybe this is just a problem to be addressed in the Longhorn timeframe; that&#8217;s a popular excuse for bad design&#8230;.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-248473">
				<div id="div-comment-248473" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.sync2play.com//20040917_download_to_infinity.html' rel='external nofollow' class='url'>Sync2Play</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040106-00/?p=41193#comment-248473">
			January 24, 2005 at 1:33 am</a>		</div>

		<p>Furrygoat ponders the reasoning behind time remaining in file transfers and program setups. Reymond Chen provides an answer of sorts, but I find the answer unacceptable. Why predict time remaining on anything if you can&#8217;t even ballpark it within some&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-479523">
				<div id="div-comment-479523" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.digital-utopia.com/blogs/graham.reeds/?p=29' rel='external nofollow' class='url'>graham.reeds/ &raquo; Perils of xcopy and haste</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040106-00/?p=41193#comment-479523">
			March 5, 2007 at 4:35 pm</a>		</div>

		<p>PingBack from <a rel="nofollow" target="_new" href="http://www.digital-utopia.com/blogs/graham.reeds/?p=29" rel="nofollow">http://www.digital-utopia.com/blogs/graham.reeds/?p=29</a></p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

