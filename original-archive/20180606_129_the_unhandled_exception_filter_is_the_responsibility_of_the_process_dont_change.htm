<html>
<head>
<title>The unhandled exception filter is the responsibility of the process; don't change it without permission</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>The unhandled exception filter is the responsibility of the process; don&#8217;t change it without permission</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>June 6, 2018 / year-entry #129</td></tr>
<tr><td><b>Tags:</b></td><td>code</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20180606-00/?p=98925</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>12</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">It's only common courtesy.</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>
A customer developed an Office add-in
and wanted to intercept all unhandled exceptions
so that they could collect crash dumps, capture stack traces,
and so on.
To do this, they used the
<code>Set&shy;Unhandled&shy;Exception&shy;Filter</code> function
to register their custom unhandled exception handler
to capture crash dumps and stack traces.
</p>
<p>
The customer reported that this technique was successful in earlier
versions of Office,
but stopped working starting in Office 2013.
(They didn't test Office 2010.)
Their custom unhandled exception handler is no longer being called.
</p>
<p>
The customer wanted to know if there were any known circumstances
where the
<code>Set&shy;Unhandled&shy;Exception&shy;Filter</code> function
would stop working,
and what workarounds were available, even if it means abandoning
their current strategy and getting their crash dumps some other way.
</p>
<p>
The unhandled exception filter is a process-wide resource,
and therefore the process is the one who makes the decision what
unhandled exception filter they want.
A DLL is a guest in the host process,
and common courtesy says that guests don't
cancel the homeowner's insurance policy and replace it with their own.
</p>
<p>
Besides, imagine what would happen if <i>two</i> plug-ins wanted
to replace the unhandled exception filter.
(Bonus: And then one of those plug-ins was unloaded.)
</p>
<p>
The Office team discovered that large numbers of add-ins were
(either intentionally or inadvertently) corrupting the process-wide
unhandled exception filter.
This meant that crashes were no longer being routed through
Office's own unhandled exception filter.
Not only were none of the crashes in Office being reported through
Windows Error Reporting,
users were losing data because Office's custom
unhandled exception filter was not getting a chance to attempt
document recovery before the process finally went away.
</p>
<p>
To work around rogue DLLs replacing the unhandled exception
filter, Office detours the
<code>Set&shy;Unhandled&shy;Exception&shy;Filter</code> function.
</p>
<p>
<a HREF="https://groups.google.com/d/msg/microsoft.public.office.developer.com.add_ins/tv4nMiaHcJY/kS92bPNrHhsJ">This answer from Office developer support</a>
confirms the above discussion
and further suggests a workaround:
Register your plug-in with
<a HREF="https://msdn.microsoft.com/en-us/library/windows/desktop/bb513641(v=vs.85).aspx">
Windows Error Reporting</a>.
Microsoft's back-end error reporting service
(known as Watson, not the same as
<a HREF="https://blogs.msdn.microsoft.com/oldnewthing/20051114-00/?p=33353">
Dr. Watson</a>).
All the crashes received by the Watson service
are analyzed, and if the analysis concludes that your plug-in was
responsible for the problem,
the crash dump will be made available to you.</p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (12)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment byuser comment-author-koldude even thread-even depth-1" id="comment-1344585">
				<div id="div-comment-1344585" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/kantos' rel='external nofollow' class='url'>kantos</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180606-00/?p=98925#comment-1344585">
			June 6, 2018 at 7:05 am</a>		</div>

		<p>If the addin developer was doing a .NET addin properly they would have their own app-domain and would be able to do this without issue within the CLR portion of their addin because this is appdomain specific in that case. Of Course this requires you find the code to do that which has long since been lost in the dark recesses of the internet.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1 parent" id="comment-1344595">
				<div id="div-comment-1344595" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Luke</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180606-00/?p=98925#comment-1344595">
			June 6, 2018 at 7:17 am</a>		</div>

		<p>&gt; To work around rogue DLLs replacing the unhandled exception filter, Office detours the Set­Unhandled­Exception­Filter function.</p>
<p>It&#8217;s &#8220;what if two programs did this?&#8221; all the way down.</p>

		
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-oldnewthing bypostauthor even depth-2 parent" id="comment-1344635">
				<div id="div-comment-1344635" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Raymond+Chen+-+MSFT' rel='external nofollow' class='url'>Raymond Chen - MSFT</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180606-00/?p=98925#comment-1344635">
			June 6, 2018 at 9:25 am</a>		</div>

		<p>There is no lower turtle. The process controls its unhandled exception filter.</p>

		
				</div>
		<ol class="children">
		<li class="comment odd alt depth-3" id="comment-1344655">
				<div id="div-comment-1344655" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180606-00/?p=98925#comment-1344655">
			June 6, 2018 at 10:01 am</a>		</div>

		<p>I had a plan against a bad A/V to undetour a function. It&#8217;s tricky on 64 bit and I&#8217;m glad I never used it.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment even depth-2" id="comment-1344645">
				<div id="div-comment-1344645" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Antonio Rodríguez</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180606-00/?p=98925#comment-1344645">
			June 6, 2018 at 9:32 am</a>		</div>

		<p>No, Luke. It&#8217;s more like &#8220;my house, my rules&#8221;. I may have invited you to come over for a beer, but you aren&#8217;t allowed to put your feet on the couch or peek into the dressing room.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt depth-2" id="comment-1344695">
				<div id="div-comment-1344695" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Pierre B.</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180606-00/?p=98925#comment-1344695">
			June 6, 2018 at 12:30 pm</a>		</div>

		<p>&gt; To work around rogue DLLs replacing the unhandled exception filter, Office detours the Set­Unhandled­Exception­Filter function.</p>
<p>To work around this, launch another process, find the offset from teh base location to SetUnHandledExceptionFilter, send the result back to the main process, patch back the true entry point of the functions&#8230;</p>
<p>Then Office adds a timer to re-patch, so the DLL uses a shorter timer and detour CreateTimer. Then&#8230; well, long story short, that&#8217;s why Office now ships with a daughterboard with a separate CPU that you plug your CPU into.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1344605">
				<div id="div-comment-1344605" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Mason Wheeler</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180606-00/?p=98925#comment-1344605">
			June 6, 2018 at 8:24 am</a>		</div>

		<p>&gt; Besides, imagine what would happen if two plug-ins wanted to replace the unhandled exception filter.</p>
<p>They would both add a handler to the relevant event and there would be no problem? ;-)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1344615">
				<div id="div-comment-1344615" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">jon</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180606-00/?p=98925#comment-1344615">
			June 6, 2018 at 9:12 am</a>		</div>

		<p>Windows error reporting seems to constantly take over and prevent our unhandled exception filter from being called&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1344625">
				<div id="div-comment-1344625" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://geelaw.blog/' rel='external nofollow' class='url'>Gee Law</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180606-00/?p=98925#comment-1344625">
			June 6, 2018 at 9:22 am</a>		</div>

		<p>No wonder why the new Office add-in platform is built on JavaScript &#8212; it provides a big diaper for all the sh*ts the developers have created, which can be avoided in the first place. (Yes, I know diapers are not for sh*ts.)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1 parent" id="comment-1344715">
				<div id="div-comment-1344715" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">sean</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180606-00/?p=98925#comment-1344715">
			June 6, 2018 at 3:19 pm</a>		</div>

		<p>Due to GDPR, addin developers are no longer able to get crash dumps from Windows Error Reporting except for processes that the addin owns &#8212; which typically isn&#8217;t the addin host.</p>

		
				</div>
		<ol class="children">
		<li class="comment even depth-2" id="comment-1344825">
				<div id="div-comment-1344825" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Patrick Van Cauteren</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180606-00/?p=98925#comment-1344825">
			June 7, 2018 at 7:45 am</a>		</div>

		<p>Raymond, I completely agree.  If a process decides to set the UnhandledExceptionFilter, everyone else should keep their hands of it.  For developers using Oracle: set the DIAG_SIGHANDLER_ENABLED=FALSE configuration line in SQLNET.ORA, otherwise Oracle will also overrule the UnhandledExceptionFilter.<br />
By the way, it looks like .Net is overruling our UnhandledExceptionFilter as well.  Shouldn&#8217;t .Net keep its hands of it as well?</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment byuser comment-author-yuhong-bao odd alt thread-even depth-1" id="comment-1345455">
				<div id="div-comment-1345455" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Yuhong+Bao' rel='external nofollow' class='url'>Yuhong Bao</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20180606-00/?p=98925#comment-1345455">
			June 8, 2018 at 4:40 pm</a>		</div>

		<p>&#8220;(Bonus: And then one of those plug-ins was unloaded.)&#8221;<br />
Well known security problem BTW.</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

