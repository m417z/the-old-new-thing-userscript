<html>
<head>
<title>How do I determine the processor's cache line size?</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>How do I determine the processor&#8217;s cache line size?</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>December 8, 2009 / year-entry #392</td></tr>
<tr><td><b>Tags:</b></td><td>code</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20091208-01/?p=15733</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>40</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">When doing high-performance computing, you need to worry about the CPU cache line size in order to avoid issues like false sharing. But how can you determine the processor's cache size? The GetLogicalProcessorInformation function will give you characteristics of the logical processors in use by the system. You can walk the SYSTEM_LOGICAL_PROCESSOR_INFORMATION returned by the...</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>When doing high-performance computing, you need to worry about the CPU cache line size in order to avoid issues like <i>false sharing</i>. But how can you determine the processor's cache size?</p>
<p> The <code>GetLogicalProcessorInformation</code> function will give you characteristics of the logical processors in use by the system. You can <a href="http://msdn.microsoft.com/en-us/library/ms683194(VS.85).aspx"> walk the <code>SYSTEM_LOGICAL_PROCESSOR_INFORMATION</code></a> returned by the function looking for entries of type <code>RelationCache</code>. Each such entry contains a <code>ProcessorMask</code> which tells you which processor(s) the entry applies to, and in the <a href="http://msdn.microsoft.com/en-us/library/ms681979(VS.85).aspx"> <code>CACHE_DESCRIPTOR</code></a>, it tells you what type of cache is being described and how big the cache line is for that cache. </p>
<p> Windows&nbsp;7 adds the function <a href="http://msdn.microsoft.com/en-us/library/dd405488(VS.85).aspx"> <code>GetLogicalProcessorInformationEx</code></a> which does the <code>RelationCache</code> filtering for you. </p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (40)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-792913">
				<div id="div-comment-792913" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">John</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20091208-01/?p=15733#comment-792913">
			December 8, 2009 at 7:08 am</a>		</div>

		<p>I was going to make a joke about Vista requiring a super-computer for adequate performance, but I decided against it. &nbsp;Vista is dead; long live Windows 7.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-792943">
				<div id="div-comment-792943" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://adamrosenfield.com' rel='external nofollow' class='url'>Adam Rosenfield</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20091208-01/?p=15733#comment-792943">
			December 8, 2009 at 7:45 am</a>		</div>

		<p>What are the advantages of this method over using the CPUID instruction, which is supported on any OS running on an x86 chip from the 486 and later?</p>
<div class=post>[<i>And if you&#8217;re not running on an x86 chip? -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-792983">
				<div id="div-comment-792983" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Wojciech Gebczyk</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20091208-01/?p=15733#comment-792983">
			December 8, 2009 at 8:43 am</a>		</div>

		<p>&quot;When (&#8230;), you need to worry about the CPU cache line size(&#8230;)&quot;.</p>
<p>Reminds me of someone that has been tuning HTML table content (those silly tags and its content) to reduce processor temperature/usage while rendering it.</p>
<p>Are you sure, that your task&#8217;s queue is not empty while writing such low level hints? If it&#8217;s empty, you can always work on Visual Studio performance or other silly task&#8230;</p>
<p>;&gt;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-792993">
				<div id="div-comment-792993" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">GWO</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20091208-01/?p=15733#comment-792993">
			December 8, 2009 at 8:47 am</a>		</div>

		<p>And if you&#8217;re not running on an x86 chip?</p>
<p>Then the chances are very slim that you&#8217;re running Windows, so its a moot point.</p>
<div class=post>[<i>Some of us develop for non-x86 Windows. I suspect a lot of people reading this Web site are not running x86 Windows. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-793013">
				<div id="div-comment-793013" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Andreas F,</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20091208-01/?p=15733#comment-793013">
			December 8, 2009 at 8:58 am</a>		</div>

		<p>since this will come up:</p>
<p>an example, that could use this is a prefetching, memory resident B+ Tree.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-793033">
				<div id="div-comment-793033" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Alexandre Grigoriev</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20091208-01/?p=15733#comment-793033">
			December 8, 2009 at 9:12 am</a>		</div>

		<p>[I suspect a lot of people reading this Web site are not running x86 Windows. -Raymond]</p>
<p>Well, x64 architecture support CPUID instruction, too&#8230; And IA64 is deadbeef&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-793043">
				<div id="div-comment-793043" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Alexandre Grigoriev</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20091208-01/?p=15733#comment-793043">
			December 8, 2009 at 9:19 am</a>		</div>

		<p>For what it&#8217;s worth, by optimizing structure layout in my storport miniport (decouplind processor-specific data from globally used, forcing cache line alignment) I was able to reduce CPU consumption per command by some 5%. Now, I&#8217;m almost hitting the OS limit (which I measured by short-circuiting the requests).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-793053">
				<div id="div-comment-793053" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">dave</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20091208-01/?p=15733#comment-793053">
			December 8, 2009 at 9:26 am</a>		</div>

		<blockquote><p>
  What are the advantages of this method over using the CPUID instruction, which is supported on any OS running
</p></blockquote>
<p>Does the OS really &quot;support&quot; the instruction?</p>
<p>I suspect the actual situation is that the OS has no interest in your use of the instruction, successful or otherwise.</p>
<p>But in any case, the advantage of using an OS-provided API rather than an architecture-specific instruction is that, you know, you get to be independent of processor architecture.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-793063">
				<div id="div-comment-793063" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Philip</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20091208-01/?p=15733#comment-793063">
			December 8, 2009 at 10:07 am</a>		</div>

		<p>If you don&#8217;t want to bother being architecture-independent, you might as well just write:</p>
<p>#define CACHE_LINE_SIZE 64</p>
<p>Should be good for modern x86s and saves all this fiddling around with function calls and correctness.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-793073">
				<div id="div-comment-793073" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joe</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20091208-01/?p=15733#comment-793073">
			December 8, 2009 at 10:42 am</a>		</div>

		<p>Windows mobile people!</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-793083">
				<div id="div-comment-793083" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Zan Lynx</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20091208-01/?p=15733#comment-793083">
			December 8, 2009 at 10:42 am</a>		</div>

		<p>IA64 may be dead&#8217;ish. (I don&#8217;t agree, I still love the arch but I don&#8217;t run Windows on it.)</p>
<p>But low power computing in the form of netbooks is becoming very popular. Unless Microsoft wants to give that market to Linux they may need to release an ARM Windows-7 at some point.</p>
<p>You want your application to work without rebuilding a lot of custom x86 code, right? Even if MS does binary recompiling from x86 to ARM (which I think they&#8217;d have to for back compatibility reasons) your application would run better in native machine code.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-793093">
				<div id="div-comment-793093" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">640k</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20091208-01/?p=15733#comment-793093">
			December 8, 2009 at 11:04 am</a>		</div>

		<p>GetLogicalProcessorInformation are not supported on windows mobile.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-793103">
				<div id="div-comment-793103" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Cooney</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20091208-01/?p=15733#comment-793103">
			December 8, 2009 at 11:16 am</a>		</div>

		<p>[Some of us develop for non-x86 Windows. I suspect a lot of people reading this Web site are not running x86 Windows. -Raymond]</p>
<p>I would wager that non-x86 and high performance computing are a very small slice of the world, especially when you&#8217;re talking about windows: the top 500 list is dominated by x86 linux (not to start a flamewar here), so your best options for HPC are likely to be x86.</p>
<p>Then again, maybe you&#8217;re doing a codec that has to run on a $0.50 part &#8211; now it isn&#8217;t HPC, but LPC &#8211; squeeze acceptable performance out of something slow as balls.</p>
<div class=post>[<i>I wasn&#8217;t responding to the HPC part of the statement, just the &#8220;Why bother? Let&#8217;s just hard-code x86 since that&#8217;s all anybody uses anyway&#8221; part. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-793163">
				<div id="div-comment-793163" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.pretentiousname.com' rel='external nofollow' class='url'>Leo Davidson</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20091208-01/?p=15733#comment-793163">
			December 8, 2009 at 1:48 pm</a>		</div>

		<p>&quot;Unless Microsoft wants to give that market to Linux they may need to release an ARM Windows-7 at some point.&quot;</p>
<p>I hope ATOM improves enough to make ARM not worth it, then.</p>
<p>I just got away from having to target ANSI and Unicode only to have it replaced by 32-bit and 64-bit. If ARM and non-ARM builds are added on top of that then I&#8217;m going to strangle a kitten.</p>
<p>ARM Debug</p>
<p>ARM Release</p>
<p>x86 Debug</p>
<p>x86 Release</p>
<p>x64 Debug</p>
<p>x64 Release</p>
<p>^^^ No thanks!</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-793183">
				<div id="div-comment-793183" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Owen S</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20091208-01/?p=15733#comment-793183">
			December 8, 2009 at 3:03 pm</a>		</div>

		<p>&quot;I hope ATOM improves enough to make ARM not worth it, then.&quot;</p>
<p>I hope the other way. I hope Atom continues sucking enough to allow ARM to claw it&#8217;s way to higher performance environments.</p>
<p>Then the abomination called x86 can be strangled. Like it should have been. In 1979.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-793193">
				<div id="div-comment-793193" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Michael Fuller</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20091208-01/?p=15733#comment-793193">
			December 8, 2009 at 3:38 pm</a>		</div>

		<blockquote><p>
  you need to worry about the CPU cache line size in order to avoid issues like false sharing.
</p></blockquote>
<p>Isn&#8217;t this information more useful</p>
<p>at compile time e.g. to pad data structures to avoid cache line ping-pong, rather than at runtime?</p>
<p>How can it be used at run time to avoid false sharing?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-793203">
				<div id="div-comment-793203" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Zan Lynx</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20091208-01/?p=15733#comment-793203">
			December 8, 2009 at 4:11 pm</a>		</div>

		<p>You might be writing a JITter or a shared library like pthreads or you are dynamically allocating memory for thread work queues.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-793233">
				<div id="div-comment-793233" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://Somethingfunny' rel='external nofollow' class='url'>Daniel ZY</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20091208-01/?p=15733#comment-793233">
			December 8, 2009 at 7:16 pm</a>		</div>

		<p>Debugging on 64 bit with Visual Studio is easy enough. just copy the 64 bit remote debugger stub to the remote system and run it.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-793243">
				<div id="div-comment-793243" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Jonathan Wilson</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20091208-01/?p=15733#comment-793243">
			December 8, 2009 at 7:25 pm</a>		</div>

		<p>Another thing that annoys me is the number of OEMs shipping machines with top of the line CPUs with x86-64 support and yet install the 32 bit version of Windows. If its got a 64 bit CPU, why would you not use the 64 bit version of Windows?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-793253">
				<div id="div-comment-793253" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">cooney</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20091208-01/?p=15733#comment-793253">
			December 8, 2009 at 7:51 pm</a>		</div>

		<blockquote><p>
  MIcrosoft doesn&#8217;t even release most of it&#8217;s software for 64 bit! Visual Studio is still a 32 bit app. MS Office will be 64 bit before Visual Studio.
</p></blockquote>
<p>Do you really need VC++ to address 4G? Is there a limitation when debugging 64 bit apps from a 32 bit app?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-793263">
				<div id="div-comment-793263" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Nick</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20091208-01/?p=15733#comment-793263">
			December 8, 2009 at 8:15 pm</a>		</div>

		<p>&quot;Do you really need VC++ to address 4G?&quot;</p>
<p>Ha, I just had a vision of times gone past&#8230;</p>
<p>(push grayscale filter)</p>
<p>&quot;Do you really need BASIC to address more than 65MB?&quot;</p>
<p>(pop grayscale filter)</p>
<p>There is a lot more reason to migrating applications to the native architecture besides having an n-bit address space. Emulation slows things down and makes interop harder. x64 provides more registers. Etc.</p>
<p>I&#8217;m not exactly in the x64-or-bust club, but it will be nice when I can have a 64-bit system where all my normal applications run natively.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-793283">
				<div id="div-comment-793283" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://larrywatanabe.blogspot.com' rel='external nofollow' class='url'>Larry Watanabe</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20091208-01/?p=15733#comment-793283">
			December 8, 2009 at 9:14 pm</a>		</div>

		<p>I have a sneaking suspicion that Windows 7 is just what Vista was supposed to be (but to make the deadline they shipped Windows 6.x and labelled it Vista). Any inside info Raymond (that won&#8217;t get you in trouble :)</p>
<div class=post>[<i>If that were true, then I wasted all that time working on Windows 7 specs &#8211; I could&#8217;ve just taken the leftover ones from Windows Vista! You can see for yourself what Windows Vista was supposed to be: Just check out PDC 2003. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-793303">
				<div id="div-comment-793303" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Lawrence</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20091208-01/?p=15733#comment-793303">
			December 8, 2009 at 9:23 pm</a>		</div>

		<p>Nick, how exactly is Visual Studio EXE being 32bit impacting you?</p>
<p>It&#8217;s not limiting YOU to creating 32bit applications, and it interops just fine with the other applications on my 64bit system.</p>
<p>As for it &#8216;slowing things down&#8217; &#8211; I suspect it will be some time before a 64bit Visual Studio is able to show a performance improvement over the 32bit version. [In an heroic attempt to drag the conversation back on topic] I suggest VC++ has been heavily optimised over the years to compile fastest with assumptions around like CPU cache line size, which no longer apply when they flick the 64bit switch.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-793323">
				<div id="div-comment-793323" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">640k</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20091208-01/?p=15733#comment-793323">
			December 8, 2009 at 11:19 pm</a>		</div>

		<p>Debugging 64-bit apps is not as easy as debugging 32-bit apps. Ofcourse it&#8217;s easy if you have all the time in the world. But it shouldn&#8217;t have to be harder than setting a breakpoint + F5. If you want it to be hard and time consuming to do the job, you should run linux. Cross compiling + debugging can never be as smooth as a native solution. There are a LOT of features missing because of VS isn&#8217;t a native 64-bit app. Edit &amp; continue to name one. But show stoppers are usually interop with other programs which is only 64-bit (IIS). And how are people supposed to develop 64-bit apps when ms itself cannot develop the most basic development tool to begin with? They should eat their own dog food, and has hopefully done so before 20100322.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-793353">
				<div id="div-comment-793353" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Cooney</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20091208-01/?p=15733#comment-793353">
			December 8, 2009 at 11:50 pm</a>		</div>

		<blockquote><p>
  There is a lot more reason to migrating applications to the native architecture besides having an n-bit address space. Emulation slows things down and makes interop harder. x64 provides more registers. Etc.
</p></blockquote>
<p>I&#8217;m not actually familiar with winx64 &#8211; i&#8217;m coming from a world where you can just run a x32 binary on a x64 OS &#8211; no thunks or emulation. Basically, unless you need to access past 4G (which may be required, but ony from the debugger), you tend to keep the app as x32.</p>
<p>Basically, I expect x32 office to <em>just work</em> on x64 windows and I&#8217;m not clear when office would ever need x64 addressing</p>
<blockquote><p>
  And how are people supposed to develop 64-bit apps when ms itself cannot develop the most basic development tool to begin with?
</p></blockquote>
<p>this is actually shocking &#8211; we have x64 builds for our C++ app that work fine, so i assumed that x64 vc++ was already done. We&#8217;ve had x64 OSes for going on 5 years, so shouldn&#8217;t VC++ be a first class thing?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-793363">
				<div id="div-comment-793363" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">GWO</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20091208-01/?p=15733#comment-793363">
			December 9, 2009 at 12:03 am</a>		</div>

		<p>Raymond: I suspect a lot of people reading this Web site are not running x86 Windows.</p>
<p>That doesn&#8217;t support CPUID instruction? &nbsp;I doubt that.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-793213">
				<div id="div-comment-793213" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Karellen</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20091208-01/?p=15733#comment-793213">
			December 8, 2009 at 4:20 pm</a>		</div>

		<p>@Leo &#8211; What?!? Your code will have to compile and run on *3* whole architectures, including x86-32 and x86-64 separately? No mere human could possibly be expected to maintain a codebase so complex!</p>
<p>:-)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-793383">
				<div id="div-comment-793383" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Kovensky</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20091208-01/?p=15733#comment-793383">
			December 9, 2009 at 1:33 am</a>		</div>

		<p>Two other interesting cache related articles from one of the x264 developers:</p>
<p><a rel="nofollow" target="_new" href="http://x264dev.multimedia.cx/?p=149" rel="nofollow">http://x264dev.multimedia.cx/?p=149</a></p>
<p><a rel="nofollow" target="_new" href="http://x264dev.multimedia.cx/?p=201" rel="nofollow">http://x264dev.multimedia.cx/?p=201</a></p>
<p>PS: I have seen assembly programmers complaining several times about the Win64 ABI being way more complicated than it should be, and I suppose it also slows things down compared to the x86_64 ABI other OSes use.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-793223">
				<div id="div-comment-793223" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Aram Hăvărneanu</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20091208-01/?p=15733#comment-793223">
			December 8, 2009 at 5:33 pm</a>		</div>

		<p>I don&#8217;t know anyone running Windows on non IA32(e) systems. The only time I&#8217;ve seen Windows on non-IA32 is at vendors that try to sell you non-IA32 machines. I don&#8217;t know anybody running Windows on Itanium in production. I&#8217;m testing my software on Itanium, and even some of my drivers, but I do it because portable code == better code, not because I actually had a customer that wanted Itanium.</p>
<p>It&#8217;s a shame, really. It&#8217;s also a shame Microsoft dropped client Windows for non-IA32 machines (Windows XP 64 bit (Itanium) was canceled). It&#8217;s also a shame there are NO non-IA32 *workstations* on the market. How do I write software for Itanium if I can&#8217;t buy an Itanium workstation to develop on?</p>
<p>It&#8217;s also a shame Microsoft doesn&#8217;t release anything besides server windows and SQL server on non-IA32 platforms. No Visual Studio, no Office &#8212; nothing. The architecture is sterile. Worse, MIcrosoft doesn&#8217;t even release most of it&#8217;s software for 64 bit! Visual Studio is still a 32 bit app. MS Office will be 64 bit before Visual Studio.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-793413">
				<div id="div-comment-793413" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">ulric</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20091208-01/?p=15733#comment-793413">
			December 9, 2009 at 5:02 am</a>		</div>

		<p>The thread about CPUID is kind of obvious, because if you need to know the cache line size precisly, you probably are using CPUID id already. &nbsp;If you&#8217;re looking for an API for this, you probably do should not worry about it. &nbsp;I like Philip&#8217;s #define suggestion. :P</p>
<p>@640k Our team (about 40) works on a large 64-bit C++ apps with VC++. &nbsp;It works well (in fact the performance is great) &nbsp;Afaik, the lack of edit-and-continue in 64-bit is not related IDE being 32-bit and can&#8217;t do that; it&#8217;s not there because they didn&#8217;t port the code to patch up a 64-bit running process. &nbsp;What is not working right that is cause by the IDE being 32-bit? &nbsp; You can download using WinDbg native 64-bit to figure out if using a native 64-bit debugger helps. &nbsp;(For editing and compiling, obviously it&#8217;s irrelevant) I&#8217;m not really aware of anything except one crash exception that isn&#8217;t catched by default.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-793463">
				<div id="div-comment-793463" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Paul</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20091208-01/?p=15733#comment-793463">
			December 9, 2009 at 9:10 am</a>		</div>

		<p>Rico Mariani explained why VS is still only 32bit on his blog a while ago (<a rel="nofollow" target="_new" href="http://blogs.msdn.com/ricom/archive/2009/06/10/visual-studio-why-is-there-no-64-bit-version.aspx" rel="nofollow">http://blogs.msdn.com/ricom/archive/2009/06/10/visual-studio-why-is-there-no-64-bit-version.aspx</a>)</p>
<p>@640K : So you really think Visual Studio is &quot;the most basic development tool&quot;? I would hate to see your list of required features for a comprehensive development tool.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-793493">
				<div id="div-comment-793493" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Alexandre Grigoriev</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20091208-01/?p=15733#comment-793493">
			December 9, 2009 at 10:14 am</a>		</div>

		<p>@Karellen,</p>
<p>Are you really sure that some max 20MB of additional runtime libraries really stress memory load? How is that different from 20MB of data?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-793543">
				<div id="div-comment-793543" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Gabe</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20091208-01/?p=15733#comment-793543">
			December 9, 2009 at 12:01 pm</a>		</div>

		<p>Remember, when you port your app from 32-bit to 64-bit, the size of pointers doubles but the processor&#8217;s cache line size stays the same. This means that your app will run SLOWER as 64-bit &#8212; unless you actually use more than 4GB of address space.</p>
<p>In fact, if you app doesn&#8217;t need more than 4GB of address space, its fastest configuration would likely be as a 32-bit app on a 64-bit OS. It can use all 4GB of the 32-bit address space and still have all kinds of files cached in the several GB of memory that the 64-bit OS can directly address.</p>
<p>The ONLY time you would want to compile your app for 64-bit is if it needs binary compatibility with other 64-bit systems (plug-ins, etc.) or it needs access to more than 4GB of address space. The reason you don&#8217;t see a 64-bit Visual Studio is that it would run slower than a 32-bit version and need all new plug-ins.</p>
<p>If your app is taking up so much memory that you need 64 bits, try going on a diet before buying a new wardrobe!</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-793553">
				<div id="div-comment-793553" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">DriverDude</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20091208-01/?p=15733#comment-793553">
			December 9, 2009 at 12:27 pm</a>		</div>

		<p>&quot;Another thing that annoys me is the number of OEMs shipping machines with top of the line CPUs with x86-64 support and yet install the 32 bit version of Windows.&quot;</p>
<p>64-bit Windows runs 32-bit apps, but 64-bit apps do not run 32-bit plugins. That means the default IE on x64 does not run Flash. That&#8217;s a tech support nightmare for OEMs.</p>
<p>There are parts of Office that do not run on x64, see <a rel="nofollow" target="_new" href="http://support.microsoft.com/kb/927383" rel="nofollow">http://support.microsoft.com/kb/927383</a></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-793423">
				<div id="div-comment-793423" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Karellen</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20091208-01/?p=15733#comment-793423">
			December 9, 2009 at 5:03 am</a>		</div>

		<p>32-bit apps on a 64-bit system cause slowdowns due to increased memory pressure. If you&#8217;re running 64-bit only, you only need one copy of all the shared libraries, including system ones, in memory at once, shared between all the processes that use them. Different processes may need a few private pages of reloction info for each DLL, but that&#8217;s tiny compared to the size of the DLL itself.</p>
<p>If you launch a 32-bit app, not only do you need the private code for that app, but 32-bit versions of *all* the shared libraries used by that app on the system need to be loaded *again*, alongside the &quot;real&quot; versions for your preferred architecture. That&#8217;s the C library, graphics libraries, support libraries, etc&#8230; &#8211; basically MB upon MB of code that is *already* loaded on your system, only in a more &quot;native&quot; manner.</p>
<p>More memory pressure implies more swapping implies less performance.</p>
<p>Further, all those libraries are also twice as much code to keep patched for security updates, there are twice as many updates to download. Basically, all the advantages you get from using shared libraries are suddenly halved by running a dual-arch system.</p>
<p>Yes, if you&#8217;ve got a proprietary 32-bit app that the vendor is too lazy, incompetent or plain out-of-business to recompile/release as 64-bit, then a multi-arch system may be an undesirable necessity. But it&#8217;s not a situation anyone should be *happy* about being in.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-793593">
				<div id="div-comment-793593" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Paul</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20091208-01/?p=15733#comment-793593">
			December 9, 2009 at 2:03 pm</a>		</div>

		<p>@DriverDude: I am running Windows 7 x64 and I am fairly sure it uses the 32 bit version of IE by default anyway.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-793693">
				<div id="div-comment-793693" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Karellen</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20091208-01/?p=15733#comment-793693">
			December 10, 2009 at 12:17 am</a>		</div>

		<p>&quot;Are you really sure that some max 20MB of additional runtime libraries&quot;</p>
<p>Hmmm&#8230;.I thought it would be more than that, but looking on my system the large apps are only using about 20-30Mb of shared memory. Still, yes, if I could reduce a large app&#8217;s footprint by 20Mb, even though it&#8217;s only 0.5% of my RAM, I wouldn&#8217;t say no to that.</p>
<p>&quot;Remember, when you port your app from 32-bit to 64-bit, the size of pointers doubles but the processor&#8217;s cache line size stays the same. This means that your app will run SLOWER as 64-bit.&quot;</p>
<p>Mmmmm&#8230;.., but OTOH there are more registers on x86-64, so machine code is generally cleaner and more straightforward with fewer redundant loads/saves shuffling temporaries around. Which takes time and space. Certainly not as much time as an instruction cache miss, and probably not as much space as the extra memory for pointer data, but it&#8217;s not quite as simple as &quot;the pointers are wider&quot; when you get down that low.</p>
<p>And it&#8217;s nice to be able to mmap any file on the file system without having to think about it. Instead of having two paths; the mmap version which is fast and efficient, and the slower open/read/close which copies every single byte, and is therefore slower, but only needs to be used on large files where you could really use the performance.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-793933">
				<div id="div-comment-793933" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">ulric</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20091208-01/?p=15733#comment-793933">
			December 10, 2009 at 9:14 am</a>		</div>

		<p>lots of myth about 64-bit here&#8230;</p>
<p>64-bit apps do run slower, because they take up more RAM. &nbsp;The additional registers make no difference, the bottleneck is in cache and memory access. &nbsp;It&#8217;s not possible to run a 64-bit Windows where there are no 32-bit apps or processes anywhere, so don&#8217;t sweat about running 32-bits on it : the 32-bit shared libraries have been loaded long ago. :)</p>
<p>@Paul really good link, thanks!</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-794063">
				<div id="div-comment-794063" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Aram Hăvărneanu</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20091208-01/?p=15733#comment-794063">
			December 10, 2009 at 10:48 am</a>		</div>

		<p>ulric said: &quot;It&#8217;s not possible to run a 64-bit Windows where there are no 32-bit apps or processes anywhere, so don&#8217;t sweat about running 32-bits on it : the 32-bit shared libraries have been loaded long ago.&quot;</p>
<p>Of yes it is. On Windows Server 2008 R2 at least. You can have a pure 64 bit OS.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-794523">
				<div id="div-comment-794523" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Karellen</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20091208-01/?p=15733#comment-794523">
			December 11, 2009 at 7:29 am</a>		</div>

		<p>@Ulric &#8211; I wasn&#8217;t just talking about Windows; I was talking about the general merits of running single-arch vs. multi-arch systems. I run some (non-Windows) pure 64-bit systems quite happily thanks, and am loathe to install dozens of megs of 32-bit support libraries (libraries installed are much greater than the shared memory used, although disk space is more plentiful than RAM, you do still have the issues of extra security updates, etc&#8230;) for one or two apps that the proprietary vendor *still* can&#8217;t get right, despite 64-bit systems being available for many years now.</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

