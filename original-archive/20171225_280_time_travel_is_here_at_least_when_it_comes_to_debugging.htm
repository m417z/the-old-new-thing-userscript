<html>
<head>
<title>Time travel is here, at least when it comes to debugging</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>Time travel is here, at least when it comes to debugging</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>December 25, 2017 / year-entry #281</td></tr>
<tr><td><b>Tags:</b></td><td>code</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20171225-00/?p=97645</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>1</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">A present for all the developers out there.</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>
At CppCon 2017,
the Time Travel Debugging team (TTD)
came through with a present for all the developers out there:
A reverse debugging tool!
</p>
<ul>
<li>
    <a HREF="https://blogs.msdn.microsoft.com/windbg/2017/09/25/time-travel-debugging-in-windbg-preview/">
    Time Travel Debugging in WinDbg Preview</a>!
</li>
<li>
    <a HREF="https://blogs.msdn.microsoft.com/windbg/2017/10/09/time-travel-debugging-presentation-at-cppcon/">
    Time Travel Debugging presentation at CppCon</a>.
    <a HREF="https://www.youtube.com/watch?v=l1YJTg_A914">
    Watch the presentation here</a>.
</li>
<li>
    <a HREF="https://blogs.msdn.microsoft.com/windbg/2017/10/20/time-travel-debugging-faq/">
    Time Travel Debugging FAQ</a>.
</li>
</ul>
<p>
Time Travel Debugging captures a trace of the program being executed
so that the run can be replayed later.
When you load the trace in the debugger, you can jump to any point in the
program's execution,
be it forward or backward.
Single-stepping backward through the code lets you trace backward
where a bad value came from.
You can set write breakpoints on memory and then ask the program to
execute backward:
The breakpoint will fire when the memory was previously written.
Again, this lets you trace backward where a bad value came from.
</p>
<p>
(As noted in the talk,
this is similar in many ways to
<a HREF="http://rr-project.org/">
the rr project</a>,
but differs in many was as well.)
</p>
<p>
<b>Bonus chatter</b>:
I helped out with the replay portion of this project some time ago.
I wrote the second version of the jitter's register allocator,
as well as implementing some of the opcodes.
I'm told that some of my code has since been removed, but other
parts remain.</p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (6)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-1318715">
				<div id="div-comment-1318715" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Anon</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20171225-00/?p=97645#comment-1318715">
			December 25, 2017 at 3:06 pm</a>		</div>

		<p>On ARM systems Lauterbach debuggers with ETM do a really good job of this. You can set the system up to hit a breakpoint when something interesting happens and then step back in time from there to see how it got there.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1 parent" id="comment-1318895">
				<div id="div-comment-1318895" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Lev</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20171225-00/?p=97645#comment-1318895">
			December 27, 2017 at 12:41 pm</a>		</div>

		<p>So does it dump the entire memory of the process after each CPU instruction?</p>

		
				</div>
		<ol class="children">
		<li class="comment even depth-2" id="comment-1318905">
				<div id="div-comment-1318905" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">snarf</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20171225-00/?p=97645#comment-1318905">
			December 27, 2017 at 2:09 pm</a>		</div>

		<p>Or maybe just keep a history of writes&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-zlynx odd alt depth-2 parent" id="comment-1318915">
				<div id="div-comment-1318915" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Zan+Lynx%27' rel='external nofollow' class='url'>Zan Lynx'</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20171225-00/?p=97645#comment-1318915">
			December 27, 2017 at 2:58 pm</a>		</div>

		<p>It doesn&#8217;t have to do that. It could record a snapshot of modified pages and register state. It only has to do that at certain points like system calls or access to non-local state. </p>
<p>Like a movie encoding, it can play things backward by moving to a snapshot and running forward N steps, then back up by again running forward N-1 steps, or by recording everything for each of N steps.</p>

		
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-wndsks even depth-3" id="comment-1319005">
				<div id="div-comment-1319005" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/skSdnW' rel='external nofollow' class='url'>skSdnW</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20171225-00/?p=97645#comment-1319005">
			December 28, 2017 at 5:14 pm</a>		</div>

		<p>GetTickCount and some other time/date stuff are not syscalls and just access a special page in memory. I wonder how they deal with that.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment odd alt depth-2" id="comment-1318925">
				<div id="div-comment-1318925" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Michael</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20171225-00/?p=97645#comment-1318925">
			December 27, 2017 at 3:12 pm</a>		</div>

		<p>A link to the paper describing the pre-product version is available through here: <a href="https://mobile.twitter.com/JamesMcNellis/status/912545386320896000" rel="nofollow">https://mobile.twitter.com/JamesMcNellis/status/912545386320896000</a><br />
The tweet he replies to has a link to a paper about rr.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

