<html>
<head>
<title>Any setting you expose to the user you implicitly expose to applications</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>Any setting you expose to the user you implicitly expose to applications</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>May 2, 2013 / year-entry #121</td></tr>
<tr><td><b>Tags:</b></td><td>other</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20130502-00/?p=4473</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>38</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">Often, in response to some sort of design decision, people will say, "Well, sure, you made this decision because it would allow applications to do Bad Thing, but why not expose it as a setting the user can select? For example, let the user pick a Topper Than Topmost Awesome Top Window Super Top (Extra...</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>Often, in response to some sort of design decision, people will say, "Well, sure, you made this decision because it would allow applications to do Bad Thing, but why not expose it as a setting the user can select? For example, let the user pick a Topper Than Topmost Awesome Top Window Super Top (Extra Super edition), and keep that window on top regardless of what any application does."</p>
<p> Because anything the user can do, an application can do. </p>
<p> Suppose there was a new context menu item for a window called <i>Make this Topper Than Topmost Awesome Top Window Super Top (Extra Super edition)</i>. Well, an application could just programmatically send the <code>WM_<wbr>SYS&shy;COMMAND</wbr></code> message with <code>wParam</code> set to <code>SC_TOPPER&shy;THAN&shy;TOPMOST&shy;AWESOME&shy;TOP&shy;WINDOW&shy;SUPER&shy;TOP&shy;EXTRA&shy;SUPER</code>. </p>
<p> If you say, "Nope, that context menu item is super secret and has a random command ID so nobody knows what its ID is", well, the program could just call <code>Get&shy;System&shy;Menu</code> and enumerate the menu items and then extract the ID from the one whose name is <i>Make this Topper Than Topmost Awesome Top Window Super Top (Extra Super edition)</i>. </p>
<p> If you say, "Nope, that menu item will be hidden from enumeration, so programs which enumerate their system menu can't see it", well, the program could just use Accessibility to programmatically open its system menu, and then programmatically click the <i>Make this Topper Than Topmost Awesome Top Window Super Top Super (Extra Super edition)</i> button. </p>
<p> Anything the user can do, a program can do by simply <a href="http://blogs.msdn.com/b/oldnewthing/archive/2009/02/02/9388941.aspx"> pretending to be the user</a>. </p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (38)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-1054013">
				<div id="div-comment-1054013" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">GWO</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130502-00/?p=4473#comment-1054013">
			May 2, 2013 at 7:14 am</a>		</div>

		<p>The low drooling sound you can hear is 1000000 Web Designers saying &quot;Use a CAPTCHA!&quot;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1054033">
				<div id="div-comment-1054033" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Yuri</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130502-00/?p=4473#comment-1054033">
			May 2, 2013 at 7:24 am</a>		</div>

		<p>And then you&#39;ll get a request on how to make a Super Street Topper Than Topmost Awesome Top Window Super Top II (Turbo Hyper edition)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1054043">
				<div id="div-comment-1054043" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">muxecoid</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130502-00/?p=4473#comment-1054043">
			May 2, 2013 at 7:31 am</a>		</div>

		<p>There should be a UAC popup when trying to do it. Only administrative users should be allowed to top the topness.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-maurits odd alt thread-odd thread-alt depth-1" id="comment-1054053">
				<div id="div-comment-1054053" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Maurits+%5BMSFT%5D' rel='external nofollow' class='url'>Maurits [MSFT]</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130502-00/?p=4473#comment-1054053">
			May 2, 2013 at 7:43 am</a>		</div>

		<p>Consider the &quot;allow this app to use the microphone?&quot; prompt when using a Windows Store app.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1054063">
				<div id="div-comment-1054063" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Rick C</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130502-00/?p=4473#comment-1054063">
			May 2, 2013 at 7:49 am</a>		</div>

		<p>@Maurits: &nbsp;for those of us who haven&#39;t experienced this prompt, why?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1054073">
				<div id="div-comment-1054073" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Danny Moules</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130502-00/?p=4473#comment-1054073">
			May 2, 2013 at 7:52 am</a>		</div>

		<p>&quot;There should be a UAC popup when trying to do it. Only administrative users should be allowed to top the topness.&quot;</p>
<p>And thereby encourage people to disable UAC because it&#39;s not being used for security reasons but for a reason that, to a typical end-user, are poorly defined and irrelevant to what he or she is currently attempting to do. Getting people to keep UAC on is already a monumental task without making it even less desirable to the user.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1054083">
				<div id="div-comment-1054083" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Mordachai</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130502-00/?p=4473#comment-1054083">
			May 2, 2013 at 8:05 am</a>		</div>

		<p>Giving software individual rights is far preferable to blanket on/off of UAC.</p>
<p>The biggest issue with UAC encouraging users to hate its guts, is that its retarded in its blanket-ness. &nbsp;If you enable it, you get asked the same questions over &amp; over &amp; over (it never learns a damn thing).</p>
<p>The metro-apps, for all their downsides, do a have a much smarter authorization model, where the user answer &quot;does this <em>app</em> have <em>this</em> right?&quot; &nbsp;now and forever for you, as a user. &nbsp;MUCH smarter.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-alegrigoriev odd alt thread-odd thread-alt depth-1" id="comment-1054093">
				<div id="div-comment-1054093" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/alegr1' rel='external nofollow' class='url'>alegr1</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130502-00/?p=4473#comment-1054093">
			May 2, 2013 at 8:06 am</a>		</div>

		<p>@MAurits:</p>
<p>&quot;allow this app use microphone&quot; should be a fixed permission assigned to the installation package (and then to the app account on the computer). This privilege should only be given to the package explicitly by Microsoft app store, after submitter&#39;s explanation. Same for &quot;allow to use video camera&quot;.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1054103">
				<div id="div-comment-1054103" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130502-00/?p=4473#comment-1054103">
			May 2, 2013 at 8:55 am</a>		</div>

		<p>There&#39;s a nasty virus making its rounds taking over Windows machines that have weak passwords. UAC does absolutely nothing to stop it, and there&#39;s no reasonable way it could. The virus operates by remote desktop, and tries usernames and passwords until it gets in. Obviously, it now knows the password to provide to the UAC dialog box.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1054113">
				<div id="div-comment-1054113" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">EvilKiru</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130502-00/?p=4473#comment-1054113">
			May 2, 2013 at 8:58 am</a>		</div>

		<p>@GWO The presence of a Captcha automatically disqualifies the person responsible for the Captcha from being referred to as a Web Designer.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1054123">
				<div id="div-comment-1054123" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blogs.msdn.com/ajgelado_4000_hotmail.com/ProfileUrlRedirect.ashx' rel='external nofollow' class='url'>ajgelado@hotmail.com</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130502-00/?p=4473#comment-1054123">
			May 2, 2013 at 9:13 am</a>		</div>

		<p>I&#39;m sure that, contrary to conventional wisdom, installation permissions do not serve its intended purpose. It&#39;s only a fad of the &quot;new&quot; style of applications for mobile devices. Do you really expect a user to read a list of a dozen permissions, most of them being as obvious (and user-unfriendly) as &quot;access contact list&quot; or &quot;use local storage&quot;? Do you really expect the user to refuse the installation of an application s/he has already downloaded (and maybe payed for) if there is only one item s/he doesn&#39;t agree with?</p>
<p>What makes these platforms a bit safer than conventional open OSes is the owner of the application store (Google, Microsoft, Apple&#8230;) curating it and discarding malware from it. But the plain user has not the knowledge to know what permissions s/he has to give to a single app. And in most cases, s/he doesn&#39;t care.</p>
<p>It&#39;s sad, but let&#39;s accept that: any platform that isn&#39;t completely closed will have malware as soon as it gets enough market share.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-maurits odd alt thread-odd thread-alt depth-1" id="comment-1054143">
				<div id="div-comment-1054143" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Maurits+%5BMSFT%5D' rel='external nofollow' class='url'>Maurits [MSFT]</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130502-00/?p=4473#comment-1054143">
			May 2, 2013 at 10:02 am</a>		</div>

		<p>IIRC, there is an installation permission for Windows Store apps. In order to record from a microphone, an app needs to declare its intent to capture from the microphone in its manifest.</p>
<p>If it does this, the Store will advertise this to the customer. When the app actually tries to record from the microphone, Windows pops up the prompt.</p>
<p>If the app does not declare the intent, but tries to record from the microphone anyway, Windows will fail the attempt without bothering to show a prompt at all.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1054153">
				<div id="div-comment-1054153" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Clipboarder Gadget</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130502-00/?p=4473#comment-1054153">
			May 2, 2013 at 10:09 am</a>		</div>

		<p>The window that registers most of Explorer shortcuts (eg Win+D) hides itself from Window enumeration functions. I found that out while trying to make a program that disables the charmsbar hotkey. Took me quite a while to figure this out. Very nasty.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1054163">
				<div id="div-comment-1054163" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Dave</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130502-00/?p=4473#comment-1054163">
			May 2, 2013 at 10:11 am</a>		</div>

		<p>I definitely like the finer-grained security model that all the app stores have, but it doesn&#39;t affect this particular case where an app wants to be the Topmost Window Bar None. If 10 installed apps have the fine-grained Topmost Window Bar None permission, then 10 shall enter topmost but only one shall be topmost. Or the device will crash. Or something. And don&#39;t tell me the user will have actually read the list of permissions and said &quot;This flashlight app wants to be the Topmost Window Bar None? Well forget this download!&quot;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1054173">
				<div id="div-comment-1054173" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">dave</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130502-00/?p=4473#comment-1054173">
			May 2, 2013 at 10:16 am</a>		</div>

		<blockquote><p>
  Anything the user can do, a program can do by simply pretending to be the user.
</p></blockquote>
<p>I prefer the explanation that the user can&#39;t actually do anything beyond click mouse buttons and press keys. From there onwards, everything that is done is done by &#39;a program&#39;.</p>
<p>(Hmm, I wonder how much intersection there is between those who suggest that &#39;only the user&#39; be allowed to do something-or-other, and those who complain about Microsoft software having &#39;hidden [sic] APIs&#39;)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-entegygmail-com odd alt thread-odd thread-alt depth-1" id="comment-1054183">
				<div id="div-comment-1054183" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Entegy' rel='external nofollow' class='url'>Entegy</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130502-00/?p=4473#comment-1054183">
			May 2, 2013 at 10:35 am</a>		</div>

		<p>@Maurits. This sounds good to me. Modern app stores show what capabilities the app wants. Trust in the system is broken if an app who said it didn&#39;t need microphone access suddenly starts asking for microphone access.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-andycadley2 even thread-even depth-1" id="comment-1054193">
				<div id="div-comment-1054193" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/AndyCadley' rel='external nofollow' class='url'>AndyCadley</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130502-00/?p=4473#comment-1054193">
			May 2, 2013 at 10:40 am</a>		</div>

		<p>@Maurits: The situation is somewhat different for Windows Store apps, because they would need to escape the sandbox in order to act as the user, which is something they (deliberately) cannot do. It&#39;s the advantage you gain by not giving access to every aspect of the situation to applications, although you subsequently pay the price that there are certain types of application (such as accessibility tools) which simply cannot be written within that framework.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1054203">
				<div id="div-comment-1054203" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130502-00/?p=4473#comment-1054203">
			May 2, 2013 at 11:07 am</a>		</div>

		<p>@Entegy: What permissions do you expect a program that hosts arbitrary third-party plugins to ask for?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-entegygmail-com even thread-even depth-1" id="comment-1054213">
				<div id="div-comment-1054213" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Entegy' rel='external nofollow' class='url'>Entegy</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130502-00/?p=4473#comment-1054213">
			May 2, 2013 at 11:24 am</a>		</div>

		<p>Considering that&#39;s not a possibility for Windows Store apps, it&#39;s a non-issue.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-alegrigoriev odd alt thread-odd thread-alt depth-1" id="comment-1054223">
				<div id="div-comment-1054223" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/alegr1' rel='external nofollow' class='url'>alegr1</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130502-00/?p=4473#comment-1054223">
			May 2, 2013 at 11:30 am</a>		</div>

		<blockquote><p>
  In order to record from a microphone, an app needs to declare its intent to capture from the microphone in its manifest.
</p></blockquote>
<p>Does MS app store actually vet the submissions? As in: &quot;we&#39;re not accepting this application because it wants the microphone (or other privilege) without a legit reason.&quot;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-entegygmail-com even thread-even depth-1" id="comment-1054233">
				<div id="div-comment-1054233" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Entegy' rel='external nofollow' class='url'>Entegy</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130502-00/?p=4473#comment-1054233">
			May 2, 2013 at 11:33 am</a>		</div>

		<p>No, it just checks that the manifest is correct, the app doesn&#39;t crash or break the store guidelines for submission.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1054243">
				<div id="div-comment-1054243" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Anonymous Coward</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130502-00/?p=4473#comment-1054243">
			May 2, 2013 at 4:12 pm</a>		</div>

		<p>This is real weakness of Windows at present. Metro helps, but creates too many other problems in terms of usability that have nothing to do with permissions, so it&#39;s no solution.</p>
<p>A good way to fix this is by realising that applications are often not fully trusted by the user and base individual applications on that. Most of the permissions can be kept off by default. If an application requests permission to do something potentially evil, you can opt to allow it or to lie to the application and pretend in a safe way that the permission was granted.</p>
<p>Declining permission and telling the application as much doesn&#39;t seem useful to me, because that just makes applications (especially the crap in ‘app stores’) stop working until permissions are granted, which in turn will just train users to give everything full permissions to make stuff work, because they want to see the dancing bunnies.</p>
<p>From this it follows that permissions must be set sensibly initially, e.g. a document editor needs access to the document you&#39;re editing. This means that if you want to protect a user from document editors that destroy documents, you have to use something like Subversion.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-matteo even thread-even depth-1" id="comment-1054253">
				<div id="div-comment-1054253" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Matteo+Italia' rel='external nofollow' class='url'>Matteo Italia</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130502-00/?p=4473#comment-1054253">
			May 2, 2013 at 6:49 pm</a>		</div>

		<p>[ Well, an application could just programmatically send the WM_SYS­COMMAND message with wParam set to SC_TOPPER­THAN­TOPMOST­AWESOME­TOP­WINDOW­SUPER­TOP­EXTRA­SUPER. ]</p>
<p>The sad thing is that I&#39;ve seen people pull this stunt even when there are already perfectly documented APIs.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-cheong odd alt thread-odd thread-alt depth-1" id="comment-1054263">
				<div id="div-comment-1054263" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/cheong00' rel='external nofollow' class='url'>cheong00</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130502-00/?p=4473#comment-1054263">
			May 2, 2013 at 10:29 pm</a>		</div>

		<p>How about just limiting programatic access to the (hyper&#8230; maybe need Shift + Alt?) extended context menus?</p>
<p>If the option is currently forbidden because it&#39;d allow The Bad Thing, they aren&#39;t going to see it directly anyway. And those who really wants it can do web search and find out the setting is avaliable under extended context menus.</p>
<p>Just some suggestions.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1054273">
				<div id="div-comment-1054273" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Simon Farnsworth</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130502-00/?p=4473#comment-1054273">
			May 3, 2013 at 1:25 am</a>		</div>

		<p>@cheong00</p>
<p>How do I permit accessibility aids programmatic access to the option, while prohibiting other programs from obtaining programmatic access?</p>
<p>*That&#39;s* where it gets tricky &#8211; there are legitimate programs that need to spoof being the user (e.g. a voice-controlled input system for someone with muscle control problems, or a puff-type input system for someone like Stephen Hawkins). As a result, in the Windows (and X11 &#8211; this is not a Microsoft-only issue) security model, any program can spoof being the user who runs it; you&#39;d need to move to a security model a bit like Android&#39;s, where each application is in its own security domain, and the OS controls interactions between the security domains. That&#39;s no longer Win32 as we know it&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1054283">
				<div id="div-comment-1054283" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">apz</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130502-00/?p=4473#comment-1054283">
			May 3, 2013 at 2:40 am</a>		</div>

		<p>@cheong00,</p>
<p>Way to miss the entire point of the article! The whole article is about how it&#39;s *impossible* currently under Windows to do what you are suggesting. In your example, how is &quot;limiting programmatic access&quot; going stop an application from either SendMessaging to the command, or if that doesn&#39;t work, SendKeys to simulate the keyboard input, or if that doesnt work, MouseInput to simulate mouse activity, or if that doesn&#39;t work, installing itself as a USB mouse/keyboard and directly simulating keypresses, etc.</p>
<p>The whole point of this article is, for an unsandboxed program, you *cant*.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1054343">
				<div id="div-comment-1054343" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blogs.msdn.com/jernej_2D00_ms.live_4000_ena.si/ProfileUrlRedirect.ashx' rel='external nofollow' class='url'>jernej-ms.live@ena.si</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130502-00/?p=4473#comment-1054343">
			May 4, 2013 at 4:45 pm</a>		</div>

		<p>Speaking of SuperTop, Windows 8 supports it &#8211; open Task Manager, set it as topmost, then observe what happens (it&#39;s easy to replicate this in your own program if you know what Task Manager is doing).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1054373">
				<div id="div-comment-1054373" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Kevin</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130502-00/?p=4473#comment-1054373">
			May 4, 2013 at 11:26 pm</a>		</div>

		<p>@dave:</p>
<blockquote><p>
  I prefer the explanation that the user can&#39;t actually do anything beyond click mouse buttons and press keys. From there onwards, everything that is done is done by &#39;a program&#39;.
</p></blockquote>
<p>So the kernel and Windows Shell are now programs?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-cheong even thread-even depth-1" id="comment-1054383">
				<div id="div-comment-1054383" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/cheong00' rel='external nofollow' class='url'>cheong00</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130502-00/?p=4473#comment-1054383">
			May 5, 2013 at 8:16 pm</a>		</div>

		<p>@apz: Just like how FaceBook detects javascript clicks of &quot;Like&quot;, maybe Windows should introduce a parameter in the messaging system that only exist when the I/O comes from a lower level driver of corresponding type. Therefore the application that wants to invoke some function IIF it&#39;s invoked by user can check them, and those who don&#39;t care can continue to work.</p>
<p>Maybe we could just have an extra function DispatchMessageEx() to return the additional information.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1054393">
				<div id="div-comment-1054393" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Gabe</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130502-00/?p=4473#comment-1054393">
			May 5, 2013 at 11:57 pm</a>		</div>

		<p>Kevin: The Windows shell is now, and has always been, a program. For the purposes of this discussion, the kernel is probably not what you would consider a program.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1054403">
				<div id="div-comment-1054403" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blogs.msdn.com/jernej_2D00_ms.live_4000_ena.si/ProfileUrlRedirect.ashx' rel='external nofollow' class='url'>jernej-ms.live@ena.si</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130502-00/?p=4473#comment-1054403">
			May 6, 2013 at 12:44 am</a>		</div>

		<p>@cheong00: how would that handle the accessibility functions (whose sole purpose is to programmatically simulate user input)?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-bboorman odd alt thread-odd thread-alt depth-1" id="comment-1054413">
				<div id="div-comment-1054413" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Brian_EE' rel='external nofollow' class='url'>Brian_EE</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130502-00/?p=4473#comment-1054413">
			May 6, 2013 at 7:05 am</a>		</div>

		<p>@Gabe, The kernel is a collection of machine code instructions that are executed by the CPU to accomplish a set of tasks, therefore it is indeed a program. I think what you meant was that the kernel is not an *application*.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-cheong even thread-even depth-1" id="comment-1054573">
				<div id="div-comment-1054573" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/cheong00' rel='external nofollow' class='url'>cheong00</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130502-00/?p=4473#comment-1054573">
			May 6, 2013 at 8:15 pm</a>		</div>

		<p>@ender9: For those function that don&#39;t care to block fake inputs, they&#39;ll continue to work.</p>
<p>For, those function that wants to block fake inputs, these functions won&#39;t allow accessibility programs to simulate input for users.</p>
<p>Since these function would be a limited set, I think it&#39;d be okay even for those &quot;disabled&quot; peoples. If they don&#39;t understand the security implications behind and accept have to find someone typing these settings for them on these rare circumstances, maybe they shouldn&#39;t take the job that requires them to touch these settings, IMO.</p>
<div class="post">[<em>&quot;Oh, I&#39;m sorry. If you&#39;re disabled, then you cannot pin anything to your taskbar.&quot; Good luck with that. -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-cheong odd alt thread-odd thread-alt depth-1" id="comment-1054583">
				<div id="div-comment-1054583" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/cheong00' rel='external nofollow' class='url'>cheong00</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130502-00/?p=4473#comment-1054583">
			May 6, 2013 at 8:24 pm</a>		</div>

		<p>Btw, I just check that things like Windows&#39; built in speech recognization engine won&#39;t work with &quot;secure desktop&quot; either. So when building for security, at some point you have to accept loss in accessibility too.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-cheong even thread-even depth-1" id="comment-1054593">
				<div id="div-comment-1054593" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/cheong00' rel='external nofollow' class='url'>cheong00</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130502-00/?p=4473#comment-1054593">
			May 7, 2013 at 12:03 am</a>		</div>

		<p>[&quot;Oh, I&#39;m sorry. If you&#39;re disabled, then you cannot pin anything to your taskbar.&quot; Good luck with that. -Raymond]</p>
<p>If you need speech recognition, you don&#39;t need pin items in taskbar because you&#39;ll &quot;talk your way to pearl&quot; to get the program you need. So I assume there&#39;s pretty good chance for people who make this particular decision to have good luck. A wallpaper with commonly used program names (and possibly aliases) would have been more useful for them.</p>
<p>If you&#39;re talking about other special designed accessibilty device, since it matches the defination of &quot;originates from lower level driver of corresponding type&quot;, this suggestion shouldn&#39;t affect them at all.</p>
<div class="post">[<em>Which would you rather say, &quot;Start. Microsoft Word. File. Open. Budget 2012. Enter.&quot; or &quot;Hotkey Windows 2&quot;? And (going back to the original issue), you&#39;re saying that people with disabilities will not be able to make an app super awesome topmost? -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-cheong odd alt thread-odd thread-alt depth-1" id="comment-1055003">
				<div id="div-comment-1055003" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/cheong00' rel='external nofollow' class='url'>cheong00</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130502-00/?p=4473#comment-1055003">
			May 7, 2013 at 8:36 pm</a>		</div>

		<p>For the example you choose, the user could just place the file shortcut to desktop and assign shortcut there, no need to bother with taskbar pinning.</p>
<p>Regarding &quot;make an app super awesome topmost&quot;, I don&#39;t agree with you either because there&#39;s quite some accessibities software that works correctly only if the application they try to interact are both active window and topmost window (especially when model dialog got involved&#8230; I&#39;ve got support calls more than once when they find some of the windows have model dialog not selectable to them so have to play &quot;hide and seek&quot; with application to get the dialog out and close it). The fact that allowing some window topmost will give them difficultly to move around makes me feel that they would rather NOT have this feature until their accessibilities software got fixed. Therefore hiding this function from them maybe doesn&#39;t matter at all.</p>
<p>Or thing&#39;s have been better now, afterall I&#39;ve left the job for like 7 years now.</p>
<div class="post">[<em>Imagine some awesome feature. Now imagine that accessibility tools could not use that awesome feature. -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-alexcohn even thread-even depth-1" id="comment-1055013">
				<div id="div-comment-1055013" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Alex+Cohn' rel='external nofollow' class='url'>Alex Cohn</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130502-00/?p=4473#comment-1055013">
			May 7, 2013 at 10:45 pm</a>		</div>

		<p>Which would you rather say, &quot;Start. Microsoft Word. File. Open. Budget 2012. Enter.&quot; or &quot;Hotkey Windows 2&quot;?</p>
<p>I&#39;d rather say &quot;open 2012 budget&quot; and let the AI engine figure out what has to be done to accomplish my wish. It should be reasonably easy if &quot;2012 Budget.doc&quot; happens to be one of the &quot;recent documents&quot;.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-cheong odd alt thread-odd thread-alt depth-1" id="comment-1055353">
				<div id="div-comment-1055353" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/cheong00' rel='external nofollow' class='url'>cheong00</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130502-00/?p=4473#comment-1055353">
			May 8, 2013 at 7:43 pm</a>		</div>

		<p>[Imagine some awesome feature. Now imagine that accessibility tools could not use that awesome feature. -Raymond]</p>
<p>That&#39;d require &quot;case by case analysis&quot; to produce meaningful result. Like what I said, even the build-in speech recognition doesn&#39;t work with the secure desktop. And I think able to input occasionally on secure desktop themselves without the need to call someone to help is already a very important thing to them. No need to put in &quot;awesome feature&quot; at all.</p>
<p>Most disabled people, when come to computing, just hope they can do mundane things and have very low expectation on what they can do, because of current limitation of accessibility softwares. With this reason, if your &quot;awesome feature&quot; that is not anything their routine work touches, there&#39;s very good chance not heard from them being excluded from using it.</p>
<div class="post">[<em>Which goes back to the original problem. If you want to protect a feature from applications, you also make it inaccessible. If you are the sort of person who wants to protect all features, then the consequence is that you also make all features inaccessible. -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

