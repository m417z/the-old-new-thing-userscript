<html>
<head>
<title>On the importance of making sure WaitForInputIdle doesn't think you're idle, episode 2</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>On the importance of making sure WaitForInputIdle doesn&#8217;t think you&#8217;re idle, episode 2</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>August 12, 2016 / year-entry #169</td></tr>
<tr><td><b>Tags:</b></td><td>code</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20160812-00/?p=94075</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>6</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">WaitForInputIdle is how the shell knows that your DDE server.</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>
Continuing our DDE micro-series,
we'll look at another customer who was having trouble
getting the shell to recognize their DDE server.
</p>
<blockquote CLASS=q>
<p>
We have a program that supports DDE for legacy reasons.
More specifically, we have two versions of that program,
and we support the user installing both of them
side by side.
To mediate this uneasy coexistence,
we intend to have
a "selector" program that registers for all
the file extensions,
and the user configures the selector so that the
requests are directed at the specific version of the program
the user chooses.
</p>
<p>
We threw together a quick prototype of the selector,
which simply looks up the user's preference,
and then forwards its command line to the appropriate version.
For example,
we register the <i>open</i> verb as
<code>ddeexec = selector.exe</code>,
and the selector program decides that (say)
the user wants files to open in v1,
so the selector runs
<code>"C:\Program Files\Contoso\v1\contoso.exe"</code>.
</p>
<p>
What we found is that we get
<i>There was a problem sending the command to the program</i>.
What are we doing wrong?
</p>
</blockquote>
<p>
Recall that
after the shell launches the registered command,
the shell calls
<code>Wait&shy;For&shy;Input&shy;Idle</code>,
and then when that call returns,
the shell goes looking for the DDE server.
</p>
<p>
The first catch is that
<code>Wait&shy;For&shy;Input&shy;Idle</code>
requires a GUI program.
This makes sense because console programs don't pump messages,
so any such wait would be infinite.
What's happening is that the shell launches the selector,
and then the shell calls
<code>Wait&shy;For&shy;Input&shy;Idle</code>,
which returns (with an error),
and then the shell goes looking for the DDE server.
But the DDE server isn't ready yet.
</p>
<p>
The selector needs to be a GUI program,
and it needs to perform a
<code>Wait&shy;For&shy;Input&shy;Idle</code>
on the final program, so that it doesn't go input
idle until the actual server goes input idle.
(In a sense, the selector is proxying input idle-ness.)
</p>
<p>
The customer tried a quick prototype with a WPF program,
but it still didn't work.
I don't know for sure, but I suspect that something
in the WPF framework is pumping messages
(perhaps due to a cross-thread COM operation)
or creating a background thread that goes input-idle,
which causes the entire process to go input-idle
before the business logic can launch the true DDE server.
</p>
<p>
The customer tried another prototype with a pure Win32
program that launched the true DDE server,
and then used
<code>Wait&shy;For&shy;Input&shy;Idle</code>
to wait for the true DDE server to go idle,
and then exited.
</p>
<p>
And this worked, sort of.
</p>
<p>
What the customer found is that they needed to add
a <code>Sleep(1000)</code> between launching the
true DDE server and calling
<code>Wait&shy;For&shy;Input&shy;Idle</code>.
If they called
<code>Wait&shy;For&shy;Input&shy;Idle</code>
immediately after the <code>Create&shy;Process</code>,
then the shell error occurred.
</p>
<p>
This
stumbles across another fine detail of
<code>Wait&shy;For&shy;Input&shy;Idle</code>:
The process must be a GUI process.
And even though the true DDE server is a GUI process,
the selector is so fast that it calls
<code>Wait&shy;For&shy;Input&shy;Idle</code>
before the true DDE server can call into the window manager
and create its message queue,
which is what causes the program to be marked as a GUI program.
When this happens, the
<code>Wait&shy;For&shy;Input&shy;Idle</code>
function returns <code>WAIT_<wbr>FAILED</code>.
</p>
<p>
Therefore, the selector program should check whether
<code>Wait&shy;For&shy;Input&shy;Idle</code
returns <code>WAIT_<wbr>FAILED</code>;
if so, it should sleep a little bit and try again.
(And eventually give up.)
</p>
<p>
Phew.
</p>
<p>
Please stop using DDE.</p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (6)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment byuser comment-author-dwalker-wk even thread-even depth-1 parent" id="comment-1259955">
				<div id="div-comment-1259955" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/DWalker' rel='external nofollow' class='url'>DWalker</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160812-00/?p=94075#comment-1259955">
			August 12, 2016 at 7:33 am</a>		</div>

		<p>Using Sleep is always weird. If you have to wait &#8220;for a second or two&#8221; in order for a program to run correctly, then something is probably wrong with your program.  And you can never get the timing &#8220;provably right&#8221;.  </p>
<p>However, sometimes you have to resort to Sleeps in order to just &#8220;get stuff done&#8221;.  Unfortunately.</p>

		
				</div>
		<ol class="children">
		<li class="comment odd alt depth-2 parent" id="comment-1259995">
				<div id="div-comment-1259995" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Yuri Khan</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160812-00/?p=94075#comment-1259995">
			August 12, 2016 at 10:49 am</a>		</div>

		<p>The alternative is to design a communication mechanism between the programs. For example, the selector could create an event object, let the child program inherit it, and wait for the child to signal it. Or it could pass a pipe as the standard output and wait for the child to say “hello world\n” into it. Or it could wait until the child goes input-idle… wait.</p>

		
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-dwalker-wk even depth-3" id="comment-1260055">
				<div id="div-comment-1260055" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/DWalker' rel='external nofollow' class='url'>DWalker</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160812-00/?p=94075#comment-1260055">
			August 12, 2016 at 1:22 pm</a>		</div>

		<p>Exactly right, Yuri!</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment odd alt depth-2" id="comment-1260035">
				<div id="div-comment-1260035" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">smf</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160812-00/?p=94075#comment-1260035">
			August 12, 2016 at 12:38 pm</a>		</div>

		<p>&gt; However, sometimes you have to resort to Sleeps in order to just “get stuff done”. Unfortunately.</p>
<p>I hit this problem when one of our hardware suppliers introduced Windows CE devices and their printer driver was just ridiculously unreliable. It could print a page ok, but not multiple pages. Unfortunately their main focus was on the parking ticket industry, while we were doing invoices etc. When I visited them so they could tell me what I was doing wrong I eventually persuaded them to show me their code and it was multithreaded and full of for() delay loops and sleep to keep the threads in some form of sync. After much effort I got them to try putting some variables in (still not using events because they are &#8220;too hard&#8221;) and they were surprised that it started working better. It was running on an SH2, so it wasn&#8217;t ever going to be the fastest device. But printing really did burn up the CPU.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-yuhong-bao even depth-2" id="comment-1260105">
				<div id="div-comment-1260105" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Yuhong+Bao' rel='external nofollow' class='url'>Yuhong Bao</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160812-00/?p=94075#comment-1260105">
			August 14, 2016 at 8:07 pm</a>		</div>

		<p>This reminds me of this: <a href="http://www.virtualdub.org/blog/pivot/entry.php?id=88" rel="nofollow">http://www.virtualdub.org/blog/pivot/entry.php?id=88</a></p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment byuser comment-author-wndsks odd alt thread-odd thread-alt depth-1" id="comment-1260095">
				<div id="div-comment-1260095" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/skSdnW' rel='external nofollow' class='url'>skSdnW</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160812-00/?p=94075#comment-1260095">
			August 13, 2016 at 4:07 am</a>		</div>

		<p>Does this mean the shell uses Sleep as well? From what I remember, it takes a while for the shell error MessageBox to appear&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

