<html>
<head>
<title>Computing the interval between two moments in time</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>Computing the interval between two moments in time</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>April 14, 2005 / year-entry #93</td></tr>
<tr><td><b>Tags:</b></td><td>code</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20050414-39/?p=35903</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>20</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">Computing the interval between two moments in time is easy: It's just subtraction, but subtraction may not be what you want. If you are displaying time units on the order of months and years, then you run into the problem that a month is of variable length. some people just take the value relative to...</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>
Computing the interval between two moments in time is easy:
It's just subtraction, but subtraction may not be what you want.
</p>
<p>
If you are displaying time units on the order of months and
years, then you run into the problem that a month is of variable
length.
<a HREF="http://groups.google.com/groups?selm=aNidndhYae_Ukz_cRVn-2g@rogers.com">
some people just take the value relative to a base date of January 1
and extract the year and month counts</a>.
</p>
<p>
Unfortunately, this results in somewhat non-intuitive results.
Let's illustrate with some examples.  I'm going to write this in C#
because it lets me focus on the algorithm instead of getting distracted
by "oh dear how do I convert between SYSTEMTIME and FILETIME?" issues,
and because it hightlights some new issues.
</p>
<pre>
// Remember, code in italics is wrong
using System;
using SC = System.Console;

class Program {
 static void PrintAge(DateTime bday, DateTime asof)
 {
  <i>TimeSpan span = asof - bday;
  SC.WriteLine(span);</i>
 }
 public static void Main(string[] args) {
  DateTime bday = DateTime.Parse(args[0]);
  DateTime asof = DateTime.Parse(args[1]);
  if (bday &gt; asof) { SC.WriteLine("not born yet"); return; }
  PrintAge(bday, asof);
 }
}
</pre>
<p>
The two parameters to the program are the victim's birthday
and the date as of which you want to compute the victim's age.
</p>
<p>
Here's a sample run:
</p>
<pre>
&gt; howold 1/1/2001 1/1/2002
365.00:00:00
</pre>
<p>
Observe that the <code>TimeSpan</code> structure does not attempt
to produce results in any unit larger than a day, since the authors
of <code>TimeSpan</code> realized that months and years are variable-length.
</p>
<p>
A naive implementation might go like this:
</p>
<pre>
static void PrintAge(DateTime bday, DateTime asof)
{
 </i>TimeSpan span = asof - bday;
 DateTime dt = (new DateTime(1900, 1, 1)).Add(span);
 SC.WriteLine("{0} years, {1} months, {2} days",
              dt.Year - 1900, dt.Month - 1, dt.Day - 1);</i>
}
</pre>
<p>
Try it with some command lines and see what happens:
</p>
<pre>
&gt; howold 1/1/2001 1/1/2002
1 years, 0 months, 0 days // good
&gt; howold 1/1/2001 3/1/2001
0 years, 2 months, 0 days // good
&gt; howold 1/1/2000 1/1/2001
1 years, 0 months, 1 days // wrong
&gt; howold 9/1/2000 11/1/2000
0 years, 2 months, 2 days // wrong
</pre>
<p>
Why  does it say that a person born on January 1, 2000 is
one year and one day old on January 1, 2001?
The person is clearly exactly one year old on that day.
Similarly, it thinks that November first is two months and two days
after September first, when it is clearly two months exactly.
</p>
<p>
The reason is that months and years are variable-length, but our
algorithm assumes that they are constant. Specifically, months and
years are context-sensitive but the algorithm assumes that they are
translation-invariant.
The lengths of months and years depend which month and year
you're talking about.
Leap years are longer than non-leap years.
Months have all different lengths.
</p>
<p>
How do you fix this?
Well, first you have to figure out how human beings compute the
difference between dates when variable-length units are involved.
The most common algorithm is to declare that
one year has elapsed when the same month and day have arrived in the year
following the starting point.
Similarly, a month has elapsed when the same numerical date has arrived
in the month following the starting point.
</p>
<p>
Mentally, you add years until you can't add years any more without
overshooting.  Then you add as many months as fit, and then finish
off with days.  (Some people subtract, but the result is the same.)
</p>
<p>
Now you get to mimic this algorithm in code.
</p>
<pre>
static void PrintAge(DateTime bday, DateTime asof)
{
 // Accumulate years without going over.
 int years = asof.Year - bday.Year;
 DateTime t = bday.AddYears(years);
 if (t &gt; asof) { years--; t = bday.AddYears(years); }

 // Accumulate months without going over.
 int months = asof.Month - bday.Month; // fixed 10pm
 if (asof.Day &lt; bday.Day) months--;
 months = (months + 12) % 12;
 t = t.AddMonths(months);

 // Days are constant-length, woo-hoo!
 int days = (asof - t).Days;

 SC.WriteLine("{0} years, {1} months, {2} days",
              years, months, days);
}
</pre>
<p>
Notice that this algorithm agrees with the common belief that
people born on February 29th have birthdays only once every four years.
</p>
<p>
<strong>Exercise</strong>:
Explain what goes wrong if you change the line
</p>
<pre>
 if (t &gt; asof) { years--; t = bday.AddYears(years); }
</pre>
<p>
to
</p>
<pre>
 if (t &gt; asof) { years--; t = t.AddYears(-1); }
</pre>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (20)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-270583">
				<div id="div-comment-270583" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">hobbes78</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050414-39/?p=35903#comment-270583">
			April 14, 2005 at 10:08 am</a>		</div>

		<p>This reminds me of a bug I solved last week. To know if a date entered by the user is valid, the program checked if the day was greater than the number of days that month had. To calculate this, the program determined the the first day of the following month and subtracted one day.</p>
<p>But this failed to confirm 2002/Mar/31 was valid.</p>
<p>And what was the root to this problem? Well, that day was the last Sunday of March, thus daylight savings change day. Therefore this day had 23 hours. If you have CTime(2002, 4, 1, 0, 0, 0, 0) and you subtract CTimeSpan(1, 0, 0, 0), you&#8217;ll end up on CTime(2002, 3, 30, 23, 0, 0). So the program assumed 2002/Mar had 30 days :-)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-270593">
				<div id="div-comment-270593" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.boyet.com' rel='external nofollow' class='url'>Julian M Bucknall</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050414-39/?p=35903#comment-270593">
			April 14, 2005 at 10:08 am</a>		</div>

		<p>Raymond</p>
<p>I disagree with your assertion that &quot;a month has elapsed when the same numerical date has arrived in the month following the starting point.&quot; How many months have elapsed between 31-Mar and 30-Apr? Personally, I&#8217;d say one month, and not 30 days, which is what your algorithm would produce. </p>
<p>I discussed an algorithm for determining the difference in months/days between two dates on my web site at <a rel="nofollow" target="_new" href="http://www.boyet.com/Articles/PublishedArticles/Calculatingthenumberofmon.html" rel="nofollow">http://www.boyet.com/Articles/PublishedArticles/Calculatingthenumberofmon.html</a>. (Actually one of the most popular pages on my site.)</p>
<p>Cheers, Julian</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-270603">
				<div id="div-comment-270603" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Peter Hession</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050414-39/?p=35903#comment-270603">
			April 14, 2005 at 10:33 am</a>		</div>

		<p>Should the mod 12 be performed after the check if (asof.Day &lt; bday.Day)&#8230;?</p>
<p>Try it for 14/04/2005 &amp; 13/04/2006</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-270613">
				<div id="div-comment-270613" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Doug</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050414-39/?p=35903#comment-270613">
			April 14, 2005 at 10:34 am</a>		</div>

		<p>Anything to do with time is non-trivial.</p>
<p>Time on a computer does not monatomically increase.  2 queries to current time can return the same, or even backwards.  (Someone changed the clock, for example.)</p>
<p>It has annoyed me for a long time that the various OS&#8217;s don&#8217;t step up to the time issue and provide a decent set of functions for time storage and calculation.  Record everything in UTC, and provide various easy to use manipulation functions.</p>
<p>This book describes all the different calendars out there.  Very good.<br />
<br /><a rel="nofollow" target="_new" href="http://www.amazon.com/exec/obidos/tg/detail/-/0521564743/103-3519196-5205412?v=glance" rel="nofollow">http://www.amazon.com/exec/obidos/tg/detail/-/0521564743/103-3519196-5205412?v=glance</a></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-270633">
				<div id="div-comment-270633" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Bramster</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050414-39/?p=35903#comment-270633">
			April 14, 2005 at 12:07 pm</a>		</div>

		<p>Many years ago, writing a timesheet program, I used the &quot;number of seconds since Jan 1, 1970&quot; approach, and did the appropriate math.</p>
<p>It made me think about the implicatons of 2^31, which, if I&#8217;m correct will hit in 2038.  Yes, that&#8217;s a long time away, but so was Y2K.  And there were damn few embedded systems written in Cobol.</p>
<p>fade out, fade in. . .</p>
<p>UTC definitly simplifies a lot of calculations.  I wear two watches &#8212; one to local time, one two UTC.   Two cheap Timexes on one strap equals the functionality of most or the expensive Aviator&#8217;s watches &#8212; with no buttons to push &#8212; just a twist of the wrist!</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-ericlippert odd alt thread-odd thread-alt depth-1" id="comment-270643">
				<div id="div-comment-270643" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Eric+Lippert' rel='external nofollow' class='url'>Eric Lippert</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050414-39/?p=35903#comment-270643">
			April 14, 2005 at 12:43 pm</a>		</div>

		<blockquote><p>
  The most common algorithm is to declare that one year has elapsed when the same month and day have arrived in the year following the starting point. </p>
<p>Though this is a common algorithm, it is NOT the algorithm that VB/VBScript&#8217;s DateDiff uses. With datediff, the difference in years is &quot;subtract the year&quot;.  So the difference between 31Dec2001 and 1Jan2002 is one year.  Similarly for months.</p>
<p>This is a good illustration of the difference between the &quot;MIT&quot; and &quot;Berkeley&quot; design philosophies.  The MIT design philosophy favours complex, hard-to-explain implementations that always do the &quot;correct&quot; thing.  The Berkeley design philosophy favours designs that may get the corner cases wrong, but can actually be explained to mortals without drawing flowcharts.
</p></blockquote>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-270653">
				<div id="div-comment-270653" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://willrickards.net' rel='external nofollow' class='url'>Will Rickards</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050414-39/?p=35903#comment-270653">
			April 14, 2005 at 12:47 pm</a>		</div>

		<p>I dealt with this while trying to write some javascript to determine how pregnant my wife was to display on a web page.  This evolved to how old someone is in general.  The code is at this URL in the qryHowOld function if you want to check it out.<br />
<br /><a rel="nofollow" target="_new" href="http://www.willrickards.net/library/dates.js" rel="nofollow">http://www.willrickards.net/library/dates.js</a></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-ishai odd alt thread-odd thread-alt depth-1" id="comment-270663">
				<div id="div-comment-270663" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Ishai+__________________________' rel='external nofollow' class='url'>Ishai __________________________</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050414-39/?p=35903#comment-270663">
			April 14, 2005 at 1:05 pm</a>		</div>

		<p>// Accumulate months without going over.<br />
<br /> int months = (asof.Month &#8211; bday.Month + 12) % 12;<br />
<br /> if (asof.Day &lt; bday.Day) months&#8211;;<br />
<br /> t = t.AddMonths(months);</p>
<p>So the difference between 1/15/2001 and 1/25/2000 would be 0 years -1 months &#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-270673">
				<div id="div-comment-270673" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">grouse</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050414-39/?p=35903#comment-270673">
			April 14, 2005 at 2:03 pm</a>		</div>

		<p>&quot;[T]he TimeSpan structure does not attempt to produce results in any unit larger than a day, since the authors of TimeSpan realized that months and years are variable-length.&quot;</p>
<p>So are minutes (they can have leap seconds).</p>
<p>For that matter, weeks are not any more variable length than days are.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-270683">
				<div id="div-comment-270683" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Kelsey</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050414-39/?p=35903#comment-270683">
			April 14, 2005 at 3:19 pm</a>		</div>

		<p>Interestingly we have had to solve this exact issue. There&#8217;s another problem that comes up (well, it did in Java anyway) &#8211; Timezones.</p>
<p>If the date that represents my birthday has any timezone information, we have to explicitly throw that information away.</p>
<p>I was born on November 23, in New Zealand. That was November 22 in USA, but I always continue to use the 23rd even when I go there.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-270693">
				<div id="div-comment-270693" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://barelylegalsubstance.chattablogs.com' rel='external nofollow' class='url'>Noel Weichbrodt</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050414-39/?p=35903#comment-270693">
			April 14, 2005 at 4:21 pm</a>		</div>

		<p>For more wild stories on the y2^32k problem, check  <a rel="nofollow" target="_new" href="http://www.idlewords.com/2003/09/best_practices_for_time_travelers.htm" rel="nofollow">http://www.idlewords.com/2003/09/best_practices_for_time_travelers.htm</a></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-270703">
				<div id="div-comment-270703" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Kevin</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050414-39/?p=35903#comment-270703">
			April 14, 2005 at 4:56 pm</a>		</div>

		<p>It&#8217;s funny you mentioned timezones. My wife and I moved from Milwaukee to Seattle. All of my Outlook calendar items for Birthdays were shifted back two hours for the duration of a day.</p>
<p>a birthday appt at 12:00am 10/20/2004 for the whole day became a 11:00pm 10/19/2004 -&gt; 11:00pm 10/20/1977</p>
<p>I had to go in and update all of them to fix it. That was a bit annoying!</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-270623">
				<div id="div-comment-270623" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Michael Dwyer</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050414-39/?p=35903#comment-270623">
			April 14, 2005 at 11:04 am</a>		</div>

		<p>Time on a well-managed machine *does* increase monotonically and in UTC.  NTP works by slowing the clock down and speeding it up so that there are never discontinuities in time.</p>
<p>The problem &#8212; like in the Y2K problem &#8212; is the human element.  Lets say I schedule something to run at 2:30am.  Should it have run during the changeover from MST to MDT?  During the daylight saving time switchover, 2:30am doesn&#8217;t exist.  It goes from 1:59am to 3:00am.</p>
<p>It gets even worse when you switch from MDT back to MST &#8212; should your process run twice?</p>
<p>On the other hand, if you unplug your human need to have local time, you would schedule your event for a certain time UTC, and everything would work the way it was supposed to&#8230;  until a human noticed that it was happening an hour too early&#8230;</p>
<p>Ugh.  Sometimes, you humans drive me insane.</p>
<p>(MDT/MST is -0700 and -0600 timezones, I think, for those who are non USAsians)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-270713">
				<div id="div-comment-270713" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ray Trent</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050414-39/?p=35903#comment-270713">
			April 14, 2005 at 5:21 pm</a>		</div>

		<p>I would hope that this is incredibly obvious, but it seems like the answer to the &quot;problem&quot; entirely depends on what you&#8217;re planning on *doing* with the result.</p>
<p>An off the cuff human-readable timespan like &quot;one year&quot; has very different connotations than a timespan measured in hours, which is different from one measured in millenia, or milliseconds.</p>
<p>Here&#8217;s a very controversial related proposition: </p>
<p>This is all a matter of ignoring significant digits. On the scale of a year, a day is insignificant, because the error bars on what you mean by a &quot;year&quot; are a day wide. </p>
<p>Reporting 1/1/2000 &lt;-&gt; 1/1/2001 as &quot;one year, zero months, one day&quot; is as ridiculous as reporting the difference in 2 people&#8217;s heights in microns. </p>
<p>It should be &quot;one year, 0 months&quot;. Maybe &quot;, 0 weeks&quot; if you want to be a little more accurate without lying. </p>
<p>At the *very* worst, you should say: &quot;1 year, 0 months, 0 days plus or minus 1 day&quot;. </p>
<p>As a side note, I would argue that the convention of people with 2/29 birthdays having a b-day every four years isn&#8217;t commonly held as anything more serious than a joke.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-270753">
				<div id="div-comment-270753" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blog.bartholomew.id.au/' rel='external nofollow' class='url'>William Bartholomew</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050414-39/?p=35903#comment-270753">
			April 15, 2005 at 5:28 am</a>		</div>

		<p>SQL DATEDIFF of course works differently again by just counting the number of boundaries of the specified type between the two dates. So DATEDIFF( m, &#8216;1900-01-31&#8217;, &#8216;1900-02-01&#8217; ) returns 1 because 1 month boundary has been crossed.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-universalis odd alt thread-odd thread-alt depth-1" id="comment-270773">
				<div id="div-comment-270773" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Universalis</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050414-39/?p=35903#comment-270773">
			April 15, 2005 at 7:43 am</a>		</div>

		<p>Timezones are a nuisance. My web site gives information related to today&#8217;s date, but there is no way to know the date on which the client has requested a web page.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-270793">
				<div id="div-comment-270793" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Dave</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050414-39/?p=35903#comment-270793">
			April 15, 2005 at 8:34 am</a>		</div>

		<p>&quot;Calculations and comparisons of DateTime instances are only meaningful when the instances are created in the same time zone. For that reason, it is assumed that the developer has some external mechanism, such as an explicit variable or policy, to know in which time zone a DateTime was created.&quot;<br />
<br /><a rel="nofollow" target="_new" href="http://msdn.microsoft.com/library/en-us/cpref/html/frlrfSystemDateTimeClassTopic.asp" rel="nofollow">http://msdn.microsoft.com/library/en-us/cpref/html/frlrfSystemDateTimeClassTopic.asp</a></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-270803">
				<div id="div-comment-270803" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blogs.msdn.com/oldnewthing/archive/2005/04/15/408507.aspx' rel='external nofollow' class='url'>The Old New Thing</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050414-39/?p=35903#comment-270803">
			April 15, 2005 at 9:03 am</a>		</div>

		<p>Combining two tricks into one big trick.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-270723">
				<div id="div-comment-270723" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Steve</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050414-39/?p=35903#comment-270723">
			April 15, 2005 at 2:42 am</a>		</div>

		<p>Never mind all the discussions about dates and times &#8211; surely the important thing about this post is that ** Raymond is writing in C# ** !!!</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-271063">
				<div id="div-comment-271063" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Norman Diamond</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050414-39/?p=35903#comment-271063">
			April 15, 2005 at 7:48 pm</a>		</div>

		<p>Friday, April 15, 2005 2:42 AM by Steve</p>
<p>&gt; surely the important thing about this post<br />
<br />&gt; is that ** Raymond is writing in C# ** !!!</p>
<p>&quot;not actually a .NET blog&quot;</p>
<p>Obviously he&#8217;s using ROTOR ^_^</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

