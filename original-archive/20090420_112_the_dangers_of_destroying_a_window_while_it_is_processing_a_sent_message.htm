<html>
<head>
<title>The dangers of destroying a window while it is processing a sent message</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>The dangers of destroying a window while it is processing a sent message</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>April 20, 2009 / year-entry #113</td></tr>
<tr><td><b>Tags:</b></td><td>code</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20090420-00/?p=18523</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>14</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">Commenter BryanK wonders why weird things happen if you destroy a window while it is processing the WM_ACTIVATEAPP message. He suspects that it's similar to the problems you encounter when you destroy a window in response to the WM_KILLFOCUS message. Although I haven't studied the WM_ACTIVATEAPP situation, I wouldn't be surprised if the problem is...</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p><a href="http://blogs.msdn.com/oldnewthing/pages/407234.aspx#552831"> Commenter BryanK wonders why weird things happen if you destroy a window while it is processing the <code>WM_ACTIVATEAPP</code> message</a>. He suspects that it's similar to the problems you encounter when you <a href="http://blogs.msdn.com/oldnewthing/archive/2005/08/08/448969.aspx"> destroy a window in response to the <code>WM_KILLFOCUS</code> message</a>.</p>
<p> Although I haven't studied the <code>WM_ACTIVATEAPP</code> situation, I wouldn't be surprised if the problem is indeed entirely analogous. It just follows from general programming principles: After all, you are destroying the active window. The <code>WM_ACTIVATEAPP</code> message is sent as part of the activation change, and the documentation says that the message is sent "when a window belonging to a different application than the active window is about to be activated." Notice: "about to be" activated. That other window hasn't been activated yet; you're still the active window. </p>
<p> Destroying the active window means that the window manager has to find a new active window. You're triggering an activation change while another activation change is in progress; no wonder things get all messed up. </p>
<p> I am now going to make a gross generalization. There may be exceptions to this rule, but it's a good place to start: Destroying yourself is (generally speaking) not an acceptable response to a sent message. The code that sent you the message is doing so because it wants to ask you a question (if it cares about the return value) or because it's informing you of something that is happening <i>right now</i> as part of a larger operation. (After all, if the code didn't mind if you received the information after the fact, it would have posted the message instead of sent it.) </p>
<p> And (generally speaking) it's bad form to perform an operation that changes a system's state while it's notifying you that that very state change is in progress. When the state change is in progress, the state is unstable. (If it were stable, then the state change would either not yet have begun or already have finished!) </p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (14)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-727733">
				<div id="div-comment-727733" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">fluidphreak</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090420-00/?p=18523#comment-727733">
			April 20, 2009 at 10:16 am</a>		</div>

		<p>So, post yourself a custom message if you need to destroy yourself in response to a sent message&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-727753">
				<div id="div-comment-727753" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">S</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090420-00/?p=18523#comment-727753">
			April 20, 2009 at 10:22 am</a>		</div>

		<blockquote><p>
  So, post yourself a custom message if you need to destroy yourself in response to a sent message&#8230;
</p></blockquote>
<p>If you&#8217;re a top level window, it needn&#8217;t be all that custom &#8211; WM_CLOSE does the trick. In fact, I can&#8217;t think of a good reason not to do that for child windows either.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-727803">
				<div id="div-comment-727803" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Alexandre Grigoriev</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090420-00/?p=18523#comment-727803">
			April 20, 2009 at 2:24 pm</a>		</div>

		<p>Normally, the top-level window should only be destroyed when called from the top-level message loop; not from any other modal loop. Otherwise, if you already destroyed your objects, you could touch them on the way up from the modal loops, and that would crash the app.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-727823">
				<div id="div-comment-727823" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blog.koroirc.com/' rel='external nofollow' class='url'>Koro</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090420-00/?p=18523#comment-727823">
			April 20, 2009 at 3:38 pm</a>		</div>

		<p>That reminds me of a similar hard to track bug I had with the tooltip control.</p>
<p>I was using a balloon tip and inside some notification, I ordered to control to destroy itself. As soon as I returned from the notification, it would crash.</p>
<p>Turns out it was accessing some member in its data structures on return, which it just destroyed &quot;from within&quot; the callback because of my code.</p>
<p>Still, it took me a while to find it, since I didn&#8217;t know where to look for. Solved it by posting the &quot;destroy yourself&quot; message from the callback instead.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-727843">
				<div id="div-comment-727843" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://social.zune.net/member/sage+rage' rel='external nofollow' class='url'>fred</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090420-00/?p=18523#comment-727843">
			April 20, 2009 at 5:35 pm</a>		</div>

		<p>Not a good generalization really.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-727873">
				<div id="div-comment-727873" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Goplat</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090420-00/?p=18523#comment-727873">
			April 20, 2009 at 6:52 pm</a>		</div>

		<p>WM_CLOSE itself seems to be a sent message; it doesn&#8217;t go through the message pump (when it occurs as a result of clicking the X, at least). Is WM_CLOSE an exception to the rule?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-727913">
				<div id="div-comment-727913" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Yuhong Bao</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090420-00/?p=18523#comment-727913">
			April 20, 2009 at 8:44 pm</a>		</div>

		<p>Reminds me of when I experimented with doing a longjmp up to the message loop in response to a sent message. Vista and later wrap what is effectively a SEH block around all user-mode callbacks, so that if the longjmp is exception-safe and thus uses RtlUnwind to unwind the stack, the exception handler will automatically return from the callback.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-727933">
				<div id="div-comment-727933" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">jon</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090420-00/?p=18523#comment-727933">
			April 20, 2009 at 9:55 pm</a>		</div>

		<p>@Goplat: If the rule in question is &quot;Don&#8217;t destroy yourself when something sends you a message if the sender isn&#8217;t expecting it&quot;, then clearly WM_CLOSE is ok &#8211; because the sender IS expecting you to destroy yourself.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-727983">
				<div id="div-comment-727983" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">q</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090420-00/?p=18523#comment-727983">
			April 21, 2009 at 4:34 am</a>		</div>

		<p>This message will destroy itself in 10 seconds.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-727993">
				<div id="div-comment-727993" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://geekswithblogs.net/btudor' rel='external nofollow' class='url'>Bill</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090420-00/?p=18523#comment-727993">
			April 21, 2009 at 7:28 am</a>		</div>

		<p>I seem to recall a Win32 API named PostQuitMessage(exitCode) located in user32.dll. This would be the correct way to destroy (quit, close, etc) your entire application, no? Just closing a window, I would think PostMessage WM_CLOSE is the way to go. Which I think is what has already been said.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-727973">
				<div id="div-comment-727973" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">S</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090420-00/?p=18523#comment-727973">
			April 21, 2009 at 2:54 am</a>		</div>

		<p>If you post it to yourself WM_CLOSE is definitely a posted message. You don&#8217;t *have* to do the same as the system does in all cases. If you&#8217;re in a context where destroying you&#8217;re window would be bad, post yourself a WM_CLOSE message &#8211; you don&#8217;t even need to handle it, as DefWindowProc will do the right thing and destroy the window.</p>
<p>If the system sends you WM_CLOSE in response to clicking on the close button, it is probably doing it because it is already in the context of a posted message handler (WM_NCLBUTTONUP is a posted input message) and it is probably coded to handle the window destroying itself &#8211; it had better be since this is what DefWindowProc will do.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-728053">
				<div id="div-comment-728053" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">S</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090420-00/?p=18523#comment-728053">
			April 21, 2009 at 10:20 am</a>		</div>

		<p>&quot;I seem to recall a Win32 API named PostQuitMessage(exitCode) located in user32.dll. This would be the correct way to destroy (quit, close, etc) your entire application, no? Just closing a window, I would think PostMessage WM_CLOSE is the way to go. Which I think is what has already been said. &quot;</p>
<p>No &#8211; PostQuitMessage doesn&#8217;t do that &#8211; PostQuitMessage sets a flag on the message queue which indicates that GetMessage should return FALSE. This may cause the thread to exit, destroying the windows as it goes, but it might not. The way I&#8217;ve always done it is to post WM_CLOSE, have DefWindowProc call DestroyWindow in response to WM_CLOSE, then call PostQuitMessage in my WM_DESTROY handler (assuming this is the applications main window).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-728183">
				<div id="div-comment-728183" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">waleri</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090420-00/?p=18523#comment-728183">
			April 21, 2009 at 1:44 pm</a>		</div>

		<blockquote><p>
  &gt;&gt; When the state change is in progress, the state is unstable.
</p></blockquote>
<p>True, but what does the message tell us? That state is changing or that state is already changed. In some cases it is clear, like in WM_SIZE/WM_SIZING, but in others it is a guess. I do believe though that messages usually report state changed, not changing in progress.</p>
<p>Usually the bigger problem is passing message for further handling, after the window is already destroyed.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-728743">
				<div id="div-comment-728743" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Kevin</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090420-00/?p=18523#comment-728743">
			April 22, 2009 at 4:09 pm</a>		</div>

		<p>I just want to notify a window that I think it should kill itself, like, right now. Whether or not the window&#8217;s self esteem is high enough to keep itself alive is not really my problem.</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

