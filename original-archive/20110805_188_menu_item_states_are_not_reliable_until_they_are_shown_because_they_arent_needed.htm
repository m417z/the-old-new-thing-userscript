<html>
<head>
<title>Menu item states are not reliable until they are shown because they aren't needed until then</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>Menu item states are not reliable until they are shown because they aren&#8217;t needed until then</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>August 5, 2011 / year-entry #189</td></tr>
<tr><td><b>Tags:</b></td><td>code;history</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20110805-00/?p=9963</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>10</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">A question arrived from a customer (with the rather unhelpful subject line Question for Microsoft) wondering why, when they call Get­System­Menu and then ask for the states of the various menu items like SC_MINIMIZE, the menu item states don't reflect reality. The menu item states don't synchronize with reality until the user actually opens the...</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>A question arrived from a customer (with the rather unhelpful subject line <i>Question for Microsoft</i>) wondering why, when they call <code>Get&shy;System&shy;Menu</code> and then ask for the states of the various menu items like <code>SC_<wbr>MINIMIZE</wbr></code>, the menu item states don't reflect reality. The menu item states don't synchronize with reality until the user actually opens the system menu.</p>
<p> There is no requirement that applications keep menu item states continuously in sync. After all, that's why we have messages like <code>WM_<wbr>INIT&shy;MENU</wbr></code>: To tell the application, "Whoa, we're about to show this menu, so you might want to comb its hair and pick the food out of its teeth so it can be seen by the user." Lazy evaluation is common, because <a href="http://blogs.msdn.com/oldnewthing/archive/2007/01/22/1508494.aspx"> maintaining states continuously can be expensive</a>, and there's no point constantly turning items on and of and on and off if the user can't see them anyway. </p>
<p> This is double-true for system menus, because maintaining the states continuously is not possible <a href="http://blogs.msdn.com/b/oldnewthing/archive/2010/05/28/10016691.aspx"> when the system menu is being shared across windows</a>. The menu states are not synchronized to the window until the menu is about to be displayed. </p>
<p> If you want to know whether the <code>SC_<wbr>MINIMIZE</wbr></code> menu item <i>would be</i> enabled if the menu were shown, you can check the window styles: A window can be minimized if it has a <code>WS_<wbr>MINIMIZE&shy;BOX</wbr></code> and is not already <code>WS_<wbr>MINIMIZE</wbr></code>d. Similar logic can be applied to the other menu items. </p>
<p> Well, except for <code>SC_<wbr>CLOSE</wbr></code>. While in most cases the window caption determines what is enabled on the menu, the Close button works backward: It is the state of the menu item that controls whether the Close button is enabled. So in the special case of <code>SC_<wbr>CLOSE</wbr></code>, you <i>can</i> query the state at any time, because for that case, the menu controls the state rather than simply reflecting it. </p>
<p> Why is <code>SC_<wbr>CLOSE</wbr></code> so special? Here come da history. </p>
<p> The Close button was added in Windows&nbsp;95. Since versions of Windows prior to Windows&nbsp;95 didn't have a Close button, they didn't need a style to specify whether the Close button should be enabled or not. (You don't need a style to control something that doesn't exist.) Windows&nbsp;95 added the Close button and hooked it up to the only thing that it had available, namely, the <code>SC_<wbr>CLOSE</wbr></code> item on the system menu. Sure, Windows&nbsp;95 could have have invented a new window style, but since <code>SC_<wbr>CLOSE</wbr></code> already existed and applications were already using it, using <code>SC_<wbr>CLOSE</wbr></code> to control the Close button allowed old applications to reap the benefits of the new Close button automatically. It also meant that there was one less thing you had to change when porting your program to Windows&nbsp;95. </p>
<p> <b>Bonus chatter</b>: You can now answer <a href="http://blogs.msdn.com/b/oldnewthing/archive/2010/06/04/10019758.aspx#10020458"> Alex Cohn's question</a>: </p>
<blockquote class="q"><p> I wonder if the EnableMenuItem method will work for minimize and maximize, too. After all, these buttons also have siblings in the Alt-space menu. </p>
</blockquote>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (10)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-929093">
				<div id="div-comment-929093" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Dan Bugglin</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110805-00/?p=9963#comment-929093">
			August 5, 2011 at 7:40 am</a>		</div>

		<p>My guess: No because it will only change the menu, not the buttons (which are tied to the window styles), and the WM_INITMENU will disable them again. &nbsp;Just set the window styles.</p>
<p>My second guess if the first one is wrong: Yes, but only if it was possible in Win 3.11 and some programs still rely on that behavior.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-929103">
				<div id="div-comment-929103" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">David Walker</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110805-00/?p=9963#comment-929103">
			August 5, 2011 at 8:11 am</a>		</div>

		<p>Come on, &quot;Question for Microsoft&quot; is such a helpful, explanatory subject line for a message!</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-929113">
				<div id="div-comment-929113" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110805-00/?p=9963#comment-929113">
			August 5, 2011 at 8:14 am</a>		</div>

		<p>That&#39;s a fascinating bit that can bite you if you don&#39;t know it&#39;s coming.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-929123">
				<div id="div-comment-929123" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Bob</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110805-00/?p=9963#comment-929123">
			August 5, 2011 at 8:48 am</a>		</div>

		<p>The &quot;question for Microsoft&quot; subject line is an example of a very common problem.</p>
<p>For example, I edit a newsletter. &nbsp;If you were to write an article for me, you might well call it &quot;newsletter_article.doc&quot; because that might fit your naming scheme. &nbsp;Of course, that wouldn&#39;t work for me to have so many similarly named files. &nbsp;I might change it to &quot;raymond_chen.doc&quot; which would be very helpful to identify the file in my directory. &nbsp;However, it wouldn&#39;t be a useful name on your end.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-jader3rd even thread-even depth-1" id="comment-929133">
				<div id="div-comment-929133" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/jader3rd' rel='external nofollow' class='url'>jader3rd</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110805-00/?p=9963#comment-929133">
			August 5, 2011 at 9:14 am</a>		</div>

		<p>I think that many would find it helpful if email clients auto created a subject, based on the contents of the email, in the event that the subject field was blank. If it were useful, more and more people wouldn&#39;t fill in the subject in the first place, and we&#39;d get more useful email subjects.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-929143">
				<div id="div-comment-929143" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ben Voigt</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110805-00/?p=9963#comment-929143">
			August 5, 2011 at 11:01 am</a>		</div>

		<p>@jader: If it was possible to auto-generate a quality summary, e-mail clients would display that instead of the sender-specified subject line. &nbsp;It&#39;s a very very difficult problem in general though. &nbsp;(Most) Humans are still better at writing human-readable summaries than any computer algorithm</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-929163">
				<div id="div-comment-929163" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">TC</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110805-00/?p=9963#comment-929163">
			August 5, 2011 at 7:16 pm</a>		</div>

		<p>Re. &quot;question for Microsoft&quot;:</p>
<p>Every man and his dog, has at some stage written a blog post: &quot;How To Ask Your Question Effectively&quot;. Unfortunately, the people who really need to read that post, will never actually do so. The only people who&#39;ll actually read that post, are the very people who don&#39;t need to!</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-929183">
				<div id="div-comment-929183" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Jonathan</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110805-00/?p=9963#comment-929183">
			August 7, 2011 at 12:10 am</a>		</div>

		<p>jader3rd: Word does something similar for file names. When you save an untitled document, it will helpfully suggest the first few words from the document as filename. This has worked for me in many cases.</p>
<p>However, for e-mail I&#39;m afraid we&#39;ll end up with courtesies as titles: &quot;Hello Raymond, hope you can answer this&quot;&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-929203">
				<div id="div-comment-929203" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Grammar Nazi</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110805-00/?p=9963#comment-929203">
			August 8, 2011 at 7:01 am</a>		</div>

		<p>You stated:</p>
<p>&lt;blockquote&gt;It also meant that there was one less thing you had to change when porting your program to Windows 95.&lt;/blockquote&gt;</p>
<p>You meant &quot;fewer&quot;, not less. (Sorry, knee jerk for these, almost OCD level you know.)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-929513">
				<div id="div-comment-929513" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">David Walker</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20110805-00/?p=9963#comment-929513">
			August 9, 2011 at 10:24 am</a>		</div>

		<p>We got off topic (maybe I led us there), but the original point of the article was in line with &quot;don&#39;t do work now that you can do later, or never do&quot;. &nbsp;That&#39;s always a good idea, as long as everyone understands it.</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

