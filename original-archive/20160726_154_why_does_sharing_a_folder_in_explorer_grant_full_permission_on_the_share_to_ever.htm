<html>
<head>
<title>Why does sharing a folder in Explorer grant full permission on the share to everyone?</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>Why does sharing a folder in Explorer grant full permission on the share to everyone?</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>July 26, 2016 / year-entry #155</td></tr>
<tr><td><b>Tags:</b></td><td>other</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20160726-00/?p=93955</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>17</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">The ACLs will do the work.</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>
A customer noticed that when you use Explorer to share a folder
with a specific user,
Explorer creates a file share with full permissions to everyone.
"Why is this needed?
Shouldn't it be created with permission only to the user that
the folder is being shared to?"
</p>
<p>
Okay, first of all, we should note that there is not a security
issue here,
because even though the share grants everyone full permissions,
the individual permissions on the files and folders are still
respected.
In order to get access to a file,
you need to have access both to the share and to the file.
Since you already set up the desired permissions on the file,
the share permissions are redundant.
</p>
<p>
But doing it this way does make things easier for the user.
</p>
<p>
It reduces the number of elevation prompts,
because elevation is required only the first time you
share a folder.
If you share a folder with multiple people,
the second and subsequent sharing operations do not need
to elevate because the share already exists with full permissions
to everyone.
</p>
<p>
It reduces the complexity of the sharing operation.
Adding or removing a shared file or folder does not
require recalculating the ACLs on the share.
It also means that the UI for showing what is shared
doesn't need to perform an effective access calculation
in order to determine what access level to show.
It can operate purely on the file system permissions.
</p>
<p>
It also makes things easier to understand for the user.
Users need to manage only file permissions and don't
have to remember that they also have to combine that
with the share permission.
Otherwise you get into cases where you shared a file with Bob,
and Bob can access it sometimes (when Bob is signed in locally)
but not other times (when Bob is accessing the file remotely).
</p>
<p>
If you really want to deal with share-level permissions,
you can use the advanced sharing UI.
It's the simple sharing UI that uses the simple security model.</p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (17)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1 parent" id="comment-1257885">
				<div id="div-comment-1257885" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Karellen</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160726-00/?p=93955#comment-1257885">
			July 26, 2016 at 7:33 am</a>		</div>

		<p>&#8220;Since you already set up the desired permissions on the file,&#8221;</p>
<p>Did you? Or did think that you sharing a file with Bob would automatically give Bob read-access to the file, because you have read-access, and you&#8217;re the one sharing it with them? Is the user model &#8220;I am sharing this file.&#8221; or &#8220;I am telling a completely separate part of the system to share this file &#8211; and not even on my behalf, but on behalf of the system.&#8221;?</p>
<p>Because if it&#8217;s the first, there will be a completely different set of assumptions about what the user is asking the computer to do. Ironically, while those assumptions that the user makes may be wrong, they&#8217;re probably not that different to what the advanced sharing UI does.</p>
<p>&#8220;doing it this way does make things easier for the user.&#8221;</p>
<p>Really? Setting up the correct file permissions ACLs is easier than saying &#8220;share this with Bob&#8221;?</p>
<p>&#8220;It reduces the complexity of the sharing operation. Adding or removing a shared file or folder does not require recalculating the ACLs&#8230;&#8221;</p>
<p>No user, not in a million years, will take this into consideration when trying to form a mental model of how sharing is likely to work.</p>

		
				</div>
		<ol class="children">
		<li class="comment odd alt depth-2 parent" id="comment-1257905">
				<div id="div-comment-1257905" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Damien</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160726-00/?p=93955#comment-1257905">
			July 26, 2016 at 7:43 am</a>		</div>

		<p>It&#8217;s been a long time since I&#8217;ve seen the simple sharing UI. I suspect that it&#8217;s &#8220;you, by the actions you&#8217;ve taken in the simple sharing UI, have already indicated what file permissions should be applied, and these have been applied.&#8221;</p>
<p>I.e. if you use the Simple sharing UI, you set things up as &#8220;Bob should have Read, Carol should have Read/Write, now go and apply these settings&#8221;</p>

		
				</div>
		<ol class="children">
		<li class="comment even depth-3" id="comment-1257936">
				<div id="div-comment-1257936" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Karellen</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160726-00/?p=93955#comment-1257936">
			July 26, 2016 at 9:00 am</a>		</div>

		<p>&#8220;by the actions youâ€™ve taken in the simple sharing UI, have already indicated what file permissions should be applied&#8221;</p>
<p>Ah, that&#8217;s what I was missing. Sorry!</p>
<p>From the original post, it sounded like you were expected to set up the file permissions yourself outside of the sharing UI, and having &#8220;already&#8221; done that, the simple sharing UI just created the share. i.e. simple sharing UI didn&#8217;t set up any fine-grained permissions at all, rather than setting them &#8211; but on the file instead of on the share.</p>
<p>I&#8217;ll go put a bag on my head and sit in the corner now&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment byuser comment-author-fjeldse odd alt depth-2 parent" id="comment-1257925">
				<div id="div-comment-1257925" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Erik+F' rel='external nofollow' class='url'>Erik F</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160726-00/?p=93955#comment-1257925">
			July 26, 2016 at 8:25 am</a>		</div>

		<p>Share-level permissions made sense when the underlying file system often didn&#8217;t have native permissions (i.e. FAT or HPFS), but when you have finer-grained permissions on the FS level it doesn&#8217;t make a whole lot of sense to monkey around with two sets of permissions IMO. Using both systems at the same time tends to induce headaches for me as I often forget about share permissions when diagnosing access issues (group memberships and deny permissions on files are the first things I look for.)</p>

		
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-andycadley2 even depth-3 parent" id="comment-1257955">
				<div id="div-comment-1257955" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/AndyCadley' rel='external nofollow' class='url'>AndyCadley</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160726-00/?p=93955#comment-1257955">
			July 26, 2016 at 11:11 am</a>		</div>

		<p>One other case is to make a read-only share to a folder so you can be sure a remote copy/sync operation doesn&#8217;t actually get configured the wrong way around.</p>

		
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-fjeldse odd alt depth-4" id="comment-1257995">
				<div id="div-comment-1257995" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Erik+F' rel='external nofollow' class='url'>Erik F</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160726-00/?p=93955#comment-1257995">
			July 26, 2016 at 2:32 pm</a>		</div>

		<p>Sure, that&#8217;s OK too: NFS has had that feature since forever for much the same reason. What drives me nuts is when admins start throwing read-only and read-write permissions on the same share along with file permissions (never mind deny rights!) If you&#8217;re going to make a share read-only, make it read-only for everyone: I once thought that overly-complicated permissions were a sign of being an expert until I had to try deciphering what I did six months after implementation.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment even depth-3" id="comment-1257965">
				<div id="div-comment-1257965" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160726-00/?p=93955#comment-1257965">
			July 26, 2016 at 12:29 pm</a>		</div>

		<p>I use it for virus resistance.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment byuser comment-author-mzzt odd alt thread-odd thread-alt depth-1 parent" id="comment-1257895">
				<div id="div-comment-1257895" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/The+MAZZTer' rel='external nofollow' class='url'>The MAZZTer</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160726-00/?p=93955#comment-1257895">
			July 26, 2016 at 7:40 am</a>		</div>

		<p>Yup. I didn&#8217;t realize shares had separate permissions at first and got very confused as my folder permissions looked fine and could be accessed locally, but not remotely. ShareEnum is a useful tool for the Windows editions that don&#8217;t expose the share permission UI (I think I had to use it back in XP, probably not needed any more). It&#8217;s probably for the best simple sharing removes this complexity as most users will not need it, but I&#8217;m sure there are cases where more experienced users will want to lock down shares more remotely than local access normally allows.</p>
<p>Another thing that is easy to confuse that got me: When you access a share on a Vista (and up) host, Administrators group permissions are NEVER applied (since with the introduction of UAC, that should require elevation, which can&#8217;t be granted remotely!). There is a registry key you can use to disable that and apply it again, which is useful in some cases, though it&#8217;s important to understand the security implications.</p>

		
				</div>
		<ol class="children">
		<li class="comment even depth-2 parent" id="comment-1257975">
				<div id="div-comment-1257975" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Chris</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160726-00/?p=93955#comment-1257975">
			July 26, 2016 at 1:50 pm</a>		</div>

		<p>Forgive me for being technical, and correct me if I&#8217;m wrong, but I don&#8217;t think that it&#8217;s that the Administrator permissions are never applied; it&#8217;s that they&#8217;re never applied to local accounts.  Domain accounts, I believe, will still have the Administrators alias/local group applied to their tokens.  (The registry key in question that you mentioned hints at this; it&#8217;s called LocalAccountTokenFilterPolicy)</p>

		
				</div>
		<ol class="children">
		<li class="comment odd alt depth-3 parent" id="comment-1258035">
				<div id="div-comment-1258035" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Neil</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160726-00/?p=93955#comment-1258035">
			July 27, 2016 at 4:42 am</a>		</div>

		<p>I&#8217;ve run into the opposite problem &#8211; you need to run ROBOCOPY as an Administrator to enable certain options even when you&#8217;re not accessing files on your machine.</p>

		
				</div>
		<ol class="children">
		<li class="comment even depth-4" id="comment-1258155">
				<div id="div-comment-1258155" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Chris</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160726-00/?p=93955#comment-1258155">
			July 28, 2016 at 8:14 am</a>		</div>

		<p>Is that actually a permissions issue, or is that a limitation of robocopy?  I wonder if Robocopy itself is detecting the presence of the Administrator token, and changing its behavior.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment odd alt thread-even depth-1" id="comment-1257915">
				<div id="div-comment-1257915" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Andrea D'Alessandro</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160726-00/?p=93955#comment-1257915">
			July 26, 2016 at 8:02 am</a>		</div>

		<p>It should be interesting, Raymond, to know the history behind the decision of the Windows Developing Team in creating the share permissions mechanism, that everybody has always considered redundant.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-odd thread-alt depth-1" id="comment-1257935">
				<div id="div-comment-1257935" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Neshram</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160726-00/?p=93955#comment-1257935">
			July 26, 2016 at 8:25 am</a>		</div>

		<p>My grief has always come from clients, and co-workers, using the simple sharing UI in a corporate environment and (more importantly) thinking that they&#8217;re only changing the share permissions. They invariably end up changing the NTFS permissions and breaking some automated process because: &#8220;But, only Joe needs to access it through the share.&#8221;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-even depth-1" id="comment-1257945">
				<div id="div-comment-1257945" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.semack.net' rel='external nofollow' class='url'>Myron A. Semack</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160726-00/?p=93955#comment-1257945">
			July 26, 2016 at 10:05 am</a>		</div>

		<p>Note that if you allow Full Control on a share, you allow the remote user to be the owner of any file they create on the share. That means they can change the ACL on that file, even if they do not have Full Control at the file system level. As a result, users can circumvent the ACLs you have setup.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-cheong even thread-odd thread-alt depth-1" id="comment-1258007">
				<div id="div-comment-1258007" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/cheong00' rel='external nofollow' class='url'>cheong00</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160726-00/?p=93955#comment-1258007">
			July 26, 2016 at 6:22 pm</a>		</div>

		<p>The nice thing regarding setting fine-tuned sharing permission on the shares is that, on fileserver that have large number of shares that normal users do not have access to, enabling ABE does reduce the number of support calls.</p>
<p><a href="https://blogs.technet.microsoft.com/hugofe/2010/06/21/windows-2008-access-based-enumeration-abe/" rel="nofollow">https://blogs.technet.microsoft.com/hugofe/2010/06/21/windows-2008-access-based-enumeration-abe/</a></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-xpclient odd alt thread-even depth-1" id="comment-1258055">
				<div id="div-comment-1258055" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/xp.client' rel='external nofollow' class='url'>xp.client</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160726-00/?p=93955#comment-1258055">
			July 27, 2016 at 7:42 am</a>		</div>

		<p>I miss how TweakUI let you customize the default permissions for many things via its Access Control section. One of the tweaks I always did was Default Share Permissions. It worked up to Windows 7 x64 (the 64 bit version of TweakUI made by Neosmart). Had to do those tweaks on Windows 7, use SysInternals Procmon to observe the reg values and export them for use on MS Bob 10.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-odd thread-alt depth-1" id="comment-1258305">
				<div id="div-comment-1258305" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">MarcK4096</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160726-00/?p=93955#comment-1258305">
			July 29, 2016 at 7:19 am</a>		</div>

		<p>I&#8217;ve never met an end user that knew how to correctly set NTFS or file share permissions.  And I&#8217;ve met some IT professionals that also didn&#8217;t understand them well.</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

