<html>
<head>
<title>Another reason not to do anything scary in your DllMain: Inadvertent deadlock</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>Another reason not to do anything scary in your DllMain: Inadvertent deadlock</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>January 28, 2004 / year-entry #39</td></tr>
<tr><td><b>Tags:</b></td><td>code</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20040128-00/?p=40853</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>17</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">Your DllMain function runs inside the loader lock, one of the few times the OS lets you run code while one of its internal locks is held. This means that you must be extra careful not to violate a lock hierarchy in your DllMain; otherwise, you are asking for a deadlock. (You do have a...</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>
Your DllMain function runs inside the loader lock,
one of the few times the OS lets you run code while one
of its internal locks is held.
This means that you must be extra careful not to violate
a lock hierarchy in your DllMain; otherwise, you
are asking for a deadlock.
</p>
<p>
(You do have a
<a HREF=http://www.osr.com/ddk/ddtools/dv_8pkj.htm>
lock hierarchy</a> in your DLL, right?)
</p>
<p>
The loader lock is taken by any function that needs to
access the list of DLLs loaded into the process.
This includes functions like GetModuleHandle
and GetModuleFileName.
If your DllMain enters a critical section or waits on
a synchronization object, and that critical section or
synchronization object is owned by some code that is
in turn waiting for the loader lock, you just created a deadlock:
</p>
<pre>
// global variable
CRITICAL_SECTION g_csGlobal;

// some code somewhere
EnterCriticalSection(&g_csGlobal);
... GetModuleFileName(MyInstance, ..);
LeaveCriticalSection(&g_csGlobal);

BOOL WINAPI
DllMain(HINSTANCE hinstDLL, DWORD fdwReason,
        LPVOID lpvReserved)
{
  switch (fdwReason) {
  ...
  case DLL_THREAD_DETACH:
   EnterCriticalSection(&g_csGlobal);
   ...
  }
  ...
}
</pre>
<p>
Now imagine that some thread is happily executing the first
code fragment and enters g_csGlobal, then
gets pre-empty.  During this time, another thread exits.
This enters the loader lock and sends out
DLL_THREAD_DETACH messages while the loader lock is still held.
</p>
<p>
You receive the DLL_THREAD_DETACH and attempt to enter your DLL's
g_csGlobal.  This blocks on the first thread, who owns the
critical section. That thread then resumes execution and calls
GetModuleFileName. This function requires the loader lock
(since it's accessing the list of DLLs loaded into the process),
so it blocks, since the loader lock is owned by somebody else.
</p>
<p>
Now you have a deadlock:</p>
<ul>
<li>
g_cs owned by first thread, waiting on loader lock.</p>
<li>
Loader lock owned by second thread, waiting on g_cs.
</ul>
<p>
I have seen this happen. It's not pretty.
</p>
<p>Moral of the story: Respect the loader lock.
Include it in your lock hierarchy rules if you take
any locks in your DllMain.</p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (17)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-139643">
				<div id="div-comment-139643" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">BTannenbaum</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040128-00/?p=40853#comment-139643">
			January 28, 2004 at 7:46 am</a>		</div>

		<p>We&#8217;ve been bitten by this *many* times before.</p>
<p>The problem with the loader lock is that there&#8217;s no documentation on which functions require it, so it jumps out and bites you when you&#8217;re making an apparently innocent call.  And to the best of my knowledge, there&#8217;s no way for me to grab the loader lock in my code, so I could add it to my hierarchy.</p>
<p>And of course, this is all timing dependent, so it will work perfectly in the lab and hang randomly at a customer site.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-139673">
				<div id="div-comment-139673" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">BTannenbaum</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040128-00/?p=40853#comment-139673">
			January 28, 2004 at 2:57 pm</a>		</div>

		<p>We&#8217;ve been bitten by this *many* times before.</p>
<p>The problem with the loader lock is that there&#8217;s no documentation on which functions require it, so it jumps out and bites you when you&#8217;re making an apparently innocent call.  And to the best of my knowledge, there&#8217;s no way for me to grab the loader lock in my code, so I could add it to my hierarchy.</p>
<p>And of course, this is all timing dependent, so it will work perfectly in the lab and hang randomly at a customer site.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-139683">
				<div id="div-comment-139683" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">keithmo</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040128-00/?p=40853#comment-139683">
			January 28, 2004 at 3:20 pm</a>		</div>

		<p>I hate it when my threads get all &quot;pre-empty&quot;&#8230; :-)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-139733">
				<div id="div-comment-139733" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://alias:ndiamond@msdn.discussions.microsoft.com' rel='external nofollow' class='url'>Norman Diamond</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040128-00/?p=40853#comment-139733">
			January 28, 2004 at 5:07 pm</a>		</div>

		<p>To B. Tannenbaum:  Since there&#8217;s no way to know when you need the loader lock, the following is useless advice, but theoretically it would solve your deadlocks.</p>
<p>Define one more lock in your own design which serves no purpose by itself except to waste resources.</p>
<p>When you know that the loader lock is going to be grabbed by something you&#8217;re going to call, lock your lock as just described.  When you know that the thing you called is already finished with the loader lock, release your lock as just described.</p>
<p>Include your extra lock in your hierarchy.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-139773">
				<div id="div-comment-139773" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Sven G. Ali</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040128-00/?p=40853#comment-139773">
			January 29, 2004 at 7:49 am</a>		</div>

		<p>Don&#8217;t static objects get destructed in DllMain? I think I ran into the loader lock when I had a static object whose job it was to manage a background thread. Its destructor set an event to break the thread out of its loop, then waited on the thread handle. A deadlock happened, and I think the reason was &quot;resource inversion&quot; between the loader lock and the thread handle. My quick &quot;solution&quot; was to bypass DLL_THREAD_DETACH by having the thread terminate itself instead of exiting cleanly. Could this be a valid use of TerminateThread?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-139813">
				<div id="div-comment-139813" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.dimmick.demon.co.uk' rel='external nofollow' class='url'>Mike Dimmick</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040128-00/?p=40853#comment-139813">
			January 29, 2004 at 8:58 am</a>		</div>

		<p>Yes, static objects are destroyed in _DllMainCRTStartup, and yes, this can cause problems. I&#8217;ve been bitten by this, too.</p>
<p>Our solution was to remove any setup/teardown code from DllMain and provide InitLibrary/TermLibrary functions separately.</p>
<p>It can be quite frustrating to try to debug a process beyond the end of main().</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-139933">
				<div id="div-comment-139933" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://weblogs.asp.net/oldnewthing/' rel='external nofollow' class='url'>Raymond Chen</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040128-00/?p=40853#comment-139933">
			January 29, 2004 at 6:55 pm</a>		</div>

		<p>This ties into the comment from Norman Diamond on the other DllMain thread. </p>
<p>DllMain is a placeholder name for the actual DLL entry point you choose to use for your DLL.  If you choose to use the C runtimes, then the entry point is really _DllMainCRTStartup.  That function does some other stuff (like managing global destructors/constructors) and then calls a function called (confusingly coincidentally) DllMain.</p>
<p>In this case, then, the function you write called &quot;DllMain&quot; is NOT the actual DLL entry point, but an incredible simulation.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-152343">
				<div id="div-comment-152343" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://weblogs.asp.net/oldnewthing/archive/2004/03/09/86661.aspx' rel='external nofollow' class='url'>The Old New Thing</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040128-00/?p=40853#comment-152343">
			March 9, 2004 at 1:11 pm</a>		</div>

		
		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-152363">
				<div id="div-comment-152363" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://weblogs.asp.net/oldnewthing/archive/2004/03/09/86674.aspx' rel='external nofollow' class='url'>The Old New Thing</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040128-00/?p=40853#comment-152363">
			March 9, 2004 at 1:21 pm</a>		</div>

		
		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-159843">
				<div id="div-comment-159843" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://weblogs.asp.net/ericlippert/archive/2004/03/31/105329.aspx' rel='external nofollow' class='url'>Fabulous Adventures In Coding</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040128-00/?p=40853#comment-159843">
			April 1, 2004 at 2:02 am</a>		</div>

		
		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-159853">
				<div id="div-comment-159853" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://weblogs.asp.net/ericlippert/archive/0001/01/01/105329.aspx' rel='external nofollow' class='url'>Fabulous Adventures In Coding</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040128-00/?p=40853#comment-159853">
			April 1, 2004 at 2:06 am</a>		</div>

		
		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-167083">
				<div id="div-comment-167083" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://weblogs.asp.net/larryosterman/archive/2004/04/23/118979.aspx' rel='external nofollow' class='url'>Larry Osterman's WebLog</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040128-00/?p=40853#comment-167083">
			April 23, 2004 at 12:36 pm</a>		</div>

		
		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-167093">
				<div id="div-comment-167093" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://weblogs.asp.net/larryosterman/archive/0001/01/01/118979.aspx' rel='external nofollow' class='url'>Larry Osterman's WebLog</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040128-00/?p=40853#comment-167093">
			April 23, 2004 at 12:38 pm</a>		</div>

		
		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-208853">
				<div id="div-comment-208853" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.lenholgate.com/archives/000369.html' rel='external nofollow' class='url'>/* Rambling comments... */</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040128-00/?p=40853#comment-208853">
			September 9, 2004 at 5:54 pm</a>		</div>

		<p>I&#8217;ve been &lt;a href=&quot;<a href="http://www.larkware.com/Articles/SomeSpelunkingHelp.html&quot;&gt;splunking&lt;/a&#038;gt" rel="nofollow">http://www.larkware.com/Articles/SomeSpelunkingHelp.html&quot;&gt;splunking&lt;/a&#038;gt</a>; around Dll loading recently for a pet project. It&#8217;s been an interesting journey and this evening I solved the final piece of the puzzle and, when I did, I suddenly wondered, not for the first time, why Windows holds the &lt;a href=&quot;<a href="http://blogs.msdn.com/oldnewthing/archive/2004/01/28/63880.aspx&quot;&gt;loader&lt;/a&#038;gt" rel="nofollow">http://blogs.msdn.com/oldnewthing/archive/2004/01/28/63880.aspx&quot;&gt;loader&lt;/a&#038;gt</a>; &lt;a href=&quot;<a href="http://blogs.msdn.com/cbrumme/archive/2003/08/20/51504.aspx&quot;&gt;lock&lt;/a&#038;gt" rel="nofollow">http://blogs.msdn.com/cbrumme/archive/2003/08/20/51504.aspx&quot;&gt;lock&lt;/a&#038;gt</a>; when calling &lt;code&gt;DllMain()&lt;/code&gt;&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-223403">
				<div id="div-comment-223403" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://hueser.name/blog/archive/0001/01/01/212.aspx' rel='external nofollow' class='url'>Martin's WebLog</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040128-00/?p=40853#comment-223403">
			November 6, 2004 at 5:24 am</a>		</div>

		
		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-395913">
				<div id="div-comment-395913" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://sarathc.wordpress.com/2006/06/27/dllmain-inadvertent-deadlock/' rel='external nofollow' class='url'>Sharing my thoughts&#8230; &raquo; Blog Archive &raquo; DllMain: Inadvertent deadlock</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040128-00/?p=40853#comment-395913">
			June 27, 2006 at 8:39 am</a>		</div>

		<p>PingBack from <a rel="nofollow" target="_new" href="http://sarathc.wordpress.com/2006/06/27/dllmain-inadvertent-deadlock/" rel="nofollow">http://sarathc.wordpress.com/2006/06/27/dllmain-inadvertent-deadlock/</a></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-675623">
				<div id="div-comment-675623" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.zeroc.com/forums/help-center/3991-ice-hangs-destroy-when-called-through-dll.html#post17578' rel='external nofollow' class='url'>Ice 'hangs' in destroy when called through DLL - ZeroC Forums</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040128-00/?p=40853#comment-675623">
			October 16, 2008 at 9:17 am</a>		</div>

		<p>PingBack from <a rel="nofollow" target="_new" href="http://www.zeroc.com/forums/help-center/3991-ice-hangs-destroy-when-called-through-dll.html#post17578" rel="nofollow">http://www.zeroc.com/forums/help-center/3991-ice-hangs-destroy-when-called-through-dll.html#post17578</a></p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

