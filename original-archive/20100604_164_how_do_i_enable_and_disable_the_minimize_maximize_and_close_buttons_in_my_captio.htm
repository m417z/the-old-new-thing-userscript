<html>
<head>
<title>How do I enable and disable the minimize, maximize, and close buttons in my caption bar?</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>How do I enable and disable the minimize, maximize, and close buttons in my caption bar?</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>June 4, 2010 / year-entry #165</td></tr>
<tr><td><b>Tags:</b></td><td>code</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20100604-00/?p=13803</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>23</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">A customer was having problems with the small icon that appears in the upper left corner of the caption: In my program, I need to enable and disable the Close button programmatically, since the program sometimes goes into a state where I don't want the user to close it. I do this by removing the...</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>
A customer was having problems with the small icon that appears
in the upper left corner of the caption:
</p>
<blockquote CLASS=q><p>
In my program, I need to enable and disable the Close button
programmatically,
since the program sometimes goes into a state where I don't want
the user to close it.
I do this by removing the <code>WS_<wbr>SYS&shy;MENU</wbr></code> style when
I want to disable the Close button,
and adding it back when I want to re-enable it.
However, doing this has as a side effect that the icon for
my program doesn't appear in the title bar any more.
If I never touch the <code>WS_<wbr>SYS&shy;MENU</wbr></code> style, then
it works fine (but then I don't get the enable/disable behavior
that I want).
</p>
</blockquote>
<p>
Okay, the first problem is that you want to disable the Close button.
Usability research indicates that users really don't like it when
you disable the Close button.
It makes them feel trapped and uncomfortable.
This is the reason why standard Windows wizards don't provide a way
for you to disable the Close button.
The user should always have a way out.
</p>
<p>
Imagine showing a dialog box saying
"<a HREF="http://www.wendyhome.com/2009/01/28/no-expectation-of-privacy/"
>By clicking OK, you agree to the following terms</a>,"
and not having any way for the user to say, "No, thanks."
You should leave the Close button enabled,
and if the user clicks it at a bad time,
you can say,
"Okay, I heard you, but I'm right in the middle of something,
but once that's done, I'll close."
</p>
<p>
Okay, but suppose you're in one of those cases where, really,
you need to disable the Close button.
You've read the guidelines, you understand why they're there,
but you believe that you are an exceptional case.
</p>
<p>
If you never want the Close button enabled, then you can just
specify the
<code>CS_<wbr>NO&shy;CLOSE</wbr></code> style when you register the class.
</p>
<p>
To disable the Close button in the caption dynamically,
you enable and disable the <code>SC_<wbr>CLOSE</wbr></code> menu item
in your system menu.
</p>
<pre>
void DisableCloseButton(HWND hwnd)
{
 EnableMenuItem(GetSystemMenu(hwnd, FALSE), SC_CLOSE,
                MF_BYCOMMAND | MF_DISABLED | MF_GRAYED);
}

void EnableCloseButton(HWND hwnd)
{
 EnableMenuItem(GetSystemMenu(hwnd, FALSE), SC_CLOSE,
                MF_BYCOMMAND | MF_ENABLED);
}
</pre>
<p>
The other two caption buttons are controlled by window styles:
</p>
<pre>
void DisableMinimizeButton(HWND hwnd)
{
 SetWindowLong(hwnd, GWL_STYLE,
               GetWindowLong(hwnd, GWL_STYLE) &amp; ~WS_MINIMIZEBOX);
}

void EnableMinimizeButton(HWND hwnd)
{
 SetWindowLong(hwnd, GWL_STYLE,
               GetWindowLong(hwnd, GWL_STYLE) | WS_MINIMIZEBOX);
}

void DisableMaximizeButton(HWND hwnd)
{
 SetWindowLong(hwnd, GWL_STYLE,
               GetWindowLong(hwnd, GWL_STYLE) &amp; ~WS_MAXIMIZEBOX);
}

void EnableMaximizeButton(HWND hwnd)
{
 SetWindowLong(hwnd, GWL_STYLE,
               GetWindowLong(hwnd, GWL_STYLE) | WS_MAXIMIZEBOX);
}
</pre>
<p>
Why is the close button managed differently from the minimize
and maximize buttons?
</p>
<p>
History.
</p>
<p>
Originally, the window caption had only two buttons in the upper
right corner, the minimize and maximize buttons,
and they were controlled with a window style.
Windows&nbsp;95 added the Close button,
but then there was the question of knowing when to enable and disable it.
But wait, we already know when to enable and disable it:
The application told us when it enabled and disabled the
<code>SC_<wbr>CLOSE</wbr></code> menu item.
Bingo, just hook up the Close button to the existing menu item
(which applications were already in the habit of maintaining),
and magic,
it just works.
No need for applications to write special code to support the Close
button.
They already wrote the code; they just didn't realize it!
</p>
<p>
<b>Exercise</b>:
What's wrong with these alternative functions for enabling
and disabling the Close button:
</p>
<pre>
<i>// code in italics is wrong
void DisableCloseButton(HWND hwnd)
{
 SetClassLong(hwnd, GCL_STYLE,
              GetClassLong(hwnd, GCL_STYLE) | CS_NOCLOSE);
}

void EnableCloseButton(HWND hwnd)
{
 SetClassLong(hwnd, GCL_STYLE,
              GetClassLong(hwnd, GCL_STYLE) &amp; ~CS_NOCLOSE);
}</i>
</pre>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (23)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-837343">
				<div id="div-comment-837343" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">steven</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100604-00/?p=13803#comment-837343">
			June 4, 2010 at 7:24 am</a>		</div>

		<p>With the alternative functions, it would also affect other windows of the same window class, even if they&#39;re in a different state? MSDN also states &quot;it is possible to change the background color for a class by using SetClassLong, but this change does not immediately repaint all windows belonging to the class.&quot;, as an example of undesireable behaviour, so something similar may apply in this case, resulting in the close button appearing enabled/disabled until the NC area is redrawn?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-837353">
				<div id="div-comment-837353" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Shaka</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100604-00/?p=13803#comment-837353">
			June 4, 2010 at 7:33 am</a>		</div>

		<p>Those function will enable/disable the close button for all the windows created from that window class from now, not the close button of the &quot;hwnd&quot; window.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-837363">
				<div id="div-comment-837363" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Nick</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100604-00/?p=13803#comment-837363">
			June 4, 2010 at 7:36 am</a>		</div>

		<p>The problem is that the wrong code doesn&#39;t disable the menu item on the system menu.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-837373">
				<div id="div-comment-837373" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Nick</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100604-00/?p=13803#comment-837373">
			June 4, 2010 at 7:39 am</a>		</div>

		<p>I should add, likewise, it doesn&#39;t work if the window class was registered initially with CS_NOCLOSE</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-837383">
				<div id="div-comment-837383" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Crescens2k</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100604-00/?p=13803#comment-837383">
			June 4, 2010 at 8:03 am</a>		</div>

		<p>In my time as a developer I have had a few situations where the people asking me to write the software wanted to diable the close button for whatever reason. In all cases I managed to get them to rethink the idea by doing simple things by changing the workflow, putting extra thought into what is being done or saving temporary operation data.</p>
<p>A lot of developers seem to forget about the end user just to make things easier for themselves. But in this situation it can end up a lot worse, because if the user feels really trapped when the window won&#39;t close then they can just end the process and that will definitely get the operation to end up in a very bad situation.</p>
<p>I have a list of actions which would make me not use an application if a program does. Trying to stop the application from closing is actually on that list. So if this application, with the close disabling, came out onto the market then I wouldn&#39;t be using it.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-837393">
				<div id="div-comment-837393" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Alexandre Grigoriev</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100604-00/?p=13803#comment-837393">
			June 4, 2010 at 8:27 am</a>		</div>

		<p>Fortunately, these tricks don&#39;t disable WM_CLOSE (or it&#39;s SC_CLOSE?) sent by Task Manager on Application-&gt;End Task button click. And the ultimate kill by TerminateProcess (Task Manager-&gt;End Process).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-837403">
				<div id="div-comment-837403" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">sukru</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100604-00/?p=13803#comment-837403">
			June 4, 2010 at 8:40 am</a>		</div>

		<p>Doesn&#39;t MSI installer (which is a component of Windows) disable close button on the last step of uninstall operations? I believe this and similar cases are really legitimate uses of the functionality.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-837413">
				<div id="div-comment-837413" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Dan Bugglin</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100604-00/?p=13803#comment-837413">
			June 4, 2010 at 8:53 am</a>		</div>

		<p>@Alexandre I think an application can block WM_CLOSE, but if the developer wasn&#39;t expecting it (since there&#39;s no close button) they may forget to handle it, and the DefWndProc closes the window.</p>
<p>@sukru I assume because closing is considered equivalent to cancel and that is done to underscore that you can&#39;t cancel at that point. &nbsp;Still weird though.</p>
<p>I don&#39;t know much about window classes but my best guess is Shaka&#39;s&#8230; the flag is only checked on window creation.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-837443">
				<div id="div-comment-837443" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Rick C</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100604-00/?p=13803#comment-837443">
			June 4, 2010 at 11:20 am</a>		</div>

		<p>Interestingly, under 64-bit Win7, it does NOT seem to affect other windows of the same class, whether already open or not.</p>
<p>What Raymond was probably referring to, however, is that it disables the close button, but NOT the Close item on the system menu.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-837453">
				<div id="div-comment-837453" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Christian</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100604-00/?p=13803#comment-837453">
			June 4, 2010 at 2:07 pm</a>		</div>

		<p>There is one very illegimitate reason for disabling the close button and the remedy is &quot;net stop wuauserv&quot;. I heart deleting it&#39;s registry keys even allows installing additional updates without rebooting first ;-)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-837463">
				<div id="div-comment-837463" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Jens</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100604-00/?p=13803#comment-837463">
			June 4, 2010 at 2:44 pm</a>		</div>

		<p>Yo close button, I&#39;m real happy for you and imma let you finish, but OK is the greatest button of all time&#8230; of all time.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-837473">
				<div id="div-comment-837473" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Anonymous Coward</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100604-00/?p=13803#comment-837473">
			June 4, 2010 at 4:02 pm</a>		</div>

		<blockquote><p>
  Christian
</p></blockquote>
<p>Or you can just drag the you-want-to-reboot window to the bottom right and reboot when it suits you.</p>
<p>As to why it wants to reboot, Raymond discussed that before: ‘Windows can but won&#39;t’ <a rel="nofollow" target="_new" href="http://technet.microsoft.com/en-us/magazine/2008.11.windowsconfidential.aspx" rel="nofollow">technet.microsoft.com/&#8230;/2008.11.windowsconfidential.aspx</a></p>
<p>On the other hand, there was an article on Slashdot some time ago about one of those old systems (think twenty years ago or something), that could achieve close to 100% uptime and get security right. I thought I bookmarked it since it was interesting from a historical perspective, but I can&#39;t find it any more.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-837433">
				<div id="div-comment-837433" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Rick C</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100604-00/?p=13803#comment-837433">
			June 4, 2010 at 9:38 am</a>		</div>

		<p>I&#39;d have to check but I&#39;d think that the actual answer is slightly different from Shaka&#39;s: &nbsp;I suspect that SetClassLong would affect *all* windows of that class, even those already existing, and not just new ones. &nbsp;I don&#39;t care enough to write code to test this, but my reasoning is that the change is supposed to happen right then, so it would make sense for it to affect all windows, and this sentence from MSDN &quot;Calling SetClassLong with the GCL_WNDPROC index creates a subclass of the window class that affects all windows subsequently created with the class&quot; implies that by specifically calling out GCL_WNDPROC &quot;affects all windows *subsequently* created&quot; which implies that other values don&#39;t.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-837493">
				<div id="div-comment-837493" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100604-00/?p=13803#comment-837493">
			June 4, 2010 at 6:46 pm</a>		</div>

		<p>I had to disable the close button and WM_CLOSE once thanks to a third party component (not to name names here). My response to the newly created usability problem was to create a big button on the window labeled &quot;Cancel&quot;.</p>
<p>As for the 100% uptime and getting security right, that is achieved on some Linux systems by patching the running kernel with binary patches.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-837503">
				<div id="div-comment-837503" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Nick</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100604-00/?p=13803#comment-837503">
			June 4, 2010 at 9:02 pm</a>		</div>

		<p>&quot;I heart deleting it&#39;s registry keys even allows installing additional updates without rebooting first ;-)&quot;</p>
<p>Wow, and people wonder why the &quot;required yearly re-installation of Windows&quot; myth perpetuates. &nbsp;My Windows is unstable, even when I fix the registry manually!</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-837543">
				<div id="div-comment-837543" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Alex Cohn</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100604-00/?p=13803#comment-837543">
			June 5, 2010 at 1:49 pm</a>		</div>

		<p>I wonder if the EnableMenuItem method will work for minimize and maximize, too. After all, these buttons also have siblings in the Alt-space menu.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-837553">
				<div id="div-comment-837553" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Neil</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100604-00/?p=13803#comment-837553">
			June 5, 2010 at 4:54 pm</a>		</div>

		<p>I ran into this very problem a few hours ago, when I wanted to try VC2010++Express, and its setup insisted it needed to reboot; the Close button was disabled, as was the &quot;Restart Later&quot; button. I of course followed the path predicted by Crescens2K&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-837563">
				<div id="div-comment-837563" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Marquess</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100604-00/?p=13803#comment-837563">
			June 6, 2010 at 2:29 am</a>		</div>

		<p>VS2010 installs .NET Framework 4.0. I&#39;d say that warrants an unconditional reboot.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-837573">
				<div id="div-comment-837573" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Alexander Grigoriev</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100604-00/?p=13803#comment-837573">
			June 6, 2010 at 9:42 am</a>		</div>

		<p>@Marquess</p>
<p>Why would installation of a new component warrant an unconditional reboot?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-837583">
				<div id="div-comment-837583" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Marquess</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100604-00/?p=13803#comment-837583">
			June 6, 2010 at 10:27 am</a>		</div>

		<p>Because it&#39;s a rather tightly integrated component.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-837843">
				<div id="div-comment-837843" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">James Schend</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100604-00/?p=13803#comment-837843">
			June 7, 2010 at 9:43 am</a>		</div>

		<blockquote><p>
  On the other hand, there was an article on Slashdot some time ago about one of those old systems (think twenty years ago or something), that could achieve close to 100% uptime and get security right.
</p></blockquote>
<p>BeOS was close, if you&#39;re flexible in your definition of &quot;uptime.&quot; You could, for example, kill, patch, and restart the networking subsystem without rebooting the kernel or anything else on the system. (Or any other subsystem on the machine.)</p>
<p>But then again, if you have to kill networking, you&#39;re probably not going to count that as &quot;uptime&quot; except as a technicality.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-837713">
				<div id="div-comment-837713" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blog.steamsprocket.org.uk' rel='external nofollow' class='url'>Aneurin Price</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100604-00/?p=13803#comment-837713">
			June 7, 2010 at 7:55 am</a>		</div>

		<p>&gt;I&#39;d say that warrants an unconditional reboot.</p>
<p>Nothing short of the wrath of Zeus warrants an unconditional reboot.</p>
<p>Even updating the OS doesn&#39;t force a reboot. If your application tries a stunt like that, it had better be *the cure for cancer* or if I ever meet you I will hit you in the face with a brick.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-837933">
				<div id="div-comment-837933" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Worf</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20100604-00/?p=13803#comment-837933">
			June 7, 2010 at 10:30 pm</a>		</div>

		<p>There are mainframe systems that pretty much have the uptime crown. So much so that a reboot is a Very Serious Deal and can take hours or days, even. Literally 5 9&#39;s uptime.</p>
<p>Hell, the OS won&#39;t stop even if hardware fails &#8211; the OS merely keeps on trucking avoiding the failed CPU, RAM, disk or other component. And naturally, all hardware is hot swappable.</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

