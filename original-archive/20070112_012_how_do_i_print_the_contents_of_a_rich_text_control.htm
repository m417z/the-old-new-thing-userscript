<html>
<head>
<title>How do I print the contents of a rich text control?</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>How do I print the contents of a rich text control?</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>January 12, 2007 / year-entry #13</td></tr>
<tr><td><b>Tags:</b></td><td>code</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20070112-02/?p=28423</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>5</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">For some reason, people are really puzzled by rich edit printing. I'm no expert on printing, but even I was able to figure it out. The kernel is the EM_FORMATRANGE message. Each time you call it, a little bit more of the rich text control is printed, and the message returns the index of the...</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>
For some reason, people are really puzzled by rich edit printing.
I'm no expert on printing, but even I was able to figure it out.
The kernel is the <code>EM_FORMATRANGE</code> message.
Each time you call it, a little bit more of the rich text control
is printed, and the message returns the index of the first
unprinted character,
which you can pass back in to print the next chunk.
</p>
<p>
The rest is just setting up and tearing down.
</p>
<pre>
BOOL PrintRTF(HWND hwnd, HDC hdc)
{
 int cxPhysOffset = GetDeviceCaps(hdc, PHYSICALOFFSETX);
 int cyPhysOffset = GetDeviceCaps(hdc, PHYSICALOFFSETY);
 int cxPhys = GetDeviceCaps(hdc, PHYSICALWIDTH);
 int cyPhys = GetDeviceCaps(hdc, PHYSICALHEIGHT);

 SendMessage(hwnd, EM_SETTARGETDEVICE, (WPARAM)hdc, cxPhys);
 FORMATRANGE fr;
 fr.hdc = hdc;
 fr.hdcTarget = hdc;
 fr.rc.left = cxPhysOffset;
 fr.rc.right = cxPhysOffset + cxPhys;
 fr.rc.top = cyPhysOffset;
 fr.rc.bottom = cyPhysOffset + cyPhys;

 SendMessage(hwnd, EM_SETSEL, 0, (LPARAM)-1);
 SendMessage(hwnd, EM_EXGETSEL, 0, (LPARAM)&amp;fr.chrg);

 BOOL fSuccess = TRUE;
 while (fr.chrg.cpMin &lt; fr.chrg.cpMax &amp;&amp; fSuccess) {
  fSuccess = StartPage(hdc) &gt; 0;
  if (!fSuccess) break;
  int cpMin = SendMessage(hwnd, EM_FORMATRANGE, TRUE, (LPARAM)&amp;fr);
  if (cpMin &lt;= fr.chrg.cpMin) {
   fSuccess = FALSE;
   break;
  }
  fr.chrg.cpMin = cpMin;
  fSuccess = EndPage(hdc) &gt; 0;
 }

 SendMessage(hwnd, EM_FORMATRANGE, FALSE, 0);

 return fSuccess;
}
</pre>
<p>
We start by getting the dimensions of the page and
telling the rich edit control what we intend to render to
by using the <code>EM_SETTARGETDEVICE</code> message.
Next, we need to fill out our <code>FORMATRANGE</code>,
which we do by specifying the <code>HDC</code> we are
rendering to, as well as the paper dimensions.
But what about the character range?
We are lazy and let the rich edit control take care of it for us:
We select all the text and then ask the rich edit control to
tell us what we just selected, which comes back in the form
of a <code>CHARRANGE</code>, which is exactly what we needed.
</p>
<p>
Next comes the printing loop.
While there is still text to print (and we haven't encountered
an error), we start a new page,
ask the rich edit control to render that page,
remember where the next page should begin,
and end the current page.
There's a little sanity check in there to make sure that the
rich edit control made forward progress; if not, then we'll
end up in an infinite loop spewing out blank pages!
(I have no idea whether this is theoretically possible, but I'm
going to protect against it just the same.)
</p>
<p>
Once the printing loop is complete, we clean up by sending
one last <code>EM_FORMATRANGE</code> message to tell the
rich edit control that we're all done and it can discard the
information it cached.
</p>
<p>
We can take all the information we've learned over the
past few days to make a simple "print RTF" program.
</p>
<pre>
int CALLBACK
_tWinMain(HINSTANCE hInstance, HINSTANCE hPrevInstance,
          LPTSTR lpCmdLine, int nShowCmd)
{
 LoadLibrary(TEXT("riched20.dll"));
 HWND hwndRTF = CreateWindow(RICHEDIT_CLASS, NULL,
                     ES_MULTILINE | WS_OVERLAPPEDWINDOW,
                     CW_USEDEFAULT, CW_USEDEFAULT,
                     CW_USEDEFAULT, CW_USEDEFAULT,
                     NULL, 0, 0, 0);
 if (hwndRTF) {
  SendMessage(hwndRTF, EM_EXLIMITTEXT, 0, -1);
  if (FillRichEditFromFile(hwndRTF, lpCmdLine)) {
   PRINTDLG pd = { sizeof(pd) };
   pd.Flags = PD_RETURNDC | PD_RETURNDEFAULT;
   if (PrintDlg(&amp;pd)) {
    DOCINFO di = { sizeof(di) };
    di.lpszDocName = TEXT("Sample Printout");
    if (StartDoc(pd.hDC, &amp;di) &gt; 0) {
     if (PrintRTF(hwndRTF, pd.hDC)) {
      EndDoc(pd.hDC);
     } else {
      AbortDoc(pd.hDC);
     }
    }
    GlobalFree(pd.hDevMode);
    GlobalFree(pd.hDevNames);
    DeleteDC(pd.hDC);
   }
  }
  DestroyWindow(hwndRTF);
 }
 return 0;
}
</pre>
<p>
There's not really much going on here; it's all just glue and
necessary typing.
</p>
<p>
We create a rich edit control and fill it with the file
passed on the command line.
We then ask the <code>PrintDlg</code> function to give us a
DC to the user's default printer.
We give the document a title, start the document, print the rich
text into the document, and then end the document (or abort it
if something went wrong during printing).
A little cleaning up, and we're all done.
A tiny program to print an arbitrary RTF document with
no fanfare whatsoever.
</p>
<p>
See?
It's not so hard.
Once you find <code>EM_FORMATRANGE</code> the rest is just doing
the obvious.</p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (5)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-460473">
				<div id="div-comment-460473" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">jon</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070112-02/?p=28423#comment-460473">
			January 12, 2007 at 2:25 pm</a>		</div>

		<p>It&#8217;s worth noting also that the RichEdit control doesn&#8217;t support WM_PRINTCLIENT, so EM_FORMATRANGE is the only way to approximate this behavior as well.</p>
<div class=post>[<i>Um, WM_PRINTCLIENT wouldn&#8217;t help even if it were supported. How do you print a 50-page document with WM_PRINTCLIENT? -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-460483">
				<div id="div-comment-460483" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Nathan</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070112-02/?p=28423#comment-460483">
			January 12, 2007 at 3:39 pm</a>		</div>

		<p>I haven&#8217;t looked at printing in windows since win95, and back then it was non-trivial to figure out. While I comprehend the code you&#8217;ve posted, I see printing continues to be a non-trivial task. Maybe since you talk of graphics etc enough, the abstraction of the device context/DC means who cares if you&#8217;re drawing to the screen or printer, but to the rest of us rubes, it&#8217;s stupidly complex.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-460513">
				<div id="div-comment-460513" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">jon</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070112-02/?p=28423#comment-460513">
			January 12, 2007 at 5:58 pm</a>		</div>

		<p>WM_PRINTCLIENT has nothing to do with printing Raymond, I was just pointing out that if you do want to get the RichEdit control to render itself to an arbitrary DC, EM_FORMATRANGE is the only way to do it.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-460463">
				<div id="div-comment-460463" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.werkema.com' rel='external nofollow' class='url'>Sean W.</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070112-02/?p=28423#comment-460463">
			January 12, 2007 at 12:30 pm</a>		</div>

		<p>Despite the relatively large quantity of documentation on this topic, I think there are two reasons people have been confused. &nbsp;(Note: &nbsp;I write this as somebody who&#8217;s never needed to make a RichEdit control print, and never even thought to look up the documentation before: &nbsp;So I&#8217;m genuinely approaching this as a newbie, an educated and smart newbie, but a newbie nonetheless.)</p>
<p>First, I think people are confused because this is what MSDN says about EM_FORMATRANGE:</p>
<p>&quot;EM_FORMATRANGE Message&quot;</p>
<p>&quot;The EM_FORMATRANGE message formats a range of text in a rich edit control for a specific device.&quot;</p>
<p><a rel="nofollow" target="_new" href="http://msdn.microsoft.com/library/default.asp?url=/library/en-us/shellcc/platform/commctls/richedit/richeditcontrols/richeditcontrolreference/richeditmessages/em_formatrange.asp" rel="nofollow">http://msdn.microsoft.com/library/default.asp?url=/library/en-us/shellcc/platform/commctls/richedit/richeditcontrols/richeditcontrolreference/richeditmessages/em_formatrange.asp</a></p>
<p>You don&#8217;t see the word &quot;print&quot; anywhere in its documentation, and the word &quot;printer&quot; only appears once, near the bottom. &nbsp;Anybody naively searching MSDN for the word &quot;print&quot; or &quot;printing&quot; is going to have a hard time finding this. &nbsp;Try it for yourself; type &quot;site:msdn.microsoft.com print richedit&quot; into Google and see how long it takes to find a meaningful page. &nbsp;A more useful (and yes, redundant) opening sentence might&#8217;ve been:</p>
<p>&quot;The EM_FORMATRANGE message formats a range of text in a rich edit control for a specific device, most commonly to print a RichEdit control&#8217;s contents to a printer.&quot;</p>
<p>A search engine can *find* that one since it has all the right keywords in all the right places, and 99% of the time that&#8217;s what people are gonna use EM_FORMATRANGE for anyway, so it&#8217;s not inaccurate documentation.</p>
<p>The second reason that people probably have trouble is that for many users, EM_FORMATRANGE is probably overkill; there&#8217;s no such thing as a simple EM_PRINT message. &nbsp;As you yourself demonstrated, it&#8217;s 30 lines of code to get the thing to print. &nbsp;Admittedly, that&#8217;s not a lot, and the additional code offers flexibility, but if all you want is to simply dump the contents of a RichEdit control (which I think is what a lot of people want), you have either some work ahead of you to figure it out or a lot of copy+paste ahead of you &#8212; if you can find a good example. &nbsp;Just like CreateWindow can&#8217;t throw up a window in one or two lines of code, EM_FORMATMESSAGE can&#8217;t print in one or two lines of code, and I think a lot of developers have come to expect common operations can be done in one or two lines of code these days.</p>
<p>So that&#8217;s my two cents on reading the documentation and sample code now, but I could always be wrong.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-460623">
				<div id="div-comment-460623" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">required</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070112-02/?p=28423#comment-460623">
			January 15, 2007 at 10:27 am</a>		</div>

		<p>I&#8217;ve implemented printing for Windows apps and it is, as my colleague put it, &quot;eine sauerei&quot; (a mess). I think he was talking about the problem generally, rather than my code, but&#8230;</p>
<p>Anyway, definitely non-trivial, though I eventually knocked up a small framework which made things a lot easier for anyone following me.</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

