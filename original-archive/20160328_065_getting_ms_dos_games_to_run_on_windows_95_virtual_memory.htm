<html>
<head>
<title>Getting MS-DOS games to run on Windows 95: Virtual memory</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>Getting MS-DOS games to run on Windows 95: Virtual memory</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>March 28, 2016 / year-entry #66</td></tr>
<tr><td><b>Tags:</b></td><td>history</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20160328-00/?p=93204</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>18</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">Memory access is uniform and free, right?</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>
<p>
A lot of games of the pre-Windows 95 era use so-called MS-DOS Extenders,
which are libraries that provide a protected-mode
environment to MS-DOS applications.
The application is technically two programs glued together:
The first program is the MS-DOS Extender itself,
also known as the server,
and the second program is the game that is a client
of the MS-DOS Extender.
</p>
<p>
The interface that the client uses to talk to the extender
takes a variety of forms.
There were a handful of extenders that made up their own
interface from scratch,
but most extenders implement either the VCPI or DPMI
interface.
The main difference that mattered to me
is that VCPI gives the application full control of the CPU
at ring zero, which means that it cannot coexist
with any other operating system.
DPMI is a much friendlier interface to a host operating system,
since it allows the host operating system to remain in control
while still granting the client access to protected mode.
</p>
<p>
One nice feature of the DPMI extenders
is that when they start up,
they look to see if they are already running inside a DPMI extender.
If so, then the extender shuts itself off and allows the client
to talk directly to the existing DPMI extender.
(In the case of a program running
inside an MS-DOS virtual machine
created by Windows,
the existing DPMI extender is the Windows virtual machine manager.)
</p>
<p>
Now things get interesting:
The client application was written with the assumption that
it is using the MS-DOS extender that is included with the
application,
but in reality it is talking to the DPMI host that comes
with Windows.
The fact that programs seem to run mostly okay in spite
of running under a foreign extender is either completely
astonishing or totally obvious,
depending on your point of view.
It's completely astonishing because, well, you're taking
a program written to be run in one environment,
and running it in a different environment.
Or it's totally obvious because they are using the
same DPMI interface, and as long as the interface
has the same behavior,
then naturally the program will continue to work,
because that's why we have interfaces!
</p>
<p>
In practice, the issues that arose with running
under Windows DPMI instead of the built-in extender's
DPMI fell into a few categories, all due to
differences between the implementations,
despite both adhering
to the documented interface.&sup1;
</p>
<p>
One is virtual memory.
</p>
<p>
The built-in extender didn't implement virtual memory,
and client applications often use programming techniques
that don't work well in a virtual memory environment.
</p>
<p>
Virtual memory introduced latency that applications
hadn't been designed for.
They would allocate memory and put an interrupt handler in it.
This works fine if there is no virtual memory,
but once you enable virtual memory,
the memory for the interrupt handler might get paged out,
and then bad things would happen, usually race conditions.
</p>
<p>
A more common programming pattern that falls down in the face
of virtual memory is an application that
simply allocates all
the memory in the system and adds it to a memory pool.
(As a bonus, the applications often initialize the memory
as it was allocated.)
If you have virtual memory,
the client application can go a very long time
before it runs out of memory because each "memory" allocation
is really a disk allocation.
This typically manifested itself by the application taking
a long time to start up, accompanied by heavy disk activity
as the operating system swapped out tons of pages
until you ran out of disk space.
</p>
<p>
As I recall, we fixed this by setting a default policy
for MS-DOS applications to limit EMS and XMS memory usage to
the actual amount of physical RAM installed in the computer.
(The DPMI memory quota defaulted to 8MB or
a little bit less than physical memory,
whichever is lower.)
That way, these programs that try to allocate all the memory
in the system would give up before the swap file spiraled
out of control.
This was the setting known as <i>Auto</i>
<a HREF="http://www.zoology.ubc.ca/rikblok/TipsnTricks/win95.html#dpmi">
in the memory properties page</a>.
</p>
<p><b>Bonus chatter</b>:
There was one program that not only allocated all the
memory in the system and added it to a memory pool.
Later during the execution of the program, it would
ask for still more memory,
and if the call succeeded, the program crashed!
</p>
<p>
&sup1;These issues were called out in the DPMI documentation,
but since the applications assumed that they were
running under their built-in extender,
they figured that the warnings in the DPMI documentation
didn't apply to them.
It never occurred to them that their preferred
DPMI extender would not actually be the one in charge.</p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (18)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment byuser comment-author-dwalker-wk even thread-even depth-1" id="comment-1231494">
				<div id="div-comment-1231494" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/DWalker' rel='external nofollow' class='url'>DWalker</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160328-00/?p=93204#comment-1231494">
			March 28, 2016 at 8:40 am</a>		</div>

		<p>I remember EMS and XMS memory!  Good times.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-dwalker-wk odd alt thread-odd thread-alt depth-1 parent" id="comment-1231501">
				<div id="div-comment-1231501" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/DWalker' rel='external nofollow' class='url'>DWalker</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160328-00/?p=93204#comment-1231501">
			March 28, 2016 at 8:41 am</a>		</div>

		<p>I remember EMS and XMS memory!   Good times.</p>

		
				</div>
		<ol class="children">
		<li class="comment even depth-2" id="comment-1231513">
				<div id="div-comment-1231513" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">AK</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160328-00/?p=93204#comment-1231513">
			March 28, 2016 at 9:04 am</a>		</div>

		<p>Oh yeah, separate versions of CONFIG.SYS for different combinations and parameters of HIMEM.SYS and EMM386.EXE. Good times&#8230;!</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment odd alt thread-even depth-1" id="comment-1231521">
				<div id="div-comment-1231521" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Yukkuri</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160328-00/?p=93204#comment-1231521">
			March 28, 2016 at 10:32 am</a>		</div>

		<p>&gt; Later during the execution of the program, it would ask for still more memory, and if the call succeeded, the program crashed!</p>
<p>I asked for the world, yes. But I didn&#8217;t expect you to actually give it to me!</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-odd thread-alt depth-1" id="comment-1231514">
				<div id="div-comment-1231514" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Yukkuri</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160328-00/?p=93204#comment-1231514">
			March 28, 2016 at 10:33 am</a>		</div>

		<p>&gt; Later during the execution of the program, it would ask for still more memory, and if the call succeeded, the program crashed!</p>
<p>I asked for the world, yes. But I didn&#8217;t expect you to actually give it to me!</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-even depth-1" id="comment-1231541">
				<div id="div-comment-1231541" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160328-00/?p=93204#comment-1231541">
			March 28, 2016 at 11:47 am</a>		</div>

		<p>Well sometimes you can do your job too good.</p>
<p>There was this guy who tried to run our motor exercise management software on Windows 95 instead of DOS like he should have. Unfortunately, while the software does run, the hard-realtime hardware management loop is no longer realtime. That guy was seriously risking a broken arm. No version of Windows was authorized for a reason.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-odd thread-alt depth-1" id="comment-1231523">
				<div id="div-comment-1231523" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blog.differentpla.net' rel='external nofollow' class='url'>Roger Lipscombe</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160328-00/?p=93204#comment-1231523">
			March 28, 2016 at 12:14 pm</a>		</div>

		<p>Not strictly relevant to the Windows DPMI implementation, but in terms of DPMI implementation &#8220;issues&#8221;&#8230;</p>
<p>Way back when, I was greatly enjoying the original Grand Theft Auto (which actually came in two versions, one for DOS, and one for Windows 95). The DOS version (which I preferred; it was slightly faster) shipped with the DOS/4GW extender.</p>
<p>At one point, I upgraded the memory in my PC and suddenly GTA wouldn&#8217;t run any more. If I took half the memory out, it ran fine. I started digging into the release notes for DOS4GW to see if there was a recent patch that might fix my problem. One of the items was something along the lines of &#8220;increased maximum supported virtual memory to 64MB&#8221;.</p>
<p>&#8220;Hmmm&#8221;, says I, and I drop them an email: &#8220;What if I&#8217;ve got 64MB of *physical* memory?&#8221;. A little while later, comes the sheepish reply: &#8220;Ah. We didn&#8217;t test that&#8230;&#8221;.</p>
<p>Cue me feeling slightly smug that I had more memory than the people who wrote the DOS extenders for some of my favourite games&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-even depth-1" id="comment-1231552">
				<div id="div-comment-1231552" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blog.differentpla.net/' rel='external nofollow' class='url'>Roger Lipscombe</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160328-00/?p=93204#comment-1231552">
			March 28, 2016 at 12:57 pm</a>		</div>

		<p>Not strictly relevant to the Windows DPMI implementation, but in terms of DPMI implementation &#8220;issues&#8221;&#8230; Way back when, I was greatly enjoying the original Grand Theft Auto (which actually came in two versions, one for DOS, and one for Windows 95). The DOS version (which I preferred; it was slightly faster) shipped with the DOS/4GW extender. At one point, I upgraded the memory in my PC and suddenly GTA wouldn&#8217;t run any more. If I took half the memory out, it ran fine. I started digging into the release notes for DOS4GW to see if there was a recent patch that might fix my problem. One of the items was something along the lines of &#8220;increased maximum supported virtual memory to 64MB&#8221;. &#8220;Hmmm&#8221;, says I, and I drop them an email: &#8220;What if I&#8217;ve got 64MB of *physical* memory?&#8221;. A little while later, comes the sheepish reply: &#8220;Ah. We didn&#8217;t test that&#8230;&#8221;. Cue me feeling slightly smug that I had more memory than the people who wrote the DOS extenders for some of my favourite games&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-yuhong-bao even thread-odd thread-alt depth-1 parent" id="comment-1231553">
				<div id="div-comment-1231553" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Yuhong+Bao' rel='external nofollow' class='url'>Yuhong Bao</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160328-00/?p=93204#comment-1231553">
			March 28, 2016 at 4:52 pm</a>		</div>

		<p>I think most of the time for games it was a *deliberate decision* to only support running under pure DOS. Of course, if MS and IBM actually worked together and OS/2 2.x actually replaced DOS/Windows, it is unlikely that DOS gaming would last as long as it did.</p>

		
				</div>
		<ol class="children">
		<li class="comment odd alt depth-2 parent" id="comment-1231563">
				<div id="div-comment-1231563" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Scarlet Manuka</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160328-00/?p=93204#comment-1231563">
			March 29, 2016 at 1:42 am</a>		</div>

		<p>You&#8217;re probably right; supporting running under Windows would have meant a lot of extra support work compared to just telling people how to make a DOS mode boot floppy which loaded minimal extra stuff, which was the option most games of the time took.</p>
<p>I did prefer to boot to real DOS rather than using MS-DOS Mode from Windows for playing DOS games. Some games were fine in MS-DOS mode but many had subtle issues &#8211; I forget the details, though I suspect sound was involved in a lot of them. It was easier just to boot to DOS with an appropriate config. (I had five configs defined &#8211; four DOS ones depending on whether we wanted CD and/or EMS drivers loaded, and one for Windows which was similar to the no CD, no EMS one but ran Windows in the autoexec. The tricky part was that my soundcard needed EMS for one of its emulation modes, so if I was running without EMS and wanted to play a game that was set up for that mode, I&#8217;d have to reboot and change configs.)</p>
<p>I kept doing that until I finally abandoned Win98 for XP and started using DOSBox. Of course by that time I also didn&#8217;t have the soundcard with the complicated behaviour.</p>

		
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-yuhong-bao even depth-3 parent" id="comment-1231733">
				<div id="div-comment-1231733" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Yuhong+Bao' rel='external nofollow' class='url'>Yuhong Bao</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160328-00/?p=93204#comment-1231733">
			March 29, 2016 at 1:34 pm</a>		</div>

		<p>&#8220;MS-DOS mode&#8221; is real DOS, and Win9x did ship with EMM386.</p>

		
				</div>
		<ol class="children">
		<li class="comment odd alt depth-4" id="comment-1231773">
				<div id="div-comment-1231773" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Scarlet Manuka</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160328-00/?p=93204#comment-1231773">
			March 29, 2016 at 8:45 pm</a>		</div>

		<p>Sorry, you&#8217;re right about MS-DOS Mode, I misspoke; I was thinking more of running DOS applications within Windows (though I did have the impression that there were still a few problems I encountered with MS-DOS Mode, but I could easily be mistaken there). I did avoid using MS-DOS Mode as well, but that was mainly for the convenience &#8211; easier to boot into plain DOS, rebooting as necessary to change configs, than to boot into Windows and then reboot into MS-DOS Mode.</p>
<p>I&#8217;m not sure what your point is about Win9x and EMM386. I never claimed otherwise, it&#8217;s just that for some games you had to really squeeze out every bit of conventional memory possible. (Loading as much you could into the HMA helped a lot.) I think some of them also required EMS not to be running, but it&#8217;s been long enough ago that I don&#8217;t remember exactly.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment even depth-2" id="comment-1231734">
				<div id="div-comment-1231734" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">smf</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160328-00/?p=93204#comment-1231734">
			March 29, 2016 at 4:00 pm</a>		</div>

		<p>&#8220;Of course, if MS and IBM actually worked together and OS/2 2.x actually replaced DOS/Windows, it is unlikely that DOS gaming would last as long as it did.&#8221;</p>
<p>Even XP had an improved DOS emulation to persuade people to switch from Windows 98. So I doubt it would have made much difference.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment odd alt thread-even depth-1" id="comment-1231614">
				<div id="div-comment-1231614" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Neil</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160328-00/?p=93204#comment-1231614">
			March 29, 2016 at 4:55 am</a>		</div>

		<p>I remember one application that originally used a VCPI extender, so under Windows you had to run the 80286 version (which used EMS) instead. The application was later bought by Microsoft, and the next version used a DPMI extender. Sadly we didn&#8217;t discover the magic setting that limited the memory to the amount of physical RAM so we had to fake it by minimising the size of the page file.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-archangelpip even thread-odd thread-alt depth-1" id="comment-1231633">
				<div id="div-comment-1231633" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Darran+Rowe' rel='external nofollow' class='url'>Darran Rowe</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160328-00/?p=93204#comment-1231633">
			March 29, 2016 at 9:07 am</a>		</div>

		<p>Raymond: is your post running late today?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-even depth-1" id="comment-1231813">
				<div id="div-comment-1231813" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ivan K</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160328-00/?p=93204#comment-1231813">
			March 30, 2016 at 3:12 am</a>		</div>

		<p>Growing older I think I missed the transition zone between using a boot disk vs. Dos from win95. DirectX (3, then 5) was the thing killed dos mode and made Win95 and beyond a gaming platform for me. The first pc I ever bought with my own money was a win95 machine, and seeing it run &#8220;the game&#8221; in DirextX vs Dos made my dos boot disks bitrot.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-odd thread-alt depth-1" id="comment-1231873">
				<div id="div-comment-1231873" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Dave Oldcorn</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160328-00/?p=93204#comment-1231873">
			March 30, 2016 at 12:17 pm</a>		</div>

		<p>&gt;These issues were called out in the DPMI documentation, but since the applications assumed that they were running under their built-in extender, they figured that the warnings in the DPMI documentation didn’t apply to them.<br />
If you had the DPMI documentation&#8230; most of us just had whatever documentation came with Watcom for DOS/4GW, which if I remember right wasn&#8217;t much, and this was in the very nascent days of the internet, when &#8216;standard&#8217; specs were a bit harder to come by. And that&#8217;s if you even used DPMI memory management explicitly rather than relying on the compiler&#8217;s malloc. (I didn&#8217;t. I did use the interrupt management capabilities, for sound cards, but that was about it when it came to explicitly talking to DPMI).</p>
<p>I was rather surprised when I dug later on and found a lot more DPMI existed than DOS/4GW supported. I&#8217;m not sure if the game had already shipped by that point&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-yuhong-bao odd alt thread-even depth-1" id="comment-1232344">
				<div id="div-comment-1232344" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Yuhong+Bao' rel='external nofollow' class='url'>Yuhong Bao</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160328-00/?p=93204#comment-1232344">
			April 4, 2016 at 5:13 pm</a>		</div>

		<p>This also reminds me of real mode paging where hardware interrupt handlers has to be page locked.</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

