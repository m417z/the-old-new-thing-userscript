<html>
<head>
<title>What is the HINSTANCE passed to CreateWindow and RegisterClass used for?</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>What is the HINSTANCE passed to CreateWindow and RegisterClass used for?</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>April 18, 2005 / year-entry #96</td></tr>
<tr><td><b>Tags:</b></td><td>code</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20050418-59/?p=35873</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>10</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">One of the less-understood parameters to the CreateWindow function and the RegisterClass function is the HINSTANCE (either passed as a parameter or as part of the WNDCLASS structure). The window class name is not sufficient to identify the class uniquely. Each process has its own window class list, and each entry in the window class...</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>
One of the less-understood parameters to
<a HREF="http://msdn.microsoft.com/library/en-us/winui/winui/windowsuserinterface/windowing/windows/windowreference/windowfunctions/createwindow.asp">
the <code>CreateWindow</code> function</a>
and
<a HREF="http://msdn.microsoft.com/library/en-us/winui/winui/windowsuserinterface/windowing/windowclasses/windowclassreference/windowclassfunctions/registerclass.asp">
the <code>RegisterClass</code> function</a>
is the <code>HINSTANCE</code> (either passed as a parameter
or as part of
<a HREF="http://msdn.microsoft.com/library/en-us/winui/winui/windowsuserinterface/windowing/windowclasses/windowclassreference/windowclassstructures/wndclass.asp">
the <code>WNDCLASS</code> structure</a>).
</p>
<p>
The window class name is not sufficient to identify the class uniquely.
Each process has its own window class list,
and each entry in the window class list consists of an instance handle
and a class name.
For example, here's what the window class list might look like if a
program has two DLLs, both of which register a class name "MyClass",
passing the DLL's handle as the <code>HINSTANCE</code>.
</p>
<table>
<tr>
<th></th>
<th>HINSTANCE</th>
<th>Class name</th>
</tr>
<tr>
<td>1.</td>
<td>USER32.DLL</td>
<td>Static</td>
</tr>
<tr>
<td>2.</td>
<td>USER32.DLL</td>
<td>Button</td>
</tr>
<tr>
<td>3.</td>
<td>USER32.DLL</td>
<td>Listbox</td>
</tr>
<tr>
<td>4.</td>
<td>USER32.DLL</td>
<td>Combobox</td>
</tr>
<tr>
<td>5.</td>
<td>USER32.DLL</td>
<td>Edit</td>
</tr>
<tr>
<td>6.</td>
<td>A.DLL</td>
<td>MyClass</td>
</tr>
<tr>
<td>7.</td>
<td>B.DLL</td>
<td>MyClass</td>
</tr>
</table>
<p>
When it comes time to create a window, each module then passes
its own <code>HINSTANCE</code> when creating the window,
and the window manager uses the combination of the instance handle
and the class name to look up the class.
</p>
<pre>
CreateWindow("MyClass", ..., hinstA, ...); // creates class 6
CreateWindow("MyClass", ..., hinstB, ...); // creates class 7
CreateWindow("MyClass", ..., hinstC, ...); // fails
</pre>
<p>
This is why it is okay if multiple DLLs all register a class
called "MyClass"; the instance handle is used to tell them apart.
</p>
<p>
There is an exception to the above rule, however.
If you pass the <code>CS_GLOBALCLASS</code> flag when registering
the class, then the window manager will ignore the instance handle
when looking for your class.  All of the USER32 classes are registered
as global.  Consequently, all of the following calls create the
USER32 edit control:
</p>
<pre>
CreateWindow("edit", ..., hinstA, ...);
CreateWindow("edit", ..., hinstB, ...);
CreateWindow("edit", ..., hinstC, ...);
</pre>
<p>
If you are registering a class for other modules to use in
dialog boxes, you need to register as <code>CS_GLOBALCLASS</code>,
because as we saw earlier
<a HREF="http://blogs.msdn.com/oldnewthing/archive/2005/03/30/403711.aspx">
the internal <code>CreateWindow</code> call performed during dialog
box creation to create the controls</a>
passes the dialog's <code>HINSTANCE</code> as the
<code>HINSTANCE</code> parameter.
Since the dialog instance handle is typically the DLL that is
creating the dialog
(since
<a HREF="http://blogs.msdn.com/oldnewthing/archive/2005/03/29/403298.aspx">
that same <code>HINSTANCE</code> is used to look up the template</a>),
failing to register with the <code>CS_GLOBALCLASS</code> flag
means that the window class lookup will not find the class
since it's registered under the instance handle of the DLL that
provided the class, not the one that is using it.
</p>
<p>
In 16-bit Windows, the instance handle did other things, too,
but they are no longer relevant to Win32.
</p>
<p>
<a HREF="http://www.experts-exchange.com/Programming/Programming_Platforms/Win_Prog/Q_20331499.html">
A common mistake</a> is to pass the
<code>HINSTANCE</code> of some other module
(typically, the primary executable)
when registering a window class.
Now that you understand what the
<code>HINSTANCE</code> is used for,
you should be able to
explain the consequences of registering a class with the wrong
<code>HINSTANCE</code>.</p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (10)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-271233">
				<div id="div-comment-271233" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">waleri</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050418-59/?p=35873#comment-271233">
			April 18, 2005 at 10:01 am</a>		</div>

		<p>MSDN says otherwise:</p>
<p>ref: <a rel="nofollow" target="_new" href="http://msdn.microsoft.com/library/default.asp?url=/library/en-us/winui/winui/windowsuserinterface/windowing/windows/windowreference/windowfunctions/createwindow.asp" rel="nofollow">http://msdn.microsoft.com/library/default.asp?url=/library/en-us/winui/winui/windowsuserinterface/windowing/windows/windowreference/windowfunctions/createwindow.asp</a></p>
<p>In your own scratch program you pass HINSTANCE received as an argument in WinMain for both registering and creating class.</p>
<p>ref: <a rel="nofollow" target="_new" href="http://blogs.msdn.com/oldnewthing/archive/2003/07/23/54576.aspx" rel="nofollow">http://blogs.msdn.com/oldnewthing/archive/2003/07/23/54576.aspx</a></p>
<p>Am I missing something?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-271243">
				<div id="div-comment-271243" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">waleri</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050418-59/?p=35873#comment-271243">
			April 18, 2005 at 10:01 am</a>		</div>

		<p>errata:</p>
<p>&quot;&#8230;for both registering and creating class&quot; should read &quot;..for both registering class and creating window&quot;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-271273">
				<div id="div-comment-271273" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">david</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050418-59/?p=35873#comment-271273">
			April 18, 2005 at 11:35 am</a>		</div>

		<p>On a related note, what should I pass as the class name if I want to use CreateWindowEx to create a dialog box? For various reasons I don&#8217;t want to use the default functions but I can&#8217;t seem to find a class name it&#8217;s happy with!</p>
<p>Very helpful series of articles though :-) Thanks!</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-cornedbee odd alt thread-odd thread-alt depth-1" id="comment-271293">
				<div id="div-comment-271293" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">CornedBee</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050418-59/?p=35873#comment-271293">
			April 18, 2005 at 12:14 pm</a>		</div>

		<p>MSDN says:</p>
<p>hInstance<br />
<br />    [in] Windows 95/98/Me: Handle to the instance of the module to be associated with the window.</p>
<p>    Windows NT/2000/XP: This value is ignored.</p>
<p>So for 9x this hold true. For NT, then, I wonder how classes get separated there. What happens in NT if two modules register the same class name?</p>
<p>And as for the scratch program, that&#8217;s OK. What Raymond meant with the common mistake is that you should always pass the HINSTANCE of the code you&#8217;re in. The scratch program is always in the main EXE, so it should pass the HINSTANCE of the main EXE as well.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-oldnewthing bypostauthor even thread-even depth-1" id="comment-271303">
				<div id="div-comment-271303" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Raymond+Chen+-+MSFT' rel='external nofollow' class='url'>Raymond Chen - MSFT</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050418-59/?p=35873#comment-271303">
			April 18, 2005 at 12:52 pm</a>		</div>

		<p>CornedBee: That&#8217;s a doc bug; I&#8217;ve submitted a correction. All versions of Windows have always used the HINSTANCE to identify the class.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-mike-dimmick odd alt thread-odd thread-alt depth-1" id="comment-271313">
				<div id="div-comment-271313" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Mike+Dimmick' rel='external nofollow' class='url'>Mike Dimmick</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050418-59/?p=35873#comment-271313">
			April 18, 2005 at 1:10 pm</a>		</div>

		<p>David: IIRC, IsDialogMessage is perfectly happy with windows that are not created via CreateDialog. The answer is therefore &#8216;any class you like.&#8217;</p>
<p>Raymond has made many, many posts on the behaviour of the dialog manager and modal loops; if you read those posts you should be able to work out how to emulate the dialog&#8217;s window procedure.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-271333">
				<div id="div-comment-271333" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Robert</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050418-59/?p=35873#comment-271333">
			April 18, 2005 at 7:54 pm</a>		</div>

		<p>&quot;Windows NT/2000/XP: This value is ignored.&quot;</p>
<p>The MSDN doc for CreateWindow also incorrectly states that if the x parameter is set to CW_USEDEFAULT, the system ignores the y parameter. What really happens is described here:</p>
<p><a rel="nofollow" target="_new" href="http://msdn.microsoft.com/library/en-us/dnwui/html/msdn_styles32.asp" rel="nofollow">http://msdn.microsoft.com/library/en-us/dnwui/html/msdn_styles32.asp</a></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-271343">
				<div id="div-comment-271343" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ben Cooke</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050418-59/?p=35873#comment-271343">
			April 19, 2005 at 1:23 am</a>		</div>

		<p>I one wrote a program &#8212; a quick and dirty one, of course &#8212; that created a window class and a window in an awkward place where a HINSTANCE wasn&#8217;t readily available. I passed them in as zero, and it appeared to work. Of course, I only ever ran this program on my Windows 2000 machine, so who knows what it would do elsewhere.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-271353">
				<div id="div-comment-271353" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Chris Becke</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050418-59/?p=35873#comment-271353">
			April 19, 2005 at 4:21 am</a>		</div>

		<p>Passing NULL or 0 as an HINSTANCE on Windows NT usually is interpreted to mean GetModuleHandle() &#8211; i.e. NT uses the apps HINSTANCE.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-415713">
				<div id="div-comment-415713" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blogs.msdn.com/oldnewthing/archive/2006/08/31/733521.aspx' rel='external nofollow' class='url'>The Old New Thing : The dialog class goes under the sneaky name WC_DIALOG</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20050418-59/?p=35873#comment-415713">
			August 31, 2006 at 10:00 am</a>		</div>

		<p>PingBack from <a rel="nofollow" target="_new" href="http://blogs.msdn.com/oldnewthing/archive/2006/08/31/733521.aspx" rel="nofollow">http://blogs.msdn.com/oldnewthing/archive/2006/08/31/733521.aspx</a></p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

