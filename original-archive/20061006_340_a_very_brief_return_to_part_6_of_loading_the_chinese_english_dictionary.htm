<html>
<head>
<title>A very brief return to part 6 of Loading the Chinese/English dictionary</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>A very brief return to part 6 of Loading the Chinese/English dictionary</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>October 6, 2006 / year-entry #341</td></tr>
<tr><td><b>Tags:</b></td><td>code</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20061006-04/?p=29453</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>14</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">Back in Part 6 of the first phase of the "Chinese/English dictionary" series (a series which I intend to get back to someday but somehow that day never arrives), I left an exercise related to the alignment member of the HEADER union. Alignment is one of those issues that people who grew up with a...</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>
Back in
<a HREF="http://blogs.msdn.com/oldnewthing/archive/2005/05/19/420038.aspx">
Part 6 of the first phase of the
"Chinese/English dictionary" series</a>
(a series which I intend to get back to someday but somehow that
day never arrives),
I left an exercise related to the <code>alignment</code> member
of the <code>HEADER</code> union.
</p>
<p>
Alignment is one of those issues that
<a HREF="http://blogs.msdn.com/oldnewthing/archive/2004/09/14/229387.aspx">
people who grew up with a forgiving processor architecture tend to ignore</a>.
In this case, the <code>WCHAR alignment</code> member
ensures that the total size of the <code>HEADER</code> union
is suitably chosen so that a <code>WCHAR</code> can appear
immediately after it.
Since we're going to put characters immediately after the
<code>HEADER</code>, we'd better make sure those characters
are aligned.
If not, then processors that are alignment-sensitive will raise
a <code>STATUS_DATATYPE_MISALIGNMENT</code> exception,
and even processors that are alignment-forgiving will suffer
performance penalties when accessing unaligned data.
</p>
<p>
There are many variations on the alignment trick, some of them
more effective than others.
A common variation is the
<a HREF="http://blogs.msdn.com/oldnewthing/archive/2004/08/26/220873.aspx">
one-element-array trick</a>:
</p>
<pre>
struct HEADER {
 HEADER* m_phdrPrev;
 SIZE_T  m_cb;
 WCHAR   m_rgwchData[1];
};

// you can also use "offsetof" if you included &lt;stddef.h&gt;
#define HEADER_SIZE FIELD_OFFSET(HEADER, m_rgwchData)
</pre>
<p>
We would then use <code>HEADER_SIZE</code> instead of
<code>sizeof(HEADER)</code>.
This technique does make it explicit
that an array of <code>WCHAR</code>s will come after the header,
but it means that the code that wants to allocate a <code>HEADER</code>
needs to be careful to use <code>HEADER_SIZE</code> instead of
the more natural <code>sizeof(HEADER)</code>.
</p>
<p>
A common mistake is to use this incorrect definition for
<code>HEADER_SIZE</code>:
</p>
<pre>
<i>#define HEADER_SIZE (sizeof(HEADER) - sizeof(WCHAR)) // wrong</i>
</pre>
<p>
This incorrect
macro inadvertently commits the mistake it is trying to protect against!
There might be (and indeed, will almost certainly be in this instance)
structure padding after <code>m_rgwchData</code>, which this macro
fails to take into account.
On a 32-bit machine, there will likely be two bytes of padding after
the <code>m_rgwchData</code> in order to bring the total structure
size back to a value that permits another <code>HEADER</code> to appear
directly after the previous one.
In its excitement over dealing with internal padding, the above
macro forgot to deal with trail padding!
</p>
<p>
It is the "array of <code>HEADER</code>s" that makes the original
<code>union</code> trick work.
Since the compiler has to be prepared for the possibility of allocating
an array of <code>HEADER</code>s, it must provide padding at
the end of the <code>HEADER</code> to ensure that the next <code>HEADER</code>
begins at a suitably-aligned boundary.
Yes, the <code>union</code> trick can result in "excess padding",
since the type used for alignment may have less stringent alignment
requirements than the other members of the aggregate,
but better to have too much than too little.
</p>
<p>
<a HREF="http://blogs.msdn.com/oldnewthing/archive/2005/05/19/420038.aspx#420053">
Another minor point</a>
was brought up by commenter Dan McCarty:
"Why is <code>MIN_CBCHUNK</code> set to 32,000 instead of 32K?"
Notice that <code>MIN_CBCHUNK</code> is added to <code>sizeof(HEADER)</code>
before it is rounded up.
If the allocation granularity were 32768, then rounding up the sum to the
nearest multiple would have taken us to 65536.
Nothing wrong with that, but it means that our minimum chunk size is twice as
big as the <code>#define</code> suggests.
(Of course, since in practice
<a HREF="http://blogs.msdn.com/oldnewthing/archive/2003/10/08/55239.aspx">
the allocation granularity is 64KB</a>,
this distinction is only theoretical right now.)</p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (14)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-428363">
				<div id="div-comment-428363" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">dave</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20061006-04/?p=29453#comment-428363">
			October 6, 2006 at 10:34 am</a>		</div>

		<p>I&#8217;m rather fond of the SMB structure, which as far as I can tell, must have been intentionally misaligned.</p>
<p>A typical message starts with a 32-byte header, then a 1-byte &#8216;word count&#8217;, then some number of 2-byte word fields&#8230; all odd-aligned.</p>
<p>Alternatively, if you try and arrange that the message starts on an odd boundary so that those word fields are naturally aligned in the address space, then everything in the header will be misaligned. No win, overall.</p>
<p>(Yeah, I know the real reason why: it was designed &nbsp;in Ye Olde Days when saving 8 bits trumped anything else. &nbsp;Anyone who dealt with RAD50 encoding on various PDP11 operating systems remembers the pain of those days.)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-428393">
				<div id="div-comment-428393" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Carlos</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20061006-04/?p=29453#comment-428393">
			October 6, 2006 at 10:59 am</a>		</div>

		<p>The nicest way to do this is to put a zero length array at the end of the structure but, although it&#8217;s supported by msvc, gcc and C99, it&#8217;s not standard C++.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-428403">
				<div id="div-comment-428403" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Peter Ritchie</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20061006-04/?p=29453#comment-428403">
			October 6, 2006 at 11:03 am</a>		</div>

		<p>Seems like a minor point (RE: MIN_CBHUNK == 32000) but, isn&#8217;t it kind of pointless to add 32000 to a value less than 768 if you&#8217;re expecting to round up to a multiple of 32768?</p>
<p>I&#8217;m assuming that&#8217;s the basis of 32000, with a little breathing room in case something gets added to HEADER. &nbsp;Seems like a &#8220;magic number&#8221; to me; 32768-sizeof(HEADER) would be more clear that you&#8217;re really trying to allocate a minimum of 32768, despite the granularity (and despite it really being 64K making it even more moot).</p>
<div class=post>[<i>I never claimed that my Chinese/English dictionary was &#8220;a model program that sets the standard for all programming projects henceforth.&#8221; I&#8217;m not writing a textbook. This was a program I hacked together for fun and thought people might find it interesting. If you prefer that only book-quality code be posted here, then let me know. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-428423">
				<div id="div-comment-428423" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Adam</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20061006-04/?p=29453#comment-428423">
			October 6, 2006 at 11:53 am</a>		</div>

		<p>But it&#8217;s wise to leave a bit of extra space for malloc() overhead. If you did &quot;32768 &#8211; sizeof(HEADER)&quot; but malloc() reserves, say, 8 bytes before each pointer that it returns to you for bookkeeping purposes (and to keep 8-byte alignment), then each time you allocate one of these on the heap, you&#8217;ve just extended 8 bytes into the next 32k chunk for your 32k allocation. Not clever.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-428433">
				<div id="div-comment-428433" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">asdf</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20061006-04/?p=29453#comment-428433">
			October 6, 2006 at 12:39 pm</a>		</div>

		<p>C99 doesn&#8217;t support 0 length arrays, it supports &quot;flexible array members&quot;:</p>
<p><a rel="nofollow" target="_new" href="http://david.tribble.com/text/cdiffs.htm#C99-fam" rel="nofollow">http://david.tribble.com/text/cdiffs.htm#C99-fam</a></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-428583">
				<div id="div-comment-428583" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">N. Velope</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20061006-04/?p=29453#comment-428583">
			October 7, 2006 at 1:45 am</a>		</div>

		<p>&nbsp;If you used VB6, it would automatically pad the structure so that 2 byte types have an offset inside the structure equal to a multiple of 2 and 4 byte types have a multiple of 4 offset. &nbsp;This only happens in memory &#8211; if you write variables of the type to a file, it takes out the padding.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-428593">
				<div id="div-comment-428593" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blogs.msdn.com/larryosterman' rel='external nofollow' class='url'>Larry Osterman</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20061006-04/?p=29453#comment-428593">
			October 7, 2006 at 2:12 am</a>		</div>

		<p>Dave: The DOS redirector had to run on machines with 256K of RAM. &nbsp;The original redirector was something like 10K of code &#8211; an entire network filesystem in 10K. Think about it. &nbsp;The DOS LanMan redirector was something like 45K and BillG screamed at me for something like 20 minutes over that one.</p>
<p>Also, SMB was designed for an 8 bit processor, on an 8 bit processor, alignment is irrelevant.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-428603">
				<div id="div-comment-428603" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Norman Diamond</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20061006-04/?p=29453#comment-428603">
			October 7, 2006 at 3:54 am</a>		</div>

		<blockquote><p>
  struct HEADER {</p>
<p>  &nbsp;HEADER* m_phdrPrev;</p>
<p>  &nbsp;SIZE_T &nbsp;m_cb;</p>
<p>  &nbsp;WCHAR &nbsp; m_rgwchData[1];</p>
<p>  };
</p></blockquote>
<p>Actually this has sort of the opposite effect of the union member that you used before. &nbsp;Temporarily ignoring some complicating factors, this saves memory by allowing the array of WCHARs to start at the first WCHAR-aligned location. &nbsp;If the array started after the end of the struct, there would have to be enough padding to match the alignment required by the entire struct. &nbsp;This is because trailing padding has to be enough to make the struct size as if it were an element of an array of the same kind of structs. &nbsp;So for example if the pointer required 8 byte alignment and size_t required 4 byte alignment and wchar_t required 2 byte alignment then the array could start after 0 bytes of padding instead of 4 bytes of padding.</p>
<p>(There are complicating factors because SIZE_T doesn&#8217;t have to be size_t, WCHAR_T doesn&#8217;t have to be wchar_t, size_t usually has the same alignment requirements as a pointer and it&#8217;s usually at least as strict as wchar_t, etc. &nbsp;These make it harder to see that the example is a possible example of that effect, but that effect still remains possible.)</p>
<p>But is it really worth doing that&#8230; &nbsp;There are a number of Win32 APIs that return pointers to structures that are defined in this way. &nbsp;Some APIs can be told to return how much memory is really needed before being told to return the contents. &nbsp;Otherwise I&#8217;d probably have got some of these computations wrong too. &nbsp;I haven&#8217;t noticed some xxx_SIZE macros, and FIELD_OFFSET isn&#8217;t exactly standard.</p>
<p>On the other hand, deliberate unalignments in some kinds of data structures is pretty reasonable. &nbsp;Until recently it would take more time to transmit one byte of padding over a network than to do a memory-to-memory move of a buffer to realign a bunch of contents. &nbsp;It still likely takes more time to read a few disk blocks full of padding than to do memory-to-memory moves to unpack their contents.</p>
<blockquote><p>
  If you prefer that only book-quality code be</p>
<p>  posted here, then let me know.
</p></blockquote>
<p>That&#8217;s a very difficult question. &nbsp;Of course no one wants you to write book-quality code without being paid for it. &nbsp;Some of us hate slave labour even when we&#8217;re not writing books. &nbsp;But notice how much MSDN contents are still, um, book-quality when we remember that quite a lot of books are atrociously poor quality too. &nbsp;You&#8217;ve already mentioned that readers sometimes have to copy code out of MSDN without understanding it. &nbsp;Surely there are people who have to copy code out of your blog because MSDN&#8217;s code is too garbagy and some of your articles provide fixes. &nbsp;So this is a tough question.</p>
<p>Maybe if your company could be persuaded to hire some competent programmers to fix MSDN articles, there would be less need for book-quality code in blogs. &nbsp;(But if this means that competent programmers would be pulled off of Vista then don&#8217;t do it. &nbsp;Vista still needs a few more years of work by competent programmers before it will be ready for release.)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-428783">
				<div id="div-comment-428783" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">steveg</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20061006-04/?p=29453#comment-428783">
			October 9, 2006 at 9:32 am</a>		</div>

		<blockquote><p>
  Maybe if your company could be persuaded to hire some competent programmers to fix MSDN articles
</p></blockquote>
<p>Norman, just out of curiosity, which IT companies get your tick of approval, or are they all the same in your book?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-429153">
				<div id="div-comment-429153" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Norman Diamond</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20061006-04/?p=29453#comment-429153">
			October 9, 2006 at 9:41 pm</a>		</div>

		<p>Monday, October 09, 2006 9:32 AM by steveg</p>
<blockquote><p>
  Norman, just out of curiosity, which IT</p>
<p>  companies get your tick of approval
</p></blockquote>
<p>In the current environment that&#8217;s pretty difficult to answer. &nbsp;There still exist some companies that accept bug reports without requiring paid support incidents to be opened first. &nbsp;There still exist some companies that replace defective products with working ones. &nbsp;But in the current environment this pretty much happens only with hardware defects. &nbsp;For example one vendor replaced an entire note PC because the video chip was defective but they didn&#8217;t offer to replace Windows 95 by Windows NT4 SP3.</p>
<p>In ancient history hardware vendors often supplied their own operating systems. &nbsp;Some of them accepted bug reports without requiring paid support incidents to be opened first. &nbsp;Some were glad to make fixes. &nbsp;Some of them were glad to deliver fixes. &nbsp;That era is gone now. &nbsp;For those of us who remember that era, we don&#8217;t even make an active decision to compare it to the present, it just comes automatically.</p>
<p>Nonetheless I think everyone knows that MSDN&#8217;s sample code still needs a lot of fixing. &nbsp;Some of the text too. &nbsp;Even Mr. Chen has said so in the past. &nbsp;In my particular sentence that you quoted, my point was that a tech writer with knowledge of English isn&#8217;t enough, it&#8217;s necessary to fix the code too.</p>
<p>Once upon a time it was possible to answer some questions with &quot;RTFM&quot;. &nbsp;When TFM is broken that isn&#8217;t a valid answer any more.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-429203">
				<div id="div-comment-429203" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Norman Diamond</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20061006-04/?p=29453#comment-429203">
			October 10, 2006 at 12:00 am</a>		</div>

		<p>Sorry for two in a row, but I&#8217;ve just read that there was a period where Microsoft thought differently about quality.</p>
<p><a rel="nofollow" target="_new" href="http://joelonsoftware.com/articles/fog0000000043.html" rel="nofollow">http://joelonsoftware.com/articles/fog0000000043.html</a></p>
<blockquote><p>
  The schedule was merely a checklist of</p>
<p>  features waiting to be turned into bugs. In</p>
<p>  the post-mortem, this was referred to as</p>
<p>  &quot;infinite defects methodology&quot;.
</p></blockquote>
<p>></p>
<blockquote><p>
  To correct the problem, Microsoft universally</p>
<p>  adopted something called a &quot;zero defects</p>
<p>  methodology&quot;. [&#8230;] Actually, &quot;zero defects&quot;</p>
<p>  meant that at any given time, the highest</p>
<p>  priority is to eliminate bugs before writing</p>
<p>  any new code.
</p></blockquote>
<p>The adoption of that methodology and the return to the former methodology must have occured during a pretty short time interval. &nbsp;I wonder why it didn&#8217;t stick?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-430933">
				<div id="div-comment-430933" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Norman Diamond</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20061006-04/?p=29453#comment-430933">
			October 17, 2006 at 4:27 am</a>		</div>

		<p>Here&#8217;s an example of MSDN code which would benefit from being replaced by textbook quality code.</p>
<p><a href="http://msdn.microsoft.com/library/default.asp?url=/library/en-us/memory/base/reserving_and_committing_memory.asp" target="_new" rel="nofollow">http://msdn.microsoft.com/library/default.asp?url=/library/en-us/memory/base/reserving_and_committing_memory.asp</a></p>
<p>This is one example that would benefit from being fixed by someone competent at Win32 programming as well as English. &nbsp;Notice the use of LPTSTR variables. &nbsp;Notice how little effort will be needed to make it compile in a Unicode environment such as the default in Visual Studio 2005: &nbsp;it&#8217;s only necessary to wrap some strings in _T() macros and leave some other strings unwrapped. &nbsp;Notice that the resulting compiled program will still yield incorrect results.</p>
<div class="post">[<i>Why not use the feedback link at the bottom of the MSDN page? No need to keep me informed of every piece of MSDN feedback you submit. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-431323">
				<div id="div-comment-431323" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Norman Diamond</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20061006-04/?p=29453#comment-431323">
			October 17, 2006 at 9:43 pm</a>		</div>

		<p>&gt; Why not use the feedback link at the bottom</p>
<p>&gt; of the MSDN page?</p>
<p>The last time I did that, Microsoft sent a polite response saying that your company had received some headers from my submission but had tossed everything that I typed into the input controls in the feedback form.</p>
<p>The previous two times I did that, Microsoft sent responses saying that I had purchased the web site <a href="http://msdn.microsoft.com/library" target="_new" rel="nofollow">http://msdn.microsoft.com/library</a> outside of North America and therefore only Microsoft Japan would be able to support the English-language MSDN library.</p>
<p>(Hmmmm. &nbsp;If MSDN were fixed and if programmers relied on MSDN then there wouldn&#8217;t be enough appcompat work to do any more. &nbsp;Then would Microsoft allow the same bug fixing talent to be applied to Windows itself or would &#8230; I don&#8217;t want to think about it.)</p>
<div class="post">[<i>Okay, well I don&#8217;t see how that means that this is the right place to report your frustration. Perhaps I should just create a &#8220;Norman Diamond complains about MSDN&#8221; thread so you can post your complaints there, at least they&#8217;ll all be in one place rather than scattered all over the place. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-431363">
				<div id="div-comment-431363" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Norman Diamond</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20061006-04/?p=29453#comment-431363">
			October 18, 2006 at 2:31 am</a>		</div>

		<p>&gt; Perhaps I should just create a &#8220;Norman</p>
<p>&gt; Diamond complains about MSDN&#8221; thread</p>
<p>Don&#8217;t bother. &nbsp;Some time ago I gained an impression that someone at Microsoft was interested in getting bugs fixed in MSDN, but I should learn better.</p>
<p>Maybe Microsoft is dogfooding from MSDN as it does with Visual Studio on Vista. &nbsp;Maybe we can see what kind of code gets into Windows. &nbsp;Don&#8217;t touch a thing, just let it remain visible.</p>
<p>One thing I still can&#8217;t figure out though. &nbsp;When programmers outside of Microsoft read MSDN, should we obey the contract or just ignore it? &nbsp;Sometimes your blog contradicts MSDN but no sensible person wants you do slave labour to convert everything to textbook quality code. &nbsp;So what should we do, just ignore MSDN and join those who never read it?</p>
<div class="post">[<i>I leave each person to make their own decision. I&#8217;m not going to tell you what to do. (P.S., don&#8217;t tell me what your decision is; I&#8217;m no longer interested.) -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

