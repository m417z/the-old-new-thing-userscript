<html>
<head>
<title>The conversations backstage at computer Go tournaments</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>The conversations backstage at computer Go tournaments</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>July 2, 2007 / year-entry #238</td></tr>
<tr><td><b>Tags:</b></td><td>other</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20070702-01/?p=26183</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>7</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">Steve Rowe linked to an essay on why computers can't play Go well even though they've mastered other "difficult" games like chess. I was reminded of a description I received of what happens backstage at computer Go tournaments (i.e., tournaments that pit Go-playing computers against each other). ("Backstage" is a bit of a misnomer, of...</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p> <a href="http://blogs.msdn.com/steverowe/"> Steve Rowe</a> <a href="http://blogs.msdn.com/steverowe/archive/2007/06/30/why-computers-can-t-play-go.aspx"> linked to</a> <a href="http://www.timesonline.co.uk/tol/comment/columnists/ben_macintyre/article2002699.ece"> an essay on why computers can't play Go well</a> even though they've mastered other "difficult" games like chess. I was reminded of a description I received of what happens backstage at computer Go tournaments (i.e., tournaments that pit Go-playing computers against each other). ("Backstage" is a bit of a misnomer, of course; since the contestants are computers, you can talk all you want as loud as you want without worrying about distracting the players.) </p>
<p> At computer Go tournaments, the programmers are like parents watching their children compete in a hockey game where they've only just barely learned how to skate. It's not so much a matter of who plays better as it is a matter of who sucks less. One programmer will lean over to the other and say something like "I hope my program realizes its left-hand-side is vulnerable before your program takes advantage of it." </p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (7)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-521133">
				<div id="div-comment-521133" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Amblis</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070702-01/?p=26183#comment-521133">
			July 2, 2007 at 4:32 pm</a>		</div>

		<p>What Go needs is a team of programmers versed in multi-threaded programming techniques. Unleash them on the next-generation super-computers; <a rel="nofollow" target="_new" href="http://www.vnunet.com/vnunet/news/2192893/ibm-sun-microsystems-show" rel="nofollow">http://www.vnunet.com/vnunet/news/2192893/ibm-sun-microsystems-show</a></p>
<p>And maybe they can do something impressive using neural-networks and all of that storage space;</p>
<p><a rel="nofollow" target="_new" href="http://blogs.guardian.co.uk/technology/archives/2007/06/26/supercomputer_wars_kick_off_again.html" rel="nofollow">http://blogs.guardian.co.uk/technology/archives/2007/06/26/supercomputer_wars_kick_off_again.html</a></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-521173">
				<div id="div-comment-521173" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.highprogrammer.com/alan/' rel='external nofollow' class='url'>Alan De Smet</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070702-01/?p=26183#comment-521173">
			July 2, 2007 at 7:02 pm</a>		</div>

		<p>Amblis: The problem isn&#8217;t lack of knowledge of multi-threaded programming, or lack of access to high end machines. &nbsp;Deep Blue (the Chess computer that became the first machine to beat the world champion human player) did its work in a massively parallel way. &nbsp;The problem is that most computer game AI tries to solve the problem through a brute force search of the game space (and indeed, Deep Blue did just that). &nbsp;With Chess, the search space is approachable.</p>
<p>Given the numbers in the article, we&#8217;ll assume that a Chess player has about 35 moves at any given moment. &nbsp;A typical game will last 40 or fewer moves. &nbsp;So a computer is looking at about 40^35 moves to consider. &nbsp;That&#8217;s about 10^56 moves. &nbsp;A Go player has, on average, about 250 possible moves to consider. &nbsp;And a typical Go game can easily go 200 moves. &nbsp;So now we&#8217;re fasting 200^250 moves to consider. &nbsp;That&#8217;s about 10^575. &nbsp;That&#8217;s insanely harder than Chess. &nbsp;Even assuming computer power doubles yearly, we&#8217;re talking thousands of years before a computer can brute force Go in the same way they brute force Chess.</p>
<p>As a result, Go playing programs have to be more clever. &nbsp;That have to look for an identify patterns and also determine how the sub-board patterns will interact as they grow. &nbsp;Generally speaking, this means that the program play in a much more &quot;human&quot; way. &nbsp; But that&#8217;s really hard. &nbsp;A true Go master is the sum of all of his knowledge, and getting that knowledge out of his head is difficult, if not impossible.</p>
<p>As for neural-networks, maybe. &nbsp;They&#8217;re not a magical ability to can toss in and everything works. &nbsp;You need to train them. &nbsp;For a game as complex as Go, we&#8217;re probably talking a training set of millions, if not billions of games. &nbsp;And who is going to play those millions of games against the system as it trains? &nbsp;You might have some luck online, but now you&#8217;re paying for a hugely powerful computer, hoping people will play it, despite the fact that it will play terrible, random, pointless games for a long, long time.</p>
<p>We might eventually develop a computer that can play Go on the level of the masters, but if we do my money is on the basis being programmers teaching it one concept and pattern at a time. &nbsp;It&#8217;s slow going, but progress is being made. &nbsp;And the answer isn&#8217;t going to be &quot;just throw more processor power at it.&quot;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-521223">
				<div id="div-comment-521223" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">A Tykhyy</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070702-01/?p=26183#comment-521223">
			July 3, 2007 at 1:23 am</a>		</div>

		<p>Most people point out the difference in search space size between chess and Go, but few mention the difficulties in constructing a tolerably good evaluation function for Go. In chess, the evaluation function is quite simple, essentially weighted sum of pieces owned with some tactical considerations (like doubled pawns, isolated pawns, center control etc) thrown in, and very fast to calculate. In Go, evaluation is much more complex, and this is much harder on computer Go programmers than mere size of search space, because efficient minimax pruning algorithms on which Deep Blue relies become practically useless.</p>
<p>The victory condition in chess (checkmate) is also simple to evaluate. Meanwhile, even writing a program which *scores* finished Go games accurately is quite a challenge, never mind determining whether a given game is actually finished.</p>
<p>As concerns master-level (or even strong amateur-level) computer Go programs, being both a programmer and a 2 dan amateur, I&#8217;m not holding my breath. Anecdotal evidence suggests that there is a &quot;curse&quot; on this problem, i.e. those programmers whose programs begin to approach about 6-7 kyu level, abandon their projects. By the way, the ranks awarded to programs are a joke, commonly 4-5 ranks stronger than the program actually plays.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-521303">
				<div id="div-comment-521303" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Anonymous Coward</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070702-01/?p=26183#comment-521303">
			July 3, 2007 at 10:42 am</a>		</div>

		<p>Wow, now I know why Raymond considers giving up blogging.</p>
<p>Amblis: seriously dude, did you read the article? &nbsp;Alan has responded to your post, but everything he has said is pretty much directly from the article. &nbsp;Your first comment shows that you know nothing about AI, game strategy, and simple mathematics (you really think multithreading is the solution to the brute force problem).</p>
<p>Now I see exactly what a Win32 poser is like. &nbsp;Raymond writes the article and Win32 poser doesn&#8217;t really bother to read it. &nbsp;But, that won&#8217;t stop Win32 poser from writing the oh-so-simple solution for what needs to be done.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-521373">
				<div id="div-comment-521373" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Amblis</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070702-01/?p=26183#comment-521373">
			July 3, 2007 at 1:22 pm</a>		</div>

		<p>My post above was made in jest. Thank you for pointing out the obvious.</p>
<p>You two should be ashamed for even having replied to me (and not the original post).</p>
<p>To Raymond I apologize for having been lead into doing the same (and having turned this once depressingly empty space into a toxic bath because of my failed attempt to lighten the mood).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-521473">
				<div id="div-comment-521473" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">alex.r.</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070702-01/?p=26183#comment-521473">
			July 3, 2007 at 6:56 pm</a>		</div>

		<p>From the first article Amblis linked :</p>
<p>&quot;Supercomputers target scientific and modelling applications such as weather forecasting, drug testing and gnome mapping.&quot;</p>
<p>Surely, a computer that can accomplish the incredibly complex task of &quot;gnome mapping&quot; ought to be able to play a decent game of Go?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-521503">
				<div id="div-comment-521503" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">A_me!</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20070702-01/?p=26183#comment-521503">
			July 3, 2007 at 7:35 pm</a>		</div>

		<p>@alex.r</p>
<p>Sorry for the facetiousness, but I think computers with those skills would be more apt to become great masters of the game of Gno.</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

