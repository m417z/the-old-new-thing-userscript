<html>
<head>
<title>What makes RealGetWindowClass so much more real than GetClassName?</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>What makes RealGetWindowClass so much more real than GetClassName?</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>December 31, 2010 / year-entry #359</td></tr>
<tr><td><b>Tags:</b></td><td>code</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20101231-00/?p=11863</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>7</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">There's Get­Class­Name and then there's Real­Get­Window­Class. What makes Real­Get­Window­Class more real? Recall from last time that the Real... functions were added to support Windows accessibility. The goal with Real­Get­Window­Class is to help accessibility tools identify what kind of window it is working with, even if the application did a little disguising in the form of...</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>
There's
<code>Get&shy;Class&shy;Name</code>
and then there's
<code>Real&shy;Get&shy;Window&shy;Class</code>.
What makes
<code>Real&shy;Get&shy;Window&shy;Class</code> more real?
</p>
<p>
Recall from last time that
<a HREF="http://blogs.msdn.com/b/oldnewthing/archive/2010/12/30/10110077.aspx">
the <code>Real...</code> functions were added to support
Windows accessibility</a>.
The goal with <code>Real&shy;Get&shy;Window&shy;Class</code> is to help
accessibility tools identify what kind of window it is working with,
even if the application did a little disguising in the form of
<a HREF="http://msdn.microsoft.com/en-us/library/ms633569.aspx#winproc_superclassing">
superclassing</a>.
</p>
<p>
If you ask
<code>Real&shy;Get&shy;Window&shy;Class</code> for the class name of a window,
it digs through all the superclassing and returns the name of the
base class (if the base class is one of the standard window manager classes).
For example, if your application superclassed the <code>button</code>
class,
a call to <code>Get&shy;Class&shy;Name</code> would return
<code>Awesome&shy;Button</code>,
but a call to
<code>Real&shy;Get&shy;Window&shy;Class</code> would return <code>button</code>.
Returning the underlying window class allows accessibility tools
to know that the user is interacting with some type of button control
(albeit a customized one),
so that it can adjust the interaction to something appropriate
for buttons.
Without <code>Real&shy;Get&shy;Window&shy;Class</code>,
the accessibility tool would just see <code>Awesome&shy;Button</code>,
and it would probably shrug and say,
"I have no idea what a <code>Awesome&shy;Button</code> is."
</p>
<p>
(I guess you could have the accessibility tool do a
<code>strstr</code> for <code>button</code>,
but then it would be faked out by classes like
<code>Button&shy;Bar</code> or applications which superclass
a button but call it something completely different like
<code>Awesome&shy;Radio</code>.)
</p>
<p>
If you read the <code>winuser.h</code> header file,
you can see a comment next to the
<code>Real&shy;Get&shy;Window&shy;Class</code>
function:
</p>
<pre>
/*
 * This gets the name of the window TYPE, not class.  This allows us to
 * recognize ThunderButton32 et al.
 */
</pre>
<p>
What is <code>Thunder&shy;Button32</code>?
</p>
<p>
<b>Thunder</b> was
<a HREF="http://www.forestmoon.com/birthofvb/birthofvb.html">
the code name for Visual Basic&nbsp;1.0</a>.
Visual Basic superclassed all the standard Windows controls
and called its superclassed version <code>Thunder&shy;Whatever</code>.</p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (7)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-885353">
				<div id="div-comment-885353" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Alex B.</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101231-00/?p=11863#comment-885353">
			December 31, 2010 at 8:23 am</a>		</div>

		<p>Thunder! Thunder! Thunder! ThunderButton32!</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-885373">
				<div id="div-comment-885373" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">configurator</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101231-00/?p=11863#comment-885373">
			December 31, 2010 at 8:41 am</a>		</div>

		<p>Then shouldn&#39;t it be called GetWindowBaseClass, then? or GetWindowTypeNotClassEvenIfItsSubclassedBySomethingLikeThunderButton32?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-885433">
				<div id="div-comment-885433" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">James</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101231-00/?p=11863#comment-885433">
			December 31, 2010 at 9:42 am</a>		</div>

		<p>The Real&#8230; names are horrible. &nbsp;The base class name isn&#39;t any more &quot;real&quot; than the superclassed name; they&#39;re both valid names.</p>
<p>I know it&#39;s too late to change now, but maybe adding a more sensible alias via #define would be less confusing. (It&#39;d be a leaky abstraction though since it wouldn&#39;t help anyone trying to get it through GetProcAddress.)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-885473">
				<div id="div-comment-885473" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">kero</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101231-00/?p=11863#comment-885473">
			December 31, 2010 at 10:15 am</a>		</div>

		<p>But Raymond, why RealGetWindowClass dsn&#39;t work with comctl32.dll v.6 ??</p>
<div class="post">[<i>The information necessary to answer this question is already present in the article. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-885503">
				<div id="div-comment-885503" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Henning Makholm</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101231-00/?p=11863#comment-885503">
			December 31, 2010 at 2:49 pm</a>		</div>

		<p>@kero: Specifically &quot;(if the base class is one of the standard window manager classes)&quot;. Since there is no static superclassing chain that can be traversed in a standard manner, RealGetWindowClass must somehow depend on the cooperation of the base class &#8212; for example, that the standard window manager class handlers for WM_NCCREATE set some hidden field that RealGetwindowClass can later inspect.</p>
<p>(Of course the window manager might have exposed functionality to set this hidden field, such that comctl32 could use it, but it would probably just have been abused by everone to the point of being useless for its original purpose then).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-885553">
				<div id="div-comment-885553" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">640k</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101231-00/?p=11863#comment-885553">
			January 1, 2011 at 12:24 pm</a>		</div>

		<p>Using accessibility isn&#39;t abusing the system. It could have been implemented to work more well.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-885593">
				<div id="div-comment-885593" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">woodswan</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20101231-00/?p=11863#comment-885593">
			January 2, 2011 at 12:13 am</a>		</div>

		<p>May I report that Thunder is the main product name of a Chinese IT company, called xunlei. Such coincidence is always making me amaze that programmers not only like reinventing wheels, but also naming things.</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

