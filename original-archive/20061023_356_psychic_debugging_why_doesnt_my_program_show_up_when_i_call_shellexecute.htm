<html>
<head>
<title>Psychic debugging: Why doesn't my program show up when I call ShellExecute?</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>Psychic debugging: Why doesn&#8217;t my program show up when I call ShellExecute?</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>October 23, 2006 / year-entry #357</td></tr>
<tr><td><b>Tags:</b></td><td>code</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20061023-04/?p=29293</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>22</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">This question came in from a customer (paraphrased): If I run my program from the command prompt, it works great, but if I run it from my launcher via ShellExecuteEx, it never appears. See how good your psychic powers are at solving this problem before I give you the second question that gives away the...</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>
This question came in from a customer (paraphrased):
</p>
<blockquote CLASS=q><p>
If I run my program from the command prompt, it works great,
but if I run it from my launcher via <code>ShellExecuteEx</code>,
it never appears.
</p>
</blockquote>
<p>
See how good your psychic powers are at solving this problem
before I give you the second question that gives away the answer.
</p>
<p>
Any luck?
</p>
<p>
Here's a second question from a different source (but which
coincidentally came in the same day).
</p>
<blockquote CLASS=q><p>
I'm trying to use <code>ShellExecute</code> to open a document.
The function succeeds (returns a value greater than 32),
but I don't get anything on the screen.
</p>
<pre>
if (ShellExecute(Handle, NULL, FileName, NULL,
    NULL, NULL) &lt;= (HINSTANCE)32) ...
</pre>
</blockquote>
<p>
The problem the second person is having lies in the last parameter
to the <code>ShellExecute</code> function.
It's <code>nShowCmd</code>, which is supposed to be an
<code>SW_*</code> value, but which this person is passing as
<code>NULL</code>.
It so happens, that the value zero corresponds to
<code>SW_HIDE</code>, which explains why the program doesn't
appear: You told it to run hidden!
</p>
<p>
Now go back to the first problem.
Do you see what the person most likely did wrong?
The code probably went like this:
</p>
<pre>
SHELLEXECUTEINFO sei = { sizeof(sei) };
sei.hwnd = hwnd;
sei.lpVerb = TEXT("open");
sei.lpFile = pszFile;
ShellExecuteEx(&amp;sei);
</pre>
<p>
Since the <code>sei.nShow</code> member was not explicitly
set,  the value was implicitly set to zero by the incomplete
initializer.
And as we noted above, zero means <code>SW_HIDE</code>.
</p>
<p>
It turns out my psychic debugging was correct.
That was indeed the source of the first person's problem.
Now you can use your psychic powers, too.</p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (22)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-433013">
				<div id="div-comment-433013" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Andrei</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20061023-04/?p=29293#comment-433013">
			October 23, 2006 at 10:20 am</a>		</div>

		<p>My favourite mistake I have tried to avoid!</p>
<p>This is the reason to avoid zeroes in enum&#8217;s.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-433033">
				<div id="div-comment-433033" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Doug</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20061023-04/?p=29293#comment-433033">
			October 23, 2006 at 11:24 am</a>		</div>

		<p>I must assume your customers don&#8217;t fit the category of professional programmers.</p>
<p>Professional: &quot;Hmm, it doesn&#8217;t work. &nbsp;Let&#8217;s look at the code and check the functions we are calling.&quot;</p>
<p>Amateur: &quot;Hmm, it doesn&#8217;t work. &nbsp;Must make a support call.&quot;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-433073">
				<div id="div-comment-433073" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://jasonhaley.com/blog/archive/2006/10/23/137488.aspx' rel='external nofollow' class='url'>Jason Haley</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20061023-04/?p=29293#comment-433073">
			October 23, 2006 at 12:42 pm</a>		</div>

		
		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-433083">
				<div id="div-comment-433083" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Tim Smith</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20061023-04/?p=29293#comment-433083">
			October 23, 2006 at 1:49 pm</a>		</div>

		<p>Doug, you couldn&#8217;t be further from the truth.</p>
<p>Professional: &quot;Hmm, it doesn&#8217;t work. &nbsp;This operating system is so buggy. &nbsp;Let me try this, I bet that will work.&quot;</p>
<p>Then again, I wouldn&#8217;t exactly call those people professionals. &nbsp;But I run into programmers who never assume it is their fault.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-433103">
				<div id="div-comment-433103" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Mike Dunn</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20061023-04/?p=29293#comment-433103">
			October 23, 2006 at 1:55 pm</a>		</div>

		<p>I often see this on message boards &#8211; folks who use NULL or zero for parameters they don&#8217;t (yet) understand, and expect that the API will &quot;do the right thing&quot; and use good defaults. The trouble is, that works in <em>some</em> cases (like the lpDirectory param to ShellExec) but not others (like nShowCmd).</p>
<p>A quick RTFMsdn would solve the problem, and hopefully the person learns this after getting their answer of &quot;you need to set nShowCmd correctly, see the docs for the legal values&quot;.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-433133">
				<div id="div-comment-433133" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Problem solved</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20061023-04/?p=29293#comment-433133">
			October 23, 2006 at 4:29 pm</a>		</div>

		<p>If SW_SHOW would be 0 and SW_HIDE would be 5 this problem wouldn&#8217;t exist. NULL/0 should always be a safe default.</p>
<div class=post>[<i>I&#8217;m surprised. I would have expected that if SW_HIDE were 5 people would say &#8220;What a phenomenally stupid idea. The value for SW_HIDE should obviously be zero since zero means FALSE which means &#8216;hide&#8217; and nonzero means TRUE which means &#8216;show&#8217; (and the precise nonzero value indicates what type of show). Giving &#8216;hide&#8217; the bizarro value of 5 just shows what a bunch of moronic developers they have at Microsoft.&#8221; -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-433153">
				<div id="div-comment-433153" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">640k</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20061023-04/?p=29293#comment-433153">
			October 23, 2006 at 4:53 pm</a>		</div>

		<p>Both SW_FORCEMINIMIZE and SW_MAX are = 11, so I think the hope of not be treated as a moronic developer is already lost.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-433183">
				<div id="div-comment-433183" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">GregM</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20061023-04/?p=29293#comment-433183">
			October 23, 2006 at 5:10 pm</a>		</div>

		<p>SW_MAX == largest value supported by ShowWindow, for easy range checking. &nbsp;So yes, it is the same as SW_FORCEMINIMIZE, the largest value.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-433213">
				<div id="div-comment-433213" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://levicki.blogspot.com/' rel='external nofollow' class='url'>Igor</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20061023-04/?p=29293#comment-433213">
			October 23, 2006 at 7:08 pm</a>		</div>

		<blockquote><p>
  If SW_SHOW would be 0 and SW_HIDE would be 5&#8230;
</p></blockquote>
<p>If you just read the MSDN you would know what value to put there instead of NULL and the problem wouldn&#8217;t even exist so you won&#8217;t have to solve it.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-433283">
				<div id="div-comment-433283" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Goran</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20061023-04/?p=29293#comment-433283">
			October 24, 2006 at 1:33 am</a>		</div>

		<p>Because of (possible) problems like the one with SHELLEXECUTEINFO I always wondered should I subclass any old structure and add a couple of constructors to it, only to avoid thinking about what to put in every member it might have every time I use it.</p>
<p>struct ShellExecuteInfo : public SHELLEXECUTE</p>
<p>{</p>
<p>&nbsp;ShellExecuteInfo(LPCTSTR File, LPCTSTR Verb bool show);</p>
<p>&nbsp;// &#8230;</p>
<p>};</p>
<p>Yeah, it&#8217;s not great, but may be a small improvement ( and a huge pollution of the namespace :-( ). Because I&#8217;m not sure about it, I seldom do it (i.e. when I get really fed up with RTFing MSDN).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-433293">
				<div id="div-comment-433293" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">peterchen</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20061023-04/?p=29293#comment-433293">
			October 24, 2006 at 2:39 am</a>		</div>

		<blockquote><p>
  NULL/0 should always be a safe default.
</p></blockquote>
<p>:wthf:</p>
<p>SW_* constants are used in many places, not everywhere the same value is the &quot;sensible default&quot;.</p>
<p>It&#8217;s your / our job to feed the correct parameters &#8211; all of them, not just those that we care about at the moment.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-433303">
				<div id="div-comment-433303" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Niklas</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20061023-04/?p=29293#comment-433303">
			October 24, 2006 at 3:05 am</a>		</div>

		<p>Running something in the background is a quite sensible default (you<br />
start an application in the background for printing a document or<br />
something). </p>
<p>It&#8217;s easy to make a great handwaving argument about how<br />
well-designed it is in that he who asks for nothing gets nothing. I<br />
won&#8217;t do that. I think you should know what to put and not to put in<br />
enumerations. </p>
<div class="post">[<i>I&#8217;m assuming you&#8217;re joking.<br />
Enumerations were not in K&amp;R and did not become part of the C<br />
language until 1989, six years after the ShowWindow function was<br />
written. Let me know when you&#8217;ve perfected that time machine. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-433323">
				<div id="div-comment-433323" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">required</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20061023-04/?p=29293#comment-433323">
			October 24, 2006 at 8:45 am</a>		</div>

		<p>Actually there is nothing in the MSDN documentation of ShellExecute which says NULL will hide the application, because the possible values of nShowCmd are not shown, only names.</p>
<p>It is just another example of an API tripping up a developer by using basic scalar types and assigning meaning to them beyond what can be gathered just by reading a description of the function. Compilers should check such things, based on the types of the arguments, not people.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-433333">
				<div id="div-comment-433333" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Neil</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20061023-04/?p=29293#comment-433333">
			October 24, 2006 at 8:51 am</a>		</div>

		<p>If you use image execution options to debug the app startup is the debugger clever enough a) to show even though you specified SW_HIDE b) to pass SW_HIDE on to the app so that when you get to ::ShowWindow(hWnd, nCmdShow); you get to realise that nCmdShow is SW_HIDE?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-434063">
				<div id="div-comment-434063" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">cmil</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20061023-04/?p=29293#comment-434063">
			October 24, 2006 at 5:24 pm</a>		</div>

		<p>&quot;Actually there is nothing in the MSDN documentation of ShellExecute which says NULL will hide the application, because the possible values of nShowCmd are not shown, only names.&quot;</p>
<p>No, the possible values <em>are</em> shown. SW_HIDE and NULL might be equal but they are not equivalent. SW_HIDE is always a legal value while under most circumstances NULL is not. Just because the abstraction isn&#8217;t enforced doesn&#8217;t mean it can be abused.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-friedicusrediculoushotmail-com odd alt thread-odd thread-alt depth-1" id="comment-434213">
				<div id="div-comment-434213" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Mike+Fried' rel='external nofollow' class='url'>Mike Fried</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20061023-04/?p=29293#comment-434213">
			October 24, 2006 at 9:17 pm</a>		</div>

		<p>It is too bad that the MSDN doesn&#8217;t explicitly state the values of the &quot;enumerations&quot; (or maybe I just couldn&#8217;t find them). I was recently poking around the WinMM.DLL methods for MIDI in/out (<a rel="nofollow" target="_new" href="http://msdn.microsoft.com/library/en-us/multimed/htm/_win32_midi_functions.asp" rel="nofollow">http://msdn.microsoft.com/library/en-us/multimed/htm/_win32_midi_functions.asp</a>), and in order to get the values and types to put into my C# app (via P/Invoke) I had to open up VC++, type in the value I was looking for, and hit F12 to have VC++ search for the definition.</p>
<p>My folks sent me my old MIDI controller from high school (for me that was in the mid 90s), and I wanted to hook it up to my tablet via USB and make it use Windows to act as its synthesizer (and maybe to do a little more), so I needed a way to read messages from MIDI in on my USB to MIDI adapter and send the messages to MIDI out on the Windows side. I chose C# instead of my normal C/C++ for fun &#8212; I wanted to work with P/Invoke and delegates.</p>
<p>Needing to use my C++ tools to find out how I needed to marshall my data/types/etc for C# was unfortunate.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-434343">
				<div id="div-comment-434343" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">640k</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20061023-04/?p=29293#comment-434343">
			October 25, 2006 at 4:06 am</a>		</div>

		<p>Some enums in windows.h (winbase.h) have a &quot;max&quot; defined which is 1 more than the actual largest value. Conclusion: You can&#8217;t trust it.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-434643">
				<div id="div-comment-434643" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Roie</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20061023-04/?p=29293#comment-434643">
			October 25, 2006 at 11:28 am</a>		</div>

		<p>These people may have some background in SQL. In SQL, NULL is a valid value for any datatype, distinct from any other value including zero (for some reason, Oracle treats the empty string as NULL, but that&#8217;s because Oracle&#8217;s weird). It really does make sense, to your average programmer these days (i.e., one that didn&#8217;t grow up on K&amp;R and RAM measured in kilobytes).</p>
<p>In truth, I think the problem stems from the fact that ShellExecute is such an old routine, that hasn&#8217;t been superceded (yet).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-435023">
				<div id="div-comment-435023" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Good Point</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20061023-04/?p=29293#comment-435023">
			October 25, 2006 at 4:59 pm</a>		</div>

		<p>Roie, I would make one small editorial change:</p>
<blockquote><p>
  It really does make sense, to your average [VB] programmer these days
</p></blockquote>
<p>If you want to use Win32 you should know what NULL is.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-435113">
				<div id="div-comment-435113" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Neil</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20061023-04/?p=29293#comment-435113">
			October 25, 2006 at 6:31 pm</a>		</div>

		<p>ShowWindow was doomed once it went beyond the simple showing and hiding of windows (including one constant which goes as far as to change your z-order, activate another window according to an undocumented algorithm and trim your working set). Instead ShowWindow should have been left to do what it does well, and all the iconising and maximising should have been given to a separate function.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-436543">
				<div id="div-comment-436543" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">The real problem</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20061023-04/?p=29293#comment-436543">
			October 29, 2006 at 11:45 am</a>		</div>

		<p>ShowWindow()&#8217;s name is to blame for this. To call a function names<br />
ShowWindow when you really wants to hide a window is plain wrong.</p>
<div class="post">[<i>A common thread I find is that when people say that X is a bad idea, they rarely say what would be better. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-439443">
				<div id="div-comment-439443" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Norman Diamond</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20061023-04/?p=29293#comment-439443">
			November 6, 2006 at 12:50 am</a>		</div>

		<p>&gt; I would have expected that if SW_HIDE were 5</p>
<p>&gt; people would say &#8220;What a phenomenally stupid</p>
<p>&gt; idea.</p>
<p>Should&#8217;ve used negative numbers (teasing here).</p>
<p>Theoretically you could use all positive numbers and returned an error code if someone passed a zero. &nbsp;Obviously it&#8217;s too late but this kind of design is reasonable.</p>
<p>&gt; Enumerations were not in K&amp;R</p>
<p>&#8230; for some language versions of that book.</p>
<p>&gt; and did not become part of the C language</p>
<p>&gt; until 1989</p>
<p>Nothing became part of the C Standard until 1989, but a ton of stuff was added to the language by ATT and others before 1989. &nbsp;I&#8217;m pretty sure ATT added enums while Microsoft was selling Xenix.</p>
<div class="post">[<i>I can&#8217;t believe my eyes. You&#8217;re actually saying that Microsoft should have violated the C language standard. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

