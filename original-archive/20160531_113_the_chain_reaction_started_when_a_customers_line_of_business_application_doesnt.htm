<html>
<head>
<title>The chain reaction started when a customer's line of business application doesn't work with UNCs</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>The chain reaction started when a customer&#8217;s line of business application doesn&#8217;t work with UNCs</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>May 31, 2016 / year-entry #114</td></tr>
<tr><td><b>Tags:</b></td><td>tipssupport</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20160531-00/?p=93545</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>10</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">Fighting over a registry key.</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>
A customer (via their customer liaison) reported that they use
Folder Redirection to put various folders on a network share,
but they discovered that one of their line of business applications
doesn't work when the application's Data Directory is set
to a UNC.
The customer is working with the vendor to address the problem,
but in the meantime, they need to deploy a temporary fix.
What they've found is that they can change the Data Directory
for the application in the registry and point it to a local
directory.
</p>
<p>
This works, except that some other unknown line of business
application is going in and resetting the registry key
back to the network location.
</p>
<p>
One thing they could try is
ask the vendor of the original
line of business application if there is a Group Policy
that they can use to force the Data Directory to
be a specific location.
Standard group policy registry keys are kept in a
registry key that grants write access only to
administrators,
which means that the rogue line of business application
will not be able to write to it.
</p>
<p>
Our suspicion was that this avenue of exploration
was likely to lead to a dead end, so we had to
try some other ideas.
</p>
<p>
Another idea is to use a Group Policy to
<a HREF="http://blogs.technet.com/b/askds/archive/2007/08/14/deploying-custom-registry-changes-through-group-policy.aspx">
deploy a script that sets the registry key for the Data Directory
to the local directory</a>.
(It appears that there's also a
<a HREF="https://technet.microsoft.com/en-us/library/cc753092.aspx">
special type of Group Policy setting just for registry entries</a>.)
The customer had thought of this,
but realized that
the rogue line of business application will eventually come
along and stomp on the value,
so any relief would be short-lived.
</p>
<p>
To work around this, the customer could mark the registry entry
as
<a HREF="https://technet.microsoft.com/en-us/library/cc978261.aspx">
Process Even If The Group Policy Objects Have Not Changed</a>.
The registry key will be set back to the policy value
each time Group Policy refreshes.
</p>
<p>
This is still not great, because it means that when the rogue
line of business appliation changes the registry key,
it'll take up to 90 or 120 minutes for the policy to refresh
and reset the value.
The customer could change their refresh interval to lower
the size of this window, but it increases the cost of
group policy processing across their entire network.
</p>
<p>
What they can do is
<a HREF="https://blogs.msdn.microsoft.com/oldnewthing/20130418-00/?p=4623">
set a security audit on the registry key</a>
that triggers when a write to the key occurs.
That will generate an entry in the security event log
which will identify the program that is writing to the
key.
That will at least let them identify the rogue line of
business application,
and then they can work with the vendor of that other
rogue program to see if they can disable the rogue
behavior.&sup1;
</p>
<p>
If they cannot disable the rogue behavior, then as
a final desperation measure,
they could set the key value to the desired value,
and then make the registry key read-only.
That way, when the rogue line of business application
tries to reset the value, it will fail.
This does assume two things:
</p>
<ol>
<li>The original program can cope with one of its
    configuration registry keys being read-only.</p>
<li>The rogue program responds to the
    inability to reset the key by going double-rogue.
</ol>
<p>
&sup1; Given that the registry key in question is
custom to the original line of business application,
it's possible that the rogue line of business that is
resetting the registry key comes from the same vendor
as the original program!
But maybe if they're lucky,
it's some custom in-house program that
they can modify.</p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (10)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-1250815">
				<div id="div-comment-1250815" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160531-00/?p=93545#comment-1250815">
			May 31, 2016 at 8:33 am</a>		</div>

		<p>I&#8217;ve seen this. You may be in the following bad case: They have a subcomponent as a library that must have a registry key pointing to its workspace, but the main application can&#8217;t handle it being repointed and so always sets the value in the registry for the subcomponent.</p>
<p>If not this case, RegNotifyChangeEx is your friend.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-matteo odd alt thread-odd thread-alt depth-1 parent" id="comment-1250845">
				<div id="div-comment-1250845" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Matteo+Italia' rel='external nofollow' class='url'>Matteo Italia</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160531-00/?p=93545#comment-1250845">
			May 31, 2016 at 11:01 am</a>		</div>

		<p>Couldn&#8217;t they just mount the &#8220;bad&#8221; path over the default data folder?</p>

		
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-alexcohn even depth-2" id="comment-1250855">
				<div id="div-comment-1250855" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Alex+Cohn' rel='external nofollow' class='url'>Alex Cohn</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160531-00/?p=93545#comment-1250855">
			May 31, 2016 at 11:13 am</a>		</div>

		<p>On the face of it, they were not looking for simple solutions</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt depth-2" id="comment-1250875">
				<div id="div-comment-1250875" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.dox.com.au' rel='external nofollow' class='url'>Ian Yates</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160531-00/?p=93545#comment-1250875">
			May 31, 2016 at 1:37 pm</a>		</div>

		<p>Yeah, I&#8217;d be tempted to try a symlink.  They&#8217;re a very handy way of pushing data around for apps that insist on C:.  I used them heavily on an old laptop that had 2x HDDs and I&#8217;d put a lot of stuff on C:.  Rather than reinstall apps, etc I just made symlinks for c:\program files\blah to d:\program files\blah.  I don&#8217;t think I ever ran into any problems (that I saw at least) :)</p>
<p>I&#8217;ve done the same for a VM running a really old read-only copy of a LOB app that I occasionally need to look at.  It&#8217;s data sits on my machine and the VM has a symlink of c:\app\data pointing to \\workstation\oldLOBAppData share.  That old app is none the wiser.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even depth-2" id="comment-1250895">
				<div id="div-comment-1250895" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://harryjohnston.wordpress.com' rel='external nofollow' class='url'>Harry Johnston</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160531-00/?p=93545#comment-1250895">
			May 31, 2016 at 6:50 pm</a>		</div>

		<p>Presumably, they want the folder redirection to remain in place &#8211; you don&#8217;t generally want to redesign your network just because one application is misbehaving.  Or at least that would be a last resort.  </p>
<p>The fact that the application&#8217;s data directory needs to be local (which you might indeed solve with a symlink or junction point) doesn&#8217;t seem to be a problem for them, it&#8217;s just that they&#8217;re having trouble telling the application to ignore the folder redirection.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment byuser comment-author-cheong odd alt thread-even depth-1" id="comment-1250896">
				<div id="div-comment-1250896" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/cheong00' rel='external nofollow' class='url'>cheong00</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160531-00/?p=93545#comment-1250896">
			May 31, 2016 at 6:59 pm</a>		</div>

		<p>Btw, will adding &#8220;deny write&#8221; access to &#8220;INTERACTIVE user&#8221; work? (Assuming their LOB application is WinForm client and not Windows Service process, because if it&#8217;s service, you&#8217;d create a domain account to run the service and just deny write access of that registry key to that account)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-odd thread-alt depth-1" id="comment-1250905">
				<div id="div-comment-1250905" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Scarlet Manuka</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160531-00/?p=93545#comment-1250905">
			May 31, 2016 at 8:32 pm</a>		</div>

		<p>I was rather expecting through the whole article that the application that was going in and resetting the registry key was going to be the same one that the key was for. If the registry key is for that application&#8217;s data directory, surely that application is the most likely one to be mucking around with it.</p>
<p>I suppose it could also be one program acting as a kind of supervisor and making sure everyone has the correct settings, in which case it is probably, as Raymond suggested, a related program from the same vendor.</p>
<p>The security audit sounds like a good idea, at the very least to see whether the problem is indeed coming from inside the house.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-raykoopa odd alt thread-even depth-1 parent" id="comment-1250915">
				<div id="div-comment-1250915" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Ray+Koopa' rel='external nofollow' class='url'>Ray Koopa</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160531-00/?p=93545#comment-1250915">
			June 1, 2016 at 3:26 am</a>		</div>

		<p>That reminds me of another case where I wanted to set a whole registry folder to read-only; the ShellIconOverlayIdentifiers one. Windows 10 just loves to put 3 or 4 subkeys in there for SkyDrive, then another 3 or 4 for OneDrive. That pushed my important TFS overlays so far back to the list, the overlays were gone almost every time Win10 did some updates.</p>
<p>I couldn&#8217;t really prevent the updates from smearing stuff in there (also not thinking that would&#8217;ve been a good idea), and eventually just made sure to keep my overlays alphabetically at the top (which was a little annoying since the SkyDrive ones began with a space character)&#8230;</p>

		
				</div>
		<ol class="children">
		<li class="comment even depth-2" id="comment-1250955">
				<div id="div-comment-1250955" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Zarat</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160531-00/?p=93545#comment-1250955">
			June 1, 2016 at 8:04 am</a>		</div>

		<p>Yup, the tight limit of UI overlays together with every program supporting it trying to get top places is really annoying. When there are such strict resource limits there should be separate UI where the user can select the UI overlays he wants among installed overlays, instead of allowing random programs to mess up things.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment byuser comment-author-alegrigoriev odd alt thread-odd thread-alt depth-1" id="comment-1250985">
				<div id="div-comment-1250985" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/alegr1' rel='external nofollow' class='url'>alegr1</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160531-00/?p=93545#comment-1250985">
			June 2, 2016 at 8:17 am</a>		</div>

		<p>I suspect it the case of an application or service running under token which doesn&#8217;t have access to network locations, and then it resets the location to default because the configured location is not accessible. Or the location is temporarily inaccessible because of network dropout. Same mistake as Windows Desktop Cleanup task does (does Windows 8/10 still have that abomination?).</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

