<html>
<head>
<title>Not every first-chance exception is a security vulnerability</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>Not every first-chance exception is a security vulnerability</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>December 18, 2007 / year-entry #445</td></tr>
<tr><td><b>Tags:</b></td><td>other</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20071218-00/?p=24123</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>20</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">In the category of dubious vulnerability, I submit the following (paraphrased) report: If I call the FormatMessage function, I can cause a buffer overflow exception if I provide an insertion that is more than 2000 characters long. The FormatMessage function in Windows NT, 2000 and XP used the dynamically expanding buffer technique to allocate memory for the...</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>In the category of dubious vulnerability, I submit the following (paraphrased) report:</p>
<blockquote class="q"><p> If I call the <code>FormatMessage</code> function, I can cause a buffer overflow exception if I provide an insertion that is more than 2000 characters long. </p>
</blockquote>
<p> The <code>FormatMessage</code> function in Windows&nbsp;NT, 2000 and&nbsp;XP used the <a href="http://msdn.microsoft.com/library/en-us/memory/base/reserving_and_committing_memory.asp"> dynamically expanding buffer technique</a> to allocate memory for the resulting message. If the resulting string was more than one page in length (4KB on an x86 system), there was an exception thrown when the <code>FormatMessage</code> function tried to write to the 4096th byte of the buffer. This looks like a buffer overflow, and in a sense it is, but it's a controlled overflow (the bytes beyond the end of the buffer are under the program's control), the exception is entirely expected, and it is correctly handled. </p>
<p> Using intentionally invalid pages to trigger just-in-time memory commit is a rare technique, so it's not surprising that people aren't familiar with it. In fact, to avoid these sorts of false alarm security vulnerability reports, the kernel folks rewrote the <code>FormatMessage</code> function in Windows Vista so it doesn't use this technique any more. </p>
<p> It's an odd Catch-22. You remove something that is frequently mistaken for a security vulnerability so that people stop mistakenly reporting it, but the fact that you remove it only confirms in the mind of the people who filed the false alarms that they found something for real! </p>
<p> (For further reading, may I recommend <a href="http://blogs.msdn.com/larryosterman/archive/2006/10/16/so-when-is-it-ok-to-use-seh.aspx"> this blog entry from Larry Osterman</a>.) </p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (20)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-578603">
				<div id="div-comment-578603" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Cereal</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071218-00/?p=24123#comment-578603">
			December 18, 2007 at 1:55 pm</a>		</div>

		<p>I don&#8217;t think it&#8217;s bad, necessarily, to have to move FormatMessage bounds checking into user space. &nbsp;I generally avoid using exceptions to control program flow. &nbsp;In this case it was probably only a win because</p>
<ul>
<li>
<p>Over 4096 bytes is a vanishingly unlikely case,</p>
</li>
<li>
<p>Back when FormatMessage was actually written, the extra 1 or 2 CPU cycles per loop mattered.</p>
</li>
</ul>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-578663">
				<div id="div-comment-578663" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">David Brooks</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071218-00/?p=24123#comment-578663">
			December 18, 2007 at 2:51 pm</a>		</div>

		<p>That MSDN article you point to has a bug: it assumes sizeof(TCHAR) == 1 and hence allocates twice the number of pages expected (assuming Unicode).</p>
<p>(and I&#8217;m just a lowly PM :-)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-578703">
				<div id="div-comment-578703" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Tanveer Badar</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071218-00/?p=24123#comment-578703">
			December 18, 2007 at 4:55 pm</a>		</div>

		<p>&quot;the kernel folks rewrote&quot;.</p>
<p>Don&#8217;t they ever blog anywhere? I haven&#8217;t found any team or person who writes ntoskrnl.exe and the likes and blogs.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-mike-dimmick odd alt thread-odd thread-alt depth-1" id="comment-578763">
				<div id="div-comment-578763" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Mike+Dimmick' rel='external nofollow' class='url'>Mike Dimmick</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071218-00/?p=24123#comment-578763">
			December 18, 2007 at 6:23 pm</a>		</div>

		<p>@Ulric: even if it doesn&#8217;t break on all exceptions, you do get a notification in the debug output window that a first-chance exception occurred.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-578793">
				<div id="div-comment-578793" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">osexpert</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071218-00/?p=24123#comment-578793">
			December 18, 2007 at 7:16 pm</a>		</div>

		<p>A good thing it was removed. I don&#8217;t like exceptions being used as logic. They are slow as well.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-dean-harding odd alt thread-odd thread-alt depth-1" id="comment-578803">
				<div id="div-comment-578803" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Dean+Harding' rel='external nofollow' class='url'>Dean Harding</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071218-00/?p=24123#comment-578803">
			December 18, 2007 at 9:19 pm</a>		</div>

		<p>&quot;They are slow as well.&quot;</p>
<p>Not when they don&#8217;t get called. This particular exception is only called when the resultant string is &gt; 4096 bytes long, which is very unusual.</p>
<p>Personally, I imagine the logic in Vista is probably more complex than it was in XP, just to get rid of the exception.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-578593">
				<div id="div-comment-578593" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">anonymous</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071218-00/?p=24123#comment-578593">
			December 18, 2007 at 1:27 pm</a>		</div>

		<p>Why so complicated? Every *unhandled* first chance exception is at least a bug, if not a security vulnerability. In kernel-mode code, even the only-a-bug form is a DoS vulnerability.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-578813">
				<div id="div-comment-578813" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Miral</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071218-00/?p=24123#comment-578813">
			December 18, 2007 at 9:39 pm</a>		</div>

		<p>Cereal: &quot;I don&#8217;t think it&#8217;s bad, necessarily, to have to move FormatMessage bounds checking into user space.&quot;</p>
<p>Actually it is bad, because you&#8217;ve just crossed a security boundary. &nbsp;If the kernel doesn&#8217;t validate parameters passed to it from user mode then the kernel itself is vulnerable to buffer attacks.</p>
<p>While you can mitigate this a bit by having a user-mode wrapper that everyone uses to call into the kernel, there&#8217;ll still be some evil program that spoofs this wrapper and passes invalid parameters just to ruin the kernel&#8217;s day.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-578833">
				<div id="div-comment-578833" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Triangle</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071218-00/?p=24123#comment-578833">
			December 18, 2007 at 11:34 pm</a>		</div>

		<p>&quot;Actually it is bad, because you&#8217;ve just crossed a security boundary. &nbsp;If the kernel doesn&#8217;t validate parameters passed to it from user mode then the kernel itself is vulnerable to buffer attacks.&quot;</p>
<p>Except that, except for SEH (And the VMM if you&#8217;re pedantic), the kernel isn&#8217;t involved in any of this. And the SEH handling code hasn&#8217;t been changed.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-578843">
				<div id="div-comment-578843" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">John</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071218-00/?p=24123#comment-578843">
			December 19, 2007 at 12:46 am</a>		</div>

		<p>lately your posts have been exceptional! i don&#8217;t know how you keep it up.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-578753">
				<div id="div-comment-578753" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ulric</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071218-00/?p=24123#comment-578753">
			December 18, 2007 at 6:16 pm</a>		</div>

		<p>&gt; Why so complicated? Every *unhandled* </p>
<p>&gt; first chance exception is at least a bug</p>
<p>what does this comment mean? This is article is about an exception that is correctly handled.</p>
<p>but people often run debugger, which break on all exceptions, and don&#8217;t understand what&#8217;s happening.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-578883">
				<div id="div-comment-578883" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">forkett</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071218-00/?p=24123#comment-578883">
			December 19, 2007 at 6:40 am</a>		</div>

		<blockquote><p>
  &gt; A good thing it was removed. I don&#8217;t like exceptions being used as logic.
</p></blockquote>
<p>Except is a one of the most common techniques around in operative systems..</p>
<p>Copy-on-write on *nix systems (and maybe not only) is implemented in the same way, for instance. Think about it the next time you fork.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-578933">
				<div id="div-comment-578933" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.broadheath.com' rel='external nofollow' class='url'>Frank Wilhoit</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071218-00/?p=24123#comment-578933">
			December 19, 2007 at 9:58 am</a>		</div>

		<p>&quot;&#8230;to avoid these sorts of false alarm security vulnerability reports, the kernel folks rewrote the FormatMessage function in Windows Vista so it doesn&#8217;t use this technique any more&#8230;.&quot;</p>
<p>Did they take out stack guard pages as well?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-579013">
				<div id="div-comment-579013" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Cereal</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071218-00/?p=24123#comment-579013">
			December 19, 2007 at 1:14 pm</a>		</div>

		<p>@Dean, I doubt &quot;if index &gt;= bufferlength&quot; is overly complex logic. &nbsp;If there&#8217;s just one of those, or a small handful, it probably saves code size compared to the SEH setup and teardown.</p>
<p>@Miral, when I say &quot;moving into user space,&quot; I just mean it doesn&#8217;t involve a context switch anymore. &nbsp;Obviously I&#8217;m not advocating that kernel buffer checks (those which are done in software in ring 0) should be moved into user space.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-579163">
				<div id="div-comment-579163" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Pavel Lebedinsky</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071218-00/?p=24123#comment-579163">
			December 19, 2007 at 8:25 pm</a>		</div>

		<blockquote><p>
  Personally, I imagine the logic in Vista is probably more complex than it was in XP, just to get rid of the exception.
</p></blockquote>
<p>No, it&#8217;s actually simpler and more efficient to pre-commit the entire buffer (which is what Vista does).</p>
<p>Commiting on demand is only necessary if the combined size of the buffers is so large that you need to worry about the system commit limit (thread stacks is a good example). Otherwise, just commit everything in one shot. A committed page that is never accessed doesn&#8217;t use any physical memory, so it is just as efficient as a reserved page.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-dean-harding odd alt thread-odd thread-alt depth-1" id="comment-579173">
				<div id="div-comment-579173" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Dean+Harding' rel='external nofollow' class='url'>Dean Harding</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071218-00/?p=24123#comment-579173">
			December 19, 2007 at 9:14 pm</a>		</div>

		<p>&quot;which is what Vista does&quot;</p>
<p>Really? That&#8217;s how it does it? How can it know the &quot;combined size of the buffers&quot; without parsing the format string first (for example, an insertion point may be repeated many times &#8212; for example, &quot;Hello %1 World %1&quot;).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-579043">
				<div id="div-comment-579043" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Max Lybbert</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071218-00/?p=24123#comment-579043">
			December 19, 2007 at 1:54 pm</a>		</div>

		<p>/* Using intentionally invalid pages to trigger just-in-time memory commit is a rare technique,</p>
<p>*/</p>
<p>Interestingly, last Friday I was reading up on Steel Bank Common Lisp, and they do something on Unix via intentional segfaults ( <a rel="nofollow" target="_new" href="http://sbcl-internals.cliki.net/Signal%20Handling" rel="nofollow">http://sbcl-internals.cliki.net/Signal%20Handling</a> &quot;Some signals are used by the Runtime. &#8230; [T]ypically this includes &#8230; Whatever you get when writing into unmapped memory (SIGSEGV, or SIGBUS) &#8211; used by the GC for triggering a collection.&quot; ).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-579463">
				<div id="div-comment-579463" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Pavel Lebedinsky</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071218-00/?p=24123#comment-579463">
			December 20, 2007 at 2:46 pm</a>		</div>

		<p>The &quot;combined size&quot; comment was referring to the general technique of committing memory on demand (as in the MSDN sample Raymond linked to above).</p>
<p>I don&#8217;t know how FormatMessage decides what size to allocate. That part probably didn&#8217;t change in Vista. The main thing that changed is that now instead of reserving a region and using try/except to commit individual pages, it commits the entire region at once.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-dean-harding even thread-even depth-1" id="comment-579533">
				<div id="div-comment-579533" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Dean+Harding' rel='external nofollow' class='url'>Dean Harding</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071218-00/?p=24123#comment-579533">
			December 20, 2007 at 6:20 pm</a>		</div>

		<p>Oh, I get it, thanks :-) That&#8217;s what I get for trying to guess the implementation! I suppose it could do two passes over the format string: once to find out the final size that it&#8217;ll need, and once more to do the actual processing.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-579843">
				<div id="div-comment-579843" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Aidan Thornton</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20071218-00/?p=24123#comment-579843">
			December 21, 2007 at 12:59 pm</a>		</div>

		<p>&quot;Using intentionally invalid pages to trigger just-in-time memory commit is a rare technique&quot;</p>
<p>Probably because it&#8217;s a pain to do right and not that many programmers know (or care) how to do it.</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

