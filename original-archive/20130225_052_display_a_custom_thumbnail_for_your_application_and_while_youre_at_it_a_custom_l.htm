<html>
<head>
<title>Display a custom thumbnail for your application (and while you're at it, a custom live preview)</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>Display a custom thumbnail for your application (and while you&#8217;re at it, a custom live preview)</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>February 25, 2013 / year-entry #53</td></tr>
<tr><td><b>Tags:</b></td><td>code</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20130225-00/?p=5153</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>12</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">By default, when the taskbar or any other application wants to display a thumbnail for a window, the result is a copy of the window contents shrunk down to the requested size. Today we're going to override that behavior and display a custom thumbnail. Take the program from last week and make these changes: #include...</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>
By default,
when the taskbar or any other application wants to display
a thumbnail for a window,
the result is a copy of the window contents shrunk down to the
requested size.
Today we're going to override that behavior
and display a custom thumbnail.
</p>
<p>
Take
<a HREF="http://blogs.msdn.com/b/oldnewthing/archive/2013/02/18/10394684.aspx">
the program from last week</a>
and make these changes:
</p>
<pre>
<font COLOR=blue>#include &lt;dwmapi.h&gt;</font>

BOOL
OnCreate(HWND hwnd, LPCREATESTRUCT lpcs)
{
  g_hicoAlert = LoadIcon(nullptr, IDI_EXCLAMATION);
  g_wmTaskbarButtonCreated = RegisterWindowMessage(
                              TEXT("TaskbarButtonCreated"));
  <font COLOR=blue>BOOL fTrue = TRUE;
  DwmSetWindowAttribute(hwnd, DWMWA_FORCE_ICONIC_REPRESENTATION,
                        &amp;fTrue, sizeof(fTrue));
  DwmSetWindowAttribute(hwnd, DWMWA_HAS_ICONIC_BITMAP,
                        &amp;fTrue, sizeof(fTrue));</font>
  return TRUE;
}
</pre>
<p>
We start by enabling custom thumbnails by setting the
<code>DWMWA_<wbr>HAS_<wbr>ICONIC_<wbr>BITMAP</code> attribute
to <code>TRUE</code>.
This overrides the default thumbnail generator and allows us to
provide a custom one.
</p>
<p>
Next is a helper function that I broke out from
<a HREF="http://blogs.msdn.com/b/oldnewthing/archive/2011/05/20/10166505.aspx">
this program</a> because it's useful on its own.
It simply creates a 32bpp bitmap of the desired size
and optionally returns a pointer to the resulting bits.
</p>
<pre>
<font COLOR=blue>
HBITMAP Create32bppBitmap(HDC hdc, int cx, int cy,
                          RGBQUAD **pprgbBits = nullptr)
{
 BITMAPINFO bmi = { 0 };
 bmi.bmiHeader.biSize = sizeof(bmi.bmiHeader);
 bmi.bmiHeader.biWidth = cx;
 bmi.bmiHeader.biHeight = cy;
 bmi.bmiHeader.biPlanes = 1;
 bmi.bmiHeader.biBitCount = 32;
 bmi.bmiHeader.biCompression = BI_RGB;
 void *pvBits;
 HBITMAP hbm = CreateDIBSection(hdc, &amp;bmi,
           DIB_RGB_COLORS, &amp;pvBits, NULL, 0);
 if (pprgbBits) *pprgbBits = static_cast&lt;RGBQUAD*&gt;(pvBits);
 return hbm;
}</font>
</pre>
<p>
Next, we take our <code>Paint&shy;Content</code> function and
make it render into a DC instead:
</p>
<pre>
void
<font COLOR=blue>RenderContent(HDC hdc, LPCRECT prc)</font>
{
 LOGFONTW lf = { 0 };
 lf.lfHeight = <font COLOR=blue>prc-&gt;</font>bottom - <font COLOR=blue>prc-&gt;</font>top;
 wcscpy_s(lf.lfFaceName, L"Verdana");
 HFONT hf = CreateFontIndirectW(&amp;lf);
 HFONT hfPrev = SelectFont(<font COLOR=blue>hdc</font>, hf);
 wchar_t wszCount[80];
 swprintf_s(wszCount, L"%d", g_iCounter);
 <font COLOR=blue>FillRect(hdc, prc, GetStockBrush(WHITE_BRUSH));</font>
 DrawTextW(<font COLOR=blue>hdc</font>, wszCount, -1, const_cast&lt;LPRECT&gt;(prc),
          DT_CENTER | DT_VCENTER | DT_SINGLELINE);
 SelectFont(<font COLOR=blue>hdc</font>, hfPrev);
 DeleteObject(hf);
}
</pre>
<p>
In our case, we will want to render into a bitmap:
</p>
<pre>
<font COLOR=blue>HBITMAP
GenerateContentBitmap(HWND hwnd, int cx, int cy)
{
 HDC hdc = GetDC(hwnd);
 HDC hdcMem = CreateCompatibleDC(hdc);
 HBITMAP hbm = Create32bppBitmap(hdcMem, cx,cy);
 HBITMAP hbmPrev = SelectBitmap(hdcMem, hbm);
 RECT rc = { 0, 0, cx, cy };
 RenderContent(hdcMem, &amp;rc);
 SelectBitmap(hdcMem, hbmPrev);
 DeleteDC(hdcMem);
 ReleaseDC(hwnd, hdc);
 return hbm;
}</font>
</pre>
<p>
<p>
We can use this function when DWM asks us to generate a custom thumbnail
or a custom live preview bitmap.
</p>
<pre>
<font COLOR=blue>void
UpdateThumbnailBitmap(HWND hwnd, int cx, int cy)
{
 HBITMAP hbm = GenerateContentBitmap(hwnd, cx, cy);
 DwmSetIconicThumbnail(hwnd, hbm, 0);
 DeleteObject(hbm);
}

void
UpdateLivePreviewBitmap(HWND hwnd)
{
 RECT rc;
 GetClientRect(hwnd, &amp;rc);
 HBITMAP hbm = GenerateContentBitmap(hwnd, rc.right - rc.left,
                                     rc.bottom - rc.top);
 DwmSetIconicLivePreviewBitmap(hwnd, hbm, nullptr, 0);
 DeleteObject(hbm);
}</font>

 // WndProc
 <font COLOR=blue>case WM_DWMSENDICONICTHUMBNAIL:
  UpdateThumbnailBitmap(hwnd, HIWORD(lParam), LOWORD(lParam));
  break;
 case WM_DWMSENDICONICLIVEPREVIEWBITMAP:
  UpdateLivePreviewBitmap(hwnd);
  break;</font>
</pre>
<p>
One of the quirks of the
<code>WM_<wbr>DWM&shy;SEND&shy;ICONIC&shy;THUMB&shy;NAIL</code>
message is that it passes the x- and y-coordinates backwards.
Most window messages put the x-coordinate in the low word and
the y-coordinate in the high word, but
<code>WM_<wbr>DWM&shy;SEND&shy;ICONIC&shy;THUMB&shy;NAIL</code>
does it the other way around.
</p>
<p>
Since we're generating a custom thumbnail and live preview bitmap,
we need to let the window manager know that the custom rendering
is out of date and needs to be re-rendered:
Invalidate the custom bitmaps when the counter changes.
</p>
<pre>
void OnCommand(HWND hwnd, int id, HWND hwndCtl, UINT codeNotify)
{
  switch (id) {
  case IDC_INCREMENT:
    ++g_iCounter;
    InvalidateRect(hwnd, nullptr, TRUE);
    <font COLOR=blue>DwmInvalidateIconicBitmaps(hwnd);</font>
    break;
  }
}
</pre>
<p>
And finally,
just to be interesting, we'll also stop rendering content into
our main window.
</p>
<pre>
void
PaintContent(HWND hwnd, PAINTSTRUCT *pps)
{
    <font COLOR=blue>// do nothing</font>
}
</pre>
<p>
Run this program and observe that the window comes up blank.
Ah, but if you hover over the taskbar button, the custom thumbnail
will appear, and that custom thumbnail has the number 0 in it.
Click on the button in the thumbnail, and the number in the custom
thumbnail increments.
</p>
<p>
As a bonus, move the mouse over the thumbnail to trigger Aero Peek.
The live preview bitmap contains the magic number!
Move the mouse away, and the magic number vanishes.
</p>
<p>
Now, this was an artificial example, so the effect is kind of weird.
However, you can imagine using this in less artificial cases where
the result is useful.
You application might be a game,
and instead of using the default thumbnail which shows a miniature
copy of the game window,
you can have your thumbnail be a tiny scoreboard or focus
on a section of the board.
For example, if you are a card game,
the thumbnail might show just the cards in your hand.
</p>
<p>
I can't think of a useful case for showing a live preview bitmap
different from the actual window.
The intended use for a custom live preview bitmap is for applications
like Web browsers which want to minimize a tab's memory usage when it
is not active.
When a tab becomes inactive,
the browser can destroy all graphics resources except for
a bitmap containing the last-known-valid contents of the window,
and use that bitmap for the thumbnail and live preview.</p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (12)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-1041233">
				<div id="div-comment-1041233" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">JW</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130225-00/?p=5153#comment-1041233">
			February 25, 2013 at 7:19 am</a>		</div>

		<p>One valid example that music players use (or at least mine) is that they show the album art of the currently playing music, often including some extra buttons to control the playback with.</p>
<div class="post">[<em>That&#39;s a valid example of a custom thumbnail (I gave another example in the article). But the one I can&#39;t think of a valid case for is the custom Aero Peek. -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1041263">
				<div id="div-comment-1041263" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Lockwood</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130225-00/?p=5153#comment-1041263">
			February 25, 2013 at 7:43 am</a>		</div>

		<p>&quot;One of the quirks of the WM_DWM&shy;SEND&shy;ICONIC&shy;THUMB&shy;NAIL message is that it passes the x- and y-coordinates backwards. Most window messages put the x-coordinate in the low word and the y-coordinate in the high word, but WM_DWM&shy;SEND&shy;ICONIC&shy;THUMB&shy;NAIL does it the other way around&quot;</p>
<p>Why does this one behave differently? Is there an amusing backstory to this?</p>
<div class="post">[<em>No. The people who added that message wasn&#39;t aware of the existing conventions. <a href="http://blogs.msdn.com/b/oldnewthing/archive/2003/11/25/55850.aspx" rel="nofollow">This happens every so often</a>. -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1041283">
				<div id="div-comment-1041283" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">laonianren</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130225-00/?p=5153#comment-1041283">
			February 25, 2013 at 8:38 am</a>		</div>

		<p>A company of Microsoft&#39;s size should have an API conventions guru. &nbsp;I imagine him in a basement office, wearing a brown warehouse coat and sharply inhaling before explaining why some proposed new Windows message is intolerable.</p>
<p>That said, Microsoft probably doesn&#39;t need any more bureaucracy. &nbsp;Ignore me.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1041353">
				<div id="div-comment-1041353" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Matt</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130225-00/?p=5153#comment-1041353">
			February 25, 2013 at 1:27 pm</a>		</div>

		<p>@Raymond: &quot;I can&#39;t think of a useful case for showing a live preview bitmap different from the actual window&quot;</p>
<p>How about the case where a program (e.g. Lync) shows the face of the person you&#39;re talking to, rather than a zoomed out illegible conversation in a window? Much more useful :)</p>
<div class="post">[<em>You&#39;re thinking of the thumbnail. I&#39;m talking about Aero Peek. Aero Peek is the same size as the original window. -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1041393">
				<div id="div-comment-1041393" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">not important</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130225-00/?p=5153#comment-1041393">
			February 25, 2013 at 5:20 pm</a>		</div>

		<p>&quot;The people who added that message wasn&#39;t aware of the existing conventions.- Raymond.&quot;</p>
<p>O brother&#8230; So the person who implemented these window messages did not know basic Win32 stuff? How did you guys hired that person?</p>
<div class="post">[<em>This is hardly &quot;basic Win32 stuff&quot;. It&#39;s &quot;obscure historical Win32 stuff.&quot; -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1041403">
				<div id="div-comment-1041403" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">@laonianren</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130225-00/?p=5153#comment-1041403">
			February 25, 2013 at 7:33 pm</a>		</div>

		<p>I think you can considered yourself ignored buddy :)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-xpclientgmail-com even thread-even depth-1" id="comment-1041433">
				<div id="div-comment-1041433" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/xpclient' rel='external nofollow' class='url'>xpclient</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130225-00/?p=5153#comment-1041433">
			February 25, 2013 at 11:36 pm</a>		</div>

		<p>&quot;Little Programs&quot; Monday is awesome. But can you give examples of programs which you know already use these features so we can see them in action? Or that is against some policy/rule on the blog?</p>
<div class="post">[<em>I didn&#39;t bother looking for examples. -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1041543">
				<div id="div-comment-1041543" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Brian G.</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130225-00/?p=5153#comment-1041543">
			February 26, 2013 at 8:07 am</a>		</div>

		<p>@xpclient: Trillian (the IM client) uses the custom thumbnail to show the user icon of the person whose conversation is in the tab instead of a (usually useless) shrunk-down picture of the tab. That&#39;s not a custom Aero Peek though, just the taskbar thumbnail.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-alexcohn even thread-even depth-1" id="comment-1041663">
				<div id="div-comment-1041663" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Alex+Cohn' rel='external nofollow' class='url'>Alex Cohn</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130225-00/?p=5153#comment-1041663">
			February 26, 2013 at 12:19 pm</a>		</div>

		<p>&quot;I can&#39;t think of a valid case for is the custom Aero Peek&quot;</p>
<p>For an image editor, this could show the image sans the clutter of toolbox widgets</p>
<div class="post">[<em>Okay, I could actually believe that. Well-done. -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1042013">
				<div id="div-comment-1042013" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">jon</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130225-00/?p=5153#comment-1042013">
			February 27, 2013 at 12:26 pm</a>		</div>

		<p>&quot;This is hardly &quot;basic Win32 stuff&quot;. It&#39;s &quot;obscure historical Win32 stuff.&quot; -Raymond&quot;</p>
<p>So fundamental messages like WM_MOUSEMOVE and WM_LBUTTONDOWN are obscure and historical?</p>
<p>What other obscure and historical things are Microsoft developers unaware of these days?</p>
<div class="post">[<em>News flash: Everybody nowadays uses message crackers so they don&#39;t need to memorize how the parameters are packed. -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1042023">
				<div id="div-comment-1042023" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">jon</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130225-00/?p=5153#comment-1042023">
			February 27, 2013 at 12:55 pm</a>		</div>

		<p>Which message crackers should we use with WM_DWM&shy;SEND&shy;ICONIC&shy;THUMB&shy;NAIL then?</p>
<div class="post">[<em>It doesn&#39;t have one, but you knew that. Look, I already said it was a mistake. What do you want, a time machine to go back and fix the mistake? -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1042043">
				<div id="div-comment-1042043" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">jon</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20130225-00/?p=5153#comment-1042043">
			February 27, 2013 at 1:38 pm</a>		</div>

		<p>That&#39;s the first time you said it was a mistake, and that&#39;s actually all I wanted, instead of the excuses and blind justifications you normally provide for Microsoft ***-ups :)</p>
<div class="post">[<em>I was trying to be polite to the people who violated the convention by calling it a &quot;quirk&quot;. There&#39;s nothing technically wrong with passing the parameters in an unconventional order, so &quot;mistake&quot; is perhaps too strong a term. It is however a violation of convention. (Who&#39;s the one with the social skills of a thermonuclear device?) -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

