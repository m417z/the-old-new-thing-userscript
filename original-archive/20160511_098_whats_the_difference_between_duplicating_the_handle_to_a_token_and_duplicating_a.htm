<html>
<head>
<title>What's the difference between duplicating the handle to a token and duplicating a token?</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>What&#8217;s the difference between duplicating the handle to a token and duplicating a token?</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>May 11, 2016 / year-entry #99</td></tr>
<tr><td><b>Tags:</b></td><td>code</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20160511-00/?p=93446</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>6</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">Are you sharing an object or are you creating two objects?</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>
If you have a token, there are two ways to get another handle to it.
One is to use
<code>Duplicate&shy;Handle</code>;
the other is to use
<code>Duplicate&shy;Token</code> (or <code>Duplicate&shy;Token&shy;Ex</code>).
What's the difference?
</p>
<p>
Duplicating the handle with
<code>Duplicate&shy;Handle</code>
results in a new handle that refers to the same token as the original handle.
On the other hand,
duplicating the token with
<code>Duplicate&shy;Token</code>
produces a brand new token that is a clone of the original.
</p>
<p>
The difference is significant if you try to modify the token.
</p>
<p>
If you duplicate the handle,
then there is still only one underlying token,
and changes to the token from one handle
will be visible to the other handle
since it's all the same token at the end of the day;
duplicating the handle just gives you two ways
to refer to the same thing.
</p>
<p>
If you duplicate the token,
then you have two tokens,
and changes to one token will not affect the other.
</p>
<p>
It's the difference between buying another set of keys
to a car on the one hand,
and buying a brand new identical car (which comes
with its own set of keys) on the other.
If you buy another set of keys to the car,
then there's still only one car,
and if you do something to the car,
that change is visible regardless of which set of keys
you use.
On the other hand,
if you buy a new identical car,
then changes to one car do not affect the other.</p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (6)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment byuser comment-author-dwalker-wk even thread-even depth-1 parent" id="comment-1248496">
				<div id="div-comment-1248496" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/DWalker' rel='external nofollow' class='url'>DWalker</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160511-00/?p=93446#comment-1248496">
			May 11, 2016 at 10:20 am</a>		</div>

		<p>Like a &#8220;deep copy&#8221; of an object-oriented instance of an object.  You can duplicate the pointer to the object, or you can duplicate the object.</p>

		
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-alexcohn odd alt depth-2 parent" id="comment-1248525">
				<div id="div-comment-1248525" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Alex+Cohn' rel='external nofollow' class='url'>Alex Cohn</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160511-00/?p=93446#comment-1248525">
			May 12, 2016 at 12:54 am</a>		</div>

		<p>I wonder why we need a special API to copy a &#8220;pointer&#8221;</p>

		
				</div>
		<ol class="children">
		<li class="comment even depth-3 parent" id="comment-1248536">
				<div id="div-comment-1248536" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Tanveer Badar</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160511-00/?p=93446#comment-1248536">
			May 12, 2016 at 4:07 am</a>		</div>

		<p>Because handles are not pointers.</p>

		
				</div>
		<ol class="children">
		<li class="comment odd alt depth-4" id="comment-1248545">
				<div id="div-comment-1248545" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Cristi</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160511-00/?p=93446#comment-1248545">
			May 12, 2016 at 6:35 am</a>		</div>

		<p>And because their implementation might change. One does not need to know what a handle is in order to use a handle.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment even thread-odd thread-alt depth-1 parent" id="comment-1248505">
				<div id="div-comment-1248505" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Yukkuri</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160511-00/?p=93446#comment-1248505">
			May 11, 2016 at 10:55 am</a>		</div>

		<p>This seems super obvious&#8230; I was expecting a catch of some sort.</p>

		
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-cheong odd alt depth-2" id="comment-1248515">
				<div id="div-comment-1248515" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/cheong00' rel='external nofollow' class='url'>cheong00</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20160511-00/?p=93446#comment-1248515">
			May 11, 2016 at 11:58 pm</a>		</div>

		<p>Indeed. Like the difference between &#8220;copying the file&#8221; and &#8220;copying the handle of file. The first one gives you two file that you can change one without affecting the other, the second one gives you two handle to access the same file.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

