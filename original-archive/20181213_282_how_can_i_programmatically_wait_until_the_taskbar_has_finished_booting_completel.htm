<html>
<head>
<title>How can I programmatically wait until the taskbar has finished booting completely before I create my notification icon?</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>How can I programmatically wait until the taskbar has finished booting completely before I create my notification icon?</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>December 13, 2018 / year-entry #282</td></tr>
<tr><td><b>Tags:</b></td><td>code</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20181213-00/?p=100475</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>5</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">It will let you know.</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>
A customer found that sometimes their program starts up too soon,
and when it tried to create its taskbar notification icon,
the call to
<code>Shell_<code></code>Notify&shy;Icon</code> fails.
The customer wanted to know whether there was a signal they
could listen for to tell them that the taskbar has finished
booting completely and is ready to accept notification icons.
They noticed that the system puts up an hourglass cursor,
and they wondered if perhaps there was a way to monitor the system
cursor and wait for it to change to something other than an hourglass.
</p>
<p>
You can listen for the
<code>Taskbar&shy;Created</code> message,
which the taskbar sends
<a HREF="https://docs.microsoft.com/en-us/windows/desktop/shell/taskbar">
when the taskbar has been created</a>.
Upon receipt of that message, you can try to create
your icon again.
</p>
<p>
The customer asked,
"Okay, that's great.
But sometimes our program runs after the taskbar has
been created.
How can I tell whether the taskbar has been created,
so I know that I shouldn't sit around and wait for the
<code>Taskbar&shy;Created</code> message?"
</p>
<p>
If the taskbar has already been created,
then your call to
<code>Shell_<code></code>Notify&shy;Icon</code> will
succeed
(assuming you didn't mess up and pass invalid parameters),
at which point you don't need to wait for the
<code>Taskbar&shy;Created</code> message
because you already created your notification icon.
</p>
<p>
<a HREF="https://blogs.msdn.microsoft.com/oldnewthing/20151116-00/?p=92091">
Monitoring the system cursor</a>
is the wrong approach
because the system cursor can be an hourglass for other reasons,
and it can be an arrow even though the taskbar isn't ready.</p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (5)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment byuser comment-author-geelaw even thread-even depth-1 parent" id="comment-1373445">
				<div id="div-comment-1373445" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Gee+Law' rel='external nofollow' class='url'>Gee Law</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20181213-00/?p=100475#comment-1373445">
			December 13, 2018 at 7:12 am</a>		</div>

		<p>I think the last part might mislead the customer. Since they start as being braindead enough to try monitoring the cursor for taskbar creation, they might as well interpret the last part as follows: In <code>WM_CREATE</code>, I call <code>Shell_NotifyIcon</code>. If the call succeeds, I am done. Otherwise, register for <code>TaskbarCreated</code>. If I registered for that message, call <code>Shell_NotifyIcon</code> when <code>s_uTaskbarRestart</code> is received.</p>
<p>The correct way is to always first register for <code>TaskbarCreated</code> in <code>WM_CREATE</code>, then try creating the icon. Regardless of success or failure, call <code>Shell_NotifyIcon</code> upon <code>s_uTaskbarRestart</code>. The reason: the taskbar might restart when your program is running. If you skip registration because you <em>were</em> able to add the icon, you will miss the chance to re-add it when Explorer restarts for whatever reason.</p>

		
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-peted odd alt depth-2" id="comment-1373465">
				<div id="div-comment-1373465" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/peted66616' rel='external nofollow' class='url'>peted66616</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20181213-00/?p=100475#comment-1373465">
			December 13, 2018 at 9:27 am</a>		</div>

		<p>In addition, following the advice above avoids a race between code trying to register for the message, and the message itself. Otherwise, the process might miss a <code>TaskbarCreated</code> message sent after the original <code>Shell_NotifyIcon</code> failure, but before the process has registered for the message.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-the_boggyb even depth-2" id="comment-1373485">
				<div id="div-comment-1373485" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/BoggyB1' rel='external nofollow' class='url'>BoggyB1</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20181213-00/?p=100475#comment-1373485">
			December 13, 2018 at 10:13 am</a>		</div>

		<p>There&#8217;s a surprisingly large number of programs that don&#8217;t handle the taskbar restarting and fail to recreate their icons. It&#8217;s gotten better over the years, but I remember in the Windows 2000 days if anything happened to explorer.exe half my icons would disappear.</p>
<p>(the other glitch is if a program with a notification icon exits without removing it, the icon stays in the taskbar until you try to interact with it. That can get very silly very quickly when debugging something with an icon :)</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment byuser comment-author-joker150491 odd alt thread-odd thread-alt depth-1 parent" id="comment-1373455">
				<div id="div-comment-1373455" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Joker_vD' rel='external nofollow' class='url'>Joker_vD</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20181213-00/?p=100475#comment-1373455">
			December 13, 2018 at 7:16 am</a>		</div>

		<p>Of course, the TaskbarCreated message may happen bebetween failure of Shell_Notify­Icon and registering for the message, so one should probably use &#8220;try icon creation—register for message—retry icon creation&#8221; sequence. Of course, it could also happen that the retry will succeed and then the message will be delivered — and there is no way to tell if the message was sent because the taskbar crashed and was restarted after you&#8217;ve created the icon (so you need to re-create it), or because you merely didn&#8217;t yield into the message loop (so you shouldn&#8217;t create another icon). Ah, the joys of subscribing to asynchronous signals (and unsubscribing from, which is also a bountiful can of worms).</p>

		
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-geelaw even depth-2" id="comment-1373475">
				<div id="div-comment-1373475" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Gee+Law' rel='external nofollow' class='url'>Gee Law</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20181213-00/?p=100475#comment-1373475">
			December 13, 2018 at 9:41 am</a>		</div>

		<p>My bet is that <code>NIM_ADD</code> is idempotent. In case the taskbar is created after subscription and before the initial call to <code>Shell_NotifyIcon</code>, the program will waste some efforts but the outcome stays intact.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

