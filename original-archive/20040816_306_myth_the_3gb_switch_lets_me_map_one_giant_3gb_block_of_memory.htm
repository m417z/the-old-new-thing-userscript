<html>
<head>
<title>Myth: The /3GB switch lets me map one giant 3GB block of memory</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>Myth: The /3GB switch lets me map one giant 3GB block of memory</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>August 16, 2004 / year-entry #307</td></tr>
<tr><td><b>Tags:</b></td><td>other</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20040816-00/?p=38163</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>20</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">Just because the virtual address space is 3GB doesn't mean that you can map one giant 3GB block of memory. The standard holes in the virtual address space are still there: 64K at the bottom, and 64K near the 2GB boundary. Moreover, the system DLLs continue to load at their preferred virtual addresses which lie...</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>Just because the virtual address space is 3GB doesn't mean that you can map one giant 3GB block of memory. The standard holes in the virtual address space are still there: 64K at the bottom, and <a href="http://blogs.msdn.com/oldnewthing/archive/2003/10/08/55239.aspx"> 64K near the 2GB boundary</a>.</p>
<p> Moreover, the system DLLs continue to load at their preferred virtual addresses which lie just below the 2GB boundary. The process heap and other typical process bookkeeping also take their bites out of your virtual address space. </p>
<p> As a result, even though the user-mode virtual address space is nearly 3GB, it is not the case that all of the available space is contiguous. The holes near the 2GB boundary prevent you from getting even 2GB of contiguous address space. </p>
<p> Some people may try to relocate the system DLLs to alternate addresses in order to create more room, but that won't work for multiple reasons. First, of course, is that it doesn't get rid of the 64K gap near the 2GB boundary. Second, the system allocates other items such as thread information blocks and the process environment variables before your program gets a chance to start running, so by the time your program gets around to allocating memory, the space it wanted may already have been claimed. </p>
<p> Third, the system really needs certain key DLLs to be loaded at the same address in all processes. For example, the syscall trap must reside at a fixed location so that the kernel-mode trap handler will recognize it as a valid syscall trap and not as an illegal instruction. The debugger requires this as well, so that it can use <code>CreateRemoteThread</code> to inject a breakpoint into the process when you tell it to break into the process you are debugging. </p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (20)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-203313">
				<div id="div-comment-203313" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">DrPizza</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040816-00/?p=38163#comment-203313">
			August 16, 2004 at 7:58 am</a>		</div>

		<p>&quot;Third, the system really needs certain key DLLs to be loaded at the same address in all processes. For example, the syscall trap must reside at a fixed location so that the kernel-mode trap handler will recognize it as a valid syscall trap &quot;</p>
<p>The handler can&#8217;t look for two addresses instead of one?</p>
<p>It&#8217;s still not clear to me why the top bad pointer catching hole can&#8217;t be removed entirely (the reason for it to exist no longer makes so much sense with a 3 GiB address space), and why system .dlls can&#8217;t be loaded at just below 3 GiB.  Indeed, it&#8217;s not clear why they can&#8217;t be loaded at just below 3 GiB even for 2 GiB applications.</p>
<p>Of course, it&#8217;s still not going to stop boneheaded third-party hook libraries loading at somewhere idiotic like 256 or 512 MiB thereby leaving the address space horribly fragmented before we&#8217;ve even begun.</p>
<p>And even Windows itself is pretty crappy in this regard, as various system libraries will load as low as about 1.5 GiB.</p>
<p>It&#8217;s a wonder the CLR manages to load as often as it does.<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-203323">
				<div id="div-comment-203323" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://weblogs.asp.net/oldnewthing/' rel='external nofollow' class='url'>Raymond Chen</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040816-00/?p=38163#comment-203323">
			August 16, 2004 at 8:21 am</a>		</div>

		<p>You seriously do not want to slow down the syscall code path. That is critical to system performance. I&#8217;ll try to remember tell a story about syscall performance later.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-203373">
				<div id="div-comment-203373" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://weblogs.asp.net/oldnewthing' rel='external nofollow' class='url'>Raymond Chen</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040816-00/?p=38163#comment-203373">
			August 16, 2004 at 10:05 am</a>		</div>

		<p>As Skywing noted, there&#8217;s more than one &#8216;fixed address&#8217; in ntdll.</p>
<p><a target="_new" href="http://weblogs.asp.net/oldnewthing/archive/2004/08/12/213468.aspx#215160" rel="nofollow">http://weblogs.asp.net/oldnewthing/archive/2004/08/12/213468.aspx#215160</a></p>
<p>See remarks there for other considerations (like the enormouse cost of rebasing).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-203443">
				<div id="div-comment-203443" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://weblogs.asp.net/oldnewthing/' rel='external nofollow' class='url'>Raymond Chen</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040816-00/?p=38163#comment-203443">
			August 16, 2004 at 10:29 am</a>		</div>

		<p>(Notice that Pietrek didn&#8217;t measure the memory cost, only the speed cost.)</p>
<p>Sure all of these things could have been done, I&#8217;m not denying that. But you have to balance the benefit (to a comparatively limited set of programs) against the cost (lots of changes in the kernel that affect all programs) and the schedule (time spent doing this is time not spent doing something else). Somebody did that balance and decided that in the grand scheme of things, the benefit did not outweigh the cost.</p>
<p>(Indeed, the Win95 team implemented rebasing in an entirely different way which is focused on minimizing memory requirements. Different teams have different design priorities.)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-203453">
				<div id="div-comment-203453" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Eric Wilson</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040816-00/?p=38163#comment-203453">
			August 16, 2004 at 11:33 am</a>		</div>

		<p>As an idea for a article, could you lay out the various &quot;special&quot; virtual addresses in a win32 application?  I for one had no idea what the &quot;64K gap around 2GB&quot; was for.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-203463">
				<div id="div-comment-203463" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.valhallalegends.com' rel='external nofollow' class='url'>Skywing</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040816-00/?p=38163#comment-203463">
			August 16, 2004 at 12:21 pm</a>		</div>

		<p>Raymond covered this issue here &lt;<a target="_new" href="http://weblogs.asp.net/oldnewthing/archive/2003/10/08/55239.aspx&gt;" rel="nofollow"></a><a href="http://weblogs.asp.net/oldnewthing/archive/2003/10/08/55239.aspx&#038;gt" rel="nofollow">http://weblogs.asp.net/oldnewthing/archive/2003/10/08/55239.aspx&#038;gt</a>;</p>
<p>It&#8217;s a workaround for an artifact of how you build a 32-bit address on Alpha processors.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-203353">
				<div id="div-comment-203353" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">DrPizza</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040816-00/?p=38163#comment-203353">
			August 16, 2004 at 9:59 am</a>		</div>

		<p>Two address checks (if two checks are even necessary; you could just have two interrupts; one for libraries loaded just below 2 GiB, one for libraries loaded just below 3 GiB, which would have no performance cost and a *tiny* (fraction of a page) memory cost) would really be that damaging to performance?<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-203413">
				<div id="div-comment-203413" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">DrPizza</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040816-00/?p=38163#comment-203413">
			August 16, 2004 at 10:17 am</a>		</div>

		<p>&quot;(like the enormouse cost of rebasing). &quot;</p>
<p>Um, as pathological examples such as <a target="_new" href="http://msdn.microsoft.com/msdnmag/issues/0500/hood/default.aspx" rel="nofollow">http://msdn.microsoft.com/msdnmag/issues/0500/hood/default.aspx</a> show, the actual cost of rebasing is very small (about a 12% load cost in something that&#8217;s approaching a worst-case scenario; 1000 imported functions is a lot); there is an additional memory cost, but that could be mitigated in many circumstances without much additional code (it seems to me would be simple enough to have one memory footprint *per base address* and to prefer to use pre-existing rebased base addresses if they exist).</p>
<p></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-203503">
				<div id="div-comment-203503" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">foo</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040816-00/?p=38163#comment-203503">
			August 17, 2004 at 12:28 am</a>		</div>

		<p>Will these /3GB posts never end?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-203513">
				<div id="div-comment-203513" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">DrPizza</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040816-00/?p=38163#comment-203513">
			August 17, 2004 at 2:11 am</a>		</div>

		<p>&quot;Sure all of these things could have been done, I&#8217;m not denying that. But you have to balance the benefit (to a comparatively limited set of programs) against the cost (lots of changes in the kernel that affect all programs) and the schedule (time spent doing this is time not spent doing something else). Somebody did that balance and decided that in the grand scheme of things, the benefit did not outweigh the cost. &quot;<br />
<br />But the thing is, the benefit could apply to *any* program, because *any* program could have to rebase some libraries.  Even if the developer has picked different offsets for all his .dlls, because in practice he has no guarantee that they&#8217;ll load at their preferred address.<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-203803">
				<div id="div-comment-203803" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Mack</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040816-00/?p=38163#comment-203803">
			August 17, 2004 at 11:15 am</a>		</div>

		<p>2^31 bit boundary, sorry.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-203843">
				<div id="div-comment-203843" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.valhallalegends.com/skywing' rel='external nofollow' class='url'>Skywing</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040816-00/?p=38163#comment-203843">
			August 17, 2004 at 11:45 am</a>		</div>

		<p>It&#8217;s probably there to encourage more uniform behavior across all platforms, which theoretically means more portable applications.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-203783">
				<div id="div-comment-203783" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Mack</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040816-00/?p=38163#comment-203783">
			August 17, 2004 at 11:12 am</a>		</div>

		<p>Skywing: &quot; Raymond covered this issue here <a target="_new" href="http://weblogs.asp.net/oldnewthing/archive/2003/10/08/55239.aspx" rel="nofollow">http://weblogs.asp.net/oldnewthing/archive/2003/10/08/55239.aspx</a> &quot;</p>
<p>That article explains why even on the x86, address space allocation granularity is 64K (to keep Windows&#8217; behaviour consistent among processor architectures; specifically the Alpha AXP). It also explains why on the Alpha AXP, there&#8217;s a 64 kb &quot;hole&quot; in the address space near 2^32 boundary.</p>
<p>It does *not* explain why the same hole should exist on x86 processors, or &#8212; even more astonishing &#8212; on 64-bit x86 processors.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-203813">
				<div id="div-comment-203813" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Mack</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040816-00/?p=38163#comment-203813">
			August 17, 2004 at 11:16 am</a>		</div>

		<p>Or *byte*, for that matter. I urgently need some sleep. Or caffeine. Preferably both&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-204243">
				<div id="div-comment-204243" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ben Hutchings</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040816-00/?p=38163#comment-204243">
			August 18, 2004 at 1:52 pm</a>		</div>

		<p>Skywing wrote: &quot;It&#8217;s probably there to encourage more uniform behavior across all platforms, which theoretically means more portable applications.&quot;</p>
<p>It seems to me that it is likely to do the exact opposite. By making undocumented behaviour consistent across all architectures, even where there are benefits to tuning it for each architecture, MS fails to challenge the assumptions of programmers who &quot;know too much&quot; about the underlying system. If things like this were to vary between architectures then programmers would learn sooner not to write unportable code. Er, I think.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-204253">
				<div id="div-comment-204253" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://weblogs.asp.net/oldnewthing' rel='external nofollow' class='url'>Raymond Chen</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040816-00/?p=38163#comment-204253">
			August 18, 2004 at 2:01 pm</a>		</div>

		<p>If they varied between architectures then programmers would still write unportable code, because &#8211; let&#8217;s be honest &#8211; raise your hand if you test your programs on Alpha AXP or ia64 before you release it&#8230;</p>
<p>By keeping the quirks the same, you increase the changes that a program written for one architecture will run on another architecture &quot;entirely by accident&quot;.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-204303">
				<div id="div-comment-204303" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">DrPizza</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040816-00/?p=38163#comment-204303">
			August 19, 2004 at 2:34 am</a>		</div>

		<p>&quot;By keeping the quirks the same, you increase the changes that a program written for one architecture will run on another architecture &quot;entirely by accident&quot;. &quot;</p>
<p>But you also increase the chances that a program which doesn&#8217;t *actually* work properly on another platform (say, because it truncates a pointer or something like that) *appears* to work *most* of the time.</p>
<p>That&#8217;s not a good thing.<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-204903">
				<div id="div-comment-204903" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.savagenomads.net/archives/000203.html' rel='external nofollow' class='url'>Savage Nomads</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040816-00/?p=38163#comment-204903">
			August 20, 2004 at 1:46 pm</a>		</div>

		<p>&amp;nbsp; As Evan&amp;nbsp;already mentioned on his blog, Raymond Chen has a great series on /3GB switch on his blog. What is really cool is that Raymond takes on some myths about the /3GB switch and&amp;nbsp; the fact that he&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-373403">
				<div id="div-comment-373403" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blogs.msdn.com/drnick/archive/2006/03/16/552628.aspx' rel='external nofollow' class='url'>Nicholas Allen's Indigo Blog</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040816-00/?p=38163#comment-373403">
			April 26, 2006 at 12:23 am</a>		</div>

		<p>From time to time I wonder who comes to read this blog and why, but those kinds of questions are very&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-431303">
				<div id="div-comment-431303" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blogs.msdn.com/drnick/archive/2006/03/16/maximum-size-of-a-soap-message.aspx' rel='external nofollow' class='url'>Nicholas Allen's Indigo Blog</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20040816-00/?p=38163#comment-431303">
			October 17, 2006 at 7:31 pm</a>		</div>

		<p>From time to time I wonder who comes to read this blog and why, but those kinds of questions are very</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

