<html>
<head>
<title>Returning values from a dialog procedure</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>Returning values from a dialog procedure</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>November 7, 2003 / year-entry #120</td></tr>
<tr><td><b>Tags:</b></td><td>code</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20031107-00/?p=41923</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>15</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">For some reason, the way values are returned from a dialog procedure confuses people, so I'm going to try to explain it a different way. The trick with dialog box procedures is realizing that they actually need to return two pieces of information: Was the message handled? If so, what should the return value be?...</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>
        For some reason, the way values are returned from a dialog procedure confuses people,
        so I'm going to try to explain it a different way. 
    </p>
<p>
        The trick with dialog box procedures is realizing that they actually need to return <b>two</b> pieces
        of information: 
    </p>
<ul>
<li>
            Was the message handled? 
        </li>
<li>
            If so, what should the return value be? 
        </li>
</ul>
<p>
        Since two pieces of information have to be returned, but a C function can have only
        one return value, there needs to be some other way to return the second piece of information. 
    </p>
<p>
        The return value of the dialog procedure is whether the message was handled. The second
        piece of information - what the return value should be - is stashed in the DWLP_MSGRESULT
        window long. 
    </p>
<p>
        In other words, DefDlgProc goes something like this: 
    </p>
<pre>LRESULT CALLBACK DefDlgProc(
    HWND hdlg, UINT uMsg, WPARAM wParam, LPARAM lParam)
{
    DLGPROC dp = (DLGPROC)GetWindowLongPtr(hdlg, DWLP_DLGPROC);
    SetWindowLongPtr(hdlg, DWLP_MSGRESULT, 0);
    BOOL_PTR fResult = dp(hdlg, uMsg, wParam, lParam);
    if (fResult) return GetWindowLongPtr(hdlg, DWLP_MSGRESULT);
    else ... do default behavior ...
}
</pre>
<p>
        If you return anything other than 0, then the value you set via <code>SetWindowLongPtr(hdlg,
        DWLP_MSGRESULT, value)</code> is used as the message result. 
    </p>
<p>
        For example, many WM_NOTIFY notifications allow you to override default behavior by
        returning TRUE. To prevent a listview label from being edited, you can return TRUE
        from the LVN_BEGINLABELEDIT notification. But if you are doing this from a dialog
        procedure, you have to do this in two steps: 
    </p>
<pre>    SetWindowLongPtr(hdlg, DWLP_MSGRESULT, TRUE);
    return TRUE;
</pre>
<p>
        The second line sets the return value for the dialog procedure, which tells DefDlgProc
        that the message has been handled and default handling should be suppressed. The first
        line tells DefDlgProc what value to return back to the sender of the message (the
        listview control). If you forget either of these steps, the desired value will not
        reach the listview control. 
    </p>
<p>
        Notice that <code>DefDlgProc</code> sets the DWLP_MSGRESULT to zero before sending
        the message. That way, if the dialog procedure neglects to set a message result explicitly,
        the result will be zero. 
    </p>
<p>
        This also highlights the importance of calling <code>SetWindowLongPtr</code> <b>immediately</b> before
        returning from the dialog procedure and no sooner. If you do anything between setting
        the return value and returning TRUE, that may trigger a message to be sent to the
        dialog procedure, which would set the message result back to zero. 
    </p>
<p>
        <b>Caution</b>: There are a small number of "special messages" which do not follow
        this rule. The list is given in <a href="http://msdn.microsoft.com/library/en-us/winui/WinUI/WindowsUserInterface/Windowing/DialogBoxes/DialogBoxReference/DialogBoxFunctions/DialogProc.asp">the
        documentation for DialogProc</a>. Why do these exceptions exist? Because when the
        dialog manager was first designed, it was determined that special treatment for these
        messages would make dialog box procedures easier to write, since you wouldn't have
        to go through the extra step of setting the DWLP_MSGRESULT. Fortunately, since those
        original days, nobody has added any new exceptions. The added mental complexity of
        remembering the exceptions outweigh the mental savings of not having to write one
        line of code ("SetWindowLongPtr(hdlg, DWLP_MSGRESULT, desiredResult)"). 
    </p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (15)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-130783">
				<div id="div-comment-130783" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Anonymous</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20031107-00/?p=41923#comment-130783">
			November 7, 2003 at 5:52 am</a>		</div>

		<p>Raymond, what&#8217;s the best way to ask you questions that aren&#8217;t necessarily about the topic you are posting on? I&#8217;m a little hesitant to post questions in the comment section.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-130793">
				<div id="div-comment-130793" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blogs.gotdotnet.com/raymondc/' rel='external nofollow' class='url'>Raymond Chen</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20031107-00/?p=41923#comment-130793">
			November 7, 2003 at 12:43 pm</a>		</div>

		<p>Just post them into the comments. Note that this is not a product support blog, so I only answer questions I feel like answering.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-130803">
				<div id="div-comment-130803" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Anonymous</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20031107-00/?p=41923#comment-130803">
			November 7, 2003 at 12:56 pm</a>		</div>

		<p>Are you implying that there are some product support blogs?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-130813">
				<div id="div-comment-130813" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Jack</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20031107-00/?p=41923#comment-130813">
			November 7, 2003 at 1:59 pm</a>		</div>

		<p>&quot;For some reason, the way values are returned from a dialog procedure confuses people&quot;</p>
<p>Well one reason is because the DialogProc API is completely different from a nearly identical WindowProc API.  If there were consistency in the API design, then there would be a DefDialogProc to be called and returned for unhandled dialog functions, and regular ones could return an LRESULT.</p>
<p>It doesn&#8217;t help that you&#8217;re allowed to return non-bool values because BOOL isn&#8217;t an enum but is just an int..  Et cetera, et cetera.</p>
<p>Anyway, there&#8217;s plenty of reasons the mistakes happen.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-130823">
				<div id="div-comment-130823" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blogs.gotdotnet.com/raymondc/' rel='external nofollow' class='url'>Raymond Chen</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20031107-00/?p=41923#comment-130823">
			November 7, 2003 at 2:12 pm</a>		</div>

		<p>You can do the DefDlgProc thing instead of a dialog procedure if you prefer the WndProc model for dialogs.</p>
<p>When I wrote &quot;this is not a product support blog&quot; I meant that this blog is not for product support. I have no idea if there exist blogs for product support. (I wouldn&#8217;t think so, since a blog is really not suited to Q&amp;A back-and-forth communications. It&#8217;s much more a one-way medium with a little bit of feedback.)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-130833">
				<div id="div-comment-130833" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Jack</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20031107-00/?p=41923#comment-130833">
			November 7, 2003 at 3:18 pm</a>		</div>

		<p>No, what I mean is for a window proc you do this:</p>
<p>function myWindowProc<br />
{<br />
  if ( msg == WM_SOMEMSG )<br />
  {<br />
      &#8230;<br />
      return myValue;<br />
  }</p>
<p>  return DefWindowProc(&#8230;);<br />
}</p>
<p>now if dialogs worked this way</p>
<p>function myDialogProc<br />
{<br />
  if ( msg == WM_SOMEMSG )<br />
  {<br />
      &#8230;<br />
      return myValue;<br />
  }</p>
<p>  return DefDlgProc(&#8230;);<br />
}</p>
<p>rather than&#8230;</p>
<p>function myDialogProc<br />
{<br />
  if ( msg == WM_SOMEMSG )<br />
  {<br />
      &#8230;<br />
      SetWindowLong( &#8230;, myValue );<br />
      return TRUE;<br />
  }</p>
<p>  return FALSE;<br />
}</p>
<p>..<br />
then it wouldn&#8217;t be confusing.  Because there&#8217;s that disparity, there&#8217;s confusion.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-130843">
				<div id="div-comment-130843" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Anonymous</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20031107-00/?p=41923#comment-130843">
			November 7, 2003 at 4:46 pm</a>		</div>

		<p>My question (from first comment) is about window position persistence. </p>
<p>It seems like a fairly common thing for an app developer to write. So what, it must have been done a couple of thousand times .. why doesn&#8217;t windows (explorer) do this for me?  </p>
<p>Would it be too much effort for an app&#8217;s window position to be remembered by Explorer instead of everyone having to re-write this code everytime they write a new application.</p>
<p>Sure there are likely to be some apps that don&#8217;t want/need this but it wouldn&#8217;t be too hard for a developer to turn this off with a one-liner at the start of their app?</p>
<p>It&#8217;s not like it&#8217;s hard but it&#8217;s one more place to introduce bugs ..</p>
<p>It&#8217;s not necessarily Raymond&#8217;s answer I am interested in, just his opinion :)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-130853">
				<div id="div-comment-130853" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Centaur</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20031107-00/?p=41923#comment-130853">
			November 8, 2003 at 4:53 am</a>		</div>

		<p>Not Explorer! Because this would mean this feature would not work when programs are started from other shells.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-130863">
				<div id="div-comment-130863" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Anonymous</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20031107-00/?p=41923#comment-130863">
			November 8, 2003 at 11:51 am</a>		</div>

		<p>Other shells? Like?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-130873">
				<div id="div-comment-130873" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Mike</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20031107-00/?p=41923#comment-130873">
			November 8, 2003 at 6:53 pm</a>		</div>

		<p>Windows 95 was supposed to be doc-centric IIRC (Office ceased to be MDI around that time), so the cache key for the window position cache would have been the document identifier, not the app identifier. But some apps don&#8217;t really do documents.</p>
<p>I would agree that shells should have policies about things like whether when you reopen &quot;the same window&quot; it remembers the position. The OS should NOT have a policy about this.</p>
<p>I would agree that it should be easier to slap another shell on Windows, too.</p>
<p>Finally, the way DialogProcs work works very nicely for 99.999% of dialogs. This should be kept in mind when critiquing their inconsistency with WindowProcs.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-130883">
				<div id="div-comment-130883" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Jack</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20031107-00/?p=41923#comment-130883">
			November 9, 2003 at 10:52 am</a>		</div>

		<p>Why should it be kept in mind?  At the best case, it&#8217;s the same number of lines of code&#8230;  So a </p>
<p>return FALSE;</p>
<p>would become at </p>
<p>return DefDlgProc( &#8230; );</p>
<p>more typing, but the same number of lines.  And that&#8217;s only the best case.  I&#8217;m not really sure who it&#8217;s helping.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-130893">
				<div id="div-comment-130893" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Anonymous</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20031107-00/?p=41923#comment-130893">
			November 10, 2003 at 5:15 am</a>		</div>

		<p>Mike Said: I would agree that shells should have policies about things like whether when you reopen &quot;the same window&quot; it remembers the position. The OS should NOT have a policy about this.</p>
<p>Which is exactly my point. I can&#8217;t think of a sane reason for Explorer *not* to do this, and I&#8217;m hoping someone else can.  I&#8217;ve no idea what other shells are out there and who in general would/does use them, at the moment how those would react to this is probably the only problem (as far as I can see &#8211; which admittedly is not far).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-130903">
				<div id="div-comment-130903" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blogs.gotdotnet.com/raymondc/' rel='external nofollow' class='url'>Raymond Chen</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20031107-00/?p=41923#comment-130903">
			November 13, 2003 at 5:20 pm</a>		</div>

		<p>In my opinion, window positioning is something for the app to handle. And it&#8217;s certainly not Explorer&#8217;s job &#8211; what if Explorer isn&#8217;t running?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-130913">
				<div id="div-comment-130913" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Anonymous</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20031107-00/?p=41923#comment-130913">
			December 12, 2003 at 2:40 am</a>		</div>

		<p>And just to add to the confusion WM_COMPAREITEM ignores DWL_MSGRESULT and uses the return value of the dialog proc. Go figure.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-130923">
				<div id="div-comment-130923" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Anonymous</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20031107-00/?p=41923#comment-130923">
			December 12, 2003 at 3:01 am</a>		</div>

		<p>Oh wait you already said that, next time I&#8217;ll try not to be retarded&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

