<html>
<head>
<title>Getting the location of the Close button in the title bar, from Windows 2000 or Windows XP</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>Getting the location of the Close button in the title bar, from Windows 2000 or Windows XP</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>June 30, 2014 / year-entry #158</td></tr>
<tr><td><b>Tags:</b></td><td>code</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20140630-00/?p=623</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>11</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">Today's Little Program locates the × button in the corner of the window and displays a balloon tip pointing at it. We did this some time ago with the help of the WM_GET­TITLE­BAR­INFO­EX message, which is new for Windows Vista. But what if you don't have that message available, say, because you're running on Windows...</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>
Today's Little Program locates the &times; button in the corner
of the window and
displays a balloon tip pointing at it.
We did this
<a HREF="http://blogs.msdn.com/b/oldnewthing/archive/2014/05/05/10522553.aspx">
some time ago</a>
with the help of the
<code>WM_<wbr>GET&shy;TITLE&shy;BAR&shy;INFO&shy;EX</code> message,
which is new for Windows Vista.
But what if you don't have that message available,
say, because you're running on Windows 2000 or Windows&nbsp;XP
or (gasp) Windows&nbsp;98?
</p>
<p>
You can use the classic Accessibility interface
<code>IAccessible</code>
to enumerate the buttons in the title bar and see which
one the window reports as the Close button.
</p>
<p>
Let's take the program from last time and change the
<code>Get&shy;Close&shy;Button&shy;Center</code> function:
</p>
<pre>
<font COLOR=blue>#include &lt;oleacc.h&gt;
#include &lt;atlbase&gt;</font>

BOOL GetCloseButtonCenter(HWND hwnd, POINT *ppt)
{
 <font COLOR=blue>CComPtr&lt;IAccessible&gt; spacc;
 if (FAILED(AccessibleObjectFromWindow(hwnd, OBJID_TITLEBAR,
                   IID_PPV_ARGS(&amp;spacc)))) return FALSE;
 CComQIPtr&lt;IEnumVARIANT&gt; spenum(spacc);
 if (!spenum) return FALSE;
 for (CComVariant vtChild; spenum-&gt;Next(1, &amp;vtChild, nullptr) == S_OK;
      vtChild.Clear()) {
  CComVariant vtState;
  if (FAILED(spacc-&gt;get_accState(vtChild, &amp;vtState))) continue;
  if (vtState.vt != VT_I4) continue;
  if (vtState.lVal &amp; (STATE_SYSTEM_INVISIBLE |
                      STATE_SYSTEM_OFFSCREEN |
                      STATE_SYSTEM_UNAVAILABLE)) continue;
  long left, top, width, height;
  if (FAILED(spacc-&gt;accLocation(&amp;left, &amp;top, &amp;width, &amp;height,
                                vtChild))) continue;
  POINT pt = { left + width / 2, top + height / 2 };
  if (SendMessage(hwnd, WM_NCHITTEST, 0,
                  MAKELPARAM(pt.x, pt.y)) == HTCLOSE) {
   *ppt = pt;
   return TRUE;
  }
 }
 return FALSE;</font>
}
</pre>
<p>
We obtain the <code>IAccessible</code> interface for the title bar
and proceed to enumerate its children.
For each child, we get its location, and then use the
<code>WM_<wbr>NC&shy;HIT&shy;TEST</code> message to determine
programmatically what that location corresponds to.
If the answer is "This is the Close button,"
then we found the button and report its center.
</p>
<p>
Note that this once again highlights
<a HREF="http://blogs.msdn.com/b/oldnewthing/archive/2011/02/18/10131176.aspx">
the distinction between
<code>WM_<wbr>NC&shy;MOUSE&shy;MOVE</code> and
<code>WM_<wbr>NC&shy;HIT&shy;TEST</code></a>.
Hit-testing can occur for reasons other than mouse movement.
</p>
<p>
<b>Exercise</b>:
Why couldn't we use the
<code>IAccessible::<wbr>get_<wbr>acc<wbr>Name</code>
method to figure out which button each child represents?</p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (11)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-1134833">
				<div id="div-comment-1134833" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140630-00/?p=623#comment-1134833">
			June 30, 2014 at 7:14 am</a>		</div>

		<p>Because it&#39;s localizable.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1134853">
				<div id="div-comment-1134853" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Erik</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140630-00/?p=623#comment-1134853">
			June 30, 2014 at 7:21 am</a>		</div>

		<p>Guess: The accName will be localized, and have exciting new values in translated versions of Windows, while the program will only look for the English one and conclude that no close button exists.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-wndsks even thread-even depth-1" id="comment-1134863">
				<div id="div-comment-1134863" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/skSdnW' rel='external nofollow' class='url'>skSdnW</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140630-00/?p=623#comment-1134863">
			June 30, 2014 at 7:32 am</a>		</div>

		<p>Why does MS not document the system metrics used by classic/pre-uxtheme windows and common controls? <a rel="nofollow" target="_new" href="http://web.archive.org/web/20070301202835/http://shellrevealed.com/photos/blog_images/images/4538/original.aspx">web.archive.org/&#8230;/original.aspx</a> is really useful and I wish all of this was actually documented.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-mngoldeneagle odd alt thread-odd thread-alt depth-1" id="comment-1134893">
				<div id="div-comment-1134893" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/MNGoldenEagle' rel='external nofollow' class='url'>MNGoldenEagle</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140630-00/?p=623#comment-1134893">
			June 30, 2014 at 7:54 am</a>		</div>

		<p>@skSdnW: The size of those metrics can vary depending on the DPI settings (otherwise known as &quot;adjust this ruler on your screen control&quot;) or if you adjusted the size of the various elements in the Appearances control panel.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1134903">
				<div id="div-comment-1134903" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">SI</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140630-00/?p=623#comment-1134903">
			June 30, 2014 at 8:15 am</a>		</div>

		<p>They can vary, but knowing when to use which metric is indeed very useful. For example when custom drawing a column in a listview, its not always straightforward to figure out the various alignment issues, and when to use which value.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-wndsks odd alt thread-odd thread-alt depth-1" id="comment-1134913">
				<div id="div-comment-1134913" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/skSdnW' rel='external nofollow' class='url'>skSdnW</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140630-00/?p=623#comment-1134913">
			June 30, 2014 at 8:25 am</a>		</div>

		<p>@MNGoldenEagle: When visual styles are off GetSystemMetrics and SystemParametersInfo are then only things you have to work with and knowing which SM_ values are used where would be useful. Some controls hardcode a pixel value in some places (ListView? Menu?) but most of the time there should be a metric you can use&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-fredericmagnyf even thread-even depth-1" id="comment-1134933">
				<div id="div-comment-1134933" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Medinoc' rel='external nofollow' class='url'>Medinoc</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140630-00/?p=623#comment-1134933">
			June 30, 2014 at 9:02 am</a>		</div>

		<p>I&#39;m surprised you can QueryInterface an IAccessible into an IEnumVARIANT: IEnumXxxxx are one-time used objects; that would mean the IAccessible&#39;s children can only be enumerated once&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1134963">
				<div id="div-comment-1134963" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">SI</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140630-00/?p=623#comment-1134963">
			June 30, 2014 at 9:58 am</a>		</div>

		<p>It could be creating a subobject and returning it when handling the QI. As long as QIing the IEnumVARIANT to IUnknown returns the same IUnknown pointer as QIing the base object to IUnknown it should be legal COM. This just means going from the IEnumVariant -&gt; IUnknown -&gt;IEnumVariant would reset the enumeration.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-fredericmagnyf even thread-even depth-1" id="comment-1135163">
				<div id="div-comment-1135163" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Medinoc' rel='external nofollow' class='url'>Medinoc</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140630-00/?p=623#comment-1135163">
			July 1, 2014 at 6:33 am</a>		</div>

		<p>@Joker_vD: Isn&#39;t that what IServiceProvider does? The services it provides don&#39;t have to implement QueryService&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1135093">
				<div id="div-comment-1135093" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joker_vD</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140630-00/?p=623#comment-1135093">
			June 30, 2014 at 11:52 pm</a>		</div>

		<p>Yeah, that&#39;s an exciting quirk of COM: while it stands for *Component* Object Model, you actually don&#39;t get to see any components! You only see interfaces that you cast one to another, which causes many interesting things to the components behind the scenes. Really, why couldn&#39;t we have actual components with QI to dispense interfaces? Then interfaces themselves wouldn&#39;t have QI, and I bet that would simplify aggregation tremendously.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1135793">
				<div id="div-comment-1135793" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">John Doe</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140630-00/?p=623#comment-1135793">
			July 3, 2014 at 6:03 am</a>		</div>

		<p>@SI, It&#39;s barely legal COM, if at all.</p>
<p>If the QueryInterface for IEnumVARIANT returns the same enumerator but resetting it before, then QI is having completely undesired and unreliable side effects, most probably not observable across apartments due to interface pointer caching.</p>
<p>If, on the other hand, it returns a new kind-of-aggregatee enumerator (remember, QI for IUnknown must return the same pointer), given CComQIPtr&lt;IEnumVARIANT&gt; spenum1(spacc) and CComQIPtr&lt;IEnumVARIANT&gt; spenum2(spacc), the calls to spenum1-&gt;Next will not affect the calls to spenum2-&gt;Next, so it becomes apparent you&#39;re violating identity.</p>
<p>Either way, you should always call Clone on such QI&#39;ed IEnumVARIANT, which should provide a fresh, non-aggregated and single-identity enumerator.</p>
<p>Unless, Of Courseâ¢, in this instance, Clone itself misbehaves, such as simply resetting the current enumerator and returning it (or one that shares state), because it was most likely implemented by teh the same mÌ¶oÌ¶rÌ¶oÌ¶nÌ¶ person that miscoded QueryInterface.</p>
<p>@Joker_vD, I can&#39;t tell if you&#39;re being serious. &nbsp;QueryInterface is so essential in IUnknown that, without it, COM wouldn&#39;t even get to first base, much less being likened to love.</p>
<p>For instance, what good would an IUnknown pointer be, by itself, without QueryInterface? &nbsp;Or pick your favorite widespread used interface and ask the same question.</p>
<p>Objects would implement an ubiquitous casting interface e.g. IDynamicCast, you&#39;d reduce IUnknown or have a separate interface for reference count e.g. IReferenceCount, and you&#39;d have to decide when it was interesting to pass IDynamicCast or one of its descendants.</p>
<p>You can easily reach the conclusion that IDynamicCast is way (WWAAYY) more interesting, because you can get IReferenceCount, or anything at all from it.</p>
<p>But you&#39;ll soon find it hard to properly maintain an object&#39;s lifetime. &nbsp;If there was a rule stating that casting doesn&#39;t automatically increment the count, you&#39;d have a serious Release race condition on the client. &nbsp;If there was a rule stating that casting to IReferenceCount doesn&#39;t increase the count, it would make only pointer to this interface, but such an important one, subject to the Release race condition. &nbsp;If casting would always increase the count, how would to keep the count of casts you&#39;ve made? &nbsp;Also, how would you allow interfaces to be actual inner instances (e.g. tear-offs) or an aggregatee?</p>
<p>So, you easily reach the conclusion that every interface pointer must have lifetime management. &nbsp;Seems like IUnknown.</p>
<p>@Medinoc, the closest is actually IObjectProvider-&gt;QueryObject, because IServiceProvider-&gt;QueryService may delegate to a chain or hierarchy of objects. &nbsp;But only IUnknown-&gt;QueryInterface requires and guarantees a set of properties, such as object identity, essential to even the most basic purposes.</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

