<html>
<head>
<title>How can I write a program that monitors another window for a title change?</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>How can I write a program that monitors another window for a title change?</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>June 1, 2018 / year-entry #126</td></tr>
<tr><td><b>Tags:</b></td><td>code</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20180601-00/?p=98895</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>0</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">Accessibility saves the day once again.</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>
A customer was writing a monitoring application and wanted
to be notified if a window's title changes.
</p>
<p>
Sure, we can use accessibility to do that.
</p>
<pre>
#define UNICODE
#define <a HREF="https://blogs.msdn.microsoft.com/oldnewthing/20040212-00/?p=40643">_UNICODE</a>
#define STRICT
#include &lt;windows.h&gt;
#include &lt;stdio.h&gt;

HWND g_hwndMonitor;

void CALLBACK WinEventProc(
  HWINEVENTHOOK hook,
  DWORD event,
  HWND hwnd,
  LONG idObject,
  LONG idChild,
  DWORD idEventThread,
  DWORD time)
{
  if (hwnd == g_hwndMonitor &amp;&amp;
      idObject == OBJID_WINDOW &amp;&amp;
      idChild == CHILDID_SELF &amp;&amp;
      event == EVENT_OBJECT_NAMECHANGE) {
      printf("title changed\n");
  }
}

int __cdecl main(int, char**)
{
 g_hwndMonitor = FindWindow(L"Awesome Program", nullptr);
 DWORD processId;
 DWORD threadId = GetWindowThreadProcessId(g_hwndMonitor, &amp;processId);
 HWINEVENTHOOK hook = SetWinEventHook(
    EVENT_OBJECT_NAMECHANGE,
    EVENT_OBJECT_NAMECHANGE,
    nullptr,
    WinEventProc,
    processId,
    threadId,
    WINEVENT_OUTOFCONTEXT);
 MessageBox(nullptr, L"Press OK when bored", L"Title", MB_OK);

 UnhookWinEvent(hook);
 return 0;
}
</pre>
<p>
The program starts by identifying the window it wants to monitor.
Presumably the customer will use some domain-specific knowledge
to find the window, but here, we'll just demonstrate with the
<code>Find</code><code>Window</code> function.
</p>
<p>
We get the thread and process ID for the window and use it to
register a thread-specific accessibility event hook, filtered
to name changes.
</p>
<p>
In the event callback, we see if the notification is for
the window we are monitoring. If so, we print a message.
The customer's program would presumably do something more
interesting than just print a message.</p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

