<html>
<head>
<title>How can you use both versions 5 and 6 of the common controls within the same module?</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>How can you use both versions 5 and 6 of the common controls within the same module?</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>May 8, 2014 / year-entry #116</td></tr>
<tr><td><b>Tags:</b></td><td>code</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20140508-00/?p=1043</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>9</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">Commenter Medinoc was baffled by the statement that the decision to use the visual-styles-enabled version of the common controls library is done on a window-by-window basis. " Isn't it rather on a per-module basis, depending on each module's manifest? If it is indeed on a per-window basis, how does one choose?" Whether a particular call...</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>
Commenter Medinoc was baffled by the statement that
the decision to use the visual-styles-enabled version of the
common controls library is done on a window-by-window basis.
"<a HREF="http://blogs.msdn.com/b/oldnewthing/archive/2011/05/26/10168421.aspx#10169554"
>
Isn't it rather on a per-module basis,
depending on each module's manifest</a>?
If it is indeed on a per-window basis, how does one choose?"
</p>
<p>
Whether a particular call to
<code>Create&shy;Window</code> (or one of its moral equivalents)
gets the classic version of the control or the visual-styles-enabled
version of the control depends on which activation context is active
at the point of the call.
If an activation context with version 6 of the common controls is active,
then you get the control from version 6 of the common controls.
Otherwise, you get the classic control.
</p>
<p>
If you use the
<code>ISOLATION_<wbr>AWARE_<wbr>ENABLED</code> macro,
then including <code>commctrl.h</code> turns on a bunch of
macros that take all your calls to
<code>Create&shy;Window</code> and related functions,
and converts them into something like this:
</p>
<pre>
HWND CreateWindow_wrapped(... parameters ...)
{
 HWND hwnd = nullptr;
 ULONG_PTR ulCookie;
 if (ActivateActCtx(ModuleContext, &amp;ulCookie)) {
  hwnd = CreateWindow(... parameters ...);
 DeactivateActCtx(0, ulCookie);
 }
 return hwnd;
}
</pre>
<p>
where <code>Module&shy;Context</code> is a global variable
that holds the activation context you specified in your manifest.
</p>
<p>
In other words, any time your code tries to create a window,
the wrapper macros
activate your v6 manifest,
create the window,
then deactivate the manifest.
</p>
<p>
Remember that nobody walks the stack looking to see who the caller is.
<a HREF="http://blogs.msdn.com/b/oldnewthing/archive/2004/01/01/47042.aspx">
The return address is not reliable</a>.
(And checking the return address doesn't help for dynamically-generated
code anyway.)
The way to know which activation context is active is for somebody
to actually come out and set it.
</p>
<p>
Back to the question:
The way you choose whether you want a classic or a visual-styles-enabled
version of a control is by deciding whether or not to have the
v6 manifest active when you call
<code>Create&shy;Window</code>.
</p>
<p>
A common mistake is that people will call a function that requires
a v6 manifest, such as <code>Task&shy;Dialog</code>,
but they will forget to activate the v6 manifest before calling.
The result is that they call into version 6 of the common controls,
but when the common controls library tries to create its task dialog,
<i>it fails</i> because the v5 context is active,
and the v5 context does not have a task dialog control.</p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (9)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-1123563">
				<div id="div-comment-1123563" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Daniel</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140508-00/?p=1043#comment-1123563">
			May 8, 2014 at 7:21 am</a>		</div>

		<p>While technically doable, I fail to see any real use case of this&#8230;</p>
<p>(Maybe when &quot;extending&quot; an existing V5 application with nice features like TaskDialog without breaking the current look&amp;feel?)</p>
<p>I personally never encountered a situation where this is required&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1123573">
				<div id="div-comment-1123573" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Roger Lipscombe</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140508-00/?p=1043#comment-1123573">
			May 8, 2014 at 7:40 am</a>		</div>

		<p>@Daniel &#8212; this is useful when you&#39;ve got a DLL that wants v6 controls loaded into a process that&#39;s using v5 controls. Personally, I&#39;ve never needed it either, but I suspect that Windows Explorer extensions use it all the time (or should do &#8212; I suspect Raymond has some horror stories there, too).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1123603">
				<div id="div-comment-1123603" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Myria</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140508-00/?p=1043#comment-1123603">
			May 8, 2014 at 1:23 pm</a>		</div>

		<p>Does LoadLibraryExW automatically activate the activation context of the new library for the duration of the LoadLibraryExW call? &nbsp;I&#39;m curious because when I was debugging why some iTunes installations corrupted themselves during updating earlier this year, I noticed that it was failing because msvcr90.dll was rejecting its activation context. &nbsp;The EXE had no manifest; it LoadLibrary&#39;d a DLL with a manifest that depended on msvcr90.dll, but msvcr90.dll&#39;s call to FindActCtxSectionStringW during msvcr90.dll&#39;s DllMain(DLL_PROCESS_ATTACH) failed.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1123613">
				<div id="div-comment-1123613" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Rick C</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140508-00/?p=1043#comment-1123613">
			May 8, 2014 at 2:14 pm</a>		</div>

		<p>I know the linked article says it&#39;s per-window, but this post seems to imply you can have both a V5 and v6 version of the same control in the same window: &nbsp;create one button, activate your context, create a second one, deactivate the context.</p>
<p>Normally I&#39;d test this out but I don&#39;t know anything about activation contexts and don&#39;t have the time this week to do all the research necessary.</p>
<div class="post">[<em>It is per-window. The outer window, its first child window, and its second child window can choose independently which version they are. -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1123663">
				<div id="div-comment-1123663" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Daniel</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140508-00/?p=1043#comment-1123663">
			May 8, 2014 at 11:49 pm</a>		</div>

		<p>@Rick C: it&#39;s still &quot;per window&quot;: Each button is it&#39;s own window after all. (There&#39;s nothing here to say that CHILD-Windows need to use the same version of the common controls)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1123693">
				<div id="div-comment-1123693" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Koro</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140508-00/?p=1043#comment-1123693">
			May 9, 2014 at 7:50 am</a>		</div>

		<p>Myria: If the loaded DLL&#39;s manifest is resource ID 2, it gets activated for the duration of the call to DllMain.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1123733">
				<div id="div-comment-1123733" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">John Doe</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140508-00/?p=1043#comment-1123733">
			May 9, 2014 at 8:21 am</a>		</div>

		<p>@Myria, I&#39;ve used LoadLibrary with multiple DLLs statically linked to msvcr80.dll with the manifest in the RT_MANIFEST ISOLATIONAWARE_MANIFEST_RESOURCE_ID resource of each DLL from an application without manifests and no use of the activation context API.</p>
<p>I don&#39;t know about LoadLibraryEx, but LoadLibrary surely does activate the DLL&#39;s context, so msvcr80&#39;s DllMain doesn&#39;t fail, which is very similar to msvcr90&#39;s DllMain regarding the context check.</p>
<p>Side rant:</p>
<p>The maninfested runtimes were supposed to resolve the DLL hell, where every VC++ version had a msvcrt.dll. &nbsp;However, either the name change or the manifest would suffice. &nbsp;With the introduction and check for the manifest came the manifest hell. &nbsp;I guess this was fashion when comctl32 became side-by-side, but that DLL didn&#39;t change name.</p>
<p>For instance, which version msvcr90.dll are you talking about?</p>
<p>9.0.21022.8</p>
<p>9.0.30729.1</p>
<p>9.0.30729.4137</p>
<p>9.0.30729.4148</p>
<p>9.0.30729.4926</p>
<p>9.0.30729.4940</p>
<p>9.0.30729.4974</p>
<p>I know about redirection, it&#39;s done at system level when installing a newer redistributable package, but it&#39;s one more thing you have to know and worry about if you&#39;re (really) trying to isolate an application. &nbsp;I&#39;m not saying you should isolate every app, but sometimes you must isolate one app or two (e.g. services, particularly distributed ones).</p>
<p>In newer versions, they resolved both the DLL hell and the manifest hell by just having a different name and not requiring or checking for a manifest. &nbsp;Export symbols don&#39;t change between 10.0.x and 10.0.y or 10.0.z (e.g. msvcr110.dll), so not a big deal.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1123813">
				<div id="div-comment-1123813" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Marc K</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140508-00/?p=1043#comment-1123813">
			May 12, 2014 at 5:24 am</a>		</div>

		<p>It was very frustrating the first time I encountered the issue of version 5 of the library loading when I wanted version 6. &nbsp;I can&#39;t think of how this could have been implemented with more complexity and potential to confuse.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1124223">
				<div id="div-comment-1124223" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Oliver_F</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20140508-00/?p=1043#comment-1124223">
			May 14, 2014 at 4:38 am</a>		</div>

		<p>Thank you very much for this post! </p>
<p>Our use case is exactly as Daniel above speculated: We are writing an MSAccess application in corporate environment. An while we cannot change the msaccess.exe.manifest to use CommonControls6, I can now write my own little manifest, switch to it using the ActivationContext API, call maybe the TaskDialog and clean up afterwards. </p>
<p>As the same techniques basically applies to using &quot;registration-free COM&quot;, I will probably be able to call into some additional COM objects without having to write to the registry, which I can&#39;t do as normal user either.</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

