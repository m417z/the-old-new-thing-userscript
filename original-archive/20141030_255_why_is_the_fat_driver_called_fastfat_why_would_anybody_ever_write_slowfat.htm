<html>
<head>
<title>Why is the FAT driver called FASTFAT? Why would anybody ever write SLOWFAT?</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>Why is the FAT driver called FASTFAT? Why would anybody ever write SLOWFAT?</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>October 30, 2014 / year-entry #256</td></tr>
<tr><td><b>Tags:</b></td><td>history</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20141030-00/?p=43733</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>33</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">Anon is interested in why the FAT driver is called FASTFAT.SYS. "Was there an earlier slower FAT driver? What could you possibly get so wrong with a FAT implementation that it needed to be chucked out?" The old FAT driver probably had a boring name like, um, FAT.SYS. At some point, somebody decided to write...</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>Anon is interested in <a href="http://blogs.msdn.com/b/oldnewthing/archive/2012/12/18/10378851.aspx#10379941"> why the FAT driver is called FASTFAT.SYS</a>. "Was there an earlier slower FAT driver? What could you possibly get so wrong with a FAT implementation that it needed to be chucked out?"</p>
<p> The old FAT driver probably had a boring name like, um, FAT.SYS. At some point, somebody decided to write a newer, faster one, so they called it FASTFAT. And the name stuck. </p>
<p> As for what you could possibly get so wrong with a FAT implementation that it needed to be improved: Remember that circumstances change over time. A design that works well under one set of conditions may start to buckle when placed under alternate conditions. It's not that the old implementation was wrong; it's just that conditions have changed, and the new implementation is better for the new conditions. </p>
<p> For example, back in the old days, there were three versions of FAT: FAT8, FAT12, and FAT16. For such small disks, simple algorithms work just fine. In fact, they're preferable because a simple algorithm is easy to get right and is easier to debug. It also typically takes up a lot less space, and memory was at a premium in the old days. An <var>O</var>(<var>n</var>) algorithm is not a big deal if <var>n</var> never gets very large and the constants are small. Since FAT16 capped out at 65535 clusters per drive, there was a built-in limit on how big <var>n</var> could get. If a typical directory has only a few dozen files in it, then a linear scan is just fine. </p>
<p> It's natural to choose algorithms that map directly to the on-disk data structures. (Remember, data structures determine algorithms.) FAT directories are just unsorted arrays of file names, so a simple directory searching function would just read through the directory one entry at a time until it found the matching file. Finding a free cluster is just a memory scan looking for a 0 in the allocation table. Memory management was simple: Don't try. Let the disk cache do it. </p>
<p> These simple algorithms worked fine until FAT32 showed up and bumped <var>n</var> sky high. But fortunately, by the time that happened, computers were also faster and had more memory available, so you had more room to be ambitious. </p>
<p> The big gains in FASTFAT came from algorithmic changes. For example, the on-disk data structures are transformed into more efficient in-memory data structures and cached. The first time you look in a directory, you need to do a linear search to collect all the file names,  but if you cache them in a faster data structure (say, a hash table), subsequent accesses to the directory become much faster. And since computers now have more memory available, you can afford to keep a cache of directory entries around, as opposed to the old days where memory was tighter and large caches were a big no-no. </p>
<p> (I wonder if any non-Microsoft FAT drivers do this sort of optimization, or whether they just do the obvious thing and use the disk data structures as memory data structures.) </p>
<p> The original FAT driver was very good at solving the problem it was given, while staying within the limitations it was forced to operate under. It's just that over time, the problem changed, and the old solutions didn't hold up well any more. I guess it's a matter of interpretation whether this means that the old driver was "so wrong." If your child outgrows his toddler bed, does that mean the toddler bed was a horrible mistake? </p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (33)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-1158743">
				<div id="div-comment-1158743" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20141030-00/?p=43733#comment-1158743">
			October 30, 2014 at 7:05 am</a>		</div>

		<p>[I wonder if any non-Microsoft FAT drivers do this sort of optimization]</p>
<p>Linux caches above the driver level.</p>
<div class="post">[<em>This isn&#39;t caching. This is data transformation. Are you saying that the answer is &quot;No, Linux drivers do linear scanning&quot;? -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1158753">
				<div id="div-comment-1158753" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Gabe</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20141030-00/?p=43733#comment-1158753">
			October 30, 2014 at 7:13 am</a>		</div>

		<p>I don&#39;t remember there ever being a FAT.SYS. Does anybody know when FASTFAT.SYS first shipped?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-bboorman even thread-even depth-1" id="comment-1158763">
				<div id="div-comment-1158763" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Brian_EE' rel='external nofollow' class='url'>Brian_EE</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20141030-00/?p=43733#comment-1158763">
			October 30, 2014 at 7:15 am</a>		</div>

		<p>Plus, don&#39;t forget, FAT was written on an airplane! <a rel="nofollow" target="_new" href="http://blogs.msdn.com/b/oldnewthing/archive/2013/10/08/10454920.aspx">blogs.msdn.com/&#8230;/10454920.aspx</a></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1158783">
				<div id="div-comment-1158783" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Cesar</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20141030-00/?p=43733#comment-1158783">
			October 30, 2014 at 7:29 am</a>		</div>

		<p>As @Joshua said: Linux has caches at the VFS level, in particular the dentry (directory entry) cache and the inode cache. They use highly efficient data structures, it&#39;s one of the most optimized areas of the kernel (no joke &#8211; they have things like lockless tree structures and highly optimized word-at-a-time filename comparison). So, while I haven&#39;t looked in detail, the Linux FAT driver probably doesn&#39;t have as many optimizations as it would have otherwise.</p>
<p>I don&#39;t know how it is on Windows; does it have caching in the common (VFS-equivalent) layer, or is it all the responsibility of the filesystem driver?</p>
<div class="post">[<em>Ah, I see. The data transformation happens at a higher level: The low-level component parses file system data structures, and the high-level component organizes them for fast access. -Raymond</em>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1158793">
				<div id="div-comment-1158793" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Karellen</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20141030-00/?p=43733#comment-1158793">
			October 30, 2014 at 7:29 am</a>		</div>

		<p>For anyone actually interested in looking at what the Linux fat driver does:</p>
<p><a rel="nofollow" target="_new" href="https://git.kernel.org/cgit/linux/kernel/git/torvalds/linux.git/tree/fs/fat">git.kernel.org/&#8230;/fat</a></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1158823">
				<div id="div-comment-1158823" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">marcan</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20141030-00/?p=43733#comment-1158823">
			October 30, 2014 at 9:17 am</a>		</div>

		<p>Linux has caching at, above, and below the filesystem driver level. There&#39;s the disk cache (of course), there&#39;s the VFS cache (mentioned above, filesystem independent, and highly optimized), and then the FAT driver also maintains its own cache for the FAT (blockmap) itself that uses very different in-memory data structures (linux/fs/fat/cache.c).</p>
<p>From a quick skim of the code, I don&#39;t think there&#39;s FAT-specific directory caching going on, particularly for writes &#8211; for example, when you delete a file, the FAT driver does do a linear scan through the on-disk-format target directory to find the right entry to remove. My guess is there are rather few people using Linux to deal with FAT filesystems requiring high performance directory mutations on very large directories (at that point, using a modern filesystem is a much better idea). The driver does take care of caching the FAT for fast allocation and lookup, and VFS takes care of caching directory entries and inodes, which probably covers the vast majority of common use cases.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1158853">
				<div id="div-comment-1158853" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Azarien</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20141030-00/?p=43733#comment-1158853">
			October 30, 2014 at 10:41 am</a>		</div>

		<p>I&#39;ve never heard of FAT8. Is is still supported? If not, what was the last Windows or MS-DOS version that did?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1158863">
				<div id="div-comment-1158863" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">j b</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20141030-00/?p=43733#comment-1158863">
			October 30, 2014 at 11:05 am</a>		</div>

		<p>@Azarien,</p>
<p>Check wikipedia, <a rel="nofollow" target="_new" href="http://en.wikipedia.org/wiki/File_Allocation_Table">en.wikipedia.org/&#8230;/File_Allocation_Table</a> has a section on FAT8. Looks like it was a precursor to MS-DOS FAT12/16, but was never supported by neither MS-DOS nor Windows (at least if I understand the Wikipedia article correctly).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1158873">
				<div id="div-comment-1158873" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Myria</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20141030-00/?p=43733#comment-1158873">
			October 30, 2014 at 11:44 am</a>		</div>

		<p>Now if only ExFAT weren&#39;t confidential and patented&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1158883">
				<div id="div-comment-1158883" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ken Hagan</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20141030-00/?p=43733#comment-1158883">
			October 30, 2014 at 12:29 pm</a>		</div>

		<p>@Myria: ExFAT can&#39;t be both confidential and patented. To get the patent, you have to publish in sufficient detail to let someone else reproduce the invention.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1158893">
				<div id="div-comment-1158893" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">E</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20141030-00/?p=43733#comment-1158893">
			October 30, 2014 at 12:30 pm</a>		</div>

		<p>FreeBSD presumes caches transformed data at a higher level in order to facilitate even better optimizations. &nbsp;In particular, it caches at the vfs layer. </p>
<p>code for FAT: <a rel="nofollow" target="_new" href="http://svnweb.freebsd.org/base/head/sys/fs/msdosfs/">svnweb.freebsd.org/&#8230;/msdosfs</a></p>
<p>While I don&#39;t know the code that well it appears that <a rel="nofollow" target="_new" href="http://svnweb.freebsd.org/base/head/sys/fs/msdosfs/msdosfs_fat.c?view=markup#l184">svnweb.freebsd.org/&#8230;/msdosfs_fat.c</a> is perhaps what you are discussing ?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1158903">
				<div id="div-comment-1158903" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">E</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20141030-00/?p=43733#comment-1158903">
			October 30, 2014 at 12:31 pm</a>		</div>

		<p>I meant to say that &quot;presumes that disk access is slow and caches transformed&#8230;&quot;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1158923">
				<div id="div-comment-1158923" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">jonwil</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20141030-00/?p=43733#comment-1158923">
			October 30, 2014 at 12:55 pm</a>		</div>

		<p>@Ken Hogan: The patents on ExFAT are freely available but the exact implementation details are kept secret (e.g. the exact layout of on-disk data structures).</p>
<p>Or at least those implementation details WOULD be secret if it wasnt for Samsung who used parts of the Linux Kernel FAT driver to build its ExFAT driver and has subsequently released said driver under the GPL (after some legal pressure from the free software community)</p>
<p>Microsoft even acknowledges the &quot;open source&quot; stuff by saying on its IP licensing page for ExFAT that &quot;the open source stuff doesn&#39;t give you any rights to the ExFat IP&quot;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1158933">
				<div id="div-comment-1158933" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">David Crowell</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20141030-00/?p=43733#comment-1158933">
			October 30, 2014 at 2:10 pm</a>		</div>

		<p>There is an ExFAT FUSE driver for Linux. &nbsp;Seems to work.</p>
<p>SLOWFAT would describe me. &nbsp;Just sayin&#39;.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-mngoldeneagle even thread-even depth-1" id="comment-1158943">
				<div id="div-comment-1158943" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/MNGoldenEagle' rel='external nofollow' class='url'>MNGoldenEagle</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20141030-00/?p=43733#comment-1158943">
			October 30, 2014 at 2:46 pm</a>		</div>

		<p>I don&#39;t really think this is the appropriate venue to complain about IP or patenting issues. &nbsp;Raymond&#39;s not in a position to change these policies, and there are far better places to complain about issues to people who can&#39;t do anything about it (slashdot, reddit, etc.). &nbsp;Or write to Microsoft about it. &nbsp;Who knows? &nbsp;They have been more cautiously open to free licensing lately&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1158953">
				<div id="div-comment-1158953" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Jaime</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20141030-00/?p=43733#comment-1158953">
			October 30, 2014 at 3:34 pm</a>		</div>

		<p>Novell NetWare had an algorithm called Turbo FAT that indexed directory entries. I learned about it in the mid 1990s, so it&#39;s been around since at least then.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1158963">
				<div id="div-comment-1158963" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Jaime</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20141030-00/?p=43733#comment-1158963">
			October 30, 2014 at 3:56 pm</a>		</div>

		<p>Also, not exactly the same optimization, but NetWare also did disk request reordering. They called it &quot;elevator seeking technology&quot; because it basically worked like and elevator does. It organized the current request queue from the inside of the disk to the outside and fetched those blocks. Then it organized the next batch of requests from outside to inside and fetched those. It also moved deleted blocks to the outside of the drive to make the active area smaller (NetWare always carefully planned which blocks to delete &#8211; the entire drive was always full of either real files or deleted files that were complete and ready to be undeleted, none of this &quot;I found these file fragments maybe you can make sense of it&quot; stuff on undelete). These were some of the reasons NetWare file servers were so fast twenty years ago.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-yuhong-bao odd alt thread-odd thread-alt depth-1" id="comment-1158973">
				<div id="div-comment-1158973" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Yuhong+Bao' rel='external nofollow' class='url'>Yuhong Bao</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20141030-00/?p=43733#comment-1158973">
			October 30, 2014 at 4:49 pm</a>		</div>

		<p>@j b: Yea, I am surprised they even mentioned FAT8.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1158983">
				<div id="div-comment-1158983" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20141030-00/?p=43733#comment-1158983">
			October 30, 2014 at 5:52 pm</a>		</div>

		<p>Good guess Raymond it was indeed FAT.SYS. Too many NT4 installs. It&#39;s the second to the last driver loaded before &quot;setup is starting Windows&quot;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1158993">
				<div id="div-comment-1158993" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">foo</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20141030-00/?p=43733#comment-1158993">
			October 30, 2014 at 7:15 pm</a>		</div>

		<p>Nothing is ever marketed as slow when it comes out. That&#39;s why any new USB spec 10 years from now will probably be called &#39;super mega turbo xTreme ultra&#39; speed, and another 10 years after that &#39;we tried to come up with a suitable term but the word was so xTreme-allistic it collapsed into a black hole&#39; speed.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1159003">
				<div id="div-comment-1159003" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">David Goebel</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20141030-00/?p=43733#comment-1159003">
			October 30, 2014 at 8:12 pm</a>		</div>

		<p>In 1989 Gary Kimura wrote a simple version of the FAT file system for NT that was used in the earliest stages of bootstrapping. &nbsp;In early 1990 Tom Miller was creating the NT cache manager and the first consumer of the cache manager was a port of the HPFS file system from OS/2 named Pinball. &nbsp;As this was still prototype work Gary’s FAT implementation was more stable and used for bootstrapping.</p>
<p>When I started at MS in the fall of 1990 one of my first jobs was adding cache manager support to FAT based on the work Tom was doing with Pinball. &nbsp;The word “adding” here doesn’t do the process justice. &nbsp;In NT the vast majority of file system complexity comes from the interaction between, and the recursive nature of, the memory, cache, and I/O managers. &nbsp;While not starting from scratch, it was definitely putting the meat on the bones. &nbsp;As we needed to maintain a stable implementation of FAT for bootstrapping we forked FAT and thus was born FastFAT. &nbsp;It would be “fast” because it used the new NT cache manager.</p>
<p>There was never a shipping version of FAT.sys in NT4. &nbsp;In fact there was never even a FAT.sys ever built, but only FAT.lib as in those early days we were statically linking FAT into the kernel. &nbsp;In a previous comment someone said they saw FAT.sys but to double check I just went through the history of all changes from day one to Win2k to all &quot;sources*&quot; files looking for anything that built fat.sys and nothing did. &nbsp;The original NT Setup loader was a scaled down OS unto itself (otherwise known as Bill &amp; Ted’s Excellent Operating System) as it needed to boot from floppy so had to be small. &nbsp;It’s possible this mentioned something about loading FAT, but no binary named FAT.sys has even been built in the NT tree.</p>
<p>A few more notes. &nbsp;NT never supported FAT8. &nbsp;Just &nbsp;FAT12 &amp; FAT16 from NT 3.1 and later FAT32 (a misnomer – it should have been called FAT28). &nbsp;If you’re interested you can look at the fastfat source here: </p>
<p><a rel="nofollow" target="_new" href="https://code.msdn.microsoft.com/windowshardware/fastfat-File-System-Driver-135bdf34/view/SourceCode">code.msdn.microsoft.com/&#8230;/SourceCode</a></p>
<p>Fastfat source has been publically available, and updated, ever since the first NT IFS was released in April 1997. &nbsp;The public Fastfat source is nearly identical to what’s actually shipped with NT.</p>
<p>David</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1159013">
				<div id="div-comment-1159013" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Danny</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20141030-00/?p=43733#comment-1159013">
			October 30, 2014 at 9:20 pm</a>		</div>

		<p>&quot;Why is the FAT driver called FASTFAT? Why would anybody ever write SLOWFAT?&quot;</p>
<p>Over the centuries there were only FAT. No matter what nation, you were always FAT and you became FAT at the same rate. Now, in modern days, the Americans became FASTFAT, they gain FAT FAST because of the corn syrup and all those junk food. And now we have SLOWFAT aka Europeans who started to go after Americans junk-food so they become FAT too but at a slower pace, hence SLOWFAT :P:P.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-yuhong-bao even thread-even depth-1" id="comment-1159023">
				<div id="div-comment-1159023" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Yuhong+Bao' rel='external nofollow' class='url'>Yuhong Bao</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20141030-00/?p=43733#comment-1159023">
			October 30, 2014 at 11:11 pm</a>		</div>

		<p>&quot;The original NT Setup loader was a scaled down OS unto itself (otherwise known as Bill &amp; Ted’s Excellent Operating System) as it needed to boot from floppy so had to be small. &nbsp;It’s possible this mentioned something about loading FAT, but no binary named FAT.sys has even been built in the NT tree.&quot;</p>
<p>Yea, I think it just happens that NT setup referred to the loading of fastfat.sys as loading of the &quot;FAT File System&quot; (if I remember correctly).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1159053">
				<div id="div-comment-1159053" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">12BitSlab</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20141030-00/?p=43733#comment-1159053">
			October 31, 2014 at 4:53 am</a>		</div>

		<p>@ Jaime &#8211; There was a version of OS/360 that did reordering of reads for the purpose of reducing arm movement. &nbsp;It was fairly successful since in an average system, there are far more reads than writes to disk. &nbsp;A later version also did reordering of reads to a single cylinder in order to avoid allowing the disk to rotate multiple times for several reads. &nbsp;That was less successful since the compute time needed exceeded the time needed for a single rotation of the disk. </p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-bboorman even thread-even depth-1" id="comment-1159063">
				<div id="div-comment-1159063" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Brian_EE' rel='external nofollow' class='url'>Brian_EE</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20141030-00/?p=43733#comment-1159063">
			October 31, 2014 at 6:19 am</a>		</div>

		<p>@Yuhong: I&#39;m not surprised. I&#39;ve never known Wikipedia to limit itself to only documenting things specific to DOS/Windows. So if there was a FAT that pre-dated MS DOS, it should be documented.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1159073">
				<div id="div-comment-1159073" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">smf</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20141030-00/?p=43733#comment-1159073">
			October 31, 2014 at 6:30 am</a>		</div>

		<p>@Brian_EE There is a FAT file system that pre-dated MS DOS, it was used in various forms in Microsoft products that needed a disk file system (for example Microsoft Disk Basic for 8080 and their OS for z80/8080 called MIDAS). I&#39;m not sure they were compatible with each other, which back then wouldn&#39;t have been such a big deal.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-bboorman even thread-even depth-1" id="comment-1159093">
				<div id="div-comment-1159093" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Brian_EE' rel='external nofollow' class='url'>Brian_EE</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20141030-00/?p=43733#comment-1159093">
			October 31, 2014 at 7:30 am</a>		</div>

		<p>@smf &#8211; You have to read my comment in context to Yuhong&#39;s comment. I know there existed FAT prior to DOS, and it IS documented on the Wikipedia page. That was my point.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1159303">
				<div id="div-comment-1159303" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">640k</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20141030-00/?p=43733#comment-1159303">
			November 1, 2014 at 3:51 am</a>		</div>

		<p>Why hard code the entry size of an allocation table? It should of course be arbitrary big.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1159343">
				<div id="div-comment-1159343" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Jaime</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20141030-00/?p=43733#comment-1159343">
			November 1, 2014 at 7:32 am</a>		</div>

		<p>So you know how big a pointer should be. FAT file allocation tables store the location of the next allocation unit in a chain as content. If you make it arbitrarily big, then you need some way to designate the size, which takes space. Essentially, that &quot;some way to designate the size&quot; is the FAT sub type (FAT12, FAT16, FAT32).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1159393">
				<div id="div-comment-1159393" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">640k</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20141030-00/?p=43733#comment-1159393">
			November 1, 2014 at 6:27 pm</a>		</div>

		<p>First sector of each partition stores the fat entry size.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-1159413">
				<div id="div-comment-1159413" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Jim</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20141030-00/?p=43733#comment-1159413">
			November 2, 2014 at 12:49 pm</a>		</div>

		<p>@David Goebel: Fascinating information. Thanks for sharing it.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-cheong odd alt thread-odd thread-alt depth-1" id="comment-1159453">
				<div id="div-comment-1159453" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/cheong00' rel='external nofollow' class='url'>cheong00</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20141030-00/?p=43733#comment-1159453">
			November 2, 2014 at 5:34 pm</a>		</div>

		<p>Btw, once upon a time the biggest supported size in CMOS setup for harddisks is somewhere around 20Mb only (Remembered that there was 46 predefined disk parameters in CMOS setup page, and type 47-&quot;user defined&quot; was added in a later release of BIOS) . There was no provision for bigger size storage media at all.</p>
<p>And when low memory usage is tight requirement, you&#39;ll want to make it as simple as possible. Hardcoding the value and make it a variant seems to be the way to go in those days.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-cheong even thread-even depth-1" id="comment-1159463">
				<div id="div-comment-1159463" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/cheong00' rel='external nofollow' class='url'>cheong00</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20141030-00/?p=43733#comment-1159463">
			November 2, 2014 at 5:37 pm</a>		</div>

		<p>Not to mention when the CPU were 4/8 bits only, those beyond 8 needs big-integer techniques we use today to work correctly, and it was so SLOWWWWWWWWW that makes it somewhat useless requirement at that time.</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

