<html>
<head>
<title>How does Resource Monitor get information for processes that already terminated?</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>How does Resource Monitor get information for processes that already terminated?</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>December 28, 2017 / year-entry #284</td></tr>
<tr><td><b>Tags:</b></td><td>code</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20171228-00/?p=97665</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>5</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">It's an optical illusion.</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>
How does the Resource Monitor program
get information for processes that have already terminated?
</p>
<p>
Try it:
Run Task Manager, then go to the Performance tab.
From there, click <i>Open Resource Monitor</i>.
Now run another program, say, Notepad.
Let Notepad run for a while, and then close it.
Observe that there is still an entry for
<code>notepad.exe</code> in Resource Monitor,
labeled <i>Terminated</i>.
</p>
<p>
What is the function to call to get performance
statistics on a program that has terminated?
</p>
<p>
There is no function to get performance statistics
for a program that has terminated.
What you're seeing is an optical illusion:
Resource Monitor continues to show statistics
for processes that have terminated,
so that you can see the final results
before they go away.
</p>
<p>
Here's proof that it's an illusion:
After exiting Notepad and putting it into
the grayed-out <i>Terminated</i> state
in Resource Monitor,
go back to Task Manager and click
<i>Open Resource Monitor</i> again.
This will open another instance of
Resource Monitor,
and in that new instance,
you'll see no trace of the
terminated Notepad process.
</p>
<p>
Now you see it.
Now you don't.</p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (6)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-1318967">
				<div id="div-comment-1318967" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ben Voigt</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20171228-00/?p=97665#comment-1318967">
			December 28, 2017 at 7:49 am</a>		</div>

		<p>I would have thought that the new instance of Resource Monitor does not fetch the statistics because it does not have a handle to the process in question (one certainly can have a handle to terminated processes, it&#8217;s how you read the exit code).</p>
<p>And the reason that the new instance of Resource Monitor does not have a handle to the process in question is because it enumerated and opened handles for running processes, which does not include terminated ones.</p>
<p>Now, you are quite possibly correct that having a handle to a terminated process is insufficient to access the performance statistics, and that the original Resource Manager is displaying cached values from the last successful call.  Which would be unfortunate, because it wouldn&#8217;t account for usage between the last query and process exit.  But your experiment is consistent with your claim, it does not prove your claim because it is also consistent with the kernel-maintains-process-data-until-all-handles-are-closed model.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1318976">
				<div id="div-comment-1318976" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ben Hobbs</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20171228-00/?p=97665#comment-1318976">
			December 28, 2017 at 8:34 am</a>		</div>

		<p>If you are using ETW, with the kernel process provider, you can watch for process end events.  Those events actually include many statistics about the execution of the process including disk I/O, CPU, and more.  It can be pretty handy.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1 parent" id="comment-1318985">
				<div id="div-comment-1318985" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Barry Kelly</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20171228-00/?p=97665#comment-1318985">
			December 28, 2017 at 9:19 am</a>		</div>

		<p>So, how do you collect statistics on processes that come in and out of existence between polling intervals?</p>
<p>Linux kernel does it by configuring a file to to write accounting info to determine resource usage by processes, even those that pop in and out of existence very briefly.</p>
<p>I&#8217;m guessing there&#8217;s some complex way of wiring up event tracing of some kind to get the same data.</p>

		
				</div>
		<ol class="children">
		<li class="comment byuser comment-author-wndsks odd alt depth-2" id="comment-1319006">
				<div id="div-comment-1319006" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/skSdnW' rel='external nofollow' class='url'>skSdnW</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20171228-00/?p=97665#comment-1319006">
			December 28, 2017 at 5:18 pm</a>		</div>

		<p>A kernel mode driver can get notifications when a process is started.</p>
<p>In user mode you can&#8217;t really do it to all processes. You can use a job object to have full control over your child processes but that does not work for a Task manager style application. If you are only using documented APIs then you must call OpenProcess to get a handle that can be used to gather data and it is not possible to prevent short lived processes from slipping through the cracks AFAIK.</p>

		
				</div>
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment byuser comment-author-iboyd even thread-odd thread-alt depth-1" id="comment-1318986">
				<div id="div-comment-1318986" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/IanBoyd' rel='external nofollow' class='url'>IanBoyd</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20171228-00/?p=97665#comment-1318986">
			December 28, 2017 at 12:26 pm</a>		</div>

		<p>It was always intuitive sense to me that Resource Monitor would continue to show a terminated process for 60 seconds.</p>
<p>The scrolling Disk and Network utilization charts show 60 seconds of history. I would check some misbehaved program so that its resource utilization was highlighted in these charts. After i kill the errant program, its resource use drops to zero, but it&#8217;s historical use of resources remains visible as it slowly scrolls out of sight.</p>
<p>After 60 seconds, even the history of the process is lost from view, there&#8217;s no longer any need to continue to show it in the list, and it is pruned.</p>
<p>Nice work Resource Monitor group. It&#8217;s a very powerful built-in tool that gives information not found anywhere else.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-torrin-jones odd alt thread-even depth-1" id="comment-1319285">
				<div id="div-comment-1319285" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/torrinj' rel='external nofollow' class='url'>torrinj</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20171228-00/?p=97665#comment-1319285">
			January 2, 2018 at 6:44 am</a>		</div>

		<p>This just seems logical to me.  I wonder why someone would think there is some magic (a function to get statistics on a terminate program) involved?</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

