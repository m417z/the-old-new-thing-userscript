<html>
<head>
<title>Why not just block the apps that rely on undocumented behavior?</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>Why not just block the apps that rely on undocumented behavior?</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>December 24, 2003 / year-entry #176</td></tr>
<tr><td><b>Tags:</b></td><td>history</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20031224-00/?p=41363</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>47</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">Because every app that gets blocked is another reason for people not to upgrade to the next version of Windows. Look at all these programs that would have stopped working when you upgraded from Windows 3.0 to Windows 3.1. HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Compatibility Actually, this list is only partial. Many times, the compatibility fix is made inside...</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>Because every app that gets blocked is
another reason for people not to upgrade to the next version of Windows.
Look at all these programs that would have stopped working
when you upgraded from Windows 3.0 to Windows 3.1.</p>
<pre>
HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Compatibility
</pre>
<p>
Actually, this list is only partial.
Many times, the compatibility fix is made inside the core component for
all programs rather than targetting a specific program, as this list does.
</p>
<p>
(The Windows 2000-to-Windows XP list is stored in your
C:\WINDOWS\AppPatch directory, in a binary format to permit rapid scanning.
Sorry, you won't be able to browse it easily.
I think the
<a HREF=http://www.microsoft.com/windowsserver2003/compatible/appcompat.mspx>Application
Compatibility Toolkit</a> includes a viewer, but I may be mistaken.)
</p>
<p>
Would you have bought Windows XP if you knew that all these programs
were incompatible?
</p>
<p>
It takes only one incompatible program to sour an upgrade.
</p>
<p>
Suppose you're the IT manager of some company.
Your company uses Program X for its word processor and
you find that Program X is incompatible with Windows XP for whatever reason.
Would you upgrade?
</p>
<p>
Of course not! Your business would grind to a halt. 
</p>
<p>
"Why not call Company X and ask them for an upgrade?"
</p>
<p>
Sure, you could do that, and the answer might be,
"Oh, you're using Version 1.0 of Program X.
You need to upgrade to Version 2.0 for $150 per copy."
Congratulations, the cost of upgrading to Windows XP just tripled.
</p>
<p>
And that's if you're lucky and Company X is still in business.
</p>
<p>
I recall a survey taken a few years ago by our 
Setup/Upgrade team of corporations using
Windows.  Pretty much every single one
has at least one "deal-breaker" program,
a program which Windows absolutely must support or they won't upgrade.
In a high percentage of the cases,
the program in question was developed by their in-house programming
staff, and it's written in Visual Basic (sometimes even 16-bit Visual Basic),
and the person who wrote it doesn't work there any more.
In some cases, they don't even <i>have</i> the source code any more.
</p>
<p>
And it's not just corporate customers. This affects consumers too.
</p>
<p>
For Windows 95, my application compatibility work focused on games.
Games are the most important factor behind consumer technology.
The video card that comes with a typical computer has gotten better
over time because games demand it. (Outlook certainly doesn't care
that your card can do 20 bajillion triangles a second.)
And if your game doesn't run on
the newest version of Windows, you aren't going to upgrade.
</p>
<p>
Anyway, game vendors are very much like those major corporations.
I made phone call after phone call to the game vendors trying to
help them get their game to run under Windows 95.  To a one, they
didn't care.  A game has a shelf life of a few months, and then
it's gone.  Why would they bother to issue a patch for their program
to run under Windows 95? They already got their money.
They're not going to make any more off that game;
its three months are over.
The vendors would slipstream patches and lose track of
how many versions of their program were out there
and how many of them had a particular problem.
Sometimes they wouldn't even have the source code any more.
</p>
<p>
<i>They simply didn't care that their program didn't run
on Windows 95</i>.
(My favorite was the one that tried
to walk me through creating a DOS boot disk.)
</p>
<p>
Oh, and that
<a HREF=http://www.microsoft.com/windowsserver2003/compatible/appcompat.mspx>Application
Compatibility Toolkit</a> I mentioned above.
It's a great tool for developers, too.
One of the components is the Verifier: If you run your program
under the verifier, it will monitor hundreds
of API calls and break into the debugger when you do something wrong.
(Like close a handle twice or allocate memory with GlobalAlloc
but free it with LocalAlloc.)
</p>
<p>The new application compatibility architecture in Windows XP
carries with it one major benefit (from an OS development perspective):
See all those DLLs in your C:\WINDOWS\AppPatch directory?
That's where many of the the compatibility changes live now.
The compatibility workarounds no longer sully the core OS files.
(Not all classes of compatibility workarounds can be offloaded to
a compatibility DLL, but it's a big help.)</p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (47)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-117933">
				<div id="div-comment-117933" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">asdf</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20031224-00/?p=41363#comment-117933">
			December 24, 2003 at 2:40 pm</a>		</div>

		<p>&quot;Outlook certainly doesn&#8217;t care that your card can do 20 bajillion triangles a second&quot;. I want to see if that statement still holds in 2010.</p>
<p>Is the verifier a stand-alone local machine app or do I have to run that stuff over a serial line to another computer?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-117953">
				<div id="div-comment-117953" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.virtualdub.org/' rel='external nofollow' class='url'>Phaeron</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20031224-00/?p=41363#comment-117953">
			December 24, 2003 at 9:44 pm</a>		</div>

		<p>People are already becoming indifferent to triangle speeds &#8212; TnL is so fast in general now that the video card manufacturers are putting more emphasis on shader capabilities and overall quality/frame rate.  This is good.  I think the main reason why 3D hasn&#8217;t yet taken off for non-gaming purposes is that most video drivers blue screen the machine every time you try to do something in a non-game fashion.</p>
<p>I sympathize with the amount of work AppCompat involves.  I know some people who wrote commercial games around the late Windows 3.1 era, when Win32 and especially Win32s had just appeared.  Some of the 3.1 games they wrote later conflicted badly with Windows 95 by doing things such as, oh&#8230; reassociating the SCR and LNK filename extensions.  Nowadays getting a patch out the door requires the whole nine yards with regards to in-house compatibility and regression testing, which is why it&#8217;s so hard to get a patch for older games on newer OSes.  People are NOT happy when a released patch creates more bugs than it fixes.</p>
<p>What I wonder, though, is how the AppCompat group deals with copy protection.  It must be really annoying to figure out how to patch a SafeDisc&#8217;ed or otherwise &quot;protected&quot; application.  Some of them go so far as to partially disassemble and rethread prologs of system entry points at runtime!<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-117963">
				<div id="div-comment-117963" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://weblogs.asp.net/oldnewthing/' rel='external nofollow' class='url'>Raymond Chen</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20031224-00/?p=41363#comment-117963">
			December 24, 2003 at 11:05 pm</a>		</div>

		<p>The Verifier runs on the machine being debugged (so you don&#8217;t need a serial cable or anything). I strongly recommend it to everybody.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-117973">
				<div id="div-comment-117973" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Dan Maas</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20031224-00/?p=41363#comment-117973">
			December 25, 2003 at 12:23 am</a>		</div>

		<p>Raymond&#8217;s story is a really good example of why &quot;low quality rules&quot; in the software market. I don&#8217;t mean that in a derogatory way! </p>
<p>What I mean is, Microsoft could lean on vendors to increase the quality of their products by removing sketchy code. Or, Microsoft could increase the &quot;quality&quot; of Windows (as measured by software purists) by omitting these compatibility hacks. But both of these options lead to worse outcomes, as Raymond explains. Thus, low quality rules.</p>
<p>(send that to the next clueless journalist who laments the bugginess of most consumer software in writing&#8230;)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-117983">
				<div id="div-comment-117983" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Christian</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20031224-00/?p=41363#comment-117983">
			December 25, 2003 at 12:10 pm</a>		</div>

		<p>I very much appreciate all the work you and others do to make new Windows-versions work.</p>
<p>The application comaptibility toolkit is a great thing (especially LUARedirectFS for those stupid software that only runs as administrator) and it also feels absolutely right: Have the ugly compatibility glue inside a separate component, for winxp embedded you can even strip it away.</p>
<p>I wanted to say that the company I work for always uses the newest version of Office and Windows and that I radically try to convince my boss that we can&#8217;t use software or hardware that comes with idiotic custom setup-systems (which are not scriptable), with programms that only work as admin and with software that has a extremely bloated design (like UPS&#8217;s software that wants to install a strange database-system on the computer. We use their webpage instead and I called their support often and angry until someone told me how to use all necessary features only webbased).</p>
<p>My boss also wants desktops to be locked down (no admin access) so he supports these things as far as possible and we are now running a system where each computer can be wiped and reinstalled in only 1 hour fully automated and no one has admin-pws.</p>
<p>If it wasn&#8217;t for my commitment to this project, then many of the software we use would have stopped tje project.<br />
<br />But by upgrading to new versions (e.g. Corel Draw), messing with the setups, messing with components of the software and with application compatibility toolkit it works now!</p>
<p>I so much wished that every customer makes one angry phone call a day to every company that doesn&#8217;t support limited user access so that these companys suffer as much as possbile.<br />
<br />I hate them so much that I think boycotting is not enough.</p>
<p>And whenever possible we use software from Microsoft (or open source software). I wished<br />
<br />that e.g. MS had a widely accepted replacement for Acrobat Reader.<br />
<br />It&#8217;s great that XP contains stuff like Media player, fax or scanning-software out of the box so that we are not so often forced to throw money at a company which only focueses on their product and feature-bloat instead of things like security.</p>
<p>What I hate most is InstallShield: They took the MS-Installer-technology and put their stupid scripting engine inside. So you have the disadvantages of both worlds.<br />
<br />Administrative Installs would be supported by MSI, but with Installshield you only get a &quot;please run setup.exe instead of the msi-file&quot;.</p>
<p>And please try to avoid that MS makes the same mistakes that others make: e.g. more custom setup systems, using undocumented features, placing icons in too prominent places, and so on&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-117993">
				<div id="div-comment-117993" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://weblogs.asp.net/ptorr/' rel='external nofollow' class='url'>Peter Torr</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20031224-00/?p=41363#comment-117993">
			December 25, 2003 at 4:01 pm</a>		</div>

		<p>I just lost a rather large comment with a &quot;the viewstate may be invalid&quot; error. I&#8217;ll write it again, but in a much shorter way &lt;grrr&gt;.</p>
<p>Basically I was wondering how the OSS community will deal with this. In theory the problem will be worse because it&#8217;s much easier for people to rely on OS behaviour (who needs a debugger when you can view the source?) and they can even &quot;tweak&quot; core parts of it to make their own flavour of the OS (or application) to meet their needs. How do you patch / upgrade a system that is essentially in an unknown state?</p>
<p>Then I said something about how my group (VBA / ActiveScript / VSA) tries to address this with customisation technologies, but it&#8217;s still really hard because then you have to make sure your OM doesn&#8217;t break between versions (like, say, Office 97 to Office 2000). It&#8217;s gotta be orders of magnitude easier than dealing with the &quot;customers made arbitrary source code changes&quot; mode of customisaion though.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-118063">
				<div id="div-comment-118063" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">TRS-80</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20031224-00/?p=41363#comment-118063">
			December 26, 2003 at 3:36 am</a>		</div>

		<p>Re OSS, I think you&#8217;ll find that these sorts of hacks are very uncommon, and when they do exist, they&#8217;re less likely to break. They&#8217;re uncommon because if you have the source, you can add the required functionality yourself and submit the patch upstream (or just distribute your own version of the library/program/whatever with your program), or as you say, you can just look at the source yourself. They&#8217;re less likely to break because of versioned libraries (yes, versioning does exist under Win32 and COM, but it&#8217;s less well done) and you still have the source and so can check out the problem and fix it.</p>
<p>As for patching/upgrading a system in an unknown state, you simply reinstall the entire application over its old files. If a program has &quot;tweaked&quot; parts of the OS, it should just have its own version of those files. Anyway, because the application is open source, you can simply allow people to just download the whole new version (whereas commercial software obviously can&#8217;t do that for patches) and install it.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-118073">
				<div id="div-comment-118073" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://weblogs.asp.net/oldnewthing/' rel='external nofollow' class='url'>Raymond Chen</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20031224-00/?p=41363#comment-118073">
			December 26, 2003 at 7:54 am</a>		</div>

		<p>Okay, so consider somebody who, say, writes their own ext3 defragmenter.  In order to do this, they decide that they need to access some internal data structure, so they add a new syscall, &quot;get_open_file_mapping_table&quot; that returns the internal structure and include a custom ext3 driver with their defrag program.</p>
<p>Suppose later the maintainers of ext3 want to change that internal structure (say, to support remote file shadowing). What do they do?</p>
<p>&quot;You can simply allow people to just download the whole new version&quot; &#8211; so every time you upgrade you might have to re-download all of the programs that you had downloaded for the previous version of linux?</p>
<p>And what if the person that wrote the ext3 defragmenter wants to sell their program for money instead of being open source?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-118173">
				<div id="div-comment-118173" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://weblogs.asp.net/ptorr/' rel='external nofollow' class='url'>Peter Torr</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20031224-00/?p=41363#comment-118173">
			December 26, 2003 at 11:27 am</a>		</div>

		<p>TRS, the problem is *exactly* that you can look at the source. Rather than relying on the &quot;black box&quot; approach to APIs (this is its documented interface with acceptable inputs and expected outputs) you turn it into a &quot;white box&quot; approach where you figure out that if you set such-and-such magic bit, or internal data structure, you can make it do something special. </p>
<p>If the change is localised to your application, you can&#8217;t submit the changes upstream because the change isn&#8217;t in the OS, it&#8217;s in your app. Even if you change the OS, what&#8217;s the likelihood that your special-case hack is going to be accepted by the maintainer? Who does the compatibility testing on it for all the existing apps in the world?</p>
<p>If you build your own custom version of the library, you have to worry about incorporating and re-shipping security patches, etc. Anyone remember the double-free bug in the GZIP libraries, and the umpteen million places that had to be fixed because every vendor had their own &quot;flavour&quot; of GZIP baked into their own custom libraries?</p>
<p>Finally, people DO NOT want to re-write their apps when they upgrade their OS, just as Raymond says they don&#8217;t want to re-purchase them. It&#8217;s too risky, too expensive, and too time consuming. Then you&#8217;ve got stuff like WebSphere, which I&#8217;m pretty sure IBM doesn&#8217;t give away ;-)</p>
<p>I really see this as a problem for the long-term success of OSS software. Once it matures and really takes hold in enterprises, we&#8217;ll see what happens. I already hear there is some reluctance to move to the 2.6 kernel&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-118183">
				<div id="div-comment-118183" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Michael</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20031224-00/?p=41363#comment-118183">
			December 26, 2003 at 12:45 pm</a>		</div>

		<p>Phaeron: Copy protection causes at least three different problems.</p>
<p>First, copy protected applications usually detect if a debugger is running and then crash.  This means it can be extremely difficult to find out why the application isn&#8217;t working.</p>
<p>Second, sometimes the copy protection itself fails on a new OS, because, like you said, some of them mess with the prologs of API&#8217;s, which can change when we switch compilers.  Other copy protection schemes depend on undocumented OS behavior, for example, what the system does when read failures occur on a CD.</p>
<p>Finally, there are some copy protection schemes that actually require a system driver.  This can cause problems if you&#8217;re trying to run the application under a limited user account.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-118283">
				<div id="div-comment-118283" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Dan Maas</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20031224-00/?p=41363#comment-118283">
			December 26, 2003 at 6:25 pm</a>		</div>

		<p>Regarding the hypothetical ext3 defragmenter: you&#8217;d have a LOT of trouble getting Linus to include a kernel patch that basically exports internal filesystem structures to user space. It&#8217;s against the design philosophy of UNIX. If Linux DID include such an interface, they&#8217;d make sure it stays binary-compatible forever. It&#8217;s a cardinal sin for the kernel to break binary compatibility with user-space.</p>
<p>And yes, library version management in the OSS world is *horrible*. Many times libraries make backwards- or forwards-incompatible changes WITHOUT changing the library&#8217;s name or version number. (embarrassingly, this happens often with the standard C library and GCC&#8217;s compiler libraries&#8230;). One time the glibc maintainers introduced a change that even broke applications that were 100% statically linked!</p>
<p>It&#8217;s also common in the OSS world for people to deliberately look for ways to &quot;clean up&quot; public APIs, knowing full well it will break client applications.</p>
<p>It&#8217;s up to the Linux distributor to clean up the resulting mess. Most common distros like Redhat don&#8217;t do a very good job &#8211; you often are forced to update tens of libraries just to get the latest version of some program to run. Debian is much better in this regard &#8211; their commitment to compatibility is on par with Microsoft&#8217;s.</p>
<p>(going back to the defragmenter- nobody in the UNIX world really seems to want one, they figure it&#8217;s easier just to transfer the filesystem to a fresh disk. If you wanted off-line defragmentation, you would do it by un-mounting the filesystem and then have a user-space program that reads and writes directly on the block device, without kernel intervention. Ideally of course, you design filesystems that don&#8217;t NEED defragmentation :)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-118293">
				<div id="div-comment-118293" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Dan Maas</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20031224-00/?p=41363#comment-118293">
			December 26, 2003 at 6:31 pm</a>		</div>

		<p>I just want to clarify my first two paragraphs since they may seem to contradict each other. The kernel and user-space libraries are totally different animals in the Linux world. You have to differentiate because they are maintained by separate groups.</p>
<p>The kernel itself does an excellent job with compatibility. Libraries vary, but most don&#8217;t do very well. Unfortunately some of the core system libraries are among the worst. (glibc, libgcc, Berkeley DB, etc)</p>
<p>(there are noises being made about distributions of Linux using C libraries other than glibc, partly for this reason)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-118303">
				<div id="div-comment-118303" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://weblogs.asp.net/oldnewthing/' rel='external nofollow' class='url'>Raymond Chen</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20031224-00/?p=41363#comment-118303">
			December 26, 2003 at 7:21 pm</a>		</div>

		<p>(I didn&#8217;t mean to pick on defragmenters; it was just an interesting class of programs that often is at odds with the filesystem designers.)</p>
<p>So suppose some company wanted to access those internal structures (to do their hypothetical ext3 defragmenter) but Linus won&#8217;t let them. What do they do? Do they write a driver that grovels into kernel space to find the structures? Do they just say, &quot;Oh well, I guess we can&#8217;t do this&quot; and move on?</p>
<p>I&#8217;m not trying to pick on linux.  I&#8217;m genuinely curious how these app/driver compat nightmares are handled in the linux world.  (Last time I hacked on linux it was 0.99pl13, that&#8217;s how long I&#8217;ve been away from it.)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-118313">
				<div id="div-comment-118313" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">asdf</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20031224-00/?p=41363#comment-118313">
			December 26, 2003 at 8:43 pm</a>		</div>

		<p>(I could be wrong but) I don&#8217;t think 64 bit linux (itanium and amd) can run 32 bit (x86) apps. Maybe that would give you an idea about what linux people would do when something drastic changes that causes old apps not to work. Windows even uses the P64 (ptrs and long longs are 64 bit) as opposed to LP64 (longs, ptrs, and long longs are 64 bit) on linux, though I&#8217;m not sure what that is supposed to say about backwards compatibility (I personally like ILP64 myself).<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-118383">
				<div id="div-comment-118383" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Dan Maas</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20031224-00/?p=41363#comment-118383">
			December 27, 2003 at 11:24 am</a>		</div>

		<p>App/driver compatibility in Linux generally goes like this: for important &quot;core&quot; interfaces, like the interfaces for implementing and using Ethernet drivers, there is always a published API. The kernel&lt;-&gt;application API is kept binary-compatible basically forever (versioned interfaces are used if necessary). The kernel&lt;-&gt;driver API is much less stable, but the kernel maintainers will mostly keep your driver in sync, if it is part of the mainline kernel. (I wrote a driver for Linux 2.4 that was carried forward to Linux 2.6 without any effort on my part, since it is distributed with the mainline kernel).</p>
<p>Things get a little less stable in the more &quot;dimly lit&quot; areas of functionality like drivers for exotic hardware. Without the glaring eyes of thousands of core kernel developers, compatibility mistakes sometimes slip through. (I&#8217;m guilty of breaking the kernel&lt;-&gt;application binary API of my isochronous FireWire driver&#8230;)</p>
<p>Going back to defragmentation- you&#8217;d have a very hard time making a successful product that grovels through internal Linux kernel structures. You&#8217;d have to get Linus to agree to implement an API for it (unlikely unless it&#8217;s generic, elegant, stable, and portable).</p>
<p>Remember Linus doesn&#8217;t accept code into the kernel based on what features users want &#8211; it&#8217;s not marketing-driven. It&#8217;s all about what Linus believes is best for the kernel. Commercial vendors in the Linux world understand and work with this. (it took a very long time for SGI to convince Linus to accept their port of the XFS filesystem to Linux, since it required some extensive changes to core kernel code)</p>
<p>You *could* write a kernel module (which is like a DLL for the kernel) that does anything you want, but it would be tied to a specific kernel version. Users don&#8217;t like that. If your code isn&#8217;t included in the mainline Linus kernel, it will never be widely adopted, and you won&#8217;t get the benefits of automatic maintenance to keep it in sync with kernel changes.<br /></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-118393">
				<div id="div-comment-118393" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Dan Maas</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20031224-00/?p=41363#comment-118393">
			December 27, 2003 at 11:33 am</a>		</div>

		<p>On the user-space library side of things, the way compatibility is *supposed* to work is that libraries have two version numbers &#8211; a &quot;major&quot; API version and an incremental &quot;minor&quot; version. If you make a backwards-compatible change to a library, you increment the &quot;minor&quot; version but use the same &quot;major&quot; version. You only change the &quot;major&quot; version if the API changes in a backwards-incompatible way.</p>
<p>On a typical Linux system you&#8217;ll see libraries like &quot;/usr/lib/libz.so.1.1.3&quot;. The major version is 1, the minor version is 1.3 (why they use two digits for minor versions, I don&#8217;t know). Any application compiled against libz major version 1 should work with any libz library with major version 1.</p>
<p>But &#8211; and this is a big but &#8211; there is nothing holding developers to this system. Some library maintainers introduce incompatible changes without changing the major version number. Or, they change the major version number so often that getting all your applications to use the same library is impossible.</p>
<p>Personally, I think dynamic linking is generally overrated :).</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-118423">
				<div id="div-comment-118423" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://weblogs.asp.net/oldnewthing/' rel='external nofollow' class='url'>Raymond Chen</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20031224-00/?p=41363#comment-118423">
			December 27, 2003 at 6:18 pm</a>		</div>

		<p>So basically if your program/driver grovels into internal structures, and you can&#8217;t convince Linus to make the structures/interfaces public, your options are just to (1) suck it up and not write your program/driver after all, or (2) use those internal structures/interfaces knowing that Linus will probably break you sooner or later, leaving your customers high and dry.</p>
<p>This is basically the same as Windows, except that in case (1) add &quot;Complain that Microsoft is being anti-competitive by actively preventing you from writing the program you want to write,&quot; and in case (2) add &quot;Complain that Microsoft is being anti-competitive by actively breaking your program&quot;.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-118433">
				<div id="div-comment-118433" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">asdf</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20031224-00/?p=41363#comment-118433">
			December 27, 2003 at 7:57 pm</a>		</div>

		<p>Almost, but not quite. Under linux, most vendors would probably release the source code to the kernel module that lets you access the structs (even super-secretive comercial videocard driver writers release the code to this part). Then if something changes you would get a compiler error, compile time asserts via the typedef char foo[!!(expr)]; trick, or via the module init function. All bets are off if the user downloads one of those binary only installation packages. The other main difference between linux and windows is that microsoft wants you to upgrade windows (hell, they even retire software and not make it easy to save stuff off windowsupdate to disks).</p>
<p>I would just let the app brake (or be prevented from running if it corrupts the disk), who knows what else the app might do. Whenever I write code to hack features into some library, I am fully aware that it could change in an updated version and make sure my code is isolated from their stuff. But then again, I statically link everything, I would never think about hacking into code that I load at runtime unless I really have to (then I check for version numbers). I&#8217;m just curious my Microsoft would alter their stuff to get the disk defragmenter software to work again, I&#8217;m sure the disk defragmenter company expected it to break and would have offered a patch or a new version (though I don&#8217;t know if it would be free or not).</p>
<p>My guess is that most PC developers think of windows as: 3.1, 95-ME, 32-bit NT-2003, and amd/intel 64-bit (and they ignore the NT ones for non-x86 based computers and windows CE). If it works in whatever OS they&#8217;re testing against (say windows 2000) they assume it to work in another OS in that category (say windows XP). Microsoft making broken programs work just adds to that assumption.</p>
<p>(What&#8217;s up with this .Text viewstate error all the time?)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-118483">
				<div id="div-comment-118483" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://weblogs.asp.net/ptorr/archive/2003/12/28/46228.aspx' rel='external nofollow' class='url'>Office Development, Security, Randomness...</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20031224-00/?p=41363#comment-118483">
			December 28, 2003 at 5:17 pm</a>		</div>

		
		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-118493">
				<div id="div-comment-118493" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://weblogs.asp.net/ptorr/archive/0001/01/01/46228.aspx' rel='external nofollow' class='url'>Office Development, Security, Randomness...</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20031224-00/?p=41363#comment-118493">
			December 28, 2003 at 5:23 pm</a>		</div>

		
		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-118843">
				<div id="div-comment-118843" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://RussellOsterlund@adelphia.net' rel='external nofollow' class='url'>smidgeonsoft</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20031224-00/?p=41363#comment-118843">
			December 30, 2003 at 8:19 am</a>		</div>

		<p>Warning! &#8212; Microsoft Applications &amp; Microsoft OS salvo</p>
<p>I will start by asking a rhetorical question:  When was the last time that a new version of the OS broke a Microsoft application?  If this happens almost never, then has providence granted the programmers in the applications area with virtue and omniscience concerning what can and cannot be done with the OS?  And, if this is so, then why does it seem that with every new release of the OS, the new &quot;look and feel&quot; of GUI gadgets, for example, shows up first in Microsoft Word and Excel?  In other words, who is driving the innovation in Windows?  The applications area, the OS area, both in tandem?  (Another rhetorical question:  What is and is not part of the operating system?)</p>
<p>I understand and accept that the playing field is not level when it comes to developing products that are competitive with Microsoft&#8217;s own offerings.  But, I suggest that this topic on &quot;compatibility fixes&quot; and the statement, &quot;It takes only one incompatible program to sour an upgrade&quot;, is sour grapes.  This is one way that successful competitors can level the playing field.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-118863">
				<div id="div-comment-118863" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://weblogs.asp.net/oldnewthing/' rel='external nofollow' class='url'>Raymond Chen</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20031224-00/?p=41363#comment-118863">
			December 30, 2003 at 8:41 am</a>		</div>

		<p>The Office group can be a lot more adventuresome in their UI because they don&#8217;t have to publish an SDK to permit everybody else on the planet to use their new UI. They can decide in Office 2004 that the Office 2003 UI was crap and get rid of it entirely, and they don&#8217;t have to worry about breaking other progams that are using their UI (because nobody else is).</p>
<p>Whereas if the OS team decided to make a cool new control, soon there would be thousands of apps that are using that new control so it can never go away. (Even if &#8211; after the passage of time &#8211; most people have lost interest in the control and it *should* be retired.  Like the non-dropdown combo box, for example.)</p>
<p>When was the last time an OS broke a Microsoft application? Check out the app compatibility database &#8211; you&#8217;ll find entries for Word, Excel, Visio&#8230; All of those programs broke at one point or another and had to be worked around.</p>
<p>On the OS team, the Office programs are in the same category as the other major productivity programs: PageMaker, PhotoShop, CorelDraw, etc. They are in the &quot;top priority&quot; compatibility bucket, because these programs are &quot;deal breakers&quot; for millions of customers.</p>
<p>Having watched the evolution of Office from the outside, I have to say that over the years they have improved their compatibility efforts considerable. The Office programs used to be awful and we&#8217;d swear at them daily, but now they&#8217;re quite good at playing by the rules. (Though just yesterday I ran across a place where they broke the rules &#8211; for IExtractIcon::GetIconLocation. Sigh. Compatibility work is never done.)</p>
<p>From the OS team&#8217;s point of view, the Office programs are treated the same as the other &quot;major vendor&quot; productivity programs. We do not play favorites.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-118953">
				<div id="div-comment-118953" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Mike Hearn</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20031224-00/?p=41363#comment-118953">
			December 30, 2003 at 12:28 pm</a>		</div>

		<p>I should add that Dan Maas is overly critical of glibc &#8211; the static link breakage was due to fixing a serious bug in the loader. Unfortunately static binaries built with an old version of ld were broken and this triggered the bug.</p>
<p>That highlights a fundamental difference between Windows and Linux &#8211; fixing bugs takes priority over keeping apps working, as the apps are all open source too and so will eventually be fixed.</p>
<p>That sort of stuff is rare though. glibc generally preserves binary compatability extremely well, but it will not work around broken apps.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-119023">
				<div id="div-comment-119023" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://weblogs.asp.net/oldnewthing/' rel='external nofollow' class='url'>Raymond Chen</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20031224-00/?p=41363#comment-119023">
			December 30, 2003 at 4:32 pm</a>		</div>

		<p>&quot;the apps are all open source too&quot;: What about the internal programs written by a company to run their business? (In the Windows world, that would be lots of internally-developed VB programs, for example.)  Those aren&#8217;t open source, are they. Is it the company&#8217;s responsibility to rewrite their apps to track the new OS?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-119163">
				<div id="div-comment-119163" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">TRS-80</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20031224-00/?p=41363#comment-119163">
			December 31, 2003 at 9:52 pm</a>		</div>

		<p>Why do they have to track the new OS? There are still lots of people out there running Linux 2.0, 2.2, because it just works. There&#8217;s also millions of desktops still running Win98 as well. But it doesn&#8217;t matter if you run an old (major) version of Linux (keeping up to date with security of course), whereas Microsoft has to force those desktops through the upgrade mill to keep revenues up.</p>
<p>So yeah, if you need to track the new OS (because of features or whatever, and not just because you&#8217;re being raped by Licensing 6.0 and so need to upgrade to make it appear worthwhile), then yes, you&#8217;ll have to rewrite bits to accomodate new interfaces etc. &#8211; they don&#8217;t somehow magically integrate themselves into your programs under Windows or Linux.</p>
<p>Anyway, internal software is where open source makes the most sense, since you&#8217;re not locked into one vendor and don&#8217;t lose the source when they go bust etc. I can&#8217;t find the links at the moment, but there are several articles on just this point.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-119173">
				<div id="div-comment-119173" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://weblogs.asp.net/oldnewthing/' rel='external nofollow' class='url'>Raymond Chen</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20031224-00/?p=41363#comment-119173">
			December 31, 2003 at 10:49 pm</a>		</div>

		<p>The internal software I was thinking of is stuff written by the company for the company itself. This isn&#8217;t something that the company is going to release to the open source community. Google.com for example hasn&#8217;t released the source to their secretive PageRank code, even though they run on linux systems.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-119213">
				<div id="div-comment-119213" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Rodrigo Strauss</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20031224-00/?p=41363#comment-119213">
			January 1, 2004 at 8:04 am</a>		</div>

		<p>Why did the Windows Team took that much to launch App Verifier? I know it&#8217;s not an easy task, but I think it&#8217;s VERY important. I develop drivers and I can&#8217;t live without Driver Verifier.</p>
<p>And, do you have any idea of Verifier&#8217;s future with the :gasp: WinFX? :-)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-119253">
				<div id="div-comment-119253" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Srdjan</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20031224-00/?p=41363#comment-119253">
			January 1, 2004 at 11:03 am</a>		</div>

		<p>I noticed one interesting thing related to Linux: Couple of posts above mention something like &#8216;Linus this&#8217; or &#8216;Linus that&#8217;, &#8216;You have to convince Linus&#8217;, etc. What will happen to Linux kernel when Linus (inevitably) is not around anymore? It seems that stability of Linux kernel relies a lot on one man.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-119363">
				<div id="div-comment-119363" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Kyle Hamilton</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20031224-00/?p=41363#comment-119363">
			January 2, 2004 at 4:09 am</a>		</div>

		<p>&quot;Linus this&quot; or &quot;Linus that&quot;, &quot;You have to convince Linus&quot;, etc.</p>
<p>Linus has been doing his best to only be part of the developmental kernel &#8212; he has historically passed kernel maintenance of stable releases to other people (his &#8216;lieutenants&#8217;).  I expect that all of his lieutenants are indoctrinated into his way of thinking, and thus any of them (Alan Cox, before he took a sabbatical to get his MBA&#8230; or whatever the guy&#8217;s name is that&#8217;s doing the 2.6 series&#8230;) would be able to take care of the problem, in the same way that Linus would.</p>
<p>[The same problem was faced by the Internet, when Jon Postel &#8212; the IANA &#8212; died.  People had a hard time separating the function of the IANA and RFC editor from the person &#8212; but eventually, life went on.  We still have an IANA.  We still have an RFC Editor.  We still have the IETF, and the entire organization scheme of the Internet.]</p>
<p>Open Source (&#8216;white box&#8217;) versus Closed Source (&#8216;black box&#8217;)</p>
<p>One of the tenets of good software design is that you don&#8217;t create software that behaves differently with frobbed bits, or with undocumented interfaces.  If you do, then you open yourself up to the use of that undocumented behavior &#8212; and in many ways, you&#8217;re responsible for it.</p>
<p>Granted, end-users tend to want to do things that systems were never designed for, and application programmers are the ones who are typically asked to make it happen.  [though the same issues could be said for network admins and DBAs.]  In the closed-source world, you can&#8217;t change the interfaces (and interface updates are almost impossible to come by except at major releases of the OS &#8212; service packs are somewhat excepted, such as the API updates in NT4 SP3 and SP5) just by emailing the developer, and asking for a change to the API/ABI to support something that you need to get done&#8230; so you end up hacking around it.</p>
<p>In the open-source world, you can do several things to reduce the cost of implementing your request: 1) you can do the development work yourself, and submit it to the developer (via a patch or such) for inclusion in later versions of the API.  2) You can have a meaningful dialog with the developer of the API you&#8217;re using, telling them the specs of what it is you need, and seeing if they can help you figure out an easy way to fix it.  3) You can look at the code and see if there&#8217;s a way to do it without involving the developer at all.  [Unfortunately, #3 is the only thing you can really do in the closed-source world, and it is much less desirable than the other two, because it doesn&#8217;t change the core issue of the default code not doing what you want and/or need.]</p>
<p>Most software engineers are aware that you only modify the core interfaces without input from the original developers if you&#8217;re doing research, or are actively extending what you&#8217;re modifying to such a degree that you are essentially creating a new project [and are willing to take on the support burden of that new project &#8212; see the various clustering systems for Linux, as examples].</p>
<p>And as for &#8216;in-house development&#8217; &#8212; yes, it&#8217;s the company&#8217;s responsibility to track the changes of the OS, if they rely on undocumented behavior at all.  The company that developed the software in use is responsible for making sure it works with the upgrades &#8212; that&#8217;s why fees are charged and willingly paid for maintenance contracts, for software that is critical to the company.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-145503">
				<div id="div-comment-145503" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Michael Bacarella</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20031224-00/?p=41363#comment-145503">
			February 17, 2004 at 3:39 pm</a>		</div>

		<p>There are many reasons to do formal Operating System software releases, but few of them are technically practical.</p>
<p>Imagine, starting with Windows NT 3.51, if on-demand, individual components were upgraded as required. This could be because you encountered a bug, or because it&#8217;s a recommended security update, or because you just like being cutting edge. As Microsoft continued to build and improve the OS, updates would find their way to your system based on your &quot;stability&quot; settings (aggressive settings get the new filesystem as soon as released, conservative settings won&#8217;t adopt it until it&#8217;s considered stable).</p>
<p>Over time your system would evolve into exactly what you needed it to do.  If your applications depended on functionality staying broken, your system upgrades around it, or installs compatiblity layers, or whatever. The other 99% of your system can be safely upgraded to Windows 2000&#8217;s level of functionality while your one broken killer app sits on Windows NT 3.51 compatibility DLLs. When you finally replace the broken app, you can move the other 1% forward too.</p>
<p>What this means for the end user is that they can stop caring about version numbers and their system always works and they always have the newest versions of everything they want (with exceptions pointed out).</p>
<p>It would also mean you could toss away IHV driver discs since you&#8217;re only a button press away from getting the newest drivers on your system.</p>
<p>What it would mean for Microsoft is that instead of major release cycles every few years, they can make smaller incremental changes year round with CDs mastered every year or so for people who are looking to adopt anew&#8211;so that they don&#8217;t have to download the first release and install 8 years worth of updates to get current.</p>
<p>Marketing is simplified, you only need to sell &quot;Windows&quot;. XP, 2000, NT, whatever.</p>
<p>It also means the subscription system they&#8217;ve had a hardon for. $50/year for a fluidly upgradable system is a better sell than $150/3 years for a drastic buy/reinstall/upgrade cycle with few updates in between.</p>
<p>Software is a service. It&#8217;s silly for Microsoft to continue to treat it as a product.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-145513">
				<div id="div-comment-145513" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://weblogs.asp.net/oldnewthing/' rel='external nofollow' class='url'>Raymond Chen</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20031224-00/?p=41363#comment-145513">
			February 17, 2004 at 3:47 pm</a>		</div>

		<p>It also means that instead of four supported Windows XP software configurations (Windows XP Home, XP Home SP1, XP Pro, XP Pro SP1) you have 4*N^K, if there are N components with K upgrade aggressiveness levels. Let&#8217;s say that N=4 and K=3, so you now have 256 configurations, that&#8217;s 64 more than today. So testing each patch will now take 64 times as long. Is that what you want?  (Because it would be a bummer if somebody said, &quot;Stupid Microsoft. I have Windows XP Pro SP1 with Component1=Component2=conservative, but Component3=normal and Component4=aggressive, and the patch doesn&#8217;t work. How dare they not run a thorough test on this specific configuration!&quot;)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-158843">
				<div id="div-comment-158843" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blogs.msdn.com/tonyschr/archive/2004/03/30/102248.aspx' rel='external nofollow' class='url'>Tony Schreiner's WebLog</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20031224-00/?p=41363#comment-158843">
			March 30, 2004 at 3:24 am</a>		</div>

		
		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-185393">
				<div id="div-comment-185393" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://weblogs.asp.net/oldnewthing/' rel='external nofollow' class='url'>Raymond Chen</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20031224-00/?p=41363#comment-185393">
			June 18, 2004 at 8:00 pm</a>		</div>

		<p>Commenting on this article has been closed.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-227163">
				<div id="div-comment-227163" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://weblogs.asp.net/brucecowper/archive/2004/11/17/258976.aspx' rel='external nofollow' class='url'>Bruce Cowper's Canadian IT Pro Community Forum</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20031224-00/?p=41363#comment-227163">
			November 17, 2004 at 1:09 pm</a>		</div>

		
		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-287013">
				<div id="div-comment-287013" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://radio.weblogs.com/0142035/2005/06/24.html#a342' rel='external nofollow' class='url'>Nosce te ipsum</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20031224-00/?p=41363#comment-287013">
			June 25, 2005 at 10:55 pm</a>		</div>

		<p>John Gruber makes an appearance in the soon to be released book The Best Software Writing I which was put together by Joel Spolsky .</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-292403">
				<div id="div-comment-292403" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.minds.may.ie/~dez/serendipity/index.php?/archives/17-The-Best-Software-Writing-I.html' rel='external nofollow' class='url'>Archipelagos</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20031224-00/?p=41363#comment-292403">
			July 25, 2005 at 9:26 am</a>		</div>

		<p>I have just finished reading a book compiled, edited and introduced by Joel Spolsky and released by Apress. &amp;amp;quot;The Best Software Writing I&amp;amp;quot; is a collection of some of the best articles on software development, and management written on various w</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-376503">
				<div id="div-comment-376503" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://my.opera.com/ismailp/blog/show.dml/242919' rel='external nofollow' class='url'>Ambassador</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20031224-00/?p=41363#comment-376503">
			May 3, 2006 at 11:00 am</a>		</div>

		<p>One should always assert the pre and sometimes post conditions in the code so that any problem that arises during debug can be caught, saves a lot reputation.&amp;lt;br/&amp;gt;&amp;lt;br/&amp;gt;assert macro, defined in ISO 9899 standard, under Program Diagnos &#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-407683">
				<div id="div-comment-407683" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://blogs.msdn.com:443/jeffdav/archive/2006/08/09/694118.aspx' rel='external nofollow' class='url'>jeff's WebLog : more fun with GetCommandLine()</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20031224-00/?p=41363#comment-407683">
			August 10, 2006 at 3:13 am</a>		</div>

		<p>PingBack from <a rel="nofollow" target="_new" href="https://blogs.msdn.com:443/jeffdav/archive/2006/08/09/694118.aspx" rel="nofollow">https://blogs.msdn.com:443/jeffdav/archive/2006/08/09/694118.aspx</a></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-491903">
				<div id="div-comment-491903" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.jtheo.it/2007/04/11/a-proposito-di-software-joel-spolsky/' rel='external nofollow' class='url'>jtheo 2.0 &raquo; A proposito di software - Joel Spolsky</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20031224-00/?p=41363#comment-491903">
			April 11, 2007 at 5:47 am</a>		</div>

		<p>PingBack from <a rel="nofollow" target="_new" href="http://www.jtheo.it/2007/04/11/a-proposito-di-software-joel-spolsky/" rel="nofollow">http://www.jtheo.it/2007/04/11/a-proposito-di-software-joel-spolsky/</a></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-495733">
				<div id="div-comment-495733" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.livejournal.com/users/jace/385188.html' rel='external nofollow' class='url'>jace: Introduction to Best Software Writing I</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20031224-00/?p=41363#comment-495733">
			April 21, 2007 at 3:56 pm</a>		</div>

		<p>PingBack from <a rel="nofollow" target="_new" href="http://www.livejournal.com/users/jace/385188.html" rel="nofollow">http://www.livejournal.com/users/jace/385188.html</a></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-495743">
				<div id="div-comment-495743" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.ljseek.com/introduction-to-best-software-writing-i_61114144.html' rel='external nofollow' class='url'>Introduction to Best Software Writing I by jace () | LjSEEK.COM</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20031224-00/?p=41363#comment-495743">
			April 21, 2007 at 3:56 pm</a>		</div>

		<p>PingBack from <a rel="nofollow" target="_new" href="http://www.ljseek.com/introduction-to-best-software-writing-i_61114144.html" rel="nofollow">http://www.ljseek.com/introduction-to-best-software-writing-i_61114144.html</a></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-502653">
				<div id="div-comment-502653" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.alejolp.com/blog/2007/05/10/querido-microsoft/' rel='external nofollow' class='url'>Blog de Alejo &raquo; Blog Archive &raquo; Querido Microsoft:</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20031224-00/?p=41363#comment-502653">
			May 10, 2007 at 2:07 am</a>		</div>

		<p>PingBack from <a rel="nofollow" target="_new" href="http://www.alejolp.com/blog/2007/05/10/querido-microsoft/" rel="nofollow">http://www.alejolp.com/blog/2007/05/10/querido-microsoft/</a></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-511583">
				<div id="div-comment-511583" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://blog.rushchak.com/index.php/2007/06/06/joel-spolsky-best-soft-book/' rel='external nofollow' class='url'>Joel Spolsky: Best Software Writing I at ???????????? ?????????? ?? ??????????????????</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20031224-00/?p=41363#comment-511583">
			June 6, 2007 at 7:53 am</a>		</div>

		<p>PingBack from <a rel="nofollow" target="_new" href="http://blog.rushchak.com/index.php/2007/06/06/joel-spolsky-best-soft-book/" rel="nofollow">http://blog.rushchak.com/index.php/2007/06/06/joel-spolsky-best-soft-book/</a></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-579423">
				<div id="div-comment-579423" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.eriknovales.com/blog/index.php/2007/12/20/even-when-you-wrote-the-operating-system-you-still-have-to-work-around-other-peoples-bugs/' rel='external nofollow' class='url'>Even When You Wrote the Operating System, You Still Have to Work Around Other Peoples&#8217; Bugs</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20031224-00/?p=41363#comment-579423">
			December 20, 2007 at 2:01 pm</a>		</div>

		<p>PingBack from <a rel="nofollow" target="_new" href="http://www.eriknovales.com/blog/index.php/2007/12/20/even-when-you-wrote-the-operating-system-you-still-have-to-work-around-other-peoples-bugs/" rel="nofollow">http://www.eriknovales.com/blog/index.php/2007/12/20/even-when-you-wrote-the-operating-system-you-still-have-to-work-around-other-peoples-bugs/</a></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-603413">
				<div id="div-comment-603413" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.mijia.org/blog/?p=66' rel='external nofollow' class='url'>Show, Don&#8217;t Tell &lt; MJiA</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20031224-00/?p=41363#comment-603413">
			February 21, 2008 at 11:01 pm</a>		</div>

		<p>PingBack from <a rel="nofollow" target="_new" href="http://www.mijia.org/blog/?p=66" rel="nofollow">http://www.mijia.org/blog/?p=66</a></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-632113">
				<div id="div-comment-632113" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://code.heartsavior.net/archives/83' rel='external nofollow' class='url'>Heart&#8217;s CodeList &raquo; ????????? ????????? ????????? ????????? 29??? (1) 1 ~ 10</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20031224-00/?p=41363#comment-632113">
			May 22, 2008 at 10:35 am</a>		</div>

		<p>PingBack from <a rel="nofollow" target="_new" href="http://code.heartsavior.net/archives/83" rel="nofollow">http://code.heartsavior.net/archives/83</a></p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-657213">
				<div id="div-comment-657213" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://ellisweb.net/2006/09/what-would-raymond-chen-say/' rel='external nofollow' class='url'>Ellis Web &raquo; What would Raymond Chen say?</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20031224-00/?p=41363#comment-657213">
			August 14, 2008 at 10:49 am</a>		</div>

		<p>PingBack from <a rel="nofollow" target="_new" href="http://ellisweb.net/2006/09/what-would-raymond-chen-say/" rel="nofollow">http://ellisweb.net/2006/09/what-would-raymond-chen-say/</a></p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

