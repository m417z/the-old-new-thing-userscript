<html>
<head>
<title>What's with this MSH_MOUSEWHEEL message?</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>What&#8217;s with this MSH_MOUSEWHEEL message?</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>August 6, 2008 / year-entry #262</td></tr>
<tr><td><b>Tags:</b></td><td>history</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20080806-00/?p=21353</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>34</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">The hardware folks had this mouse wheel thing they were making, and they needed a way to get applications to support the mouse. Now, one way of doing this was to say, "Well, we'll start selling this wheel mouse, but no applications can use it until the next version of Windows is released, one that...</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>
The hardware folks had this mouse wheel thing they were making,
and they needed a way to get applications to support the mouse.
Now, one way of doing this was to say,
"Well, we'll start selling this wheel mouse,
but no applications can use it until the next version of Windows
is released, one that supports the wheel."
Of course, that would have meant waiting until Windows&nbsp;NT&nbsp;4
came out, and who know when that would be.
Plus it meant that people would have to upgrade Windows
in order to take advantage of their fancy new mouse.
As you can imagine, they weren't too pleased with the
"wait a few years" plan.
</p>
<p>
In the interim, they proposed a stopgap mechanism for applications
to respond to the mouse wheel.
Enter the <code>zmouse.h</code> header file and its
<code>MSH_MOUSEWHEEL</code> registered message.
When you installed the wheel mouse driver,
it listened for wheel events from the hardware and posted
this new message when the mouse wheel turned,
and applications could just respond to either
the <code>WM_MOUSEWHEEL</code> message
(if running on a version of Windows that supported the message)
or the <code>MSH_MOUSEWHEEL</code> message
(if running on an older version of Windows that didn't).
Unfortunately, the two messages behave differently,
so it's not a simple matter of writing
</p>
<pre>
if (uMsg == WM_MOUSEWHEEL || uMsg == g_msgWheel) {
 ... do wheel stuff ...
}
</pre>
<p>
(These next few paragraphs summarize what is
<a HREF="http://msdn2.microsoft.com/en-us/library/ms645617.aspx">
already spelled out in MSDN</a>;
you can skip them if you already know how the messages work.)
</p>
<p>
First, let's look at <code>WM_MOUSEWHEEL</code>.
This message is delivered to the window that has focus
(in the <code>SetFocus</code> sense).
If the window procedure doesn't handle the message
and just passes it through to the <code>DefWindowProc</code> function,
then the <code>DefWindowProc</code> function forward the message
to the window's parent.
In this way, the <code>WM_MOUSEWHEEL</code> message
automatically "bubbles outward" from the focus window
up the parent chain until somebody finally handles the
message (or it goes all the way to the top without being handled at all).
</p>
<p>
On the other hand, the <code>MSH_MOUSEWHEEL</code> message
works from the outside in.
It is delivered to the foreground window
(in the <code>SetForegroundWindow</code> sense).
If the window procedure doesn't want to handle the message,
it can forward the message to child windows of its choice,
until one of them returns <code>TRUE</code> to indicate that
the message was handled, or until no further candidates exist.
</p>
<p>
I'll summarize these differences in a table,
since people seem to like tables so much.
</p>
<table BORDERCOLOR=black BORDER=1 CELLPADDING=3 CELLSPACING=0
       STYLE="border: 0pt; border-collapse: collapse">
<tr>
<th></th>
<th>WM_MOUSEWHEEL</th>
<th>MSH_MOUSEWHEEL</th>
</tr>
<tr>
<td>Propagation direction</td>
<td>Inside-out</td>
<td>Outside-in</td>
</tr>
<tr>
<td>Propagation mechanism</td>
<td>DefWindowProc</td>
<td>SendMessage</td>
</tr>
<tr>
<td>Handling</td>
<td>Automatic</td>
<td>Manual: Application checks return value<br>
    from child to determine what to do next</td>
</tr>
<tr>
<td>Return value if processed</td>
<td>Zero</td>
<td>TRUE</td>
</tr>
<tr>
<td>Return value if not processed</td>
<td>DefWindowProc</td>
<td>FALSE</td>
</tr>
</table>
<p>
Notice that <code>WM_MOUSEWHEEL</code> is much simpler,
and the inside-out propagation mechanism retains the spirit of
other messages such
as <code>WM_CONTEXTMENU</code>
and <code>WM_SETCURSOR</code>.
Why can't <code>MSH_MOUSEWHEEL</code>
do it the same way?
</p>
<p>
Well, first of all, <code>MSH_MOUSEWHEEL</code> doesn't have
the luxury of being able to modify the <code>DefWindowProc</code>
function.
After all, that's the whole point of introducing the message
in the first place,
because we're trying to add wheel support to an older operating
system that predated mouse wheels.
Put in other words,
if we could modify <code>DefWindowProc</code> to handle the
<code>MSH_MOUSEWHEEL</code> message, then we wouldn't have
needed the <code>MSH_MOUSEWHEEL</code> message to begin with;
we would've just modified <code>DefWindowProc</code> to handle
the <code>WM_MOUSEWHEEL</code> message.
</p>
<p>
The argument in the previous paragraph is a frustratingly common one.
Given a problem&nbsp;X and a workaround&nbsp;Y,
somebody will ask,
"Why didn't you use method&nbsp;Z?"
If you look at method&nbsp;Z, though,
you'll see that it suffers from the exact same problem&nbsp;X.
</p>
<p>
Here's a real-world example of the "confused workaround":
</p>
<p>
"Since the I-90 bridge is closed, I can't take the 550 bus to get
from Bellevue to Safeco Field.
Instead, I'm going to take the 230 to Redmond, and then change
to the 545."
</p>
<p>
<i>&mdash; Well, that's silly. Why not take the 245 to Eastgate,
and then change to the 554?
It's a lot faster.</i>
</p>
<p>
"Um, the 554 uses the I-90 bridge, too."
</p>
<p>
Okay, so you can't change <code>DefWindowProc</code>,
but why not at least propagate the <code>MSH_MOUSEWHEEL</code>
from the inside out instead of from the outside in?
</p>
<p>
Starting with the focus window assumes you can even find out
what the focus window is,
but if you had paid attention to the
<a HREF="https://channel9.msdn.com/Showpost.aspx?postid=116704">
<i>Five Things Every Win32 Programmer Should Know</i></a>,
you would have known that each thread
has its own focus window.
(Not nitpickily true, but true enough.)
Consequently, when
the helper program that injects <code>MSH_MOUSEWHEEL</code> messages
calls <code>GetFocus</code>, it just gets its own focus window,
not the focus window of the thread that controls the foreground window.
(Remember, we're talking 1996, long before the
<code>GetGUIThreadInfo</code> function was invented.
History buffs can find out more from
<a HREF="http://www.codinghorror.com/blog/archives/000865.html">
Meet The Inventor of the Mouse Wheel</a>.)
Since inside-out was off the table,
that pretty much forced outside-in.
</p>
<p>
Now that you know how mouse wheel messages work, you can explain the
behavior this customer is seeing:
</p>
<blockquote CLASS=q><p>
I'm seeing the <code>WM_MOUSEWHEEL</code> message being delivered
to the wrong child window.
I have a parent window with two children.
Even though I move the mouse pointer over child&nbsp;1,
the <code>WM_MOUSEWHEEL</code> goes to child&nbsp;2.
</p>
</blockquote>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (34)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-654393">
				<div id="div-comment-654393" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Nawak</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080806-00/?p=21353#comment-654393">
			August 6, 2008 at 10:39 am</a>		</div>

		<p>I once had a mice that would put the focus on the child window under the pointer when you scrolled, that way you could scroll a child window without first clicking on it.</p>
<p>I could for instance scroll the tree folder view of explorer without first left-clicking on it and risking an &#8216;access denied&#8217; or &#8216;please insert a disk in drive D&#8217; etc.</p>
<p>That behaviour was much more logical and intuitive!</p>
<p>I don&#8217;t see how it is more logical that left-click, right-click and middle-click all set focus and &#8216;land&#8217; under the pointer whereas mousewheel &quot;clicks&quot; don&#8217;t&#8230; it&#8217;s not consistent with the other mouse actions. I know the mousewheel isn&#8217;t just another mouse button but this behaviour is really frustrating.</p>
<p>I suppose it was a special mouse driver that did that and I wish windows or intellipoint could have that as well&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-654433">
				<div id="div-comment-654433" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">roastbeef</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080806-00/?p=21353#comment-654433">
			August 6, 2008 at 11:10 am</a>		</div>

		<p>Once, a long time ago, I was the mouse and keyboard device driver guy for OS/2 and faced the same issue of supprting mouse wheels (and the IBM Trackpoint mouse which had a thumb stick that could go every direction).</p>
<p>The OS/2 gui guys and the Workplace Shell group didn&#8217;t wat to write any code, so I created a hack. &nbsp;Moving the wheel or stick would generate synthetic up-arrow/down-arrow keystrokes. &nbsp;Moving the stick left/right would also generate arrow key presses. &nbsp;I even stuck in an option to generate pageup/pagedown if you really spun the wheel.</p>
<p>Cheesy? Yep. &nbsp;But it worked as well as it could without the GUI people writing a couple of lines of code.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-654473">
				<div id="div-comment-654473" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Josh</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080806-00/?p=21353#comment-654473">
			August 6, 2008 at 1:16 pm</a>		</div>

		<p>@Nawak: &nbsp;Probably not the mouse driver. &nbsp;The TweakUI PowerToy enables the &quot;Focus Follows Mouse&quot; behavior, so your mouse driver installer may have tweaked that setting, but it&#8217;s built in to Windows as a hidden option.</p>
<p>Get the TweakUI PowerToy, enable the XMouse option and you should be able to get that old behavior.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-654493">
				<div id="div-comment-654493" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://madsoftware.blogspot.com' rel='external nofollow' class='url'>Mike Gibson</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080806-00/?p=21353#comment-654493">
			August 6, 2008 at 1:43 pm</a>		</div>

		<p>Another in a long line of posts that basically try to use &quot;historical realities&quot; to explain away yet another design flaw in the Windows API. &nbsp;Historically interesting&#8230;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-654503">
				<div id="div-comment-654503" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Darren</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080806-00/?p=21353#comment-654503">
			August 6, 2008 at 1:46 pm</a>		</div>

		<p>I never understood why they choose to send scroll wheel events to the focus window rather than the window under the mouse cursor. &nbsp;I don&#8217;t think you have to use a wheel mouse for very long to realize it&#8217;s the wrong approach. &nbsp;It&#8217;s very high on list of my list of Windows annoyances. &nbsp;</p>
<p>I remember way back when the best solution was to find a wheel mouse with a very weak wheel button that would allow you to click and scroll at the same time, thereby giving focus to the thing you&#8217;re trying to scroll. &nbsp;That was a fine hardware solution to a software problem, until apps started assigning separate functionality to the middle-click.</p>
<p>I wonder if WPF corrects this issue?</p>
<div class=post>[<i>I happen to like it that way, because I like to move my mouse out of the way so it doesn&#8217;t cover what I&#8217;m reading. But apparently I&#8217;m an idiot. No news there. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-654523">
				<div id="div-comment-654523" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ens</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080806-00/?p=21353#comment-654523">
			August 6, 2008 at 2:00 pm</a>		</div>

		<p>I prefer that the mousewheel affects the area of current mouse focus. &nbsp;I don&#8217;t like having to hold my mouse dead still to scroll. &nbsp;But I can see how somebody might prefer the mouse tracking to follow the cursor. &nbsp;But I find that aspect of OSX irritating.</p>
<p>Why are there scare quotes around &#8220;historical realities&#8221;? &nbsp;Just call him a liar and be done with it, rather than implying it in three different ways in one-and-a-bit sentences.</p>
<div class=post>[<i>Not sure what you&#8217;re getting at. Are you saying that I&#8217;m lying about the historical background? -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-654533">
				<div id="div-comment-654533" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Gordon</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080806-00/?p=21353#comment-654533">
			August 6, 2008 at 2:12 pm</a>		</div>

		<p>Actually, Darren, focus should follow mouse (thanks, True X-Mouse Gizmo!), so scrolling the focus window is absolutely correct. :&#8211;)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-654543">
				<div id="div-comment-654543" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Plaz</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080806-00/?p=21353#comment-654543">
			August 6, 2008 at 2:29 pm</a>		</div>

		<p>I&#8217;m not sure who made the decision, but Firefox has the worst of both worlds. &nbsp;It needs focus AND the mouse hovering over it for scroll.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-654553">
				<div id="div-comment-654553" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">DrkMatter</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080806-00/?p=21353#comment-654553">
			August 6, 2008 at 2:29 pm</a>		</div>

		<p>&quot;Another in a long line of posts that basically try to use &quot;historical realities&quot; to explain away yet another design flaw in the Windows API. &nbsp;Historically interesting&#8230;&quot;</p>
<p>I can only assume that the dozens of individual who come here on a regular basis to criticize Windows and its &quot;obvious&quot; design flaws have the luxury to do so because, in their infinite wisdom, they have already invented the perfect OS, sold it to hundred of millions, and now whittle away their time roaming blogs from their private tropical island.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-654563">
				<div id="div-comment-654563" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Richard</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080806-00/?p=21353#comment-654563">
			August 6, 2008 at 2:38 pm</a>		</div>

		<p>Quick survey of programs I have running right now:</p>
<p>Firefox: scrollwheel scrolls the window under the mouse.</p>
<p>MS Outlook: scrollwheel scrolls the window under the mouse.</p>
<p>(some Qt app): scrollwheel scrolls the window under the mouse.</p>
<p>Explorer in &quot;common tasks&quot; view: scrolls the window with focus. Common tasks pane doesn&#8217;t take focus when you click it.</p>
<p>Good ol&#8217; consistency. Nothing like it.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-654573">
				<div id="div-comment-654573" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.bytehead.org/blog/' rel='external nofollow' class='url'>Bryan Price</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080806-00/?p=21353#comment-654573">
			August 6, 2008 at 2:52 pm</a>		</div>

		<p>Nawak, I use a small program for that. &nbsp;KatMouse. &nbsp;It likes to play games with your wheel click, but that&#8217;s a checkmark away in the preferences. &nbsp;kickme.to/katmouse for the website. &nbsp;I don&#8217;t trust x-mouse, don&#8217;t like the idea myself. :-P</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-654583">
				<div id="div-comment-654583" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">John</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080806-00/?p=21353#comment-654583">
			August 6, 2008 at 2:53 pm</a>		</div>

		<p>I don&#8217;t know; this is one of those things that could be done either way. &nbsp;From an end user&#8217;s perspective it would make more sense to have the mouse wheel affect the window that the mouse is over. &nbsp;However, this would be inconsistent with other forms of input (namely the keyboard) that send their input to the window with focus. &nbsp;I think I prefer consistency in this particular case. &nbsp;I run Outlook all the time but never noticed it behaved like that with the mouse wheel! &nbsp;Now I will never be able to stop thinking about it.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-654603">
				<div id="div-comment-654603" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://www.pretentiousname.com' rel='external nofollow' class='url'>Leo Davidson</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080806-00/?p=21353#comment-654603">
			August 6, 2008 at 3:09 pm</a>		</div>

		<p>On both XP and Vista the drivers by &lt;the popular mouse manufacturer who isn&#8217;t Microsoft&gt; seem to get confused every so often and send the mousewheel messages to two applications at once.</p>
<p>Clicking around the screen a bit or closing one of the apps seems to get it back to normal. Quite annoying when it happens and the bug has been there for years. I&#8217;m pretty sure the bug is in the drivers and not Windows or the apps as it happens with multiple apps and doesn&#8217;t seem to happen with other drivers.</p>
<p>&#8212;</p>
<p>&#8220;so you can&#8217;t change DefWindowProc&#8221;</p>
<p>Was patching the current OS versions considered or is it axiomatic that one never releases fixes or features to the OS between major releases?</p>
<p>Obviously it would have been a lot of effort (mainly testing, I imagine) to change part of the OS between releases. However, the work/complexity saved in one place (Windows 95/NT3.11) was passed on to all the applications and vendors (including Microsoft themselves) who had to write, test and maintain two forms of wheel processing until the vendors&#8217; users stopped using the older OS versions.</p>
<p>(I imagine there were also political issues, like the OS team not wanting to divert resources to something that the hardware team wanted.)</p>
<p>I don&#8217;t find it odd that what was done was done. Maybe it was the best option. But I do find it odd if changing the OS wasn&#8217;t even considered and didn&#8217;t have its potential costs weighed-up against definite costs of the alternative.</p>
<p>(Of course, I am assuming that it was known in advance that the two wheel handling systems would work differently. Perhaps it took doing it once the &#8220;wrong&#8221; way to realise that there was a better way. If the only planned change at the time was a different message name/number then it was obviously not worth changing the OS just to do that.)</p>
<div class=post>[<i>The OS team decides what OS features to update in patches. The hardware team decides what hardware to release. The two teams do not necessarily have the same priorities, especially since the OS team views the hardware team as &#8220;just another hardware vendor.&#8221; -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-654613">
				<div id="div-comment-654613" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Jonathan</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080806-00/?p=21353#comment-654613">
			August 6, 2008 at 3:25 pm</a>		</div>

		<p>@Plaz</p>
<p>Doing a quick test with IE7 shows the same behavior. &nbsp;IE must be in focus AND the mouse must be over the window in order to scroll.</p>
<p>(Amusing trick: Always on Top windows make this behavior look odd, because if the mouse is over IE it scrolls (assuming it has focus) even if there is a window covering that part IE.)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-654623">
				<div id="div-comment-654623" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ens</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080806-00/?p=21353#comment-654623">
			August 6, 2008 at 3:47 pm</a>		</div>

		<p>[Not sure what you&#8217;re getting at. Are you saying that I&#8217;m lying about the historical background? -Raymond]</p>
<p>No, I don&#8217;t think you&#8217;re lying. &nbsp;Sorry for the confusion.</p>
<p>I&#8217;m saying that the previous poster (Mike Gibson) seemed to imply that he thought you were lying, by using scare quotes on &quot;historical background&quot;, using the terms &quot;explain away&quot;, and the general tone of the next sentence. &nbsp;I think he should either outright call you a liar, or rephrase himself to be more clear.</p>
<p>I&#8217;m just being Internet-peevish, though, as I recognize now that I&#8217;m more fully awake. &nbsp;I should return to making ridiculously long lists of (often dubious) Canadian inventions.</p>
<p>Back on topic, I guess I should backpedal a bit, because within IE and FF webpages, scrolling is based on mouse location and not focus location, and I like that just fine. &nbsp;Maybe I should just say, &quot;I don&#8217;t really care for consistency in my apps&quot; and forever cease to comment on UX matters.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-654443">
				<div id="div-comment-654443" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Pierre B.</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080806-00/?p=21353#comment-654443">
			August 6, 2008 at 12:01 pm</a>		</div>

		<p>Interesting stuff. It explains the inconsistent behavior between different applications: some scroll what has the focus, other scroll what is under the mouse.</p>
<p>I always find the latter behavior more intuitive as a end-user, so it seems that the &quot;hack&quot; to give early support to the mouse wheel and thus giving the application the choice of what will receive the wheel action is actually better.</p>
<p>This behavior can be implemented with the &quot;inside-out&quot; model, but only if all child window and control cooperate to *not* handle the event and let the higher-up logic re-distribute the user action.</p>
<p>Ironic, in a way.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-654683">
				<div id="div-comment-654683" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">stuart</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080806-00/?p=21353#comment-654683">
			August 6, 2008 at 7:37 pm</a>		</div>

		<p>What&#8217;s the distinction between MSG_MOUSEWHEEL and MSH_MOUSEWHEEL in paragraph 2, or is it a typo?</p>
<p>(Topic: Programmers make good proof-readers, discuss..)</p>
<p>ps &#8216;ir&#8217; should be &#8216;or&#8217;</p>
<div class=post>[<i>Both just typos. Fixed, thanks. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-654713">
				<div id="div-comment-654713" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Ulric</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080806-00/?p=21353#comment-654713">
			August 6, 2008 at 8:36 pm</a>		</div>

		<p>with regards to firefox above. &nbsp;I think people say &#8216;focus&#8217; when they mean Active. &nbsp;The firefox window needs to be active to get the scrollwheel working. Then, it goes to which ever child window is under the mouse, for example the bookmark bar or the browser window. &nbsp;</p>
<p>The inconsistency between the apps isn&#8217;t actually jarring or confusing, IMHO.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-654483">
				<div id="div-comment-654483" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">K</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080806-00/?p=21353#comment-654483">
			August 6, 2008 at 1:41 pm</a>		</div>

		<p>And once more, OSX manages that perfectly (altough I of course have no clue how they do it, it being not-so-open-source), mouse wheel scroll is administred to the window you *hover* over, not the window you have active. Which allows you to scroll a document (f.e. on screen two) while having eclipse open on the other screen, without losing focus for typing. Incredibly nice to have and trips me up every time I use windows.</p>
<p>No, I don&#8217;t want to start an OS-War. I use both systems anyway (and have used Mac for a year, Windows for ten). I just can&#8217;t help but to point out when the other one does it better. Recently, that has very rarely been the windows side. Competition is a good thing to have. Now someone go and rewrite bloody Explorer. Do Finder too, when you&#8217;re at it, will you?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-654723">
				<div id="div-comment-654723" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">AK Wong</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080806-00/?p=21353#comment-654723">
			August 6, 2008 at 8:49 pm</a>		</div>

		<p>I agree with Bryan Price about KatMouse. It&#8217;s a great program and makes Explorer more usable. But if you come across any strange problems while you&#8217;re running it, remember to try disabling it. You can add apps to its blacklist if they&#8217;re not compatible.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-654733">
				<div id="div-comment-654733" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">DriverDude</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080806-00/?p=21353#comment-654733">
			August 6, 2008 at 9:38 pm</a>		</div>

		<p>&quot;&#8230;the OS team views the hardware team as &quot;just another hardware vendor.&quot;</p>
<p>Geez, what&#8217;s the point of being a monopoly if you don&#8217;t show some favortism&#8230;</p>
<p>oh, never mind.</p>
<p>Between this and the MSDN page, I can see why mouse-wheel handling is so damn inconsistent between apps. Sigh.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-654743">
				<div id="div-comment-654743" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">DriverDude</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080806-00/?p=21353#comment-654743">
			August 6, 2008 at 9:54 pm</a>		</div>

		<p>Upon furthur reflection, it seems to me the problem is letting the hardware team design a software &quot;solution&quot; to support their new mouse.</p>
<p>For the same reason software guys should not be given soldering irons, hardware folks should not be trusted to do software.</p>
<p>Especially since the HW team never has to clean up the mess they create &#8211; because, obviously, &nbsp;compatibility problems and WM_* are the purview of the software folks.</p>
<p>Ha!</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-654773">
				<div id="div-comment-654773" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Yuhong Bao</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080806-00/?p=21353#comment-654773">
			August 7, 2008 at 12:58 am</a>		</div>

		<p>Now there is WM_MOUSEHWHEEL. I wonder why there aren&#8217;t MSH_MOUSEHWHEEL?</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-654793">
				<div id="div-comment-654793" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Drak</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080806-00/?p=21353#comment-654793">
			August 7, 2008 at 2:16 am</a>		</div>

		<p>Ahhh, so this is the reason VB6 and VSS6 don&#8217;t support mouse-wheel scrolling with newer (non-ms) drivers?</p>
<p>I always wondered why that was. Gladly I don&#8217;t have to use either anymore!</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment byuser comment-author-dean-harding even thread-even depth-1" id="comment-654673">
				<div id="div-comment-654673" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='https://social.msdn.microsoft.com/profile/Dean+Harding' rel='external nofollow' class='url'>Dean Harding</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080806-00/?p=21353#comment-654673">
			August 6, 2008 at 7:30 pm</a>		</div>

		<p>&quot;within IE and FF webpages, scrolling is based on mouse location and not focus location&quot;</p>
<p>That&#8217;s not what I&#8217;m seeing. With both IE8 &amp; FF3, they need the keyboard focus *and* the mouse over it to scroll. If they don&#8217;t have keyboard focus, they don&#8217;t scroll. If the mouse is not over them, they don&#8217;t scroll.</p>
<p>To be honest, though, I&#8217;ve never really noticed it myself&#8230; until it was pointed out today.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-654803">
				<div id="div-comment-654803" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">fooled me once</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080806-00/?p=21353#comment-654803">
			August 7, 2008 at 3:04 am</a>		</div>

		<blockquote><p>
  The two teams do not necessarily have the same priorities, especially since the OS team views the hardware team as &quot;just another hardware vendor.&quot;
</p></blockquote>
<p>This isn&#8217;t true. The OS team cooperate more with other MS teams than with &quot;teams&quot; outide of the campus.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-654813">
				<div id="div-comment-654813" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">640k</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080806-00/?p=21353#comment-654813">
			August 7, 2008 at 3:15 am</a>		</div>

		<p>The worst thing was not choosing the &quot;wrong&quot; approach (focus vs foreground). The worst thing is that the behaviuor changed. Even today (ms) apps implement and overrides different behaviour.</p>
<p>In my opinion, the hardware team should have made a better work, and send messages to the focused window. It may be hard to implement such feature without the cooperation of the OS team, but it is not impossible. It would not even be hard to do for people who write drivers and have the resources of msft.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-654823">
				<div id="div-comment-654823" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Dog</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080806-00/?p=21353#comment-654823">
			August 7, 2008 at 5:15 am</a>		</div>

		<p>Firefox does have some slightly odd mouse wheel behaviour&#8230;</p>
<p>A quick test (FFX 3.0.1, XP Pro), shows that if any Firefox window has focus, then you can scroll any Firefox window that is under the mouse (even if that window is hosting the IE rendering engine via IETab).</p>
<p>Most other applications (tested IE, VS and Outlook), only scroll the currently focussed window while the mouse is over it.</p>
<p>I would much prefer the following the mouse behaviour if it applied system-wide.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-654833">
				<div id="div-comment-654833" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">ender</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080806-00/?p=21353#comment-654833">
			August 7, 2008 at 6:20 am</a>		</div>

		<p>The first wheel mouse I had was Genius EasyScroll, which was AFAIK the mouse that introduced the wheel. It&#8217;s drivers would always scroll the window under mouse pointer without bringing that window to foreground or focusing it. All subsequent drivers from them (for their other wheel mice) did the same, until the recently released driver that adds horrible skinned UI and a ton of useless features. I have since changed my mouse to another manufacturer, which also has fairly bloated drivers, so I skipped installation of their drivers completely, and instead configured the side buttons and old wheel behaviour with PowerPro.</p>
<p>BTW, if you (like me) prefer scrolling of window under cursor, and don&#8217;t want to meddle with PowerPro&#8217;s config files to get it working, google for KatMouse. It&#8217;s freeware that basically just changes this.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-654783">
				<div id="div-comment-654783" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">steveg</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080806-00/?p=21353#comment-654783">
			August 7, 2008 at 2:01 am</a>		</div>

		<p>&quot;&#8230;the OS team views the hardware team as &quot;just another hardware vendor.&quot;</p>
<p>Even if MS hardware got special treatment convincing the guys killing themselves writing NT4 to retcon a feature into the previous version of windows probably went something like: &quot;What? A *wheel* on a *mouse*? Are you crazy? Do you have any idea the problems we&#8217;re having with REAL hardware? Now you can leave, or you can make me a coffee. (muttering) Mousewheel, that&#8217;ll never take off. Crazy marketing dept&#8230;&quot;</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-654973">
				<div id="div-comment-654973" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">KenW</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080806-00/?p=21353#comment-654973">
			August 7, 2008 at 1:10 pm</a>		</div>

		<p>@Leo: &quot;On both XP and Vista the drivers by &lt;the popular mouse manufacturer who isn&#8217;t Microsoft&gt; seem to get confused every so often and send the mousewheel messages to two applications at once.&quot;</p>
<p>Thanks for posting this. I&#8217;m glad to see it&#8217;s not just me having this problem; I&#8217;ve been blaming it on a third-party software product I usually have open when it happens. :-)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-655063">
				<div id="div-comment-655063" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href='http://madsoftware.blogspot.com' rel='external nofollow' class='url'>Mike Gibson</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080806-00/?p=21353#comment-655063">
			August 7, 2008 at 3:02 pm</a>		</div>

		<p>[I think he should either outright call you a liar, or rephrase himself to be more clear.]</p>
<p>I don&#8217;t think Raymond is lying, not at all. &nbsp;My badly made point was that yet again, Raymond is attempting to blame a design flaw on history. &nbsp;I&#8217;m sure he&#8217;s not lying. &nbsp;But history can only explain; it shouldn&#8217;t excuse a poor design.</p>
<p>And yes I understand why Microsoft developers seem to think they&#8217;re different than the rest of us who don&#8217;t get to make such excuses: &nbsp;Everybody uses their software. &nbsp;But that makes it all the worse that they seem refuse to fix design problems and continue to blame it on history.</p>
<div class=post>[<i>The <code>WM_MOUSEWHEEL</code> message is incompatible with the <code>MSH_MOUSEWHEEL</code> message &#8211; the OS folks intentionally broke with history when they invented the new message. I guess you don&#8217;t like the decision the OS team made, which is a valid point, but history wasn&#8217;t a factor this time. -Raymond</i>]</div>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-655323">
				<div id="div-comment-655323" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Rune</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080806-00/?p=21353#comment-655323">
			August 8, 2008 at 11:57 am</a>		</div>

		<p>(disclaimer: I realise Raymond isn&#8217;t responsible for this, and I&#8217;m not sure I&#8217;m even criticizing anyone, but I will comment nonetheless)</p>
<p>As others have pointed out, Outlook 2008 indeed scrolls the control underneath the mousecursor. However, there is one final catch: If the mouse leaves the application, the mousewheel instead controls the actively focused control&#8230;</p>
<p>I think the &quot;Windows Design Guide&quot; guys should chime in and make sure we&#8217;re told which behaviour is the correct one.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-655573">
				<div id="div-comment-655573" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Igor Levicki</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20080806-00/?p=21353#comment-655573">
			August 10, 2008 at 6:03 pm</a>		</div>

		<p>Inconsistency is the main Windows UI issue.</p>
<p>Raymond said: &quot;I happen to like it that way, because I like to move my mouse out of the way so it doesn&#8217;t cover what I&#8217;m reading. But apparently I&#8217;m an idiot. No news there.&quot;</p>
<p>I do as well but you can still have mouse over the proper window and not blocking the text.</p>
<p>By the way, what happens when you have two lists side by side? Do we really have to hit the scrollbar or to click into those each time to be able to scroll them? Thats just retarded.</p>
<p>Another small patch that would raise usability is scrolling window content left/right when the mouse is hovering over horizontal scroll bar and wheel is used. Some applications implement that, its a really neat feature and it could have been OS default so developers of various applications don&#8217;t have to reinvent the wheel.</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

