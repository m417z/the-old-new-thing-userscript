<html>
<head>
<title>SHCIDS_CANONICALONLY is the moral equivalent in the shell namespace of the Unicode ordinal comparison</title>
<link rel="stylesheet" href="page.css">
</head><body>
<div class="titlediv"><h2>SHCIDS_CANONICALONLY is the moral equivalent in the shell namespace of the Unicode ordinal comparison</h2></div>
<div class="hdrdiv"><table class="hdrtable" cellspacing="0" cellpadding="0">
<tr><td><b>Date:</b></td><td>August 7, 2009 / year-entry #246</td></tr>
<tr><td><b>Tags:</b></td><td>code</td></tr>
<tr><td><b>Orig Link:</b></td><td>https://blogs.msdn.microsoft.com/oldnewthing/20090807-00/?p=17193</td></tr>

<tr><td><b>Comments:&nbsp;&nbsp;&nbsp;&nbsp;</b></td><td>3</td></tr>
<tr><td valign="top"><b>Summary:</b></td><td valign="top">One of the flags you can pass to the IShellFolder::CompareIDs method is SHCIDS_CANONICALONLY. This flag means that the method should determine whether the two pointers refer to the same underlying object, and if they do not, then it should determine which one should come first by whatever mechanism it wants. It doesn't matter which one...</td></tr>
</table></div>
<hr/>
<table class="contenttable" cellspacing="0" cellpadding="0"><tr><td><div class="contentdiv">
<!-- CONTENT START -->
<p>One of the flags you can pass to <a href="http://windowssdk.msdn.microsoft.com/en-us/library/ms632956.aspx"> the <code>IShellFolder::CompareIDs</code> method</a> is <code>SHCIDS_CANONICALONLY</code>. This flag means that the method should determine whether the two pointers refer to the same underlying object, and if they do not, then it should determine which one should come first <i>by whatever mechanism it wants</i>. It doesn't matter which one is declared as coming before the other one, <a href="http://blogs.msdn.com/oldnewthing/archive/2003/10/23/55408.aspx"> as long as it is consistent</a>.</p>
<p> I like to think of this as the moral equivalent of <a href="http://blogs.msdn.com/michkap/archive/2004/12/29/344136.aspx"> the Unicode ordinal comparison</a>. In both cases, you use the comparison if you have two items that you wish to keep in sorted order, but you don't care what the ordering rules are, as long as they are consistent. In fact, <i>all you care about is consistency</i>, and you're perfectly happy to sacrifice readability for speed. The resulting sorted list won't be displayed to the user; all you're going to use it for is locating the item later. </p>
<p> You can think of this as the moral equivalent of <a href="http://blogs.msdn.com/oldnewthing/archive/2005/06/17/430194.aspx"> the NTFS file name sorting algorithm</a>. In both cases, the items are sorted not so that the user can find them, but so that the program can find them. </p>
<!-- CONTENT END -->
</div></td></tr></table>
<hr/>
<table class="commenttable" cellspacing="0" cellpadding="0"><tr><td><div class="commentdiv"><div class="commentdivhdr">
<!-- COMMENTS START -->
Comments (3)	</div>

	
			<div class="navigation pagination clear-both">
					</div>

		<ol class="comment-list">
					<li class="comment even thread-even depth-1" id="comment-760733">
				<div id="div-comment-760733" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Pierre B.</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090807-00/?p=17193#comment-760733">
			August 7, 2009 at 11:36 am</a>		</div>

		<p>This reminds me of a project I&#8217;ve worked on. They use names for classes, functions and variables that are technically and semantically correct but are undecipherable for mere mortals.</p>
<p>I mean, SHCIDS_PRETTY_MUCH_LIKE_MEMCMP sunds clearer to me :). (YMMV, others may find even better, simpler names.)</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-761043">
				<div id="div-comment-761043" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">MadQ</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090807-00/?p=17193#comment-761043">
			August 10, 2009 at 7:21 am</a>		</div>

		<p>Wiser people than me might have more to say on the subject, but the behavior of SHCIDS_CANONICALONLY is absolutely correct for in-memory strings. However, you might run into trouble in sometimes, because some Unicode characters have multiple binary representations, so the strings should be normalized before they are compared ordinally. The .NET framework is really good at getting this right. Unfortunately, the .NET framework has so many different ways and options for string comparisons that a lot of source code I&#8217;ve seen gets it all wrong. The most common case being comparisons using the current thread&#8217;s cultural rules.</p>

		
				</div>
		</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1" id="comment-761743">
				<div id="div-comment-761743" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn">Joshua Muskovitz</cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="https://blogs.msdn.microsoft.com/oldnewthing/20090807-00/?p=17193#comment-761743">
			August 11, 2009 at 7:03 pm</a>		</div>

		<p>But is the consistency consistent across multiple machines? Will the same list sort in the same order everywhere? Or is it local-system-only consistency?</p>

		
				</div>
		</li><!-- #comment-## -->
		</ol><!-- .comment-list -->

		<div class="navigation pagination">
					</div>

	
			<p class="no-comments">Comments are closed.</p>
<!-- COMMENTS END -->
</div></td></tr></table>

</body>
</html>
<br/><div class="disclaimer">
*DISCLAIMER: I DO NOT OWN THIS CONTENT. If you are the owner and would like it removed, please
<a target="_blank" href="/contact.htm">contact me</a>.
The content herein is an archived reproduction of entries from
Raymond Chen's "Old New Thing" Blog (most recent link is <a target="_blank" href="https://devblogs.microsoft.com/oldnewthing/">here</a>).
It may have slight formatting modifications for consistency and to improve readability.
<br/><br/>
WHY DID I DUPLICATE THIS CONTENT HERE?
Let me first say this site has never had anything to sell and has never shown ads of any kind. I have nothing monetarily to gain by duplicating content here.
Because I had made my own local copy of this content throughout the years, for ease of using tools like grep, I decided to put it online after I discovered
some of the original content previously and publicly available, had disappeared approximately early to mid 2019.
At the same time, I present the content in an easily accessible theme-agnostic way.
<br/><br/>
The information provided by Raymond's blog is, for all practical purposes, more authoritative on Windows Development than Microsoft's
own MSDN documentation and should be considered supplemental reading to that documentation. The wealth of missing details
provided by this blog that Microsoft could not or did not document about Windows over the years is vital enough, many would agree an online "backup" of these details
is a necessary endeavor. Specifics include:<br/>
<ul>
    <li>
        A "redesign" after 2019 erased thousands of user's comments from previous years. As many have stated, the comments are nearly as important as the postings themselves.
        The archived copies of the postings contained here retain the original comments.
    </li>
    <li>
        The blog has changed domains many times and the urls have otherwise been under constant change since 2003.
        Even when proper redirection has been set up for those links, redirection only works for a limited period of time.
        For example, all of the internal blog links that were valid in early 2019, were broken by 2020 without proper redirection.
    </li>
    <li>
        The blog has been under constant re-design and re-theming since its inception.
        It is downright irritating to deal with a bogged-down site experience as the result of the latest visual themes designed for cell-phone browsers.
        As of this writing, it is cumbersome to navigate titles with only 10 entries per page.
        While it is nice that the official site has a search feature, searching using this index (with all titles on a single page) is much quicker (CTRL-F in most browsers).
    </li>
</ul>
</div><br/>
&lt;-- Back to <a href="index.htm">Old New Thing Archive Index</a>

